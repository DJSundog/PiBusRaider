
M:/RobDev/Projects/Vintage/RC2014/PiBusRaider/PiSw/build/BusRaider.elf:     file format elf32-littlearm


Disassembly of section .text:

00008000 <_startup>:
    8000:	e59ff018 	ldr	pc, [pc, #24]	; 8020 <_reset_h>
    8004:	e59ff018 	ldr	pc, [pc, #24]	; 8024 <_undefined_instruction_h>
    8008:	e59ff018 	ldr	pc, [pc, #24]	; 8028 <_software_interrupt_h>
    800c:	e59ff018 	ldr	pc, [pc, #24]	; 802c <_prefetch_abort_h>
    8010:	e59ff018 	ldr	pc, [pc, #24]	; 8030 <_data_abort_h>
    8014:	e59ff018 	ldr	pc, [pc, #24]	; 8034 <_unused_handler_h>
    8018:	e59ff018 	ldr	pc, [pc, #24]	; 8038 <_interrupt_h>
    801c:	e59ff018 	ldr	pc, [pc, #24]	; 803c <_fast_interrupt_h>

00008020 <_reset_h>:
    8020:	00008048 	.word	0x00008048

00008024 <_undefined_instruction_h>:
    8024:	000080d4 	.word	0x000080d4

00008028 <_software_interrupt_h>:
    8028:	000080d4 	.word	0x000080d4

0000802c <_prefetch_abort_h>:
    802c:	000080d4 	.word	0x000080d4

00008030 <_data_abort_h>:
    8030:	000080d4 	.word	0x000080d4

00008034 <_unused_handler_h>:
    8034:	000080d4 	.word	0x000080d4

00008038 <_interrupt_h>:
    8038:	00015adc 	.word	0x00015adc

0000803c <_fast_interrupt_h>:
    803c:	000080c4 	.word	0x000080c4

00008040 <bss_start>:
    8040:	00042934 	.word	0x00042934

00008044 <bss_end>:
    8044:	00080f40 	.word	0x00080f40

00008048 <_reset_>:
    8048:	e3a00902 	mov	r0, #32768	; 0x8000
    804c:	e3a01000 	mov	r1, #0
    8050:	e8b003fc 	ldm	r0!, {r2, r3, r4, r5, r6, r7, r8, r9}
    8054:	e8a103fc 	stmia	r1!, {r2, r3, r4, r5, r6, r7, r8, r9}
    8058:	e8b003fc 	ldm	r0!, {r2, r3, r4, r5, r6, r7, r8, r9}
    805c:	e8a103fc 	stmia	r1!, {r2, r3, r4, r5, r6, r7, r8, r9}
    8060:	e3a000d2 	mov	r0, #210	; 0xd2
    8064:	e121f000 	msr	CPSR_c, r0
    8068:	e3a0d6bf 	mov	sp, #200278016	; 0xbf00000
    806c:	e3a000d1 	mov	r0, #209	; 0xd1
    8070:	e121f000 	msr	CPSR_c, r0
    8074:	e3a0d6be 	mov	sp, #199229440	; 0xbe00000
    8078:	e3a000d3 	mov	r0, #211	; 0xd3
    807c:	e121f000 	msr	CPSR_c, r0
    8080:	e3a0d6bd 	mov	sp, #198180864	; 0xbd00000
    8084:	e3a00000 	mov	r0, #0
    8088:	ee070f17 	mcr	15, 0, r0, cr7, cr7, {0}
    808c:	ee080f17 	mcr	15, 0, r0, cr8, cr7, {0}
    8090:	ee110f10 	mrc	15, 0, r0, cr1, cr0, {0}
    8094:	e3a01003 	mov	r1, #3
    8098:	e1800581 	orr	r0, r0, r1, lsl #11
    809c:	ee010f10 	mcr	15, 0, r0, cr1, cr0, {0}
    80a0:	e51f3068 	ldr	r3, [pc, #-104]	; 8040 <bss_start>
    80a4:	e51f2068 	ldr	r2, [pc, #-104]	; 8044 <bss_end>
    80a8:	e3a00000 	mov	r0, #0

000080ac <bssZeroLoop>:
    80ac:	e1520003 	cmp	r2, r3
    80b0:	0a000002 	beq	80c0 <bssZeroDone>
    80b4:	e5830000 	str	r0, [r3]
    80b8:	e2833001 	add	r3, r3, #1
    80bc:	eafffffa 	b	80ac <bssZeroLoop>

000080c0 <bssZeroDone>:
    80c0:	eb003be1 	bl	1704c <entry_point>

000080c4 <fiq_handler_>:
    80c4:	e92d40ff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, lr}
    80c8:	eb0036be 	bl	15bc8 <c_firq_handler>
    80cc:	e8bd40ff 	pop	{r0, r1, r2, r3, r4, r5, r6, r7, lr}
    80d0:	e25ef004 	subs	pc, lr, #4

000080d4 <hang>:
    80d4:	eafffffe 	b	80d4 <hang>

000080d8 <lowlev_enable_irq>:
    80d8:	e10f0000 	mrs	r0, CPSR
    80dc:	e3c00080 	bic	r0, r0, #128	; 0x80
    80e0:	e121f000 	msr	CPSR_c, r0
    80e4:	e12fff1e 	bx	lr

000080e8 <lowlev_disable_irq>:
    80e8:	f10c0080 	cpsid	i
    80ec:	e1a0f00e 	mov	pc, lr

000080f0 <lowlev_enable_fiq>:
    80f0:	e10f0000 	mrs	r0, CPSR
    80f4:	e3c00040 	bic	r0, r0, #64	; 0x40
    80f8:	e121f000 	msr	CPSR_c, r0
    80fc:	e12fff1e 	bx	lr

00008100 <lowlev_disable_fiq>:
    8100:	f10c0040 	cpsid	f
    8104:	e1a0f00e 	mov	pc, lr

00008108 <lowlev_cycleDelay>:
    8108:	e52d1004 	push	{r1}		; (str r1, [sp, #-4]!)
    810c:	e1a000c0 	asr	r0, r0, #1

00008110 <bloop>:
    8110:	e2500001 	subs	r0, r0, #1
    8114:	1afffffd 	bne	8110 <bloop>
    8118:	e49d1004 	pop	{r1}		; (ldr r1, [sp], #4)
    811c:	e12fff1e 	bx	lr

00008120 <membarrier>:
    8120:	e52d3004 	push	{r3}		; (str r3, [sp, #-4]!)
    8124:	e3a03000 	mov	r3, #0
    8128:	ee073f16 	mcr	15, 0, r3, cr7, cr6, {0}
    812c:	ee073f1a 	mcr	15, 0, r3, cr7, cr10, {0}
    8130:	ee073f1e 	mcr	15, 0, r3, cr7, cr14, {0}
    8134:	ee073f9a 	mcr	15, 0, r3, cr7, cr10, {4}
    8138:	ee073fba 	mcr	15, 0, r3, cr7, cr10, {5}
    813c:	e12fff1e 	bx	lr

00008140 <disable_mmu_and_cache>:
    8140:	ee110f10 	mrc	15, 0, r0, cr1, cr0, {0}
    8144:	e3c00a01 	bic	r0, r0, #4096	; 0x1000
    8148:	e3c00004 	bic	r0, r0, #4
    814c:	ee010f10 	mcr	15, 0, r0, cr1, cr0, {0}
    8150:	e92d040f 	push	{r0, r1, r2, r3, sl}
    8154:	e3a03000 	mov	r3, #0
    8158:	ee073f16 	mcr	15, 0, r3, cr7, cr6, {0}
    815c:	ee073f1a 	mcr	15, 0, r3, cr7, cr10, {0}
    8160:	ee073f1e 	mcr	15, 0, r3, cr7, cr14, {0}
    8164:	ee073f9a 	mcr	15, 0, r3, cr7, cr10, {4}
    8168:	ee073fba 	mcr	15, 0, r3, cr7, cr10, {5}
    816c:	ee113f10 	mrc	15, 0, r3, cr1, cr0, {0}
    8170:	e3a00005 	mov	r0, #5
    8174:	e1c33000 	bic	r3, r3, r0
    8178:	e3a00003 	mov	r0, #3
    817c:	e1c33580 	bic	r3, r3, r0, lsl #11
    8180:	ee013f10 	mcr	15, 0, r3, cr1, cr0, {0}
    8184:	e8bd040f 	pop	{r0, r1, r2, r3, sl}
    8188:	e12fff1e 	bx	lr

0000818c <blinkCE0>:
    818c:	e92d040f 	push	{r0, r1, r2, r3, sl}
    8190:	e59f00ac 	ldr	r0, [pc, #172]	; 8244 <lowlev_store_abs8+0x8>
    8194:	e3a01401 	mov	r1, #16777216	; 0x1000000
    8198:	e5801000 	str	r1, [r0]
    819c:	e3a01c01 	mov	r1, #256	; 0x100
    81a0:	e3a02c01 	mov	r2, #256	; 0x100
    81a4:	e580101c 	str	r1, [r0, #28]
    81a8:	e3a0a000 	mov	sl, #0

000081ac <delay>:
    81ac:	e28aa001 	add	sl, sl, #1
    81b0:	e15a0002 	cmp	sl, r2
    81b4:	1afffffc 	bne	81ac <delay>
    81b8:	e5801028 	str	r1, [r0, #40]	; 0x28
    81bc:	e3a0a000 	mov	sl, #0

000081c0 <delay2>:
    81c0:	e28aa001 	add	sl, sl, #1
    81c4:	e15a0002 	cmp	sl, r2
    81c8:	1afffffc 	bne	81c0 <delay2>
    81cc:	e8bd040f 	pop	{r0, r1, r2, r3, sl}
    81d0:	e12fff1e 	bx	lr

000081d4 <blinkLEDForever>:
    81d4:	e59f0068 	ldr	r0, [pc, #104]	; 8244 <lowlev_store_abs8+0x8>
    81d8:	e3a0260f 	mov	r2, #15728640	; 0xf00000
    81dc:	e3a01602 	mov	r1, #2097152	; 0x200000
    81e0:	e5801010 	str	r1, [r0, #16]
    81e4:	e3a01902 	mov	r1, #32768	; 0x8000
    81e8:	e5801020 	str	r1, [r0, #32]

000081ec <loopBlink>:
    81ec:	e5801020 	str	r1, [r0, #32]
    81f0:	e3a0a000 	mov	sl, #0

000081f4 <delay1a>:
    81f4:	e28aa001 	add	sl, sl, #1
    81f8:	e15a0002 	cmp	sl, r2
    81fc:	1afffffc 	bne	81f4 <delay1a>
    8200:	e580102c 	str	r1, [r0, #44]	; 0x2c
    8204:	e3a0a000 	mov	sl, #0

00008208 <delay2a>:
    8208:	e28aa001 	add	sl, sl, #1
    820c:	e15a0002 	cmp	sl, r2
    8210:	1afffffc 	bne	8208 <delay2a>
    8214:	eafffff4 	b	81ec <loopBlink>

00008218 <lowlev_blockCopyExecRelocatable>:
    8218:	e52d3004 	push	{r3}		; (str r3, [sp, #-4]!)

0000821c <blockCopyExecRelocatableLoop>:
    821c:	e4d13001 	ldrb	r3, [r1], #1
    8220:	e4c03001 	strb	r3, [r0], #1
    8224:	e2522001 	subs	r2, r2, #1
    8228:	aafffffb 	bge	821c <blockCopyExecRelocatableLoop>
    822c:	e49d0004 	pop	{r0}		; (ldr r0, [sp], #4)
    8230:	e12fff10 	bx	r0

00008234 <lowlev_blockCopyExecRelocatableLen>:
    8234:	0000001c 	.word	0x0000001c

00008238 <lowlev_goto>:
    8238:	e12fff10 	bx	r0

0000823c <lowlev_store_abs8>:
    823c:	e5c01000 	strb	r1, [r0]
    8240:	e12fff1e 	bx	lr
    8244:	20200000 	.word	0x20200000

00008248 <dma_init>:
    8248:	e3a02000 	mov	r2, #0
    824c:	e59f3004 	ldr	r3, [pc, #4]	; 8258 <dma_init+0x10>
    8250:	e5832000 	str	r2, [r3]
    8254:	e12fff1e 	bx	lr
    8258:	00080c00 	.word	0x00080c00

0000825c <dma_enqueue_operation>:
    825c:	e92d40f0 	push	{r4, r5, r6, r7, lr}
    8260:	e59f5058 	ldr	r5, [pc, #88]	; 82c0 <dma_enqueue_operation+0x64>
    8264:	e595e000 	ldr	lr, [r5]
    8268:	e35e0010 	cmp	lr, #16
    826c:	0a000011 	beq	82b8 <dma_enqueue_operation+0x5c>
    8270:	e3a04000 	mov	r4, #0
    8274:	e59f6048 	ldr	r6, [pc, #72]	; 82c4 <dma_enqueue_operation+0x68>
    8278:	e15e0004 	cmp	lr, r4
    827c:	e086c28e 	add	ip, r6, lr, lsl #5
    8280:	e3ccc20f 	bic	ip, ip, #-268435456	; 0xf0000000
    8284:	e38cc101 	orr	ip, ip, #1073741824	; 0x40000000
    8288:	e59d7014 	ldr	r7, [sp, #20]
    828c:	e1cc00f4 	strd	r0, [ip, #4]
    8290:	1086628e 	addne	r6, r6, lr, lsl #5
    8294:	e28e0001 	add	r0, lr, #1
    8298:	e58c7000 	str	r7, [ip]
    829c:	e1cc20fc 	strd	r2, [ip, #12]
    82a0:	e58c4014 	str	r4, [ip, #20]
    82a4:	e58c4018 	str	r4, [ip, #24]
    82a8:	e58c401c 	str	r4, [ip, #28]
    82ac:	e5850000 	str	r0, [r5]
    82b0:	1506c00c 	strne	ip, [r6, #-12]
    82b4:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
    82b8:	e3a00000 	mov	r0, #0
    82bc:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
    82c0:	00080c00 	.word	0x00080c00
    82c4:	00080d00 	.word	0x00080d00

000082c8 <dma_execute_queue>:
    82c8:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    82cc:	e3a0c007 	mov	ip, #7
    82d0:	e3a0e001 	mov	lr, #1
    82d4:	e3a00000 	mov	r0, #0
    82d8:	e59f3020 	ldr	r3, [pc, #32]	; 8300 <dma_execute_queue+0x38>
    82dc:	e59f2020 	ldr	r2, [pc, #32]	; 8304 <dma_execute_queue+0x3c>
    82e0:	e3c3320f 	bic	r3, r3, #-268435456	; 0xf0000000
    82e4:	e59f101c 	ldr	r1, [pc, #28]	; 8308 <dma_execute_queue+0x40>
    82e8:	e3833101 	orr	r3, r3, #1073741824	; 0x40000000
    82ec:	e582eff0 	str	lr, [r2, #4080]	; 0xff0
    82f0:	e5823004 	str	r3, [r2, #4]
    82f4:	e582c000 	str	ip, [r2]
    82f8:	e5810000 	str	r0, [r1]
    82fc:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
    8300:	00080d00 	.word	0x00080d00
    8304:	20007000 	.word	0x20007000
    8308:	00080c00 	.word	0x00080c00

0000830c <dma_running>:
    830c:	e59f3008 	ldr	r3, [pc, #8]	; 831c <dma_running+0x10>
    8310:	e5930000 	ldr	r0, [r3]
    8314:	e2000001 	and	r0, r0, #1
    8318:	e12fff1e 	bx	lr
    831c:	20007000 	.word	0x20007000

00008320 <dma_memcpy_32>:
    8320:	e92d4070 	push	{r4, r5, r6, lr}
    8324:	e59f5078 	ldr	r5, [pc, #120]	; 83a4 <dma_memcpy_32+0x84>
    8328:	e595e000 	ldr	lr, [r5]
    832c:	e35e0010 	cmp	lr, #16
    8330:	059fc070 	ldreq	ip, [pc, #112]	; 83a8 <dma_memcpy_32+0x88>
    8334:	0a00000f 	beq	8378 <dma_memcpy_32+0x58>
    8338:	e3a04000 	mov	r4, #0
    833c:	e3a06e11 	mov	r6, #272	; 0x110
    8340:	e59fc060 	ldr	ip, [pc, #96]	; 83a8 <dma_memcpy_32+0x88>
    8344:	e15e0004 	cmp	lr, r4
    8348:	e08c328e 	add	r3, ip, lr, lsl #5
    834c:	e3c3320f 	bic	r3, r3, #-268435456	; 0xf0000000
    8350:	e3833101 	orr	r3, r3, #1073741824	; 0x40000000
    8354:	108ce28e 	addne	lr, ip, lr, lsl #5
    8358:	e1c300f4 	strd	r0, [r3, #4]
    835c:	e583200c 	str	r2, [r3, #12]
    8360:	e5836000 	str	r6, [r3]
    8364:	e5834010 	str	r4, [r3, #16]
    8368:	e5834014 	str	r4, [r3, #20]
    836c:	e5834018 	str	r4, [r3, #24]
    8370:	e583401c 	str	r4, [r3, #28]
    8374:	150e300c 	strne	r3, [lr, #-12]
    8378:	e3a00001 	mov	r0, #1
    837c:	e3a01007 	mov	r1, #7
    8380:	e3a02000 	mov	r2, #0
    8384:	e59f3020 	ldr	r3, [pc, #32]	; 83ac <dma_memcpy_32+0x8c>
    8388:	e3ccc20f 	bic	ip, ip, #-268435456	; 0xf0000000
    838c:	e38cc101 	orr	ip, ip, #1073741824	; 0x40000000
    8390:	e5830ff0 	str	r0, [r3, #4080]	; 0xff0
    8394:	e583c004 	str	ip, [r3, #4]
    8398:	e5831000 	str	r1, [r3]
    839c:	e5852000 	str	r2, [r5]
    83a0:	e8bd8070 	pop	{r4, r5, r6, pc}
    83a4:	00080c00 	.word	0x00080c00
    83a8:	00080d00 	.word	0x00080d00
    83ac:	20007000 	.word	0x20007000

000083b0 <LogSetOutFn>:
    83b0:	e59f3004 	ldr	r3, [pc, #4]	; 83bc <LogSetOutFn+0xc>
    83b4:	e5830000 	str	r0, [r3]
    83b8:	e12fff1e 	bx	lr
    83bc:	00042934 	.word	0x00042934

000083c0 <ee_strnlen>:
    83c0:	e5d03000 	ldrb	r3, [r0]
    83c4:	e1a02000 	mov	r2, r0
    83c8:	e3530000 	cmp	r3, #0
    83cc:	0a00000a 	beq	83fc <ee_strnlen+0x3c>
    83d0:	e3510000 	cmp	r1, #0
    83d4:	0a00000a 	beq	8404 <ee_strnlen+0x44>
    83d8:	e0801001 	add	r1, r0, r1
    83dc:	ea000001 	b	83e8 <ee_strnlen+0x28>
    83e0:	e1500001 	cmp	r0, r1
    83e4:	0a000002 	beq	83f4 <ee_strnlen+0x34>
    83e8:	e5f03001 	ldrb	r3, [r0, #1]!
    83ec:	e3530000 	cmp	r3, #0
    83f0:	1afffffa 	bne	83e0 <ee_strnlen+0x20>
    83f4:	e0400002 	sub	r0, r0, r2
    83f8:	e12fff1e 	bx	lr
    83fc:	e1a00003 	mov	r0, r3
    8400:	e12fff1e 	bx	lr
    8404:	e1a00001 	mov	r0, r1
    8408:	e12fff1e 	bx	lr

0000840c <ee_skip_atoi>:
    840c:	e5903000 	ldr	r3, [r0]
    8410:	e5d32000 	ldrb	r2, [r3]
    8414:	e2422030 	sub	r2, r2, #48	; 0x30
    8418:	e3520009 	cmp	r2, #9
    841c:	e3a02000 	mov	r2, #0
    8420:	8a000009 	bhi	844c <ee_skip_atoi+0x40>
    8424:	e2833001 	add	r3, r3, #1
    8428:	e5803000 	str	r3, [r0]
    842c:	e5d3c000 	ldrb	ip, [r3]
    8430:	e5531001 	ldrb	r1, [r3, #-1]
    8434:	e0822102 	add	r2, r2, r2, lsl #2
    8438:	e24cc030 	sub	ip, ip, #48	; 0x30
    843c:	e0812082 	add	r2, r1, r2, lsl #1
    8440:	e35c0009 	cmp	ip, #9
    8444:	e2422030 	sub	r2, r2, #48	; 0x30
    8448:	9afffff5 	bls	8424 <ee_skip_atoi+0x18>
    844c:	e1a00002 	mov	r0, r2
    8450:	e12fff1e 	bx	lr

00008454 <ee_number>:
    8454:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    8458:	e24dd05c 	sub	sp, sp, #92	; 0x5c
    845c:	e59d6084 	ldr	r6, [sp, #132]	; 0x84
    8460:	e59fb2b0 	ldr	fp, [pc, #688]	; 8718 <ee_number+0x2c4>
    8464:	e3160040 	tst	r6, #64	; 0x40
    8468:	e24bc02c 	sub	ip, fp, #44	; 0x2c
    846c:	01a0b00c 	moveq	fp, ip
    8470:	e58d3000 	str	r3, [sp]
    8474:	e3160010 	tst	r6, #16
    8478:	e2423002 	sub	r3, r2, #2
    847c:	13c66001 	bicne	r6, r6, #1
    8480:	e3530022 	cmp	r3, #34	; 0x22
    8484:	e1a05000 	mov	r5, r0
    8488:	e1a0a002 	mov	sl, r2
    848c:	e1a00001 	mov	r0, r1
    8490:	8a00009e 	bhi	8710 <ee_number+0x2bc>
    8494:	e3160001 	tst	r6, #1
    8498:	03a03020 	moveq	r3, #32
    849c:	13a03030 	movne	r3, #48	; 0x30
    84a0:	e58d300c 	str	r3, [sp, #12]
    84a4:	e2163002 	ands	r3, r6, #2
    84a8:	0a00000b 	beq	84dc <ee_number+0x88>
    84ac:	e3510000 	cmp	r1, #0
    84b0:	ba000089 	blt	86dc <ee_number+0x288>
    84b4:	e3160004 	tst	r6, #4
    84b8:	1a00007a 	bne	86a8 <ee_number+0x254>
    84bc:	e2163008 	ands	r3, r6, #8
    84c0:	0a000005 	beq	84dc <ee_number+0x88>
    84c4:	e59d3000 	ldr	r3, [sp]
    84c8:	e2433001 	sub	r3, r3, #1
    84cc:	e58d3000 	str	r3, [sp]
    84d0:	e3a03020 	mov	r3, #32
    84d4:	e58d3008 	str	r3, [sp, #8]
    84d8:	ea000000 	b	84e0 <ee_number+0x8c>
    84dc:	e58d3008 	str	r3, [sp, #8]
    84e0:	e2163020 	ands	r3, r6, #32
    84e4:	e58d3004 	str	r3, [sp, #4]
    84e8:	0a000005 	beq	8504 <ee_number+0xb0>
    84ec:	e35a0010 	cmp	sl, #16
    84f0:	0a000080 	beq	86f8 <ee_number+0x2a4>
    84f4:	e35a0008 	cmp	sl, #8
    84f8:	059d3000 	ldreq	r3, [sp]
    84fc:	02433001 	subeq	r3, r3, #1
    8500:	058d3000 	streq	r3, [sp]
    8504:	e3500000 	cmp	r0, #0
    8508:	0a000060 	beq	8690 <ee_number+0x23c>
    850c:	e28d7013 	add	r7, sp, #19
    8510:	e3a04000 	mov	r4, #0
    8514:	ea000000 	b	851c <ee_number+0xc8>
    8518:	e1a04008 	mov	r4, r8
    851c:	e1a0100a 	mov	r1, sl
    8520:	eb0095cc 	bl	2dc58 <__aeabi_uidivmod>
    8524:	e7db3001 	ldrb	r3, [fp, r1]
    8528:	e2848001 	add	r8, r4, #1
    852c:	e3500000 	cmp	r0, #0
    8530:	e5e73001 	strb	r3, [r7, #1]!
    8534:	e1a09008 	mov	r9, r8
    8538:	1afffff6 	bne	8518 <ee_number+0xc4>
    853c:	e59d3080 	ldr	r3, [sp, #128]	; 0x80
    8540:	e1590003 	cmp	r9, r3
    8544:	b1a0b003 	movlt	fp, r3
    8548:	a1a0b009 	movge	fp, r9
    854c:	e59d3000 	ldr	r3, [sp]
    8550:	e3160011 	tst	r6, #17
    8554:	e043700b 	sub	r7, r3, fp
    8558:	e2473001 	sub	r3, r7, #1
    855c:	1a00000b 	bne	8590 <ee_number+0x13c>
    8560:	e3570000 	cmp	r7, #0
    8564:	d2472002 	suble	r2, r7, #2
    8568:	d1a07003 	movle	r7, r3
    856c:	d1a03002 	movle	r3, r2
    8570:	da000006 	ble	8590 <ee_number+0x13c>
    8574:	e1a00005 	mov	r0, r5
    8578:	e1a02007 	mov	r2, r7
    857c:	e3a01020 	mov	r1, #32
    8580:	e0855007 	add	r5, r5, r7
    8584:	eb008ef4 	bl	2c15c <memset>
    8588:	e3e07000 	mvn	r7, #0
    858c:	e3e03001 	mvn	r3, #1
    8590:	e59d2008 	ldr	r2, [sp, #8]
    8594:	e3520000 	cmp	r2, #0
    8598:	15c52000 	strbne	r2, [r5]
    859c:	e59d2004 	ldr	r2, [sp, #4]
    85a0:	12855001 	addne	r5, r5, #1
    85a4:	e3520000 	cmp	r2, #0
    85a8:	0a000006 	beq	85c8 <ee_number+0x174>
    85ac:	e35a0008 	cmp	sl, #8
    85b0:	03a02030 	moveq	r2, #48	; 0x30
    85b4:	05c52000 	strbeq	r2, [r5]
    85b8:	02855001 	addeq	r5, r5, #1
    85bc:	0a000001 	beq	85c8 <ee_number+0x174>
    85c0:	e35a0010 	cmp	sl, #16
    85c4:	0a00003d 	beq	86c0 <ee_number+0x26c>
    85c8:	e3160010 	tst	r6, #16
    85cc:	1a00000f 	bne	8610 <ee_number+0x1bc>
    85d0:	e3570000 	cmp	r7, #0
    85d4:	d1a07003 	movle	r7, r3
    85d8:	d2433001 	suble	r3, r3, #1
    85dc:	da00000b 	ble	8610 <ee_number+0x1bc>
    85e0:	e1c37fc3 	bic	r7, r3, r3, asr #31
    85e4:	e2876001 	add	r6, r7, #1
    85e8:	e1a00005 	mov	r0, r5
    85ec:	e59d100c 	ldr	r1, [sp, #12]
    85f0:	e1a02006 	mov	r2, r6
    85f4:	e58d3000 	str	r3, [sp]
    85f8:	eb008ed7 	bl	2c15c <memset>
    85fc:	e59d3000 	ldr	r3, [sp]
    8600:	e0855006 	add	r5, r5, r6
    8604:	e2433001 	sub	r3, r3, #1
    8608:	e0437007 	sub	r7, r3, r7
    860c:	e2473001 	sub	r3, r7, #1
    8610:	e159000b 	cmp	r9, fp
    8614:	aa000007 	bge	8638 <ee_number+0x1e4>
    8618:	e04b9009 	sub	r9, fp, r9
    861c:	e1a00005 	mov	r0, r5
    8620:	e1a02009 	mov	r2, r9
    8624:	e3a01030 	mov	r1, #48	; 0x30
    8628:	e58d3000 	str	r3, [sp]
    862c:	eb008eca 	bl	2c15c <memset>
    8630:	e59d3000 	ldr	r3, [sp]
    8634:	e0855009 	add	r5, r5, r9
    8638:	e28dc014 	add	ip, sp, #20
    863c:	e08c4004 	add	r4, ip, r4
    8640:	e2452001 	sub	r2, r5, #1
    8644:	e26cc001 	rsb	ip, ip, #1
    8648:	e4541001 	ldrb	r1, [r4], #-1
    864c:	e08c0004 	add	r0, ip, r4
    8650:	e3500000 	cmp	r0, #0
    8654:	e5e21001 	strb	r1, [r2, #1]!
    8658:	cafffffa 	bgt	8648 <ee_number+0x1f4>
    865c:	e3570000 	cmp	r7, #0
    8660:	e0855008 	add	r5, r5, r8
    8664:	da000006 	ble	8684 <ee_number+0x230>
    8668:	e1c37fc3 	bic	r7, r3, r3, asr #31
    866c:	e2877001 	add	r7, r7, #1
    8670:	e1a00005 	mov	r0, r5
    8674:	e1a02007 	mov	r2, r7
    8678:	e3a01020 	mov	r1, #32
    867c:	eb008eb6 	bl	2c15c <memset>
    8680:	e0855007 	add	r5, r5, r7
    8684:	e1a00005 	mov	r0, r5
    8688:	e28dd05c 	add	sp, sp, #92	; 0x5c
    868c:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    8690:	e3a03030 	mov	r3, #48	; 0x30
    8694:	e3a09001 	mov	r9, #1
    8698:	e1a04000 	mov	r4, r0
    869c:	e5cd3014 	strb	r3, [sp, #20]
    86a0:	e1a08009 	mov	r8, r9
    86a4:	eaffffa4 	b	853c <ee_number+0xe8>
    86a8:	e59d3000 	ldr	r3, [sp]
    86ac:	e2433001 	sub	r3, r3, #1
    86b0:	e58d3000 	str	r3, [sp]
    86b4:	e3a0302b 	mov	r3, #43	; 0x2b
    86b8:	e58d3008 	str	r3, [sp, #8]
    86bc:	eaffff87 	b	84e0 <ee_number+0x8c>
    86c0:	e1a02005 	mov	r2, r5
    86c4:	e3a00030 	mov	r0, #48	; 0x30
    86c8:	e3a01078 	mov	r1, #120	; 0x78
    86cc:	e4c20002 	strb	r0, [r2], #2
    86d0:	e5c51001 	strb	r1, [r5, #1]
    86d4:	e1a05002 	mov	r5, r2
    86d8:	eaffffba 	b	85c8 <ee_number+0x174>
    86dc:	e59d3000 	ldr	r3, [sp]
    86e0:	e2610000 	rsb	r0, r1, #0
    86e4:	e2433001 	sub	r3, r3, #1
    86e8:	e58d3000 	str	r3, [sp]
    86ec:	e3a0302d 	mov	r3, #45	; 0x2d
    86f0:	e58d3008 	str	r3, [sp, #8]
    86f4:	eaffff79 	b	84e0 <ee_number+0x8c>
    86f8:	e59d3000 	ldr	r3, [sp]
    86fc:	e3500000 	cmp	r0, #0
    8700:	e2433002 	sub	r3, r3, #2
    8704:	e58d3000 	str	r3, [sp]
    8708:	1affff7f 	bne	850c <ee_number+0xb8>
    870c:	eaffffdf 	b	8690 <ee_number+0x23c>
    8710:	e3a05000 	mov	r5, #0
    8714:	eaffffda 	b	8684 <ee_number+0x230>
    8718:	0002e09c 	.word	0x0002e09c

0000871c <eaddr>:
    871c:	e59fc32c 	ldr	ip, [pc, #812]	; 8a50 <eaddr+0x334>
    8720:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
    8724:	e3130040 	tst	r3, #64	; 0x40
    8728:	e24ce02c 	sub	lr, ip, #44	; 0x2c
    872c:	01a0c00e 	moveq	ip, lr
    8730:	e3a0e03a 	mov	lr, #58	; 0x3a
    8734:	e1a05002 	mov	r5, r2
    8738:	e5d17000 	ldrb	r7, [r1]
    873c:	e5d16001 	ldrb	r6, [r1, #1]
    8740:	e5d14002 	ldrb	r4, [r1, #2]
    8744:	e5d19003 	ldrb	r9, [r1, #3]
    8748:	e5d18004 	ldrb	r8, [r1, #4]
    874c:	e5d12005 	ldrb	r2, [r1, #5]
    8750:	e7dc1227 	ldrb	r1, [ip, r7, lsr #4]
    8754:	e207700f 	and	r7, r7, #15
    8758:	e24dd01c 	sub	sp, sp, #28
    875c:	e3130010 	tst	r3, #16
    8760:	e7dc3007 	ldrb	r3, [ip, r7]
    8764:	e5cd1000 	strb	r1, [sp]
    8768:	e7dc1226 	ldrb	r1, [ip, r6, lsr #4]
    876c:	e206600f 	and	r6, r6, #15
    8770:	e5cd3001 	strb	r3, [sp, #1]
    8774:	e7dc3006 	ldrb	r3, [ip, r6]
    8778:	e5cd1003 	strb	r1, [sp, #3]
    877c:	e5cd3004 	strb	r3, [sp, #4]
    8780:	e7dc3224 	ldrb	r3, [ip, r4, lsr #4]
    8784:	e204400f 	and	r4, r4, #15
    8788:	e7dc1004 	ldrb	r1, [ip, r4]
    878c:	e5cd3006 	strb	r3, [sp, #6]
    8790:	e209300f 	and	r3, r9, #15
    8794:	e7dc3003 	ldrb	r3, [ip, r3]
    8798:	e5cd1007 	strb	r1, [sp, #7]
    879c:	e208100f 	and	r1, r8, #15
    87a0:	e7dc4229 	ldrb	r4, [ip, r9, lsr #4]
    87a4:	e5cde002 	strb	lr, [sp, #2]
    87a8:	e5cde005 	strb	lr, [sp, #5]
    87ac:	e5cde008 	strb	lr, [sp, #8]
    87b0:	e5cde00b 	strb	lr, [sp, #11]
    87b4:	e5cde00e 	strb	lr, [sp, #14]
    87b8:	e7dc1001 	ldrb	r1, [ip, r1]
    87bc:	e7dce228 	ldrb	lr, [ip, r8, lsr #4]
    87c0:	e5cd300a 	strb	r3, [sp, #10]
    87c4:	e7dc3222 	ldrb	r3, [ip, r2, lsr #4]
    87c8:	e202200f 	and	r2, r2, #15
    87cc:	e5cd4009 	strb	r4, [sp, #9]
    87d0:	e5cde00c 	strb	lr, [sp, #12]
    87d4:	e5cd100d 	strb	r1, [sp, #13]
    87d8:	e5cd300f 	strb	r3, [sp, #15]
    87dc:	e7dc3002 	ldrb	r3, [ip, r2]
    87e0:	e1a04000 	mov	r4, r0
    87e4:	e245c001 	sub	ip, r5, #1
    87e8:	e5cd3010 	strb	r3, [sp, #16]
    87ec:	1a00000b 	bne	8820 <eaddr+0x104>
    87f0:	e3550011 	cmp	r5, #17
    87f4:	d2453002 	suble	r3, r5, #2
    87f8:	d1a0500c 	movle	r5, ip
    87fc:	d1a0c003 	movle	ip, r3
    8800:	da000006 	ble	8820 <eaddr+0x104>
    8804:	e2456011 	sub	r6, r5, #17
    8808:	e1a02006 	mov	r2, r6
    880c:	e3a01020 	mov	r1, #32
    8810:	eb008e51 	bl	2c15c <memset>
    8814:	e3a05010 	mov	r5, #16
    8818:	e3a0c00f 	mov	ip, #15
    881c:	e0844006 	add	r4, r4, r6
    8820:	e1a0e00d 	mov	lr, sp
    8824:	e8be000f 	ldm	lr!, {r0, r1, r2, r3}
    8828:	e5dee000 	ldrb	lr, [lr]
    882c:	e3550011 	cmp	r5, #17
    8830:	e5840000 	str	r0, [r4]
    8834:	e5c4e010 	strb	lr, [r4, #16]
    8838:	e5841004 	str	r1, [r4, #4]
    883c:	e5842008 	str	r2, [r4, #8]
    8840:	e584300c 	str	r3, [r4, #12]
    8844:	e2840011 	add	r0, r4, #17
    8848:	da000076 	ble	8a28 <eaddr+0x30c>
    884c:	e2603000 	rsb	r3, r0, #0
    8850:	e2033007 	and	r3, r3, #7
    8854:	e35c0010 	cmp	ip, #16
    8858:	e2832007 	add	r2, r3, #7
    885c:	c24c1011 	subgt	r1, ip, #17
    8860:	d3a01000 	movle	r1, #0
    8864:	c24c7010 	subgt	r7, ip, #16
    8868:	d3a07001 	movle	r7, #1
    886c:	e352000c 	cmp	r2, #12
    8870:	33a0200c 	movcc	r2, #12
    8874:	e1510002 	cmp	r1, r2
    8878:	3a00006f 	bcc	8a3c <eaddr+0x320>
    887c:	e3530000 	cmp	r3, #0
    8880:	0a00006a 	beq	8a30 <eaddr+0x314>
    8884:	e3a02020 	mov	r2, #32
    8888:	e3530001 	cmp	r3, #1
    888c:	e5c42011 	strb	r2, [r4, #17]
    8890:	e284e012 	add	lr, r4, #18
    8894:	e24c6001 	sub	r6, ip, #1
    8898:	0a00001a 	beq	8908 <eaddr+0x1ec>
    889c:	e3530002 	cmp	r3, #2
    88a0:	e5c42012 	strb	r2, [r4, #18]
    88a4:	e284e013 	add	lr, r4, #19
    88a8:	e24c6002 	sub	r6, ip, #2
    88ac:	0a000015 	beq	8908 <eaddr+0x1ec>
    88b0:	e3530003 	cmp	r3, #3
    88b4:	e5c42013 	strb	r2, [r4, #19]
    88b8:	e284e014 	add	lr, r4, #20
    88bc:	e24c6003 	sub	r6, ip, #3
    88c0:	0a000010 	beq	8908 <eaddr+0x1ec>
    88c4:	e3530004 	cmp	r3, #4
    88c8:	e5c42014 	strb	r2, [r4, #20]
    88cc:	e284e015 	add	lr, r4, #21
    88d0:	e24c6004 	sub	r6, ip, #4
    88d4:	0a00000b 	beq	8908 <eaddr+0x1ec>
    88d8:	e3530005 	cmp	r3, #5
    88dc:	e5c42015 	strb	r2, [r4, #21]
    88e0:	e284e016 	add	lr, r4, #22
    88e4:	e24c6005 	sub	r6, ip, #5
    88e8:	0a000006 	beq	8908 <eaddr+0x1ec>
    88ec:	e3530007 	cmp	r3, #7
    88f0:	e5c42016 	strb	r2, [r4, #22]
    88f4:	e284e017 	add	lr, r4, #23
    88f8:	e24c6006 	sub	r6, ip, #6
    88fc:	05c42017 	strbeq	r2, [r4, #23]
    8900:	0284e018 	addeq	lr, r4, #24
    8904:	024c6007 	subeq	r6, ip, #7
    8908:	e3a01000 	mov	r1, #0
    890c:	e28f5f4d 	add	r5, pc, #308	; 0x134
    8910:	e1c540d0 	ldrd	r4, [r5]
    8914:	e0477003 	sub	r7, r7, r3
    8918:	e1a0c1a7 	lsr	ip, r7, #3
    891c:	e0803003 	add	r3, r0, r3
    8920:	e28e2001 	add	r2, lr, #1
    8924:	e2811001 	add	r1, r1, #1
    8928:	e151000c 	cmp	r1, ip
    892c:	e2820007 	add	r0, r2, #7
    8930:	e0c340f8 	strd	r4, [r3], #8
    8934:	e2822008 	add	r2, r2, #8
    8938:	3afffff9 	bcc	8924 <eaddr+0x208>
    893c:	e3c7c007 	bic	ip, r7, #7
    8940:	e157000c 	cmp	r7, ip
    8944:	e08e300c 	add	r3, lr, ip
    8948:	e046c00c 	sub	ip, r6, ip
    894c:	0a000035 	beq	8a28 <eaddr+0x30c>
    8950:	e3a02020 	mov	r2, #32
    8954:	e35c0011 	cmp	ip, #17
    8958:	e5c32000 	strb	r2, [r3]
    895c:	e2830001 	add	r0, r3, #1
    8960:	da000030 	ble	8a28 <eaddr+0x30c>
    8964:	e35c0012 	cmp	ip, #18
    8968:	e5c32001 	strb	r2, [r3, #1]
    896c:	e2830002 	add	r0, r3, #2
    8970:	da00002c 	ble	8a28 <eaddr+0x30c>
    8974:	e35c0013 	cmp	ip, #19
    8978:	e5c32002 	strb	r2, [r3, #2]
    897c:	e2830003 	add	r0, r3, #3
    8980:	da000028 	ble	8a28 <eaddr+0x30c>
    8984:	e35c0014 	cmp	ip, #20
    8988:	e5c32003 	strb	r2, [r3, #3]
    898c:	e2830004 	add	r0, r3, #4
    8990:	da000024 	ble	8a28 <eaddr+0x30c>
    8994:	e35c0015 	cmp	ip, #21
    8998:	e5c32004 	strb	r2, [r3, #4]
    899c:	e2830005 	add	r0, r3, #5
    89a0:	da000020 	ble	8a28 <eaddr+0x30c>
    89a4:	e35c0016 	cmp	ip, #22
    89a8:	e5c32005 	strb	r2, [r3, #5]
    89ac:	e2830006 	add	r0, r3, #6
    89b0:	da00001c 	ble	8a28 <eaddr+0x30c>
    89b4:	e35c0017 	cmp	ip, #23
    89b8:	e5c32006 	strb	r2, [r3, #6]
    89bc:	e2830007 	add	r0, r3, #7
    89c0:	da000018 	ble	8a28 <eaddr+0x30c>
    89c4:	e35c0018 	cmp	ip, #24
    89c8:	e5c32007 	strb	r2, [r3, #7]
    89cc:	e2830008 	add	r0, r3, #8
    89d0:	da000014 	ble	8a28 <eaddr+0x30c>
    89d4:	e35c0019 	cmp	ip, #25
    89d8:	e5c32008 	strb	r2, [r3, #8]
    89dc:	e2830009 	add	r0, r3, #9
    89e0:	da000010 	ble	8a28 <eaddr+0x30c>
    89e4:	e35c001a 	cmp	ip, #26
    89e8:	e5c32009 	strb	r2, [r3, #9]
    89ec:	e283000a 	add	r0, r3, #10
    89f0:	da00000c 	ble	8a28 <eaddr+0x30c>
    89f4:	e35c001b 	cmp	ip, #27
    89f8:	e5c3200a 	strb	r2, [r3, #10]
    89fc:	e283000b 	add	r0, r3, #11
    8a00:	da000008 	ble	8a28 <eaddr+0x30c>
    8a04:	e35c001c 	cmp	ip, #28
    8a08:	e5c3200b 	strb	r2, [r3, #11]
    8a0c:	e283000c 	add	r0, r3, #12
    8a10:	da000004 	ble	8a28 <eaddr+0x30c>
    8a14:	e35c001d 	cmp	ip, #29
    8a18:	e283000d 	add	r0, r3, #13
    8a1c:	e5c3200c 	strb	r2, [r3, #12]
    8a20:	c5c3200d 	strbgt	r2, [r3, #13]
    8a24:	c283000e 	addgt	r0, r3, #14
    8a28:	e28dd01c 	add	sp, sp, #28
    8a2c:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
    8a30:	e1a0600c 	mov	r6, ip
    8a34:	e1a0e000 	mov	lr, r0
    8a38:	eaffffb2 	b	8908 <eaddr+0x1ec>
    8a3c:	e1a03000 	mov	r3, r0
    8a40:	eaffffc2 	b	8950 <eaddr+0x234>
    8a44:	e320f000 	nop	{0}
    8a48:	20202020 	.word	0x20202020
    8a4c:	20202020 	.word	0x20202020
    8a50:	0002e09c 	.word	0x0002e09c

00008a54 <iaddr>:
    8a54:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    8a58:	e5d15000 	ldrb	r5, [r1]
    8a5c:	e24dd018 	sub	sp, sp, #24
    8a60:	e3550000 	cmp	r5, #0
    8a64:	e1a04000 	mov	r4, r0
    8a68:	e1a06002 	mov	r6, r2
    8a6c:	e1a0c003 	mov	ip, r3
    8a70:	0a000018 	beq	8ad8 <iaddr+0x84>
    8a74:	e3550063 	cmp	r5, #99	; 0x63
    8a78:	da00015e 	ble	8ff8 <iaddr+0x5a4>
    8a7c:	e59f85ec 	ldr	r8, [pc, #1516]	; 9070 <iaddr+0x61c>
    8a80:	e59f25ec 	ldr	r2, [pc, #1516]	; 9074 <iaddr+0x620>
    8a84:	e0898895 	umull	r8, r9, r5, r8
    8a88:	e1a0e2a9 	lsr	lr, r9, #5
    8a8c:	e08e310e 	add	r3, lr, lr, lsl #2
    8a90:	e0833103 	add	r3, r3, r3, lsl #2
    8a94:	e0455103 	sub	r5, r5, r3, lsl #2
    8a98:	e0832295 	umull	r2, r3, r5, r2
    8a9c:	e59f05d4 	ldr	r0, [pc, #1492]	; 9078 <iaddr+0x624>
    8aa0:	e1a031a3 	lsr	r3, r3, #3
    8aa4:	e7d0200e 	ldrb	r2, [r0, lr]
    8aa8:	e083e103 	add	lr, r3, r3, lsl #2
    8aac:	e7d03003 	ldrb	r3, [r0, r3]
    8ab0:	e045508e 	sub	r5, r5, lr, lsl #1
    8ab4:	e5cd3001 	strb	r3, [sp, #1]
    8ab8:	e3a0e003 	mov	lr, #3
    8abc:	e3a03002 	mov	r3, #2
    8ac0:	e5cd2000 	strb	r2, [sp]
    8ac4:	e7d02005 	ldrb	r2, [r0, r5]
    8ac8:	e28d0018 	add	r0, sp, #24
    8acc:	e0803003 	add	r3, r0, r3
    8ad0:	e5432018 	strb	r2, [r3, #-24]	; 0xffffffe8
    8ad4:	ea000002 	b	8ae4 <iaddr+0x90>
    8ad8:	e3a03030 	mov	r3, #48	; 0x30
    8adc:	e3a0e001 	mov	lr, #1
    8ae0:	e5cd3000 	strb	r3, [sp]
    8ae4:	e3a0202e 	mov	r2, #46	; 0x2e
    8ae8:	e5d15001 	ldrb	r5, [r1, #1]
    8aec:	e28d3018 	add	r3, sp, #24
    8af0:	e083300e 	add	r3, r3, lr
    8af4:	e3550000 	cmp	r5, #0
    8af8:	e5432018 	strb	r2, [r3, #-24]	; 0xffffffe8
    8afc:	e28e3001 	add	r3, lr, #1
    8b00:	e28e2002 	add	r2, lr, #2
    8b04:	0a00001b 	beq	8b78 <iaddr+0x124>
    8b08:	e3550063 	cmp	r5, #99	; 0x63
    8b0c:	da00012a 	ble	8fbc <iaddr+0x568>
    8b10:	e59f8558 	ldr	r8, [pc, #1368]	; 9070 <iaddr+0x61c>
    8b14:	e59f055c 	ldr	r0, [pc, #1372]	; 9078 <iaddr+0x624>
    8b18:	e0898895 	umull	r8, r9, r5, r8
    8b1c:	e1a0a2a9 	lsr	sl, r9, #5
    8b20:	e08a710a 	add	r7, sl, sl, lsl #2
    8b24:	e0877107 	add	r7, r7, r7, lsl #2
    8b28:	e59f8544 	ldr	r8, [pc, #1348]	; 9074 <iaddr+0x620>
    8b2c:	e0455107 	sub	r5, r5, r7, lsl #2
    8b30:	e0898895 	umull	r8, r9, r5, r8
    8b34:	e1a071a9 	lsr	r7, r9, #3
    8b38:	e7d08007 	ldrb	r8, [r0, r7]
    8b3c:	e7d0900a 	ldrb	r9, [r0, sl]
    8b40:	e28da018 	add	sl, sp, #24
    8b44:	e08a3003 	add	r3, sl, r3
    8b48:	e08a2002 	add	r2, sl, r2
    8b4c:	e0877107 	add	r7, r7, r7, lsl #2
    8b50:	e5439018 	strb	r9, [r3, #-24]	; 0xffffffe8
    8b54:	e0455087 	sub	r5, r5, r7, lsl #1
    8b58:	e5428018 	strb	r8, [r2, #-24]	; 0xffffffe8
    8b5c:	e28e3003 	add	r3, lr, #3
    8b60:	e28e2004 	add	r2, lr, #4
    8b64:	e7d00005 	ldrb	r0, [r0, r5]
    8b68:	e28de018 	add	lr, sp, #24
    8b6c:	e08e3003 	add	r3, lr, r3
    8b70:	e5430018 	strb	r0, [r3, #-24]	; 0xffffffe8
    8b74:	ea000003 	b	8b88 <iaddr+0x134>
    8b78:	e3a00030 	mov	r0, #48	; 0x30
    8b7c:	e28de018 	add	lr, sp, #24
    8b80:	e08e3003 	add	r3, lr, r3
    8b84:	e5430018 	strb	r0, [r3, #-24]	; 0xffffffe8
    8b88:	e3a0002e 	mov	r0, #46	; 0x2e
    8b8c:	e5d15002 	ldrb	r5, [r1, #2]
    8b90:	e28d3018 	add	r3, sp, #24
    8b94:	e0833002 	add	r3, r3, r2
    8b98:	e3550000 	cmp	r5, #0
    8b9c:	e5430018 	strb	r0, [r3, #-24]	; 0xffffffe8
    8ba0:	e282e001 	add	lr, r2, #1
    8ba4:	e2823002 	add	r3, r2, #2
    8ba8:	0a00001b 	beq	8c1c <iaddr+0x1c8>
    8bac:	e3550063 	cmp	r5, #99	; 0x63
    8bb0:	da0000f2 	ble	8f80 <iaddr+0x52c>
    8bb4:	e59f84b4 	ldr	r8, [pc, #1204]	; 9070 <iaddr+0x61c>
    8bb8:	e59f04b8 	ldr	r0, [pc, #1208]	; 9078 <iaddr+0x624>
    8bbc:	e0898895 	umull	r8, r9, r5, r8
    8bc0:	e1a0a2a9 	lsr	sl, r9, #5
    8bc4:	e08a710a 	add	r7, sl, sl, lsl #2
    8bc8:	e0877107 	add	r7, r7, r7, lsl #2
    8bcc:	e59f84a0 	ldr	r8, [pc, #1184]	; 9074 <iaddr+0x620>
    8bd0:	e0455107 	sub	r5, r5, r7, lsl #2
    8bd4:	e0898895 	umull	r8, r9, r5, r8
    8bd8:	e1a071a9 	lsr	r7, r9, #3
    8bdc:	e7d08007 	ldrb	r8, [r0, r7]
    8be0:	e7d0900a 	ldrb	r9, [r0, sl]
    8be4:	e28da018 	add	sl, sp, #24
    8be8:	e08ae00e 	add	lr, sl, lr
    8bec:	e08a3003 	add	r3, sl, r3
    8bf0:	e0877107 	add	r7, r7, r7, lsl #2
    8bf4:	e54e9018 	strb	r9, [lr, #-24]	; 0xffffffe8
    8bf8:	e0455087 	sub	r5, r5, r7, lsl #1
    8bfc:	e5438018 	strb	r8, [r3, #-24]	; 0xffffffe8
    8c00:	e282e003 	add	lr, r2, #3
    8c04:	e2823004 	add	r3, r2, #4
    8c08:	e7d02005 	ldrb	r2, [r0, r5]
    8c0c:	e28d0018 	add	r0, sp, #24
    8c10:	e080e00e 	add	lr, r0, lr
    8c14:	e54e2018 	strb	r2, [lr, #-24]	; 0xffffffe8
    8c18:	ea000003 	b	8c2c <iaddr+0x1d8>
    8c1c:	e3a02030 	mov	r2, #48	; 0x30
    8c20:	e28d0018 	add	r0, sp, #24
    8c24:	e080e00e 	add	lr, r0, lr
    8c28:	e54e2018 	strb	r2, [lr, #-24]	; 0xffffffe8
    8c2c:	e3a0002e 	mov	r0, #46	; 0x2e
    8c30:	e5d12003 	ldrb	r2, [r1, #3]
    8c34:	e28d1018 	add	r1, sp, #24
    8c38:	e0811003 	add	r1, r1, r3
    8c3c:	e3520000 	cmp	r2, #0
    8c40:	e5410018 	strb	r0, [r1, #-24]	; 0xffffffe8
    8c44:	e2835002 	add	r5, r3, #2
    8c48:	e2831001 	add	r1, r3, #1
    8c4c:	1a0000a0 	bne	8ed4 <iaddr+0x480>
    8c50:	e3a03030 	mov	r3, #48	; 0x30
    8c54:	e28d2018 	add	r2, sp, #24
    8c58:	e0821001 	add	r1, r2, r1
    8c5c:	e5413018 	strb	r3, [r1, #-24]	; 0xffffffe8
    8c60:	e31c0010 	tst	ip, #16
    8c64:	e2467001 	sub	r7, r6, #1
    8c68:	1a00000c 	bne	8ca0 <iaddr+0x24c>
    8c6c:	e1550006 	cmp	r5, r6
    8c70:	a2463002 	subge	r3, r6, #2
    8c74:	a1a06007 	movge	r6, r7
    8c78:	a1a07003 	movge	r7, r3
    8c7c:	aa000007 	bge	8ca0 <iaddr+0x24c>
    8c80:	e0467005 	sub	r7, r6, r5
    8c84:	e1a02007 	mov	r2, r7
    8c88:	e1a00004 	mov	r0, r4
    8c8c:	e3a01020 	mov	r1, #32
    8c90:	eb008d31 	bl	2c15c <memset>
    8c94:	e2456001 	sub	r6, r5, #1
    8c98:	e0844007 	add	r4, r4, r7
    8c9c:	e2467001 	sub	r7, r6, #1
    8ca0:	e1a02005 	mov	r2, r5
    8ca4:	e1a0100d 	mov	r1, sp
    8ca8:	e1a00004 	mov	r0, r4
    8cac:	eb008ce6 	bl	2c04c <memcpy>
    8cb0:	e1550006 	cmp	r5, r6
    8cb4:	e0840005 	add	r0, r4, r5
    8cb8:	aa000083 	bge	8ecc <iaddr+0x478>
    8cbc:	e2603000 	rsb	r3, r0, #0
    8cc0:	e2033007 	and	r3, r3, #7
    8cc4:	e1550007 	cmp	r5, r7
    8cc8:	e2832007 	add	r2, r3, #7
    8ccc:	e2654001 	rsb	r4, r5, #1
    8cd0:	d0471005 	suble	r1, r7, r5
    8cd4:	c3a01000 	movgt	r1, #0
    8cd8:	d0844007 	addle	r4, r4, r7
    8cdc:	c3a04001 	movgt	r4, #1
    8ce0:	e352000c 	cmp	r2, #12
    8ce4:	33a0200c 	movcc	r2, #12
    8ce8:	e1510002 	cmp	r1, r2
    8cec:	3a0000db 	bcc	9060 <iaddr+0x60c>
    8cf0:	e3530000 	cmp	r3, #0
    8cf4:	0a0000d6 	beq	9054 <iaddr+0x600>
    8cf8:	e3a02020 	mov	r2, #32
    8cfc:	e3530001 	cmp	r3, #1
    8d00:	e5c02000 	strb	r2, [r0]
    8d04:	e280c001 	add	ip, r0, #1
    8d08:	e247e001 	sub	lr, r7, #1
    8d0c:	0a00001a 	beq	8d7c <iaddr+0x328>
    8d10:	e3530002 	cmp	r3, #2
    8d14:	e5c02001 	strb	r2, [r0, #1]
    8d18:	e280c002 	add	ip, r0, #2
    8d1c:	e247e002 	sub	lr, r7, #2
    8d20:	0a000015 	beq	8d7c <iaddr+0x328>
    8d24:	e3530003 	cmp	r3, #3
    8d28:	e5c02002 	strb	r2, [r0, #2]
    8d2c:	e280c003 	add	ip, r0, #3
    8d30:	e247e003 	sub	lr, r7, #3
    8d34:	0a000010 	beq	8d7c <iaddr+0x328>
    8d38:	e3530004 	cmp	r3, #4
    8d3c:	e5c02003 	strb	r2, [r0, #3]
    8d40:	e280c004 	add	ip, r0, #4
    8d44:	e247e004 	sub	lr, r7, #4
    8d48:	0a00000b 	beq	8d7c <iaddr+0x328>
    8d4c:	e3530005 	cmp	r3, #5
    8d50:	e5c02004 	strb	r2, [r0, #4]
    8d54:	e280c005 	add	ip, r0, #5
    8d58:	e247e005 	sub	lr, r7, #5
    8d5c:	0a000006 	beq	8d7c <iaddr+0x328>
    8d60:	e3530007 	cmp	r3, #7
    8d64:	e5c02005 	strb	r2, [r0, #5]
    8d68:	e280c006 	add	ip, r0, #6
    8d6c:	e247e006 	sub	lr, r7, #6
    8d70:	05c02006 	strbeq	r2, [r0, #6]
    8d74:	0247e007 	subeq	lr, r7, #7
    8d78:	0280c007 	addeq	ip, r0, #7
    8d7c:	e3a01000 	mov	r1, #0
    8d80:	e28f7e2e 	add	r7, pc, #736	; 0x2e0
    8d84:	e1c760d0 	ldrd	r6, [r7]
    8d88:	e0444003 	sub	r4, r4, r3
    8d8c:	e1a081a4 	lsr	r8, r4, #3
    8d90:	e0803003 	add	r3, r0, r3
    8d94:	e28c2001 	add	r2, ip, #1
    8d98:	e2811001 	add	r1, r1, #1
    8d9c:	e1510008 	cmp	r1, r8
    8da0:	e2820007 	add	r0, r2, #7
    8da4:	e0c360f8 	strd	r6, [r3], #8
    8da8:	e2822008 	add	r2, r2, #8
    8dac:	3afffff9 	bcc	8d98 <iaddr+0x344>
    8db0:	e3c47007 	bic	r7, r4, #7
    8db4:	e1540007 	cmp	r4, r7
    8db8:	e08c3007 	add	r3, ip, r7
    8dbc:	e04e7007 	sub	r7, lr, r7
    8dc0:	0a000041 	beq	8ecc <iaddr+0x478>
    8dc4:	e3a02020 	mov	r2, #32
    8dc8:	e1550007 	cmp	r5, r7
    8dcc:	e5c32000 	strb	r2, [r3]
    8dd0:	e2830001 	add	r0, r3, #1
    8dd4:	e2471001 	sub	r1, r7, #1
    8dd8:	aa00003b 	bge	8ecc <iaddr+0x478>
    8ddc:	e1550001 	cmp	r5, r1
    8de0:	e5c32001 	strb	r2, [r3, #1]
    8de4:	e2830002 	add	r0, r3, #2
    8de8:	e2471002 	sub	r1, r7, #2
    8dec:	aa000036 	bge	8ecc <iaddr+0x478>
    8df0:	e1550001 	cmp	r5, r1
    8df4:	e5c32002 	strb	r2, [r3, #2]
    8df8:	e2830003 	add	r0, r3, #3
    8dfc:	e2471003 	sub	r1, r7, #3
    8e00:	aa000031 	bge	8ecc <iaddr+0x478>
    8e04:	e1550001 	cmp	r5, r1
    8e08:	e5c32003 	strb	r2, [r3, #3]
    8e0c:	e2830004 	add	r0, r3, #4
    8e10:	e2471004 	sub	r1, r7, #4
    8e14:	aa00002c 	bge	8ecc <iaddr+0x478>
    8e18:	e1550001 	cmp	r5, r1
    8e1c:	e5c32004 	strb	r2, [r3, #4]
    8e20:	e2830005 	add	r0, r3, #5
    8e24:	e2471005 	sub	r1, r7, #5
    8e28:	aa000027 	bge	8ecc <iaddr+0x478>
    8e2c:	e1550001 	cmp	r5, r1
    8e30:	e5c32005 	strb	r2, [r3, #5]
    8e34:	e2830006 	add	r0, r3, #6
    8e38:	e2471006 	sub	r1, r7, #6
    8e3c:	aa000022 	bge	8ecc <iaddr+0x478>
    8e40:	e1550001 	cmp	r5, r1
    8e44:	e5c32006 	strb	r2, [r3, #6]
    8e48:	e2830007 	add	r0, r3, #7
    8e4c:	e2471007 	sub	r1, r7, #7
    8e50:	aa00001d 	bge	8ecc <iaddr+0x478>
    8e54:	e1550001 	cmp	r5, r1
    8e58:	e5c32007 	strb	r2, [r3, #7]
    8e5c:	e2830008 	add	r0, r3, #8
    8e60:	e2471008 	sub	r1, r7, #8
    8e64:	aa000018 	bge	8ecc <iaddr+0x478>
    8e68:	e1550001 	cmp	r5, r1
    8e6c:	e5c32008 	strb	r2, [r3, #8]
    8e70:	e2830009 	add	r0, r3, #9
    8e74:	e2471009 	sub	r1, r7, #9
    8e78:	aa000013 	bge	8ecc <iaddr+0x478>
    8e7c:	e1550001 	cmp	r5, r1
    8e80:	e5c32009 	strb	r2, [r3, #9]
    8e84:	e283000a 	add	r0, r3, #10
    8e88:	e247100a 	sub	r1, r7, #10
    8e8c:	aa00000e 	bge	8ecc <iaddr+0x478>
    8e90:	e1550001 	cmp	r5, r1
    8e94:	e5c3200a 	strb	r2, [r3, #10]
    8e98:	e283000b 	add	r0, r3, #11
    8e9c:	e247100b 	sub	r1, r7, #11
    8ea0:	aa000009 	bge	8ecc <iaddr+0x478>
    8ea4:	e1550001 	cmp	r5, r1
    8ea8:	e5c3200b 	strb	r2, [r3, #11]
    8eac:	e247700c 	sub	r7, r7, #12
    8eb0:	e283000c 	add	r0, r3, #12
    8eb4:	aa000004 	bge	8ecc <iaddr+0x478>
    8eb8:	e1550007 	cmp	r5, r7
    8ebc:	e5c3200c 	strb	r2, [r3, #12]
    8ec0:	e283000d 	add	r0, r3, #13
    8ec4:	b5c3200d 	strblt	r2, [r3, #13]
    8ec8:	b283000e 	addlt	r0, r3, #14
    8ecc:	e28dd018 	add	sp, sp, #24
    8ed0:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    8ed4:	e3520063 	cmp	r2, #99	; 0x63
    8ed8:	da000019 	ble	8f44 <iaddr+0x4f0>
    8edc:	e59f818c 	ldr	r8, [pc, #396]	; 9070 <iaddr+0x61c>
    8ee0:	e59f0190 	ldr	r0, [pc, #400]	; 9078 <iaddr+0x624>
    8ee4:	e0898892 	umull	r8, r9, r2, r8
    8ee8:	e1a072a9 	lsr	r7, r9, #5
    8eec:	e087e107 	add	lr, r7, r7, lsl #2
    8ef0:	e08ee10e 	add	lr, lr, lr, lsl #2
    8ef4:	e59f8178 	ldr	r8, [pc, #376]	; 9074 <iaddr+0x620>
    8ef8:	e042210e 	sub	r2, r2, lr, lsl #2
    8efc:	e0898892 	umull	r8, r9, r2, r8
    8f00:	e1a0e1a9 	lsr	lr, r9, #3
    8f04:	e7d08007 	ldrb	r8, [r0, r7]
    8f08:	e28d9018 	add	r9, sp, #24
    8f0c:	e7d0700e 	ldrb	r7, [r0, lr]
    8f10:	e0891001 	add	r1, r9, r1
    8f14:	e0895005 	add	r5, r9, r5
    8f18:	e08ee10e 	add	lr, lr, lr, lsl #2
    8f1c:	e5418018 	strb	r8, [r1, #-24]	; 0xffffffe8
    8f20:	e042208e 	sub	r2, r2, lr, lsl #1
    8f24:	e5457018 	strb	r7, [r5, #-24]	; 0xffffffe8
    8f28:	e2831003 	add	r1, r3, #3
    8f2c:	e2835004 	add	r5, r3, #4
    8f30:	e7d03002 	ldrb	r3, [r0, r2]
    8f34:	e28d2018 	add	r2, sp, #24
    8f38:	e0821001 	add	r1, r2, r1
    8f3c:	e5413018 	strb	r3, [r1, #-24]	; 0xffffffe8
    8f40:	eaffff46 	b	8c60 <iaddr+0x20c>
    8f44:	e3520009 	cmp	r2, #9
    8f48:	da00003f 	ble	904c <iaddr+0x5f8>
    8f4c:	e59f8120 	ldr	r8, [pc, #288]	; 9074 <iaddr+0x620>
    8f50:	e59f0120 	ldr	r0, [pc, #288]	; 9078 <iaddr+0x624>
    8f54:	e0898892 	umull	r8, r9, r2, r8
    8f58:	e1a0e1a9 	lsr	lr, r9, #3
    8f5c:	e7d0800e 	ldrb	r8, [r0, lr]
    8f60:	e28d7018 	add	r7, sp, #24
    8f64:	e0877001 	add	r7, r7, r1
    8f68:	e08ee10e 	add	lr, lr, lr, lsl #2
    8f6c:	e1a01005 	mov	r1, r5
    8f70:	e5478018 	strb	r8, [r7, #-24]	; 0xffffffe8
    8f74:	e2835003 	add	r5, r3, #3
    8f78:	e042208e 	sub	r2, r2, lr, lsl #1
    8f7c:	eaffffeb 	b	8f30 <iaddr+0x4dc>
    8f80:	e3550009 	cmp	r5, #9
    8f84:	da00002e 	ble	9044 <iaddr+0x5f0>
    8f88:	e59f80e4 	ldr	r8, [pc, #228]	; 9074 <iaddr+0x620>
    8f8c:	e59f00e4 	ldr	r0, [pc, #228]	; 9078 <iaddr+0x624>
    8f90:	e0898895 	umull	r8, r9, r5, r8
    8f94:	e1a071a9 	lsr	r7, r9, #3
    8f98:	e7d09007 	ldrb	r9, [r0, r7]
    8f9c:	e28d8018 	add	r8, sp, #24
    8fa0:	e088800e 	add	r8, r8, lr
    8fa4:	e0877107 	add	r7, r7, r7, lsl #2
    8fa8:	e1a0e003 	mov	lr, r3
    8fac:	e5489018 	strb	r9, [r8, #-24]	; 0xffffffe8
    8fb0:	e2823003 	add	r3, r2, #3
    8fb4:	e0455087 	sub	r5, r5, r7, lsl #1
    8fb8:	eaffff12 	b	8c08 <iaddr+0x1b4>
    8fbc:	e3550009 	cmp	r5, #9
    8fc0:	da00001d 	ble	903c <iaddr+0x5e8>
    8fc4:	e59f80a8 	ldr	r8, [pc, #168]	; 9074 <iaddr+0x620>
    8fc8:	e59f00a8 	ldr	r0, [pc, #168]	; 9078 <iaddr+0x624>
    8fcc:	e0898895 	umull	r8, r9, r5, r8
    8fd0:	e1a071a9 	lsr	r7, r9, #3
    8fd4:	e7d09007 	ldrb	r9, [r0, r7]
    8fd8:	e28d8018 	add	r8, sp, #24
    8fdc:	e0888003 	add	r8, r8, r3
    8fe0:	e0877107 	add	r7, r7, r7, lsl #2
    8fe4:	e1a03002 	mov	r3, r2
    8fe8:	e5489018 	strb	r9, [r8, #-24]	; 0xffffffe8
    8fec:	e28e2003 	add	r2, lr, #3
    8ff0:	e0455087 	sub	r5, r5, r7, lsl #1
    8ff4:	eafffeda 	b	8b64 <iaddr+0x110>
    8ff8:	e3550009 	cmp	r5, #9
    8ffc:	da00000a 	ble	902c <iaddr+0x5d8>
    9000:	e59f206c 	ldr	r2, [pc, #108]	; 9074 <iaddr+0x620>
    9004:	e59f006c 	ldr	r0, [pc, #108]	; 9078 <iaddr+0x624>
    9008:	e0832295 	umull	r2, r3, r5, r2
    900c:	e1a031a3 	lsr	r3, r3, #3
    9010:	e7d02003 	ldrb	r2, [r0, r3]
    9014:	e0833103 	add	r3, r3, r3, lsl #2
    9018:	e0455083 	sub	r5, r5, r3, lsl #1
    901c:	e5cd2000 	strb	r2, [sp]
    9020:	e3a0e002 	mov	lr, #2
    9024:	e3a03001 	mov	r3, #1
    9028:	eafffea5 	b	8ac4 <iaddr+0x70>
    902c:	e3a0e001 	mov	lr, #1
    9030:	e3a03000 	mov	r3, #0
    9034:	e59f003c 	ldr	r0, [pc, #60]	; 9078 <iaddr+0x624>
    9038:	eafffea1 	b	8ac4 <iaddr+0x70>
    903c:	e59f0034 	ldr	r0, [pc, #52]	; 9078 <iaddr+0x624>
    9040:	eafffec7 	b	8b64 <iaddr+0x110>
    9044:	e59f002c 	ldr	r0, [pc, #44]	; 9078 <iaddr+0x624>
    9048:	eafffeee 	b	8c08 <iaddr+0x1b4>
    904c:	e59f0024 	ldr	r0, [pc, #36]	; 9078 <iaddr+0x624>
    9050:	eaffffb6 	b	8f30 <iaddr+0x4dc>
    9054:	e1a0e007 	mov	lr, r7
    9058:	e1a0c000 	mov	ip, r0
    905c:	eaffff46 	b	8d7c <iaddr+0x328>
    9060:	e1a03000 	mov	r3, r0
    9064:	eaffff56 	b	8dc4 <iaddr+0x370>
    9068:	20202020 	.word	0x20202020
    906c:	20202020 	.word	0x20202020
    9070:	51eb851f 	.word	0x51eb851f
    9074:	cccccccd 	.word	0xcccccccd
    9078:	0002e070 	.word	0x0002e070

0000907c <ee_vsprintf>:
    907c:	e92d4800 	push	{fp, lr}
    9080:	e28db004 	add	fp, sp, #4
    9084:	e24dd040 	sub	sp, sp, #64	; 0x40
    9088:	e50b0030 	str	r0, [fp, #-48]	; 0xffffffd0
    908c:	e50b1034 	str	r1, [fp, #-52]	; 0xffffffcc
    9090:	e50b2038 	str	r2, [fp, #-56]	; 0xffffffc8
    9094:	e51b3030 	ldr	r3, [fp, #-48]	; 0xffffffd0
    9098:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
    909c:	ea0001b6 	b	977c <ee_vsprintf+0x700>
    90a0:	e51b3034 	ldr	r3, [fp, #-52]	; 0xffffffcc
    90a4:	e5d33000 	ldrb	r3, [r3]
    90a8:	e3530025 	cmp	r3, #37	; 0x25
    90ac:	0a000006 	beq	90cc <ee_vsprintf+0x50>
    90b0:	e51b2034 	ldr	r2, [fp, #-52]	; 0xffffffcc
    90b4:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    90b8:	e2831001 	add	r1, r3, #1
    90bc:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
    90c0:	e5d22000 	ldrb	r2, [r2]
    90c4:	e5c32000 	strb	r2, [r3]
    90c8:	ea0001a8 	b	9770 <ee_vsprintf+0x6f4>
    90cc:	e3a03000 	mov	r3, #0
    90d0:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4
    90d4:	e51b3034 	ldr	r3, [fp, #-52]	; 0xffffffcc
    90d8:	e2833001 	add	r3, r3, #1
    90dc:	e50b3034 	str	r3, [fp, #-52]	; 0xffffffcc
    90e0:	e51b3034 	ldr	r3, [fp, #-52]	; 0xffffffcc
    90e4:	e5d33000 	ldrb	r3, [r3]
    90e8:	e2433020 	sub	r3, r3, #32
    90ec:	e3530010 	cmp	r3, #16
    90f0:	979ff103 	ldrls	pc, [pc, r3, lsl #2]
    90f4:	ea000024 	b	918c <ee_vsprintf+0x110>
    90f8:	0000915c 	.word	0x0000915c
    90fc:	0000918c 	.word	0x0000918c
    9100:	0000918c 	.word	0x0000918c
    9104:	0000916c 	.word	0x0000916c
    9108:	0000918c 	.word	0x0000918c
    910c:	0000918c 	.word	0x0000918c
    9110:	0000918c 	.word	0x0000918c
    9114:	0000918c 	.word	0x0000918c
    9118:	0000918c 	.word	0x0000918c
    911c:	0000918c 	.word	0x0000918c
    9120:	0000918c 	.word	0x0000918c
    9124:	0000914c 	.word	0x0000914c
    9128:	0000918c 	.word	0x0000918c
    912c:	0000913c 	.word	0x0000913c
    9130:	0000918c 	.word	0x0000918c
    9134:	0000918c 	.word	0x0000918c
    9138:	0000917c 	.word	0x0000917c
    913c:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    9140:	e3833010 	orr	r3, r3, #16
    9144:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4
    9148:	eaffffe1 	b	90d4 <ee_vsprintf+0x58>
    914c:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    9150:	e3833004 	orr	r3, r3, #4
    9154:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4
    9158:	eaffffdd 	b	90d4 <ee_vsprintf+0x58>
    915c:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    9160:	e3833008 	orr	r3, r3, #8
    9164:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4
    9168:	eaffffd9 	b	90d4 <ee_vsprintf+0x58>
    916c:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    9170:	e3833020 	orr	r3, r3, #32
    9174:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4
    9178:	eaffffd5 	b	90d4 <ee_vsprintf+0x58>
    917c:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    9180:	e3833001 	orr	r3, r3, #1
    9184:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4
    9188:	eaffffd1 	b	90d4 <ee_vsprintf+0x58>
    918c:	e3e03000 	mvn	r3, #0
    9190:	e50b3020 	str	r3, [fp, #-32]	; 0xffffffe0
    9194:	e51b3034 	ldr	r3, [fp, #-52]	; 0xffffffcc
    9198:	e5d33000 	ldrb	r3, [r3]
    919c:	e353002f 	cmp	r3, #47	; 0x2f
    91a0:	9a000008 	bls	91c8 <ee_vsprintf+0x14c>
    91a4:	e51b3034 	ldr	r3, [fp, #-52]	; 0xffffffcc
    91a8:	e5d33000 	ldrb	r3, [r3]
    91ac:	e3530039 	cmp	r3, #57	; 0x39
    91b0:	8a000004 	bhi	91c8 <ee_vsprintf+0x14c>
    91b4:	e24b3034 	sub	r3, fp, #52	; 0x34
    91b8:	e1a00003 	mov	r0, r3
    91bc:	ebfffc92 	bl	840c <ee_skip_atoi>
    91c0:	e50b0020 	str	r0, [fp, #-32]	; 0xffffffe0
    91c4:	ea000014 	b	921c <ee_vsprintf+0x1a0>
    91c8:	e51b3034 	ldr	r3, [fp, #-52]	; 0xffffffcc
    91cc:	e5d33000 	ldrb	r3, [r3]
    91d0:	e353002a 	cmp	r3, #42	; 0x2a
    91d4:	1a000010 	bne	921c <ee_vsprintf+0x1a0>
    91d8:	e51b3034 	ldr	r3, [fp, #-52]	; 0xffffffcc
    91dc:	e2833001 	add	r3, r3, #1
    91e0:	e50b3034 	str	r3, [fp, #-52]	; 0xffffffcc
    91e4:	e51b3038 	ldr	r3, [fp, #-56]	; 0xffffffc8
    91e8:	e2832004 	add	r2, r3, #4
    91ec:	e50b2038 	str	r2, [fp, #-56]	; 0xffffffc8
    91f0:	e5933000 	ldr	r3, [r3]
    91f4:	e50b3020 	str	r3, [fp, #-32]	; 0xffffffe0
    91f8:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
    91fc:	e3530000 	cmp	r3, #0
    9200:	aa000005 	bge	921c <ee_vsprintf+0x1a0>
    9204:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
    9208:	e2633000 	rsb	r3, r3, #0
    920c:	e50b3020 	str	r3, [fp, #-32]	; 0xffffffe0
    9210:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    9214:	e3833010 	orr	r3, r3, #16
    9218:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4
    921c:	e3e03000 	mvn	r3, #0
    9220:	e50b3024 	str	r3, [fp, #-36]	; 0xffffffdc
    9224:	e51b3034 	ldr	r3, [fp, #-52]	; 0xffffffcc
    9228:	e5d33000 	ldrb	r3, [r3]
    922c:	e353002e 	cmp	r3, #46	; 0x2e
    9230:	1a000020 	bne	92b8 <ee_vsprintf+0x23c>
    9234:	e51b3034 	ldr	r3, [fp, #-52]	; 0xffffffcc
    9238:	e2833001 	add	r3, r3, #1
    923c:	e50b3034 	str	r3, [fp, #-52]	; 0xffffffcc
    9240:	e51b3034 	ldr	r3, [fp, #-52]	; 0xffffffcc
    9244:	e5d33000 	ldrb	r3, [r3]
    9248:	e353002f 	cmp	r3, #47	; 0x2f
    924c:	9a000008 	bls	9274 <ee_vsprintf+0x1f8>
    9250:	e51b3034 	ldr	r3, [fp, #-52]	; 0xffffffcc
    9254:	e5d33000 	ldrb	r3, [r3]
    9258:	e3530039 	cmp	r3, #57	; 0x39
    925c:	8a000004 	bhi	9274 <ee_vsprintf+0x1f8>
    9260:	e24b3034 	sub	r3, fp, #52	; 0x34
    9264:	e1a00003 	mov	r0, r3
    9268:	ebfffc67 	bl	840c <ee_skip_atoi>
    926c:	e50b0024 	str	r0, [fp, #-36]	; 0xffffffdc
    9270:	ea00000b 	b	92a4 <ee_vsprintf+0x228>
    9274:	e51b3034 	ldr	r3, [fp, #-52]	; 0xffffffcc
    9278:	e5d33000 	ldrb	r3, [r3]
    927c:	e353002a 	cmp	r3, #42	; 0x2a
    9280:	1a000007 	bne	92a4 <ee_vsprintf+0x228>
    9284:	e51b3034 	ldr	r3, [fp, #-52]	; 0xffffffcc
    9288:	e2833001 	add	r3, r3, #1
    928c:	e50b3034 	str	r3, [fp, #-52]	; 0xffffffcc
    9290:	e51b3038 	ldr	r3, [fp, #-56]	; 0xffffffc8
    9294:	e2832004 	add	r2, r3, #4
    9298:	e50b2038 	str	r2, [fp, #-56]	; 0xffffffc8
    929c:	e5933000 	ldr	r3, [r3]
    92a0:	e50b3024 	str	r3, [fp, #-36]	; 0xffffffdc
    92a4:	e51b3024 	ldr	r3, [fp, #-36]	; 0xffffffdc
    92a8:	e3530000 	cmp	r3, #0
    92ac:	aa000001 	bge	92b8 <ee_vsprintf+0x23c>
    92b0:	e3a03000 	mov	r3, #0
    92b4:	e50b3024 	str	r3, [fp, #-36]	; 0xffffffdc
    92b8:	e3e03000 	mvn	r3, #0
    92bc:	e50b3028 	str	r3, [fp, #-40]	; 0xffffffd8
    92c0:	e51b3034 	ldr	r3, [fp, #-52]	; 0xffffffcc
    92c4:	e5d33000 	ldrb	r3, [r3]
    92c8:	e353006c 	cmp	r3, #108	; 0x6c
    92cc:	0a000003 	beq	92e0 <ee_vsprintf+0x264>
    92d0:	e51b3034 	ldr	r3, [fp, #-52]	; 0xffffffcc
    92d4:	e5d33000 	ldrb	r3, [r3]
    92d8:	e353004c 	cmp	r3, #76	; 0x4c
    92dc:	1a000005 	bne	92f8 <ee_vsprintf+0x27c>
    92e0:	e51b3034 	ldr	r3, [fp, #-52]	; 0xffffffcc
    92e4:	e5d33000 	ldrb	r3, [r3]
    92e8:	e50b3028 	str	r3, [fp, #-40]	; 0xffffffd8
    92ec:	e51b3034 	ldr	r3, [fp, #-52]	; 0xffffffcc
    92f0:	e2833001 	add	r3, r3, #1
    92f4:	e50b3034 	str	r3, [fp, #-52]	; 0xffffffcc
    92f8:	e3a0300a 	mov	r3, #10
    92fc:	e50b3010 	str	r3, [fp, #-16]
    9300:	e51b3034 	ldr	r3, [fp, #-52]	; 0xffffffcc
    9304:	e5d33000 	ldrb	r3, [r3]
    9308:	e2433041 	sub	r3, r3, #65	; 0x41
    930c:	e3530037 	cmp	r3, #55	; 0x37
    9310:	979ff103 	ldrls	pc, [pc, r3, lsl #2]
    9314:	ea0000da 	b	9684 <ee_vsprintf+0x608>
    9318:	000095e8 	.word	0x000095e8
    931c:	00009684 	.word	0x00009684
    9320:	00009684 	.word	0x00009684
    9324:	00009684 	.word	0x00009684
    9328:	00009684 	.word	0x00009684
    932c:	00009684 	.word	0x00009684
    9330:	00009684 	.word	0x00009684
    9334:	00009684 	.word	0x00009684
    9338:	00009684 	.word	0x00009684
    933c:	00009684 	.word	0x00009684
    9340:	00009684 	.word	0x00009684
    9344:	00009684 	.word	0x00009684
    9348:	00009684 	.word	0x00009684
    934c:	00009684 	.word	0x00009684
    9350:	00009684 	.word	0x00009684
    9354:	00009684 	.word	0x00009684
    9358:	00009684 	.word	0x00009684
    935c:	00009684 	.word	0x00009684
    9360:	00009684 	.word	0x00009684
    9364:	00009684 	.word	0x00009684
    9368:	00009684 	.word	0x00009684
    936c:	00009684 	.word	0x00009684
    9370:	00009684 	.word	0x00009684
    9374:	0000965c 	.word	0x0000965c
    9378:	00009684 	.word	0x00009684
    937c:	00009684 	.word	0x00009684
    9380:	00009684 	.word	0x00009684
    9384:	00009684 	.word	0x00009684
    9388:	00009684 	.word	0x00009684
    938c:	00009684 	.word	0x00009684
    9390:	00009684 	.word	0x00009684
    9394:	00009684 	.word	0x00009684
    9398:	000095f4 	.word	0x000095f4
    939c:	00009684 	.word	0x00009684
    93a0:	000093f8 	.word	0x000093f8
    93a4:	00009674 	.word	0x00009674
    93a8:	00009684 	.word	0x00009684
    93ac:	00009684 	.word	0x00009684
    93b0:	00009684 	.word	0x00009684
    93b4:	00009684 	.word	0x00009684
    93b8:	00009674 	.word	0x00009674
    93bc:	00009684 	.word	0x00009684
    93c0:	00009684 	.word	0x00009684
    93c4:	00009684 	.word	0x00009684
    93c8:	00009684 	.word	0x00009684
    93cc:	00009684 	.word	0x00009684
    93d0:	00009650 	.word	0x00009650
    93d4:	0000958c 	.word	0x0000958c
    93d8:	00009684 	.word	0x00009684
    93dc:	00009684 	.word	0x00009684
    93e0:	00009490 	.word	0x00009490
    93e4:	00009684 	.word	0x00009684
    93e8:	000096e4 	.word	0x000096e4
    93ec:	00009684 	.word	0x00009684
    93f0:	00009684 	.word	0x00009684
    93f4:	00009668 	.word	0x00009668
    93f8:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    93fc:	e2033010 	and	r3, r3, #16
    9400:	e3530000 	cmp	r3, #0
    9404:	1a00000b 	bne	9438 <ee_vsprintf+0x3bc>
    9408:	ea000004 	b	9420 <ee_vsprintf+0x3a4>
    940c:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    9410:	e2832001 	add	r2, r3, #1
    9414:	e50b2014 	str	r2, [fp, #-20]	; 0xffffffec
    9418:	e3a02020 	mov	r2, #32
    941c:	e5c32000 	strb	r2, [r3]
    9420:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
    9424:	e2433001 	sub	r3, r3, #1
    9428:	e50b3020 	str	r3, [fp, #-32]	; 0xffffffe0
    942c:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
    9430:	e3530000 	cmp	r3, #0
    9434:	cafffff4 	bgt	940c <ee_vsprintf+0x390>
    9438:	e51b3038 	ldr	r3, [fp, #-56]	; 0xffffffc8
    943c:	e2832004 	add	r2, r3, #4
    9440:	e50b2038 	str	r2, [fp, #-56]	; 0xffffffc8
    9444:	e5931000 	ldr	r1, [r3]
    9448:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    944c:	e2832001 	add	r2, r3, #1
    9450:	e50b2014 	str	r2, [fp, #-20]	; 0xffffffec
    9454:	e6ef2071 	uxtb	r2, r1
    9458:	e5c32000 	strb	r2, [r3]
    945c:	ea000004 	b	9474 <ee_vsprintf+0x3f8>
    9460:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    9464:	e2832001 	add	r2, r3, #1
    9468:	e50b2014 	str	r2, [fp, #-20]	; 0xffffffec
    946c:	e3a02020 	mov	r2, #32
    9470:	e5c32000 	strb	r2, [r3]
    9474:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
    9478:	e2433001 	sub	r3, r3, #1
    947c:	e50b3020 	str	r3, [fp, #-32]	; 0xffffffe0
    9480:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
    9484:	e3530000 	cmp	r3, #0
    9488:	cafffff4 	bgt	9460 <ee_vsprintf+0x3e4>
    948c:	ea0000b7 	b	9770 <ee_vsprintf+0x6f4>
    9490:	e51b3038 	ldr	r3, [fp, #-56]	; 0xffffffc8
    9494:	e2832004 	add	r2, r3, #4
    9498:	e50b2038 	str	r2, [fp, #-56]	; 0xffffffc8
    949c:	e5933000 	ldr	r3, [r3]
    94a0:	e50b3018 	str	r3, [fp, #-24]	; 0xffffffe8
    94a4:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
    94a8:	e3530000 	cmp	r3, #0
    94ac:	1a000001 	bne	94b8 <ee_vsprintf+0x43c>
    94b0:	e59f32f8 	ldr	r3, [pc, #760]	; 97b0 <ee_vsprintf+0x734>
    94b4:	e50b3018 	str	r3, [fp, #-24]	; 0xffffffe8
    94b8:	e51b3024 	ldr	r3, [fp, #-36]	; 0xffffffdc
    94bc:	e1a01003 	mov	r1, r3
    94c0:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
    94c4:	ebfffbbd 	bl	83c0 <ee_strnlen>
    94c8:	e1a03000 	mov	r3, r0
    94cc:	e50b302c 	str	r3, [fp, #-44]	; 0xffffffd4
    94d0:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    94d4:	e2033010 	and	r3, r3, #16
    94d8:	e3530000 	cmp	r3, #0
    94dc:	1a00000b 	bne	9510 <ee_vsprintf+0x494>
    94e0:	ea000004 	b	94f8 <ee_vsprintf+0x47c>
    94e4:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    94e8:	e2832001 	add	r2, r3, #1
    94ec:	e50b2014 	str	r2, [fp, #-20]	; 0xffffffec
    94f0:	e3a02020 	mov	r2, #32
    94f4:	e5c32000 	strb	r2, [r3]
    94f8:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
    94fc:	e2432001 	sub	r2, r3, #1
    9500:	e50b2020 	str	r2, [fp, #-32]	; 0xffffffe0
    9504:	e51b202c 	ldr	r2, [fp, #-44]	; 0xffffffd4
    9508:	e1520003 	cmp	r2, r3
    950c:	bafffff4 	blt	94e4 <ee_vsprintf+0x468>
    9510:	e3a03000 	mov	r3, #0
    9514:	e50b300c 	str	r3, [fp, #-12]
    9518:	ea00000a 	b	9548 <ee_vsprintf+0x4cc>
    951c:	e51b2018 	ldr	r2, [fp, #-24]	; 0xffffffe8
    9520:	e2823001 	add	r3, r2, #1
    9524:	e50b3018 	str	r3, [fp, #-24]	; 0xffffffe8
    9528:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    952c:	e2831001 	add	r1, r3, #1
    9530:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
    9534:	e5d22000 	ldrb	r2, [r2]
    9538:	e5c32000 	strb	r2, [r3]
    953c:	e51b300c 	ldr	r3, [fp, #-12]
    9540:	e2833001 	add	r3, r3, #1
    9544:	e50b300c 	str	r3, [fp, #-12]
    9548:	e51b200c 	ldr	r2, [fp, #-12]
    954c:	e51b302c 	ldr	r3, [fp, #-44]	; 0xffffffd4
    9550:	e1520003 	cmp	r2, r3
    9554:	bafffff0 	blt	951c <ee_vsprintf+0x4a0>
    9558:	ea000004 	b	9570 <ee_vsprintf+0x4f4>
    955c:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    9560:	e2832001 	add	r2, r3, #1
    9564:	e50b2014 	str	r2, [fp, #-20]	; 0xffffffec
    9568:	e3a02020 	mov	r2, #32
    956c:	e5c32000 	strb	r2, [r3]
    9570:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
    9574:	e2432001 	sub	r2, r3, #1
    9578:	e50b2020 	str	r2, [fp, #-32]	; 0xffffffe0
    957c:	e51b202c 	ldr	r2, [fp, #-44]	; 0xffffffd4
    9580:	e1520003 	cmp	r2, r3
    9584:	bafffff4 	blt	955c <ee_vsprintf+0x4e0>
    9588:	ea000078 	b	9770 <ee_vsprintf+0x6f4>
    958c:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
    9590:	e3730001 	cmn	r3, #1
    9594:	1a000004 	bne	95ac <ee_vsprintf+0x530>
    9598:	e3a03008 	mov	r3, #8
    959c:	e50b3020 	str	r3, [fp, #-32]	; 0xffffffe0
    95a0:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    95a4:	e3833001 	orr	r3, r3, #1
    95a8:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4
    95ac:	e51b3038 	ldr	r3, [fp, #-56]	; 0xffffffc8
    95b0:	e2832004 	add	r2, r3, #4
    95b4:	e50b2038 	str	r2, [fp, #-56]	; 0xffffffc8
    95b8:	e5933000 	ldr	r3, [r3]
    95bc:	e1a01003 	mov	r1, r3
    95c0:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    95c4:	e58d3004 	str	r3, [sp, #4]
    95c8:	e51b3024 	ldr	r3, [fp, #-36]	; 0xffffffdc
    95cc:	e58d3000 	str	r3, [sp]
    95d0:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
    95d4:	e3a02010 	mov	r2, #16
    95d8:	e51b0014 	ldr	r0, [fp, #-20]	; 0xffffffec
    95dc:	ebfffb9c 	bl	8454 <ee_number>
    95e0:	e50b0014 	str	r0, [fp, #-20]	; 0xffffffec
    95e4:	ea000061 	b	9770 <ee_vsprintf+0x6f4>
    95e8:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    95ec:	e3833040 	orr	r3, r3, #64	; 0x40
    95f0:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4
    95f4:	e51b3028 	ldr	r3, [fp, #-40]	; 0xffffffd8
    95f8:	e353006c 	cmp	r3, #108	; 0x6c
    95fc:	1a000009 	bne	9628 <ee_vsprintf+0x5ac>
    9600:	e51b3038 	ldr	r3, [fp, #-56]	; 0xffffffc8
    9604:	e2832004 	add	r2, r3, #4
    9608:	e50b2038 	str	r2, [fp, #-56]	; 0xffffffc8
    960c:	e5931000 	ldr	r1, [r3]
    9610:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    9614:	e51b2020 	ldr	r2, [fp, #-32]	; 0xffffffe0
    9618:	e51b0014 	ldr	r0, [fp, #-20]	; 0xffffffec
    961c:	ebfffc3e 	bl	871c <eaddr>
    9620:	e50b0014 	str	r0, [fp, #-20]	; 0xffffffec
    9624:	ea000051 	b	9770 <ee_vsprintf+0x6f4>
    9628:	e51b3038 	ldr	r3, [fp, #-56]	; 0xffffffc8
    962c:	e2832004 	add	r2, r3, #4
    9630:	e50b2038 	str	r2, [fp, #-56]	; 0xffffffc8
    9634:	e5931000 	ldr	r1, [r3]
    9638:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    963c:	e51b2020 	ldr	r2, [fp, #-32]	; 0xffffffe0
    9640:	e51b0014 	ldr	r0, [fp, #-20]	; 0xffffffec
    9644:	ebfffd02 	bl	8a54 <iaddr>
    9648:	e50b0014 	str	r0, [fp, #-20]	; 0xffffffec
    964c:	ea000047 	b	9770 <ee_vsprintf+0x6f4>
    9650:	e3a03008 	mov	r3, #8
    9654:	e50b3010 	str	r3, [fp, #-16]
    9658:	ea000022 	b	96e8 <ee_vsprintf+0x66c>
    965c:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    9660:	e3833040 	orr	r3, r3, #64	; 0x40
    9664:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4
    9668:	e3a03010 	mov	r3, #16
    966c:	e50b3010 	str	r3, [fp, #-16]
    9670:	ea00001c 	b	96e8 <ee_vsprintf+0x66c>
    9674:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    9678:	e3833002 	orr	r3, r3, #2
    967c:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4
    9680:	ea000017 	b	96e4 <ee_vsprintf+0x668>
    9684:	e51b3034 	ldr	r3, [fp, #-52]	; 0xffffffcc
    9688:	e5d33000 	ldrb	r3, [r3]
    968c:	e3530025 	cmp	r3, #37	; 0x25
    9690:	0a000004 	beq	96a8 <ee_vsprintf+0x62c>
    9694:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    9698:	e2832001 	add	r2, r3, #1
    969c:	e50b2014 	str	r2, [fp, #-20]	; 0xffffffec
    96a0:	e3a02025 	mov	r2, #37	; 0x25
    96a4:	e5c32000 	strb	r2, [r3]
    96a8:	e51b3034 	ldr	r3, [fp, #-52]	; 0xffffffcc
    96ac:	e5d33000 	ldrb	r3, [r3]
    96b0:	e3530000 	cmp	r3, #0
    96b4:	0a000006 	beq	96d4 <ee_vsprintf+0x658>
    96b8:	e51b2034 	ldr	r2, [fp, #-52]	; 0xffffffcc
    96bc:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    96c0:	e2831001 	add	r1, r3, #1
    96c4:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
    96c8:	e5d22000 	ldrb	r2, [r2]
    96cc:	e5c32000 	strb	r2, [r3]
    96d0:	ea000026 	b	9770 <ee_vsprintf+0x6f4>
    96d4:	e51b3034 	ldr	r3, [fp, #-52]	; 0xffffffcc
    96d8:	e2433001 	sub	r3, r3, #1
    96dc:	e50b3034 	str	r3, [fp, #-52]	; 0xffffffcc
    96e0:	ea000022 	b	9770 <ee_vsprintf+0x6f4>
    96e4:	e320f000 	nop	{0}
    96e8:	e51b3028 	ldr	r3, [fp, #-40]	; 0xffffffd8
    96ec:	e353006c 	cmp	r3, #108	; 0x6c
    96f0:	1a000005 	bne	970c <ee_vsprintf+0x690>
    96f4:	e51b3038 	ldr	r3, [fp, #-56]	; 0xffffffc8
    96f8:	e2832004 	add	r2, r3, #4
    96fc:	e50b2038 	str	r2, [fp, #-56]	; 0xffffffc8
    9700:	e5933000 	ldr	r3, [r3]
    9704:	e50b3008 	str	r3, [fp, #-8]
    9708:	ea00000e 	b	9748 <ee_vsprintf+0x6cc>
    970c:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    9710:	e2033002 	and	r3, r3, #2
    9714:	e3530000 	cmp	r3, #0
    9718:	0a000005 	beq	9734 <ee_vsprintf+0x6b8>
    971c:	e51b3038 	ldr	r3, [fp, #-56]	; 0xffffffc8
    9720:	e2832004 	add	r2, r3, #4
    9724:	e50b2038 	str	r2, [fp, #-56]	; 0xffffffc8
    9728:	e5933000 	ldr	r3, [r3]
    972c:	e50b3008 	str	r3, [fp, #-8]
    9730:	ea000004 	b	9748 <ee_vsprintf+0x6cc>
    9734:	e51b3038 	ldr	r3, [fp, #-56]	; 0xffffffc8
    9738:	e2832004 	add	r2, r3, #4
    973c:	e50b2038 	str	r2, [fp, #-56]	; 0xffffffc8
    9740:	e5933000 	ldr	r3, [r3]
    9744:	e50b3008 	str	r3, [fp, #-8]
    9748:	e51b1008 	ldr	r1, [fp, #-8]
    974c:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
    9750:	e58d3004 	str	r3, [sp, #4]
    9754:	e51b3024 	ldr	r3, [fp, #-36]	; 0xffffffdc
    9758:	e58d3000 	str	r3, [sp]
    975c:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
    9760:	e51b2010 	ldr	r2, [fp, #-16]
    9764:	e51b0014 	ldr	r0, [fp, #-20]	; 0xffffffec
    9768:	ebfffb39 	bl	8454 <ee_number>
    976c:	e50b0014 	str	r0, [fp, #-20]	; 0xffffffec
    9770:	e51b3034 	ldr	r3, [fp, #-52]	; 0xffffffcc
    9774:	e2833001 	add	r3, r3, #1
    9778:	e50b3034 	str	r3, [fp, #-52]	; 0xffffffcc
    977c:	e51b3034 	ldr	r3, [fp, #-52]	; 0xffffffcc
    9780:	e5d33000 	ldrb	r3, [r3]
    9784:	e3530000 	cmp	r3, #0
    9788:	1afffe44 	bne	90a0 <ee_vsprintf+0x24>
    978c:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
    9790:	e3a02000 	mov	r2, #0
    9794:	e5c32000 	strb	r2, [r3]
    9798:	e51b2014 	ldr	r2, [fp, #-20]	; 0xffffffec
    979c:	e51b3030 	ldr	r3, [fp, #-48]	; 0xffffffd0
    97a0:	e0423003 	sub	r3, r2, r3
    97a4:	e1a00003 	mov	r0, r3
    97a8:	e24bd004 	sub	sp, fp, #4
    97ac:	e8bd8800 	pop	{fp, pc}
    97b0:	0002e000 	.word	0x0002e000

000097b4 <LogWrite>:
    97b4:	e92d000c 	push	{r2, r3}
    97b8:	e92d4070 	push	{r4, r5, r6, lr}
    97bc:	e24dde4b 	sub	sp, sp, #1200	; 0x4b0
    97c0:	e24dd008 	sub	sp, sp, #8
    97c4:	e1a04001 	mov	r4, r1
    97c8:	e59f1198 	ldr	r1, [pc, #408]	; 9968 <LogWrite+0x1b4>
    97cc:	e1a06000 	mov	r6, r0
    97d0:	eb008d95 	bl	2ce2c <strstr>
    97d4:	e3500000 	cmp	r0, #0
    97d8:	0a000020 	beq	9860 <LogWrite+0xac>
    97dc:	e3a04005 	mov	r4, #5
    97e0:	e59f3184 	ldr	r3, [pc, #388]	; 996c <LogWrite+0x1b8>
    97e4:	e5933000 	ldr	r3, [r3]
    97e8:	e1530004 	cmp	r3, r4
    97ec:	2a000004 	bcs	9804 <LogWrite+0x50>
    97f0:	e28dde4b 	add	sp, sp, #1200	; 0x4b0
    97f4:	e28dd008 	add	sp, sp, #8
    97f8:	e8bd4070 	pop	{r4, r5, r6, lr}
    97fc:	e28dd008 	add	sp, sp, #8
    9800:	e12fff1e 	bx	lr
    9804:	e28d3d13 	add	r3, sp, #1216	; 0x4c0
    9808:	e283300c 	add	r3, r3, #12
    980c:	e59f515c 	ldr	r5, [pc, #348]	; 9970 <LogWrite+0x1bc>
    9810:	e1a02003 	mov	r2, r3
    9814:	e28d0008 	add	r0, sp, #8
    9818:	e59d14c8 	ldr	r1, [sp, #1224]	; 0x4c8
    981c:	e58d3004 	str	r3, [sp, #4]
    9820:	ebfffe15 	bl	907c <ee_vsprintf>
    9824:	e5953000 	ldr	r3, [r5]
    9828:	e3530000 	cmp	r3, #0
    982c:	0affffef 	beq	97f0 <LogWrite+0x3c>
    9830:	e59f013c 	ldr	r0, [pc, #316]	; 9974 <LogWrite+0x1c0>
    9834:	e2444001 	sub	r4, r4, #1
    9838:	e12fff33 	blx	r3
    983c:	e5953000 	ldr	r3, [r5]
    9840:	e3540004 	cmp	r4, #4
    9844:	979ff104 	ldrls	pc, [pc, r4, lsl #2]
    9848:	ea000041 	b	9954 <LogWrite+0x1a0>
    984c:	00009940 	.word	0x00009940
    9850:	0000992c 	.word	0x0000992c
    9854:	00009918 	.word	0x00009918
    9858:	00009904 	.word	0x00009904
    985c:	0000988c 	.word	0x0000988c
    9860:	e59f1110 	ldr	r1, [pc, #272]	; 9978 <LogWrite+0x1c4>
    9864:	e1a00006 	mov	r0, r6
    9868:	eb008d6f 	bl	2ce2c <strstr>
    986c:	e3500000 	cmp	r0, #0
    9870:	1affffd9 	bne	97dc <LogWrite+0x28>
    9874:	e59f1100 	ldr	r1, [pc, #256]	; 997c <LogWrite+0x1c8>
    9878:	e1a00006 	mov	r0, r6
    987c:	eb008d6a 	bl	2ce2c <strstr>
    9880:	e3500000 	cmp	r0, #0
    9884:	13a04005 	movne	r4, #5
    9888:	eaffffd4 	b	97e0 <LogWrite+0x2c>
    988c:	e3530000 	cmp	r3, #0
    9890:	0affffd6 	beq	97f0 <LogWrite+0x3c>
    9894:	e59f00e4 	ldr	r0, [pc, #228]	; 9980 <LogWrite+0x1cc>
    9898:	e12fff33 	blx	r3
    989c:	e5953000 	ldr	r3, [r5]
    98a0:	e3530000 	cmp	r3, #0
    98a4:	0a000011 	beq	98f0 <LogWrite+0x13c>
    98a8:	e59f00d4 	ldr	r0, [pc, #212]	; 9984 <LogWrite+0x1d0>
    98ac:	e12fff33 	blx	r3
    98b0:	e5953000 	ldr	r3, [r5]
    98b4:	e3530000 	cmp	r3, #0
    98b8:	0affffcc 	beq	97f0 <LogWrite+0x3c>
    98bc:	e1a00006 	mov	r0, r6
    98c0:	e12fff33 	blx	r3
    98c4:	e5953000 	ldr	r3, [r5]
    98c8:	e3530000 	cmp	r3, #0
    98cc:	0affffc7 	beq	97f0 <LogWrite+0x3c>
    98d0:	e59f00b0 	ldr	r0, [pc, #176]	; 9988 <LogWrite+0x1d4>
    98d4:	e12fff33 	blx	r3
    98d8:	e5953000 	ldr	r3, [r5]
    98dc:	e3530000 	cmp	r3, #0
    98e0:	0affffc2 	beq	97f0 <LogWrite+0x3c>
    98e4:	e28d0008 	add	r0, sp, #8
    98e8:	e12fff33 	blx	r3
    98ec:	e5953000 	ldr	r3, [r5]
    98f0:	e3530000 	cmp	r3, #0
    98f4:	0affffbd 	beq	97f0 <LogWrite+0x3c>
    98f8:	e59f008c 	ldr	r0, [pc, #140]	; 998c <LogWrite+0x1d8>
    98fc:	e12fff33 	blx	r3
    9900:	eaffffba 	b	97f0 <LogWrite+0x3c>
    9904:	e3530000 	cmp	r3, #0
    9908:	0affffb8 	beq	97f0 <LogWrite+0x3c>
    990c:	e59f007c 	ldr	r0, [pc, #124]	; 9990 <LogWrite+0x1dc>
    9910:	e12fff33 	blx	r3
    9914:	eaffffe0 	b	989c <LogWrite+0xe8>
    9918:	e3530000 	cmp	r3, #0
    991c:	0affffb3 	beq	97f0 <LogWrite+0x3c>
    9920:	e59f006c 	ldr	r0, [pc, #108]	; 9994 <LogWrite+0x1e0>
    9924:	e12fff33 	blx	r3
    9928:	eaffffdb 	b	989c <LogWrite+0xe8>
    992c:	e3530000 	cmp	r3, #0
    9930:	0affffae 	beq	97f0 <LogWrite+0x3c>
    9934:	e59f005c 	ldr	r0, [pc, #92]	; 9998 <LogWrite+0x1e4>
    9938:	e12fff33 	blx	r3
    993c:	eaffffd6 	b	989c <LogWrite+0xe8>
    9940:	e3530000 	cmp	r3, #0
    9944:	0affffa9 	beq	97f0 <LogWrite+0x3c>
    9948:	e59f004c 	ldr	r0, [pc, #76]	; 999c <LogWrite+0x1e8>
    994c:	e12fff33 	blx	r3
    9950:	eaffffd1 	b	989c <LogWrite+0xe8>
    9954:	e3530000 	cmp	r3, #0
    9958:	0affffa4 	beq	97f0 <LogWrite+0x3c>
    995c:	e59f003c 	ldr	r0, [pc, #60]	; 99a0 <LogWrite+0x1ec>
    9960:	e12fff33 	blx	r3
    9964:	eaffffcc 	b	989c <LogWrite+0xe8>
    9968:	0002e008 	.word	0x0002e008
    996c:	00035a3c 	.word	0x00035a3c
    9970:	00042934 	.word	0x00042934
    9974:	0002e020 	.word	0x0002e020
    9978:	0002e010 	.word	0x0002e010
    997c:	0002e018 	.word	0x0002e018
    9980:	0002e044 	.word	0x0002e044
    9984:	0002e054 	.word	0x0002e054
    9988:	0002e058 	.word	0x0002e058
    998c:	0002e05c 	.word	0x0002e05c
    9990:	0002e03c 	.word	0x0002e03c
    9994:	0002e034 	.word	0x0002e034
    9998:	0002e02c 	.word	0x0002e02c
    999c:	0002e024 	.word	0x0002e024
    99a0:	0002e04c 	.word	0x0002e04c

000099a4 <LogSetLevel>:
    99a4:	e59f3004 	ldr	r3, [pc, #4]	; 99b0 <LogSetLevel+0xc>
    99a8:	e5830000 	str	r0, [r3]
    99ac:	e12fff1e 	bx	lr
    99b0:	00035a3c 	.word	0x00035a3c

000099b4 <ee_sprintf>:
    99b4:	e92d000e 	push	{r1, r2, r3}
    99b8:	e92d4010 	push	{r4, lr}
    99bc:	e1a04000 	mov	r4, r0
    99c0:	e24dd00c 	sub	sp, sp, #12
    99c4:	e28d3018 	add	r3, sp, #24
    99c8:	e1a02003 	mov	r2, r3
    99cc:	e59d1014 	ldr	r1, [sp, #20]
    99d0:	e58d3004 	str	r3, [sp, #4]
    99d4:	ebfffda8 	bl	907c <ee_vsprintf>
    99d8:	e1a00004 	mov	r0, r4
    99dc:	eb008b6e 	bl	2c79c <strlen>
    99e0:	e28dd00c 	add	sp, sp, #12
    99e4:	e8bd4010 	pop	{r4, lr}
    99e8:	e28dd00c 	add	sp, sp, #12
    99ec:	e12fff1e 	bx	lr

000099f0 <ee_printf>:
    99f0:	e92d000f 	push	{r0, r1, r2, r3}
    99f4:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    99f8:	e24dde4b 	sub	sp, sp, #1200	; 0x4b0
    99fc:	e24dd00c 	sub	sp, sp, #12
    9a00:	e28d3d13 	add	r3, sp, #1216	; 0x4c0
    9a04:	e2833004 	add	r3, r3, #4
    9a08:	e1a02003 	mov	r2, r3
    9a0c:	e28d0008 	add	r0, sp, #8
    9a10:	e59d14c0 	ldr	r1, [sp, #1216]	; 0x4c0
    9a14:	e58d3004 	str	r3, [sp, #4]
    9a18:	ebfffd97 	bl	907c <ee_vsprintf>
    9a1c:	e59f3024 	ldr	r3, [pc, #36]	; 9a48 <ee_printf+0x58>
    9a20:	e5933000 	ldr	r3, [r3]
    9a24:	e3530000 	cmp	r3, #0
    9a28:	0a000001 	beq	9a34 <ee_printf+0x44>
    9a2c:	e28d0008 	add	r0, sp, #8
    9a30:	e12fff33 	blx	r3
    9a34:	e28dde4b 	add	sp, sp, #1200	; 0x4b0
    9a38:	e28dd00c 	add	sp, sp, #12
    9a3c:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
    9a40:	e28dd010 	add	sp, sp, #16
    9a44:	e12fff1e 	bx	lr
    9a48:	00042934 	.word	0x00042934

00009a4c <ee_dump_mem>:
    9a4c:	e0413000 	sub	r3, r1, r0
    9a50:	e3530000 	cmp	r3, #0
    9a54:	da000019 	ble	9ac0 <ee_dump_mem+0x74>
    9a58:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    9a5c:	e1a05000 	mov	r5, r0
    9a60:	e1a07001 	mov	r7, r1
    9a64:	e3a04000 	mov	r4, #0
    9a68:	e59f6058 	ldr	r6, [pc, #88]	; 9ac8 <ee_dump_mem+0x7c>
    9a6c:	e286800c 	add	r8, r6, #12
    9a70:	e2869008 	add	r9, r6, #8
    9a74:	e2844001 	add	r4, r4, #1
    9a78:	e4d51001 	ldrb	r1, [r5], #1
    9a7c:	e1a00006 	mov	r0, r6
    9a80:	ebffffda 	bl	99f0 <ee_printf>
    9a84:	e3540010 	cmp	r4, #16
    9a88:	0a000006 	beq	9aa8 <ee_dump_mem+0x5c>
    9a8c:	e1a00008 	mov	r0, r8
    9a90:	ebffffd6 	bl	99f0 <ee_printf>
    9a94:	e1570005 	cmp	r7, r5
    9a98:	1afffff5 	bne	9a74 <ee_dump_mem+0x28>
    9a9c:	e8bd47f0 	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
    9aa0:	e59f0024 	ldr	r0, [pc, #36]	; 9acc <ee_dump_mem+0x80>
    9aa4:	eaffffd1 	b	99f0 <ee_printf>
    9aa8:	e1a00009 	mov	r0, r9
    9aac:	ebffffcf 	bl	99f0 <ee_printf>
    9ab0:	e1570005 	cmp	r7, r5
    9ab4:	0afffff8 	beq	9a9c <ee_dump_mem+0x50>
    9ab8:	e3a04000 	mov	r4, #0
    9abc:	eaffffec 	b	9a74 <ee_dump_mem+0x28>
    9ac0:	e59f0004 	ldr	r0, [pc, #4]	; 9acc <ee_dump_mem+0x80>
    9ac4:	eaffffc9 	b	99f0 <ee_printf>
    9ac8:	0002e060 	.word	0x0002e060
    9acc:	0002e068 	.word	0x0002e068

00009ad0 <fb_init>:
    9ad0:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    9ad4:	e3a06008 	mov	r6, #8
    9ad8:	e3a05000 	mov	r5, #0
    9adc:	e3a0e020 	mov	lr, #32
    9ae0:	e24dde42 	sub	sp, sp, #1056	; 0x420
    9ae4:	e28d401f 	add	r4, sp, #31
    9ae8:	e3c4400f 	bic	r4, r4, #15
    9aec:	e59fc22c 	ldr	ip, [pc, #556]	; 9d20 <fb_init+0x250>
    9af0:	e1a0a000 	mov	sl, r0
    9af4:	e1a09001 	mov	r9, r1
    9af8:	e1a00006 	mov	r0, r6
    9afc:	e1a01004 	mov	r1, r4
    9b00:	e584e000 	str	lr, [r4]
    9b04:	e1a08002 	mov	r8, r2
    9b08:	e5845004 	str	r5, [r4, #4]
    9b0c:	e1a07003 	mov	r7, r3
    9b10:	e584c008 	str	ip, [r4, #8]
    9b14:	e584600c 	str	r6, [r4, #12]
    9b18:	e5845010 	str	r5, [r4, #16]
    9b1c:	e5845014 	str	r5, [r4, #20]
    9b20:	e5845018 	str	r5, [r4, #24]
    9b24:	e584501c 	str	r5, [r4, #28]
    9b28:	eb000580 	bl	b130 <postman_send>
    9b2c:	e35000c0 	cmp	r0, #192	; 0xc0
    9b30:	0a000002 	beq	9b40 <fb_init+0x70>
    9b34:	e3a00002 	mov	r0, #2
    9b38:	e28dde42 	add	sp, sp, #1056	; 0x420
    9b3c:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    9b40:	e28d300c 	add	r3, sp, #12
    9b44:	e1a01003 	mov	r1, r3
    9b48:	e1a00006 	mov	r0, r6
    9b4c:	e58d3004 	str	r3, [sp, #4]
    9b50:	eb000541 	bl	b05c <postman_recv>
    9b54:	e35000c0 	cmp	r0, #192	; 0xc0
    9b58:	1afffff5 	bne	9b34 <fb_init+0x64>
    9b5c:	e5943004 	ldr	r3, [r4, #4]
    9b60:	e3530102 	cmp	r3, #-2147483648	; 0x80000000
    9b64:	13a00003 	movne	r0, #3
    9b68:	1afffff2 	bne	9b38 <fb_init+0x68>
    9b6c:	e3a03004 	mov	r3, #4
    9b70:	e3a0c010 	mov	ip, #16
    9b74:	e3a02058 	mov	r2, #88	; 0x58
    9b78:	e59f11a4 	ldr	r1, [pc, #420]	; 9d24 <fb_init+0x254>
    9b7c:	e59f01a4 	ldr	r0, [pc, #420]	; 9d28 <fb_init+0x258>
    9b80:	e5845004 	str	r5, [r4, #4]
    9b84:	e59de440 	ldr	lr, [sp, #1088]	; 0x440
    9b88:	e5841008 	str	r1, [r4, #8]
    9b8c:	e584600c 	str	r6, [r4, #12]
    9b90:	e2811001 	add	r1, r1, #1
    9b94:	e5846010 	str	r6, [r4, #16]
    9b98:	e584a014 	str	sl, [r4, #20]
    9b9c:	e5849018 	str	r9, [r4, #24]
    9ba0:	e59f9184 	ldr	r9, [pc, #388]	; 9d2c <fb_init+0x25c>
    9ba4:	e584101c 	str	r1, [r4, #28]
    9ba8:	e5846020 	str	r6, [r4, #32]
    9bac:	e1a01004 	mov	r1, r4
    9bb0:	e5846024 	str	r6, [r4, #36]	; 0x24
    9bb4:	e5848028 	str	r8, [r4, #40]	; 0x28
    9bb8:	e584702c 	str	r7, [r4, #44]	; 0x2c
    9bbc:	e5840030 	str	r0, [r4, #48]	; 0x30
    9bc0:	e1a00006 	mov	r0, r6
    9bc4:	e5843034 	str	r3, [r4, #52]	; 0x34
    9bc8:	e5843038 	str	r3, [r4, #56]	; 0x38
    9bcc:	e584e03c 	str	lr, [r4, #60]	; 0x3c
    9bd0:	e5849040 	str	r9, [r4, #64]	; 0x40
    9bd4:	e5846044 	str	r6, [r4, #68]	; 0x44
    9bd8:	e5843048 	str	r3, [r4, #72]	; 0x48
    9bdc:	e584c04c 	str	ip, [r4, #76]	; 0x4c
    9be0:	e5845050 	str	r5, [r4, #80]	; 0x50
    9be4:	e5845054 	str	r5, [r4, #84]	; 0x54
    9be8:	e5842000 	str	r2, [r4]
    9bec:	eb00054f 	bl	b130 <postman_send>
    9bf0:	e35000c0 	cmp	r0, #192	; 0xc0
    9bf4:	1affffce 	bne	9b34 <fb_init+0x64>
    9bf8:	e1a00006 	mov	r0, r6
    9bfc:	e59d1004 	ldr	r1, [sp, #4]
    9c00:	eb000515 	bl	b05c <postman_recv>
    9c04:	e35000c0 	cmp	r0, #192	; 0xc0
    9c08:	1affffc9 	bne	9b34 <fb_init+0x64>
    9c0c:	e5943004 	ldr	r3, [r4, #4]
    9c10:	e3530102 	cmp	r3, #-2147483648	; 0x80000000
    9c14:	03a03002 	moveq	r3, #2
    9c18:	0a000005 	beq	9c34 <fb_init+0x164>
    9c1c:	ea00003d 	b	9d18 <fb_init+0x248>
    9c20:	e7942101 	ldr	r2, [r4, r1, lsl #2]
    9c24:	e0833122 	add	r3, r3, r2, lsr #2
    9c28:	e2833003 	add	r3, r3, #3
    9c2c:	e3530016 	cmp	r3, #22
    9c30:	8a000038 	bhi	9d18 <fb_init+0x248>
    9c34:	e7942103 	ldr	r2, [r4, r3, lsl #2]
    9c38:	e2831001 	add	r1, r3, #1
    9c3c:	e3520000 	cmp	r2, #0
    9c40:	11520009 	cmpne	r2, r9
    9c44:	1afffff5 	bne	9c20 <fb_init+0x150>
    9c48:	e2831002 	add	r1, r3, #2
    9c4c:	e7941101 	ldr	r1, [r4, r1, lsl #2]
    9c50:	e58d200c 	str	r2, [sp, #12]
    9c54:	e3510122 	cmp	r1, #-2147483640	; 0x80000008
    9c58:	1a00002e 	bne	9d18 <fb_init+0x248>
    9c5c:	e2832003 	add	r2, r3, #3
    9c60:	e7942102 	ldr	r2, [r4, r2, lsl #2]
    9c64:	e2833004 	add	r3, r3, #4
    9c68:	e16f0f12 	clz	r0, r2
    9c6c:	e7943103 	ldr	r3, [r4, r3, lsl #2]
    9c70:	e1a002a0 	lsr	r0, r0, #5
    9c74:	e3530000 	cmp	r3, #0
    9c78:	11a05000 	movne	r5, r0
    9c7c:	03a05001 	moveq	r5, #1
    9c80:	e59d1448 	ldr	r1, [sp, #1096]	; 0x448
    9c84:	e3550000 	cmp	r5, #0
    9c88:	e5813000 	str	r3, [r1]
    9c8c:	13a00005 	movne	r0, #5
    9c90:	1affffa8 	bne	9b38 <fb_init+0x68>
    9c94:	e3a0101c 	mov	r1, #28
    9c98:	e3a03004 	mov	r3, #4
    9c9c:	e59d0444 	ldr	r0, [sp, #1092]	; 0x444
    9ca0:	e5841000 	str	r1, [r4]
    9ca4:	e5802000 	str	r2, [r0]
    9ca8:	e59f2080 	ldr	r2, [pc, #128]	; 9d30 <fb_init+0x260>
    9cac:	e1a01004 	mov	r1, r4
    9cb0:	e3a00008 	mov	r0, #8
    9cb4:	e5845004 	str	r5, [r4, #4]
    9cb8:	e5842008 	str	r2, [r4, #8]
    9cbc:	e584300c 	str	r3, [r4, #12]
    9cc0:	e5845010 	str	r5, [r4, #16]
    9cc4:	e5845014 	str	r5, [r4, #20]
    9cc8:	e5845018 	str	r5, [r4, #24]
    9ccc:	eb000517 	bl	b130 <postman_send>
    9cd0:	e35000c0 	cmp	r0, #192	; 0xc0
    9cd4:	1affff96 	bne	9b34 <fb_init+0x64>
    9cd8:	e59d1004 	ldr	r1, [sp, #4]
    9cdc:	e3a00008 	mov	r0, #8
    9ce0:	eb0004dd 	bl	b05c <postman_recv>
    9ce4:	e35000c0 	cmp	r0, #192	; 0xc0
    9ce8:	1affff91 	bne	9b34 <fb_init+0x64>
    9cec:	e5943010 	ldr	r3, [r4, #16]
    9cf0:	e3530112 	cmp	r3, #-2147483644	; 0x80000004
    9cf4:	1a000005 	bne	9d10 <fb_init+0x240>
    9cf8:	e5943014 	ldr	r3, [r4, #20]
    9cfc:	e59d244c 	ldr	r2, [sp, #1100]	; 0x44c
    9d00:	e3530000 	cmp	r3, #0
    9d04:	e5823000 	str	r3, [r2]
    9d08:	11a00005 	movne	r0, r5
    9d0c:	1affff89 	bne	9b38 <fb_init+0x68>
    9d10:	e3a00006 	mov	r0, #6
    9d14:	eaffff87 	b	9b38 <fb_init+0x68>
    9d18:	e3a00004 	mov	r0, #4
    9d1c:	eaffff85 	b	9b38 <fb_init+0x68>
    9d20:	00040003 	.word	0x00040003
    9d24:	00048003 	.word	0x00048003
    9d28:	00048005 	.word	0x00048005
    9d2c:	00040001 	.word	0x00040001
    9d30:	00040008 	.word	0x00040008

00009d34 <fb_release>:
    9d34:	e3a03000 	mov	r3, #0
    9d38:	e3a02018 	mov	r2, #24
    9d3c:	e92d4010 	push	{r4, lr}
    9d40:	e24dde41 	sub	sp, sp, #1040	; 0x410
    9d44:	e24dd008 	sub	sp, sp, #8
    9d48:	e59f006c 	ldr	r0, [pc, #108]	; 9dbc <fb_release+0x88>
    9d4c:	e28d4017 	add	r4, sp, #23
    9d50:	e3c4400f 	bic	r4, r4, #15
    9d54:	e5843004 	str	r3, [r4, #4]
    9d58:	e1a01004 	mov	r1, r4
    9d5c:	e5840008 	str	r0, [r4, #8]
    9d60:	e3a00008 	mov	r0, #8
    9d64:	e584300c 	str	r3, [r4, #12]
    9d68:	e5843010 	str	r3, [r4, #16]
    9d6c:	e5843014 	str	r3, [r4, #20]
    9d70:	e5842000 	str	r2, [r4]
    9d74:	eb0004ed 	bl	b130 <postman_send>
    9d78:	e35000c0 	cmp	r0, #192	; 0xc0
    9d7c:	0a000003 	beq	9d90 <fb_release+0x5c>
    9d80:	e3a00002 	mov	r0, #2
    9d84:	e28dde41 	add	sp, sp, #1040	; 0x410
    9d88:	e28dd008 	add	sp, sp, #8
    9d8c:	e8bd8010 	pop	{r4, pc}
    9d90:	e28d1004 	add	r1, sp, #4
    9d94:	e3a00008 	mov	r0, #8
    9d98:	eb0004af 	bl	b05c <postman_recv>
    9d9c:	e35000c0 	cmp	r0, #192	; 0xc0
    9da0:	1afffff6 	bne	9d80 <fb_release+0x4c>
    9da4:	e5940004 	ldr	r0, [r4, #4]
    9da8:	e2900102 	adds	r0, r0, #-2147483648	; 0x80000000
    9dac:	13a00001 	movne	r0, #1
    9db0:	e28dde41 	add	sp, sp, #1040	; 0x410
    9db4:	e28dd008 	add	sp, sp, #8
    9db8:	e8bd8010 	pop	{r4, pc}
    9dbc:	00048001 	.word	0x00048001

00009dc0 <fb_set_grayscale_palette>:
    9dc0:	e3a02000 	mov	r2, #0
    9dc4:	e3a00004 	mov	r0, #4
    9dc8:	e3a01c01 	mov	r1, #256	; 0x100
    9dcc:	e1a03002 	mov	r3, r2
    9dd0:	e92d4010 	push	{r4, lr}
    9dd4:	e24dd901 	sub	sp, sp, #16384	; 0x4000
    9dd8:	e24dd018 	sub	sp, sp, #24
    9ddc:	e28d4017 	add	r4, sp, #23
    9de0:	e59fc09c 	ldr	ip, [pc, #156]	; 9e84 <fb_set_grayscale_palette+0xc4>
    9de4:	e3c4400f 	bic	r4, r4, #15
    9de8:	e5842004 	str	r2, [r4, #4]
    9dec:	e584c008 	str	ip, [r4, #8]
    9df0:	e584000c 	str	r0, [r4, #12]
    9df4:	e59f008c 	ldr	r0, [pc, #140]	; 9e88 <fb_set_grayscale_palette+0xc8>
    9df8:	e5840010 	str	r0, [r4, #16]
    9dfc:	e5842014 	str	r2, [r4, #20]
    9e00:	e5841018 	str	r1, [r4, #24]
    9e04:	e38324ff 	orr	r2, r3, #-16777216	; 0xff000000
    9e08:	e1822803 	orr	r2, r2, r3, lsl #16
    9e0c:	e1822403 	orr	r2, r2, r3, lsl #8
    9e10:	e2831007 	add	r1, r3, #7
    9e14:	e2833001 	add	r3, r3, #1
    9e18:	e3530c01 	cmp	r3, #256	; 0x100
    9e1c:	e7842101 	str	r2, [r4, r1, lsl #2]
    9e20:	1afffff7 	bne	9e04 <fb_set_grayscale_palette+0x44>
    9e24:	e3a02000 	mov	r2, #0
    9e28:	e3a03e42 	mov	r3, #1056	; 0x420
    9e2c:	e1a01004 	mov	r1, r4
    9e30:	e3a00008 	mov	r0, #8
    9e34:	e584241c 	str	r2, [r4, #1052]	; 0x41c
    9e38:	e5843000 	str	r3, [r4]
    9e3c:	eb0004bb 	bl	b130 <postman_send>
    9e40:	e35000c0 	cmp	r0, #192	; 0xc0
    9e44:	0a000003 	beq	9e58 <fb_set_grayscale_palette+0x98>
    9e48:	e3a00002 	mov	r0, #2
    9e4c:	e28dd901 	add	sp, sp, #16384	; 0x4000
    9e50:	e28dd018 	add	sp, sp, #24
    9e54:	e8bd8010 	pop	{r4, pc}
    9e58:	e28d1004 	add	r1, sp, #4
    9e5c:	e3a00008 	mov	r0, #8
    9e60:	eb00047d 	bl	b05c <postman_recv>
    9e64:	e35000c0 	cmp	r0, #192	; 0xc0
    9e68:	1afffff6 	bne	9e48 <fb_set_grayscale_palette+0x88>
    9e6c:	e5940004 	ldr	r0, [r4, #4]
    9e70:	e2900102 	adds	r0, r0, #-2147483648	; 0x80000000
    9e74:	13a00001 	movne	r0, #1
    9e78:	e28dd901 	add	sp, sp, #16384	; 0x4000
    9e7c:	e28dd018 	add	sp, sp, #24
    9e80:	e8bd8010 	pop	{r4, pc}
    9e84:	0004800b 	.word	0x0004800b
    9e88:	00000408 	.word	0x00000408

00009e8c <fb_set_xterm_palette>:
    9e8c:	e3a03000 	mov	r3, #0
    9e90:	e3a00004 	mov	r0, #4
    9e94:	e3a02c01 	mov	r2, #256	; 0x100
    9e98:	e3a01007 	mov	r1, #7
    9e9c:	e92d4010 	push	{r4, lr}
    9ea0:	e24dd901 	sub	sp, sp, #16384	; 0x4000
    9ea4:	e24dd018 	sub	sp, sp, #24
    9ea8:	e59fc0b8 	ldr	ip, [pc, #184]	; 9f68 <fb_set_xterm_palette+0xdc>
    9eac:	e28d4017 	add	r4, sp, #23
    9eb0:	e3c4400f 	bic	r4, r4, #15
    9eb4:	e5843004 	str	r3, [r4, #4]
    9eb8:	e584c008 	str	ip, [r4, #8]
    9ebc:	e584000c 	str	r0, [r4, #12]
    9ec0:	e59f00a4 	ldr	r0, [pc, #164]	; 9f6c <fb_set_xterm_palette+0xe0>
    9ec4:	e59fc0a4 	ldr	ip, [pc, #164]	; 9f70 <fb_set_xterm_palette+0xe4>
    9ec8:	e59fe0a4 	ldr	lr, [pc, #164]	; 9f74 <fb_set_xterm_palette+0xe8>
    9ecc:	e5840010 	str	r0, [r4, #16]
    9ed0:	e5843014 	str	r3, [r4, #20]
    9ed4:	e5842018 	str	r2, [r4, #24]
    9ed8:	e5bc2004 	ldr	r2, [ip, #4]!
    9edc:	e1a03802 	lsl	r3, r2, #16
    9ee0:	e2020cff 	and	r0, r2, #65280	; 0xff00
    9ee4:	e20338ff 	and	r3, r3, #16711680	; 0xff0000
    9ee8:	e38004ff 	orr	r0, r0, #-16777216	; 0xff000000
    9eec:	e1833000 	orr	r3, r3, r0
    9ef0:	e1a02402 	lsl	r2, r2, #8
    9ef4:	e1833c22 	orr	r3, r3, r2, lsr #24
    9ef8:	e7843101 	str	r3, [r4, r1, lsl #2]
    9efc:	e2811001 	add	r1, r1, #1
    9f00:	e151000e 	cmp	r1, lr
    9f04:	1afffff3 	bne	9ed8 <fb_set_xterm_palette+0x4c>
    9f08:	e3a02000 	mov	r2, #0
    9f0c:	e3a03e42 	mov	r3, #1056	; 0x420
    9f10:	e1a01004 	mov	r1, r4
    9f14:	e3a00008 	mov	r0, #8
    9f18:	e584241c 	str	r2, [r4, #1052]	; 0x41c
    9f1c:	e5843000 	str	r3, [r4]
    9f20:	eb000482 	bl	b130 <postman_send>
    9f24:	e35000c0 	cmp	r0, #192	; 0xc0
    9f28:	0a000003 	beq	9f3c <fb_set_xterm_palette+0xb0>
    9f2c:	e3a00002 	mov	r0, #2
    9f30:	e28dd901 	add	sp, sp, #16384	; 0x4000
    9f34:	e28dd018 	add	sp, sp, #24
    9f38:	e8bd8010 	pop	{r4, pc}
    9f3c:	e28d1004 	add	r1, sp, #4
    9f40:	e3a00008 	mov	r0, #8
    9f44:	eb000444 	bl	b05c <postman_recv>
    9f48:	e35000c0 	cmp	r0, #192	; 0xc0
    9f4c:	1afffff6 	bne	9f2c <fb_set_xterm_palette+0xa0>
    9f50:	e5940004 	ldr	r0, [r4, #4]
    9f54:	e2900102 	adds	r0, r0, #-2147483648	; 0x80000000
    9f58:	13a00001 	movne	r0, #1
    9f5c:	e28dd901 	add	sp, sp, #16384	; 0x4000
    9f60:	e28dd018 	add	sp, sp, #24
    9f64:	e8bd8010 	pop	{r4, pc}
    9f68:	0004800b 	.word	0x0004800b
    9f6c:	00000408 	.word	0x00000408
    9f70:	0002e0c4 	.word	0x0002e0c4
    9f74:	00000107 	.word	0x00000107

00009f78 <fb_blank_screen>:
    9f78:	e3a03000 	mov	r3, #0
    9f7c:	e3a02004 	mov	r2, #4
    9f80:	e3a0c01c 	mov	ip, #28
    9f84:	e92d4010 	push	{r4, lr}
    9f88:	e24dde41 	sub	sp, sp, #1040	; 0x410
    9f8c:	e24dd008 	sub	sp, sp, #8
    9f90:	e59f1070 	ldr	r1, [pc, #112]	; a008 <fb_blank_screen+0x90>
    9f94:	e28d4017 	add	r4, sp, #23
    9f98:	e3c4400f 	bic	r4, r4, #15
    9f9c:	e5843004 	str	r3, [r4, #4]
    9fa0:	e5841008 	str	r1, [r4, #8]
    9fa4:	e584200c 	str	r2, [r4, #12]
    9fa8:	e1a01004 	mov	r1, r4
    9fac:	e5842010 	str	r2, [r4, #16]
    9fb0:	e5840014 	str	r0, [r4, #20]
    9fb4:	e3a00008 	mov	r0, #8
    9fb8:	e5843018 	str	r3, [r4, #24]
    9fbc:	e584c000 	str	ip, [r4]
    9fc0:	eb00045a 	bl	b130 <postman_send>
    9fc4:	e35000c0 	cmp	r0, #192	; 0xc0
    9fc8:	0a000003 	beq	9fdc <fb_blank_screen+0x64>
    9fcc:	e3a00002 	mov	r0, #2
    9fd0:	e28dde41 	add	sp, sp, #1040	; 0x410
    9fd4:	e28dd008 	add	sp, sp, #8
    9fd8:	e8bd8010 	pop	{r4, pc}
    9fdc:	e28d1004 	add	r1, sp, #4
    9fe0:	e3a00008 	mov	r0, #8
    9fe4:	eb00041c 	bl	b05c <postman_recv>
    9fe8:	e35000c0 	cmp	r0, #192	; 0xc0
    9fec:	1afffff6 	bne	9fcc <fb_blank_screen+0x54>
    9ff0:	e5940004 	ldr	r0, [r4, #4]
    9ff4:	e2900102 	adds	r0, r0, #-2147483648	; 0x80000000
    9ff8:	13a00001 	movne	r0, #1
    9ffc:	e28dde41 	add	sp, sp, #1040	; 0x410
    a000:	e28dd008 	add	sp, sp, #8
    a004:	e8bd8010 	pop	{r4, pc}
    a008:	00040002 	.word	0x00040002

0000a00c <fb_set_depth>:
    a00c:	e92d4070 	push	{r4, r5, r6, lr}
    a010:	e3a03004 	mov	r3, #4
    a014:	e3a05000 	mov	r5, #0
    a018:	e3a0201c 	mov	r2, #28
    a01c:	e24dde41 	sub	sp, sp, #1040	; 0x410
    a020:	e24dd008 	sub	sp, sp, #8
    a024:	e1a06000 	mov	r6, r0
    a028:	e28d4017 	add	r4, sp, #23
    a02c:	e5900000 	ldr	r0, [r0]
    a030:	e59f1058 	ldr	r1, [pc, #88]	; a090 <fb_set_depth+0x84>
    a034:	e3c4400f 	bic	r4, r4, #15
    a038:	e5845004 	str	r5, [r4, #4]
    a03c:	e5841008 	str	r1, [r4, #8]
    a040:	e584300c 	str	r3, [r4, #12]
    a044:	e1a01004 	mov	r1, r4
    a048:	e5843010 	str	r3, [r4, #16]
    a04c:	e5840014 	str	r0, [r4, #20]
    a050:	e3a00008 	mov	r0, #8
    a054:	e5845018 	str	r5, [r4, #24]
    a058:	e5842000 	str	r2, [r4]
    a05c:	eb000433 	bl	b130 <postman_send>
    a060:	e28d1004 	add	r1, sp, #4
    a064:	e3a00008 	mov	r0, #8
    a068:	eb0003fb 	bl	b05c <postman_recv>
    a06c:	e5943004 	ldr	r3, [r4, #4]
    a070:	e3530102 	cmp	r3, #-2147483648	; 0x80000000
    a074:	01a00005 	moveq	r0, r5
    a078:	13a00001 	movne	r0, #1
    a07c:	05943014 	ldreq	r3, [r4, #20]
    a080:	05863000 	streq	r3, [r6]
    a084:	e28dde41 	add	sp, sp, #1040	; 0x410
    a088:	e28dd008 	add	sp, sp, #8
    a08c:	e8bd8070 	pop	{r4, r5, r6, pc}
    a090:	00048005 	.word	0x00048005

0000a094 <fb_get_pitch>:
    a094:	e92d4070 	push	{r4, r5, r6, lr}
    a098:	e3a05000 	mov	r5, #0
    a09c:	e3a0301c 	mov	r3, #28
    a0a0:	e3a02004 	mov	r2, #4
    a0a4:	e24dde41 	sub	sp, sp, #1040	; 0x410
    a0a8:	e24dd008 	sub	sp, sp, #8
    a0ac:	e59f106c 	ldr	r1, [pc, #108]	; a120 <fb_get_pitch+0x8c>
    a0b0:	e28d4017 	add	r4, sp, #23
    a0b4:	e3c4400f 	bic	r4, r4, #15
    a0b8:	e5845004 	str	r5, [r4, #4]
    a0bc:	e1a06000 	mov	r6, r0
    a0c0:	e5841008 	str	r1, [r4, #8]
    a0c4:	e3a00008 	mov	r0, #8
    a0c8:	e1a01004 	mov	r1, r4
    a0cc:	e584200c 	str	r2, [r4, #12]
    a0d0:	e5845010 	str	r5, [r4, #16]
    a0d4:	e5845014 	str	r5, [r4, #20]
    a0d8:	e5845018 	str	r5, [r4, #24]
    a0dc:	e5843000 	str	r3, [r4]
    a0e0:	eb000412 	bl	b130 <postman_send>
    a0e4:	e28d1004 	add	r1, sp, #4
    a0e8:	e3a00008 	mov	r0, #8
    a0ec:	eb0003da 	bl	b05c <postman_recv>
    a0f0:	e5943004 	ldr	r3, [r4, #4]
    a0f4:	e3530102 	cmp	r3, #-2147483648	; 0x80000000
    a0f8:	13a00001 	movne	r0, #1
    a0fc:	1a000004 	bne	a114 <fb_get_pitch+0x80>
    a100:	e1560005 	cmp	r6, r5
    a104:	11a00005 	movne	r0, r5
    a108:	01a00006 	moveq	r0, r6
    a10c:	15943014 	ldrne	r3, [r4, #20]
    a110:	15863000 	strne	r3, [r6]
    a114:	e28dde41 	add	sp, sp, #1040	; 0x410
    a118:	e28dd008 	add	sp, sp, #8
    a11c:	e8bd8070 	pop	{r4, r5, r6, pc}
    a120:	00040008 	.word	0x00040008

0000a124 <fb_get_physical_buffer_size>:
    a124:	e92d40f0 	push	{r4, r5, r6, r7, lr}
    a128:	e3a05008 	mov	r5, #8
    a12c:	e3a03000 	mov	r3, #0
    a130:	e3a02020 	mov	r2, #32
    a134:	e24dde41 	sub	sp, sp, #1040	; 0x410
    a138:	e24dd00c 	sub	sp, sp, #12
    a13c:	e08dc005 	add	ip, sp, r5
    a140:	e28c400f 	add	r4, ip, #15
    a144:	e3c4400f 	bic	r4, r4, #15
    a148:	e59fc07c 	ldr	ip, [pc, #124]	; a1cc <fb_get_physical_buffer_size+0xa8>
    a14c:	e1a07000 	mov	r7, r0
    a150:	e1a06001 	mov	r6, r1
    a154:	e1a00005 	mov	r0, r5
    a158:	e1a01004 	mov	r1, r4
    a15c:	e5843004 	str	r3, [r4, #4]
    a160:	e584c008 	str	ip, [r4, #8]
    a164:	e584500c 	str	r5, [r4, #12]
    a168:	e5843010 	str	r3, [r4, #16]
    a16c:	e5843014 	str	r3, [r4, #20]
    a170:	e5843018 	str	r3, [r4, #24]
    a174:	e584301c 	str	r3, [r4, #28]
    a178:	e5842000 	str	r2, [r4]
    a17c:	eb0003eb 	bl	b130 <postman_send>
    a180:	e08d3005 	add	r3, sp, r5
    a184:	e2431004 	sub	r1, r3, #4
    a188:	e1a00005 	mov	r0, r5
    a18c:	eb0003b2 	bl	b05c <postman_recv>
    a190:	e5943004 	ldr	r3, [r4, #4]
    a194:	e3530102 	cmp	r3, #-2147483648	; 0x80000000
    a198:	13a00001 	movne	r0, #1
    a19c:	1a000007 	bne	a1c0 <fb_get_physical_buffer_size+0x9c>
    a1a0:	e3570000 	cmp	r7, #0
    a1a4:	15943014 	ldrne	r3, [r4, #20]
    a1a8:	15873000 	strne	r3, [r7]
    a1ac:	e3560000 	cmp	r6, #0
    a1b0:	13a00000 	movne	r0, #0
    a1b4:	01a00006 	moveq	r0, r6
    a1b8:	15943018 	ldrne	r3, [r4, #24]
    a1bc:	15863000 	strne	r3, [r6]
    a1c0:	e28dde41 	add	sp, sp, #1040	; 0x410
    a1c4:	e28dd00c 	add	sp, sp, #12
    a1c8:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
    a1cc:	00040003 	.word	0x00040003

0000a1d0 <fb_set_physical_buffer_size>:
    a1d0:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
    a1d4:	e3a06008 	mov	r6, #8
    a1d8:	e1a08000 	mov	r8, r0
    a1dc:	e1a07001 	mov	r7, r1
    a1e0:	e3a05000 	mov	r5, #0
    a1e4:	e3a03020 	mov	r3, #32
    a1e8:	e24dde41 	sub	sp, sp, #1040	; 0x410
    a1ec:	e24dd008 	sub	sp, sp, #8
    a1f0:	e08d2006 	add	r2, sp, r6
    a1f4:	e5981000 	ldr	r1, [r8]
    a1f8:	e282400f 	add	r4, r2, #15
    a1fc:	e59f006c 	ldr	r0, [pc, #108]	; a270 <fb_set_physical_buffer_size+0xa0>
    a200:	e3c4400f 	bic	r4, r4, #15
    a204:	e5972000 	ldr	r2, [r7]
    a208:	e5845004 	str	r5, [r4, #4]
    a20c:	e5840008 	str	r0, [r4, #8]
    a210:	e584600c 	str	r6, [r4, #12]
    a214:	e1a00006 	mov	r0, r6
    a218:	e5846010 	str	r6, [r4, #16]
    a21c:	e5841014 	str	r1, [r4, #20]
    a220:	e1a01004 	mov	r1, r4
    a224:	e5842018 	str	r2, [r4, #24]
    a228:	e584501c 	str	r5, [r4, #28]
    a22c:	e5843000 	str	r3, [r4]
    a230:	eb0003be 	bl	b130 <postman_send>
    a234:	e08d3006 	add	r3, sp, r6
    a238:	e2431004 	sub	r1, r3, #4
    a23c:	e1a00006 	mov	r0, r6
    a240:	eb000385 	bl	b05c <postman_recv>
    a244:	e5943004 	ldr	r3, [r4, #4]
    a248:	e3530102 	cmp	r3, #-2147483648	; 0x80000000
    a24c:	01a00005 	moveq	r0, r5
    a250:	13a00001 	movne	r0, #1
    a254:	05942014 	ldreq	r2, [r4, #20]
    a258:	05943018 	ldreq	r3, [r4, #24]
    a25c:	05882000 	streq	r2, [r8]
    a260:	05873000 	streq	r3, [r7]
    a264:	e28dde41 	add	sp, sp, #1040	; 0x410
    a268:	e28dd008 	add	sp, sp, #8
    a26c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    a270:	00048003 	.word	0x00048003

0000a274 <fb_allocate_buffer>:
    a274:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
    a278:	e3a06008 	mov	r6, #8
    a27c:	e3a02010 	mov	r2, #16
    a280:	e3a05000 	mov	r5, #0
    a284:	e3a0c004 	mov	ip, #4
    a288:	e3a03020 	mov	r3, #32
    a28c:	e24dde41 	sub	sp, sp, #1040	; 0x410
    a290:	e24dd008 	sub	sp, sp, #8
    a294:	e08de006 	add	lr, sp, r6
    a298:	e28e400f 	add	r4, lr, #15
    a29c:	e3c4400f 	bic	r4, r4, #15
    a2a0:	e59fe06c 	ldr	lr, [pc, #108]	; a314 <fb_allocate_buffer+0xa0>
    a2a4:	e1a08000 	mov	r8, r0
    a2a8:	e1a07001 	mov	r7, r1
    a2ac:	e1a00006 	mov	r0, r6
    a2b0:	e1a01004 	mov	r1, r4
    a2b4:	e5845004 	str	r5, [r4, #4]
    a2b8:	e584e008 	str	lr, [r4, #8]
    a2bc:	e584600c 	str	r6, [r4, #12]
    a2c0:	e584c010 	str	ip, [r4, #16]
    a2c4:	e5842014 	str	r2, [r4, #20]
    a2c8:	e5845018 	str	r5, [r4, #24]
    a2cc:	e584501c 	str	r5, [r4, #28]
    a2d0:	e5843000 	str	r3, [r4]
    a2d4:	eb000395 	bl	b130 <postman_send>
    a2d8:	e08d3006 	add	r3, sp, r6
    a2dc:	e2431004 	sub	r1, r3, #4
    a2e0:	e1a00006 	mov	r0, r6
    a2e4:	eb00035c 	bl	b05c <postman_recv>
    a2e8:	e5943004 	ldr	r3, [r4, #4]
    a2ec:	e3530102 	cmp	r3, #-2147483648	; 0x80000000
    a2f0:	01a00005 	moveq	r0, r5
    a2f4:	13a00001 	movne	r0, #1
    a2f8:	05942014 	ldreq	r2, [r4, #20]
    a2fc:	05943018 	ldreq	r3, [r4, #24]
    a300:	05882000 	streq	r2, [r8]
    a304:	05873000 	streq	r3, [r7]
    a308:	e28dde41 	add	sp, sp, #1040	; 0x410
    a30c:	e28dd008 	add	sp, sp, #8
    a310:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    a314:	00040004 	.word	0x00040004

0000a318 <fb_get_virtual_buffer_size>:
    a318:	e92d40f0 	push	{r4, r5, r6, r7, lr}
    a31c:	e3a05008 	mov	r5, #8
    a320:	e3a03000 	mov	r3, #0
    a324:	e3a02020 	mov	r2, #32
    a328:	e24dde41 	sub	sp, sp, #1040	; 0x410
    a32c:	e24dd00c 	sub	sp, sp, #12
    a330:	e08dc005 	add	ip, sp, r5
    a334:	e28c400f 	add	r4, ip, #15
    a338:	e3c4400f 	bic	r4, r4, #15
    a33c:	e59fc07c 	ldr	ip, [pc, #124]	; a3c0 <fb_get_virtual_buffer_size+0xa8>
    a340:	e1a07000 	mov	r7, r0
    a344:	e1a06001 	mov	r6, r1
    a348:	e1a00005 	mov	r0, r5
    a34c:	e1a01004 	mov	r1, r4
    a350:	e5843004 	str	r3, [r4, #4]
    a354:	e584c008 	str	ip, [r4, #8]
    a358:	e584500c 	str	r5, [r4, #12]
    a35c:	e5843010 	str	r3, [r4, #16]
    a360:	e5843014 	str	r3, [r4, #20]
    a364:	e5843018 	str	r3, [r4, #24]
    a368:	e584301c 	str	r3, [r4, #28]
    a36c:	e5842000 	str	r2, [r4]
    a370:	eb00036e 	bl	b130 <postman_send>
    a374:	e08d3005 	add	r3, sp, r5
    a378:	e2431004 	sub	r1, r3, #4
    a37c:	e1a00005 	mov	r0, r5
    a380:	eb000335 	bl	b05c <postman_recv>
    a384:	e5943004 	ldr	r3, [r4, #4]
    a388:	e3530102 	cmp	r3, #-2147483648	; 0x80000000
    a38c:	13a00001 	movne	r0, #1
    a390:	1a000007 	bne	a3b4 <fb_get_virtual_buffer_size+0x9c>
    a394:	e3570000 	cmp	r7, #0
    a398:	15943014 	ldrne	r3, [r4, #20]
    a39c:	15873000 	strne	r3, [r7]
    a3a0:	e3560000 	cmp	r6, #0
    a3a4:	13a00000 	movne	r0, #0
    a3a8:	01a00006 	moveq	r0, r6
    a3ac:	15943018 	ldrne	r3, [r4, #24]
    a3b0:	15863000 	strne	r3, [r6]
    a3b4:	e28dde41 	add	sp, sp, #1040	; 0x410
    a3b8:	e28dd00c 	add	sp, sp, #12
    a3bc:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
    a3c0:	00040004 	.word	0x00040004

0000a3c4 <fb_set_virtual_buffer_size>:
    a3c4:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
    a3c8:	e3a06008 	mov	r6, #8
    a3cc:	e1a08000 	mov	r8, r0
    a3d0:	e1a07001 	mov	r7, r1
    a3d4:	e3a05000 	mov	r5, #0
    a3d8:	e3a03020 	mov	r3, #32
    a3dc:	e24dde41 	sub	sp, sp, #1040	; 0x410
    a3e0:	e24dd008 	sub	sp, sp, #8
    a3e4:	e08d2006 	add	r2, sp, r6
    a3e8:	e5981000 	ldr	r1, [r8]
    a3ec:	e282400f 	add	r4, r2, #15
    a3f0:	e59f006c 	ldr	r0, [pc, #108]	; a464 <fb_set_virtual_buffer_size+0xa0>
    a3f4:	e3c4400f 	bic	r4, r4, #15
    a3f8:	e5972000 	ldr	r2, [r7]
    a3fc:	e5845004 	str	r5, [r4, #4]
    a400:	e5840008 	str	r0, [r4, #8]
    a404:	e584600c 	str	r6, [r4, #12]
    a408:	e1a00006 	mov	r0, r6
    a40c:	e5846010 	str	r6, [r4, #16]
    a410:	e5841014 	str	r1, [r4, #20]
    a414:	e1a01004 	mov	r1, r4
    a418:	e5842018 	str	r2, [r4, #24]
    a41c:	e584501c 	str	r5, [r4, #28]
    a420:	e5843000 	str	r3, [r4]
    a424:	eb000341 	bl	b130 <postman_send>
    a428:	e08d3006 	add	r3, sp, r6
    a42c:	e2431004 	sub	r1, r3, #4
    a430:	e1a00006 	mov	r0, r6
    a434:	eb000308 	bl	b05c <postman_recv>
    a438:	e5943004 	ldr	r3, [r4, #4]
    a43c:	e3530102 	cmp	r3, #-2147483648	; 0x80000000
    a440:	01a00005 	moveq	r0, r5
    a444:	13a00001 	movne	r0, #1
    a448:	05942014 	ldreq	r2, [r4, #20]
    a44c:	05943018 	ldreq	r3, [r4, #24]
    a450:	05882000 	streq	r2, [r8]
    a454:	05873000 	streq	r3, [r7]
    a458:	e28dde41 	add	sp, sp, #1040	; 0x410
    a45c:	e28dd008 	add	sp, sp, #8
    a460:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    a464:	00048004 	.word	0x00048004

0000a468 <fb_set_virtual_offset>:
    a468:	e92d4030 	push	{r4, r5, lr}
    a46c:	e3a05008 	mov	r5, #8
    a470:	e3a03000 	mov	r3, #0
    a474:	e1a0c001 	mov	ip, r1
    a478:	e3a02020 	mov	r2, #32
    a47c:	e24dde41 	sub	sp, sp, #1040	; 0x410
    a480:	e24dd00c 	sub	sp, sp, #12
    a484:	e08d1005 	add	r1, sp, r5
    a488:	e281400f 	add	r4, r1, #15
    a48c:	e59f1054 	ldr	r1, [pc, #84]	; a4e8 <fb_set_virtual_offset+0x80>
    a490:	e3c4400f 	bic	r4, r4, #15
    a494:	e5843004 	str	r3, [r4, #4]
    a498:	e5841008 	str	r1, [r4, #8]
    a49c:	e584500c 	str	r5, [r4, #12]
    a4a0:	e1a01004 	mov	r1, r4
    a4a4:	e5845010 	str	r5, [r4, #16]
    a4a8:	e5840014 	str	r0, [r4, #20]
    a4ac:	e1a00005 	mov	r0, r5
    a4b0:	e584c018 	str	ip, [r4, #24]
    a4b4:	e584301c 	str	r3, [r4, #28]
    a4b8:	e5842000 	str	r2, [r4]
    a4bc:	eb00031b 	bl	b130 <postman_send>
    a4c0:	e08d3005 	add	r3, sp, r5
    a4c4:	e2431004 	sub	r1, r3, #4
    a4c8:	e1a00005 	mov	r0, r5
    a4cc:	eb0002e2 	bl	b05c <postman_recv>
    a4d0:	e5940004 	ldr	r0, [r4, #4]
    a4d4:	e2900102 	adds	r0, r0, #-2147483648	; 0x80000000
    a4d8:	13a00001 	movne	r0, #1
    a4dc:	e28dde41 	add	sp, sp, #1040	; 0x410
    a4e0:	e28dd00c 	add	sp, sp, #12
    a4e4:	e8bd8030 	pop	{r4, r5, pc}
    a4e8:	00048009 	.word	0x00048009

0000a4ec <JSMNR_parse>:
    a4ec:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    a4f0:	e28db020 	add	fp, sp, #32
    a4f4:	e24dd024 	sub	sp, sp, #36	; 0x24
    a4f8:	e5904000 	ldr	r4, [r0]
    a4fc:	e1a09000 	mov	r9, r0
    a500:	e1540002 	cmp	r4, r2
    a504:	e50b302c 	str	r3, [fp, #-44]	; 0xffffffd4
    a508:	e590a004 	ldr	sl, [r0, #4]
    a50c:	2a00015a 	bcs	aa7c <JSMNR_parse+0x590>
    a510:	e1a08003 	mov	r8, r3
    a514:	e7d13004 	ldrb	r3, [r1, r4]
    a518:	e3530000 	cmp	r3, #0
    a51c:	0a000156 	beq	aa7c <JSMNR_parse+0x590>
    a520:	e1a05000 	mov	r5, r0
    a524:	e1a06001 	mov	r6, r1
    a528:	e1a00004 	mov	r0, r4
    a52c:	e50b9030 	str	r9, [fp, #-48]	; 0xffffffd0
    a530:	ea00000f 	b	a574 <JSMNR_parse+0x88>
    a534:	e353005d 	cmp	r3, #93	; 0x5d
    a538:	0a000037 	beq	a61c <JSMNR_parse+0x130>
    a53c:	8a000032 	bhi	a60c <JSMNR_parse+0x120>
    a540:	e353003a 	cmp	r3, #58	; 0x3a
    a544:	1a000188 	bne	ab6c <JSMNR_parse+0x680>
    a548:	e5953004 	ldr	r3, [r5, #4]
    a54c:	e2433001 	sub	r3, r3, #1
    a550:	e5853008 	str	r3, [r5, #8]
    a554:	e2804001 	add	r4, r0, #1
    a558:	e1540002 	cmp	r4, r2
    a55c:	e5854000 	str	r4, [r5]
    a560:	2a000144 	bcs	aa78 <JSMNR_parse+0x58c>
    a564:	e7d63004 	ldrb	r3, [r6, r4]
    a568:	e3530000 	cmp	r3, #0
    a56c:	0a000141 	beq	aa78 <JSMNR_parse+0x58c>
    a570:	e1a00004 	mov	r0, r4
    a574:	e353002c 	cmp	r3, #44	; 0x2c
    a578:	0a00015d 	beq	aaf4 <JSMNR_parse+0x608>
    a57c:	8affffec 	bhi	a534 <JSMNR_parse+0x48>
    a580:	e353000d 	cmp	r3, #13
    a584:	0afffff2 	beq	a554 <JSMNR_parse+0x68>
    a588:	9a0000fc 	bls	a980 <JSMNR_parse+0x494>
    a58c:	e3530020 	cmp	r3, #32
    a590:	0affffef 	beq	a554 <JSMNR_parse+0x68>
    a594:	e3530022 	cmp	r3, #34	; 0x22
    a598:	1a0000fb 	bne	a98c <JSMNR_parse+0x4a0>
    a59c:	e284c001 	add	ip, r4, #1
    a5a0:	e152000c 	cmp	r2, ip
    a5a4:	e585c000 	str	ip, [r5]
    a5a8:	e1a0000c 	mov	r0, ip
    a5ac:	9a000011 	bls	a5f8 <JSMNR_parse+0x10c>
    a5b0:	e7d6300c 	ldrb	r3, [r6, ip]
    a5b4:	e3530000 	cmp	r3, #0
    a5b8:	1a000007 	bne	a5dc <JSMNR_parse+0xf0>
    a5bc:	ea00000d 	b	a5f8 <JSMNR_parse+0x10c>
    a5c0:	e2800001 	add	r0, r0, #1
    a5c4:	e1520000 	cmp	r2, r0
    a5c8:	e5850000 	str	r0, [r5]
    a5cc:	9a000009 	bls	a5f8 <JSMNR_parse+0x10c>
    a5d0:	e7d63000 	ldrb	r3, [r6, r0]
    a5d4:	e3530000 	cmp	r3, #0
    a5d8:	0a000006 	beq	a5f8 <JSMNR_parse+0x10c>
    a5dc:	e3530022 	cmp	r3, #34	; 0x22
    a5e0:	0a000196 	beq	ac40 <JSMNR_parse+0x754>
    a5e4:	e353005c 	cmp	r3, #92	; 0x5c
    a5e8:	1afffff4 	bne	a5c0 <JSMNR_parse+0xd4>
    a5ec:	e2801001 	add	r1, r0, #1
    a5f0:	e1520001 	cmp	r2, r1
    a5f4:	8a00004b 	bhi	a728 <JSMNR_parse+0x23c>
    a5f8:	e3e0a002 	mvn	sl, #2
    a5fc:	e5854000 	str	r4, [r5]
    a600:	e1a0000a 	mov	r0, sl
    a604:	e24bd020 	sub	sp, fp, #32
    a608:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    a60c:	e353007b 	cmp	r3, #123	; 0x7b
    a610:	0a000157 	beq	ab74 <JSMNR_parse+0x688>
    a614:	e353007d 	cmp	r3, #125	; 0x7d
    a618:	1a0000db 	bne	a98c <JSMNR_parse+0x4a0>
    a61c:	e3580000 	cmp	r8, #0
    a620:	0affffcb 	beq	a554 <JSMNR_parse+0x68>
    a624:	e353007d 	cmp	r3, #125	; 0x7d
    a628:	13a01002 	movne	r1, #2
    a62c:	03a01001 	moveq	r1, #1
    a630:	e5959004 	ldr	r9, [r5, #4]
    a634:	e50b1034 	str	r1, [fp, #-52]	; 0xffffffcc
    a638:	e50b1028 	str	r1, [fp, #-40]	; 0xffffffd8
    a63c:	e2591001 	subs	r1, r9, #1
    a640:	4a000199 	bmi	acac <JSMNR_parse+0x7c0>
    a644:	e249c21f 	sub	ip, r9, #-268435455	; 0xf0000001
    a648:	e088c20c 	add	ip, r8, ip, lsl #4
    a64c:	e59ce004 	ldr	lr, [ip, #4]
    a650:	e37e0001 	cmn	lr, #1
    a654:	0a000002 	beq	a664 <JSMNR_parse+0x178>
    a658:	e59c7008 	ldr	r7, [ip, #8]
    a65c:	e3770001 	cmn	r7, #1
    a660:	0a000161 	beq	abec <JSMNR_parse+0x700>
    a664:	e2411001 	sub	r1, r1, #1
    a668:	e3710001 	cmn	r1, #1
    a66c:	e24cc010 	sub	ip, ip, #16
    a670:	1afffff5 	bne	a64c <JSMNR_parse+0x160>
    a674:	e3a05000 	mov	r5, #0
    a678:	e51b2034 	ldr	r2, [fp, #-52]	; 0xffffffcc
    a67c:	e3a01003 	mov	r1, #3
    a680:	e58d2008 	str	r2, [sp, #8]
    a684:	e58d9004 	str	r9, [sp, #4]
    a688:	e58d3000 	str	r3, [sp]
    a68c:	e59f266c 	ldr	r2, [pc, #1644]	; ad00 <JSMNR_parse+0x814>
    a690:	e1a03004 	mov	r3, r4
    a694:	e59f0668 	ldr	r0, [pc, #1640]	; ad04 <JSMNR_parse+0x818>
    a698:	ebfffc45 	bl	97b4 <LogWrite>
    a69c:	e59f2664 	ldr	r2, [pc, #1636]	; ad08 <JSMNR_parse+0x81c>
    a6a0:	e3a01003 	mov	r1, #3
    a6a4:	e59f0658 	ldr	r0, [pc, #1624]	; ad04 <JSMNR_parse+0x818>
    a6a8:	e1a09005 	mov	r9, r5
    a6ac:	ebfffc40 	bl	97b4 <LogWrite>
    a6b0:	e59f864c 	ldr	r8, [pc, #1612]	; ad04 <JSMNR_parse+0x818>
    a6b4:	e1a00006 	mov	r0, r6
    a6b8:	eb008837 	bl	2c79c <strlen>
    a6bc:	e1550000 	cmp	r5, r0
    a6c0:	e0861005 	add	r1, r6, r5
    a6c4:	2a000013 	bcs	a718 <JSMNR_parse+0x22c>
    a6c8:	e1a0700d 	mov	r7, sp
    a6cc:	e24dd058 	sub	sp, sp, #88	; 0x58
    a6d0:	e28d4010 	add	r4, sp, #16
    a6d4:	e3a02051 	mov	r2, #81	; 0x51
    a6d8:	e1a00004 	mov	r0, r4
    a6dc:	eb008819 	bl	2c748 <strlcpy>
    a6e0:	e5c49050 	strb	r9, [r4, #80]	; 0x50
    a6e4:	e1a02004 	mov	r2, r4
    a6e8:	e3a01003 	mov	r1, #3
    a6ec:	e1a00008 	mov	r0, r8
    a6f0:	ebfffc2f 	bl	97b4 <LogWrite>
    a6f4:	e2855050 	add	r5, r5, #80	; 0x50
    a6f8:	e1a0d007 	mov	sp, r7
    a6fc:	eaffffec 	b	a6b4 <JSMNR_parse+0x1c8>
    a700:	e59f2604 	ldr	r2, [pc, #1540]	; ad0c <JSMNR_parse+0x820>
    a704:	e58d1000 	str	r1, [sp]
    a708:	e3a01004 	mov	r1, #4
    a70c:	e59f05f0 	ldr	r0, [pc, #1520]	; ad04 <JSMNR_parse+0x818>
    a710:	ebfffc27 	bl	97b4 <LogWrite>
    a714:	e5854000 	str	r4, [r5]
    a718:	e3e0a001 	mvn	sl, #1
    a71c:	e1a0000a 	mov	r0, sl
    a720:	e24bd020 	sub	sp, fp, #32
    a724:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    a728:	e5851000 	str	r1, [r5]
    a72c:	e7d63001 	ldrb	r3, [r6, r1]
    a730:	e243e022 	sub	lr, r3, #34	; 0x22
    a734:	e35e0053 	cmp	lr, #83	; 0x53
    a738:	979ff10e 	ldrls	pc, [pc, lr, lsl #2]
    a73c:	eaffffef 	b	a700 <JSMNR_parse+0x214>
    a740:	0000a890 	.word	0x0000a890
    a744:	0000a700 	.word	0x0000a700
    a748:	0000a700 	.word	0x0000a700
    a74c:	0000a700 	.word	0x0000a700
    a750:	0000a700 	.word	0x0000a700
    a754:	0000a700 	.word	0x0000a700
    a758:	0000a700 	.word	0x0000a700
    a75c:	0000a700 	.word	0x0000a700
    a760:	0000a700 	.word	0x0000a700
    a764:	0000a700 	.word	0x0000a700
    a768:	0000a700 	.word	0x0000a700
    a76c:	0000a700 	.word	0x0000a700
    a770:	0000a700 	.word	0x0000a700
    a774:	0000a890 	.word	0x0000a890
    a778:	0000a700 	.word	0x0000a700
    a77c:	0000a700 	.word	0x0000a700
    a780:	0000a700 	.word	0x0000a700
    a784:	0000a700 	.word	0x0000a700
    a788:	0000a700 	.word	0x0000a700
    a78c:	0000a700 	.word	0x0000a700
    a790:	0000a700 	.word	0x0000a700
    a794:	0000a700 	.word	0x0000a700
    a798:	0000a700 	.word	0x0000a700
    a79c:	0000a700 	.word	0x0000a700
    a7a0:	0000a700 	.word	0x0000a700
    a7a4:	0000a700 	.word	0x0000a700
    a7a8:	0000a700 	.word	0x0000a700
    a7ac:	0000a700 	.word	0x0000a700
    a7b0:	0000a700 	.word	0x0000a700
    a7b4:	0000a700 	.word	0x0000a700
    a7b8:	0000a700 	.word	0x0000a700
    a7bc:	0000a700 	.word	0x0000a700
    a7c0:	0000a700 	.word	0x0000a700
    a7c4:	0000a700 	.word	0x0000a700
    a7c8:	0000a700 	.word	0x0000a700
    a7cc:	0000a700 	.word	0x0000a700
    a7d0:	0000a700 	.word	0x0000a700
    a7d4:	0000a700 	.word	0x0000a700
    a7d8:	0000a700 	.word	0x0000a700
    a7dc:	0000a700 	.word	0x0000a700
    a7e0:	0000a700 	.word	0x0000a700
    a7e4:	0000a700 	.word	0x0000a700
    a7e8:	0000a700 	.word	0x0000a700
    a7ec:	0000a700 	.word	0x0000a700
    a7f0:	0000a700 	.word	0x0000a700
    a7f4:	0000a700 	.word	0x0000a700
    a7f8:	0000a700 	.word	0x0000a700
    a7fc:	0000a700 	.word	0x0000a700
    a800:	0000a700 	.word	0x0000a700
    a804:	0000a700 	.word	0x0000a700
    a808:	0000a700 	.word	0x0000a700
    a80c:	0000a700 	.word	0x0000a700
    a810:	0000a700 	.word	0x0000a700
    a814:	0000a700 	.word	0x0000a700
    a818:	0000a700 	.word	0x0000a700
    a81c:	0000a700 	.word	0x0000a700
    a820:	0000a700 	.word	0x0000a700
    a824:	0000a700 	.word	0x0000a700
    a828:	0000a890 	.word	0x0000a890
    a82c:	0000a700 	.word	0x0000a700
    a830:	0000a700 	.word	0x0000a700
    a834:	0000a700 	.word	0x0000a700
    a838:	0000a700 	.word	0x0000a700
    a83c:	0000a700 	.word	0x0000a700
    a840:	0000a890 	.word	0x0000a890
    a844:	0000a700 	.word	0x0000a700
    a848:	0000a700 	.word	0x0000a700
    a84c:	0000a700 	.word	0x0000a700
    a850:	0000a890 	.word	0x0000a890
    a854:	0000a700 	.word	0x0000a700
    a858:	0000a700 	.word	0x0000a700
    a85c:	0000a700 	.word	0x0000a700
    a860:	0000a700 	.word	0x0000a700
    a864:	0000a700 	.word	0x0000a700
    a868:	0000a700 	.word	0x0000a700
    a86c:	0000a700 	.word	0x0000a700
    a870:	0000a890 	.word	0x0000a890
    a874:	0000a700 	.word	0x0000a700
    a878:	0000a700 	.word	0x0000a700
    a87c:	0000a700 	.word	0x0000a700
    a880:	0000a890 	.word	0x0000a890
    a884:	0000a700 	.word	0x0000a700
    a888:	0000a890 	.word	0x0000a890
    a88c:	0000a898 	.word	0x0000a898
    a890:	e1a00001 	mov	r0, r1
    a894:	eaffff49 	b	a5c0 <JSMNR_parse+0xd4>
    a898:	e2801002 	add	r1, r0, #2
    a89c:	e1520001 	cmp	r2, r1
    a8a0:	e5851000 	str	r1, [r5]
    a8a4:	9a000033 	bls	a978 <JSMNR_parse+0x48c>
    a8a8:	e7d63001 	ldrb	r3, [r6, r1]
    a8ac:	e3530000 	cmp	r3, #0
    a8b0:	0a000030 	beq	a978 <JSMNR_parse+0x48c>
    a8b4:	e3c3e020 	bic	lr, r3, #32
    a8b8:	e24ee041 	sub	lr, lr, #65	; 0x41
    a8bc:	e2437030 	sub	r7, r3, #48	; 0x30
    a8c0:	e35e0005 	cmp	lr, #5
    a8c4:	83570009 	cmphi	r7, #9
    a8c8:	8a0000fa 	bhi	acb8 <JSMNR_parse+0x7cc>
    a8cc:	e2801003 	add	r1, r0, #3
    a8d0:	e1510002 	cmp	r1, r2
    a8d4:	e5851000 	str	r1, [r5]
    a8d8:	2a000026 	bcs	a978 <JSMNR_parse+0x48c>
    a8dc:	e7d63001 	ldrb	r3, [r6, r1]
    a8e0:	e3530000 	cmp	r3, #0
    a8e4:	0a000023 	beq	a978 <JSMNR_parse+0x48c>
    a8e8:	e3c3e020 	bic	lr, r3, #32
    a8ec:	e24ee041 	sub	lr, lr, #65	; 0x41
    a8f0:	e6efe07e 	uxtb	lr, lr
    a8f4:	e2437030 	sub	r7, r3, #48	; 0x30
    a8f8:	e35e0005 	cmp	lr, #5
    a8fc:	83570009 	cmphi	r7, #9
    a900:	8a0000ec 	bhi	acb8 <JSMNR_parse+0x7cc>
    a904:	e2801004 	add	r1, r0, #4
    a908:	e1520001 	cmp	r2, r1
    a90c:	e5851000 	str	r1, [r5]
    a910:	9a000018 	bls	a978 <JSMNR_parse+0x48c>
    a914:	e7d63001 	ldrb	r3, [r6, r1]
    a918:	e3530000 	cmp	r3, #0
    a91c:	0a000015 	beq	a978 <JSMNR_parse+0x48c>
    a920:	e3c3e020 	bic	lr, r3, #32
    a924:	e24ee041 	sub	lr, lr, #65	; 0x41
    a928:	e6efe07e 	uxtb	lr, lr
    a92c:	e2437030 	sub	r7, r3, #48	; 0x30
    a930:	e35e0005 	cmp	lr, #5
    a934:	83570009 	cmphi	r7, #9
    a938:	8a0000de 	bhi	acb8 <JSMNR_parse+0x7cc>
    a93c:	e2801005 	add	r1, r0, #5
    a940:	e1520001 	cmp	r2, r1
    a944:	e5851000 	str	r1, [r5]
    a948:	9a00000a 	bls	a978 <JSMNR_parse+0x48c>
    a94c:	e7d63001 	ldrb	r3, [r6, r1]
    a950:	e3530000 	cmp	r3, #0
    a954:	0a000007 	beq	a978 <JSMNR_parse+0x48c>
    a958:	e3c3e020 	bic	lr, r3, #32
    a95c:	e24ee041 	sub	lr, lr, #65	; 0x41
    a960:	e6efe07e 	uxtb	lr, lr
    a964:	e2437030 	sub	r7, r3, #48	; 0x30
    a968:	e35e0005 	cmp	lr, #5
    a96c:	83570009 	cmphi	r7, #9
    a970:	8a0000d0 	bhi	acb8 <JSMNR_parse+0x7cc>
    a974:	e2801006 	add	r1, r0, #6
    a978:	e2410001 	sub	r0, r1, #1
    a97c:	eaffff0f 	b	a5c0 <JSMNR_parse+0xd4>
    a980:	e2431009 	sub	r1, r3, #9
    a984:	e3510001 	cmp	r1, #1
    a988:	9afffef1 	bls	a554 <JSMNR_parse+0x68>
    a98c:	e1520004 	cmp	r2, r4
    a990:	e1a01004 	mov	r1, r4
    a994:	9a000019 	bls	aa00 <JSMNR_parse+0x514>
    a998:	e0860004 	add	r0, r6, r4
    a99c:	ea00000f 	b	a9e0 <JSMNR_parse+0x4f4>
    a9a0:	e3530009 	cmp	r3, #9
    a9a4:	3a000003 	bcc	a9b8 <JSMNR_parse+0x4cc>
    a9a8:	e353000a 	cmp	r3, #10
    a9ac:	9a000013 	bls	aa00 <JSMNR_parse+0x514>
    a9b0:	e353000d 	cmp	r3, #13
    a9b4:	0a000011 	beq	aa00 <JSMNR_parse+0x514>
    a9b8:	e243c020 	sub	ip, r3, #32
    a9bc:	e35c005e 	cmp	ip, #94	; 0x5e
    a9c0:	8a000048 	bhi	aae8 <JSMNR_parse+0x5fc>
    a9c4:	e2811001 	add	r1, r1, #1
    a9c8:	e1520001 	cmp	r2, r1
    a9cc:	e5851000 	str	r1, [r5]
    a9d0:	0a000083 	beq	abe4 <JSMNR_parse+0x6f8>
    a9d4:	e5f03001 	ldrb	r3, [r0, #1]!
    a9d8:	e3530000 	cmp	r3, #0
    a9dc:	0a000007 	beq	aa00 <JSMNR_parse+0x514>
    a9e0:	e3530020 	cmp	r3, #32
    a9e4:	0a000005 	beq	aa00 <JSMNR_parse+0x514>
    a9e8:	9affffec 	bls	a9a0 <JSMNR_parse+0x4b4>
    a9ec:	e353003a 	cmp	r3, #58	; 0x3a
    a9f0:	0a000002 	beq	aa00 <JSMNR_parse+0x514>
    a9f4:	8a000034 	bhi	aacc <JSMNR_parse+0x5e0>
    a9f8:	e353002c 	cmp	r3, #44	; 0x2c
    a9fc:	1affffed 	bne	a9b8 <JSMNR_parse+0x4cc>
    aa00:	e3580000 	cmp	r8, #0
    aa04:	02410001 	subeq	r0, r1, #1
    aa08:	028aa001 	addeq	sl, sl, #1
    aa0c:	0afffed0 	beq	a554 <JSMNR_parse+0x68>
    aa10:	e5950004 	ldr	r0, [r5, #4]
    aa14:	e59b3004 	ldr	r3, [fp, #4]
    aa18:	e1530000 	cmp	r3, r0
    aa1c:	9a0000aa 	bls	accc <JSMNR_parse+0x7e0>
    aa20:	e3a0e000 	mov	lr, #0
    aa24:	e280c001 	add	ip, r0, #1
    aa28:	e585c004 	str	ip, [r5, #4]
    aa2c:	e088c200 	add	ip, r8, r0, lsl #4
    aa30:	e5953008 	ldr	r3, [r5, #8]
    aa34:	e58ce00c 	str	lr, [ip, #12]
    aa38:	e3a0e004 	mov	lr, #4
    aa3c:	e3730001 	cmn	r3, #1
    aa40:	10883203 	addne	r3, r8, r3, lsl #4
    aa44:	e7c8e200 	strb	lr, [r8, r0, lsl #4]
    aa48:	e58c1008 	str	r1, [ip, #8]
    aa4c:	e2410001 	sub	r0, r1, #1
    aa50:	1593100c 	ldrne	r1, [r3, #12]
    aa54:	e58c4004 	str	r4, [ip, #4]
    aa58:	12811001 	addne	r1, r1, #1
    aa5c:	e2804001 	add	r4, r0, #1
    aa60:	e5850000 	str	r0, [r5]
    aa64:	1583100c 	strne	r1, [r3, #12]
    aa68:	e1540002 	cmp	r4, r2
    aa6c:	e28aa001 	add	sl, sl, #1
    aa70:	e5854000 	str	r4, [r5]
    aa74:	3afffeba 	bcc	a564 <JSMNR_parse+0x78>
    aa78:	e51b9030 	ldr	r9, [fp, #-48]	; 0xffffffd0
    aa7c:	e51b102c 	ldr	r1, [fp, #-44]	; 0xffffffd4
    aa80:	e3510000 	cmp	r1, #0
    aa84:	0afffedd 	beq	a600 <JSMNR_parse+0x114>
    aa88:	e5993004 	ldr	r3, [r9, #4]
    aa8c:	e2532001 	subs	r2, r3, #1
    aa90:	4afffeda 	bmi	a600 <JSMNR_parse+0x114>
    aa94:	e0813203 	add	r3, r1, r3, lsl #4
    aa98:	ea000002 	b	aaa8 <JSMNR_parse+0x5bc>
    aa9c:	e3720001 	cmn	r2, #1
    aaa0:	e2433010 	sub	r3, r3, #16
    aaa4:	0afffed5 	beq	a600 <JSMNR_parse+0x114>
    aaa8:	e513100c 	ldr	r1, [r3, #-12]
    aaac:	e2422001 	sub	r2, r2, #1
    aab0:	e3710001 	cmn	r1, #1
    aab4:	0afffff8 	beq	aa9c <JSMNR_parse+0x5b0>
    aab8:	e5131008 	ldr	r1, [r3, #-8]
    aabc:	e3710001 	cmn	r1, #1
    aac0:	1afffff5 	bne	aa9c <JSMNR_parse+0x5b0>
    aac4:	e3e0a002 	mvn	sl, #2
    aac8:	eafffecc 	b	a600 <JSMNR_parse+0x114>
    aacc:	e353005d 	cmp	r3, #93	; 0x5d
    aad0:	0affffca 	beq	aa00 <JSMNR_parse+0x514>
    aad4:	e353007d 	cmp	r3, #125	; 0x7d
    aad8:	0affffc8 	beq	aa00 <JSMNR_parse+0x514>
    aadc:	e243c020 	sub	ip, r3, #32
    aae0:	e35c005e 	cmp	ip, #94	; 0x5e
    aae4:	9affffb6 	bls	a9c4 <JSMNR_parse+0x4d8>
    aae8:	e58d1000 	str	r1, [sp]
    aaec:	e59f221c 	ldr	r2, [pc, #540]	; ad10 <JSMNR_parse+0x824>
    aaf0:	eaffff04 	b	a708 <JSMNR_parse+0x21c>
    aaf4:	e3580000 	cmp	r8, #0
    aaf8:	0afffe95 	beq	a554 <JSMNR_parse+0x68>
    aafc:	e5953008 	ldr	r3, [r5, #8]
    ab00:	e3730001 	cmn	r3, #1
    ab04:	0afffe92 	beq	a554 <JSMNR_parse+0x68>
    ab08:	e7d83203 	ldrb	r3, [r8, r3, lsl #4]
    ab0c:	e2433001 	sub	r3, r3, #1
    ab10:	e3530001 	cmp	r3, #1
    ab14:	9afffe8e 	bls	a554 <JSMNR_parse+0x68>
    ab18:	e5953004 	ldr	r3, [r5, #4]
    ab1c:	e253c001 	subs	ip, r3, #1
    ab20:	4afffe8b 	bmi	a554 <JSMNR_parse+0x68>
    ab24:	e0883203 	add	r3, r8, r3, lsl #4
    ab28:	ea000003 	b	ab3c <JSMNR_parse+0x650>
    ab2c:	e24cc001 	sub	ip, ip, #1
    ab30:	e37c0001 	cmn	ip, #1
    ab34:	e2433010 	sub	r3, r3, #16
    ab38:	0afffe85 	beq	a554 <JSMNR_parse+0x68>
    ab3c:	e5531010 	ldrb	r1, [r3, #-16]
    ab40:	e2411001 	sub	r1, r1, #1
    ab44:	e3510001 	cmp	r1, #1
    ab48:	8afffff7 	bhi	ab2c <JSMNR_parse+0x640>
    ab4c:	e513100c 	ldr	r1, [r3, #-12]
    ab50:	e3710001 	cmn	r1, #1
    ab54:	0afffff4 	beq	ab2c <JSMNR_parse+0x640>
    ab58:	e5131008 	ldr	r1, [r3, #-8]
    ab5c:	e3710001 	cmn	r1, #1
    ab60:	1afffff1 	bne	ab2c <JSMNR_parse+0x640>
    ab64:	e585c008 	str	ip, [r5, #8]
    ab68:	eafffe79 	b	a554 <JSMNR_parse+0x68>
    ab6c:	e353005b 	cmp	r3, #91	; 0x5b
    ab70:	1affff85 	bne	a98c <JSMNR_parse+0x4a0>
    ab74:	e3580000 	cmp	r8, #0
    ab78:	e28aa001 	add	sl, sl, #1
    ab7c:	0afffe74 	beq	a554 <JSMNR_parse+0x68>
    ab80:	e5951004 	ldr	r1, [r5, #4]
    ab84:	e59bc004 	ldr	ip, [fp, #4]
    ab88:	e15c0001 	cmp	ip, r1
    ab8c:	9a00004c 	bls	acc4 <JSMNR_parse+0x7d8>
    ab90:	e2817001 	add	r7, r1, #1
    ab94:	e5857004 	str	r7, [r5, #4]
    ab98:	e3e07000 	mvn	r7, #0
    ab9c:	e088c201 	add	ip, r8, r1, lsl #4
    aba0:	e595e008 	ldr	lr, [r5, #8]
    aba4:	e58c7004 	str	r7, [ip, #4]
    aba8:	e58c7008 	str	r7, [ip, #8]
    abac:	e3a07000 	mov	r7, #0
    abb0:	e37e0001 	cmn	lr, #1
    abb4:	e58c700c 	str	r7, [ip, #12]
    abb8:	1088e20e 	addne	lr, r8, lr, lsl #4
    abbc:	159e700c 	ldrne	r7, [lr, #12]
    abc0:	12877001 	addne	r7, r7, #1
    abc4:	158e700c 	strne	r7, [lr, #12]
    abc8:	e353007b 	cmp	r3, #123	; 0x7b
    abcc:	13a03002 	movne	r3, #2
    abd0:	03a03001 	moveq	r3, #1
    abd4:	e7c83201 	strb	r3, [r8, r1, lsl #4]
    abd8:	e58c4004 	str	r4, [ip, #4]
    abdc:	e5851008 	str	r1, [r5, #8]
    abe0:	eafffe5b 	b	a554 <JSMNR_parse+0x68>
    abe4:	e1a01002 	mov	r1, r2
    abe8:	eaffff84 	b	aa00 <JSMNR_parse+0x514>
    abec:	e5dc3000 	ldrb	r3, [ip]
    abf0:	e51b9028 	ldr	r9, [fp, #-40]	; 0xffffffd8
    abf4:	e1530009 	cmp	r3, r9
    abf8:	1a000036 	bne	acd8 <JSMNR_parse+0x7ec>
    abfc:	e2844001 	add	r4, r4, #1
    ac00:	e5857008 	str	r7, [r5, #8]
    ac04:	e0883201 	add	r3, r8, r1, lsl #4
    ac08:	e58c4008 	str	r4, [ip, #8]
    ac0c:	ea000003 	b	ac20 <JSMNR_parse+0x734>
    ac10:	e2411001 	sub	r1, r1, #1
    ac14:	e3710001 	cmn	r1, #1
    ac18:	e2433010 	sub	r3, r3, #16
    ac1c:	0afffe4c 	beq	a554 <JSMNR_parse+0x68>
    ac20:	e593c004 	ldr	ip, [r3, #4]
    ac24:	e37c0001 	cmn	ip, #1
    ac28:	0afffff8 	beq	ac10 <JSMNR_parse+0x724>
    ac2c:	e593c008 	ldr	ip, [r3, #8]
    ac30:	e37c0001 	cmn	ip, #1
    ac34:	1afffff5 	bne	ac10 <JSMNR_parse+0x724>
    ac38:	e5851008 	str	r1, [r5, #8]
    ac3c:	eafffe44 	b	a554 <JSMNR_parse+0x68>
    ac40:	e3580000 	cmp	r8, #0
    ac44:	0a000016 	beq	aca4 <JSMNR_parse+0x7b8>
    ac48:	e5951004 	ldr	r1, [r5, #4]
    ac4c:	e59b3004 	ldr	r3, [fp, #4]
    ac50:	e1530001 	cmp	r3, r1
    ac54:	9a00001c 	bls	accc <JSMNR_parse+0x7e0>
    ac58:	e3a04000 	mov	r4, #0
    ac5c:	e281e001 	add	lr, r1, #1
    ac60:	e585e004 	str	lr, [r5, #4]
    ac64:	e088e201 	add	lr, r8, r1, lsl #4
    ac68:	e5953008 	ldr	r3, [r5, #8]
    ac6c:	e58e400c 	str	r4, [lr, #12]
    ac70:	e3a04003 	mov	r4, #3
    ac74:	e3730001 	cmn	r3, #1
    ac78:	e7c84201 	strb	r4, [r8, r1, lsl #4]
    ac7c:	e28aa001 	add	sl, sl, #1
    ac80:	e58ec004 	str	ip, [lr, #4]
    ac84:	e58e0008 	str	r0, [lr, #8]
    ac88:	0afffe31 	beq	a554 <JSMNR_parse+0x68>
    ac8c:	e0883203 	add	r3, r8, r3, lsl #4
    ac90:	e593100c 	ldr	r1, [r3, #12]
    ac94:	e5950000 	ldr	r0, [r5]
    ac98:	e2811001 	add	r1, r1, #1
    ac9c:	e583100c 	str	r1, [r3, #12]
    aca0:	eafffe2b 	b	a554 <JSMNR_parse+0x68>
    aca4:	e28aa001 	add	sl, sl, #1
    aca8:	eafffe29 	b	a554 <JSMNR_parse+0x68>
    acac:	e3710001 	cmn	r1, #1
    acb0:	1afffe27 	bne	a554 <JSMNR_parse+0x68>
    acb4:	eafffe6e 	b	a674 <JSMNR_parse+0x188>
    acb8:	e58d1000 	str	r1, [sp]
    acbc:	e59f2050 	ldr	r2, [pc, #80]	; ad14 <JSMNR_parse+0x828>
    acc0:	eafffe90 	b	a708 <JSMNR_parse+0x21c>
    acc4:	e3e0a000 	mvn	sl, #0
    acc8:	eafffe4c 	b	a600 <JSMNR_parse+0x114>
    accc:	e5854000 	str	r4, [r5]
    acd0:	e3e0a000 	mvn	sl, #0
    acd4:	eafffe49 	b	a600 <JSMNR_parse+0x114>
    acd8:	e51b2034 	ldr	r2, [fp, #-52]	; 0xffffffcc
    acdc:	e3a01003 	mov	r1, #3
    ace0:	e58d2004 	str	r2, [sp, #4]
    ace4:	e58d3000 	str	r3, [sp]
    ace8:	e59f2028 	ldr	r2, [pc, #40]	; ad18 <JSMNR_parse+0x82c>
    acec:	e1a0300e 	mov	r3, lr
    acf0:	e59f000c 	ldr	r0, [pc, #12]	; ad04 <JSMNR_parse+0x818>
    acf4:	ebfffaae 	bl	97b4 <LogWrite>
    acf8:	e3e0a001 	mvn	sl, #1
    acfc:	eafffe3f 	b	a600 <JSMNR_parse+0x114>
    ad00:	0002e4f0 	.word	0x0002e4f0
    ad04:	0002e4e8 	.word	0x0002e4e8
    ad08:	0002e534 	.word	0x0002e534
    ad0c:	0002e570 	.word	0x0002e570
    ad10:	0002e598 	.word	0x0002e598
    ad14:	0002e548 	.word	0x0002e548
    ad18:	0002e4c8 	.word	0x0002e4c8

0000ad1c <JSMNR_init>:
    ad1c:	e3a03000 	mov	r3, #0
    ad20:	e3e02000 	mvn	r2, #0
    ad24:	e5803000 	str	r3, [r0]
    ad28:	e5802008 	str	r2, [r0, #8]
    ad2c:	e5803004 	str	r3, [r0, #4]
    ad30:	e12fff1e 	bx	lr

0000ad34 <JSMNR_logLongStr>:
    ad34:	e92d4bf0 	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    ad38:	e2524000 	subs	r4, r2, #0
    ad3c:	e28db01c 	add	fp, sp, #28
    ad40:	e1a02000 	mov	r2, r0
    ad44:	e1a05001 	mov	r5, r1
    ad48:	0a000019 	beq	adb4 <JSMNR_logLongStr+0x80>
    ad4c:	e3a04000 	mov	r4, #0
    ad50:	e3a01003 	mov	r1, #3
    ad54:	e59f00bc 	ldr	r0, [pc, #188]	; ae18 <JSMNR_logLongStr+0xe4>
    ad58:	ebfffa95 	bl	97b4 <LogWrite>
    ad5c:	e1a08004 	mov	r8, r4
    ad60:	e59f70b0 	ldr	r7, [pc, #176]	; ae18 <JSMNR_logLongStr+0xe4>
    ad64:	ea00000b 	b	ad98 <JSMNR_logLongStr+0x64>
    ad68:	e1a0600d 	mov	r6, sp
    ad6c:	e24dd058 	sub	sp, sp, #88	; 0x58
    ad70:	e1a0000d 	mov	r0, sp
    ad74:	e3a02051 	mov	r2, #81	; 0x51
    ad78:	eb008672 	bl	2c748 <strlcpy>
    ad7c:	e5cd8050 	strb	r8, [sp, #80]	; 0x50
    ad80:	e1a0200d 	mov	r2, sp
    ad84:	e3a01003 	mov	r1, #3
    ad88:	e1a00007 	mov	r0, r7
    ad8c:	ebfffa88 	bl	97b4 <LogWrite>
    ad90:	e1a0d006 	mov	sp, r6
    ad94:	e2844050 	add	r4, r4, #80	; 0x50
    ad98:	e1a00005 	mov	r0, r5
    ad9c:	eb00867e 	bl	2c79c <strlen>
    ada0:	e1500004 	cmp	r0, r4
    ada4:	e0851004 	add	r1, r5, r4
    ada8:	8affffee 	bhi	ad68 <JSMNR_logLongStr+0x34>
    adac:	e24bd01c 	sub	sp, fp, #28
    adb0:	e8bd8bf0 	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    adb4:	e3a01004 	mov	r1, #4
    adb8:	e59f0058 	ldr	r0, [pc, #88]	; ae18 <JSMNR_logLongStr+0xe4>
    adbc:	ebfffa7c 	bl	97b4 <LogWrite>
    adc0:	e1a08004 	mov	r8, r4
    adc4:	e59f704c 	ldr	r7, [pc, #76]	; ae18 <JSMNR_logLongStr+0xe4>
    adc8:	ea00000b 	b	adfc <JSMNR_logLongStr+0xc8>
    adcc:	e1a0600d 	mov	r6, sp
    add0:	e24dd058 	sub	sp, sp, #88	; 0x58
    add4:	e1a0000d 	mov	r0, sp
    add8:	e3a02051 	mov	r2, #81	; 0x51
    addc:	eb008659 	bl	2c748 <strlcpy>
    ade0:	e5cd8050 	strb	r8, [sp, #80]	; 0x50
    ade4:	e1a0200d 	mov	r2, sp
    ade8:	e3a01004 	mov	r1, #4
    adec:	e1a00007 	mov	r0, r7
    adf0:	ebfffa6f 	bl	97b4 <LogWrite>
    adf4:	e1a0d006 	mov	sp, r6
    adf8:	e2844050 	add	r4, r4, #80	; 0x50
    adfc:	e1a00005 	mov	r0, r5
    ae00:	eb008665 	bl	2c79c <strlen>
    ae04:	e1500004 	cmp	r0, r4
    ae08:	e0851004 	add	r1, r5, r4
    ae0c:	8affffee 	bhi	adcc <JSMNR_logLongStr+0x98>
    ae10:	e24bd01c 	sub	sp, fp, #28
    ae14:	e8bd8bf0 	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    ae18:	0002e4e8 	.word	0x0002e4e8

0000ae1c <nmalloc_set_memory_area>:
    ae1c:	e3a03000 	mov	r3, #0
    ae20:	e59f2014 	ldr	r2, [pc, #20]	; ae3c <nmalloc_set_memory_area+0x20>
    ae24:	e5801008 	str	r1, [r0, #8]
    ae28:	e5820000 	str	r0, [r2]
    ae2c:	e5820004 	str	r0, [r2, #4]
    ae30:	e5803000 	str	r3, [r0]
    ae34:	e5803004 	str	r3, [r0, #4]
    ae38:	e12fff1e 	bx	lr
    ae3c:	00042938 	.word	0x00042938

0000ae40 <nmalloc_malloc>:
    ae40:	e3500000 	cmp	r0, #0
    ae44:	012fff1e 	bxeq	lr
    ae48:	e2800004 	add	r0, r0, #4
    ae4c:	e350000c 	cmp	r0, #12
    ae50:	33a0000c 	movcc	r0, #12
    ae54:	e59f20d0 	ldr	r2, [pc, #208]	; af2c <nmalloc_malloc+0xec>
    ae58:	e59fc0d0 	ldr	ip, [pc, #208]	; af30 <nmalloc_malloc+0xf0>
    ae5c:	e0832290 	umull	r2, r3, r0, r2
    ae60:	e92d40f0 	push	{r4, r5, r6, r7, lr}
    ae64:	e1a011a3 	lsr	r1, r3, #3
    ae68:	e59ce004 	ldr	lr, [ip, #4]
    ae6c:	e0811081 	add	r1, r1, r1, lsl #1
    ae70:	e1a01101 	lsl	r1, r1, #2
    ae74:	e35e0000 	cmp	lr, #0
    ae78:	e281400c 	add	r4, r1, #12
    ae7c:	e2811018 	add	r1, r1, #24
    ae80:	0a000022 	beq	af10 <nmalloc_malloc+0xd0>
    ae84:	e99e0005 	ldmib	lr, {r0, r2}
    ae88:	e3500000 	cmp	r0, #0
    ae8c:	0a000021 	beq	af18 <nmalloc_malloc+0xd8>
    ae90:	e1520001 	cmp	r2, r1
    ae94:	3a000003 	bcc	aea8 <nmalloc_malloc+0x68>
    ae98:	ea000020 	b	af20 <nmalloc_malloc+0xe0>
    ae9c:	e1510002 	cmp	r1, r2
    aea0:	9a000007 	bls	aec4 <nmalloc_malloc+0x84>
    aea4:	e1a00003 	mov	r0, r3
    aea8:	e5903004 	ldr	r3, [r0, #4]
    aeac:	e5902008 	ldr	r2, [r0, #8]
    aeb0:	e3530000 	cmp	r3, #0
    aeb4:	1afffff8 	bne	ae9c <nmalloc_malloc+0x5c>
    aeb8:	e1510002 	cmp	r1, r2
    aebc:	93a03000 	movls	r3, #0
    aec0:	8a000012 	bhi	af10 <nmalloc_malloc+0xd0>
    aec4:	e59f6060 	ldr	r6, [pc, #96]	; af2c <nmalloc_malloc+0xec>
    aec8:	e5905000 	ldr	r5, [r0]
    aecc:	e0876694 	umull	r6, r7, r4, r6
    aed0:	e1a011a7 	lsr	r1, r7, #3
    aed4:	e0811081 	add	r1, r1, r1, lsl #1
    aed8:	e1a01101 	lsl	r1, r1, #2
    aedc:	e080e001 	add	lr, r0, r1
    aee0:	e3550000 	cmp	r5, #0
    aee4:	e0422004 	sub	r2, r2, r4
    aee8:	e7805001 	str	r5, [r0, r1]
    aeec:	e58e3004 	str	r3, [lr, #4]
    aef0:	e58e2008 	str	r2, [lr, #8]
    aef4:	1585e004 	strne	lr, [r5, #4]
    aef8:	159e3004 	ldrne	r3, [lr, #4]
    aefc:	058ce004 	streq	lr, [ip, #4]
    af00:	e3530000 	cmp	r3, #0
    af04:	1583e000 	strne	lr, [r3]
    af08:	e4804004 	str	r4, [r0], #4
    af0c:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
    af10:	e3a00000 	mov	r0, #0
    af14:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
    af18:	e1a0000e 	mov	r0, lr
    af1c:	eaffffe5 	b	aeb8 <nmalloc_malloc+0x78>
    af20:	e1a03000 	mov	r3, r0
    af24:	e1a0000e 	mov	r0, lr
    af28:	eaffffe5 	b	aec4 <nmalloc_malloc+0x84>
    af2c:	aaaaaaab 	.word	0xaaaaaaab
    af30:	00042938 	.word	0x00042938

0000af34 <nmalloc_free>:
    af34:	e59f111c 	ldr	r1, [pc, #284]	; b058 <nmalloc_free+0x124>
    af38:	e92d4010 	push	{r4, lr}
    af3c:	e590e000 	ldr	lr, [r0]
    af40:	e5912004 	ldr	r2, [r1, #4]
    af44:	e51e3004 	ldr	r3, [lr, #-4]
    af48:	e24ec004 	sub	ip, lr, #4
    af4c:	e152000c 	cmp	r2, ip
    af50:	e58e3004 	str	r3, [lr, #4]
    af54:	9a00001f 	bls	afd8 <nmalloc_free+0xa4>
    af58:	e3a04000 	mov	r4, #0
    af5c:	e58e2000 	str	r2, [lr]
    af60:	e1a03002 	mov	r3, r2
    af64:	e1a0200c 	mov	r2, ip
    af68:	e581c004 	str	ip, [r1, #4]
    af6c:	e50e4004 	str	r4, [lr, #-4]
    af70:	e3530000 	cmp	r3, #0
    af74:	0a000000 	beq	af7c <nmalloc_free+0x48>
    af78:	e583c000 	str	ip, [r3]
    af7c:	e3a03000 	mov	r3, #0
    af80:	e5803000 	str	r3, [r0]
    af84:	e5923004 	ldr	r3, [r2, #4]
    af88:	ea000001 	b	af94 <nmalloc_free+0x60>
    af8c:	e1a02003 	mov	r2, r3
    af90:	e5933004 	ldr	r3, [r3, #4]
    af94:	e3530000 	cmp	r3, #0
    af98:	08bd8010 	popeq	{r4, pc}
    af9c:	e5921008 	ldr	r1, [r2, #8]
    afa0:	e0820001 	add	r0, r2, r1
    afa4:	e1500003 	cmp	r0, r3
    afa8:	1afffff7 	bne	af8c <nmalloc_free+0x58>
    afac:	e5930008 	ldr	r0, [r3, #8]
    afb0:	e5933004 	ldr	r3, [r3, #4]
    afb4:	e0801001 	add	r1, r0, r1
    afb8:	e3530000 	cmp	r3, #0
    afbc:	e5821008 	str	r1, [r2, #8]
    afc0:	e5823004 	str	r3, [r2, #4]
    afc4:	08bd8010 	popeq	{r4, pc}
    afc8:	e3530000 	cmp	r3, #0
    afcc:	e5832000 	str	r2, [r3]
    afd0:	1afffff1 	bne	af9c <nmalloc_free+0x68>
    afd4:	e8bd8010 	pop	{r4, pc}
    afd8:	e5921004 	ldr	r1, [r2, #4]
    afdc:	e3510000 	cmp	r1, #0
    afe0:	0a000018 	beq	b048 <nmalloc_free+0x114>
    afe4:	e152000c 	cmp	r2, ip
    afe8:	315c0001 	cmpcc	ip, r1
    afec:	2a000008 	bcs	b014 <nmalloc_free+0xe0>
    aff0:	ea00000e 	b	b030 <nmalloc_free+0xfc>
    aff4:	e15c0001 	cmp	ip, r1
    aff8:	93a04000 	movls	r4, #0
    affc:	83a04001 	movhi	r4, #1
    b000:	e15c0003 	cmp	ip, r3
    b004:	23a04000 	movcs	r4, #0
    b008:	e3540000 	cmp	r4, #0
    b00c:	1a000009 	bne	b038 <nmalloc_free+0x104>
    b010:	e1a01003 	mov	r1, r3
    b014:	e5913004 	ldr	r3, [r1, #4]
    b018:	e3530000 	cmp	r3, #0
    b01c:	1afffff4 	bne	aff4 <nmalloc_free+0xc0>
    b020:	e80e000a 	stmda	lr, {r1, r3}
    b024:	e581c004 	str	ip, [r1, #4]
    b028:	e59e3000 	ldr	r3, [lr]
    b02c:	eaffffcf 	b	af70 <nmalloc_free+0x3c>
    b030:	e1a03001 	mov	r3, r1
    b034:	e1a01002 	mov	r1, r2
    b038:	e3510000 	cmp	r1, #0
    b03c:	e80e000a 	stmda	lr, {r1, r3}
    b040:	1afffff7 	bne	b024 <nmalloc_free+0xf0>
    b044:	eaffffcb 	b	af78 <nmalloc_free+0x44>
    b048:	e58e1000 	str	r1, [lr]
    b04c:	e50e2004 	str	r2, [lr, #-4]
    b050:	e1a01002 	mov	r1, r2
    b054:	eafffff2 	b	b024 <nmalloc_free+0xf0>
    b058:	00042938 	.word	0x00042938

0000b05c <postman_recv>:
    b05c:	e350000f 	cmp	r0, #15
    b060:	9a000001 	bls	b06c <postman_recv+0x10>
    b064:	e3a000c3 	mov	r0, #195	; 0xc3
    b068:	e12fff1e 	bx	lr
    b06c:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    b070:	e1a08001 	mov	r8, r1
    b074:	e1a07000 	mov	r7, r0
    b078:	eb002fd1 	bl	16fc4 <micros>
    b07c:	e3a09014 	mov	r9, #20
    b080:	e1a06000 	mov	r6, r0
    b084:	e59f409c 	ldr	r4, [pc, #156]	; b128 <postman_recv+0xcc>
    b088:	e59f509c 	ldr	r5, [pc, #156]	; b12c <postman_recv+0xd0>
    b08c:	e3a03000 	mov	r3, #0
    b090:	ee073f1e 	mcr	15, 0, r3, cr7, cr14, {0}
    b094:	e5943898 	ldr	r3, [r4, #2200]	; 0x898
    b098:	e3130101 	tst	r3, #1073741824	; 0x40000000
    b09c:	1a000004 	bne	b0b4 <postman_recv+0x58>
    b0a0:	ea00000b 	b	b0d4 <postman_recv+0x78>
    b0a4:	ee070f1e 	mcr	15, 0, r0, cr7, cr14, {0}
    b0a8:	e5943898 	ldr	r3, [r4, #2200]	; 0x898
    b0ac:	e3130101 	tst	r3, #1073741824	; 0x40000000
    b0b0:	0a000007 	beq	b0d4 <postman_recv+0x78>
    b0b4:	eb002fc2 	bl	16fc4 <micros>
    b0b8:	e1a02005 	mov	r2, r5
    b0bc:	e1a01006 	mov	r1, r6
    b0c0:	eb002fd4 	bl	17018 <isTimeout>
    b0c4:	e3500000 	cmp	r0, #0
    b0c8:	0afffff5 	beq	b0a4 <postman_recv+0x48>
    b0cc:	e3a000c2 	mov	r0, #194	; 0xc2
    b0d0:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    b0d4:	e3a03000 	mov	r3, #0
    b0d8:	ee073fba 	mcr	15, 0, r3, cr7, cr10, {5}
    b0dc:	e5942880 	ldr	r2, [r4, #2176]	; 0x880
    b0e0:	ee073fba 	mcr	15, 0, r3, cr7, cr10, {5}
    b0e4:	e0273002 	eor	r3, r7, r2
    b0e8:	e313000f 	tst	r3, #15
    b0ec:	0a000009 	beq	b118 <postman_recv+0xbc>
    b0f0:	eb002fb3 	bl	16fc4 <micros>
    b0f4:	e1a02005 	mov	r2, r5
    b0f8:	e1a01006 	mov	r1, r6
    b0fc:	eb002fc5 	bl	17018 <isTimeout>
    b100:	e3500000 	cmp	r0, #0
    b104:	1afffff0 	bne	b0cc <postman_recv+0x70>
    b108:	e2599001 	subs	r9, r9, #1
    b10c:	1affffde 	bne	b08c <postman_recv+0x30>
    b110:	e3a000c4 	mov	r0, #196	; 0xc4
    b114:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    b118:	e1a02222 	lsr	r2, r2, #4
    b11c:	e5882000 	str	r2, [r8]
    b120:	e3a000c0 	mov	r0, #192	; 0xc0
    b124:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    b128:	2000b000 	.word	0x2000b000
    b12c:	0007a120 	.word	0x0007a120

0000b130 <postman_send>:
    b130:	e311000f 	tst	r1, #15
    b134:	0a000001 	beq	b140 <postman_send+0x10>
    b138:	e3a000c3 	mov	r0, #195	; 0xc3
    b13c:	e12fff1e 	bx	lr
    b140:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
    b144:	e1a08000 	mov	r8, r0
    b148:	e1a04001 	mov	r4, r1
    b14c:	eb002f9c 	bl	16fc4 <micros>
    b150:	e59f504c 	ldr	r5, [pc, #76]	; b1a4 <postman_send+0x74>
    b154:	e1a07000 	mov	r7, r0
    b158:	e59f6048 	ldr	r6, [pc, #72]	; b1a8 <postman_send+0x78>
    b15c:	ea000005 	b	b178 <postman_send+0x48>
    b160:	eb002f97 	bl	16fc4 <micros>
    b164:	e1a02006 	mov	r2, r6
    b168:	e1a01007 	mov	r1, r7
    b16c:	eb002fa9 	bl	17018 <isTimeout>
    b170:	e3500000 	cmp	r0, #0
    b174:	1a000008 	bne	b19c <postman_send+0x6c>
    b178:	e5953898 	ldr	r3, [r5, #2200]	; 0x898
    b17c:	e3530000 	cmp	r3, #0
    b180:	bafffff6 	blt	b160 <postman_send+0x30>
    b184:	e3a03000 	mov	r3, #0
    b188:	ee073fba 	mcr	15, 0, r3, cr7, cr10, {5}
    b18c:	e1841008 	orr	r1, r4, r8
    b190:	e58518a0 	str	r1, [r5, #2208]	; 0x8a0
    b194:	e3a000c0 	mov	r0, #192	; 0xc0
    b198:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    b19c:	e3a000c1 	mov	r0, #193	; 0xc1
    b1a0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    b1a4:	2000b000 	.word	0x2000b000
    b1a8:	0007a120 	.word	0x0007a120

0000b1ac <rhw_get_mac_address>:
    b1ac:	e92d4070 	push	{r4, r5, r6, lr}
    b1b0:	e3a05000 	mov	r5, #0
    b1b4:	e3a02006 	mov	r2, #6
    b1b8:	e3a03020 	mov	r3, #32
    b1bc:	e24dde41 	sub	sp, sp, #1040	; 0x410
    b1c0:	e24dd008 	sub	sp, sp, #8
    b1c4:	e59f1084 	ldr	r1, [pc, #132]	; b250 <rhw_get_mac_address+0xa4>
    b1c8:	e28d4017 	add	r4, sp, #23
    b1cc:	e3c4400f 	bic	r4, r4, #15
    b1d0:	e5845004 	str	r5, [r4, #4]
    b1d4:	e1a06000 	mov	r6, r0
    b1d8:	e5841008 	str	r1, [r4, #8]
    b1dc:	e3a00008 	mov	r0, #8
    b1e0:	e1a01004 	mov	r1, r4
    b1e4:	e584200c 	str	r2, [r4, #12]
    b1e8:	e5845010 	str	r5, [r4, #16]
    b1ec:	e5845014 	str	r5, [r4, #20]
    b1f0:	e5845018 	str	r5, [r4, #24]
    b1f4:	e584501c 	str	r5, [r4, #28]
    b1f8:	e5843000 	str	r3, [r4]
    b1fc:	ebffffcb 	bl	b130 <postman_send>
    b200:	e35000c0 	cmp	r0, #192	; 0xc0
    b204:	0a000004 	beq	b21c <rhw_get_mac_address+0x70>
    b208:	e3a05002 	mov	r5, #2
    b20c:	e1a00005 	mov	r0, r5
    b210:	e28dde41 	add	sp, sp, #1040	; 0x410
    b214:	e28dd008 	add	sp, sp, #8
    b218:	e8bd8070 	pop	{r4, r5, r6, pc}
    b21c:	e28d1004 	add	r1, sp, #4
    b220:	e3a00008 	mov	r0, #8
    b224:	ebffff8c 	bl	b05c <postman_recv>
    b228:	e35000c0 	cmp	r0, #192	; 0xc0
    b22c:	1afffff5 	bne	b208 <rhw_get_mac_address+0x5c>
    b230:	e5943004 	ldr	r3, [r4, #4]
    b234:	e3530102 	cmp	r3, #-2147483648	; 0x80000000
    b238:	13a05001 	movne	r5, #1
    b23c:	05940014 	ldreq	r0, [r4, #20]
    b240:	01d431b8 	ldrheq	r3, [r4, #24]
    b244:	05860000 	streq	r0, [r6]
    b248:	01c630b4 	strheq	r3, [r6, #4]
    b24c:	eaffffee 	b	b20c <rhw_get_mac_address+0x60>
    b250:	00010003 	.word	0x00010003

0000b254 <rhw_set_device_power>:
    b254:	e3510000 	cmp	r1, #0
    b258:	e3a03008 	mov	r3, #8
    b25c:	e1a01000 	mov	r1, r0
    b260:	e3a02000 	mov	r2, #0
    b264:	e92d4070 	push	{r4, r5, r6, lr}
    b268:	e3a0c020 	mov	ip, #32
    b26c:	03a0e003 	moveq	lr, #3
    b270:	13a0e002 	movne	lr, #2
    b274:	e24dde41 	sub	sp, sp, #1040	; 0x410
    b278:	e24dd008 	sub	sp, sp, #8
    b27c:	e59f008c 	ldr	r0, [pc, #140]	; b310 <rhw_set_device_power+0xbc>
    b280:	e28d4017 	add	r4, sp, #23
    b284:	e3c4400f 	bic	r4, r4, #15
    b288:	e5842004 	str	r2, [r4, #4]
    b28c:	e5840008 	str	r0, [r4, #8]
    b290:	e584300c 	str	r3, [r4, #12]
    b294:	e1a00003 	mov	r0, r3
    b298:	e5843010 	str	r3, [r4, #16]
    b29c:	e5841014 	str	r1, [r4, #20]
    b2a0:	e1a01004 	mov	r1, r4
    b2a4:	e584e018 	str	lr, [r4, #24]
    b2a8:	e584201c 	str	r2, [r4, #28]
    b2ac:	e584c000 	str	ip, [r4]
    b2b0:	ebffff9e 	bl	b130 <postman_send>
    b2b4:	e35000c0 	cmp	r0, #192	; 0xc0
    b2b8:	1a00000a 	bne	b2e8 <rhw_set_device_power+0x94>
    b2bc:	e3a0500a 	mov	r5, #10
    b2c0:	e59f604c 	ldr	r6, [pc, #76]	; b314 <rhw_set_device_power+0xc0>
    b2c4:	e28d1004 	add	r1, sp, #4
    b2c8:	e3a00008 	mov	r0, #8
    b2cc:	ebffff62 	bl	b05c <postman_recv>
    b2d0:	e35000c0 	cmp	r0, #192	; 0xc0
    b2d4:	0a000007 	beq	b2f8 <rhw_set_device_power+0xa4>
    b2d8:	e1a00006 	mov	r0, r6
    b2dc:	eb002f3c 	bl	16fd4 <microsDelay>
    b2e0:	e2555001 	subs	r5, r5, #1
    b2e4:	1afffff6 	bne	b2c4 <rhw_set_device_power+0x70>
    b2e8:	e3a00002 	mov	r0, #2
    b2ec:	e28dde41 	add	sp, sp, #1040	; 0x410
    b2f0:	e28dd008 	add	sp, sp, #8
    b2f4:	e8bd8070 	pop	{r4, r5, r6, pc}
    b2f8:	e5940004 	ldr	r0, [r4, #4]
    b2fc:	e2900102 	adds	r0, r0, #-2147483648	; 0x80000000
    b300:	13a00001 	movne	r0, #1
    b304:	e28dde41 	add	sp, sp, #1040	; 0x410
    b308:	e28dd008 	add	sp, sp, #8
    b30c:	e8bd8070 	pop	{r4, r5, r6, pc}
    b310:	00028001 	.word	0x00028001
    b314:	0007a120 	.word	0x0007a120

0000b318 <jsonGetValueForKey>:
    b318:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    b31c:	e1a07001 	mov	r7, r1
    b320:	e24ddf56 	sub	sp, sp, #344	; 0x158
    b324:	e1a06000 	mov	r6, r0
    b328:	e28d000c 	add	r0, sp, #12
    b32c:	e1a09002 	mov	r9, r2
    b330:	e1a08003 	mov	r8, r3
    b334:	ebfffe78 	bl	ad1c <JSMNR_init>
    b338:	e1a00007 	mov	r0, r7
    b33c:	eb008516 	bl	2c79c <strlen>
    b340:	e3a04014 	mov	r4, #20
    b344:	e1a02000 	mov	r2, r0
    b348:	e1a01007 	mov	r1, r7
    b34c:	e28d000c 	add	r0, sp, #12
    b350:	e58d4000 	str	r4, [sp]
    b354:	e28d3018 	add	r3, sp, #24
    b358:	ebfffc63 	bl	a4ec <JSMNR_parse>
    b35c:	e250a000 	subs	sl, r0, #0
    b360:	ba000025 	blt	b3fc <jsonGetValueForKey+0xe4>
    b364:	128d4018 	addne	r4, sp, #24
    b368:	13a05000 	movne	r5, #0
    b36c:	1a000003 	bne	b380 <jsonGetValueForKey+0x68>
    b370:	ea00001e 	b	b3f0 <jsonGetValueForKey+0xd8>
    b374:	e15a0005 	cmp	sl, r5
    b378:	e2844010 	add	r4, r4, #16
    b37c:	0a00001b 	beq	b3f0 <jsonGetValueForKey+0xd8>
    b380:	e5d42000 	ldrb	r2, [r4]
    b384:	e2855001 	add	r5, r5, #1
    b388:	e3520003 	cmp	r2, #3
    b38c:	1afffff8 	bne	b374 <jsonGetValueForKey+0x5c>
    b390:	e1a00006 	mov	r0, r6
    b394:	eb008500 	bl	2c79c <strlen>
    b398:	e5943004 	ldr	r3, [r4, #4]
    b39c:	e5941008 	ldr	r1, [r4, #8]
    b3a0:	e0411003 	sub	r1, r1, r3
    b3a4:	e1500001 	cmp	r0, r1
    b3a8:	1afffff1 	bne	b374 <jsonGetValueForKey+0x5c>
    b3ac:	e1a02000 	mov	r2, r0
    b3b0:	e1a01006 	mov	r1, r6
    b3b4:	e0870003 	add	r0, r7, r3
    b3b8:	eb008534 	bl	2c890 <strncmp>
    b3bc:	e3500000 	cmp	r0, #0
    b3c0:	1affffeb 	bne	b374 <jsonGetValueForKey+0x5c>
    b3c4:	e5941014 	ldr	r1, [r4, #20]
    b3c8:	e5942018 	ldr	r2, [r4, #24]
    b3cc:	e0422001 	sub	r2, r2, r1
    b3d0:	e1520008 	cmp	r2, r8
    b3d4:	aa000006 	bge	b3f4 <jsonGetValueForKey+0xdc>
    b3d8:	e2822001 	add	r2, r2, #1
    b3dc:	e0871001 	add	r1, r7, r1
    b3e0:	e1a00009 	mov	r0, r9
    b3e4:	eb0084d7 	bl	2c748 <strlcpy>
    b3e8:	e3a00001 	mov	r0, #1
    b3ec:	ea000000 	b	b3f4 <jsonGetValueForKey+0xdc>
    b3f0:	e3a00000 	mov	r0, #0
    b3f4:	e28ddf56 	add	sp, sp, #344	; 0x158
    b3f8:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    b3fc:	e1a00007 	mov	r0, r7
    b400:	eb0084e5 	bl	2c79c <strlen>
    b404:	e58d4000 	str	r4, [sp]
    b408:	e58d0004 	str	r0, [sp, #4]
    b40c:	e1a0300a 	mov	r3, sl
    b410:	e59f2014 	ldr	r2, [pc, #20]	; b42c <jsonGetValueForKey+0x114>
    b414:	e3a01004 	mov	r1, #4
    b418:	e59f0010 	ldr	r0, [pc, #16]	; b430 <jsonGetValueForKey+0x118>
    b41c:	ebfff8e4 	bl	97b4 <LogWrite>
    b420:	e3a00000 	mov	r0, #0
    b424:	e28ddf56 	add	sp, sp, #344	; 0x158
    b428:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    b42c:	0002e5c0 	.word	0x0002e5c0
    b430:	0002e5ec 	.word	0x0002e5ec

0000b434 <rdisspace>:
    b434:	e3500020 	cmp	r0, #32
    b438:	0a000004 	beq	b450 <rdisspace+0x1c>
    b43c:	e2400009 	sub	r0, r0, #9
    b440:	e3500004 	cmp	r0, #4
    b444:	83a00000 	movhi	r0, #0
    b448:	93a00001 	movls	r0, #1
    b44c:	e12fff1e 	bx	lr
    b450:	e3a00001 	mov	r0, #1
    b454:	e12fff1e 	bx	lr

0000b458 <rdisdigit>:
    b458:	e2400030 	sub	r0, r0, #48	; 0x30
    b45c:	e3500009 	cmp	r0, #9
    b460:	83a00000 	movhi	r0, #0
    b464:	93a00001 	movls	r0, #1
    b468:	e12fff1e 	bx	lr

0000b46c <rdisupper>:
    b46c:	e2400041 	sub	r0, r0, #65	; 0x41
    b470:	e3500019 	cmp	r0, #25
    b474:	83a00000 	movhi	r0, #0
    b478:	93a00001 	movls	r0, #1
    b47c:	e12fff1e 	bx	lr

0000b480 <rdtolower>:
    b480:	e2403041 	sub	r3, r0, #65	; 0x41
    b484:	e3530019 	cmp	r3, #25
    b488:	92800020 	addls	r0, r0, #32
    b48c:	96ef0070 	uxtbls	r0, r0
    b490:	e12fff1e 	bx	lr

0000b494 <rdisalpha>:
    b494:	e3c00020 	bic	r0, r0, #32
    b498:	e2400041 	sub	r0, r0, #65	; 0x41
    b49c:	e3500019 	cmp	r0, #25
    b4a0:	83a00000 	movhi	r0, #0
    b4a4:	93a00001 	movls	r0, #1
    b4a8:	e12fff1e 	bx	lr

0000b4ac <rdstrrev>:
    b4ac:	e92d4010 	push	{r4, lr}
    b4b0:	e1a04000 	mov	r4, r0
    b4b4:	eb0084b8 	bl	2c79c <strlen>
    b4b8:	e2403001 	sub	r3, r0, #1
    b4bc:	e3530000 	cmp	r3, #0
    b4c0:	d8bd8010 	pople	{r4, pc}
    b4c4:	e3a03000 	mov	r3, #0
    b4c8:	e244c001 	sub	ip, r4, #1
    b4cc:	e0841000 	add	r1, r4, r0
    b4d0:	e2833001 	add	r3, r3, #1
    b4d4:	e1e02003 	mvn	r2, r3
    b4d8:	e5fce001 	ldrb	lr, [ip, #1]!
    b4dc:	e5714001 	ldrb	r4, [r1, #-1]!
    b4e0:	e0822000 	add	r2, r2, r0
    b4e4:	e1530002 	cmp	r3, r2
    b4e8:	e5cc4000 	strb	r4, [ip]
    b4ec:	e5c1e000 	strb	lr, [r1]
    b4f0:	bafffff6 	blt	b4d0 <rdstrrev+0x24>
    b4f4:	e8bd8010 	pop	{r4, pc}

0000b4f8 <rditoa>:
    b4f8:	e3520000 	cmp	r2, #0
    b4fc:	0a00002c 	beq	b5b4 <rditoa+0xbc>
    b500:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
    b504:	e1a05001 	mov	r5, r1
    b508:	e1a06003 	mov	r6, r3
    b50c:	e1a08001 	mov	r8, r1
    b510:	e3a07000 	mov	r7, #0
    b514:	e2424001 	sub	r4, r2, #1
    b518:	ea000002 	b	b528 <rditoa+0x30>
    b51c:	e1540007 	cmp	r4, r7
    b520:	e2888001 	add	r8, r8, #1
    b524:	da00001f 	ble	b5a8 <rditoa+0xb0>
    b528:	e1a01006 	mov	r1, r6
    b52c:	eb008a1b 	bl	2dda0 <__aeabi_idivmod>
    b530:	e3510009 	cmp	r1, #9
    b534:	e6ef1071 	uxtb	r1, r1
    b538:	e2813030 	add	r3, r1, #48	; 0x30
    b53c:	c2811037 	addgt	r1, r1, #55	; 0x37
    b540:	d5c83000 	strble	r3, [r8]
    b544:	c5c81000 	strbgt	r1, [r8]
    b548:	e3500000 	cmp	r0, #0
    b54c:	e2877001 	add	r7, r7, #1
    b550:	1afffff1 	bne	b51c <rditoa+0x24>
    b554:	e3a04000 	mov	r4, #0
    b558:	e1a00005 	mov	r0, r5
    b55c:	e7c54007 	strb	r4, [r5, r7]
    b560:	eb00848d 	bl	2c79c <strlen>
    b564:	e2403001 	sub	r3, r0, #1
    b568:	e1530004 	cmp	r3, r4
    b56c:	c2451001 	subgt	r1, r5, #1
    b570:	c1a03004 	movgt	r3, r4
    b574:	c0855000 	addgt	r5, r5, r0
    b578:	da000008 	ble	b5a0 <rditoa+0xa8>
    b57c:	e2833001 	add	r3, r3, #1
    b580:	e1e02003 	mvn	r2, r3
    b584:	e5f1c001 	ldrb	ip, [r1, #1]!
    b588:	e575e001 	ldrb	lr, [r5, #-1]!
    b58c:	e0822000 	add	r2, r2, r0
    b590:	e1520003 	cmp	r2, r3
    b594:	e5c1e000 	strb	lr, [r1]
    b598:	e5c5c000 	strb	ip, [r5]
    b59c:	cafffff6 	bgt	b57c <rditoa+0x84>
    b5a0:	e3a00000 	mov	r0, #0
    b5a4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    b5a8:	1affffe9 	bne	b554 <rditoa+0x5c>
    b5ac:	e3e00000 	mvn	r0, #0
    b5b0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    b5b4:	e3e00000 	mvn	r0, #0
    b5b8:	e12fff1e 	bx	lr

0000b5bc <timers_init>:
    b5bc:	e3a01000 	mov	r1, #0
    b5c0:	e59f3010 	ldr	r3, [pc, #16]	; b5d8 <timers_init+0x1c>
    b5c4:	e2832e19 	add	r2, r3, #400	; 0x190
    b5c8:	e4831014 	str	r1, [r3], #20
    b5cc:	e1530002 	cmp	r3, r2
    b5d0:	1afffffc 	bne	b5c8 <timers_init+0xc>
    b5d4:	e12fff1e 	bx	lr
    b5d8:	00042940 	.word	0x00042940

0000b5dc <timer_attach_handler>:
    b5dc:	e92d4070 	push	{r4, r5, r6, lr}
    b5e0:	e59f5068 	ldr	r5, [pc, #104]	; b650 <timer_attach_handler+0x74>
    b5e4:	e3a04000 	mov	r4, #0
    b5e8:	e1a0c005 	mov	ip, r5
    b5ec:	ea000002 	b	b5fc <timer_attach_handler+0x20>
    b5f0:	e2844001 	add	r4, r4, #1
    b5f4:	e3540014 	cmp	r4, #20
    b5f8:	0a000011 	beq	b644 <timer_attach_handler+0x68>
    b5fc:	e59ce000 	ldr	lr, [ip]
    b600:	e28cc014 	add	ip, ip, #20
    b604:	e35e0000 	cmp	lr, #0
    b608:	1afffff8 	bne	b5f0 <timer_attach_handler+0x14>
    b60c:	e1a0e001 	mov	lr, r1
    b610:	e084c104 	add	ip, r4, r4, lsl #2
    b614:	e1a0c10c 	lsl	ip, ip, #2
    b618:	e085600c 	add	r6, r5, ip
    b61c:	e1a01000 	mov	r1, r0
    b620:	e785e00c 	str	lr, [r5, ip]
    b624:	e1c620f4 	strd	r2, [r6, #4]
    b628:	e59f0024 	ldr	r0, [pc, #36]	; b654 <timer_attach_handler+0x78>
    b62c:	eb00894c 	bl	2db64 <__udivsi3>
    b630:	e586000c 	str	r0, [r6, #12]
    b634:	eb002e62 	bl	16fc4 <micros>
    b638:	e5860010 	str	r0, [r6, #16]
    b63c:	e1a00004 	mov	r0, r4
    b640:	e8bd8070 	pop	{r4, r5, r6, pc}
    b644:	e3a04015 	mov	r4, #21
    b648:	e1a00004 	mov	r0, r4
    b64c:	e8bd8070 	pop	{r4, r5, r6, pc}
    b650:	00042940 	.word	0x00042940
    b654:	000f4240 	.word	0x000f4240

0000b658 <timer_poll>:
    b658:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
    b65c:	eb002e58 	bl	16fc4 <micros>
    b660:	e3a05000 	mov	r5, #0
    b664:	e1a07000 	mov	r7, r0
    b668:	e1a08005 	mov	r8, r5
    b66c:	e59f403c 	ldr	r4, [pc, #60]	; b6b0 <timer_poll+0x58>
    b670:	e5946000 	ldr	r6, [r4]
    b674:	e3560000 	cmp	r6, #0
    b678:	0a000007 	beq	b69c <timer_poll+0x44>
    b67c:	e1c420dc 	ldrd	r2, [r4, #12]
    b680:	e0473003 	sub	r3, r7, r3
    b684:	e1530002 	cmp	r3, r2
    b688:	9a000003 	bls	b69c <timer_poll+0x44>
    b68c:	e9940006 	ldmib	r4, {r1, r2}
    b690:	e5848000 	str	r8, [r4]
    b694:	e1a00005 	mov	r0, r5
    b698:	e12fff36 	blx	r6
    b69c:	e2855001 	add	r5, r5, #1
    b6a0:	e3550014 	cmp	r5, #20
    b6a4:	e2844014 	add	r4, r4, #20
    b6a8:	1afffff0 	bne	b670 <timer_poll+0x18>
    b6ac:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    b6b0:	00042940 	.word	0x00042940

0000b6b4 <wgfx_scroll.part.3>:
    b6b4:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    b6b8:	e59f615c 	ldr	r6, [pc, #348]	; b81c <wgfx_scroll.part.3+0x168>
    b6bc:	e24dd00c 	sub	sp, sp, #12
    b6c0:	e5d63000 	ldrb	r3, [r6]
    b6c4:	e1a05000 	mov	r5, r0
    b6c8:	e3530000 	cmp	r3, #0
    b6cc:	e1a08001 	mov	r8, r1
    b6d0:	0a000006 	beq	b6f0 <wgfx_scroll.part.3+0x3c>
    b6d4:	e59f4144 	ldr	r4, [pc, #324]	; b820 <wgfx_scroll.part.3+0x16c>
    b6d8:	ea000001 	b	b6e4 <wgfx_scroll.part.3+0x30>
    b6dc:	e2544001 	subs	r4, r4, #1
    b6e0:	0a000002 	beq	b6f0 <wgfx_scroll.part.3+0x3c>
    b6e4:	ebfff308 	bl	830c <dma_running>
    b6e8:	e3500000 	cmp	r0, #0
    b6ec:	1afffffa 	bne	b6dc <wgfx_scroll.part.3+0x28>
    b6f0:	e3a07000 	mov	r7, #0
    b6f4:	e0850105 	add	r0, r5, r5, lsl #2
    b6f8:	e0850080 	add	r0, r5, r0, lsl #1
    b6fc:	e0860100 	add	r0, r6, r0, lsl #2
    b700:	e596501c 	ldr	r5, [r6, #28]
    b704:	e028afc8 	eor	sl, r8, r8, asr #31
    b708:	e5909250 	ldr	r9, [r0, #592]	; 0x250
    b70c:	e04aafc8 	sub	sl, sl, r8, asr #31
    b710:	e045400a 	sub	r4, r5, sl
    b714:	e0040499 	mul	r4, r9, r4
    b718:	e0050599 	mul	r5, r9, r5
    b71c:	e590b244 	ldr	fp, [r0, #580]	; 0x244
    b720:	e5902258 	ldr	r2, [r0, #600]	; 0x258
    b724:	e590e23c 	ldr	lr, [r0, #572]	; 0x23c
    b728:	e596000c 	ldr	r0, [r6, #12]
    b72c:	e025b592 	mla	r5, r2, r5, fp
    b730:	e024b492 	mla	r4, r2, r4, fp
    b734:	e021eb90 	mla	r1, r0, fp, lr
    b738:	e596c014 	ldr	ip, [r6, #20]
    b73c:	e1580007 	cmp	r8, r7
    b740:	e0050590 	mul	r5, r0, r5
    b744:	e0040490 	mul	r4, r0, r4
    b748:	e08c1001 	add	r1, ip, r1
    b74c:	e5c67000 	strb	r7, [r6]
    b750:	ca00000d 	bgt	b78c <wgfx_scroll.part.3+0xd8>
    b754:	e24ee001 	sub	lr, lr, #1
    b758:	e08e3004 	add	r3, lr, r4
    b75c:	e08c3003 	add	r3, ip, r3
    b760:	e1530001 	cmp	r3, r1
    b764:	e08ee005 	add	lr, lr, r5
    b768:	9a000005 	bls	b784 <wgfx_scroll.part.3+0xd0>
    b76c:	e28ee001 	add	lr, lr, #1
    b770:	e08c200e 	add	r2, ip, lr
    b774:	e4530001 	ldrb	r0, [r3], #-1
    b778:	e1530001 	cmp	r3, r1
    b77c:	e5620001 	strb	r0, [r2, #-1]!
    b780:	1afffffb 	bne	b774 <wgfx_scroll.part.3+0xc0>
    b784:	e28dd00c 	add	sp, sp, #12
    b788:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    b78c:	e3a03e11 	mov	r3, #272	; 0x110
    b790:	e0090a99 	mul	r9, r9, sl
    b794:	e022b992 	mla	r2, r2, r9, fp
    b798:	e5d6a038 	ldrb	sl, [r6, #56]	; 0x38
    b79c:	e0020290 	mul	r2, r0, r2
    b7a0:	e1a0980a 	lsl	r9, sl, #16
    b7a4:	e59f8078 	ldr	r8, [pc, #120]	; b824 <wgfx_scroll.part.3+0x170>
    b7a8:	e1899c0a 	orr	r9, r9, sl, lsl #24
    b7ac:	e189900a 	orr	r9, r9, sl
    b7b0:	e3c8820f 	bic	r8, r8, #-268435456	; 0xf0000000
    b7b4:	e189940a 	orr	r9, r9, sl, lsl #8
    b7b8:	e3888101 	orr	r8, r8, #1073741824	; 0x40000000
    b7bc:	e082000e 	add	r0, r2, lr
    b7c0:	e5889000 	str	r9, [r8]
    b7c4:	e08ee004 	add	lr, lr, r4
    b7c8:	e5889004 	str	r9, [r8, #4]
    b7cc:	e5889008 	str	r9, [r8, #8]
    b7d0:	e588900c 	str	r9, [r8, #12]
    b7d4:	e0452002 	sub	r2, r5, r2
    b7d8:	e58d3000 	str	r3, [sp]
    b7dc:	e08c0000 	add	r0, ip, r0
    b7e0:	e1a03007 	mov	r3, r7
    b7e4:	e08c900e 	add	r9, ip, lr
    b7e8:	ebfff29b 	bl	825c <dma_enqueue_operation>
    b7ec:	e3a0c010 	mov	ip, #16
    b7f0:	e1a03007 	mov	r3, r7
    b7f4:	e1a01009 	mov	r1, r9
    b7f8:	e0452004 	sub	r2, r5, r4
    b7fc:	e58dc000 	str	ip, [sp]
    b800:	e1a00008 	mov	r0, r8
    b804:	ebfff294 	bl	825c <dma_enqueue_operation>
    b808:	ebfff2ae 	bl	82c8 <dma_execute_queue>
    b80c:	e3a03001 	mov	r3, #1
    b810:	e5c63000 	strb	r3, [r6]
    b814:	e28dd00c 	add	sp, sp, #12
    b818:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    b81c:	00042ad0 	.word	0x00042ad0
    b820:	000186a0 	.word	0x000186a0
    b824:	00080f00 	.word	0x00080f00

0000b828 <wgfx_putc.part.0>:
    b828:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    b82c:	e1a08100 	lsl	r8, r0, #2
    b830:	e0886000 	add	r6, r8, r0
    b834:	e59fa1f4 	ldr	sl, [pc, #500]	; ba30 <wgfx_putc.part.0+0x208>
    b838:	e0806086 	add	r6, r0, r6, lsl #1
    b83c:	e08a6106 	add	r6, sl, r6, lsl #2
    b840:	e596424c 	ldr	r4, [r6, #588]	; 0x24c
    b844:	e5965254 	ldr	r5, [r6, #596]	; 0x254
    b848:	e24dd014 	sub	sp, sp, #20
    b84c:	e1a09001 	mov	r9, r1
    b850:	e1a07000 	mov	r7, r0
    b854:	e0010495 	mul	r1, r5, r4
    b858:	e5960240 	ldr	r0, [r6, #576]	; 0x240
    b85c:	e1a0b002 	mov	fp, r2
    b860:	e58d3000 	str	r3, [sp]
    b864:	eb008903 	bl	2dc78 <__divsi3>
    b868:	e1500009 	cmp	r0, r9
    b86c:	da000009 	ble	b898 <wgfx_putc.part.0+0x70>
    b870:	e5962258 	ldr	r2, [r6, #600]	; 0x258
    b874:	e5963250 	ldr	r3, [r6, #592]	; 0x250
    b878:	e5960248 	ldr	r0, [r6, #584]	; 0x248
    b87c:	e0010392 	mul	r1, r2, r3
    b880:	e58d2008 	str	r2, [sp, #8]
    b884:	e58d3004 	str	r3, [sp, #4]
    b888:	eb0088fa 	bl	2dc78 <__divsi3>
    b88c:	e150000b 	cmp	r0, fp
    b890:	e59d2008 	ldr	r2, [sp, #8]
    b894:	ca000001 	bgt	b8a0 <wgfx_putc.part.0+0x78>
    b898:	e28dd014 	add	sp, sp, #20
    b89c:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    b8a0:	e5da3000 	ldrb	r3, [sl]
    b8a4:	e3530000 	cmp	r3, #0
    b8a8:	0a00000e 	beq	b8e8 <wgfx_putc.part.0+0xc0>
    b8ac:	e59f4180 	ldr	r4, [pc, #384]	; ba34 <wgfx_putc.part.0+0x20c>
    b8b0:	ea000001 	b	b8bc <wgfx_putc.part.0+0x94>
    b8b4:	e2544001 	subs	r4, r4, #1
    b8b8:	0a000002 	beq	b8c8 <wgfx_putc.part.0+0xa0>
    b8bc:	ebfff292 	bl	830c <dma_running>
    b8c0:	e3500000 	cmp	r0, #0
    b8c4:	1afffffa 	bne	b8b4 <wgfx_putc.part.0+0x8c>
    b8c8:	e0883007 	add	r3, r8, r7
    b8cc:	e0873083 	add	r3, r7, r3, lsl #1
    b8d0:	e08a3103 	add	r3, sl, r3, lsl #2
    b8d4:	e5932250 	ldr	r2, [r3, #592]	; 0x250
    b8d8:	e593424c 	ldr	r4, [r3, #588]	; 0x24c
    b8dc:	e58d2004 	str	r2, [sp, #4]
    b8e0:	e5935254 	ldr	r5, [r3, #596]	; 0x254
    b8e4:	e5932258 	ldr	r2, [r3, #600]	; 0x258
    b8e8:	e3a01000 	mov	r1, #0
    b8ec:	e59d0004 	ldr	r0, [sp, #4]
    b8f0:	e0883007 	add	r3, r8, r7
    b8f4:	e0000b90 	mul	r0, r0, fp
    b8f8:	e0090994 	mul	r9, r4, r9
    b8fc:	e0873083 	add	r3, r7, r3, lsl #1
    b900:	e08a3103 	add	r3, sl, r3, lsl #2
    b904:	e593e23c 	ldr	lr, [r3, #572]	; 0x23c
    b908:	e593c244 	ldr	ip, [r3, #580]	; 0x244
    b90c:	e029e995 	mla	r9, r5, r9, lr
    b910:	e02cc092 	mla	ip, r2, r0, ip
    b914:	e59a000c 	ldr	r0, [sl, #12]
    b918:	e593e264 	ldr	lr, [r3, #612]	; 0x264
    b91c:	e0209c90 	mla	r0, r0, ip, r9
    b920:	e59a6014 	ldr	r6, [sl, #20]
    b924:	e59ec00c 	ldr	ip, [lr, #12]
    b928:	e0866000 	add	r6, r6, r0
    b92c:	e5ca1000 	strb	r1, [sl]
    b930:	e59e0010 	ldr	r0, [lr, #16]
    b934:	e59d1000 	ldr	r1, [sp]
    b938:	e593325c 	ldr	r3, [r3, #604]	; 0x25c
    b93c:	e02b019c 	mla	fp, ip, r1, r0
    b940:	e0881007 	add	r1, r8, r7
    b944:	e0871081 	add	r1, r7, r1, lsl #1
    b948:	e08a1101 	add	r1, sl, r1, lsl #2
    b94c:	e58de00c 	str	lr, [sp, #12]
    b950:	e591e260 	ldr	lr, [r1, #608]	; 0x260
    b954:	e3730001 	cmn	r3, #1
    b958:	e59d1004 	ldr	r1, [sp, #4]
    b95c:	05da3039 	ldrbeq	r3, [sl, #57]	; 0x39
    b960:	e37e0001 	cmn	lr, #1
    b964:	05dae038 	ldrbeq	lr, [sl, #56]	; 0x38
    b968:	e3510000 	cmp	r1, #0
    b96c:	daffffc9 	ble	b898 <wgfx_putc.part.0+0x70>
    b970:	e3a01001 	mov	r1, #1
    b974:	e2440001 	sub	r0, r4, #1
    b978:	e1a01011 	lsl	r1, r1, r0
    b97c:	e3520000 	cmp	r2, #0
    b980:	e58d1000 	str	r1, [sp]
    b984:	daffffc3 	ble	b898 <wgfx_putc.part.0+0x70>
    b988:	e3a01000 	mov	r1, #0
    b98c:	e6ef7073 	uxtb	r7, r3
    b990:	e58d1008 	str	r1, [sp, #8]
    b994:	e6efe07e 	uxtb	lr, lr
    b998:	e3a09000 	mov	r9, #0
    b99c:	e3540000 	cmp	r4, #0
    b9a0:	da000012 	ble	b9f0 <wgfx_putc.part.0+0x1c8>
    b9a4:	e3550000 	cmp	r5, #0
    b9a8:	da000010 	ble	b9f0 <wgfx_putc.part.0+0x1c8>
    b9ac:	e1a00006 	mov	r0, r6
    b9b0:	e3a08000 	mov	r8, #0
    b9b4:	e59dc000 	ldr	ip, [sp]
    b9b8:	e1a03000 	mov	r3, r0
    b9bc:	e0800005 	add	r0, r0, r5
    b9c0:	e5db1000 	ldrb	r1, [fp]
    b9c4:	e111000c 	tst	r1, ip
    b9c8:	01a0100e 	moveq	r1, lr
    b9cc:	11a01007 	movne	r1, r7
    b9d0:	e4c31001 	strb	r1, [r3], #1
    b9d4:	e1530000 	cmp	r3, r0
    b9d8:	1afffff8 	bne	b9c0 <wgfx_putc.part.0+0x198>
    b9dc:	e2888001 	add	r8, r8, #1
    b9e0:	e1580004 	cmp	r8, r4
    b9e4:	e1a00003 	mov	r0, r3
    b9e8:	e1a0c0cc 	asr	ip, ip, #1
    b9ec:	1afffff1 	bne	b9b8 <wgfx_putc.part.0+0x190>
    b9f0:	e2899001 	add	r9, r9, #1
    b9f4:	e59a300c 	ldr	r3, [sl, #12]
    b9f8:	e1590002 	cmp	r9, r2
    b9fc:	e0866003 	add	r6, r6, r3
    ba00:	1affffe5 	bne	b99c <wgfx_putc.part.0+0x174>
    ba04:	e59d3008 	ldr	r3, [sp, #8]
    ba08:	e59d0004 	ldr	r0, [sp, #4]
    ba0c:	e2831001 	add	r1, r3, #1
    ba10:	e59d300c 	ldr	r3, [sp, #12]
    ba14:	e1510000 	cmp	r1, r0
    ba18:	e5933008 	ldr	r3, [r3, #8]
    ba1c:	e58d1008 	str	r1, [sp, #8]
    ba20:	e08bb003 	add	fp, fp, r3
    ba24:	1affffdb 	bne	b998 <wgfx_putc.part.0+0x170>
    ba28:	e28dd014 	add	sp, sp, #20
    ba2c:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    ba30:	00042ad0 	.word	0x00042ad0
    ba34:	000186a0 	.word	0x000186a0

0000ba38 <wgfx_set_window>:
    ba38:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    ba3c:	e24dd01c 	sub	sp, sp, #28
    ba40:	e59dc054 	ldr	ip, [sp, #84]	; 0x54
    ba44:	e59fe2d8 	ldr	lr, [pc, #728]	; bd24 <wgfx_set_window+0x2ec>
    ba48:	e35c0000 	cmp	ip, #0
    ba4c:	01a0c00e 	moveq	ip, lr
    ba50:	e28d5048 	add	r5, sp, #72	; 0x48
    ba54:	e3500004 	cmp	r0, #4
    ba58:	e59d7044 	ldr	r7, [sp, #68]	; 0x44
    ba5c:	e8954820 	ldm	r5, {r5, fp, lr}
    ba60:	e59d8060 	ldr	r8, [sp, #96]	; 0x60
    ba64:	8a0000ac 	bhi	bd1c <wgfx_set_window+0x2e4>
    ba68:	e2914001 	adds	r4, r1, #1
    ba6c:	13a04001 	movne	r4, #1
    ba70:	e3730001 	cmn	r3, #1
    ba74:	13a04000 	movne	r4, #0
    ba78:	e3540000 	cmp	r4, #0
    ba7c:	159f42a4 	ldrne	r4, [pc, #676]	; bd28 <wgfx_set_window+0x2f0>
    ba80:	0003039b 	muleq	r3, fp, r3
    ba84:	15943004 	ldrne	r3, [r4, #4]
    ba88:	058d3000 	streq	r3, [sp]
    ba8c:	10433001 	subne	r3, r3, r1
    ba90:	10433088 	subne	r3, r3, r8, lsl #1
    ba94:	158d3000 	strne	r3, [sp]
    ba98:	e59d6040 	ldr	r6, [sp, #64]	; 0x40
    ba9c:	e1a03100 	lsl	r3, r0, #2
    baa0:	059f4280 	ldreq	r4, [pc, #640]	; bd28 <wgfx_set_window+0x2f0>
    baa4:	e0839000 	add	r9, r3, r0
    baa8:	e3760001 	cmn	r6, #1
    baac:	e0809089 	add	r9, r0, r9, lsl #1
    bab0:	e59d6000 	ldr	r6, [sp]
    bab4:	e0849109 	add	r9, r4, r9, lsl #2
    bab8:	e5896240 	str	r6, [r9, #576]	; 0x240
    babc:	05949008 	ldreq	r9, [r4, #8]
    bac0:	159d6040 	ldrne	r6, [sp, #64]	; 0x40
    bac4:	00499002 	subeq	r9, r9, r2
    bac8:	1009069e 	mulne	r9, lr, r6
    bacc:	00499088 	subeq	r9, r9, r8, lsl #1
    bad0:	e3710001 	cmn	r1, #1
    bad4:	05941004 	ldreq	r1, [r4, #4]
    bad8:	059d6000 	ldreq	r6, [sp]
    badc:	1021819b 	mlane	r1, fp, r1, r8
    bae0:	00411006 	subeq	r1, r1, r6
    bae4:	e0268e92 	mla	r6, r2, lr, r8
    bae8:	e0832000 	add	r2, r3, r0
    baec:	e0802082 	add	r2, r0, r2, lsl #1
    baf0:	01a010a1 	lsreq	r1, r1, #1
    baf4:	e0842102 	add	r2, r4, r2, lsl #2
    baf8:	e3770001 	cmn	r7, #1
    bafc:	e582123c 	str	r1, [r2, #572]	; 0x23c
    bb00:	e58d1004 	str	r1, [sp, #4]
    bb04:	e59d1064 	ldr	r1, [sp, #100]	; 0x64
    bb08:	059c7000 	ldreq	r7, [ip]
    bb0c:	e3750001 	cmn	r5, #1
    bb10:	059c5004 	ldreq	r5, [ip, #4]
    bb14:	e3710001 	cmn	r1, #1
    bb18:	13580000 	cmpne	r8, #0
    bb1c:	e5826244 	str	r6, [r2, #580]	; 0x244
    bb20:	e0832000 	add	r2, r3, r0
    bb24:	e0802082 	add	r2, r0, r2, lsl #1
    bb28:	e083a000 	add	sl, r3, r0
    bb2c:	e0842102 	add	r2, r4, r2, lsl #2
    bb30:	e0833000 	add	r3, r3, r0
    bb34:	e582724c 	str	r7, [r2, #588]	; 0x24c
    bb38:	e0803083 	add	r3, r0, r3, lsl #1
    bb3c:	e59d2058 	ldr	r2, [sp, #88]	; 0x58
    bb40:	e0843103 	add	r3, r4, r3, lsl #2
    bb44:	e080a08a 	add	sl, r0, sl, lsl #1
    bb48:	e583225c 	str	r2, [r3, #604]	; 0x25c
    bb4c:	e59d205c 	ldr	r2, [sp, #92]	; 0x5c
    bb50:	e084a10a 	add	sl, r4, sl, lsl #2
    bb54:	e58a9248 	str	r9, [sl, #584]	; 0x248
    bb58:	e58d0014 	str	r0, [sp, #20]
    bb5c:	e5835250 	str	r5, [r3, #592]	; 0x250
    bb60:	e583b254 	str	fp, [r3, #596]	; 0x254
    bb64:	e583e258 	str	lr, [r3, #600]	; 0x258
    bb68:	e583c264 	str	ip, [r3, #612]	; 0x264
    bb6c:	e5832260 	str	r2, [r3, #608]	; 0x260
    bb70:	da000065 	ble	bd0c <wgfx_set_window+0x2d4>
    bb74:	e1a02088 	lsl	r2, r8, #1
    bb78:	e1a01002 	mov	r1, r2
    bb7c:	e59d0000 	ldr	r0, [sp]
    bb80:	e0469008 	sub	r9, r6, r8
    bb84:	e081b000 	add	fp, r1, r0
    bb88:	e58d6010 	str	r6, [sp, #16]
    bb8c:	e3a07000 	mov	r7, #0
    bb90:	e1a0600b 	mov	r6, fp
    bb94:	e1a0b003 	mov	fp, r3
    bb98:	e59d1004 	ldr	r1, [sp, #4]
    bb9c:	e58d200c 	str	r2, [sp, #12]
    bba0:	e5d42000 	ldrb	r2, [r4]
    bba4:	e041a008 	sub	sl, r1, r8
    bba8:	e58d8060 	str	r8, [sp, #96]	; 0x60
    bbac:	e3520000 	cmp	r2, #0
    bbb0:	e58da008 	str	sl, [sp, #8]
    bbb4:	e0895007 	add	r5, r9, r7
    bbb8:	e1a08006 	mov	r8, r6
    bbbc:	0a000011 	beq	bc08 <wgfx_set_window+0x1d0>
    bbc0:	e59f9164 	ldr	r9, [pc, #356]	; bd2c <wgfx_set_window+0x2f4>
    bbc4:	ea000001 	b	bbd0 <wgfx_set_window+0x198>
    bbc8:	e2599001 	subs	r9, r9, #1
    bbcc:	0a000002 	beq	bbdc <wgfx_set_window+0x1a4>
    bbd0:	ebfff1cd 	bl	830c <dma_running>
    bbd4:	e3500000 	cmp	r0, #0
    bbd8:	1afffffa 	bne	bbc8 <wgfx_set_window+0x190>
    bbdc:	e59b323c 	ldr	r3, [fp, #572]	; 0x23c
    bbe0:	e59d0060 	ldr	r0, [sp, #96]	; 0x60
    bbe4:	e59b2244 	ldr	r2, [fp, #580]	; 0x244
    bbe8:	e59b1240 	ldr	r1, [fp, #576]	; 0x240
    bbec:	e58d3004 	str	r3, [sp, #4]
    bbf0:	e043a000 	sub	sl, r3, r0
    bbf4:	e59d300c 	ldr	r3, [sp, #12]
    bbf8:	e58d2010 	str	r2, [sp, #16]
    bbfc:	e58d1000 	str	r1, [sp]
    bc00:	e0429000 	sub	r9, r2, r0
    bc04:	e0836001 	add	r6, r3, r1
    bc08:	e3a03000 	mov	r3, #0
    bc0c:	e594200c 	ldr	r2, [r4, #12]
    bc10:	e3580000 	cmp	r8, #0
    bc14:	e5c43000 	strb	r3, [r4]
    bc18:	e0050592 	mul	r5, r2, r5
    bc1c:	e5940014 	ldr	r0, [r4, #20]
    bc20:	da000008 	ble	bc48 <wgfx_set_window+0x210>
    bc24:	e59d3008 	ldr	r3, [sp, #8]
    bc28:	e1a02008 	mov	r2, r8
    bc2c:	e0835005 	add	r5, r3, r5
    bc30:	e59d3064 	ldr	r3, [sp, #100]	; 0x64
    bc34:	e0800005 	add	r0, r0, r5
    bc38:	e6ef1073 	uxtb	r1, r3
    bc3c:	eb008146 	bl	2c15c <memset>
    bc40:	e5940014 	ldr	r0, [r4, #20]
    bc44:	e594200c 	ldr	r2, [r4, #12]
    bc48:	e59b5248 	ldr	r5, [fp, #584]	; 0x248
    bc4c:	e59d3010 	ldr	r3, [sp, #16]
    bc50:	e3560000 	cmp	r6, #0
    bc54:	e0851003 	add	r1, r5, r3
    bc58:	e0811007 	add	r1, r1, r7
    bc5c:	e0010192 	mul	r1, r2, r1
    bc60:	da000007 	ble	bc84 <wgfx_set_window+0x24c>
    bc64:	e59d3064 	ldr	r3, [sp, #100]	; 0x64
    bc68:	e08a1001 	add	r1, sl, r1
    bc6c:	e0800001 	add	r0, r0, r1
    bc70:	e1a02006 	mov	r2, r6
    bc74:	e6ef1073 	uxtb	r1, r3
    bc78:	eb008137 	bl	2c15c <memset>
    bc7c:	e5940014 	ldr	r0, [r4, #20]
    bc80:	e594200c 	ldr	r2, [r4, #12]
    bc84:	e087100a 	add	r1, r7, sl
    bc88:	e0221992 	mla	r2, r2, r9, r1
    bc8c:	e59d300c 	ldr	r3, [sp, #12]
    bc90:	e0800002 	add	r0, r0, r2
    bc94:	e0835005 	add	r5, r3, r5
    bc98:	e3550000 	cmp	r5, #0
    bc9c:	da000015 	ble	bcf8 <wgfx_set_window+0x2c0>
    bca0:	e3a0c000 	mov	ip, #0
    bca4:	e59d3064 	ldr	r3, [sp, #100]	; 0x64
    bca8:	e6ef1073 	uxtb	r1, r3
    bcac:	e5c01000 	strb	r1, [r0]
    bcb0:	e28cc001 	add	ip, ip, #1
    bcb4:	e594200c 	ldr	r2, [r4, #12]
    bcb8:	e155000c 	cmp	r5, ip
    bcbc:	e0800002 	add	r0, r0, r2
    bcc0:	1afffff9 	bne	bcac <wgfx_set_window+0x274>
    bcc4:	e89d1008 	ldm	sp, {r3, ip}
    bcc8:	e3a00000 	mov	r0, #0
    bccc:	e083c00c 	add	ip, r3, ip
    bcd0:	e08cc007 	add	ip, ip, r7
    bcd4:	e02cc992 	mla	ip, r2, r9, ip
    bcd8:	e5942014 	ldr	r2, [r4, #20]
    bcdc:	e082200c 	add	r2, r2, ip
    bce0:	e5c21000 	strb	r1, [r2]
    bce4:	e2800001 	add	r0, r0, #1
    bce8:	e594300c 	ldr	r3, [r4, #12]
    bcec:	e1550000 	cmp	r5, r0
    bcf0:	e0822003 	add	r2, r2, r3
    bcf4:	1afffff9 	bne	bce0 <wgfx_set_window+0x2a8>
    bcf8:	e59d3060 	ldr	r3, [sp, #96]	; 0x60
    bcfc:	e2877001 	add	r7, r7, #1
    bd00:	e1530007 	cmp	r3, r7
    bd04:	e3a02000 	mov	r2, #0
    bd08:	caffffa7 	bgt	bbac <wgfx_set_window+0x174>
    bd0c:	e3a03001 	mov	r3, #1
    bd10:	e59d2014 	ldr	r2, [sp, #20]
    bd14:	e0844002 	add	r4, r4, r2
    bd18:	e5c43318 	strb	r3, [r4, #792]	; 0x318
    bd1c:	e28dd01c 	add	sp, sp, #28
    bd20:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    bd24:	00034a28 	.word	0x00034a28
    bd28:	00042ad0 	.word	0x00042ad0
    bd2c:	000186a0 	.word	0x000186a0

0000bd30 <wgfx_set_console_window>:
    bd30:	e3500004 	cmp	r0, #4
    bd34:	812fff1e 	bxhi	lr
    bd38:	e1a03000 	mov	r3, r0
    bd3c:	e92d4070 	push	{r4, r5, r6, lr}
    bd40:	e59f504c 	ldr	r5, [pc, #76]	; bd94 <wgfx_set_console_window+0x64>
    bd44:	e0804100 	add	r4, r0, r0, lsl #2
    bd48:	e0804084 	add	r4, r0, r4, lsl #1
    bd4c:	e0854104 	add	r4, r5, r4, lsl #2
    bd50:	e594224c 	ldr	r2, [r4, #588]	; 0x24c
    bd54:	e5941254 	ldr	r1, [r4, #596]	; 0x254
    bd58:	e5853034 	str	r3, [r5, #52]	; 0x34
    bd5c:	e0010291 	mul	r1, r1, r2
    bd60:	e5940240 	ldr	r0, [r4, #576]	; 0x240
    bd64:	eb0087c3 	bl	2dc78 <__divsi3>
    bd68:	e5943250 	ldr	r3, [r4, #592]	; 0x250
    bd6c:	e5941258 	ldr	r1, [r4, #600]	; 0x258
    bd70:	e5850018 	str	r0, [r5, #24]
    bd74:	e0010391 	mul	r1, r1, r3
    bd78:	e5940248 	ldr	r0, [r4, #584]	; 0x248
    bd7c:	eb0087bd 	bl	2dc78 <__divsi3>
    bd80:	e3a03000 	mov	r3, #0
    bd84:	e585001c 	str	r0, [r5, #28]
    bd88:	e5853024 	str	r3, [r5, #36]	; 0x24
    bd8c:	e5853020 	str	r3, [r5, #32]
    bd90:	e8bd8070 	pop	{r4, r5, r6, pc}
    bd94:	00042ad0 	.word	0x00042ad0

0000bd98 <wgfx_clear>:
    bd98:	e92d4070 	push	{r4, r5, r6, lr}
    bd9c:	e59f5174 	ldr	r5, [pc, #372]	; bf18 <wgfx_clear+0x180>
    bda0:	e5d53000 	ldrb	r3, [r5]
    bda4:	e3530000 	cmp	r3, #0
    bda8:	0a000006 	beq	bdc8 <wgfx_clear+0x30>
    bdac:	e59f4168 	ldr	r4, [pc, #360]	; bf1c <wgfx_clear+0x184>
    bdb0:	ea000001 	b	bdbc <wgfx_clear+0x24>
    bdb4:	e2544001 	subs	r4, r4, #1
    bdb8:	0a000002 	beq	bdc8 <wgfx_clear+0x30>
    bdbc:	ebfff152 	bl	830c <dma_running>
    bdc0:	e3500000 	cmp	r0, #0
    bdc4:	1afffffa 	bne	bdb4 <wgfx_clear+0x1c>
    bdc8:	e3a02000 	mov	r2, #0
    bdcc:	e5953014 	ldr	r3, [r5, #20]
    bdd0:	e595c010 	ldr	ip, [r5, #16]
    bdd4:	e5c52000 	strb	r2, [r5]
    bdd8:	e083000c 	add	r0, r3, ip
    bddc:	e1530000 	cmp	r3, r0
    bde0:	28bd8070 	popcs	{r4, r5, r6, pc}
    bde4:	e59f2134 	ldr	r2, [pc, #308]	; bf20 <wgfx_clear+0x188>
    bde8:	e283e001 	add	lr, r3, #1
    bdec:	e2821001 	add	r1, r2, #1
    bdf0:	e1510003 	cmp	r1, r3
    bdf4:	81500002 	cmphi	r0, r2
    bdf8:	93a02001 	movls	r2, #1
    bdfc:	83a02000 	movhi	r2, #0
    be00:	e35c000b 	cmp	ip, #11
    be04:	93a02000 	movls	r2, #0
    be08:	82022001 	andhi	r2, r2, #1
    be0c:	e3520000 	cmp	r2, #0
    be10:	e1a0200e 	mov	r2, lr
    be14:	0a000039 	beq	bf00 <wgfx_clear+0x168>
    be18:	e2634000 	rsb	r4, r3, #0
    be1c:	e2144003 	ands	r4, r4, #3
    be20:	01a0e003 	moveq	lr, r3
    be24:	0a00000a 	beq	be54 <wgfx_clear+0xbc>
    be28:	e5d52038 	ldrb	r2, [r5, #56]	; 0x38
    be2c:	e3540001 	cmp	r4, #1
    be30:	e5c32000 	strb	r2, [r3]
    be34:	0a000006 	beq	be54 <wgfx_clear+0xbc>
    be38:	e5d52038 	ldrb	r2, [r5, #56]	; 0x38
    be3c:	e3540003 	cmp	r4, #3
    be40:	e5c32001 	strb	r2, [r3, #1]
    be44:	05d52038 	ldrbeq	r2, [r5, #56]	; 0x38
    be48:	e283e002 	add	lr, r3, #2
    be4c:	05c32002 	strbeq	r2, [r3, #2]
    be50:	0283e003 	addeq	lr, r3, #3
    be54:	e3a02000 	mov	r2, #0
    be58:	e5d56038 	ldrb	r6, [r5, #56]	; 0x38
    be5c:	e04cc004 	sub	ip, ip, r4
    be60:	e1861406 	orr	r1, r6, r6, lsl #8
    be64:	e1811806 	orr	r1, r1, r6, lsl #16
    be68:	e0833004 	add	r3, r3, r4
    be6c:	e1811c06 	orr	r1, r1, r6, lsl #24
    be70:	e1a0412c 	lsr	r4, ip, #2
    be74:	e2822001 	add	r2, r2, #1
    be78:	e1520004 	cmp	r2, r4
    be7c:	e4831004 	str	r1, [r3], #4
    be80:	3afffffb 	bcc	be74 <wgfx_clear+0xdc>
    be84:	e3cc2003 	bic	r2, ip, #3
    be88:	e15c0002 	cmp	ip, r2
    be8c:	e08e3002 	add	r3, lr, r2
    be90:	08bd8070 	popeq	{r4, r5, r6, pc}
    be94:	e5d51038 	ldrb	r1, [r5, #56]	; 0x38
    be98:	e283c001 	add	ip, r3, #1
    be9c:	e150000c 	cmp	r0, ip
    bea0:	e7ce1002 	strb	r1, [lr, r2]
    bea4:	98bd8070 	popls	{r4, r5, r6, pc}
    bea8:	e5d52038 	ldrb	r2, [r5, #56]	; 0x38
    beac:	e2831002 	add	r1, r3, #2
    beb0:	e1500001 	cmp	r0, r1
    beb4:	e5c32001 	strb	r2, [r3, #1]
    beb8:	98bd8070 	popls	{r4, r5, r6, pc}
    bebc:	e5d52038 	ldrb	r2, [r5, #56]	; 0x38
    bec0:	e2831003 	add	r1, r3, #3
    bec4:	e1500001 	cmp	r0, r1
    bec8:	e5c32002 	strb	r2, [r3, #2]
    becc:	98bd8070 	popls	{r4, r5, r6, pc}
    bed0:	e5d52038 	ldrb	r2, [r5, #56]	; 0x38
    bed4:	e2831004 	add	r1, r3, #4
    bed8:	e1500001 	cmp	r0, r1
    bedc:	e5c32003 	strb	r2, [r3, #3]
    bee0:	98bd8070 	popls	{r4, r5, r6, pc}
    bee4:	e5d52038 	ldrb	r2, [r5, #56]	; 0x38
    bee8:	e2831005 	add	r1, r3, #5
    beec:	e1500001 	cmp	r0, r1
    bef0:	e5c32004 	strb	r2, [r3, #4]
    bef4:	85d52038 	ldrbhi	r2, [r5, #56]	; 0x38
    bef8:	85c32005 	strbhi	r2, [r3, #5]
    befc:	e8bd8070 	pop	{r4, r5, r6, pc}
    bf00:	e5d53038 	ldrb	r3, [r5, #56]	; 0x38
    bf04:	e1500002 	cmp	r0, r2
    bf08:	e5423001 	strb	r3, [r2, #-1]
    bf0c:	08bd8070 	popeq	{r4, r5, r6, pc}
    bf10:	e2822001 	add	r2, r2, #1
    bf14:	eafffff9 	b	bf00 <wgfx_clear+0x168>
    bf18:	00042ad0 	.word	0x00042ad0
    bf1c:	000186a0 	.word	0x000186a0
    bf20:	00042b08 	.word	0x00042b08

0000bf24 <wgfx_check_curpos>:
    bf24:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    bf28:	e59f4150 	ldr	r4, [pc, #336]	; c080 <wgfx_check_curpos+0x15c>
    bf2c:	e24dd008 	sub	sp, sp, #8
    bf30:	e5942018 	ldr	r2, [r4, #24]
    bf34:	e5941024 	ldr	r1, [r4, #36]	; 0x24
    bf38:	e5943020 	ldr	r3, [r4, #32]
    bf3c:	e1510002 	cmp	r1, r2
    bf40:	23a02000 	movcs	r2, #0
    bf44:	25842024 	strcs	r2, [r4, #36]	; 0x24
    bf48:	e594201c 	ldr	r2, [r4, #28]
    bf4c:	22833001 	addcs	r3, r3, #1
    bf50:	25843020 	strcs	r3, [r4, #32]
    bf54:	e1520003 	cmp	r2, r3
    bf58:	8a000004 	bhi	bf70 <wgfx_check_curpos+0x4c>
    bf5c:	e5946034 	ldr	r6, [r4, #52]	; 0x34
    bf60:	e2433001 	sub	r3, r3, #1
    bf64:	e3560004 	cmp	r6, #4
    bf68:	e5843020 	str	r3, [r4, #32]
    bf6c:	9a000001 	bls	bf78 <wgfx_check_curpos+0x54>
    bf70:	e28dd008 	add	sp, sp, #8
    bf74:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    bf78:	e5d43000 	ldrb	r3, [r4]
    bf7c:	e3530000 	cmp	r3, #0
    bf80:	0a000007 	beq	bfa4 <wgfx_check_curpos+0x80>
    bf84:	e59f50f8 	ldr	r5, [pc, #248]	; c084 <wgfx_check_curpos+0x160>
    bf88:	ea000001 	b	bf94 <wgfx_check_curpos+0x70>
    bf8c:	e2555001 	subs	r5, r5, #1
    bf90:	0a000002 	beq	bfa0 <wgfx_check_curpos+0x7c>
    bf94:	ebfff0dc 	bl	830c <dma_running>
    bf98:	e3500000 	cmp	r0, #0
    bf9c:	1afffffa 	bne	bf8c <wgfx_check_curpos+0x68>
    bfa0:	e594201c 	ldr	r2, [r4, #28]
    bfa4:	e3a07000 	mov	r7, #0
    bfa8:	e3a0ce11 	mov	ip, #272	; 0x110
    bfac:	e0863106 	add	r3, r6, r6, lsl #2
    bfb0:	e0866083 	add	r6, r6, r3, lsl #1
    bfb4:	e0846106 	add	r6, r4, r6, lsl #2
    bfb8:	e5960250 	ldr	r0, [r6, #592]	; 0x250
    bfbc:	e2428001 	sub	r8, r2, #1
    bfc0:	e0050290 	mul	r5, r0, r2
    bfc4:	e0080890 	mul	r8, r0, r8
    bfc8:	e596e258 	ldr	lr, [r6, #600]	; 0x258
    bfcc:	e5961244 	ldr	r1, [r6, #580]	; 0x244
    bfd0:	e594300c 	ldr	r3, [r4, #12]
    bfd4:	e022109e 	mla	r2, lr, r0, r1
    bfd8:	e028189e 	mla	r8, lr, r8, r1
    bfdc:	e025159e 	mla	r5, lr, r5, r1
    bfe0:	e5d4a038 	ldrb	sl, [r4, #56]	; 0x38
    bfe4:	e596e23c 	ldr	lr, [r6, #572]	; 0x23c
    bfe8:	e0020293 	mul	r2, r3, r2
    bfec:	e0080893 	mul	r8, r3, r8
    bff0:	e0050593 	mul	r5, r3, r5
    bff4:	e021e193 	mla	r1, r3, r1, lr
    bff8:	e59f6088 	ldr	r6, [pc, #136]	; c088 <wgfx_check_curpos+0x164>
    bffc:	e1a0380a 	lsl	r3, sl, #16
    c000:	e1833c0a 	orr	r3, r3, sl, lsl #24
    c004:	e5949014 	ldr	r9, [r4, #20]
    c008:	e183300a 	orr	r3, r3, sl
    c00c:	e3c6620f 	bic	r6, r6, #-268435456	; 0xf0000000
    c010:	e183340a 	orr	r3, r3, sl, lsl #8
    c014:	e3866101 	orr	r6, r6, #1073741824	; 0x40000000
    c018:	e08e0002 	add	r0, lr, r2
    c01c:	e5863000 	str	r3, [r6]
    c020:	e08ee008 	add	lr, lr, r8
    c024:	e5863004 	str	r3, [r6, #4]
    c028:	e5863008 	str	r3, [r6, #8]
    c02c:	e586300c 	str	r3, [r6, #12]
    c030:	e0452002 	sub	r2, r5, r2
    c034:	e0891001 	add	r1, r9, r1
    c038:	e58dc000 	str	ip, [sp]
    c03c:	e1a03007 	mov	r3, r7
    c040:	e0890000 	add	r0, r9, r0
    c044:	e5c47000 	strb	r7, [r4]
    c048:	e089900e 	add	r9, r9, lr
    c04c:	ebfff082 	bl	825c <dma_enqueue_operation>
    c050:	e3a0c010 	mov	ip, #16
    c054:	e1a03007 	mov	r3, r7
    c058:	e1a01009 	mov	r1, r9
    c05c:	e0452008 	sub	r2, r5, r8
    c060:	e58dc000 	str	ip, [sp]
    c064:	e1a00006 	mov	r0, r6
    c068:	ebfff07b 	bl	825c <dma_enqueue_operation>
    c06c:	ebfff095 	bl	82c8 <dma_execute_queue>
    c070:	e3a03001 	mov	r3, #1
    c074:	e5c43000 	strb	r3, [r4]
    c078:	e28dd008 	add	sp, sp, #8
    c07c:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    c080:	00042ad0 	.word	0x00042ad0
    c084:	000186a0 	.word	0x000186a0
    c088:	00080f00 	.word	0x00080f00

0000c08c <wgfx_term_putchar>:
    c08c:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    c090:	e2402008 	sub	r2, r0, #8
    c094:	e24dd008 	sub	sp, sp, #8
    c098:	e3520005 	cmp	r2, #5
    c09c:	979ff102 	ldrls	pc, [pc, r2, lsl #2]
    c0a0:	ea00007c 	b	c298 <wgfx_term_putchar+0x20c>
    c0a4:	0000c250 	.word	0x0000c250
    c0a8:	0000c21c 	.word	0x0000c21c
    c0ac:	0000c0d0 	.word	0x0000c0d0
    c0b0:	0000c298 	.word	0x0000c298
    c0b4:	0000c298 	.word	0x0000c298
    c0b8:	0000c0bc 	.word	0x0000c0bc
    c0bc:	e3a02000 	mov	r2, #0
    c0c0:	e59f3220 	ldr	r3, [pc, #544]	; c2e8 <wgfx_term_putchar+0x25c>
    c0c4:	e5832024 	str	r2, [r3, #36]	; 0x24
    c0c8:	e28dd008 	add	sp, sp, #8
    c0cc:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    c0d0:	e3a01000 	mov	r1, #0
    c0d4:	e59f420c 	ldr	r4, [pc, #524]	; c2e8 <wgfx_term_putchar+0x25c>
    c0d8:	e5942020 	ldr	r2, [r4, #32]
    c0dc:	e5940018 	ldr	r0, [r4, #24]
    c0e0:	e2823001 	add	r3, r2, #1
    c0e4:	e1500001 	cmp	r0, r1
    c0e8:	e5843020 	str	r3, [r4, #32]
    c0ec:	02823002 	addeq	r3, r2, #2
    c0f0:	e594201c 	ldr	r2, [r4, #28]
    c0f4:	05843020 	streq	r3, [r4, #32]
    c0f8:	e1520003 	cmp	r2, r3
    c0fc:	e5841024 	str	r1, [r4, #36]	; 0x24
    c100:	8afffff0 	bhi	c0c8 <wgfx_term_putchar+0x3c>
    c104:	e5946034 	ldr	r6, [r4, #52]	; 0x34
    c108:	e2433001 	sub	r3, r3, #1
    c10c:	e3560004 	cmp	r6, #4
    c110:	e5843020 	str	r3, [r4, #32]
    c114:	8affffeb 	bhi	c0c8 <wgfx_term_putchar+0x3c>
    c118:	e5d43000 	ldrb	r3, [r4]
    c11c:	e3530000 	cmp	r3, #0
    c120:	0a000007 	beq	c144 <wgfx_term_putchar+0xb8>
    c124:	e59f51c0 	ldr	r5, [pc, #448]	; c2ec <wgfx_term_putchar+0x260>
    c128:	ea000001 	b	c134 <wgfx_term_putchar+0xa8>
    c12c:	e2555001 	subs	r5, r5, #1
    c130:	0a000002 	beq	c140 <wgfx_term_putchar+0xb4>
    c134:	ebfff074 	bl	830c <dma_running>
    c138:	e3500000 	cmp	r0, #0
    c13c:	1afffffa 	bne	c12c <wgfx_term_putchar+0xa0>
    c140:	e594201c 	ldr	r2, [r4, #28]
    c144:	e3a07000 	mov	r7, #0
    c148:	e3a0ce11 	mov	ip, #272	; 0x110
    c14c:	e0863106 	add	r3, r6, r6, lsl #2
    c150:	e0866083 	add	r6, r6, r3, lsl #1
    c154:	e0846106 	add	r6, r4, r6, lsl #2
    c158:	e5960250 	ldr	r0, [r6, #592]	; 0x250
    c15c:	e2428001 	sub	r8, r2, #1
    c160:	e0050290 	mul	r5, r0, r2
    c164:	e0080890 	mul	r8, r0, r8
    c168:	e596e258 	ldr	lr, [r6, #600]	; 0x258
    c16c:	e5961244 	ldr	r1, [r6, #580]	; 0x244
    c170:	e594300c 	ldr	r3, [r4, #12]
    c174:	e022109e 	mla	r2, lr, r0, r1
    c178:	e028189e 	mla	r8, lr, r8, r1
    c17c:	e025159e 	mla	r5, lr, r5, r1
    c180:	e5d4a038 	ldrb	sl, [r4, #56]	; 0x38
    c184:	e596e23c 	ldr	lr, [r6, #572]	; 0x23c
    c188:	e0020293 	mul	r2, r3, r2
    c18c:	e0080893 	mul	r8, r3, r8
    c190:	e0050593 	mul	r5, r3, r5
    c194:	e021e193 	mla	r1, r3, r1, lr
    c198:	e59f6150 	ldr	r6, [pc, #336]	; c2f0 <wgfx_term_putchar+0x264>
    c19c:	e1a0380a 	lsl	r3, sl, #16
    c1a0:	e1833c0a 	orr	r3, r3, sl, lsl #24
    c1a4:	e5949014 	ldr	r9, [r4, #20]
    c1a8:	e183300a 	orr	r3, r3, sl
    c1ac:	e3c6620f 	bic	r6, r6, #-268435456	; 0xf0000000
    c1b0:	e183340a 	orr	r3, r3, sl, lsl #8
    c1b4:	e3866101 	orr	r6, r6, #1073741824	; 0x40000000
    c1b8:	e08e0002 	add	r0, lr, r2
    c1bc:	e0891001 	add	r1, r9, r1
    c1c0:	e08ee008 	add	lr, lr, r8
    c1c4:	e5863000 	str	r3, [r6]
    c1c8:	e5863004 	str	r3, [r6, #4]
    c1cc:	e5863008 	str	r3, [r6, #8]
    c1d0:	e586300c 	str	r3, [r6, #12]
    c1d4:	e0452002 	sub	r2, r5, r2
    c1d8:	e0890000 	add	r0, r9, r0
    c1dc:	e58dc000 	str	ip, [sp]
    c1e0:	e1a03007 	mov	r3, r7
    c1e4:	e089900e 	add	r9, r9, lr
    c1e8:	e5c47000 	strb	r7, [r4]
    c1ec:	ebfff01a 	bl	825c <dma_enqueue_operation>
    c1f0:	e3a0c010 	mov	ip, #16
    c1f4:	e1a03007 	mov	r3, r7
    c1f8:	e1a01009 	mov	r1, r9
    c1fc:	e0452008 	sub	r2, r5, r8
    c200:	e58dc000 	str	ip, [sp]
    c204:	e1a00006 	mov	r0, r6
    c208:	ebfff013 	bl	825c <dma_enqueue_operation>
    c20c:	ebfff02d 	bl	82c8 <dma_execute_queue>
    c210:	e3a03001 	mov	r3, #1
    c214:	e5c43000 	strb	r3, [r4]
    c218:	eaffffaa 	b	c0c8 <wgfx_term_putchar+0x3c>
    c21c:	e59f10c4 	ldr	r1, [pc, #196]	; c2e8 <wgfx_term_putchar+0x25c>
    c220:	e5913024 	ldr	r3, [r1, #36]	; 0x24
    c224:	e5912018 	ldr	r2, [r1, #24]
    c228:	e2833001 	add	r3, r3, #1
    c22c:	e3c33007 	bic	r3, r3, #7
    c230:	e2833008 	add	r3, r3, #8
    c234:	e2422001 	sub	r2, r2, #1
    c238:	e1530002 	cmp	r3, r2
    c23c:	21a03002 	movcs	r3, r2
    c240:	e5813024 	str	r3, [r1, #36]	; 0x24
    c244:	e28dd008 	add	sp, sp, #8
    c248:	e8bd47f0 	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
    c24c:	eaffff34 	b	bf24 <wgfx_check_curpos>
    c250:	e59f3090 	ldr	r3, [pc, #144]	; c2e8 <wgfx_term_putchar+0x25c>
    c254:	e5931024 	ldr	r1, [r3, #36]	; 0x24
    c258:	e3510000 	cmp	r1, #0
    c25c:	0affff99 	beq	c0c8 <wgfx_term_putchar+0x3c>
    c260:	e5930034 	ldr	r0, [r3, #52]	; 0x34
    c264:	e2411001 	sub	r1, r1, #1
    c268:	e3500004 	cmp	r0, #4
    c26c:	e5831024 	str	r1, [r3, #36]	; 0x24
    c270:	8affff94 	bhi	c0c8 <wgfx_term_putchar+0x3c>
    c274:	e0832000 	add	r2, r3, r0
    c278:	e5d22318 	ldrb	r2, [r2, #792]	; 0x318
    c27c:	e3520000 	cmp	r2, #0
    c280:	0affff90 	beq	c0c8 <wgfx_term_putchar+0x3c>
    c284:	e5932020 	ldr	r2, [r3, #32]
    c288:	e3a03020 	mov	r3, #32
    c28c:	e28dd008 	add	sp, sp, #8
    c290:	e8bd47f0 	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
    c294:	eafffd63 	b	b828 <wgfx_putc.part.0>
    c298:	e59f4048 	ldr	r4, [pc, #72]	; c2e8 <wgfx_term_putchar+0x25c>
    c29c:	e5942034 	ldr	r2, [r4, #52]	; 0x34
    c2a0:	e5941024 	ldr	r1, [r4, #36]	; 0x24
    c2a4:	e3520004 	cmp	r2, #4
    c2a8:	9a000004 	bls	c2c0 <wgfx_term_putchar+0x234>
    c2ac:	e2811001 	add	r1, r1, #1
    c2b0:	e5841024 	str	r1, [r4, #36]	; 0x24
    c2b4:	e28dd008 	add	sp, sp, #8
    c2b8:	e8bd47f0 	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
    c2bc:	eaffff18 	b	bf24 <wgfx_check_curpos>
    c2c0:	e0843002 	add	r3, r4, r2
    c2c4:	e5d33318 	ldrb	r3, [r3, #792]	; 0x318
    c2c8:	e3530000 	cmp	r3, #0
    c2cc:	0afffff6 	beq	c2ac <wgfx_term_putchar+0x220>
    c2d0:	e1a03000 	mov	r3, r0
    c2d4:	e1a00002 	mov	r0, r2
    c2d8:	e5942020 	ldr	r2, [r4, #32]
    c2dc:	ebfffd51 	bl	b828 <wgfx_putc.part.0>
    c2e0:	e5941024 	ldr	r1, [r4, #36]	; 0x24
    c2e4:	eafffff0 	b	c2ac <wgfx_term_putchar+0x220>
    c2e8:	00042ad0 	.word	0x00042ad0
    c2ec:	000186a0 	.word	0x000186a0
    c2f0:	00080f00 	.word	0x00080f00

0000c2f4 <wgfx_get_term_width>:
    c2f4:	e59f3004 	ldr	r3, [pc, #4]	; c300 <wgfx_get_term_width+0xc>
    c2f8:	e5930018 	ldr	r0, [r3, #24]
    c2fc:	e12fff1e 	bx	lr
    c300:	00042ad0 	.word	0x00042ad0

0000c304 <wgfx_puts>:
    c304:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    c308:	e3500004 	cmp	r0, #4
    c30c:	e24dd00c 	sub	sp, sp, #12
    c310:	e58d2004 	str	r2, [sp, #4]
    c314:	8a00001e 	bhi	c394 <wgfx_puts+0x90>
    c318:	e59f807c 	ldr	r8, [pc, #124]	; c39c <wgfx_puts+0x98>
    c31c:	e1a05000 	mov	r5, r0
    c320:	e1a04001 	mov	r4, r1
    c324:	e2436001 	sub	r6, r3, #1
    c328:	e088a000 	add	sl, r8, r0
    c32c:	e1a09100 	lsl	r9, r0, #2
    c330:	ea000000 	b	c338 <wgfx_puts+0x34>
    c334:	e1a04007 	mov	r4, r7
    c338:	e5f6b001 	ldrb	fp, [r6, #1]!
    c33c:	e0892005 	add	r2, r9, r5
    c340:	e0852082 	add	r2, r5, r2, lsl #1
    c344:	e35b0000 	cmp	fp, #0
    c348:	e0882102 	add	r2, r8, r2, lsl #2
    c34c:	e2847001 	add	r7, r4, #1
    c350:	0a00000f 	beq	c394 <wgfx_puts+0x90>
    c354:	e592124c 	ldr	r1, [r2, #588]	; 0x24c
    c358:	e592c254 	ldr	ip, [r2, #596]	; 0x254
    c35c:	e5920240 	ldr	r0, [r2, #576]	; 0x240
    c360:	e001019c 	mul	r1, ip, r1
    c364:	eb008643 	bl	2dc78 <__divsi3>
    c368:	e1500004 	cmp	r0, r4
    c36c:	da000008 	ble	c394 <wgfx_puts+0x90>
    c370:	e5da2318 	ldrb	r2, [sl, #792]	; 0x318
    c374:	e3520000 	cmp	r2, #0
    c378:	0affffed 	beq	c334 <wgfx_puts+0x30>
    c37c:	e1a0300b 	mov	r3, fp
    c380:	e1a01004 	mov	r1, r4
    c384:	e59d2004 	ldr	r2, [sp, #4]
    c388:	e1a00005 	mov	r0, r5
    c38c:	ebfffd25 	bl	b828 <wgfx_putc.part.0>
    c390:	eaffffe7 	b	c334 <wgfx_puts+0x30>
    c394:	e28dd00c 	add	sp, sp, #12
    c398:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    c39c:	00042ad0 	.word	0x00042ad0

0000c3a0 <wgfx_putc>:
    c3a0:	e3500004 	cmp	r0, #4
    c3a4:	812fff1e 	bxhi	lr
    c3a8:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    c3ac:	e59fe014 	ldr	lr, [pc, #20]	; c3c8 <wgfx_putc+0x28>
    c3b0:	e08ec000 	add	ip, lr, r0
    c3b4:	e5dcc318 	ldrb	ip, [ip, #792]	; 0x318
    c3b8:	e35c0000 	cmp	ip, #0
    c3bc:	049df004 	popeq	{pc}		; (ldreq pc, [sp], #4)
    c3c0:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
    c3c4:	eafffd17 	b	b828 <wgfx_putc.part.0>
    c3c8:	00042ad0 	.word	0x00042ad0

0000c3cc <wgfxSetMonoPixel>:
    c3cc:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    c3d0:	e59f50e4 	ldr	r5, [pc, #228]	; c4bc <wgfxSetMonoPixel+0xf0>
    c3d4:	e1a06000 	mov	r6, r0
    c3d8:	e5d50000 	ldrb	r0, [r5]
    c3dc:	e1a09001 	mov	r9, r1
    c3e0:	e3500000 	cmp	r0, #0
    c3e4:	e1a08002 	mov	r8, r2
    c3e8:	e1a0a003 	mov	sl, r3
    c3ec:	159f40cc 	ldrne	r4, [pc, #204]	; c4c0 <wgfxSetMonoPixel+0xf4>
    c3f0:	1a000002 	bne	c400 <wgfxSetMonoPixel+0x34>
    c3f4:	ea000004 	b	c40c <wgfxSetMonoPixel+0x40>
    c3f8:	e2544001 	subs	r4, r4, #1
    c3fc:	0a000002 	beq	c40c <wgfxSetMonoPixel+0x40>
    c400:	ebffefc1 	bl	830c <dma_running>
    c404:	e3500000 	cmp	r0, #0
    c408:	1afffffa 	bne	c3f8 <wgfxSetMonoPixel+0x2c>
    c40c:	e3a04000 	mov	r4, #0
    c410:	e1a0e106 	lsl	lr, r6, #2
    c414:	e08e3006 	add	r3, lr, r6
    c418:	e0863083 	add	r3, r6, r3, lsl #1
    c41c:	e0853103 	add	r3, r5, r3, lsl #2
    c420:	e5937258 	ldr	r7, [r3, #600]	; 0x258
    c424:	e5932244 	ldr	r2, [r3, #580]	; 0x244
    c428:	e593c25c 	ldr	ip, [r3, #604]	; 0x25c
    c42c:	e0222897 	mla	r2, r7, r8, r2
    c430:	e595000c 	ldr	r0, [r5, #12]
    c434:	e5938254 	ldr	r8, [r3, #596]	; 0x254
    c438:	e37c0001 	cmn	ip, #1
    c43c:	e0010998 	mul	r1, r8, r9
    c440:	e0020290 	mul	r2, r0, r2
    c444:	e593323c 	ldr	r3, [r3, #572]	; 0x23c
    c448:	e5c54000 	strb	r4, [r5]
    c44c:	e5959014 	ldr	r9, [r5, #20]
    c450:	05d5c039 	ldrbeq	ip, [r5, #57]	; 0x39
    c454:	e08ee006 	add	lr, lr, r6
    c458:	e086608e 	add	r6, r6, lr, lsl #1
    c45c:	e0856106 	add	r6, r5, r6, lsl #2
    c460:	e5966260 	ldr	r6, [r6, #608]	; 0x260
    c464:	e3760001 	cmn	r6, #1
    c468:	05d56038 	ldrbeq	r6, [r5, #56]	; 0x38
    c46c:	e3570000 	cmp	r7, #0
    c470:	d8bd87f0 	pople	{r4, r5, r6, r7, r8, r9, sl, pc}
    c474:	e35a0000 	cmp	sl, #0
    c478:	11a0600c 	movne	r6, ip
    c47c:	e3580000 	cmp	r8, #0
    c480:	e6ef6076 	uxtb	r6, r6
    c484:	d8bd87f0 	pople	{r4, r5, r6, r7, r8, r9, sl, pc}
    c488:	e3a04000 	mov	r4, #0
    c48c:	e0833001 	add	r3, r3, r1
    c490:	e083a002 	add	sl, r3, r2
    c494:	e020a490 	mla	r0, r0, r4, sl
    c498:	e1a02008 	mov	r2, r8
    c49c:	e0890000 	add	r0, r9, r0
    c4a0:	e2844001 	add	r4, r4, #1
    c4a4:	e1a01006 	mov	r1, r6
    c4a8:	eb007f2b 	bl	2c15c <memset>
    c4ac:	e1540007 	cmp	r4, r7
    c4b0:	08bd87f0 	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
    c4b4:	e595000c 	ldr	r0, [r5, #12]
    c4b8:	eafffff5 	b	c494 <wgfxSetMonoPixel+0xc8>
    c4bc:	00042ad0 	.word	0x00042ad0
    c4c0:	000186a0 	.word	0x000186a0

0000c4c4 <wgfxSetColourPixel>:
    c4c4:	e92d4ff8 	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    c4c8:	e59f60b0 	ldr	r6, [pc, #176]	; c580 <wgfxSetColourPixel+0xbc>
    c4cc:	e1a05000 	mov	r5, r0
    c4d0:	e5d60000 	ldrb	r0, [r6]
    c4d4:	e1a09001 	mov	r9, r1
    c4d8:	e3500000 	cmp	r0, #0
    c4dc:	e1a08002 	mov	r8, r2
    c4e0:	e1a07003 	mov	r7, r3
    c4e4:	0a000006 	beq	c504 <wgfxSetColourPixel+0x40>
    c4e8:	e59f4094 	ldr	r4, [pc, #148]	; c584 <wgfxSetColourPixel+0xc0>
    c4ec:	ea000001 	b	c4f8 <wgfxSetColourPixel+0x34>
    c4f0:	e2544001 	subs	r4, r4, #1
    c4f4:	0a000002 	beq	c504 <wgfxSetColourPixel+0x40>
    c4f8:	ebffef83 	bl	830c <dma_running>
    c4fc:	e3500000 	cmp	r0, #0
    c500:	1afffffa 	bne	c4f0 <wgfxSetColourPixel+0x2c>
    c504:	e3a04000 	mov	r4, #0
    c508:	e0853105 	add	r3, r5, r5, lsl #2
    c50c:	e0853083 	add	r3, r5, r3, lsl #1
    c510:	e0863103 	add	r3, r6, r3, lsl #2
    c514:	e5935258 	ldr	r5, [r3, #600]	; 0x258
    c518:	e5932244 	ldr	r2, [r3, #580]	; 0x244
    c51c:	e593a254 	ldr	sl, [r3, #596]	; 0x254
    c520:	e0282895 	mla	r8, r5, r8, r2
    c524:	e596000c 	ldr	r0, [r6, #12]
    c528:	e1550004 	cmp	r5, r4
    c52c:	e0080890 	mul	r8, r0, r8
    c530:	e009099a 	mul	r9, sl, r9
    c534:	e593323c 	ldr	r3, [r3, #572]	; 0x23c
    c538:	e5c64000 	strb	r4, [r6]
    c53c:	e596b014 	ldr	fp, [r6, #20]
    c540:	d8bd8ff8 	pople	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    c544:	e15a0004 	cmp	sl, r4
    c548:	d8bd8ff8 	pople	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    c54c:	e0839009 	add	r9, r3, r9
    c550:	e0898008 	add	r8, r9, r8
    c554:	e6ef7077 	uxtb	r7, r7
    c558:	e0208490 	mla	r0, r0, r4, r8
    c55c:	e1a0200a 	mov	r2, sl
    c560:	e08b0000 	add	r0, fp, r0
    c564:	e2844001 	add	r4, r4, #1
    c568:	e1a01007 	mov	r1, r7
    c56c:	eb007efa 	bl	2c15c <memset>
    c570:	e1540005 	cmp	r4, r5
    c574:	08bd8ff8 	popeq	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    c578:	e596000c 	ldr	r0, [r6, #12]
    c57c:	eafffff5 	b	c558 <wgfxSetColourPixel+0x94>
    c580:	00042ad0 	.word	0x00042ad0
    c584:	000186a0 	.word	0x000186a0

0000c588 <wgfx_write_cell>:
    c588:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    c58c:	e1a05001 	mov	r5, r1
    c590:	e1a06000 	mov	r6, r0
    c594:	e59f02b0 	ldr	r0, [pc, #688]	; c84c <wgfx_write_cell+0x2c4>
    c598:	e24dd01c 	sub	sp, sp, #28
    c59c:	e5901018 	ldr	r1, [r0, #24]
    c5a0:	e1510005 	cmp	r1, r5
    c5a4:	9a000098 	bls	c80c <wgfx_write_cell+0x284>
    c5a8:	e1a04003 	mov	r4, r3
    c5ac:	e590301c 	ldr	r3, [r0, #28]
    c5b0:	e1a07002 	mov	r7, r2
    c5b4:	e1530002 	cmp	r3, r2
    c5b8:	9a000093 	bls	c80c <wgfx_write_cell+0x284>
    c5bc:	e3560004 	cmp	r6, #4
    c5c0:	8a000091 	bhi	c80c <wgfx_write_cell+0x284>
    c5c4:	e0803006 	add	r3, r0, r6
    c5c8:	e5d33318 	ldrb	r3, [r3, #792]	; 0x318
    c5cc:	e3530000 	cmp	r3, #0
    c5d0:	0a00008d 	beq	c80c <wgfx_write_cell+0x284>
    c5d4:	e5d03000 	ldrb	r3, [r0]
    c5d8:	e3530000 	cmp	r3, #0
    c5dc:	0a000006 	beq	c5fc <wgfx_write_cell+0x74>
    c5e0:	e59f8268 	ldr	r8, [pc, #616]	; c850 <wgfx_write_cell+0x2c8>
    c5e4:	ea000001 	b	c5f0 <wgfx_write_cell+0x68>
    c5e8:	e2588001 	subs	r8, r8, #1
    c5ec:	0a000002 	beq	c5fc <wgfx_write_cell+0x74>
    c5f0:	ebffef45 	bl	830c <dma_running>
    c5f4:	e3500000 	cmp	r0, #0
    c5f8:	1afffffa 	bne	c5e8 <wgfx_write_cell+0x60>
    c5fc:	e3a00000 	mov	r0, #0
    c600:	e0861106 	add	r1, r6, r6, lsl #2
    c604:	e0861081 	add	r1, r6, r1, lsl #1
    c608:	e59f623c 	ldr	r6, [pc, #572]	; c84c <wgfx_write_cell+0x2c4>
    c60c:	e0861101 	add	r1, r6, r1, lsl #2
    c610:	e5918250 	ldr	r8, [r1, #592]	; 0x250
    c614:	e591b24c 	ldr	fp, [r1, #588]	; 0x24c
    c618:	e0020798 	mul	r2, r8, r7
    c61c:	e003059b 	mul	r3, fp, r5
    c620:	e591c244 	ldr	ip, [r1, #580]	; 0x244
    c624:	e5915258 	ldr	r5, [r1, #600]	; 0x258
    c628:	e591e254 	ldr	lr, [r1, #596]	; 0x254
    c62c:	e591123c 	ldr	r1, [r1, #572]	; 0x23c
    c630:	e022c295 	mla	r2, r5, r2, ip
    c634:	e023139e 	mla	r3, lr, r3, r1
    c638:	e596100c 	ldr	r1, [r6, #12]
    c63c:	e1580000 	cmp	r8, r0
    c640:	e0233291 	mla	r3, r1, r2, r3
    c644:	e5962014 	ldr	r2, [r6, #20]
    c648:	e58d8014 	str	r8, [sp, #20]
    c64c:	e0823003 	add	r3, r2, r3
    c650:	e58d500c 	str	r5, [sp, #12]
    c654:	e5c60000 	strb	r0, [r6]
    c658:	e58d3004 	str	r3, [sp, #4]
    c65c:	da00006a 	ble	c80c <wgfx_write_cell+0x284>
    c660:	e1550000 	cmp	r5, r0
    c664:	c58d0010 	strgt	r0, [sp, #16]
    c668:	da000067 	ble	c80c <wgfx_write_cell+0x284>
    c66c:	e3a03000 	mov	r3, #0
    c670:	e58d3008 	str	r3, [sp, #8]
    c674:	e35b0000 	cmp	fp, #0
    c678:	da000052 	ble	c7c8 <wgfx_write_cell+0x240>
    c67c:	e3a07000 	mov	r7, #0
    c680:	e59dc004 	ldr	ip, [sp, #4]
    c684:	e35e0000 	cmp	lr, #0
    c688:	da00004b 	ble	c7bc <wgfx_write_cell+0x234>
    c68c:	e28c3004 	add	r3, ip, #4
    c690:	e2842004 	add	r2, r4, #4
    c694:	e15c0002 	cmp	ip, r2
    c698:	31540003 	cmpcc	r4, r3
    c69c:	23a03001 	movcs	r3, #1
    c6a0:	33a03000 	movcc	r3, #0
    c6a4:	e35e000b 	cmp	lr, #11
    c6a8:	93a03000 	movls	r3, #0
    c6ac:	82033001 	andhi	r3, r3, #1
    c6b0:	e3530000 	cmp	r3, #0
    c6b4:	0a00005c 	beq	c82c <wgfx_write_cell+0x2a4>
    c6b8:	e2643000 	rsb	r3, r4, #0
    c6bc:	e2133003 	ands	r3, r3, #3
    c6c0:	0a000055 	beq	c81c <wgfx_write_cell+0x294>
    c6c4:	e5d42000 	ldrb	r2, [r4]
    c6c8:	e3530001 	cmp	r3, #1
    c6cc:	e5cc2000 	strb	r2, [ip]
    c6d0:	e2849001 	add	r9, r4, #1
    c6d4:	e28c8001 	add	r8, ip, #1
    c6d8:	0a000051 	beq	c824 <wgfx_write_cell+0x29c>
    c6dc:	e3530003 	cmp	r3, #3
    c6e0:	01a05003 	moveq	r5, r3
    c6e4:	13a05002 	movne	r5, #2
    c6e8:	e5d42001 	ldrb	r2, [r4, #1]
    c6ec:	e2849002 	add	r9, r4, #2
    c6f0:	e5cc2001 	strb	r2, [ip, #1]
    c6f4:	05d42002 	ldrbeq	r2, [r4, #2]
    c6f8:	e28c8002 	add	r8, ip, #2
    c6fc:	02849003 	addeq	r9, r4, #3
    c700:	05cc2002 	strbeq	r2, [ip, #2]
    c704:	028c8003 	addeq	r8, ip, #3
    c708:	e3a02000 	mov	r2, #0
    c70c:	e04e6003 	sub	r6, lr, r3
    c710:	e0841003 	add	r1, r4, r3
    c714:	e1a00126 	lsr	r0, r6, #2
    c718:	e08c3003 	add	r3, ip, r3
    c71c:	e2822001 	add	r2, r2, #1
    c720:	e491a004 	ldr	sl, [r1], #4
    c724:	e1500002 	cmp	r0, r2
    c728:	e483a004 	str	sl, [r3], #4
    c72c:	8afffffa 	bhi	c71c <wgfx_write_cell+0x194>
    c730:	e3c63003 	bic	r3, r6, #3
    c734:	e1560003 	cmp	r6, r3
    c738:	e0835005 	add	r5, r3, r5
    c73c:	e0891003 	add	r1, r9, r3
    c740:	e0882003 	add	r2, r8, r3
    c744:	0a000032 	beq	c814 <wgfx_write_cell+0x28c>
    c748:	e7d90003 	ldrb	r0, [r9, r3]
    c74c:	e2856001 	add	r6, r5, #1
    c750:	e15e0006 	cmp	lr, r6
    c754:	e7c80003 	strb	r0, [r8, r3]
    c758:	da00002d 	ble	c814 <wgfx_write_cell+0x28c>
    c75c:	e5d13001 	ldrb	r3, [r1, #1]
    c760:	e2850002 	add	r0, r5, #2
    c764:	e15e0000 	cmp	lr, r0
    c768:	e5c23001 	strb	r3, [r2, #1]
    c76c:	da000028 	ble	c814 <wgfx_write_cell+0x28c>
    c770:	e5d13002 	ldrb	r3, [r1, #2]
    c774:	e2850003 	add	r0, r5, #3
    c778:	e15e0000 	cmp	lr, r0
    c77c:	e5c23002 	strb	r3, [r2, #2]
    c780:	da000023 	ble	c814 <wgfx_write_cell+0x28c>
    c784:	e5d13003 	ldrb	r3, [r1, #3]
    c788:	e2850004 	add	r0, r5, #4
    c78c:	e15e0000 	cmp	lr, r0
    c790:	e5c23003 	strb	r3, [r2, #3]
    c794:	da00001e 	ble	c814 <wgfx_write_cell+0x28c>
    c798:	e2855005 	add	r5, r5, #5
    c79c:	e5d13004 	ldrb	r3, [r1, #4]
    c7a0:	e15e0005 	cmp	lr, r5
    c7a4:	e5c23004 	strb	r3, [r2, #4]
    c7a8:	da000019 	ble	c814 <wgfx_write_cell+0x28c>
    c7ac:	e5d13005 	ldrb	r3, [r1, #5]
    c7b0:	e084400e 	add	r4, r4, lr
    c7b4:	e5c23005 	strb	r3, [r2, #5]
    c7b8:	e08cc00e 	add	ip, ip, lr
    c7bc:	e2877001 	add	r7, r7, #1
    c7c0:	e15b0007 	cmp	fp, r7
    c7c4:	1affffae 	bne	c684 <wgfx_write_cell+0xfc>
    c7c8:	e59d3008 	ldr	r3, [sp, #8]
    c7cc:	e59d100c 	ldr	r1, [sp, #12]
    c7d0:	e2832001 	add	r2, r3, #1
    c7d4:	e59f3070 	ldr	r3, [pc, #112]	; c84c <wgfx_write_cell+0x2c4>
    c7d8:	e58d2008 	str	r2, [sp, #8]
    c7dc:	e593300c 	ldr	r3, [r3, #12]
    c7e0:	e1510002 	cmp	r1, r2
    c7e4:	e59d2004 	ldr	r2, [sp, #4]
    c7e8:	e0823003 	add	r3, r2, r3
    c7ec:	e58d3004 	str	r3, [sp, #4]
    c7f0:	1affff9f 	bne	c674 <wgfx_write_cell+0xec>
    c7f4:	e59d3010 	ldr	r3, [sp, #16]
    c7f8:	e59d2014 	ldr	r2, [sp, #20]
    c7fc:	e2833001 	add	r3, r3, #1
    c800:	e1520003 	cmp	r2, r3
    c804:	e58d3010 	str	r3, [sp, #16]
    c808:	1affff97 	bne	c66c <wgfx_write_cell+0xe4>
    c80c:	e28dd01c 	add	sp, sp, #28
    c810:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    c814:	e084400e 	add	r4, r4, lr
    c818:	eaffffe6 	b	c7b8 <wgfx_write_cell+0x230>
    c81c:	e1a0800c 	mov	r8, ip
    c820:	e1a09004 	mov	r9, r4
    c824:	e1a05003 	mov	r5, r3
    c828:	eaffffb6 	b	c708 <wgfx_write_cell+0x180>
    c82c:	e1a03004 	mov	r3, r4
    c830:	e24c2001 	sub	r2, ip, #1
    c834:	e084400e 	add	r4, r4, lr
    c838:	e4d31001 	ldrb	r1, [r3], #1
    c83c:	e1540003 	cmp	r4, r3
    c840:	e5e21001 	strb	r1, [r2, #1]!
    c844:	1afffffb 	bne	c838 <wgfx_write_cell+0x2b0>
    c848:	eaffffda 	b	c7b8 <wgfx_write_cell+0x230>
    c84c:	00042ad0 	.word	0x00042ad0
    c850:	000186a0 	.word	0x000186a0

0000c854 <wgfx_read_cell>:
    c854:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    c858:	e1a05001 	mov	r5, r1
    c85c:	e1a06000 	mov	r6, r0
    c860:	e59f02b0 	ldr	r0, [pc, #688]	; cb18 <wgfx_read_cell+0x2c4>
    c864:	e24dd01c 	sub	sp, sp, #28
    c868:	e5901018 	ldr	r1, [r0, #24]
    c86c:	e1510005 	cmp	r1, r5
    c870:	9a000098 	bls	cad8 <wgfx_read_cell+0x284>
    c874:	e1a04003 	mov	r4, r3
    c878:	e590301c 	ldr	r3, [r0, #28]
    c87c:	e1a07002 	mov	r7, r2
    c880:	e1530002 	cmp	r3, r2
    c884:	9a000093 	bls	cad8 <wgfx_read_cell+0x284>
    c888:	e3560004 	cmp	r6, #4
    c88c:	8a000091 	bhi	cad8 <wgfx_read_cell+0x284>
    c890:	e0803006 	add	r3, r0, r6
    c894:	e5d33318 	ldrb	r3, [r3, #792]	; 0x318
    c898:	e3530000 	cmp	r3, #0
    c89c:	0a00008d 	beq	cad8 <wgfx_read_cell+0x284>
    c8a0:	e5d03000 	ldrb	r3, [r0]
    c8a4:	e3530000 	cmp	r3, #0
    c8a8:	0a000006 	beq	c8c8 <wgfx_read_cell+0x74>
    c8ac:	e59f8268 	ldr	r8, [pc, #616]	; cb1c <wgfx_read_cell+0x2c8>
    c8b0:	ea000001 	b	c8bc <wgfx_read_cell+0x68>
    c8b4:	e2588001 	subs	r8, r8, #1
    c8b8:	0a000002 	beq	c8c8 <wgfx_read_cell+0x74>
    c8bc:	ebffee92 	bl	830c <dma_running>
    c8c0:	e3500000 	cmp	r0, #0
    c8c4:	1afffffa 	bne	c8b4 <wgfx_read_cell+0x60>
    c8c8:	e3a00000 	mov	r0, #0
    c8cc:	e0861106 	add	r1, r6, r6, lsl #2
    c8d0:	e0861081 	add	r1, r6, r1, lsl #1
    c8d4:	e59f623c 	ldr	r6, [pc, #572]	; cb18 <wgfx_read_cell+0x2c4>
    c8d8:	e0861101 	add	r1, r6, r1, lsl #2
    c8dc:	e5918250 	ldr	r8, [r1, #592]	; 0x250
    c8e0:	e591b24c 	ldr	fp, [r1, #588]	; 0x24c
    c8e4:	e0070798 	mul	r7, r8, r7
    c8e8:	e002059b 	mul	r2, fp, r5
    c8ec:	e591c23c 	ldr	ip, [r1, #572]	; 0x23c
    c8f0:	e5915258 	ldr	r5, [r1, #600]	; 0x258
    c8f4:	e5913254 	ldr	r3, [r1, #596]	; 0x254
    c8f8:	e591e244 	ldr	lr, [r1, #580]	; 0x244
    c8fc:	e022c293 	mla	r2, r3, r2, ip
    c900:	e021e795 	mla	r1, r5, r7, lr
    c904:	e596c00c 	ldr	ip, [r6, #12]
    c908:	e1580000 	cmp	r8, r0
    c90c:	e022219c 	mla	r2, ip, r1, r2
    c910:	e5961014 	ldr	r1, [r6, #20]
    c914:	e58d8014 	str	r8, [sp, #20]
    c918:	e0812002 	add	r2, r1, r2
    c91c:	e58d500c 	str	r5, [sp, #12]
    c920:	e5c60000 	strb	r0, [r6]
    c924:	e58d2004 	str	r2, [sp, #4]
    c928:	da00006a 	ble	cad8 <wgfx_read_cell+0x284>
    c92c:	e1550000 	cmp	r5, r0
    c930:	c58d0010 	strgt	r0, [sp, #16]
    c934:	da000067 	ble	cad8 <wgfx_read_cell+0x284>
    c938:	e3a02000 	mov	r2, #0
    c93c:	e58d2008 	str	r2, [sp, #8]
    c940:	e35b0000 	cmp	fp, #0
    c944:	da000052 	ble	ca94 <wgfx_read_cell+0x240>
    c948:	e3a07000 	mov	r7, #0
    c94c:	e59d0004 	ldr	r0, [sp, #4]
    c950:	e3530000 	cmp	r3, #0
    c954:	da00004b 	ble	ca88 <wgfx_read_cell+0x234>
    c958:	e2802004 	add	r2, r0, #4
    c95c:	e2841004 	add	r1, r4, #4
    c960:	e1500001 	cmp	r0, r1
    c964:	31540002 	cmpcc	r4, r2
    c968:	23a02001 	movcs	r2, #1
    c96c:	33a02000 	movcc	r2, #0
    c970:	e353000b 	cmp	r3, #11
    c974:	93a02000 	movls	r2, #0
    c978:	82022001 	andhi	r2, r2, #1
    c97c:	e3520000 	cmp	r2, #0
    c980:	0a00005c 	beq	caf8 <wgfx_read_cell+0x2a4>
    c984:	e2602000 	rsb	r2, r0, #0
    c988:	e2122003 	ands	r2, r2, #3
    c98c:	0a000055 	beq	cae8 <wgfx_read_cell+0x294>
    c990:	e5d01000 	ldrb	r1, [r0]
    c994:	e3520001 	cmp	r2, #1
    c998:	e5c41000 	strb	r1, [r4]
    c99c:	e2809001 	add	r9, r0, #1
    c9a0:	e2848001 	add	r8, r4, #1
    c9a4:	0a000051 	beq	caf0 <wgfx_read_cell+0x29c>
    c9a8:	e3520003 	cmp	r2, #3
    c9ac:	01a05002 	moveq	r5, r2
    c9b0:	13a05002 	movne	r5, #2
    c9b4:	e5d01001 	ldrb	r1, [r0, #1]
    c9b8:	e2809002 	add	r9, r0, #2
    c9bc:	e5c41001 	strb	r1, [r4, #1]
    c9c0:	05d01002 	ldrbeq	r1, [r0, #2]
    c9c4:	e2848002 	add	r8, r4, #2
    c9c8:	02809003 	addeq	r9, r0, #3
    c9cc:	05c41002 	strbeq	r1, [r4, #2]
    c9d0:	02848003 	addeq	r8, r4, #3
    c9d4:	e3a01000 	mov	r1, #0
    c9d8:	e0436002 	sub	r6, r3, r2
    c9dc:	e080c002 	add	ip, r0, r2
    c9e0:	e1a0e126 	lsr	lr, r6, #2
    c9e4:	e0842002 	add	r2, r4, r2
    c9e8:	e2811001 	add	r1, r1, #1
    c9ec:	e49ca004 	ldr	sl, [ip], #4
    c9f0:	e15e0001 	cmp	lr, r1
    c9f4:	e482a004 	str	sl, [r2], #4
    c9f8:	8afffffa 	bhi	c9e8 <wgfx_read_cell+0x194>
    c9fc:	e3c62003 	bic	r2, r6, #3
    ca00:	e1560002 	cmp	r6, r2
    ca04:	e0825005 	add	r5, r2, r5
    ca08:	e089c002 	add	ip, r9, r2
    ca0c:	e0881002 	add	r1, r8, r2
    ca10:	0a000032 	beq	cae0 <wgfx_read_cell+0x28c>
    ca14:	e7d9e002 	ldrb	lr, [r9, r2]
    ca18:	e2856001 	add	r6, r5, #1
    ca1c:	e1530006 	cmp	r3, r6
    ca20:	e7c8e002 	strb	lr, [r8, r2]
    ca24:	da00002d 	ble	cae0 <wgfx_read_cell+0x28c>
    ca28:	e5dc2001 	ldrb	r2, [ip, #1]
    ca2c:	e285e002 	add	lr, r5, #2
    ca30:	e153000e 	cmp	r3, lr
    ca34:	e5c12001 	strb	r2, [r1, #1]
    ca38:	da000028 	ble	cae0 <wgfx_read_cell+0x28c>
    ca3c:	e5dc2002 	ldrb	r2, [ip, #2]
    ca40:	e285e003 	add	lr, r5, #3
    ca44:	e153000e 	cmp	r3, lr
    ca48:	e5c12002 	strb	r2, [r1, #2]
    ca4c:	da000023 	ble	cae0 <wgfx_read_cell+0x28c>
    ca50:	e5dc2003 	ldrb	r2, [ip, #3]
    ca54:	e285e004 	add	lr, r5, #4
    ca58:	e153000e 	cmp	r3, lr
    ca5c:	e5c12003 	strb	r2, [r1, #3]
    ca60:	da00001e 	ble	cae0 <wgfx_read_cell+0x28c>
    ca64:	e2855005 	add	r5, r5, #5
    ca68:	e5dc2004 	ldrb	r2, [ip, #4]
    ca6c:	e1530005 	cmp	r3, r5
    ca70:	e5c12004 	strb	r2, [r1, #4]
    ca74:	da000019 	ble	cae0 <wgfx_read_cell+0x28c>
    ca78:	e5dc2005 	ldrb	r2, [ip, #5]
    ca7c:	e0800003 	add	r0, r0, r3
    ca80:	e5c12005 	strb	r2, [r1, #5]
    ca84:	e0844003 	add	r4, r4, r3
    ca88:	e2877001 	add	r7, r7, #1
    ca8c:	e15b0007 	cmp	fp, r7
    ca90:	1affffae 	bne	c950 <wgfx_read_cell+0xfc>
    ca94:	e59d2008 	ldr	r2, [sp, #8]
    ca98:	e59d000c 	ldr	r0, [sp, #12]
    ca9c:	e2821001 	add	r1, r2, #1
    caa0:	e59f2070 	ldr	r2, [pc, #112]	; cb18 <wgfx_read_cell+0x2c4>
    caa4:	e58d1008 	str	r1, [sp, #8]
    caa8:	e592200c 	ldr	r2, [r2, #12]
    caac:	e1500001 	cmp	r0, r1
    cab0:	e59d1004 	ldr	r1, [sp, #4]
    cab4:	e0812002 	add	r2, r1, r2
    cab8:	e58d2004 	str	r2, [sp, #4]
    cabc:	1affff9f 	bne	c940 <wgfx_read_cell+0xec>
    cac0:	e59d2010 	ldr	r2, [sp, #16]
    cac4:	e59d1014 	ldr	r1, [sp, #20]
    cac8:	e2822001 	add	r2, r2, #1
    cacc:	e1510002 	cmp	r1, r2
    cad0:	e58d2010 	str	r2, [sp, #16]
    cad4:	1affff97 	bne	c938 <wgfx_read_cell+0xe4>
    cad8:	e28dd01c 	add	sp, sp, #28
    cadc:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    cae0:	e0800003 	add	r0, r0, r3
    cae4:	eaffffe6 	b	ca84 <wgfx_read_cell+0x230>
    cae8:	e1a08004 	mov	r8, r4
    caec:	e1a09000 	mov	r9, r0
    caf0:	e1a05002 	mov	r5, r2
    caf4:	eaffffb6 	b	c9d4 <wgfx_read_cell+0x180>
    caf8:	e1a02000 	mov	r2, r0
    cafc:	e2441001 	sub	r1, r4, #1
    cb00:	e0800003 	add	r0, r0, r3
    cb04:	e4d2c001 	ldrb	ip, [r2], #1
    cb08:	e1500002 	cmp	r0, r2
    cb0c:	e5e1c001 	strb	ip, [r1, #1]!
    cb10:	1afffffb 	bne	cb04 <wgfx_read_cell+0x2b0>
    cb14:	eaffffda 	b	ca84 <wgfx_read_cell+0x230>
    cb18:	00042ad0 	.word	0x00042ad0
    cb1c:	000186a0 	.word	0x000186a0

0000cb20 <wgfx_get_win_pfb>:
    cb20:	e92d4030 	push	{r4, r5, lr}
    cb24:	e0803100 	add	r3, r0, r0, lsl #2
    cb28:	e59fe040 	ldr	lr, [pc, #64]	; cb70 <wgfx_get_win_pfb+0x50>
    cb2c:	e0800083 	add	r0, r0, r3, lsl #1
    cb30:	e08e0100 	add	r0, lr, r0, lsl #2
    cb34:	e5903250 	ldr	r3, [r0, #592]	; 0x250
    cb38:	e590c24c 	ldr	ip, [r0, #588]	; 0x24c
    cb3c:	e0020293 	mul	r2, r3, r2
    cb40:	e001019c 	mul	r1, ip, r1
    cb44:	e5903244 	ldr	r3, [r0, #580]	; 0x244
    cb48:	e5905258 	ldr	r5, [r0, #600]	; 0x258
    cb4c:	e5904254 	ldr	r4, [r0, #596]	; 0x254
    cb50:	e590c23c 	ldr	ip, [r0, #572]	; 0x23c
    cb54:	e0223295 	mla	r2, r5, r2, r3
    cb58:	e021c194 	mla	r1, r4, r1, ip
    cb5c:	e59e300c 	ldr	r3, [lr, #12]
    cb60:	e59e0014 	ldr	r0, [lr, #20]
    cb64:	e0221293 	mla	r2, r3, r2, r1
    cb68:	e0800002 	add	r0, r0, r2
    cb6c:	e8bd8030 	pop	{r4, r5, pc}
    cb70:	00042ad0 	.word	0x00042ad0

0000cb74 <wgfx_get_win_pfb_xy>:
    cb74:	e92d4010 	push	{r4, lr}
    cb78:	e0803100 	add	r3, r0, r0, lsl #2
    cb7c:	e59fe030 	ldr	lr, [pc, #48]	; cbb4 <wgfx_get_win_pfb_xy+0x40>
    cb80:	e0800083 	add	r0, r0, r3, lsl #1
    cb84:	e08e0100 	add	r0, lr, r0, lsl #2
    cb88:	e5903258 	ldr	r3, [r0, #600]	; 0x258
    cb8c:	e5904244 	ldr	r4, [r0, #580]	; 0x244
    cb90:	e590c254 	ldr	ip, [r0, #596]	; 0x254
    cb94:	e590023c 	ldr	r0, [r0, #572]	; 0x23c
    cb98:	e0224293 	mla	r2, r3, r2, r4
    cb9c:	e021019c 	mla	r1, ip, r1, r0
    cba0:	e59e300c 	ldr	r3, [lr, #12]
    cba4:	e59e0014 	ldr	r0, [lr, #20]
    cba8:	e0221293 	mla	r2, r3, r2, r1
    cbac:	e0800002 	add	r0, r0, r2
    cbb0:	e8bd8010 	pop	{r4, pc}
    cbb4:	00042ad0 	.word	0x00042ad0

0000cbb8 <wgfx_get_pfb_xy>:
    cbb8:	e59f2010 	ldr	r2, [pc, #16]	; cbd0 <wgfx_get_pfb_xy+0x18>
    cbbc:	e592300c 	ldr	r3, [r2, #12]
    cbc0:	e5922014 	ldr	r2, [r2, #20]
    cbc4:	e0200193 	mla	r0, r3, r1, r0
    cbc8:	e0820000 	add	r0, r2, r0
    cbcc:	e12fff1e 	bx	lr
    cbd0:	00042ad0 	.word	0x00042ad0

0000cbd4 <wgfx_restore_cursor_content>:
    cbd4:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    cbd8:	e59f22b8 	ldr	r2, [pc, #696]	; ce98 <wgfx_restore_cursor_content+0x2c4>
    cbdc:	e24dd01c 	sub	sp, sp, #28
    cbe0:	e5924024 	ldr	r4, [r2, #36]	; 0x24
    cbe4:	e5923018 	ldr	r3, [r2, #24]
    cbe8:	e1540003 	cmp	r4, r3
    cbec:	2a000099 	bcs	ce58 <wgfx_restore_cursor_content+0x284>
    cbf0:	e5926020 	ldr	r6, [r2, #32]
    cbf4:	e592301c 	ldr	r3, [r2, #28]
    cbf8:	e1560003 	cmp	r6, r3
    cbfc:	2a000095 	bcs	ce58 <wgfx_restore_cursor_content+0x284>
    cc00:	e5925034 	ldr	r5, [r2, #52]	; 0x34
    cc04:	e3550004 	cmp	r5, #4
    cc08:	8a000092 	bhi	ce58 <wgfx_restore_cursor_content+0x284>
    cc0c:	e0823005 	add	r3, r2, r5
    cc10:	e5d33318 	ldrb	r3, [r3, #792]	; 0x318
    cc14:	e3530000 	cmp	r3, #0
    cc18:	0a00008e 	beq	ce58 <wgfx_restore_cursor_content+0x284>
    cc1c:	e5d23000 	ldrb	r3, [r2]
    cc20:	e3530000 	cmp	r3, #0
    cc24:	0a000006 	beq	cc44 <wgfx_restore_cursor_content+0x70>
    cc28:	e59f726c 	ldr	r7, [pc, #620]	; ce9c <wgfx_restore_cursor_content+0x2c8>
    cc2c:	ea000001 	b	cc38 <wgfx_restore_cursor_content+0x64>
    cc30:	e2577001 	subs	r7, r7, #1
    cc34:	0a000002 	beq	cc44 <wgfx_restore_cursor_content+0x70>
    cc38:	ebffedb3 	bl	830c <dma_running>
    cc3c:	e3500000 	cmp	r0, #0
    cc40:	1afffffa 	bne	cc30 <wgfx_restore_cursor_content+0x5c>
    cc44:	e3a01000 	mov	r1, #0
    cc48:	e59fe248 	ldr	lr, [pc, #584]	; ce98 <wgfx_restore_cursor_content+0x2c4>
    cc4c:	e0852105 	add	r2, r5, r5, lsl #2
    cc50:	e0852082 	add	r2, r5, r2, lsl #1
    cc54:	e08e2102 	add	r2, lr, r2, lsl #2
    cc58:	e5925250 	ldr	r5, [r2, #592]	; 0x250
    cc5c:	e592b24c 	ldr	fp, [r2, #588]	; 0x24c
    cc60:	e0060695 	mul	r6, r5, r6
    cc64:	e003049b 	mul	r3, fp, r4
    cc68:	e592023c 	ldr	r0, [r2, #572]	; 0x23c
    cc6c:	e5927258 	ldr	r7, [r2, #600]	; 0x258
    cc70:	e5924254 	ldr	r4, [r2, #596]	; 0x254
    cc74:	e592c244 	ldr	ip, [r2, #580]	; 0x244
    cc78:	e0230394 	mla	r3, r4, r3, r0
    cc7c:	e022c697 	mla	r2, r7, r6, ip
    cc80:	e59e000c 	ldr	r0, [lr, #12]
    cc84:	e1550001 	cmp	r5, r1
    cc88:	e0233290 	mla	r3, r0, r2, r3
    cc8c:	e59e2014 	ldr	r2, [lr, #20]
    cc90:	e58d5014 	str	r5, [sp, #20]
    cc94:	e0823003 	add	r3, r2, r3
    cc98:	e58d700c 	str	r7, [sp, #12]
    cc9c:	e5ce1000 	strb	r1, [lr]
    cca0:	e58d3004 	str	r3, [sp, #4]
    cca4:	da00006b 	ble	ce58 <wgfx_restore_cursor_content+0x284>
    cca8:	e1570001 	cmp	r7, r1
    ccac:	da000069 	ble	ce58 <wgfx_restore_cursor_content+0x284>
    ccb0:	e58d1010 	str	r1, [sp, #16]
    ccb4:	e59f11e4 	ldr	r1, [pc, #484]	; cea0 <wgfx_restore_cursor_content+0x2cc>
    ccb8:	e3a03000 	mov	r3, #0
    ccbc:	e58d3008 	str	r3, [sp, #8]
    ccc0:	e35b0000 	cmp	fp, #0
    ccc4:	da000052 	ble	ce14 <wgfx_restore_cursor_content+0x240>
    ccc8:	e3a07000 	mov	r7, #0
    cccc:	e59de004 	ldr	lr, [sp, #4]
    ccd0:	e3540000 	cmp	r4, #0
    ccd4:	da00004b 	ble	ce08 <wgfx_restore_cursor_content+0x234>
    ccd8:	e28e3004 	add	r3, lr, #4
    ccdc:	e2812004 	add	r2, r1, #4
    cce0:	e15e0002 	cmp	lr, r2
    cce4:	31510003 	cmpcc	r1, r3
    cce8:	23a03001 	movcs	r3, #1
    ccec:	33a03000 	movcc	r3, #0
    ccf0:	e354000b 	cmp	r4, #11
    ccf4:	93a03000 	movls	r3, #0
    ccf8:	82033001 	andhi	r3, r3, #1
    ccfc:	e3530000 	cmp	r3, #0
    cd00:	0a00005c 	beq	ce78 <wgfx_restore_cursor_content+0x2a4>
    cd04:	e2613000 	rsb	r3, r1, #0
    cd08:	e2133003 	ands	r3, r3, #3
    cd0c:	0a000055 	beq	ce68 <wgfx_restore_cursor_content+0x294>
    cd10:	e5d12000 	ldrb	r2, [r1]
    cd14:	e3530001 	cmp	r3, #1
    cd18:	e5ce2000 	strb	r2, [lr]
    cd1c:	e2819001 	add	r9, r1, #1
    cd20:	e28e8001 	add	r8, lr, #1
    cd24:	0a000051 	beq	ce70 <wgfx_restore_cursor_content+0x29c>
    cd28:	e3530003 	cmp	r3, #3
    cd2c:	01a05003 	moveq	r5, r3
    cd30:	13a05002 	movne	r5, #2
    cd34:	e5d12001 	ldrb	r2, [r1, #1]
    cd38:	e2819002 	add	r9, r1, #2
    cd3c:	e5ce2001 	strb	r2, [lr, #1]
    cd40:	05d12002 	ldrbeq	r2, [r1, #2]
    cd44:	e28e8002 	add	r8, lr, #2
    cd48:	02819003 	addeq	r9, r1, #3
    cd4c:	05ce2002 	strbeq	r2, [lr, #2]
    cd50:	028e8003 	addeq	r8, lr, #3
    cd54:	e3a02000 	mov	r2, #0
    cd58:	e0446003 	sub	r6, r4, r3
    cd5c:	e0810003 	add	r0, r1, r3
    cd60:	e1a0c126 	lsr	ip, r6, #2
    cd64:	e08e3003 	add	r3, lr, r3
    cd68:	e2822001 	add	r2, r2, #1
    cd6c:	e490a004 	ldr	sl, [r0], #4
    cd70:	e15c0002 	cmp	ip, r2
    cd74:	e483a004 	str	sl, [r3], #4
    cd78:	8afffffa 	bhi	cd68 <wgfx_restore_cursor_content+0x194>
    cd7c:	e3c63003 	bic	r3, r6, #3
    cd80:	e1560003 	cmp	r6, r3
    cd84:	e0835005 	add	r5, r3, r5
    cd88:	e0890003 	add	r0, r9, r3
    cd8c:	e0882003 	add	r2, r8, r3
    cd90:	0a000032 	beq	ce60 <wgfx_restore_cursor_content+0x28c>
    cd94:	e7d9c003 	ldrb	ip, [r9, r3]
    cd98:	e2856001 	add	r6, r5, #1
    cd9c:	e1540006 	cmp	r4, r6
    cda0:	e7c8c003 	strb	ip, [r8, r3]
    cda4:	da00002d 	ble	ce60 <wgfx_restore_cursor_content+0x28c>
    cda8:	e5d03001 	ldrb	r3, [r0, #1]
    cdac:	e285c002 	add	ip, r5, #2
    cdb0:	e154000c 	cmp	r4, ip
    cdb4:	e5c23001 	strb	r3, [r2, #1]
    cdb8:	da000028 	ble	ce60 <wgfx_restore_cursor_content+0x28c>
    cdbc:	e5d03002 	ldrb	r3, [r0, #2]
    cdc0:	e285c003 	add	ip, r5, #3
    cdc4:	e154000c 	cmp	r4, ip
    cdc8:	e5c23002 	strb	r3, [r2, #2]
    cdcc:	da000023 	ble	ce60 <wgfx_restore_cursor_content+0x28c>
    cdd0:	e5d03003 	ldrb	r3, [r0, #3]
    cdd4:	e285c004 	add	ip, r5, #4
    cdd8:	e154000c 	cmp	r4, ip
    cddc:	e5c23003 	strb	r3, [r2, #3]
    cde0:	da00001e 	ble	ce60 <wgfx_restore_cursor_content+0x28c>
    cde4:	e2855005 	add	r5, r5, #5
    cde8:	e5d03004 	ldrb	r3, [r0, #4]
    cdec:	e1540005 	cmp	r4, r5
    cdf0:	e5c23004 	strb	r3, [r2, #4]
    cdf4:	da000019 	ble	ce60 <wgfx_restore_cursor_content+0x28c>
    cdf8:	e5d03005 	ldrb	r3, [r0, #5]
    cdfc:	e0811004 	add	r1, r1, r4
    ce00:	e5c23005 	strb	r3, [r2, #5]
    ce04:	e08ee004 	add	lr, lr, r4
    ce08:	e2877001 	add	r7, r7, #1
    ce0c:	e15b0007 	cmp	fp, r7
    ce10:	1affffae 	bne	ccd0 <wgfx_restore_cursor_content+0xfc>
    ce14:	e59d3008 	ldr	r3, [sp, #8]
    ce18:	e59d000c 	ldr	r0, [sp, #12]
    ce1c:	e2832001 	add	r2, r3, #1
    ce20:	e59f3070 	ldr	r3, [pc, #112]	; ce98 <wgfx_restore_cursor_content+0x2c4>
    ce24:	e58d2008 	str	r2, [sp, #8]
    ce28:	e593300c 	ldr	r3, [r3, #12]
    ce2c:	e1500002 	cmp	r0, r2
    ce30:	e59d2004 	ldr	r2, [sp, #4]
    ce34:	e0823003 	add	r3, r2, r3
    ce38:	e58d3004 	str	r3, [sp, #4]
    ce3c:	1affff9f 	bne	ccc0 <wgfx_restore_cursor_content+0xec>
    ce40:	e59d3010 	ldr	r3, [sp, #16]
    ce44:	e59d2014 	ldr	r2, [sp, #20]
    ce48:	e2833001 	add	r3, r3, #1
    ce4c:	e1520003 	cmp	r2, r3
    ce50:	e58d3010 	str	r3, [sp, #16]
    ce54:	1affff97 	bne	ccb8 <wgfx_restore_cursor_content+0xe4>
    ce58:	e28dd01c 	add	sp, sp, #28
    ce5c:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    ce60:	e0811004 	add	r1, r1, r4
    ce64:	eaffffe6 	b	ce04 <wgfx_restore_cursor_content+0x230>
    ce68:	e1a0800e 	mov	r8, lr
    ce6c:	e1a09001 	mov	r9, r1
    ce70:	e1a05003 	mov	r5, r3
    ce74:	eaffffb6 	b	cd54 <wgfx_restore_cursor_content+0x180>
    ce78:	e1a03001 	mov	r3, r1
    ce7c:	e24e2001 	sub	r2, lr, #1
    ce80:	e0811004 	add	r1, r1, r4
    ce84:	e4d30001 	ldrb	r0, [r3], #1
    ce88:	e1510003 	cmp	r1, r3
    ce8c:	e5e20001 	strb	r0, [r2, #1]!
    ce90:	1afffffb 	bne	ce84 <wgfx_restore_cursor_content+0x2b0>
    ce94:	eaffffda 	b	ce04 <wgfx_restore_cursor_content+0x230>
    ce98:	00042ad0 	.word	0x00042ad0
    ce9c:	000186a0 	.word	0x000186a0
    cea0:	00042b0a 	.word	0x00042b0a

0000cea4 <wgfx_term_render_cursor>:
    cea4:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    cea8:	e59f2310 	ldr	r2, [pc, #784]	; d1c0 <wgfx_term_render_cursor+0x31c>
    ceac:	e24dd01c 	sub	sp, sp, #28
    ceb0:	e5925024 	ldr	r5, [r2, #36]	; 0x24
    ceb4:	e5923018 	ldr	r3, [r2, #24]
    ceb8:	e5924034 	ldr	r4, [r2, #52]	; 0x34
    cebc:	e1550003 	cmp	r5, r3
    cec0:	e5926020 	ldr	r6, [r2, #32]
    cec4:	2a00009b 	bcs	d138 <wgfx_term_render_cursor+0x294>
    cec8:	e592301c 	ldr	r3, [r2, #28]
    cecc:	e1560003 	cmp	r6, r3
    ced0:	2a000098 	bcs	d138 <wgfx_term_render_cursor+0x294>
    ced4:	e3540004 	cmp	r4, #4
    ced8:	8a0000a4 	bhi	d170 <wgfx_term_render_cursor+0x2cc>
    cedc:	e0823004 	add	r3, r2, r4
    cee0:	e5d33318 	ldrb	r3, [r3, #792]	; 0x318
    cee4:	e3530000 	cmp	r3, #0
    cee8:	0a0000a0 	beq	d170 <wgfx_term_render_cursor+0x2cc>
    ceec:	e5d23000 	ldrb	r3, [r2]
    cef0:	e3530000 	cmp	r3, #0
    cef4:	0a000006 	beq	cf14 <wgfx_term_render_cursor+0x70>
    cef8:	e59f72c4 	ldr	r7, [pc, #708]	; d1c4 <wgfx_term_render_cursor+0x320>
    cefc:	ea000001 	b	cf08 <wgfx_term_render_cursor+0x64>
    cf00:	e2577001 	subs	r7, r7, #1
    cf04:	0a000002 	beq	cf14 <wgfx_term_render_cursor+0x70>
    cf08:	ebffecff 	bl	830c <dma_running>
    cf0c:	e3500000 	cmp	r0, #0
    cf10:	1afffffa 	bne	cf00 <wgfx_term_render_cursor+0x5c>
    cf14:	e3a02000 	mov	r2, #0
    cf18:	e59fe2a0 	ldr	lr, [pc, #672]	; d1c0 <wgfx_term_render_cursor+0x31c>
    cf1c:	e0843104 	add	r3, r4, r4, lsl #2
    cf20:	e0843083 	add	r3, r4, r3, lsl #1
    cf24:	e08e3103 	add	r3, lr, r3, lsl #2
    cf28:	e5937250 	ldr	r7, [r3, #592]	; 0x250
    cf2c:	e593b24c 	ldr	fp, [r3, #588]	; 0x24c
    cf30:	e0060697 	mul	r6, r7, r6
    cf34:	e001059b 	mul	r1, fp, r5
    cf38:	e593023c 	ldr	r0, [r3, #572]	; 0x23c
    cf3c:	e5935258 	ldr	r5, [r3, #600]	; 0x258
    cf40:	e5934254 	ldr	r4, [r3, #596]	; 0x254
    cf44:	e593c244 	ldr	ip, [r3, #580]	; 0x244
    cf48:	e0210194 	mla	r1, r4, r1, r0
    cf4c:	e023c695 	mla	r3, r5, r6, ip
    cf50:	e59e000c 	ldr	r0, [lr, #12]
    cf54:	e1570002 	cmp	r7, r2
    cf58:	e0231390 	mla	r3, r0, r3, r1
    cf5c:	e59e1014 	ldr	r1, [lr, #20]
    cf60:	e58d7014 	str	r7, [sp, #20]
    cf64:	e0813003 	add	r3, r1, r3
    cf68:	e58d500c 	str	r5, [sp, #12]
    cf6c:	e5ce2000 	strb	r2, [lr]
    cf70:	e58d3004 	str	r3, [sp, #4]
    cf74:	da00008d 	ble	d1b0 <wgfx_term_render_cursor+0x30c>
    cf78:	e3550000 	cmp	r5, #0
    cf7c:	da000069 	ble	d128 <wgfx_term_render_cursor+0x284>
    cf80:	e59fe240 	ldr	lr, [pc, #576]	; d1c8 <wgfx_term_render_cursor+0x324>
    cf84:	e58d2010 	str	r2, [sp, #16]
    cf88:	e3a03000 	mov	r3, #0
    cf8c:	e58d3008 	str	r3, [sp, #8]
    cf90:	e35b0000 	cmp	fp, #0
    cf94:	da000052 	ble	d0e4 <wgfx_term_render_cursor+0x240>
    cf98:	e3a07000 	mov	r7, #0
    cf9c:	e59d1004 	ldr	r1, [sp, #4]
    cfa0:	e3540000 	cmp	r4, #0
    cfa4:	da00004b 	ble	d0d8 <wgfx_term_render_cursor+0x234>
    cfa8:	e2813004 	add	r3, r1, #4
    cfac:	e28e2004 	add	r2, lr, #4
    cfb0:	e1510002 	cmp	r1, r2
    cfb4:	315e0003 	cmpcc	lr, r3
    cfb8:	23a03001 	movcs	r3, #1
    cfbc:	33a03000 	movcc	r3, #0
    cfc0:	e354000b 	cmp	r4, #11
    cfc4:	93a03000 	movls	r3, #0
    cfc8:	82033001 	andhi	r3, r3, #1
    cfcc:	e3530000 	cmp	r3, #0
    cfd0:	0a00006e 	beq	d190 <wgfx_term_render_cursor+0x2ec>
    cfd4:	e2613000 	rsb	r3, r1, #0
    cfd8:	e2133003 	ands	r3, r3, #3
    cfdc:	0a000067 	beq	d180 <wgfx_term_render_cursor+0x2dc>
    cfe0:	e5d12000 	ldrb	r2, [r1]
    cfe4:	e3530001 	cmp	r3, #1
    cfe8:	e5ce2000 	strb	r2, [lr]
    cfec:	e2819001 	add	r9, r1, #1
    cff0:	e28e8001 	add	r8, lr, #1
    cff4:	0a000063 	beq	d188 <wgfx_term_render_cursor+0x2e4>
    cff8:	e3530003 	cmp	r3, #3
    cffc:	01a05003 	moveq	r5, r3
    d000:	13a05002 	movne	r5, #2
    d004:	e5d12001 	ldrb	r2, [r1, #1]
    d008:	e2819002 	add	r9, r1, #2
    d00c:	e5ce2001 	strb	r2, [lr, #1]
    d010:	05d12002 	ldrbeq	r2, [r1, #2]
    d014:	e28e8002 	add	r8, lr, #2
    d018:	02819003 	addeq	r9, r1, #3
    d01c:	05ce2002 	strbeq	r2, [lr, #2]
    d020:	028e8003 	addeq	r8, lr, #3
    d024:	e3a02000 	mov	r2, #0
    d028:	e0446003 	sub	r6, r4, r3
    d02c:	e0810003 	add	r0, r1, r3
    d030:	e1a0c126 	lsr	ip, r6, #2
    d034:	e08e3003 	add	r3, lr, r3
    d038:	e2822001 	add	r2, r2, #1
    d03c:	e490a004 	ldr	sl, [r0], #4
    d040:	e15c0002 	cmp	ip, r2
    d044:	e483a004 	str	sl, [r3], #4
    d048:	8afffffa 	bhi	d038 <wgfx_term_render_cursor+0x194>
    d04c:	e3c63003 	bic	r3, r6, #3
    d050:	e1560003 	cmp	r6, r3
    d054:	e0835005 	add	r5, r3, r5
    d058:	e0890003 	add	r0, r9, r3
    d05c:	e0882003 	add	r2, r8, r3
    d060:	0a000044 	beq	d178 <wgfx_term_render_cursor+0x2d4>
    d064:	e7d9c003 	ldrb	ip, [r9, r3]
    d068:	e2856001 	add	r6, r5, #1
    d06c:	e1540006 	cmp	r4, r6
    d070:	e7c8c003 	strb	ip, [r8, r3]
    d074:	da00003f 	ble	d178 <wgfx_term_render_cursor+0x2d4>
    d078:	e5d03001 	ldrb	r3, [r0, #1]
    d07c:	e285c002 	add	ip, r5, #2
    d080:	e154000c 	cmp	r4, ip
    d084:	e5c23001 	strb	r3, [r2, #1]
    d088:	da00003a 	ble	d178 <wgfx_term_render_cursor+0x2d4>
    d08c:	e5d03002 	ldrb	r3, [r0, #2]
    d090:	e285c003 	add	ip, r5, #3
    d094:	e154000c 	cmp	r4, ip
    d098:	e5c23002 	strb	r3, [r2, #2]
    d09c:	da000035 	ble	d178 <wgfx_term_render_cursor+0x2d4>
    d0a0:	e5d03003 	ldrb	r3, [r0, #3]
    d0a4:	e285c004 	add	ip, r5, #4
    d0a8:	e154000c 	cmp	r4, ip
    d0ac:	e5c23003 	strb	r3, [r2, #3]
    d0b0:	da000030 	ble	d178 <wgfx_term_render_cursor+0x2d4>
    d0b4:	e2855005 	add	r5, r5, #5
    d0b8:	e5d03004 	ldrb	r3, [r0, #4]
    d0bc:	e1540005 	cmp	r4, r5
    d0c0:	e5c23004 	strb	r3, [r2, #4]
    d0c4:	da00002b 	ble	d178 <wgfx_term_render_cursor+0x2d4>
    d0c8:	e5d03005 	ldrb	r3, [r0, #5]
    d0cc:	e0811004 	add	r1, r1, r4
    d0d0:	e5c23005 	strb	r3, [r2, #5]
    d0d4:	e08ee004 	add	lr, lr, r4
    d0d8:	e2877001 	add	r7, r7, #1
    d0dc:	e15b0007 	cmp	fp, r7
    d0e0:	1affffae 	bne	cfa0 <wgfx_term_render_cursor+0xfc>
    d0e4:	e59d3008 	ldr	r3, [sp, #8]
    d0e8:	e59d100c 	ldr	r1, [sp, #12]
    d0ec:	e2832001 	add	r2, r3, #1
    d0f0:	e59f30c8 	ldr	r3, [pc, #200]	; d1c0 <wgfx_term_render_cursor+0x31c>
    d0f4:	e58d2008 	str	r2, [sp, #8]
    d0f8:	e593300c 	ldr	r3, [r3, #12]
    d0fc:	e1510002 	cmp	r1, r2
    d100:	e59d2004 	ldr	r2, [sp, #4]
    d104:	e0823003 	add	r3, r2, r3
    d108:	e58d3004 	str	r3, [sp, #4]
    d10c:	1affff9f 	bne	cf90 <wgfx_term_render_cursor+0xec>
    d110:	e59d3010 	ldr	r3, [sp, #16]
    d114:	e59d2014 	ldr	r2, [sp, #20]
    d118:	e2833001 	add	r3, r3, #1
    d11c:	e1520003 	cmp	r2, r3
    d120:	e58d3010 	str	r3, [sp, #16]
    d124:	1affff97 	bne	cf88 <wgfx_term_render_cursor+0xe4>
    d128:	e59f3090 	ldr	r3, [pc, #144]	; d1c0 <wgfx_term_render_cursor+0x31c>
    d12c:	e5934034 	ldr	r4, [r3, #52]	; 0x34
    d130:	e5935024 	ldr	r5, [r3, #36]	; 0x24
    d134:	e5936020 	ldr	r6, [r3, #32]
    d138:	e3540004 	cmp	r4, #4
    d13c:	8a00000b 	bhi	d170 <wgfx_term_render_cursor+0x2cc>
    d140:	e59f3078 	ldr	r3, [pc, #120]	; d1c0 <wgfx_term_render_cursor+0x31c>
    d144:	e0833004 	add	r3, r3, r4
    d148:	e5d33318 	ldrb	r3, [r3, #792]	; 0x318
    d14c:	e3530000 	cmp	r3, #0
    d150:	0a000006 	beq	d170 <wgfx_term_render_cursor+0x2cc>
    d154:	e1a02006 	mov	r2, r6
    d158:	e1a01005 	mov	r1, r5
    d15c:	e1a00004 	mov	r0, r4
    d160:	e3a0305f 	mov	r3, #95	; 0x5f
    d164:	e28dd01c 	add	sp, sp, #28
    d168:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    d16c:	eafff9ad 	b	b828 <wgfx_putc.part.0>
    d170:	e28dd01c 	add	sp, sp, #28
    d174:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    d178:	e0811004 	add	r1, r1, r4
    d17c:	eaffffd4 	b	d0d4 <wgfx_term_render_cursor+0x230>
    d180:	e1a0800e 	mov	r8, lr
    d184:	e1a09001 	mov	r9, r1
    d188:	e1a05003 	mov	r5, r3
    d18c:	eaffffa4 	b	d024 <wgfx_term_render_cursor+0x180>
    d190:	e1a03001 	mov	r3, r1
    d194:	e24e2001 	sub	r2, lr, #1
    d198:	e0811004 	add	r1, r1, r4
    d19c:	e4d30001 	ldrb	r0, [r3], #1
    d1a0:	e1510003 	cmp	r1, r3
    d1a4:	e5e20001 	strb	r0, [r2, #1]!
    d1a8:	1afffffb 	bne	d19c <wgfx_term_render_cursor+0x2f8>
    d1ac:	eaffffc8 	b	d0d4 <wgfx_term_render_cursor+0x230>
    d1b0:	e59e4034 	ldr	r4, [lr, #52]	; 0x34
    d1b4:	e59e5024 	ldr	r5, [lr, #36]	; 0x24
    d1b8:	e59e6020 	ldr	r6, [lr, #32]
    d1bc:	eaffffdd 	b	d138 <wgfx_term_render_cursor+0x294>
    d1c0:	00042ad0 	.word	0x00042ad0
    d1c4:	000186a0 	.word	0x000186a0
    d1c8:	00042b0a 	.word	0x00042b0a

0000d1cc <wgfx_clear_screen>:
    d1cc:	e92d4070 	push	{r4, r5, r6, lr}
    d1d0:	e59f517c 	ldr	r5, [pc, #380]	; d354 <wgfx_clear_screen+0x188>
    d1d4:	e5d53000 	ldrb	r3, [r5]
    d1d8:	e3530000 	cmp	r3, #0
    d1dc:	0a000006 	beq	d1fc <wgfx_clear_screen+0x30>
    d1e0:	e59f4170 	ldr	r4, [pc, #368]	; d358 <wgfx_clear_screen+0x18c>
    d1e4:	ea000001 	b	d1f0 <wgfx_clear_screen+0x24>
    d1e8:	e2544001 	subs	r4, r4, #1
    d1ec:	0a000002 	beq	d1fc <wgfx_clear_screen+0x30>
    d1f0:	ebffec45 	bl	830c <dma_running>
    d1f4:	e3500000 	cmp	r0, #0
    d1f8:	1afffffa 	bne	d1e8 <wgfx_clear_screen+0x1c>
    d1fc:	e3a02000 	mov	r2, #0
    d200:	e5953014 	ldr	r3, [r5, #20]
    d204:	e595c010 	ldr	ip, [r5, #16]
    d208:	e5c52000 	strb	r2, [r5]
    d20c:	e083000c 	add	r0, r3, ip
    d210:	e1530000 	cmp	r3, r0
    d214:	2a000045 	bcs	d330 <wgfx_clear_screen+0x164>
    d218:	e59f213c 	ldr	r2, [pc, #316]	; d35c <wgfx_clear_screen+0x190>
    d21c:	e283e001 	add	lr, r3, #1
    d220:	e2821001 	add	r1, r2, #1
    d224:	e1510003 	cmp	r1, r3
    d228:	81500002 	cmphi	r0, r2
    d22c:	93a02001 	movls	r2, #1
    d230:	83a02000 	movhi	r2, #0
    d234:	e35c000b 	cmp	ip, #11
    d238:	93a02000 	movls	r2, #0
    d23c:	82022001 	andhi	r2, r2, #1
    d240:	e3520000 	cmp	r2, #0
    d244:	e1a0200e 	mov	r2, lr
    d248:	0a00003b 	beq	d33c <wgfx_clear_screen+0x170>
    d24c:	e2634000 	rsb	r4, r3, #0
    d250:	e2144003 	ands	r4, r4, #3
    d254:	01a0e003 	moveq	lr, r3
    d258:	0a00000a 	beq	d288 <wgfx_clear_screen+0xbc>
    d25c:	e5d52038 	ldrb	r2, [r5, #56]	; 0x38
    d260:	e3540001 	cmp	r4, #1
    d264:	e5c32000 	strb	r2, [r3]
    d268:	0a000006 	beq	d288 <wgfx_clear_screen+0xbc>
    d26c:	e5d52038 	ldrb	r2, [r5, #56]	; 0x38
    d270:	e3540003 	cmp	r4, #3
    d274:	e5c32001 	strb	r2, [r3, #1]
    d278:	05d52038 	ldrbeq	r2, [r5, #56]	; 0x38
    d27c:	e283e002 	add	lr, r3, #2
    d280:	05c32002 	strbeq	r2, [r3, #2]
    d284:	0283e003 	addeq	lr, r3, #3
    d288:	e3a02000 	mov	r2, #0
    d28c:	e5d56038 	ldrb	r6, [r5, #56]	; 0x38
    d290:	e04cc004 	sub	ip, ip, r4
    d294:	e1861406 	orr	r1, r6, r6, lsl #8
    d298:	e1811806 	orr	r1, r1, r6, lsl #16
    d29c:	e0833004 	add	r3, r3, r4
    d2a0:	e1811c06 	orr	r1, r1, r6, lsl #24
    d2a4:	e1a0412c 	lsr	r4, ip, #2
    d2a8:	e2822001 	add	r2, r2, #1
    d2ac:	e1520004 	cmp	r2, r4
    d2b0:	e4831004 	str	r1, [r3], #4
    d2b4:	3afffffb 	bcc	d2a8 <wgfx_clear_screen+0xdc>
    d2b8:	e3cc2003 	bic	r2, ip, #3
    d2bc:	e15c0002 	cmp	ip, r2
    d2c0:	e08e3002 	add	r3, lr, r2
    d2c4:	0a000019 	beq	d330 <wgfx_clear_screen+0x164>
    d2c8:	e5d51038 	ldrb	r1, [r5, #56]	; 0x38
    d2cc:	e283c001 	add	ip, r3, #1
    d2d0:	e150000c 	cmp	r0, ip
    d2d4:	e7ce1002 	strb	r1, [lr, r2]
    d2d8:	9a000014 	bls	d330 <wgfx_clear_screen+0x164>
    d2dc:	e5d52038 	ldrb	r2, [r5, #56]	; 0x38
    d2e0:	e2831002 	add	r1, r3, #2
    d2e4:	e1500001 	cmp	r0, r1
    d2e8:	e5c32001 	strb	r2, [r3, #1]
    d2ec:	9a00000f 	bls	d330 <wgfx_clear_screen+0x164>
    d2f0:	e5d52038 	ldrb	r2, [r5, #56]	; 0x38
    d2f4:	e2831003 	add	r1, r3, #3
    d2f8:	e1500001 	cmp	r0, r1
    d2fc:	e5c32002 	strb	r2, [r3, #2]
    d300:	9a00000a 	bls	d330 <wgfx_clear_screen+0x164>
    d304:	e5d52038 	ldrb	r2, [r5, #56]	; 0x38
    d308:	e2831004 	add	r1, r3, #4
    d30c:	e1500001 	cmp	r0, r1
    d310:	e5c32003 	strb	r2, [r3, #3]
    d314:	9a000005 	bls	d330 <wgfx_clear_screen+0x164>
    d318:	e5d52038 	ldrb	r2, [r5, #56]	; 0x38
    d31c:	e2831005 	add	r1, r3, #5
    d320:	e1500001 	cmp	r0, r1
    d324:	e5c32004 	strb	r2, [r3, #4]
    d328:	85d52038 	ldrbhi	r2, [r5, #56]	; 0x38
    d32c:	85c32005 	strbhi	r2, [r3, #5]
    d330:	e8bd4070 	pop	{r4, r5, r6, lr}
    d334:	eafffeda 	b	cea4 <wgfx_term_render_cursor>
    d338:	e2822001 	add	r2, r2, #1
    d33c:	e5d53038 	ldrb	r3, [r5, #56]	; 0x38
    d340:	e1500002 	cmp	r0, r2
    d344:	e5423001 	strb	r3, [r2, #-1]
    d348:	1afffffa 	bne	d338 <wgfx_clear_screen+0x16c>
    d34c:	e8bd4070 	pop	{r4, r5, r6, lr}
    d350:	eafffed3 	b	cea4 <wgfx_term_render_cursor>
    d354:	00042ad0 	.word	0x00042ad0
    d358:	000186a0 	.word	0x000186a0
    d35c:	00042b08 	.word	0x00042b08

0000d360 <wgfx_term_putstring>:
    d360:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    d364:	e59fb45c 	ldr	fp, [pc, #1116]	; d7c8 <wgfx_term_putstring+0x468>
    d368:	e24dd024 	sub	sp, sp, #36	; 0x24
    d36c:	e59b4024 	ldr	r4, [fp, #36]	; 0x24
    d370:	e59b3018 	ldr	r3, [fp, #24]
    d374:	e58d0010 	str	r0, [sp, #16]
    d378:	e1540003 	cmp	r4, r3
    d37c:	2a00009b 	bcs	d5f0 <wgfx_term_putstring+0x290>
    d380:	e59b6020 	ldr	r6, [fp, #32]
    d384:	e59b301c 	ldr	r3, [fp, #28]
    d388:	e1560003 	cmp	r6, r3
    d38c:	2a000097 	bcs	d5f0 <wgfx_term_putstring+0x290>
    d390:	e59b5034 	ldr	r5, [fp, #52]	; 0x34
    d394:	e3550004 	cmp	r5, #4
    d398:	8a000094 	bhi	d5f0 <wgfx_term_putstring+0x290>
    d39c:	e08b3005 	add	r3, fp, r5
    d3a0:	e5d33318 	ldrb	r3, [r3, #792]	; 0x318
    d3a4:	e3530000 	cmp	r3, #0
    d3a8:	0a000090 	beq	d5f0 <wgfx_term_putstring+0x290>
    d3ac:	e5db3000 	ldrb	r3, [fp]
    d3b0:	e3530000 	cmp	r3, #0
    d3b4:	0a000006 	beq	d3d4 <wgfx_term_putstring+0x74>
    d3b8:	e59f740c 	ldr	r7, [pc, #1036]	; d7cc <wgfx_term_putstring+0x46c>
    d3bc:	ea000001 	b	d3c8 <wgfx_term_putstring+0x68>
    d3c0:	e2577001 	subs	r7, r7, #1
    d3c4:	0a000002 	beq	d3d4 <wgfx_term_putstring+0x74>
    d3c8:	ebffebcf 	bl	830c <dma_running>
    d3cc:	e3500000 	cmp	r0, #0
    d3d0:	1afffffa 	bne	d3c0 <wgfx_term_putstring+0x60>
    d3d4:	e3a01000 	mov	r1, #0
    d3d8:	e0852105 	add	r2, r5, r5, lsl #2
    d3dc:	e0852082 	add	r2, r5, r2, lsl #1
    d3e0:	e08b2102 	add	r2, fp, r2, lsl #2
    d3e4:	e592e250 	ldr	lr, [r2, #592]	; 0x250
    d3e8:	e592324c 	ldr	r3, [r2, #588]	; 0x24c
    d3ec:	e006069e 	mul	r6, lr, r6
    d3f0:	e58d3004 	str	r3, [sp, #4]
    d3f4:	e0030493 	mul	r3, r3, r4
    d3f8:	e592023c 	ldr	r0, [r2, #572]	; 0x23c
    d3fc:	e5925258 	ldr	r5, [r2, #600]	; 0x258
    d400:	e5924254 	ldr	r4, [r2, #596]	; 0x254
    d404:	e592c244 	ldr	ip, [r2, #580]	; 0x244
    d408:	e0230394 	mla	r3, r4, r3, r0
    d40c:	e022c695 	mla	r2, r5, r6, ip
    d410:	e59b000c 	ldr	r0, [fp, #12]
    d414:	e15e0001 	cmp	lr, r1
    d418:	e0233290 	mla	r3, r0, r2, r3
    d41c:	e59b2014 	ldr	r2, [fp, #20]
    d420:	e58de01c 	str	lr, [sp, #28]
    d424:	e0823003 	add	r3, r2, r3
    d428:	e58d5014 	str	r5, [sp, #20]
    d42c:	e5cb1000 	strb	r1, [fp]
    d430:	e58d3008 	str	r3, [sp, #8]
    d434:	da00006d 	ble	d5f0 <wgfx_term_putstring+0x290>
    d438:	e1550001 	cmp	r5, r1
    d43c:	da00006b 	ble	d5f0 <wgfx_term_putstring+0x290>
    d440:	e58d1018 	str	r1, [sp, #24]
    d444:	e59f1384 	ldr	r1, [pc, #900]	; d7d0 <wgfx_term_putstring+0x470>
    d448:	e3a03000 	mov	r3, #0
    d44c:	e58d300c 	str	r3, [sp, #12]
    d450:	e59d3004 	ldr	r3, [sp, #4]
    d454:	e3530000 	cmp	r3, #0
    d458:	da000053 	ble	d5ac <wgfx_term_putstring+0x24c>
    d45c:	e3a07000 	mov	r7, #0
    d460:	e59de008 	ldr	lr, [sp, #8]
    d464:	e3540000 	cmp	r4, #0
    d468:	da00004b 	ble	d59c <wgfx_term_putstring+0x23c>
    d46c:	e28e3004 	add	r3, lr, #4
    d470:	e2812004 	add	r2, r1, #4
    d474:	e15e0002 	cmp	lr, r2
    d478:	31510003 	cmpcc	r1, r3
    d47c:	23a03001 	movcs	r3, #1
    d480:	33a03000 	movcc	r3, #0
    d484:	e354000b 	cmp	r4, #11
    d488:	93a03000 	movls	r3, #0
    d48c:	82033001 	andhi	r3, r3, #1
    d490:	e3530000 	cmp	r3, #0
    d494:	0a0000c3 	beq	d7a8 <wgfx_term_putstring+0x448>
    d498:	e2613000 	rsb	r3, r1, #0
    d49c:	e2133003 	ands	r3, r3, #3
    d4a0:	0a0000bc 	beq	d798 <wgfx_term_putstring+0x438>
    d4a4:	e5d12000 	ldrb	r2, [r1]
    d4a8:	e3530001 	cmp	r3, #1
    d4ac:	e5ce2000 	strb	r2, [lr]
    d4b0:	e281a001 	add	sl, r1, #1
    d4b4:	e28e9001 	add	r9, lr, #1
    d4b8:	0a0000b8 	beq	d7a0 <wgfx_term_putstring+0x440>
    d4bc:	e3530003 	cmp	r3, #3
    d4c0:	01a06003 	moveq	r6, r3
    d4c4:	13a06002 	movne	r6, #2
    d4c8:	e5d12001 	ldrb	r2, [r1, #1]
    d4cc:	e281a002 	add	sl, r1, #2
    d4d0:	e5ce2001 	strb	r2, [lr, #1]
    d4d4:	05d12002 	ldrbeq	r2, [r1, #2]
    d4d8:	e28e9002 	add	r9, lr, #2
    d4dc:	0281a003 	addeq	sl, r1, #3
    d4e0:	05ce2002 	strbeq	r2, [lr, #2]
    d4e4:	028e9003 	addeq	r9, lr, #3
    d4e8:	e3a02000 	mov	r2, #0
    d4ec:	e0448003 	sub	r8, r4, r3
    d4f0:	e0810003 	add	r0, r1, r3
    d4f4:	e1a05128 	lsr	r5, r8, #2
    d4f8:	e08e3003 	add	r3, lr, r3
    d4fc:	e2822001 	add	r2, r2, #1
    d500:	e490c004 	ldr	ip, [r0], #4
    d504:	e1520005 	cmp	r2, r5
    d508:	e483c004 	str	ip, [r3], #4
    d50c:	3afffffa 	bcc	d4fc <wgfx_term_putstring+0x19c>
    d510:	e3c83003 	bic	r3, r8, #3
    d514:	e1530008 	cmp	r3, r8
    d518:	e0836006 	add	r6, r3, r6
    d51c:	e08a0003 	add	r0, sl, r3
    d520:	e0892003 	add	r2, r9, r3
    d524:	0a000099 	beq	d790 <wgfx_term_putstring+0x430>
    d528:	e7dac003 	ldrb	ip, [sl, r3]
    d52c:	e2865001 	add	r5, r6, #1
    d530:	e1540005 	cmp	r4, r5
    d534:	e7c9c003 	strb	ip, [r9, r3]
    d538:	da000094 	ble	d790 <wgfx_term_putstring+0x430>
    d53c:	e5d03001 	ldrb	r3, [r0, #1]
    d540:	e286c002 	add	ip, r6, #2
    d544:	e154000c 	cmp	r4, ip
    d548:	e5c23001 	strb	r3, [r2, #1]
    d54c:	da00008f 	ble	d790 <wgfx_term_putstring+0x430>
    d550:	e5d03002 	ldrb	r3, [r0, #2]
    d554:	e286c003 	add	ip, r6, #3
    d558:	e154000c 	cmp	r4, ip
    d55c:	e5c23002 	strb	r3, [r2, #2]
    d560:	da00008a 	ble	d790 <wgfx_term_putstring+0x430>
    d564:	e5d03003 	ldrb	r3, [r0, #3]
    d568:	e286c004 	add	ip, r6, #4
    d56c:	e154000c 	cmp	r4, ip
    d570:	e5c23003 	strb	r3, [r2, #3]
    d574:	da000085 	ble	d790 <wgfx_term_putstring+0x430>
    d578:	e2866005 	add	r6, r6, #5
    d57c:	e5d03004 	ldrb	r3, [r0, #4]
    d580:	e1540006 	cmp	r4, r6
    d584:	e5c23004 	strb	r3, [r2, #4]
    d588:	da000080 	ble	d790 <wgfx_term_putstring+0x430>
    d58c:	e5d03005 	ldrb	r3, [r0, #5]
    d590:	e0811004 	add	r1, r1, r4
    d594:	e5c23005 	strb	r3, [r2, #5]
    d598:	e08ee004 	add	lr, lr, r4
    d59c:	e59d3004 	ldr	r3, [sp, #4]
    d5a0:	e2877001 	add	r7, r7, #1
    d5a4:	e1530007 	cmp	r3, r7
    d5a8:	1affffad 	bne	d464 <wgfx_term_putstring+0x104>
    d5ac:	e59d300c 	ldr	r3, [sp, #12]
    d5b0:	e59d0014 	ldr	r0, [sp, #20]
    d5b4:	e2833001 	add	r3, r3, #1
    d5b8:	e1a02003 	mov	r2, r3
    d5bc:	e58d300c 	str	r3, [sp, #12]
    d5c0:	e1500002 	cmp	r0, r2
    d5c4:	e59b300c 	ldr	r3, [fp, #12]
    d5c8:	e59d2008 	ldr	r2, [sp, #8]
    d5cc:	e0823003 	add	r3, r2, r3
    d5d0:	e58d3008 	str	r3, [sp, #8]
    d5d4:	1affff9d 	bne	d450 <wgfx_term_putstring+0xf0>
    d5d8:	e59d3018 	ldr	r3, [sp, #24]
    d5dc:	e59d201c 	ldr	r2, [sp, #28]
    d5e0:	e2833001 	add	r3, r3, #1
    d5e4:	e1520003 	cmp	r2, r3
    d5e8:	e58d3018 	str	r3, [sp, #24]
    d5ec:	1affff95 	bne	d448 <wgfx_term_putstring+0xe8>
    d5f0:	e3a05000 	mov	r5, #0
    d5f4:	e59d3010 	ldr	r3, [sp, #16]
    d5f8:	e2434001 	sub	r4, r3, #1
    d5fc:	e5f43001 	ldrb	r3, [r4, #1]!
    d600:	e3530000 	cmp	r3, #0
    d604:	0a00000d 	beq	d640 <wgfx_term_putstring+0x2e0>
    d608:	e2432008 	sub	r2, r3, #8
    d60c:	e3520005 	cmp	r2, #5
    d610:	979ff102 	ldrls	pc, [pc, r2, lsl #2]
    d614:	ea00003e 	b	d714 <wgfx_term_putstring+0x3b4>
    d618:	0000d6d4 	.word	0x0000d6d4
    d61c:	0000d698 	.word	0x0000d698
    d620:	0000d64c 	.word	0x0000d64c
    d624:	0000d714 	.word	0x0000d714
    d628:	0000d714 	.word	0x0000d714
    d62c:	0000d630 	.word	0x0000d630
    d630:	e58b5024 	str	r5, [fp, #36]	; 0x24
    d634:	e5f43001 	ldrb	r3, [r4, #1]!
    d638:	e3530000 	cmp	r3, #0
    d63c:	1afffff1 	bne	d608 <wgfx_term_putstring+0x2a8>
    d640:	e28dd024 	add	sp, sp, #36	; 0x24
    d644:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    d648:	eafffe15 	b	cea4 <wgfx_term_render_cursor>
    d64c:	e59b2020 	ldr	r2, [fp, #32]
    d650:	e59b1018 	ldr	r1, [fp, #24]
    d654:	e2823001 	add	r3, r2, #1
    d658:	e3510000 	cmp	r1, #0
    d65c:	e58b3020 	str	r3, [fp, #32]
    d660:	02823002 	addeq	r3, r2, #2
    d664:	e58b5024 	str	r5, [fp, #36]	; 0x24
    d668:	058b3020 	streq	r3, [fp, #32]
    d66c:	e59b201c 	ldr	r2, [fp, #28]
    d670:	e1520003 	cmp	r2, r3
    d674:	8affffe0 	bhi	d5fc <wgfx_term_putstring+0x29c>
    d678:	e59b0034 	ldr	r0, [fp, #52]	; 0x34
    d67c:	e2433001 	sub	r3, r3, #1
    d680:	e3500004 	cmp	r0, #4
    d684:	e58b3020 	str	r3, [fp, #32]
    d688:	8affffdb 	bhi	d5fc <wgfx_term_putstring+0x29c>
    d68c:	e3a01001 	mov	r1, #1
    d690:	ebfff807 	bl	b6b4 <wgfx_scroll.part.3>
    d694:	eaffffd8 	b	d5fc <wgfx_term_putstring+0x29c>
    d698:	e59b3024 	ldr	r3, [fp, #36]	; 0x24
    d69c:	e59b2018 	ldr	r2, [fp, #24]
    d6a0:	e2833001 	add	r3, r3, #1
    d6a4:	e3c33007 	bic	r3, r3, #7
    d6a8:	e2833008 	add	r3, r3, #8
    d6ac:	e2421001 	sub	r1, r2, #1
    d6b0:	e1530001 	cmp	r3, r1
    d6b4:	21a03001 	movcs	r3, r1
    d6b8:	e1520003 	cmp	r2, r3
    d6bc:	e58b3024 	str	r3, [fp, #36]	; 0x24
    d6c0:	e59b3020 	ldr	r3, [fp, #32]
    d6c4:	958b5024 	strls	r5, [fp, #36]	; 0x24
    d6c8:	92833001 	addls	r3, r3, #1
    d6cc:	958b3020 	strls	r3, [fp, #32]
    d6d0:	eaffffe5 	b	d66c <wgfx_term_putstring+0x30c>
    d6d4:	e59b3024 	ldr	r3, [fp, #36]	; 0x24
    d6d8:	e3530000 	cmp	r3, #0
    d6dc:	0affffc6 	beq	d5fc <wgfx_term_putstring+0x29c>
    d6e0:	e59b0034 	ldr	r0, [fp, #52]	; 0x34
    d6e4:	e2431001 	sub	r1, r3, #1
    d6e8:	e3500004 	cmp	r0, #4
    d6ec:	e58b1024 	str	r1, [fp, #36]	; 0x24
    d6f0:	8affffc1 	bhi	d5fc <wgfx_term_putstring+0x29c>
    d6f4:	e08b3000 	add	r3, fp, r0
    d6f8:	e5d33318 	ldrb	r3, [r3, #792]	; 0x318
    d6fc:	e3530000 	cmp	r3, #0
    d700:	0affffbd 	beq	d5fc <wgfx_term_putstring+0x29c>
    d704:	e3a03020 	mov	r3, #32
    d708:	e59b2020 	ldr	r2, [fp, #32]
    d70c:	ebfff845 	bl	b828 <wgfx_putc.part.0>
    d710:	eaffffb9 	b	d5fc <wgfx_term_putstring+0x29c>
    d714:	e59b0034 	ldr	r0, [fp, #52]	; 0x34
    d718:	e59b1024 	ldr	r1, [fp, #36]	; 0x24
    d71c:	e3500004 	cmp	r0, #4
    d720:	e59b2020 	ldr	r2, [fp, #32]
    d724:	8a000003 	bhi	d738 <wgfx_term_putstring+0x3d8>
    d728:	e08bc000 	add	ip, fp, r0
    d72c:	e5dcc318 	ldrb	ip, [ip, #792]	; 0x318
    d730:	e35c0000 	cmp	ip, #0
    d734:	1a000011 	bne	d780 <wgfx_term_putstring+0x420>
    d738:	e59b3018 	ldr	r3, [fp, #24]
    d73c:	e2811001 	add	r1, r1, #1
    d740:	e1510003 	cmp	r1, r3
    d744:	e59b301c 	ldr	r3, [fp, #28]
    d748:	22822001 	addcs	r2, r2, #1
    d74c:	e58b1024 	str	r1, [fp, #36]	; 0x24
    d750:	258b2020 	strcs	r2, [fp, #32]
    d754:	258b5024 	strcs	r5, [fp, #36]	; 0x24
    d758:	e1530002 	cmp	r3, r2
    d75c:	8affffa6 	bhi	d5fc <wgfx_term_putstring+0x29c>
    d760:	e59b0034 	ldr	r0, [fp, #52]	; 0x34
    d764:	e2422001 	sub	r2, r2, #1
    d768:	e3500004 	cmp	r0, #4
    d76c:	e58b2020 	str	r2, [fp, #32]
    d770:	8affffa1 	bhi	d5fc <wgfx_term_putstring+0x29c>
    d774:	e3a01001 	mov	r1, #1
    d778:	ebfff7cd 	bl	b6b4 <wgfx_scroll.part.3>
    d77c:	eaffff9e 	b	d5fc <wgfx_term_putstring+0x29c>
    d780:	ebfff828 	bl	b828 <wgfx_putc.part.0>
    d784:	e59b1024 	ldr	r1, [fp, #36]	; 0x24
    d788:	e59b2020 	ldr	r2, [fp, #32]
    d78c:	eaffffe9 	b	d738 <wgfx_term_putstring+0x3d8>
    d790:	e0811004 	add	r1, r1, r4
    d794:	eaffff7f 	b	d598 <wgfx_term_putstring+0x238>
    d798:	e1a0900e 	mov	r9, lr
    d79c:	e1a0a001 	mov	sl, r1
    d7a0:	e1a06003 	mov	r6, r3
    d7a4:	eaffff4f 	b	d4e8 <wgfx_term_putstring+0x188>
    d7a8:	e1a03001 	mov	r3, r1
    d7ac:	e24e2001 	sub	r2, lr, #1
    d7b0:	e0811004 	add	r1, r1, r4
    d7b4:	e4d30001 	ldrb	r0, [r3], #1
    d7b8:	e1510003 	cmp	r1, r3
    d7bc:	e5e20001 	strb	r0, [r2, #1]!
    d7c0:	1afffffb 	bne	d7b4 <wgfx_term_putstring+0x454>
    d7c4:	eaffff73 	b	d598 <wgfx_term_putstring+0x238>
    d7c8:	00042ad0 	.word	0x00042ad0
    d7cc:	000186a0 	.word	0x000186a0
    d7d0:	00042b0a 	.word	0x00042b0a

0000d7d4 <wgfx_set_framebuffer>:
    d7d4:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    d7d8:	e1a06001 	mov	r6, r1
    d7dc:	e1a07002 	mov	r7, r2
    d7e0:	e1a08003 	mov	r8, r3
    d7e4:	e1a09000 	mov	r9, r0
    d7e8:	e59d5020 	ldr	r5, [sp, #32]
    d7ec:	ebffea95 	bl	8248 <dma_init>
    d7f0:	e3760001 	cmn	r6, #1
    d7f4:	01a03006 	moveq	r3, r6
    d7f8:	e59f40a4 	ldr	r4, [pc, #164]	; d8a4 <wgfx_set_framebuffer+0xd0>
    d7fc:	e1a01007 	mov	r1, r7
    d800:	e3a0c002 	mov	ip, #2
    d804:	e3e02000 	mvn	r2, #0
    d808:	e584800c 	str	r8, [r4, #12]
    d80c:	e5845010 	str	r5, [r4, #16]
    d810:	e3a08001 	mov	r8, #1
    d814:	e3a05000 	mov	r5, #0
    d818:	11a03086 	lslne	r3, r6, #1
    d81c:	e5843240 	str	r3, [r4, #576]	; 0x240
    d820:	e3770001 	cmn	r7, #1
    d824:	e59f307c 	ldr	r3, [pc, #124]	; d8a8 <wgfx_set_framebuffer+0xd4>
    d828:	11a01087 	lslne	r1, r7, #1
    d82c:	e1c460f4 	strd	r6, [r4, #4]
    d830:	e5841248 	str	r1, [r4, #584]	; 0x248
    d834:	e1a00006 	mov	r0, r6
    d838:	e5931000 	ldr	r1, [r3]
    d83c:	e5936004 	ldr	r6, [r3, #4]
    d840:	e5843264 	str	r3, [r4, #612]	; 0x264
    d844:	e584124c 	str	r1, [r4, #588]	; 0x24c
    d848:	e584c254 	str	ip, [r4, #596]	; 0x254
    d84c:	e584c258 	str	ip, [r4, #600]	; 0x258
    d850:	e584225c 	str	r2, [r4, #604]	; 0x25c
    d854:	e5842260 	str	r2, [r4, #608]	; 0x260
    d858:	e5849014 	str	r9, [r4, #20]
    d85c:	e5846250 	str	r6, [r4, #592]	; 0x250
    d860:	e584523c 	str	r5, [r4, #572]	; 0x23c
    d864:	e5845244 	str	r5, [r4, #580]	; 0x244
    d868:	e5c48318 	strb	r8, [r4, #792]	; 0x318
    d86c:	eb0080bc 	bl	2db64 <__udivsi3>
    d870:	e1a01006 	mov	r1, r6
    d874:	e5840018 	str	r0, [r4, #24]
    d878:	e1a00007 	mov	r0, r7
    d87c:	eb0080b8 	bl	2db64 <__udivsi3>
    d880:	e3a03c0f 	mov	r3, #3840	; 0xf00
    d884:	e584001c 	str	r0, [r4, #28]
    d888:	e5845024 	str	r5, [r4, #36]	; 0x24
    d88c:	e5845020 	str	r5, [r4, #32]
    d890:	e5c48030 	strb	r8, [r4, #48]	; 0x30
    d894:	e5845034 	str	r5, [r4, #52]	; 0x34
    d898:	e1c433b8 	strh	r3, [r4, #56]	; 0x38
    d89c:	e8bd47f0 	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
    d8a0:	eafffd7f 	b	cea4 <wgfx_term_render_cursor>
    d8a4:	00042ad0 	.word	0x00042ad0
    d8a8:	00034a28 	.word	0x00034a28

0000d8ac <wgfx_init>:
    d8ac:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
    d8b0:	e1a05000 	mov	r5, r0
    d8b4:	e24dd02c 	sub	sp, sp, #44	; 0x2c
    d8b8:	e59f02a8 	ldr	r0, [pc, #680]	; db68 <wgfx_init+0x2bc>
    d8bc:	e1a06001 	mov	r6, r1
    d8c0:	eb0025c3 	bl	16fd4 <microsDelay>
    d8c4:	ebfff11a 	bl	9d34 <fb_release>
    d8c8:	e3a0e008 	mov	lr, #8
    d8cc:	e3a0c000 	mov	ip, #0
    d8d0:	e58de000 	str	lr, [sp]
    d8d4:	e28de01c 	add	lr, sp, #28
    d8d8:	e58de00c 	str	lr, [sp, #12]
    d8dc:	e28de018 	add	lr, sp, #24
    d8e0:	e58de008 	str	lr, [sp, #8]
    d8e4:	e28de014 	add	lr, sp, #20
    d8e8:	e1a03006 	mov	r3, r6
    d8ec:	e58de004 	str	lr, [sp, #4]
    d8f0:	e1a02005 	mov	r2, r5
    d8f4:	e1a01006 	mov	r1, r6
    d8f8:	e1a00005 	mov	r0, r5
    d8fc:	e58dc014 	str	ip, [sp, #20]
    d900:	e58d5020 	str	r5, [sp, #32]
    d904:	e58d6024 	str	r6, [sp, #36]	; 0x24
    d908:	ebfff070 	bl	9ad0 <fb_init>
    d90c:	ebfff15e 	bl	9e8c <fb_set_xterm_palette>
    d910:	e28d1024 	add	r1, sp, #36	; 0x24
    d914:	e28d0020 	add	r0, sp, #32
    d918:	ebfff201 	bl	a124 <fb_get_physical_buffer_size>
    d91c:	e59f0244 	ldr	r0, [pc, #580]	; db68 <wgfx_init+0x2bc>
    d920:	eb0025ab 	bl	16fd4 <microsDelay>
    d924:	e59d801c 	ldr	r8, [sp, #28]
    d928:	e59d7018 	ldr	r7, [sp, #24]
    d92c:	e59d9014 	ldr	r9, [sp, #20]
    d930:	ebffea44 	bl	8248 <dma_init>
    d934:	e3750001 	cmn	r5, #1
    d938:	01a03005 	moveq	r3, r5
    d93c:	e59f4228 	ldr	r4, [pc, #552]	; db6c <wgfx_init+0x2c0>
    d940:	e1a01006 	mov	r1, r6
    d944:	e3a0c002 	mov	ip, #2
    d948:	e3e02000 	mvn	r2, #0
    d94c:	e9840160 	stmib	r4, {r5, r6, r8}
    d950:	e5847010 	str	r7, [r4, #16]
    d954:	e3a08001 	mov	r8, #1
    d958:	e3a07000 	mov	r7, #0
    d95c:	11a03085 	lslne	r3, r5, #1
    d960:	e5843240 	str	r3, [r4, #576]	; 0x240
    d964:	e3760001 	cmn	r6, #1
    d968:	e59f3200 	ldr	r3, [pc, #512]	; db70 <wgfx_init+0x2c4>
    d96c:	11a01086 	lslne	r1, r6, #1
    d970:	e1a00005 	mov	r0, r5
    d974:	e5841248 	str	r1, [r4, #584]	; 0x248
    d978:	e5935004 	ldr	r5, [r3, #4]
    d97c:	e5931000 	ldr	r1, [r3]
    d980:	e5843264 	str	r3, [r4, #612]	; 0x264
    d984:	e584c254 	str	ip, [r4, #596]	; 0x254
    d988:	e584c258 	str	ip, [r4, #600]	; 0x258
    d98c:	e584225c 	str	r2, [r4, #604]	; 0x25c
    d990:	e5842260 	str	r2, [r4, #608]	; 0x260
    d994:	e584124c 	str	r1, [r4, #588]	; 0x24c
    d998:	e5849014 	str	r9, [r4, #20]
    d99c:	e5845250 	str	r5, [r4, #592]	; 0x250
    d9a0:	e584723c 	str	r7, [r4, #572]	; 0x23c
    d9a4:	e5847244 	str	r7, [r4, #580]	; 0x244
    d9a8:	e5c48318 	strb	r8, [r4, #792]	; 0x318
    d9ac:	eb00806c 	bl	2db64 <__udivsi3>
    d9b0:	e1a01005 	mov	r1, r5
    d9b4:	e5840018 	str	r0, [r4, #24]
    d9b8:	e1a00006 	mov	r0, r6
    d9bc:	eb008068 	bl	2db64 <__udivsi3>
    d9c0:	e3a03c0f 	mov	r3, #3840	; 0xf00
    d9c4:	e584001c 	str	r0, [r4, #28]
    d9c8:	e1c433b8 	strh	r3, [r4, #56]	; 0x38
    d9cc:	e5847024 	str	r7, [r4, #36]	; 0x24
    d9d0:	e5847020 	str	r7, [r4, #32]
    d9d4:	e5c48030 	strb	r8, [r4, #48]	; 0x30
    d9d8:	e5847034 	str	r7, [r4, #52]	; 0x34
    d9dc:	ebfffd30 	bl	cea4 <wgfx_term_render_cursor>
    d9e0:	e5d43000 	ldrb	r3, [r4]
    d9e4:	e1530007 	cmp	r3, r7
    d9e8:	0a000006 	beq	da08 <wgfx_init+0x15c>
    d9ec:	e59f5180 	ldr	r5, [pc, #384]	; db74 <wgfx_init+0x2c8>
    d9f0:	ea000001 	b	d9fc <wgfx_init+0x150>
    d9f4:	e2555001 	subs	r5, r5, #1
    d9f8:	0a000002 	beq	da08 <wgfx_init+0x15c>
    d9fc:	ebffea42 	bl	830c <dma_running>
    da00:	e3500000 	cmp	r0, #0
    da04:	1afffffa 	bne	d9f4 <wgfx_init+0x148>
    da08:	e3a02000 	mov	r2, #0
    da0c:	e5943014 	ldr	r3, [r4, #20]
    da10:	e594c010 	ldr	ip, [r4, #16]
    da14:	e5c42000 	strb	r2, [r4]
    da18:	e083000c 	add	r0, r3, ip
    da1c:	e1530000 	cmp	r3, r0
    da20:	2a000045 	bcs	db3c <wgfx_init+0x290>
    da24:	e59f214c 	ldr	r2, [pc, #332]	; db78 <wgfx_init+0x2cc>
    da28:	e283e001 	add	lr, r3, #1
    da2c:	e2821001 	add	r1, r2, #1
    da30:	e1510003 	cmp	r1, r3
    da34:	81500002 	cmphi	r0, r2
    da38:	93a02001 	movls	r2, #1
    da3c:	83a02000 	movhi	r2, #0
    da40:	e35c000b 	cmp	ip, #11
    da44:	93a02000 	movls	r2, #0
    da48:	82022001 	andhi	r2, r2, #1
    da4c:	e3520000 	cmp	r2, #0
    da50:	e1a0200e 	mov	r2, lr
    da54:	0a00003e 	beq	db54 <wgfx_init+0x2a8>
    da58:	e2635000 	rsb	r5, r3, #0
    da5c:	e2155003 	ands	r5, r5, #3
    da60:	01a0e003 	moveq	lr, r3
    da64:	0a00000a 	beq	da94 <wgfx_init+0x1e8>
    da68:	e5d42038 	ldrb	r2, [r4, #56]	; 0x38
    da6c:	e3550001 	cmp	r5, #1
    da70:	e5c32000 	strb	r2, [r3]
    da74:	0a000006 	beq	da94 <wgfx_init+0x1e8>
    da78:	e5d42038 	ldrb	r2, [r4, #56]	; 0x38
    da7c:	e3550003 	cmp	r5, #3
    da80:	e5c32001 	strb	r2, [r3, #1]
    da84:	05d42038 	ldrbeq	r2, [r4, #56]	; 0x38
    da88:	e283e002 	add	lr, r3, #2
    da8c:	05c32002 	strbeq	r2, [r3, #2]
    da90:	0283e003 	addeq	lr, r3, #3
    da94:	e3a02000 	mov	r2, #0
    da98:	e5d46038 	ldrb	r6, [r4, #56]	; 0x38
    da9c:	e04cc005 	sub	ip, ip, r5
    daa0:	e1861406 	orr	r1, r6, r6, lsl #8
    daa4:	e1811806 	orr	r1, r1, r6, lsl #16
    daa8:	e0833005 	add	r3, r3, r5
    daac:	e1811c06 	orr	r1, r1, r6, lsl #24
    dab0:	e1a0512c 	lsr	r5, ip, #2
    dab4:	e2822001 	add	r2, r2, #1
    dab8:	e1520005 	cmp	r2, r5
    dabc:	e4831004 	str	r1, [r3], #4
    dac0:	3afffffb 	bcc	dab4 <wgfx_init+0x208>
    dac4:	e3cc2003 	bic	r2, ip, #3
    dac8:	e15c0002 	cmp	ip, r2
    dacc:	e08e3002 	add	r3, lr, r2
    dad0:	0a000019 	beq	db3c <wgfx_init+0x290>
    dad4:	e5d41038 	ldrb	r1, [r4, #56]	; 0x38
    dad8:	e283c001 	add	ip, r3, #1
    dadc:	e150000c 	cmp	r0, ip
    dae0:	e7ce1002 	strb	r1, [lr, r2]
    dae4:	9a000014 	bls	db3c <wgfx_init+0x290>
    dae8:	e5d42038 	ldrb	r2, [r4, #56]	; 0x38
    daec:	e2831002 	add	r1, r3, #2
    daf0:	e1500001 	cmp	r0, r1
    daf4:	e5c32001 	strb	r2, [r3, #1]
    daf8:	9a00000f 	bls	db3c <wgfx_init+0x290>
    dafc:	e5d42038 	ldrb	r2, [r4, #56]	; 0x38
    db00:	e2831003 	add	r1, r3, #3
    db04:	e1500001 	cmp	r0, r1
    db08:	e5c32002 	strb	r2, [r3, #2]
    db0c:	9a00000a 	bls	db3c <wgfx_init+0x290>
    db10:	e5d42038 	ldrb	r2, [r4, #56]	; 0x38
    db14:	e2831004 	add	r1, r3, #4
    db18:	e1500001 	cmp	r0, r1
    db1c:	e5c32003 	strb	r2, [r3, #3]
    db20:	9a000005 	bls	db3c <wgfx_init+0x290>
    db24:	e5d42038 	ldrb	r2, [r4, #56]	; 0x38
    db28:	e2831005 	add	r1, r3, #5
    db2c:	e1500001 	cmp	r0, r1
    db30:	e5c32004 	strb	r2, [r3, #4]
    db34:	85d42038 	ldrbhi	r2, [r4, #56]	; 0x38
    db38:	85c32005 	strbhi	r2, [r3, #5]
    db3c:	e3a03000 	mov	r3, #0
    db40:	e5843318 	str	r3, [r4, #792]	; 0x318
    db44:	e5c4331c 	strb	r3, [r4, #796]	; 0x31c
    db48:	e28dd02c 	add	sp, sp, #44	; 0x2c
    db4c:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
    db50:	e2822001 	add	r2, r2, #1
    db54:	e5d43038 	ldrb	r3, [r4, #56]	; 0x38
    db58:	e1500002 	cmp	r0, r2
    db5c:	e5423001 	strb	r3, [r2, #-1]
    db60:	1afffffa 	bne	db50 <wgfx_init+0x2a4>
    db64:	eafffff4 	b	db3c <wgfx_init+0x290>
    db68:	00002710 	.word	0x00002710
    db6c:	00042ad0 	.word	0x00042ad0
    db70:	00034a28 	.word	0x00034a28
    db74:	000186a0 	.word	0x000186a0
    db78:	00042b08 	.word	0x00042b08

0000db7c <wgfx_set_bg>:
    db7c:	e59f3004 	ldr	r3, [pc, #4]	; db88 <wgfx_set_bg+0xc>
    db80:	e5c30038 	strb	r0, [r3, #56]	; 0x38
    db84:	e12fff1e 	bx	lr
    db88:	00042ad0 	.word	0x00042ad0

0000db8c <wgfx_set_fg>:
    db8c:	e59f3004 	ldr	r3, [pc, #4]	; db98 <wgfx_set_fg+0xc>
    db90:	e5c30039 	strb	r0, [r3, #57]	; 0x39
    db94:	e12fff1e 	bx	lr
    db98:	00042ad0 	.word	0x00042ad0

0000db9c <wgfx_wait_for_prev_operation>:
    db9c:	e92d4070 	push	{r4, r5, r6, lr}
    dba0:	e59f5030 	ldr	r5, [pc, #48]	; dbd8 <wgfx_wait_for_prev_operation+0x3c>
    dba4:	e5d53000 	ldrb	r3, [r5]
    dba8:	e3530000 	cmp	r3, #0
    dbac:	0a000006 	beq	dbcc <wgfx_wait_for_prev_operation+0x30>
    dbb0:	e59f4024 	ldr	r4, [pc, #36]	; dbdc <wgfx_wait_for_prev_operation+0x40>
    dbb4:	ea000001 	b	dbc0 <wgfx_wait_for_prev_operation+0x24>
    dbb8:	e2544001 	subs	r4, r4, #1
    dbbc:	0a000002 	beq	dbcc <wgfx_wait_for_prev_operation+0x30>
    dbc0:	ebffe9d1 	bl	830c <dma_running>
    dbc4:	e3500000 	cmp	r0, #0
    dbc8:	1afffffa 	bne	dbb8 <wgfx_wait_for_prev_operation+0x1c>
    dbcc:	e3a03000 	mov	r3, #0
    dbd0:	e5c53000 	strb	r3, [r5]
    dbd4:	e8bd8070 	pop	{r4, r5, r6, pc}
    dbd8:	00042ad0 	.word	0x00042ad0
    dbdc:	000186a0 	.word	0x000186a0

0000dbe0 <wgfx_scroll>:
    dbe0:	e16f3f11 	clz	r3, r1
    dbe4:	e1a032a3 	lsr	r3, r3, #5
    dbe8:	e3500004 	cmp	r0, #4
    dbec:	83833001 	orrhi	r3, r3, #1
    dbf0:	e3530000 	cmp	r3, #0
    dbf4:	112fff1e 	bxne	lr
    dbf8:	eafff6ad 	b	b6b4 <wgfx_scroll.part.3>

0000dbfc <wgfxHLine>:
    dbfc:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    dc00:	e59f5068 	ldr	r5, [pc, #104]	; dc70 <wgfxHLine+0x74>
    dc04:	e1a06000 	mov	r6, r0
    dc08:	e5d50000 	ldrb	r0, [r5]
    dc0c:	e1a09001 	mov	r9, r1
    dc10:	e3500000 	cmp	r0, #0
    dc14:	e1a07002 	mov	r7, r2
    dc18:	e1a08003 	mov	r8, r3
    dc1c:	0a000006 	beq	dc3c <wgfxHLine+0x40>
    dc20:	e59f404c 	ldr	r4, [pc, #76]	; dc74 <wgfxHLine+0x78>
    dc24:	ea000001 	b	dc30 <wgfxHLine+0x34>
    dc28:	e2544001 	subs	r4, r4, #1
    dc2c:	0a000002 	beq	dc3c <wgfxHLine+0x40>
    dc30:	ebffe9b5 	bl	830c <dma_running>
    dc34:	e3500000 	cmp	r0, #0
    dc38:	1afffffa 	bne	dc28 <wgfxHLine+0x2c>
    dc3c:	e3a03000 	mov	r3, #0
    dc40:	e595000c 	ldr	r0, [r5, #12]
    dc44:	e1570003 	cmp	r7, r3
    dc48:	e5c53000 	strb	r3, [r5]
    dc4c:	e0000990 	mul	r0, r0, r9
    dc50:	e5953014 	ldr	r3, [r5, #20]
    dc54:	d8bd87f0 	pople	{r4, r5, r6, r7, r8, r9, sl, pc}
    dc58:	e0860000 	add	r0, r6, r0
    dc5c:	e1a02007 	mov	r2, r7
    dc60:	e6ef1078 	uxtb	r1, r8
    dc64:	e0830000 	add	r0, r3, r0
    dc68:	e8bd47f0 	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
    dc6c:	ea00793a 	b	2c15c <memset>
    dc70:	00042ad0 	.word	0x00042ad0
    dc74:	000186a0 	.word	0x000186a0

0000dc78 <wgfxVLine>:
    dc78:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    dc7c:	e59f5074 	ldr	r5, [pc, #116]	; dcf8 <wgfxVLine+0x80>
    dc80:	e1a09000 	mov	r9, r0
    dc84:	e5d50000 	ldrb	r0, [r5]
    dc88:	e1a08001 	mov	r8, r1
    dc8c:	e3500000 	cmp	r0, #0
    dc90:	e1a06002 	mov	r6, r2
    dc94:	e1a07003 	mov	r7, r3
    dc98:	0a000006 	beq	dcb8 <wgfxVLine+0x40>
    dc9c:	e59f4058 	ldr	r4, [pc, #88]	; dcfc <wgfxVLine+0x84>
    dca0:	ea000001 	b	dcac <wgfxVLine+0x34>
    dca4:	e2544001 	subs	r4, r4, #1
    dca8:	0a000002 	beq	dcb8 <wgfxVLine+0x40>
    dcac:	ebffe996 	bl	830c <dma_running>
    dcb0:	e3500000 	cmp	r0, #0
    dcb4:	1afffffa 	bne	dca4 <wgfxVLine+0x2c>
    dcb8:	e3a02000 	mov	r2, #0
    dcbc:	e595100c 	ldr	r1, [r5, #12]
    dcc0:	e1560002 	cmp	r6, r2
    dcc4:	e0289891 	mla	r8, r1, r8, r9
    dcc8:	e5951014 	ldr	r1, [r5, #20]
    dccc:	e5c52000 	strb	r2, [r5]
    dcd0:	e0811008 	add	r1, r1, r8
    dcd4:	d8bd87f0 	pople	{r4, r5, r6, r7, r8, r9, sl, pc}
    dcd8:	e6ef3077 	uxtb	r3, r7
    dcdc:	e5c13000 	strb	r3, [r1]
    dce0:	e2822001 	add	r2, r2, #1
    dce4:	e595000c 	ldr	r0, [r5, #12]
    dce8:	e1560002 	cmp	r6, r2
    dcec:	e0811000 	add	r1, r1, r0
    dcf0:	1afffff9 	bne	dcdc <wgfxVLine+0x64>
    dcf4:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    dcf8:	00042ad0 	.word	0x00042ad0
    dcfc:	000186a0 	.word	0x000186a0

0000dd00 <CommandHandler::static_hdlcPutCh(unsigned char)>:
    dd00:	e59f3038 	ldr	r3, [pc, #56]	; dd40 <CommandHandler::static_hdlcPutCh(unsigned char)+0x40>
    dd04:	e5932000 	ldr	r2, [r3]
    dd08:	e3520000 	cmp	r2, #0
    dd0c:	012fff1e 	bxeq	lr
    dd10:	e5932004 	ldr	r2, [r3, #4]
    dd14:	e3520000 	cmp	r2, #0
    dd18:	012fff1e 	bxeq	lr
    dd1c:	e1a03000 	mov	r3, r0
    dd20:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    dd24:	e24dd00c 	sub	sp, sp, #12
    dd28:	e28d0008 	add	r0, sp, #8
    dd2c:	e5603004 	strb	r3, [r0, #-4]!
    dd30:	e3a01001 	mov	r1, #1
    dd34:	e12fff32 	blx	r2
    dd38:	e28dd00c 	add	sp, sp, #12
    dd3c:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
    dd40:	00042df0 	.word	0x00042df0

0000dd44 <CommandHandler::CommandHandler()>:
    dd44:	e92d4030 	push	{r4, r5, lr}
    dd48:	e3a04000 	mov	r4, #0
    dd4c:	e1a05000 	mov	r5, r0
    dd50:	e24dd00c 	sub	sp, sp, #12
    dd54:	e58d4000 	str	r4, [sp]
    dd58:	e3a03001 	mov	r3, #1
    dd5c:	e59f204c 	ldr	r2, [pc, #76]	; ddb0 <CommandHandler::CommandHandler()+0x6c>
    dd60:	e59f104c 	ldr	r1, [pc, #76]	; ddb4 <CommandHandler::CommandHandler()+0x70>
    dd64:	eb000392 	bl	ebb4 <MiniHDLC::MiniHDLC(void (*)(unsigned char), void (*)(unsigned char const*, int), bool, bool)>
    dd68:	e1a00005 	mov	r0, r5
    dd6c:	e59f2044 	ldr	r2, [pc, #68]	; ddb8 <CommandHandler::CommandHandler()+0x74>
    dd70:	e2853a01 	add	r3, r5, #4096	; 0x1000
    dd74:	e5825000 	str	r5, [r2]
    dd78:	e5c343a4 	strb	r4, [r3, #932]	; 0x3a4
    dd7c:	e5c34409 	strb	r4, [r3, #1033]	; 0x409
    dd80:	e5c34432 	strb	r4, [r3, #1074]	; 0x432
    dd84:	e58344fc 	str	r4, [r3, #1276]	; 0x4fc
    dd88:	e5834500 	str	r4, [r3, #1280]	; 0x500
    dd8c:	e5834504 	str	r4, [r3, #1284]	; 0x504
    dd90:	e5834508 	str	r4, [r3, #1288]	; 0x508
    dd94:	e5c3450c 	strb	r4, [r3, #1292]	; 0x50c
    dd98:	e5c3452a 	strb	r4, [r3, #1322]	; 0x52a
    dd9c:	e5c34548 	strb	r4, [r3, #1352]	; 0x548
    dda0:	e5c345ac 	strb	r4, [r3, #1452]	; 0x5ac
    dda4:	e5c34610 	strb	r4, [r3, #1552]	; 0x610
    dda8:	e28dd00c 	add	sp, sp, #12
    ddac:	e8bd8030 	pop	{r4, r5, pc}
    ddb0:	0000e6f8 	.word	0x0000e6f8
    ddb4:	0000dd00 	.word	0x0000dd00
    ddb8:	00042df0 	.word	0x00042df0

0000ddbc <CommandHandler::~CommandHandler()>:
    ddbc:	e12fff1e 	bx	lr

0000ddc0 <CommandHandler::handleSerialReceivedChars(unsigned char const*, int)>:
    ddc0:	e59f3018 	ldr	r3, [pc, #24]	; dde0 <CommandHandler::handleSerialReceivedChars(unsigned char const*, int)+0x20>
    ddc4:	e5933000 	ldr	r3, [r3]
    ddc8:	e3530000 	cmp	r3, #0
    ddcc:	012fff1e 	bxeq	lr
    ddd0:	e1a02001 	mov	r2, r1
    ddd4:	e1a01000 	mov	r1, r0
    ddd8:	e1a00003 	mov	r0, r3
    dddc:	ea000450 	b	ef24 <MiniHDLC::handleBuffer(unsigned char const*, int)>
    dde0:	00042df0 	.word	0x00042df0

0000dde4 <CommandHandler::hdlcPutCh(unsigned char)>:
    dde4:	e59f3028 	ldr	r3, [pc, #40]	; de14 <CommandHandler::hdlcPutCh(unsigned char)+0x30>
    dde8:	e5933004 	ldr	r3, [r3, #4]
    ddec:	e3530000 	cmp	r3, #0
    ddf0:	012fff1e 	bxeq	lr
    ddf4:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    ddf8:	e24dd00c 	sub	sp, sp, #12
    ddfc:	e28d0008 	add	r0, sp, #8
    de00:	e5601004 	strb	r1, [r0, #-4]!
    de04:	e3a01001 	mov	r1, #1
    de08:	e12fff33 	blx	r3
    de0c:	e28dd00c 	add	sp, sp, #12
    de10:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
    de14:	00042df0 	.word	0x00042df0

0000de18 <CommandHandler::handleFileStart(char const*)>:
    de18:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
    de1c:	e2804d4e 	add	r4, r0, #4992	; 0x1380
    de20:	e2844024 	add	r4, r4, #36	; 0x24
    de24:	e24dd01c 	sub	sp, sp, #28
    de28:	e1a05000 	mov	r5, r0
    de2c:	e1a02004 	mov	r2, r4
    de30:	e3a03064 	mov	r3, #100	; 0x64
    de34:	e59f0124 	ldr	r0, [pc, #292]	; df60 <CommandHandler::handleFileStart(char const*)+0x148>
    de38:	e1a06001 	mov	r6, r1
    de3c:	ebfff535 	bl	b318 <jsonGetValueForKey>
    de40:	e3500000 	cmp	r0, #0
    de44:	1a000001 	bne	de50 <CommandHandler::handleFileStart(char const*)+0x38>
    de48:	e28dd01c 	add	sp, sp, #28
    de4c:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
    de50:	e2857a01 	add	r7, r5, #4096	; 0x1000
    de54:	e59724fc 	ldr	r2, [r7, #1276]	; 0x4fc
    de58:	e1a03004 	mov	r3, r4
    de5c:	e58d2000 	str	r2, [sp]
    de60:	e3a01005 	mov	r1, #5
    de64:	e59f20f8 	ldr	r2, [pc, #248]	; df64 <CommandHandler::handleFileStart(char const*)+0x14c>
    de68:	e59f00f8 	ldr	r0, [pc, #248]	; df68 <CommandHandler::handleFileStart(char const*)+0x150>
    de6c:	e2858b05 	add	r8, r5, #5120	; 0x1400
    de70:	ebffee4f 	bl	97b4 <LogWrite>
    de74:	e2882009 	add	r2, r8, #9
    de78:	e3a03028 	mov	r3, #40	; 0x28
    de7c:	e1a01006 	mov	r1, r6
    de80:	e59f00e4 	ldr	r0, [pc, #228]	; df6c <CommandHandler::handleFileStart(char const*)+0x154>
    de84:	ebfff523 	bl	b318 <jsonGetValueForKey>
    de88:	e3500000 	cmp	r0, #0
    de8c:	0affffed 	beq	de48 <CommandHandler::handleFileStart(char const*)+0x30>
    de90:	e1a03004 	mov	r3, r4
    de94:	e59f20d4 	ldr	r2, [pc, #212]	; df70 <CommandHandler::handleFileStart(char const*)+0x158>
    de98:	e3a01005 	mov	r1, #5
    de9c:	e59f00c4 	ldr	r0, [pc, #196]	; df68 <CommandHandler::handleFileStart(char const*)+0x150>
    dea0:	ebffee43 	bl	97b4 <LogWrite>
    dea4:	e28d200c 	add	r2, sp, #12
    dea8:	e3a0300a 	mov	r3, #10
    deac:	e1a01006 	mov	r1, r6
    deb0:	e59f00bc 	ldr	r0, [pc, #188]	; df74 <CommandHandler::handleFileStart(char const*)+0x15c>
    deb4:	ebfff517 	bl	b318 <jsonGetValueForKey>
    deb8:	e3500000 	cmp	r0, #0
    debc:	0affffe1 	beq	de48 <CommandHandler::handleFileStart(char const*)+0x30>
    dec0:	e28d000c 	add	r0, sp, #12
    dec4:	e3a0200a 	mov	r2, #10
    dec8:	e3a01000 	mov	r1, #0
    decc:	eb007d73 	bl	2d4a0 <strtol>
    ded0:	e2509000 	subs	r9, r0, #0
    ded4:	daffffdb 	ble	de48 <CommandHandler::handleFileStart(char const*)+0x30>
    ded8:	e1a01006 	mov	r1, r6
    dedc:	e2880032 	add	r0, r8, #50	; 0x32
    dee0:	e3a020c8 	mov	r2, #200	; 0xc8
    dee4:	eb007a17 	bl	2c748 <strlcpy>
    dee8:	e59734fc 	ldr	r3, [r7, #1276]	; 0x4fc
    deec:	e3530000 	cmp	r3, #0
    def0:	0a000002 	beq	df00 <CommandHandler::handleFileStart(char const*)+0xe8>
    def4:	e2850d53 	add	r0, r5, #5312	; 0x14c0
    def8:	e280003c 	add	r0, r0, #60	; 0x3c
    defc:	ebfff40c 	bl	af34 <nmalloc_free>
    df00:	e1a00009 	mov	r0, r9
    df04:	ebfff3cd 	bl	ae40 <nmalloc_malloc>
    df08:	e3a03000 	mov	r3, #0
    df0c:	e1500003 	cmp	r0, r3
    df10:	e58704fc 	str	r0, [r7, #1276]	; 0x4fc
    df14:	e5873504 	str	r3, [r7, #1284]	; 0x504
    df18:	e5873508 	str	r3, [r7, #1288]	; 0x508
    df1c:	0a000007 	beq	df40 <CommandHandler::handleFileStart(char const*)+0x128>
    df20:	e5879500 	str	r9, [r7, #1280]	; 0x500
    df24:	e1a03004 	mov	r3, r4
    df28:	e88d0201 	stm	sp, {r0, r9}
    df2c:	e59f2044 	ldr	r2, [pc, #68]	; df78 <CommandHandler::handleFileStart(char const*)+0x160>
    df30:	e3a01005 	mov	r1, #5
    df34:	e59f002c 	ldr	r0, [pc, #44]	; df68 <CommandHandler::handleFileStart(char const*)+0x150>
    df38:	ebffee1d 	bl	97b4 <LogWrite>
    df3c:	eaffffc1 	b	de48 <CommandHandler::handleFileStart(char const*)+0x30>
    df40:	e5870500 	str	r0, [r7, #1280]	; 0x500
    df44:	e1a03004 	mov	r3, r4
    df48:	e58d0000 	str	r0, [sp]
    df4c:	e59f2028 	ldr	r2, [pc, #40]	; df7c <CommandHandler::handleFileStart(char const*)+0x164>
    df50:	e3a01002 	mov	r1, #2
    df54:	e59f000c 	ldr	r0, [pc, #12]	; df68 <CommandHandler::handleFileStart(char const*)+0x150>
    df58:	ebffee15 	bl	97b4 <LogWrite>
    df5c:	eaffffb9 	b	de48 <CommandHandler::handleFileStart(char const*)+0x30>
    df60:	0002e604 	.word	0x0002e604
    df64:	0002e610 	.word	0x0002e610
    df68:	0002e5f4 	.word	0x0002e5f4
    df6c:	0002e62c 	.word	0x0002e62c
    df70:	0002e638 	.word	0x0002e638
    df74:	0002e64c 	.word	0x0002e64c
    df78:	0002e654 	.word	0x0002e654
    df7c:	0002e67c 	.word	0x0002e67c

0000df80 <CommandHandler::handleFileBlock(char const*, unsigned char const*, int)>:
    df80:	e92d4070 	push	{r4, r5, r6, lr}
    df84:	e2804a01 	add	r4, r0, #4096	; 0x1000
    df88:	e59404fc 	ldr	r0, [r4, #1276]	; 0x4fc
    df8c:	e24dd010 	sub	sp, sp, #16
    df90:	e3500000 	cmp	r0, #0
    df94:	0a000007 	beq	dfb8 <CommandHandler::handleFileBlock(char const*, unsigned char const*, int)+0x38>
    df98:	e1a06003 	mov	r6, r3
    df9c:	e1a05002 	mov	r5, r2
    dfa0:	e3a0300a 	mov	r3, #10
    dfa4:	e28d2004 	add	r2, sp, #4
    dfa8:	e59f0068 	ldr	r0, [pc, #104]	; e018 <CommandHandler::handleFileBlock(char const*, unsigned char const*, int)+0x98>
    dfac:	ebfff4d9 	bl	b318 <jsonGetValueForKey>
    dfb0:	e3500000 	cmp	r0, #0
    dfb4:	1a000001 	bne	dfc0 <CommandHandler::handleFileBlock(char const*, unsigned char const*, int)+0x40>
    dfb8:	e28dd010 	add	sp, sp, #16
    dfbc:	e8bd8070 	pop	{r4, r5, r6, pc}
    dfc0:	e28d0004 	add	r0, sp, #4
    dfc4:	e3a0200a 	mov	r2, #10
    dfc8:	e3a01000 	mov	r1, #0
    dfcc:	eb007d33 	bl	2d4a0 <strtol>
    dfd0:	e3500000 	cmp	r0, #0
    dfd4:	bafffff7 	blt	dfb8 <CommandHandler::handleFileBlock(char const*, unsigned char const*, int)+0x38>
    dfd8:	e5943500 	ldr	r3, [r4, #1280]	; 0x500
    dfdc:	e0802006 	add	r2, r0, r6
    dfe0:	e1520003 	cmp	r2, r3
    dfe4:	cafffff3 	bgt	dfb8 <CommandHandler::handleFileBlock(char const*, unsigned char const*, int)+0x38>
    dfe8:	e59434fc 	ldr	r3, [r4, #1276]	; 0x4fc
    dfec:	e1a02006 	mov	r2, r6
    dff0:	e0830000 	add	r0, r3, r0
    dff4:	e1a01005 	mov	r1, r5
    dff8:	eb007813 	bl	2c04c <memcpy>
    dffc:	e5943504 	ldr	r3, [r4, #1284]	; 0x504
    e000:	e5942508 	ldr	r2, [r4, #1288]	; 0x508
    e004:	e0833006 	add	r3, r3, r6
    e008:	e2822001 	add	r2, r2, #1
    e00c:	e5843504 	str	r3, [r4, #1284]	; 0x504
    e010:	e5842508 	str	r2, [r4, #1288]	; 0x508
    e014:	eaffffe7 	b	dfb8 <CommandHandler::handleFileBlock(char const*, unsigned char const*, int)+0x38>
    e018:	0002e6b8 	.word	0x0002e6b8

0000e01c <CommandHandler::handleStatusResponse(char const*)>:
    e01c:	e92d4070 	push	{r4, r5, r6, lr}
    e020:	e24ddffa 	sub	sp, sp, #1000	; 0x3e8
    e024:	e1a04000 	mov	r4, r0
    e028:	e1a0200d 	mov	r2, sp
    e02c:	e3a03ffa 	mov	r3, #1000	; 0x3e8
    e030:	e59f00a8 	ldr	r0, [pc, #168]	; e0e0 <CommandHandler::handleStatusResponse(char const*)+0xc4>
    e034:	ebfff4b7 	bl	b318 <jsonGetValueForKey>
    e038:	e3500000 	cmp	r0, #0
    e03c:	1a000001 	bne	e048 <CommandHandler::handleStatusResponse(char const*)+0x2c>
    e040:	e28ddffa 	add	sp, sp, #1000	; 0x3e8
    e044:	e8bd8070 	pop	{r4, r5, r6, pc}
    e048:	e2845c15 	add	r5, r4, #5376	; 0x1500
    e04c:	e285600c 	add	r6, r5, #12
    e050:	e1a02006 	mov	r2, r6
    e054:	e3a0301e 	mov	r3, #30
    e058:	e1a0100d 	mov	r1, sp
    e05c:	e59f0080 	ldr	r0, [pc, #128]	; e0e4 <CommandHandler::handleStatusResponse(char const*)+0xc8>
    e060:	ebfff4ac 	bl	b318 <jsonGetValueForKey>
    e064:	e3500000 	cmp	r0, #0
    e068:	0afffff4 	beq	e040 <CommandHandler::handleStatusResponse(char const*)+0x24>
    e06c:	e59f1074 	ldr	r1, [pc, #116]	; e0e8 <CommandHandler::handleStatusResponse(char const*)+0xcc>
    e070:	e1a00006 	mov	r0, r6
    e074:	eb0078fa 	bl	2c464 <strcmp>
    e078:	e2900000 	adds	r0, r0, #0
    e07c:	13a00001 	movne	r0, #1
    e080:	e2843a01 	add	r3, r4, #4096	; 0x1000
    e084:	e5c30610 	strb	r0, [r3, #1552]	; 0x610
    e088:	e285202a 	add	r2, r5, #42	; 0x2a
    e08c:	e3a0301e 	mov	r3, #30
    e090:	e1a0100d 	mov	r1, sp
    e094:	e59f0050 	ldr	r0, [pc, #80]	; e0ec <CommandHandler::handleStatusResponse(char const*)+0xd0>
    e098:	ebfff49e 	bl	b318 <jsonGetValueForKey>
    e09c:	e3500000 	cmp	r0, #0
    e0a0:	0affffe6 	beq	e040 <CommandHandler::handleStatusResponse(char const*)+0x24>
    e0a4:	e2842d55 	add	r2, r4, #5440	; 0x1540
    e0a8:	e2822008 	add	r2, r2, #8
    e0ac:	e3a03064 	mov	r3, #100	; 0x64
    e0b0:	e1a0100d 	mov	r1, sp
    e0b4:	e59f0034 	ldr	r0, [pc, #52]	; e0f0 <CommandHandler::handleStatusResponse(char const*)+0xd4>
    e0b8:	ebfff496 	bl	b318 <jsonGetValueForKey>
    e0bc:	e3500000 	cmp	r0, #0
    e0c0:	0affffde 	beq	e040 <CommandHandler::handleStatusResponse(char const*)+0x24>
    e0c4:	e2842d56 	add	r2, r4, #5504	; 0x1580
    e0c8:	e282202c 	add	r2, r2, #44	; 0x2c
    e0cc:	e1a0100d 	mov	r1, sp
    e0d0:	e3a03064 	mov	r3, #100	; 0x64
    e0d4:	e59f0018 	ldr	r0, [pc, #24]	; e0f4 <CommandHandler::handleStatusResponse(char const*)+0xd8>
    e0d8:	ebfff48e 	bl	b318 <jsonGetValueForKey>
    e0dc:	eaffffd7 	b	e040 <CommandHandler::handleStatusResponse(char const*)+0x24>
    e0e0:	0002e6c0 	.word	0x0002e6c0
    e0e4:	0002e6cc 	.word	0x0002e6cc
    e0e8:	0002e6d4 	.word	0x0002e6d4
    e0ec:	0002e6dc 	.word	0x0002e6dc
    e0f0:	0002e6e8 	.word	0x0002e6e8
    e0f4:	0002e6f0 	.word	0x0002e6f0

0000e0f8 <CommandHandler::sendKeyCodeToTarget(int)>:
    e0f8:	e92d4070 	push	{r4, r5, r6, lr}
    e0fc:	e59f4064 	ldr	r4, [pc, #100]	; e168 <CommandHandler::sendKeyCodeToTarget(int)+0x70>
    e100:	e1a05000 	mov	r5, r0
    e104:	e1a06001 	mov	r6, r1
    e108:	e3a02064 	mov	r2, #100	; 0x64
    e10c:	e59f1058 	ldr	r1, [pc, #88]	; e16c <CommandHandler::sendKeyCodeToTarget(int)+0x74>
    e110:	e1a00004 	mov	r0, r4
    e114:	eb00798b 	bl	2c748 <strlcpy>
    e118:	e1a00004 	mov	r0, r4
    e11c:	eb00799e 	bl	2c79c <strlen>
    e120:	e3a0300a 	mov	r3, #10
    e124:	e0841000 	add	r1, r4, r0
    e128:	e1a02003 	mov	r2, r3
    e12c:	e1a00006 	mov	r0, r6
    e130:	ebfff4f0 	bl	b4f8 <rditoa>
    e134:	e1a00004 	mov	r0, r4
    e138:	eb007997 	bl	2c79c <strlen>
    e13c:	e3a02064 	mov	r2, #100	; 0x64
    e140:	e59f1028 	ldr	r1, [pc, #40]	; e170 <CommandHandler::sendKeyCodeToTarget(int)+0x78>
    e144:	e0840000 	add	r0, r4, r0
    e148:	eb00797e 	bl	2c748 <strlcpy>
    e14c:	e1a00004 	mov	r0, r4
    e150:	eb007991 	bl	2c79c <strlen>
    e154:	e1a01004 	mov	r1, r4
    e158:	e2802001 	add	r2, r0, #1
    e15c:	e1a00005 	mov	r0, r5
    e160:	e8bd4070 	pop	{r4, r5, r6, lr}
    e164:	ea00046b 	b	f318 <MiniHDLC::sendFrame(unsigned char const*, int)>
    e168:	00042df8 	.word	0x00042df8
    e16c:	0002e6f8 	.word	0x0002e6f8
    e170:	0002e714 	.word	0x0002e714

0000e174 <CommandHandler::sendWithJSON(char const*, char const*)>:
    e174:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
    e178:	e59f4098 	ldr	r4, [pc, #152]	; e218 <CommandHandler::sendWithJSON(char const*, char const*)+0xa4>
    e17c:	e59f5098 	ldr	r5, [pc, #152]	; e21c <CommandHandler::sendWithJSON(char const*, char const*)+0xa8>
    e180:	e1a06000 	mov	r6, r0
    e184:	e1a08001 	mov	r8, r1
    e188:	e1a07002 	mov	r7, r2
    e18c:	e59f108c 	ldr	r1, [pc, #140]	; e220 <CommandHandler::sendWithJSON(char const*, char const*)+0xac>
    e190:	e1a02005 	mov	r2, r5
    e194:	e1a00004 	mov	r0, r4
    e198:	eb00796a 	bl	2c748 <strlcpy>
    e19c:	e1a00004 	mov	r0, r4
    e1a0:	eb00797d 	bl	2c79c <strlen>
    e1a4:	e1a02005 	mov	r2, r5
    e1a8:	e1a01008 	mov	r1, r8
    e1ac:	e0840000 	add	r0, r4, r0
    e1b0:	eb007964 	bl	2c748 <strlcpy>
    e1b4:	e1a00004 	mov	r0, r4
    e1b8:	eb007977 	bl	2c79c <strlen>
    e1bc:	e1a02005 	mov	r2, r5
    e1c0:	e59f105c 	ldr	r1, [pc, #92]	; e224 <CommandHandler::sendWithJSON(char const*, char const*)+0xb0>
    e1c4:	e0840000 	add	r0, r4, r0
    e1c8:	eb00795e 	bl	2c748 <strlcpy>
    e1cc:	e1a00004 	mov	r0, r4
    e1d0:	eb007971 	bl	2c79c <strlen>
    e1d4:	e1a02005 	mov	r2, r5
    e1d8:	e1a01007 	mov	r1, r7
    e1dc:	e0840000 	add	r0, r4, r0
    e1e0:	eb007958 	bl	2c748 <strlcpy>
    e1e4:	e1a00004 	mov	r0, r4
    e1e8:	eb00796b 	bl	2c79c <strlen>
    e1ec:	e1a02005 	mov	r2, r5
    e1f0:	e59f1030 	ldr	r1, [pc, #48]	; e228 <CommandHandler::sendWithJSON(char const*, char const*)+0xb4>
    e1f4:	e0840000 	add	r0, r4, r0
    e1f8:	eb007952 	bl	2c748 <strlcpy>
    e1fc:	e1a00004 	mov	r0, r4
    e200:	eb007965 	bl	2c79c <strlen>
    e204:	e1a01004 	mov	r1, r4
    e208:	e2802001 	add	r2, r0, #1
    e20c:	e1a00006 	mov	r0, r6
    e210:	e8bd41f0 	pop	{r4, r5, r6, r7, r8, lr}
    e214:	ea00043f 	b	f318 <MiniHDLC::sendFrame(unsigned char const*, int)>
    e218:	00042e60 	.word	0x00042e60
    e21c:	000005dc 	.word	0x000005dc
    e220:	0002e718 	.word	0x0002e718
    e224:	0002e728 	.word	0x0002e728
    e228:	0002e714 	.word	0x0002e714

0000e22c <CommandHandler::handleFileEnd(char const*)>:
    e22c:	e92d40f0 	push	{r4, r5, r6, r7, lr}
    e230:	e2805a01 	add	r5, r0, #4096	; 0x1000
    e234:	e59534fc 	ldr	r3, [r5, #1276]	; 0x4fc
    e238:	e24dd07c 	sub	sp, sp, #124	; 0x7c
    e23c:	e3530000 	cmp	r3, #0
    e240:	0a000006 	beq	e260 <CommandHandler::handleFileEnd(char const*)+0x34>
    e244:	e1a04000 	mov	r4, r0
    e248:	e28d2008 	add	r2, sp, #8
    e24c:	e3a0300a 	mov	r3, #10
    e250:	e59f0114 	ldr	r0, [pc, #276]	; e36c <CommandHandler::handleFileEnd(char const*)+0x140>
    e254:	ebfff42f 	bl	b318 <jsonGetValueForKey>
    e258:	e3500000 	cmp	r0, #0
    e25c:	1a000001 	bne	e268 <CommandHandler::handleFileEnd(char const*)+0x3c>
    e260:	e28dd07c 	add	sp, sp, #124	; 0x7c
    e264:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
    e268:	e3a0200a 	mov	r2, #10
    e26c:	e3a01000 	mov	r1, #0
    e270:	e28d0008 	add	r0, sp, #8
    e274:	eb007d2c 	bl	2d72c <strtoul>
    e278:	e1a07000 	mov	r7, r0
    e27c:	e1a03000 	mov	r3, r0
    e280:	e5952508 	ldr	r2, [r5, #1288]	; 0x508
    e284:	e28d0014 	add	r0, sp, #20
    e288:	e59f10e0 	ldr	r1, [pc, #224]	; e370 <CommandHandler::handleFileEnd(char const*)+0x144>
    e28c:	ebffedc8 	bl	99b4 <ee_sprintf>
    e290:	e5953508 	ldr	r3, [r5, #1288]	; 0x508
    e294:	e2846d4e 	add	r6, r4, #4992	; 0x1380
    e298:	e1530007 	cmp	r3, r7
    e29c:	e2866024 	add	r6, r6, #36	; 0x24
    e2a0:	0a00000b 	beq	e2d4 <CommandHandler::handleFileEnd(char const*)+0xa8>
    e2a4:	e88d0088 	stm	sp, {r3, r7}
    e2a8:	e59f20c4 	ldr	r2, [pc, #196]	; e374 <CommandHandler::handleFileEnd(char const*)+0x148>
    e2ac:	e1a03006 	mov	r3, r6
    e2b0:	e3a01002 	mov	r1, #2
    e2b4:	e59f00bc 	ldr	r0, [pc, #188]	; e378 <CommandHandler::handleFileEnd(char const*)+0x14c>
    e2b8:	ebffed3d 	bl	97b4 <LogWrite>
    e2bc:	e28d2014 	add	r2, sp, #20
    e2c0:	e1a00004 	mov	r0, r4
    e2c4:	e59f10b0 	ldr	r1, [pc, #176]	; e37c <CommandHandler::handleFileEnd(char const*)+0x150>
    e2c8:	ebffffa9 	bl	e174 <CommandHandler::sendWithJSON(char const*, char const*)>
    e2cc:	e28dd07c 	add	sp, sp, #124	; 0x7c
    e2d0:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
    e2d4:	e28d2014 	add	r2, sp, #20
    e2d8:	e1a00004 	mov	r0, r4
    e2dc:	e59f109c 	ldr	r1, [pc, #156]	; e380 <CommandHandler::handleFileEnd(char const*)+0x154>
    e2e0:	e2844b05 	add	r4, r4, #5120	; 0x1400
    e2e4:	ebffffa2 	bl	e174 <CommandHandler::sendWithJSON(char const*, char const*)>
    e2e8:	e2840009 	add	r0, r4, #9
    e2ec:	e59f1090 	ldr	r1, [pc, #144]	; e384 <CommandHandler::handleFileEnd(char const*)+0x158>
    e2f0:	eb0077de 	bl	2c270 <strcasecmp>
    e2f4:	e5952504 	ldr	r2, [r5, #1284]	; 0x504
    e2f8:	e3500000 	cmp	r0, #0
    e2fc:	e1a03006 	mov	r3, r6
    e300:	e58d2000 	str	r2, [sp]
    e304:	1a00000b 	bne	e338 <CommandHandler::handleFileEnd(char const*)+0x10c>
    e308:	e59f2078 	ldr	r2, [pc, #120]	; e388 <CommandHandler::handleFileEnd(char const*)+0x15c>
    e30c:	e3a01004 	mov	r1, #4
    e310:	e59f0060 	ldr	r0, [pc, #96]	; e378 <CommandHandler::handleFileEnd(char const*)+0x14c>
    e314:	ebffed26 	bl	97b4 <LogWrite>
    e318:	e59f306c 	ldr	r3, [pc, #108]	; e38c <CommandHandler::handleFileEnd(char const*)+0x160>
    e31c:	e5933650 	ldr	r3, [r3, #1616]	; 0x650
    e320:	e3530000 	cmp	r3, #0
    e324:	0affffcd 	beq	e260 <CommandHandler::handleFileEnd(char const*)+0x34>
    e328:	e5951504 	ldr	r1, [r5, #1284]	; 0x504
    e32c:	e59504fc 	ldr	r0, [r5, #1276]	; 0x4fc
    e330:	e12fff33 	blx	r3
    e334:	eaffffc9 	b	e260 <CommandHandler::handleFileEnd(char const*)+0x34>
    e338:	e59f2050 	ldr	r2, [pc, #80]	; e390 <CommandHandler::handleFileEnd(char const*)+0x164>
    e33c:	e3a01005 	mov	r1, #5
    e340:	e59f0030 	ldr	r0, [pc, #48]	; e378 <CommandHandler::handleFileEnd(char const*)+0x14c>
    e344:	ebffed1a 	bl	97b4 <LogWrite>
    e348:	e59f303c 	ldr	r3, [pc, #60]	; e38c <CommandHandler::handleFileEnd(char const*)+0x160>
    e34c:	e5933654 	ldr	r3, [r3, #1620]	; 0x654
    e350:	e3530000 	cmp	r3, #0
    e354:	0affffc1 	beq	e260 <CommandHandler::handleFileEnd(char const*)+0x34>
    e358:	e2840032 	add	r0, r4, #50	; 0x32
    e35c:	e5952504 	ldr	r2, [r5, #1284]	; 0x504
    e360:	e59514fc 	ldr	r1, [r5, #1276]	; 0x4fc
    e364:	e12fff33 	blx	r3
    e368:	eaffffbc 	b	e260 <CommandHandler::handleFileEnd(char const*)+0x34>
    e36c:	0002e72c 	.word	0x0002e72c
    e370:	0002e738 	.word	0x0002e738
    e374:	0002e754 	.word	0x0002e754
    e378:	0002e5f4 	.word	0x0002e5f4
    e37c:	0002e780 	.word	0x0002e780
    e380:	0002e78c 	.word	0x0002e78c
    e384:	0002e798 	.word	0x0002e798
    e388:	0002e7a4 	.word	0x0002e7a4
    e38c:	00042df0 	.word	0x00042df0
    e390:	0002e7d0 	.word	0x0002e7d0

0000e394 <CommandHandler::processCommand(char const*, unsigned char const*, int)>:
    e394:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
    e398:	e24dd0e0 	sub	sp, sp, #224	; 0xe0
    e39c:	e1a04000 	mov	r4, r0
    e3a0:	e1a07002 	mov	r7, r2
    e3a4:	e1a06003 	mov	r6, r3
    e3a8:	e28d2014 	add	r2, sp, #20
    e3ac:	e3a030c8 	mov	r3, #200	; 0xc8
    e3b0:	e59f0154 	ldr	r0, [pc, #340]	; e50c <CommandHandler::processCommand(char const*, unsigned char const*, int)+0x178>
    e3b4:	e1a05001 	mov	r5, r1
    e3b8:	ebfff3d6 	bl	b318 <jsonGetValueForKey>
    e3bc:	e3500000 	cmp	r0, #0
    e3c0:	0a00001d 	beq	e43c <CommandHandler::processCommand(char const*, unsigned char const*, int)+0xa8>
    e3c4:	e59f1144 	ldr	r1, [pc, #324]	; e510 <CommandHandler::processCommand(char const*, unsigned char const*, int)+0x17c>
    e3c8:	e28d0014 	add	r0, sp, #20
    e3cc:	eb0077a7 	bl	2c270 <strcasecmp>
    e3d0:	e3500000 	cmp	r0, #0
    e3d4:	0a00001a 	beq	e444 <CommandHandler::processCommand(char const*, unsigned char const*, int)+0xb0>
    e3d8:	e59f1134 	ldr	r1, [pc, #308]	; e514 <CommandHandler::processCommand(char const*, unsigned char const*, int)+0x180>
    e3dc:	e28d0014 	add	r0, sp, #20
    e3e0:	eb0077a2 	bl	2c270 <strcasecmp>
    e3e4:	e2508000 	subs	r8, r0, #0
    e3e8:	0a000022 	beq	e478 <CommandHandler::processCommand(char const*, unsigned char const*, int)+0xe4>
    e3ec:	e59f1124 	ldr	r1, [pc, #292]	; e518 <CommandHandler::processCommand(char const*, unsigned char const*, int)+0x184>
    e3f0:	e28d0014 	add	r0, sp, #20
    e3f4:	eb00779d 	bl	2c270 <strcasecmp>
    e3f8:	e3500000 	cmp	r0, #0
    e3fc:	0a000019 	beq	e468 <CommandHandler::processCommand(char const*, unsigned char const*, int)+0xd4>
    e400:	e28d0014 	add	r0, sp, #20
    e404:	e59f1110 	ldr	r1, [pc, #272]	; e51c <CommandHandler::processCommand(char const*, unsigned char const*, int)+0x188>
    e408:	eb007798 	bl	2c270 <strcasecmp>
    e40c:	e3500000 	cmp	r0, #0
    e410:	0a000039 	beq	e4fc <CommandHandler::processCommand(char const*, unsigned char const*, int)+0x168>
    e414:	e59f3104 	ldr	r3, [pc, #260]	; e520 <CommandHandler::processCommand(char const*, unsigned char const*, int)+0x18c>
    e418:	e5934658 	ldr	r4, [r3, #1624]	; 0x658
    e41c:	e3540000 	cmp	r4, #0
    e420:	0a000005 	beq	e43c <CommandHandler::processCommand(char const*, unsigned char const*, int)+0xa8>
    e424:	e3a03000 	mov	r3, #0
    e428:	e1a02006 	mov	r2, r6
    e42c:	e1a01007 	mov	r1, r7
    e430:	e1a00005 	mov	r0, r5
    e434:	e58d3000 	str	r3, [sp]
    e438:	e12fff34 	blx	r4
    e43c:	e28dd0e0 	add	sp, sp, #224	; 0xe0
    e440:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    e444:	e59f20d8 	ldr	r2, [pc, #216]	; e524 <CommandHandler::processCommand(char const*, unsigned char const*, int)+0x190>
    e448:	e3a01005 	mov	r1, #5
    e44c:	e59f00d4 	ldr	r0, [pc, #212]	; e528 <CommandHandler::processCommand(char const*, unsigned char const*, int)+0x194>
    e450:	ebffecd7 	bl	97b4 <LogWrite>
    e454:	e1a01005 	mov	r1, r5
    e458:	e1a00004 	mov	r0, r4
    e45c:	ebfffe6d 	bl	de18 <CommandHandler::handleFileStart(char const*)>
    e460:	e28dd0e0 	add	sp, sp, #224	; 0xe0
    e464:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    e468:	e1a01005 	mov	r1, r5
    e46c:	e1a00004 	mov	r0, r4
    e470:	ebffff6d 	bl	e22c <CommandHandler::handleFileEnd(char const*)>
    e474:	eafffff0 	b	e43c <CommandHandler::processCommand(char const*, unsigned char const*, int)+0xa8>
    e478:	e2844a01 	add	r4, r4, #4096	; 0x1000
    e47c:	e59434fc 	ldr	r3, [r4, #1276]	; 0x4fc
    e480:	e3530000 	cmp	r3, #0
    e484:	0affffec 	beq	e43c <CommandHandler::processCommand(char const*, unsigned char const*, int)+0xa8>
    e488:	e1a01005 	mov	r1, r5
    e48c:	e28d2008 	add	r2, sp, #8
    e490:	e3a0300a 	mov	r3, #10
    e494:	e59f0090 	ldr	r0, [pc, #144]	; e52c <CommandHandler::processCommand(char const*, unsigned char const*, int)+0x198>
    e498:	ebfff39e 	bl	b318 <jsonGetValueForKey>
    e49c:	e3500000 	cmp	r0, #0
    e4a0:	0affffe5 	beq	e43c <CommandHandler::processCommand(char const*, unsigned char const*, int)+0xa8>
    e4a4:	e1a01008 	mov	r1, r8
    e4a8:	e28d0008 	add	r0, sp, #8
    e4ac:	e3a0200a 	mov	r2, #10
    e4b0:	eb007bfa 	bl	2d4a0 <strtol>
    e4b4:	e3500000 	cmp	r0, #0
    e4b8:	baffffdf 	blt	e43c <CommandHandler::processCommand(char const*, unsigned char const*, int)+0xa8>
    e4bc:	e5943500 	ldr	r3, [r4, #1280]	; 0x500
    e4c0:	e0862000 	add	r2, r6, r0
    e4c4:	e1520003 	cmp	r2, r3
    e4c8:	caffffdb 	bgt	e43c <CommandHandler::processCommand(char const*, unsigned char const*, int)+0xa8>
    e4cc:	e59434fc 	ldr	r3, [r4, #1276]	; 0x4fc
    e4d0:	e1a02006 	mov	r2, r6
    e4d4:	e0830000 	add	r0, r3, r0
    e4d8:	e1a01007 	mov	r1, r7
    e4dc:	eb0076da 	bl	2c04c <memcpy>
    e4e0:	e5942504 	ldr	r2, [r4, #1284]	; 0x504
    e4e4:	e5943508 	ldr	r3, [r4, #1288]	; 0x508
    e4e8:	e0826006 	add	r6, r2, r6
    e4ec:	e2833001 	add	r3, r3, #1
    e4f0:	e5846504 	str	r6, [r4, #1284]	; 0x504
    e4f4:	e5843508 	str	r3, [r4, #1288]	; 0x508
    e4f8:	eaffffcf 	b	e43c <CommandHandler::processCommand(char const*, unsigned char const*, int)+0xa8>
    e4fc:	e1a01005 	mov	r1, r5
    e500:	e1a00004 	mov	r0, r4
    e504:	ebfffec4 	bl	e01c <CommandHandler::handleStatusResponse(char const*)>
    e508:	eaffffcb 	b	e43c <CommandHandler::processCommand(char const*, unsigned char const*, int)+0xa8>
    e50c:	0002e7e8 	.word	0x0002e7e8
    e510:	0002e7f0 	.word	0x0002e7f0
    e514:	0002e814 	.word	0x0002e814
    e518:	0002e81c 	.word	0x0002e81c
    e51c:	0002e824 	.word	0x0002e824
    e520:	00042df0 	.word	0x00042df0
    e524:	0002e7f8 	.word	0x0002e7f8
    e528:	0002e5f4 	.word	0x0002e5f4
    e52c:	0002e6b8 	.word	0x0002e6b8

0000e530 <CommandHandler::hdlcFrameRx(unsigned char const*, int)>:
    e530:	e92d40f0 	push	{r4, r5, r6, r7, lr}
    e534:	e24ddf6d 	sub	sp, sp, #436	; 0x1b4
    e538:	e1a07000 	mov	r7, r0
    e53c:	e1a04002 	mov	r4, r2
    e540:	e28d0018 	add	r0, sp, #24
    e544:	e3a020c8 	mov	r2, #200	; 0xc8
    e548:	e1a06001 	mov	r6, r1
    e54c:	eb00787d 	bl	2c748 <strlcpy>
    e550:	e28d0018 	add	r0, sp, #24
    e554:	eb007890 	bl	2c79c <strlen>
    e558:	e28d1018 	add	r1, sp, #24
    e55c:	e1a05000 	mov	r5, r0
    e560:	e28d20e4 	add	r2, sp, #228	; 0xe4
    e564:	e3a030c8 	mov	r3, #200	; 0xc8
    e568:	e59f0164 	ldr	r0, [pc, #356]	; e6d4 <CommandHandler::hdlcFrameRx(unsigned char const*, int)+0x1a4>
    e56c:	ebfff369 	bl	b318 <jsonGetValueForKey>
    e570:	e3500000 	cmp	r0, #0
    e574:	0a000022 	beq	e604 <CommandHandler::hdlcFrameRx(unsigned char const*, int)+0xd4>
    e578:	e59f1158 	ldr	r1, [pc, #344]	; e6d8 <CommandHandler::hdlcFrameRx(unsigned char const*, int)+0x1a8>
    e57c:	e28d00e4 	add	r0, sp, #228	; 0xe4
    e580:	eb00773a 	bl	2c270 <strcasecmp>
    e584:	e3500000 	cmp	r0, #0
    e588:	0a00001f 	beq	e60c <CommandHandler::hdlcFrameRx(unsigned char const*, int)+0xdc>
    e58c:	e59f1148 	ldr	r1, [pc, #328]	; e6dc <CommandHandler::hdlcFrameRx(unsigned char const*, int)+0x1ac>
    e590:	e28d00e4 	add	r0, sp, #228	; 0xe4
    e594:	eb007735 	bl	2c270 <strcasecmp>
    e598:	e0444005 	sub	r4, r4, r5
    e59c:	e2855001 	add	r5, r5, #1
    e5a0:	e2444001 	sub	r4, r4, #1
    e5a4:	e0865005 	add	r5, r6, r5
    e5a8:	e2506000 	subs	r6, r0, #0
    e5ac:	e1c44fc4 	bic	r4, r4, r4, asr #31
    e5b0:	0a000022 	beq	e640 <CommandHandler::hdlcFrameRx(unsigned char const*, int)+0x110>
    e5b4:	e59f1124 	ldr	r1, [pc, #292]	; e6e0 <CommandHandler::hdlcFrameRx(unsigned char const*, int)+0x1b0>
    e5b8:	e28d00e4 	add	r0, sp, #228	; 0xe4
    e5bc:	eb00772b 	bl	2c270 <strcasecmp>
    e5c0:	e3500000 	cmp	r0, #0
    e5c4:	0a000019 	beq	e630 <CommandHandler::hdlcFrameRx(unsigned char const*, int)+0x100>
    e5c8:	e28d00e4 	add	r0, sp, #228	; 0xe4
    e5cc:	e59f1110 	ldr	r1, [pc, #272]	; e6e4 <CommandHandler::hdlcFrameRx(unsigned char const*, int)+0x1b4>
    e5d0:	eb007726 	bl	2c270 <strcasecmp>
    e5d4:	e3500000 	cmp	r0, #0
    e5d8:	0a000039 	beq	e6c4 <CommandHandler::hdlcFrameRx(unsigned char const*, int)+0x194>
    e5dc:	e59f3104 	ldr	r3, [pc, #260]	; e6e8 <CommandHandler::hdlcFrameRx(unsigned char const*, int)+0x1b8>
    e5e0:	e5936658 	ldr	r6, [r3, #1624]	; 0x658
    e5e4:	e3560000 	cmp	r6, #0
    e5e8:	0a000005 	beq	e604 <CommandHandler::hdlcFrameRx(unsigned char const*, int)+0xd4>
    e5ec:	e3a03000 	mov	r3, #0
    e5f0:	e1a02004 	mov	r2, r4
    e5f4:	e1a01005 	mov	r1, r5
    e5f8:	e28d0018 	add	r0, sp, #24
    e5fc:	e58d3000 	str	r3, [sp]
    e600:	e12fff36 	blx	r6
    e604:	e28ddf6d 	add	sp, sp, #436	; 0x1b4
    e608:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
    e60c:	e59f20d8 	ldr	r2, [pc, #216]	; e6ec <CommandHandler::hdlcFrameRx(unsigned char const*, int)+0x1bc>
    e610:	e3a01005 	mov	r1, #5
    e614:	e59f00d4 	ldr	r0, [pc, #212]	; e6f0 <CommandHandler::hdlcFrameRx(unsigned char const*, int)+0x1c0>
    e618:	ebffec65 	bl	97b4 <LogWrite>
    e61c:	e28d1018 	add	r1, sp, #24
    e620:	e1a00007 	mov	r0, r7
    e624:	ebfffdfb 	bl	de18 <CommandHandler::handleFileStart(char const*)>
    e628:	e28ddf6d 	add	sp, sp, #436	; 0x1b4
    e62c:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
    e630:	e28d1018 	add	r1, sp, #24
    e634:	e1a00007 	mov	r0, r7
    e638:	ebfffefb 	bl	e22c <CommandHandler::handleFileEnd(char const*)>
    e63c:	eafffff0 	b	e604 <CommandHandler::hdlcFrameRx(unsigned char const*, int)+0xd4>
    e640:	e2877a01 	add	r7, r7, #4096	; 0x1000
    e644:	e59734fc 	ldr	r3, [r7, #1276]	; 0x4fc
    e648:	e3530000 	cmp	r3, #0
    e64c:	0affffec 	beq	e604 <CommandHandler::hdlcFrameRx(unsigned char const*, int)+0xd4>
    e650:	e28d1018 	add	r1, sp, #24
    e654:	e28d200c 	add	r2, sp, #12
    e658:	e3a0300a 	mov	r3, #10
    e65c:	e59f0090 	ldr	r0, [pc, #144]	; e6f4 <CommandHandler::hdlcFrameRx(unsigned char const*, int)+0x1c4>
    e660:	ebfff32c 	bl	b318 <jsonGetValueForKey>
    e664:	e3500000 	cmp	r0, #0
    e668:	0affffe5 	beq	e604 <CommandHandler::hdlcFrameRx(unsigned char const*, int)+0xd4>
    e66c:	e1a01006 	mov	r1, r6
    e670:	e28d000c 	add	r0, sp, #12
    e674:	e3a0200a 	mov	r2, #10
    e678:	eb007b88 	bl	2d4a0 <strtol>
    e67c:	e3500000 	cmp	r0, #0
    e680:	baffffdf 	blt	e604 <CommandHandler::hdlcFrameRx(unsigned char const*, int)+0xd4>
    e684:	e5973500 	ldr	r3, [r7, #1280]	; 0x500
    e688:	e0802004 	add	r2, r0, r4
    e68c:	e1520003 	cmp	r2, r3
    e690:	caffffdb 	bgt	e604 <CommandHandler::hdlcFrameRx(unsigned char const*, int)+0xd4>
    e694:	e59734fc 	ldr	r3, [r7, #1276]	; 0x4fc
    e698:	e1a02004 	mov	r2, r4
    e69c:	e0830000 	add	r0, r3, r0
    e6a0:	e1a01005 	mov	r1, r5
    e6a4:	eb007668 	bl	2c04c <memcpy>
    e6a8:	e5972504 	ldr	r2, [r7, #1284]	; 0x504
    e6ac:	e5973508 	ldr	r3, [r7, #1288]	; 0x508
    e6b0:	e0824004 	add	r4, r2, r4
    e6b4:	e2833001 	add	r3, r3, #1
    e6b8:	e5874504 	str	r4, [r7, #1284]	; 0x504
    e6bc:	e5873508 	str	r3, [r7, #1288]	; 0x508
    e6c0:	eaffffcf 	b	e604 <CommandHandler::hdlcFrameRx(unsigned char const*, int)+0xd4>
    e6c4:	e28d1018 	add	r1, sp, #24
    e6c8:	e1a00007 	mov	r0, r7
    e6cc:	ebfffe52 	bl	e01c <CommandHandler::handleStatusResponse(char const*)>
    e6d0:	eaffffcb 	b	e604 <CommandHandler::hdlcFrameRx(unsigned char const*, int)+0xd4>
    e6d4:	0002e7e8 	.word	0x0002e7e8
    e6d8:	0002e7f0 	.word	0x0002e7f0
    e6dc:	0002e814 	.word	0x0002e814
    e6e0:	0002e81c 	.word	0x0002e81c
    e6e4:	0002e824 	.word	0x0002e824
    e6e8:	00042df0 	.word	0x00042df0
    e6ec:	0002e7f8 	.word	0x0002e7f8
    e6f0:	0002e5f4 	.word	0x0002e5f4
    e6f4:	0002e6b8 	.word	0x0002e6b8

0000e6f8 <CommandHandler::static_hdlcFrameRx(unsigned char const*, int)>:
    e6f8:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
    e6fc:	e59f61a4 	ldr	r6, [pc, #420]	; e8a8 <CommandHandler::static_hdlcFrameRx(unsigned char const*, int)+0x1b0>
    e700:	e24dde1b 	sub	sp, sp, #432	; 0x1b0
    e704:	e5965000 	ldr	r5, [r6]
    e708:	e3550000 	cmp	r5, #0
    e70c:	0a00000f 	beq	e750 <CommandHandler::static_hdlcFrameRx(unsigned char const*, int)+0x58>
    e710:	e1a07000 	mov	r7, r0
    e714:	e3a020c8 	mov	r2, #200	; 0xc8
    e718:	e1a04001 	mov	r4, r1
    e71c:	e28d0018 	add	r0, sp, #24
    e720:	e1a01007 	mov	r1, r7
    e724:	eb007807 	bl	2c748 <strlcpy>
    e728:	e28d0018 	add	r0, sp, #24
    e72c:	eb00781a 	bl	2c79c <strlen>
    e730:	e28d1018 	add	r1, sp, #24
    e734:	e1a08000 	mov	r8, r0
    e738:	e28d20e4 	add	r2, sp, #228	; 0xe4
    e73c:	e3a030c8 	mov	r3, #200	; 0xc8
    e740:	e59f0164 	ldr	r0, [pc, #356]	; e8ac <CommandHandler::static_hdlcFrameRx(unsigned char const*, int)+0x1b4>
    e744:	ebfff2f3 	bl	b318 <jsonGetValueForKey>
    e748:	e3500000 	cmp	r0, #0
    e74c:	1a000001 	bne	e758 <CommandHandler::static_hdlcFrameRx(unsigned char const*, int)+0x60>
    e750:	e28dde1b 	add	sp, sp, #432	; 0x1b0
    e754:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    e758:	e59f1150 	ldr	r1, [pc, #336]	; e8b0 <CommandHandler::static_hdlcFrameRx(unsigned char const*, int)+0x1b8>
    e75c:	e28d00e4 	add	r0, sp, #228	; 0xe4
    e760:	eb0076c2 	bl	2c270 <strcasecmp>
    e764:	e3500000 	cmp	r0, #0
    e768:	0a00001d 	beq	e7e4 <CommandHandler::static_hdlcFrameRx(unsigned char const*, int)+0xec>
    e76c:	e59f1140 	ldr	r1, [pc, #320]	; e8b4 <CommandHandler::static_hdlcFrameRx(unsigned char const*, int)+0x1bc>
    e770:	e28d00e4 	add	r0, sp, #228	; 0xe4
    e774:	eb0076bd 	bl	2c270 <strcasecmp>
    e778:	e0444008 	sub	r4, r4, r8
    e77c:	e2888001 	add	r8, r8, #1
    e780:	e2444001 	sub	r4, r4, #1
    e784:	e0878008 	add	r8, r7, r8
    e788:	e2507000 	subs	r7, r0, #0
    e78c:	e1c44fc4 	bic	r4, r4, r4, asr #31
    e790:	0a00001b 	beq	e804 <CommandHandler::static_hdlcFrameRx(unsigned char const*, int)+0x10c>
    e794:	e59f111c 	ldr	r1, [pc, #284]	; e8b8 <CommandHandler::static_hdlcFrameRx(unsigned char const*, int)+0x1c0>
    e798:	e28d00e4 	add	r0, sp, #228	; 0xe4
    e79c:	eb0076b3 	bl	2c270 <strcasecmp>
    e7a0:	e3500000 	cmp	r0, #0
    e7a4:	0a000037 	beq	e888 <CommandHandler::static_hdlcFrameRx(unsigned char const*, int)+0x190>
    e7a8:	e28d00e4 	add	r0, sp, #228	; 0xe4
    e7ac:	e59f1108 	ldr	r1, [pc, #264]	; e8bc <CommandHandler::static_hdlcFrameRx(unsigned char const*, int)+0x1c4>
    e7b0:	eb0076ae 	bl	2c270 <strcasecmp>
    e7b4:	e3500000 	cmp	r0, #0
    e7b8:	0a000036 	beq	e898 <CommandHandler::static_hdlcFrameRx(unsigned char const*, int)+0x1a0>
    e7bc:	e5965658 	ldr	r5, [r6, #1624]	; 0x658
    e7c0:	e3550000 	cmp	r5, #0
    e7c4:	0affffe1 	beq	e750 <CommandHandler::static_hdlcFrameRx(unsigned char const*, int)+0x58>
    e7c8:	e3a03000 	mov	r3, #0
    e7cc:	e1a02004 	mov	r2, r4
    e7d0:	e1a01008 	mov	r1, r8
    e7d4:	e28d0018 	add	r0, sp, #24
    e7d8:	e58d3000 	str	r3, [sp]
    e7dc:	e12fff35 	blx	r5
    e7e0:	eaffffda 	b	e750 <CommandHandler::static_hdlcFrameRx(unsigned char const*, int)+0x58>
    e7e4:	e59f20d4 	ldr	r2, [pc, #212]	; e8c0 <CommandHandler::static_hdlcFrameRx(unsigned char const*, int)+0x1c8>
    e7e8:	e3a01005 	mov	r1, #5
    e7ec:	e59f00d0 	ldr	r0, [pc, #208]	; e8c4 <CommandHandler::static_hdlcFrameRx(unsigned char const*, int)+0x1cc>
    e7f0:	ebffebef 	bl	97b4 <LogWrite>
    e7f4:	e28d1018 	add	r1, sp, #24
    e7f8:	e1a00005 	mov	r0, r5
    e7fc:	ebfffd85 	bl	de18 <CommandHandler::handleFileStart(char const*)>
    e800:	eaffffd2 	b	e750 <CommandHandler::static_hdlcFrameRx(unsigned char const*, int)+0x58>
    e804:	e2855a01 	add	r5, r5, #4096	; 0x1000
    e808:	e59534fc 	ldr	r3, [r5, #1276]	; 0x4fc
    e80c:	e3530000 	cmp	r3, #0
    e810:	0affffce 	beq	e750 <CommandHandler::static_hdlcFrameRx(unsigned char const*, int)+0x58>
    e814:	e28d1018 	add	r1, sp, #24
    e818:	e28d200c 	add	r2, sp, #12
    e81c:	e3a0300a 	mov	r3, #10
    e820:	e59f00a0 	ldr	r0, [pc, #160]	; e8c8 <CommandHandler::static_hdlcFrameRx(unsigned char const*, int)+0x1d0>
    e824:	ebfff2bb 	bl	b318 <jsonGetValueForKey>
    e828:	e3500000 	cmp	r0, #0
    e82c:	0affffc7 	beq	e750 <CommandHandler::static_hdlcFrameRx(unsigned char const*, int)+0x58>
    e830:	e1a01007 	mov	r1, r7
    e834:	e28d000c 	add	r0, sp, #12
    e838:	e3a0200a 	mov	r2, #10
    e83c:	eb007b17 	bl	2d4a0 <strtol>
    e840:	e3500000 	cmp	r0, #0
    e844:	baffffc1 	blt	e750 <CommandHandler::static_hdlcFrameRx(unsigned char const*, int)+0x58>
    e848:	e5953500 	ldr	r3, [r5, #1280]	; 0x500
    e84c:	e0802004 	add	r2, r0, r4
    e850:	e1520003 	cmp	r2, r3
    e854:	caffffbd 	bgt	e750 <CommandHandler::static_hdlcFrameRx(unsigned char const*, int)+0x58>
    e858:	e59534fc 	ldr	r3, [r5, #1276]	; 0x4fc
    e85c:	e1a02004 	mov	r2, r4
    e860:	e0830000 	add	r0, r3, r0
    e864:	e1a01008 	mov	r1, r8
    e868:	eb0075f7 	bl	2c04c <memcpy>
    e86c:	e5952504 	ldr	r2, [r5, #1284]	; 0x504
    e870:	e5953508 	ldr	r3, [r5, #1288]	; 0x508
    e874:	e0824004 	add	r4, r2, r4
    e878:	e2833001 	add	r3, r3, #1
    e87c:	e5854504 	str	r4, [r5, #1284]	; 0x504
    e880:	e5853508 	str	r3, [r5, #1288]	; 0x508
    e884:	eaffffb1 	b	e750 <CommandHandler::static_hdlcFrameRx(unsigned char const*, int)+0x58>
    e888:	e28d1018 	add	r1, sp, #24
    e88c:	e1a00005 	mov	r0, r5
    e890:	ebfffe65 	bl	e22c <CommandHandler::handleFileEnd(char const*)>
    e894:	eaffffad 	b	e750 <CommandHandler::static_hdlcFrameRx(unsigned char const*, int)+0x58>
    e898:	e28d1018 	add	r1, sp, #24
    e89c:	e1a00005 	mov	r0, r5
    e8a0:	ebfffddd 	bl	e01c <CommandHandler::handleStatusResponse(char const*)>
    e8a4:	eaffffa9 	b	e750 <CommandHandler::static_hdlcFrameRx(unsigned char const*, int)+0x58>
    e8a8:	00042df0 	.word	0x00042df0
    e8ac:	0002e7e8 	.word	0x0002e7e8
    e8b0:	0002e7f0 	.word	0x0002e7f0
    e8b4:	0002e814 	.word	0x0002e814
    e8b8:	0002e81c 	.word	0x0002e81c
    e8bc:	0002e824 	.word	0x0002e824
    e8c0:	0002e7f8 	.word	0x0002e7f8
    e8c4:	0002e5f4 	.word	0x0002e5f4
    e8c8:	0002e6b8 	.word	0x0002e6b8

0000e8cc <CommandHandler::sendAPIReq(char const*)>:
    e8cc:	e92d4070 	push	{r4, r5, r6, lr}
    e8d0:	e59f5064 	ldr	r5, [pc, #100]	; e93c <CommandHandler::sendAPIReq(char const*)+0x70>
    e8d4:	e3a02064 	mov	r2, #100	; 0x64
    e8d8:	e2854e65 	add	r4, r5, #1616	; 0x650
    e8dc:	e284400c 	add	r4, r4, #12
    e8e0:	e59f1058 	ldr	r1, [pc, #88]	; e940 <CommandHandler::sendAPIReq(char const*)+0x74>
    e8e4:	e1a06000 	mov	r6, r0
    e8e8:	e1a00004 	mov	r0, r4
    e8ec:	eb007795 	bl	2c748 <strlcpy>
    e8f0:	e1a00004 	mov	r0, r4
    e8f4:	eb0077a8 	bl	2c79c <strlen>
    e8f8:	e1a01006 	mov	r1, r6
    e8fc:	e3a02064 	mov	r2, #100	; 0x64
    e900:	e0840000 	add	r0, r4, r0
    e904:	eb00778f 	bl	2c748 <strlcpy>
    e908:	e1a00004 	mov	r0, r4
    e90c:	eb0077a2 	bl	2c79c <strlen>
    e910:	e3a02064 	mov	r2, #100	; 0x64
    e914:	e0840000 	add	r0, r4, r0
    e918:	e59f1024 	ldr	r1, [pc, #36]	; e944 <CommandHandler::sendAPIReq(char const*)+0x78>
    e91c:	eb007789 	bl	2c748 <strlcpy>
    e920:	e5950000 	ldr	r0, [r5]
    e924:	e3500000 	cmp	r0, #0
    e928:	08bd8070 	popeq	{r4, r5, r6, pc}
    e92c:	e1a02004 	mov	r2, r4
    e930:	e8bd4070 	pop	{r4, r5, r6, lr}
    e934:	e59f100c 	ldr	r1, [pc, #12]	; e948 <CommandHandler::sendAPIReq(char const*)+0x7c>
    e938:	eafffe0d 	b	e174 <CommandHandler::sendWithJSON(char const*, char const*)>
    e93c:	00042df0 	.word	0x00042df0
    e940:	0002e82c 	.word	0x0002e82c
    e944:	0002e88c 	.word	0x0002e88c
    e948:	0002e834 	.word	0x0002e834

0000e94c <CommandHandler::sendRegularStatusUpdate()>:
    e94c:	e2803a01 	add	r3, r0, #4096	; 0x1000
    e950:	e59324fc 	ldr	r2, [r3, #1276]	; 0x4fc
    e954:	e3520000 	cmp	r2, #0
    e958:	112fff1e 	bxne	lr
    e95c:	e92d40f0 	push	{r4, r5, r6, r7, lr}
    e960:	e59f60a0 	ldr	r6, [pc, #160]	; ea08 <CommandHandler::sendRegularStatusUpdate()+0xbc>
    e964:	e24ddfff 	sub	sp, sp, #1020	; 0x3fc
    e968:	e5967658 	ldr	r7, [r6, #1624]	; 0x658
    e96c:	e3570000 	cmp	r7, #0
    e970:	0a000022 	beq	ea00 <CommandHandler::sendRegularStatusUpdate()+0xb4>
    e974:	e3a03ffa 	mov	r3, #1000	; 0x3e8
    e978:	e1a04000 	mov	r4, r0
    e97c:	e1a01002 	mov	r1, r2
    e980:	e58d3000 	str	r3, [sp]
    e984:	e59f0080 	ldr	r0, [pc, #128]	; ea0c <CommandHandler::sendRegularStatusUpdate()+0xc0>
    e988:	e28d300c 	add	r3, sp, #12
    e98c:	e2865e65 	add	r5, r6, #1616	; 0x650
    e990:	e12fff37 	blx	r7
    e994:	e285500c 	add	r5, r5, #12
    e998:	e28d200c 	add	r2, sp, #12
    e99c:	e1a00004 	mov	r0, r4
    e9a0:	e59f1068 	ldr	r1, [pc, #104]	; ea10 <CommandHandler::sendRegularStatusUpdate()+0xc4>
    e9a4:	ebfffdf2 	bl	e174 <CommandHandler::sendWithJSON(char const*, char const*)>
    e9a8:	e3a02064 	mov	r2, #100	; 0x64
    e9ac:	e59f1060 	ldr	r1, [pc, #96]	; ea14 <CommandHandler::sendRegularStatusUpdate()+0xc8>
    e9b0:	e1a00005 	mov	r0, r5
    e9b4:	eb007763 	bl	2c748 <strlcpy>
    e9b8:	e1a00005 	mov	r0, r5
    e9bc:	eb007776 	bl	2c79c <strlen>
    e9c0:	e3a02064 	mov	r2, #100	; 0x64
    e9c4:	e59f104c 	ldr	r1, [pc, #76]	; ea18 <CommandHandler::sendRegularStatusUpdate()+0xcc>
    e9c8:	e0850000 	add	r0, r5, r0
    e9cc:	eb00775d 	bl	2c748 <strlcpy>
    e9d0:	e1a00005 	mov	r0, r5
    e9d4:	eb007770 	bl	2c79c <strlen>
    e9d8:	e3a02064 	mov	r2, #100	; 0x64
    e9dc:	e0850000 	add	r0, r5, r0
    e9e0:	e59f1034 	ldr	r1, [pc, #52]	; ea1c <CommandHandler::sendRegularStatusUpdate()+0xd0>
    e9e4:	eb007757 	bl	2c748 <strlcpy>
    e9e8:	e5960000 	ldr	r0, [r6]
    e9ec:	e3500000 	cmp	r0, #0
    e9f0:	0a000002 	beq	ea00 <CommandHandler::sendRegularStatusUpdate()+0xb4>
    e9f4:	e1a02005 	mov	r2, r5
    e9f8:	e59f1020 	ldr	r1, [pc, #32]	; ea20 <CommandHandler::sendRegularStatusUpdate()+0xd4>
    e9fc:	ebfffddc 	bl	e174 <CommandHandler::sendWithJSON(char const*, char const*)>
    ea00:	e28ddfff 	add	sp, sp, #1020	; 0x3fc
    ea04:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
    ea08:	00042df0 	.word	0x00042df0
    ea0c:	0002e83c 	.word	0x0002e83c
    ea10:	0002e854 	.word	0x0002e854
    ea14:	0002e82c 	.word	0x0002e82c
    ea18:	0002e864 	.word	0x0002e864
    ea1c:	0002e88c 	.word	0x0002e88c
    ea20:	0002e834 	.word	0x0002e834

0000ea24 <CommandHandler::getStatusResponse(bool*, char**, char**, char**, char**)>:
    ea24:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    ea28:	e280ca01 	add	ip, r0, #4096	; 0x1000
    ea2c:	e5dce610 	ldrb	lr, [ip, #1552]	; 0x610
    ea30:	e280cc15 	add	ip, r0, #5376	; 0x1500
    ea34:	e5c1e000 	strb	lr, [r1]
    ea38:	e28ce00c 	add	lr, ip, #12
    ea3c:	e582e000 	str	lr, [r2]
    ea40:	e2801d55 	add	r1, r0, #5440	; 0x1540
    ea44:	e59de004 	ldr	lr, [sp, #4]
    ea48:	e2800d56 	add	r0, r0, #5504	; 0x1580
    ea4c:	e59d2008 	ldr	r2, [sp, #8]
    ea50:	e28cc02a 	add	ip, ip, #42	; 0x2a
    ea54:	e2811008 	add	r1, r1, #8
    ea58:	e280002c 	add	r0, r0, #44	; 0x2c
    ea5c:	e583c000 	str	ip, [r3]
    ea60:	e58e1000 	str	r1, [lr]
    ea64:	e5820000 	str	r0, [r2]
    ea68:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

0000ea6c <CommandHandler::sendRemoteDebugProtocolMsg(char const*, char const*)>:
    ea6c:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
    ea70:	e1a07002 	mov	r7, r2
    ea74:	e1a06001 	mov	r6, r1
    ea78:	e1a05000 	mov	r5, r0
    ea7c:	e59f4060 	ldr	r4, [pc, #96]	; eae4 <CommandHandler::sendRemoteDebugProtocolMsg(char const*, char const*)+0x78>
    ea80:	e3a02e7d 	mov	r2, #2000	; 0x7d0
    ea84:	e1a00004 	mov	r0, r4
    ea88:	e59f1058 	ldr	r1, [pc, #88]	; eae8 <CommandHandler::sendRemoteDebugProtocolMsg(char const*, char const*)+0x7c>
    ea8c:	eb00772d 	bl	2c748 <strlcpy>
    ea90:	e1a01007 	mov	r1, r7
    ea94:	e1a00004 	mov	r0, r4
    ea98:	e3a02e7d 	mov	r2, #2000	; 0x7d0
    ea9c:	eb0076f9 	bl	2c688 <strlcat>
    eaa0:	e1a00004 	mov	r0, r4
    eaa4:	e3a02e7d 	mov	r2, #2000	; 0x7d0
    eaa8:	e59f103c 	ldr	r1, [pc, #60]	; eaec <CommandHandler::sendRemoteDebugProtocolMsg(char const*, char const*)+0x80>
    eaac:	eb0076f5 	bl	2c688 <strlcat>
    eab0:	e1a01006 	mov	r1, r6
    eab4:	e1a00004 	mov	r0, r4
    eab8:	e3a02e7d 	mov	r2, #2000	; 0x7d0
    eabc:	eb0076f1 	bl	2c688 <strlcat>
    eac0:	e1a00004 	mov	r0, r4
    eac4:	e3a02e7d 	mov	r2, #2000	; 0x7d0
    eac8:	e59f1020 	ldr	r1, [pc, #32]	; eaf0 <CommandHandler::sendRemoteDebugProtocolMsg(char const*, char const*)+0x84>
    eacc:	eb0076ed 	bl	2c688 <strlcat>
    ead0:	e1a02004 	mov	r2, r4
    ead4:	e1a00005 	mov	r0, r5
    ead8:	e8bd41f0 	pop	{r4, r5, r6, r7, r8, lr}
    eadc:	e59f1010 	ldr	r1, [pc, #16]	; eaf4 <CommandHandler::sendRemoteDebugProtocolMsg(char const*, char const*)+0x88>
    eae0:	eafffda3 	b	e174 <CommandHandler::sendWithJSON(char const*, char const*)>
    eae4:	000434b4 	.word	0x000434b4
    eae8:	0002e874 	.word	0x0002e874
    eaec:	0002e880 	.word	0x0002e880
    eaf0:	0002e88c 	.word	0x0002e88c
    eaf4:	0002e890 	.word	0x0002e890

0000eaf8 <CommandHandler::logDebugMessage(char const*)>:
    eaf8:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
    eafc:	e59f4094 	ldr	r4, [pc, #148]	; eb98 <CommandHandler::logDebugMessage(char const*)+0xa0>
    eb00:	e59f5094 	ldr	r5, [pc, #148]	; eb9c <CommandHandler::logDebugMessage(char const*)+0xa4>
    eb04:	e1a06000 	mov	r6, r0
    eb08:	e1a02005 	mov	r2, r5
    eb0c:	e1a07001 	mov	r7, r1
    eb10:	e1a00004 	mov	r0, r4
    eb14:	e59f1084 	ldr	r1, [pc, #132]	; eba0 <CommandHandler::logDebugMessage(char const*)+0xa8>
    eb18:	eb00770a 	bl	2c748 <strlcpy>
    eb1c:	e1a00004 	mov	r0, r4
    eb20:	eb00771d 	bl	2c79c <strlen>
    eb24:	e1a02005 	mov	r2, r5
    eb28:	e59f1074 	ldr	r1, [pc, #116]	; eba4 <CommandHandler::logDebugMessage(char const*)+0xac>
    eb2c:	e0840000 	add	r0, r4, r0
    eb30:	eb007704 	bl	2c748 <strlcpy>
    eb34:	e1a00004 	mov	r0, r4
    eb38:	eb007717 	bl	2c79c <strlen>
    eb3c:	e1a02005 	mov	r2, r5
    eb40:	e59f1060 	ldr	r1, [pc, #96]	; eba8 <CommandHandler::logDebugMessage(char const*)+0xb0>
    eb44:	e0840000 	add	r0, r4, r0
    eb48:	eb0076fe 	bl	2c748 <strlcpy>
    eb4c:	e1a00004 	mov	r0, r4
    eb50:	eb007711 	bl	2c79c <strlen>
    eb54:	e1a02005 	mov	r2, r5
    eb58:	e1a01007 	mov	r1, r7
    eb5c:	e0840000 	add	r0, r4, r0
    eb60:	eb0076f8 	bl	2c748 <strlcpy>
    eb64:	e1a00004 	mov	r0, r4
    eb68:	eb00770b 	bl	2c79c <strlen>
    eb6c:	e1a02005 	mov	r2, r5
    eb70:	e59f1034 	ldr	r1, [pc, #52]	; ebac <CommandHandler::logDebugMessage(char const*)+0xb4>
    eb74:	e0840000 	add	r0, r4, r0
    eb78:	eb0076f2 	bl	2c748 <strlcpy>
    eb7c:	e1a00004 	mov	r0, r4
    eb80:	eb007705 	bl	2c79c <strlen>
    eb84:	e1a01004 	mov	r1, r4
    eb88:	e2802001 	add	r2, r0, #1
    eb8c:	e1a00006 	mov	r0, r6
    eb90:	e8bd41f0 	pop	{r4, r5, r6, r7, r8, lr}
    eb94:	ea0001df 	b	f318 <MiniHDLC::sendFrame(unsigned char const*, int)>
    eb98:	00042e60 	.word	0x00042e60
    eb9c:	000005dc 	.word	0x000005dc
    eba0:	0002e718 	.word	0x0002e718
    eba4:	0002e894 	.word	0x0002e894
    eba8:	0002e728 	.word	0x0002e728
    ebac:	0002e714 	.word	0x0002e714

0000ebb0 <CommandHandler::service()>:
    ebb0:	e12fff1e 	bx	lr

0000ebb4 <MiniHDLC::MiniHDLC(void (*)(unsigned char), void (*)(unsigned char const*, int), bool, bool)>:
    ebb4:	e92d4030 	push	{r4, r5, lr}
    ebb8:	e3a0e000 	mov	lr, #0
    ebbc:	e3e05000 	mvn	r5, #0
    ebc0:	e59f402c 	ldr	r4, [pc, #44]	; ebf4 <MiniHDLC::MiniHDLC(void (*)(unsigned char), void (*)(unsigned char const*, int), bool, bool)+0x40>
    ebc4:	e1c050b8 	strh	r5, [r0, #8]
    ebc8:	e8840006 	stm	r4, {r1, r2}
    ebcc:	e5dd200c 	ldrb	r2, [sp, #12]
    ebd0:	e5c03001 	strb	r3, [r0, #1]
    ebd4:	e5c02000 	strb	r2, [r0]
    ebd8:	e580e004 	str	lr, [r0, #4]
    ebdc:	e5c0e00a 	strb	lr, [r0, #10]
    ebe0:	e5c0e00b 	strb	lr, [r0, #11]
    ebe4:	e5c0e00c 	strb	lr, [r0, #12]
    ebe8:	e580e010 	str	lr, [r0, #16]
    ebec:	e580e014 	str	lr, [r0, #20]
    ebf0:	e8bd8030 	pop	{r4, r5, pc}
    ebf4:	00043c88 	.word	0x00043c88

0000ebf8 <MiniHDLC::handleBit(unsigned char)>:
    ebf8:	e3510000 	cmp	r1, #0
    ebfc:	13e0107f 	mvnne	r1, #127	; 0x7f
    ec00:	e92d4010 	push	{r4, lr}
    ec04:	e5d0300b 	ldrb	r3, [r0, #11]
    ec08:	e1a04000 	mov	r4, r0
    ec0c:	e1a030a3 	lsr	r3, r3, #1
    ec10:	11833001 	orrne	r3, r3, r1
    ec14:	e6ef3073 	uxtb	r3, r3
    ec18:	e353007e 	cmp	r3, #126	; 0x7e
    ec1c:	e5c0300b 	strb	r3, [r0, #11]
    ec20:	0a00002d 	beq	ecdc <MiniHDLC::handleBit(unsigned char)+0xe4>
    ec24:	e20330fc 	and	r3, r3, #252	; 0xfc
    ec28:	e353007c 	cmp	r3, #124	; 0x7c
    ec2c:	08bd8010 	popeq	{r4, pc}
    ec30:	e5d0200c 	ldrb	r2, [r0, #12]
    ec34:	e5903010 	ldr	r3, [r0, #16]
    ec38:	e18110a2 	orr	r1, r1, r2, lsr #1
    ec3c:	e2833001 	add	r3, r3, #1
    ec40:	e6ef1071 	uxtb	r1, r1
    ec44:	e3530008 	cmp	r3, #8
    ec48:	e5c0100c 	strb	r1, [r0, #12]
    ec4c:	e5803010 	str	r3, [r0, #16]
    ec50:	18bd8010 	popne	{r4, pc}
    ec54:	e351007e 	cmp	r1, #126	; 0x7e
    ec58:	0a000045 	beq	ed74 <MiniHDLC::handleBit(unsigned char)+0x17c>
    ec5c:	e5d0300a 	ldrb	r3, [r0, #10]
    ec60:	e3530000 	cmp	r3, #0
    ec64:	1a000035 	bne	ed40 <MiniHDLC::handleBit(unsigned char)+0x148>
    ec68:	e351007d 	cmp	r1, #125	; 0x7d
    ec6c:	03a03001 	moveq	r3, #1
    ec70:	05c0300a 	strbeq	r3, [r0, #10]
    ec74:	0a000014 	beq	eccc <MiniHDLC::handleBit(unsigned char)+0xd4>
    ec78:	e5943004 	ldr	r3, [r4, #4]
    ec7c:	e0842003 	add	r2, r4, r3
    ec80:	e3530001 	cmp	r3, #1
    ec84:	e5c21018 	strb	r1, [r2, #24]
    ec88:	da000007 	ble	ecac <MiniHDLC::handleBit(unsigned char)+0xb4>
    ec8c:	e1d410b8 	ldrh	r1, [r4, #8]
    ec90:	e5d22016 	ldrb	r2, [r2, #22]
    ec94:	e59f0158 	ldr	r0, [pc, #344]	; edf4 <MiniHDLC::handleBit(unsigned char)+0x1fc>
    ec98:	e0222421 	eor	r2, r2, r1, lsr #8
    ec9c:	e1a02082 	lsl	r2, r2, #1
    eca0:	e19020b2 	ldrh	r2, [r0, r2]
    eca4:	e0222401 	eor	r2, r2, r1, lsl #8
    eca8:	e1c420b8 	strh	r2, [r4, #8]
    ecac:	e59f2144 	ldr	r2, [pc, #324]	; edf8 <MiniHDLC::handleBit(unsigned char)+0x200>
    ecb0:	e2833001 	add	r3, r3, #1
    ecb4:	e1530002 	cmp	r3, r2
    ecb8:	03a02000 	moveq	r2, #0
    ecbc:	03e03000 	mvneq	r3, #0
    ecc0:	15843004 	strne	r3, [r4, #4]
    ecc4:	05842004 	streq	r2, [r4, #4]
    ecc8:	01c430b8 	strheq	r3, [r4, #8]
    eccc:	e3a03000 	mov	r3, #0
    ecd0:	e5c4300c 	strb	r3, [r4, #12]
    ecd4:	e5843010 	str	r3, [r4, #16]
    ecd8:	e8bd8010 	pop	{r4, pc}
    ecdc:	e5903004 	ldr	r3, [r0, #4]
    ece0:	e3530001 	cmp	r3, #1
    ece4:	da00000d 	ble	ed20 <MiniHDLC::handleBit(unsigned char)+0x128>
    ece8:	e5d02001 	ldrb	r2, [r0, #1]
    ecec:	e2431002 	sub	r1, r3, #2
    ecf0:	e0803003 	add	r3, r0, r3
    ecf4:	e0800001 	add	r0, r0, r1
    ecf8:	e3520000 	cmp	r2, #0
    ecfc:	e5d33017 	ldrb	r3, [r3, #23]
    ed00:	e5d02018 	ldrb	r2, [r0, #24]
    ed04:	01823403 	orreq	r3, r2, r3, lsl #8
    ed08:	11833402 	orrne	r3, r3, r2, lsl #8
    ed0c:	e6bf3073 	sxth	r3, r3
    ed10:	e1d420b8 	ldrh	r2, [r4, #8]
    ed14:	e6ff3073 	uxth	r3, r3
    ed18:	e1520003 	cmp	r2, r3
    ed1c:	0a00000b 	beq	ed50 <MiniHDLC::handleBit(unsigned char)+0x158>
    ed20:	e3a03000 	mov	r3, #0
    ed24:	e3e02000 	mvn	r2, #0
    ed28:	e5c4300a 	strb	r3, [r4, #10]
    ed2c:	e5843004 	str	r3, [r4, #4]
    ed30:	e5c4300c 	strb	r3, [r4, #12]
    ed34:	e5843010 	str	r3, [r4, #16]
    ed38:	e1c420b8 	strh	r2, [r4, #8]
    ed3c:	e8bd8010 	pop	{r4, pc}
    ed40:	e3a03000 	mov	r3, #0
    ed44:	e2211020 	eor	r1, r1, #32
    ed48:	e5c0300a 	strb	r3, [r0, #10]
    ed4c:	eaffffc9 	b	ec78 <MiniHDLC::handleBit(unsigned char)+0x80>
    ed50:	e3a02000 	mov	r2, #0
    ed54:	e59f30a0 	ldr	r3, [pc, #160]	; edfc <MiniHDLC::handleBit(unsigned char)+0x204>
    ed58:	e5c02018 	strb	r2, [r0, #24]
    ed5c:	e5933004 	ldr	r3, [r3, #4]
    ed60:	e1530002 	cmp	r3, r2
    ed64:	0affffed 	beq	ed20 <MiniHDLC::handleBit(unsigned char)+0x128>
    ed68:	e2840018 	add	r0, r4, #24
    ed6c:	e12fff33 	blx	r3
    ed70:	eaffffea 	b	ed20 <MiniHDLC::handleBit(unsigned char)+0x128>
    ed74:	e5903004 	ldr	r3, [r0, #4]
    ed78:	e3530001 	cmp	r3, #1
    ed7c:	da00000d 	ble	edb8 <MiniHDLC::handleBit(unsigned char)+0x1c0>
    ed80:	e5d02001 	ldrb	r2, [r0, #1]
    ed84:	e2431002 	sub	r1, r3, #2
    ed88:	e0803003 	add	r3, r0, r3
    ed8c:	e0800001 	add	r0, r0, r1
    ed90:	e3520000 	cmp	r2, #0
    ed94:	e5d33017 	ldrb	r3, [r3, #23]
    ed98:	e5d02018 	ldrb	r2, [r0, #24]
    ed9c:	01823403 	orreq	r3, r2, r3, lsl #8
    eda0:	11833402 	orrne	r3, r3, r2, lsl #8
    eda4:	e6bf3073 	sxth	r3, r3
    eda8:	e1d420b8 	ldrh	r2, [r4, #8]
    edac:	e6ff3073 	uxth	r3, r3
    edb0:	e1520003 	cmp	r2, r3
    edb4:	0a000005 	beq	edd0 <MiniHDLC::handleBit(unsigned char)+0x1d8>
    edb8:	e3a03000 	mov	r3, #0
    edbc:	e3e02000 	mvn	r2, #0
    edc0:	e5c4300a 	strb	r3, [r4, #10]
    edc4:	e5843004 	str	r3, [r4, #4]
    edc8:	e1c420b8 	strh	r2, [r4, #8]
    edcc:	eaffffbe 	b	eccc <MiniHDLC::handleBit(unsigned char)+0xd4>
    edd0:	e3a02000 	mov	r2, #0
    edd4:	e59f3020 	ldr	r3, [pc, #32]	; edfc <MiniHDLC::handleBit(unsigned char)+0x204>
    edd8:	e5c02018 	strb	r2, [r0, #24]
    eddc:	e5933004 	ldr	r3, [r3, #4]
    ede0:	e1530002 	cmp	r3, r2
    ede4:	0afffff3 	beq	edb8 <MiniHDLC::handleBit(unsigned char)+0x1c0>
    ede8:	e2840018 	add	r0, r4, #24
    edec:	e12fff33 	blx	r3
    edf0:	eafffff0 	b	edb8 <MiniHDLC::handleBit(unsigned char)+0x1c0>
    edf4:	0002e898 	.word	0x0002e898
    edf8:	00001388 	.word	0x00001388
    edfc:	00043c88 	.word	0x00043c88

0000ee00 <MiniHDLC::handleChar(unsigned char)>:
    ee00:	e351007e 	cmp	r1, #126	; 0x7e
    ee04:	e92d4010 	push	{r4, lr}
    ee08:	e1a04000 	mov	r4, r0
    ee0c:	0a00001e 	beq	ee8c <MiniHDLC::handleChar(unsigned char)+0x8c>
    ee10:	e5d0300a 	ldrb	r3, [r0, #10]
    ee14:	e3530000 	cmp	r3, #0
    ee18:	1a000017 	bne	ee7c <MiniHDLC::handleChar(unsigned char)+0x7c>
    ee1c:	e351007d 	cmp	r1, #125	; 0x7d
    ee20:	0a000039 	beq	ef0c <MiniHDLC::handleChar(unsigned char)+0x10c>
    ee24:	e5943004 	ldr	r3, [r4, #4]
    ee28:	e0842003 	add	r2, r4, r3
    ee2c:	e3530001 	cmp	r3, #1
    ee30:	e5c21018 	strb	r1, [r2, #24]
    ee34:	da000007 	ble	ee58 <MiniHDLC::handleChar(unsigned char)+0x58>
    ee38:	e1d410b8 	ldrh	r1, [r4, #8]
    ee3c:	e5d22016 	ldrb	r2, [r2, #22]
    ee40:	e59f00d0 	ldr	r0, [pc, #208]	; ef18 <MiniHDLC::handleChar(unsigned char)+0x118>
    ee44:	e0222421 	eor	r2, r2, r1, lsr #8
    ee48:	e1a02082 	lsl	r2, r2, #1
    ee4c:	e19020b2 	ldrh	r2, [r0, r2]
    ee50:	e0222401 	eor	r2, r2, r1, lsl #8
    ee54:	e1c420b8 	strh	r2, [r4, #8]
    ee58:	e59f20bc 	ldr	r2, [pc, #188]	; ef1c <MiniHDLC::handleChar(unsigned char)+0x11c>
    ee5c:	e2833001 	add	r3, r3, #1
    ee60:	e1530002 	cmp	r3, r2
    ee64:	03a02000 	moveq	r2, #0
    ee68:	03e03000 	mvneq	r3, #0
    ee6c:	15843004 	strne	r3, [r4, #4]
    ee70:	05842004 	streq	r2, [r4, #4]
    ee74:	01c430b8 	strheq	r3, [r4, #8]
    ee78:	e8bd8010 	pop	{r4, pc}
    ee7c:	e3a03000 	mov	r3, #0
    ee80:	e2211020 	eor	r1, r1, #32
    ee84:	e5c0300a 	strb	r3, [r0, #10]
    ee88:	eaffffe5 	b	ee24 <MiniHDLC::handleChar(unsigned char)+0x24>
    ee8c:	e5903004 	ldr	r3, [r0, #4]
    ee90:	e3530001 	cmp	r3, #1
    ee94:	da00000d 	ble	eed0 <MiniHDLC::handleChar(unsigned char)+0xd0>
    ee98:	e5d02001 	ldrb	r2, [r0, #1]
    ee9c:	e2431002 	sub	r1, r3, #2
    eea0:	e0803003 	add	r3, r0, r3
    eea4:	e0800001 	add	r0, r0, r1
    eea8:	e3520000 	cmp	r2, #0
    eeac:	e5d33017 	ldrb	r3, [r3, #23]
    eeb0:	e5d02018 	ldrb	r2, [r0, #24]
    eeb4:	01823403 	orreq	r3, r2, r3, lsl #8
    eeb8:	11833402 	orrne	r3, r3, r2, lsl #8
    eebc:	e6bf3073 	sxth	r3, r3
    eec0:	e1d420b8 	ldrh	r2, [r4, #8]
    eec4:	e6ff3073 	uxth	r3, r3
    eec8:	e1520003 	cmp	r2, r3
    eecc:	0a000005 	beq	eee8 <MiniHDLC::handleChar(unsigned char)+0xe8>
    eed0:	e3a03000 	mov	r3, #0
    eed4:	e3e02000 	mvn	r2, #0
    eed8:	e5c4300a 	strb	r3, [r4, #10]
    eedc:	e5843004 	str	r3, [r4, #4]
    eee0:	e1c420b8 	strh	r2, [r4, #8]
    eee4:	e8bd8010 	pop	{r4, pc}
    eee8:	e3a02000 	mov	r2, #0
    eeec:	e59f302c 	ldr	r3, [pc, #44]	; ef20 <MiniHDLC::handleChar(unsigned char)+0x120>
    eef0:	e5c02018 	strb	r2, [r0, #24]
    eef4:	e5933004 	ldr	r3, [r3, #4]
    eef8:	e1530002 	cmp	r3, r2
    eefc:	0afffff3 	beq	eed0 <MiniHDLC::handleChar(unsigned char)+0xd0>
    ef00:	e2840018 	add	r0, r4, #24
    ef04:	e12fff33 	blx	r3
    ef08:	eafffff0 	b	eed0 <MiniHDLC::handleChar(unsigned char)+0xd0>
    ef0c:	e3a03001 	mov	r3, #1
    ef10:	e5c0300a 	strb	r3, [r0, #10]
    ef14:	e8bd8010 	pop	{r4, pc}
    ef18:	0002e898 	.word	0x0002e898
    ef1c:	00001388 	.word	0x00001388
    ef20:	00043c88 	.word	0x00043c88

0000ef24 <MiniHDLC::handleBuffer(unsigned char const*, int)>:
    ef24:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    ef28:	e2526000 	subs	r6, r2, #0
    ef2c:	d8bd87f0 	pople	{r4, r5, r6, r7, r8, r9, sl, pc}
    ef30:	e2415001 	sub	r5, r1, #1
    ef34:	e1a04000 	mov	r4, r0
    ef38:	e59f7124 	ldr	r7, [pc, #292]	; f064 <MiniHDLC::handleBuffer(unsigned char const*, int)+0x140>
    ef3c:	e59f8124 	ldr	r8, [pc, #292]	; f068 <MiniHDLC::handleBuffer(unsigned char const*, int)+0x144>
    ef40:	e59f9124 	ldr	r9, [pc, #292]	; f06c <MiniHDLC::handleBuffer(unsigned char const*, int)+0x148>
    ef44:	e0856006 	add	r6, r5, r6
    ef48:	ea00001a 	b	efb8 <MiniHDLC::handleBuffer(unsigned char const*, int)+0x94>
    ef4c:	e5d4300a 	ldrb	r3, [r4, #10]
    ef50:	e3530000 	cmp	r3, #0
    ef54:	0a000033 	beq	f028 <MiniHDLC::handleBuffer(unsigned char const*, int)+0x104>
    ef58:	e3a03000 	mov	r3, #0
    ef5c:	e2222020 	eor	r2, r2, #32
    ef60:	e5c4300a 	strb	r3, [r4, #10]
    ef64:	e5943004 	ldr	r3, [r4, #4]
    ef68:	e0841003 	add	r1, r4, r3
    ef6c:	e3530001 	cmp	r3, #1
    ef70:	e5c12018 	strb	r2, [r1, #24]
    ef74:	da000006 	ble	ef94 <MiniHDLC::handleBuffer(unsigned char const*, int)+0x70>
    ef78:	e5d12016 	ldrb	r2, [r1, #22]
    ef7c:	e1d410b8 	ldrh	r1, [r4, #8]
    ef80:	e0222421 	eor	r2, r2, r1, lsr #8
    ef84:	e1a02082 	lsl	r2, r2, #1
    ef88:	e19820b2 	ldrh	r2, [r8, r2]
    ef8c:	e0222401 	eor	r2, r2, r1, lsl #8
    ef90:	e1c420b8 	strh	r2, [r4, #8]
    ef94:	e2833001 	add	r3, r3, #1
    ef98:	e1530007 	cmp	r3, r7
    ef9c:	03a02000 	moveq	r2, #0
    efa0:	03e03000 	mvneq	r3, #0
    efa4:	15843004 	strne	r3, [r4, #4]
    efa8:	05842004 	streq	r2, [r4, #4]
    efac:	01c430b8 	strheq	r3, [r4, #8]
    efb0:	e1560005 	cmp	r6, r5
    efb4:	08bd87f0 	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
    efb8:	e5f52001 	ldrb	r2, [r5, #1]!
    efbc:	e352007e 	cmp	r2, #126	; 0x7e
    efc0:	1affffe1 	bne	ef4c <MiniHDLC::handleBuffer(unsigned char const*, int)+0x28>
    efc4:	e5943004 	ldr	r3, [r4, #4]
    efc8:	e3530001 	cmp	r3, #1
    efcc:	da00000d 	ble	f008 <MiniHDLC::handleBuffer(unsigned char const*, int)+0xe4>
    efd0:	e5d42001 	ldrb	r2, [r4, #1]
    efd4:	e2431002 	sub	r1, r3, #2
    efd8:	e0840001 	add	r0, r4, r1
    efdc:	e0843003 	add	r3, r4, r3
    efe0:	e3520000 	cmp	r2, #0
    efe4:	e5d33017 	ldrb	r3, [r3, #23]
    efe8:	e5d02018 	ldrb	r2, [r0, #24]
    efec:	01823403 	orreq	r3, r2, r3, lsl #8
    eff0:	11833402 	orrne	r3, r3, r2, lsl #8
    eff4:	e6bf3073 	sxth	r3, r3
    eff8:	e1d420b8 	ldrh	r2, [r4, #8]
    effc:	e6ff3073 	uxth	r3, r3
    f000:	e1520003 	cmp	r2, r3
    f004:	0a00000e 	beq	f044 <MiniHDLC::handleBuffer(unsigned char const*, int)+0x120>
    f008:	e3a03000 	mov	r3, #0
    f00c:	e3e02000 	mvn	r2, #0
    f010:	e1560005 	cmp	r6, r5
    f014:	e5c4300a 	strb	r3, [r4, #10]
    f018:	e5843004 	str	r3, [r4, #4]
    f01c:	e1c420b8 	strh	r2, [r4, #8]
    f020:	1affffe4 	bne	efb8 <MiniHDLC::handleBuffer(unsigned char const*, int)+0x94>
    f024:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    f028:	e352007d 	cmp	r2, #125	; 0x7d
    f02c:	03a03001 	moveq	r3, #1
    f030:	05c4300a 	strbeq	r3, [r4, #10]
    f034:	1affffca 	bne	ef64 <MiniHDLC::handleBuffer(unsigned char const*, int)+0x40>
    f038:	e1560005 	cmp	r6, r5
    f03c:	1affffdd 	bne	efb8 <MiniHDLC::handleBuffer(unsigned char const*, int)+0x94>
    f040:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    f044:	e3a02000 	mov	r2, #0
    f048:	e5993004 	ldr	r3, [r9, #4]
    f04c:	e5c02018 	strb	r2, [r0, #24]
    f050:	e1530002 	cmp	r3, r2
    f054:	0affffeb 	beq	f008 <MiniHDLC::handleBuffer(unsigned char const*, int)+0xe4>
    f058:	e2840018 	add	r0, r4, #24
    f05c:	e12fff33 	blx	r3
    f060:	eaffffe8 	b	f008 <MiniHDLC::handleBuffer(unsigned char const*, int)+0xe4>
    f064:	00001388 	.word	0x00001388
    f068:	0002e898 	.word	0x0002e898
    f06c:	00043c88 	.word	0x00043c88

0000f070 <MiniHDLC::crcUpdateCCITT(unsigned short, unsigned char)>:
    f070:	e59f3014 	ldr	r3, [pc, #20]	; f08c <MiniHDLC::crcUpdateCCITT(unsigned short, unsigned char)+0x1c>
    f074:	e0222421 	eor	r2, r2, r1, lsr #8
    f078:	e1a02082 	lsl	r2, r2, #1
    f07c:	e19300b2 	ldrh	r0, [r3, r2]
    f080:	e0200401 	eor	r0, r0, r1, lsl #8
    f084:	e6ff0070 	uxth	r0, r0
    f088:	e12fff1e 	bx	lr
    f08c:	0002e898 	.word	0x0002e898

0000f090 <MiniHDLC::sendChar(unsigned char)>:
    f090:	e92d4070 	push	{r4, r5, r6, lr}
    f094:	e5d03000 	ldrb	r3, [r0]
    f098:	e59f6048 	ldr	r6, [pc, #72]	; f0e8 <MiniHDLC::sendChar(unsigned char)+0x58>
    f09c:	e3530000 	cmp	r3, #0
    f0a0:	e1a04001 	mov	r4, r1
    f0a4:	e5963000 	ldr	r3, [r6]
    f0a8:	0a000009 	beq	f0d4 <MiniHDLC::sendChar(unsigned char)+0x44>
    f0ac:	e3a05008 	mov	r5, #8
    f0b0:	e3530000 	cmp	r3, #0
    f0b4:	e2040001 	and	r0, r4, #1
    f0b8:	0a000000 	beq	f0c0 <MiniHDLC::sendChar(unsigned char)+0x30>
    f0bc:	e12fff33 	blx	r3
    f0c0:	e2555001 	subs	r5, r5, #1
    f0c4:	e1a040a4 	lsr	r4, r4, #1
    f0c8:	08bd8070 	popeq	{r4, r5, r6, pc}
    f0cc:	e5963000 	ldr	r3, [r6]
    f0d0:	eafffff6 	b	f0b0 <MiniHDLC::sendChar(unsigned char)+0x20>
    f0d4:	e3530000 	cmp	r3, #0
    f0d8:	08bd8070 	popeq	{r4, r5, r6, pc}
    f0dc:	e1a00001 	mov	r0, r1
    f0e0:	e8bd4070 	pop	{r4, r5, r6, lr}
    f0e4:	e12fff13 	bx	r3
    f0e8:	00043c88 	.word	0x00043c88

0000f0ec <MiniHDLC::sendCharWithStuffing(unsigned char)>:
    f0ec:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    f0f0:	e5d03000 	ldrb	r3, [r0]
    f0f4:	e59f7094 	ldr	r7, [pc, #148]	; f190 <MiniHDLC::sendCharWithStuffing(unsigned char)+0xa4>
    f0f8:	e3530000 	cmp	r3, #0
    f0fc:	e1a04001 	mov	r4, r1
    f100:	e5973000 	ldr	r3, [r7]
    f104:	0a00001c 	beq	f17c <MiniHDLC::sendCharWithStuffing(unsigned char)+0x90>
    f108:	e1a09000 	mov	r9, r0
    f10c:	e3a05008 	mov	r5, #8
    f110:	e3a08000 	mov	r8, #0
    f114:	ea000008 	b	f13c <MiniHDLC::sendCharWithStuffing(unsigned char)+0x50>
    f118:	e5993014 	ldr	r3, [r9, #20]
    f11c:	e2833001 	add	r3, r3, #1
    f120:	e3530005 	cmp	r3, #5
    f124:	e5893014 	str	r3, [r9, #20]
    f128:	0a00000c 	beq	f160 <MiniHDLC::sendCharWithStuffing(unsigned char)+0x74>
    f12c:	e2555001 	subs	r5, r5, #1
    f130:	e1a040a4 	lsr	r4, r4, #1
    f134:	08bd87f0 	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
    f138:	e5973000 	ldr	r3, [r7]
    f13c:	e3530000 	cmp	r3, #0
    f140:	e2046001 	and	r6, r4, #1
    f144:	0a000001 	beq	f150 <MiniHDLC::sendCharWithStuffing(unsigned char)+0x64>
    f148:	e1a00006 	mov	r0, r6
    f14c:	e12fff33 	blx	r3
    f150:	e3560000 	cmp	r6, #0
    f154:	1affffef 	bne	f118 <MiniHDLC::sendCharWithStuffing(unsigned char)+0x2c>
    f158:	e5898014 	str	r8, [r9, #20]
    f15c:	eafffff2 	b	f12c <MiniHDLC::sendCharWithStuffing(unsigned char)+0x40>
    f160:	e5973000 	ldr	r3, [r7]
    f164:	e3530000 	cmp	r3, #0
    f168:	0afffffa 	beq	f158 <MiniHDLC::sendCharWithStuffing(unsigned char)+0x6c>
    f16c:	e3a00000 	mov	r0, #0
    f170:	e12fff33 	blx	r3
    f174:	e5898014 	str	r8, [r9, #20]
    f178:	eaffffeb 	b	f12c <MiniHDLC::sendCharWithStuffing(unsigned char)+0x40>
    f17c:	e3530000 	cmp	r3, #0
    f180:	08bd87f0 	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
    f184:	e1a00001 	mov	r0, r1
    f188:	e8bd47f0 	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
    f18c:	e12fff13 	bx	r3
    f190:	00043c88 	.word	0x00043c88

0000f194 <MiniHDLC::sendEscaped(unsigned char)>:
    f194:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    f198:	e241307d 	sub	r3, r1, #125	; 0x7d
    f19c:	e59f7170 	ldr	r7, [pc, #368]	; f314 <MiniHDLC::sendEscaped(unsigned char)+0x180>
    f1a0:	e3530001 	cmp	r3, #1
    f1a4:	e1a04001 	mov	r4, r1
    f1a8:	e1a09000 	mov	r9, r0
    f1ac:	e5d02000 	ldrb	r2, [r0]
    f1b0:	e5973000 	ldr	r3, [r7]
    f1b4:	9a00001d 	bls	f230 <MiniHDLC::sendEscaped(unsigned char)+0x9c>
    f1b8:	e3520000 	cmp	r2, #0
    f1bc:	0a000039 	beq	f2a8 <MiniHDLC::sendEscaped(unsigned char)+0x114>
    f1c0:	e3a05008 	mov	r5, #8
    f1c4:	e3a08000 	mov	r8, #0
    f1c8:	ea000008 	b	f1f0 <MiniHDLC::sendEscaped(unsigned char)+0x5c>
    f1cc:	e5993014 	ldr	r3, [r9, #20]
    f1d0:	e2833001 	add	r3, r3, #1
    f1d4:	e3530005 	cmp	r3, #5
    f1d8:	e5893014 	str	r3, [r9, #20]
    f1dc:	0a00000c 	beq	f214 <MiniHDLC::sendEscaped(unsigned char)+0x80>
    f1e0:	e2555001 	subs	r5, r5, #1
    f1e4:	e1a040a4 	lsr	r4, r4, #1
    f1e8:	08bd87f0 	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
    f1ec:	e5973000 	ldr	r3, [r7]
    f1f0:	e3530000 	cmp	r3, #0
    f1f4:	e2046001 	and	r6, r4, #1
    f1f8:	0a000001 	beq	f204 <MiniHDLC::sendEscaped(unsigned char)+0x70>
    f1fc:	e1a00006 	mov	r0, r6
    f200:	e12fff33 	blx	r3
    f204:	e3560000 	cmp	r6, #0
    f208:	1affffef 	bne	f1cc <MiniHDLC::sendEscaped(unsigned char)+0x38>
    f20c:	e5898014 	str	r8, [r9, #20]
    f210:	eafffff2 	b	f1e0 <MiniHDLC::sendEscaped(unsigned char)+0x4c>
    f214:	e5973000 	ldr	r3, [r7]
    f218:	e3530000 	cmp	r3, #0
    f21c:	0afffffa 	beq	f20c <MiniHDLC::sendEscaped(unsigned char)+0x78>
    f220:	e3a00000 	mov	r0, #0
    f224:	e12fff33 	blx	r3
    f228:	e5898014 	str	r8, [r9, #20]
    f22c:	eaffffeb 	b	f1e0 <MiniHDLC::sendEscaped(unsigned char)+0x4c>
    f230:	e3520000 	cmp	r2, #0
    f234:	0a00002f 	beq	f2f8 <MiniHDLC::sendEscaped(unsigned char)+0x164>
    f238:	e3a06008 	mov	r6, #8
    f23c:	e3a0507d 	mov	r5, #125	; 0x7d
    f240:	e3a0a000 	mov	sl, #0
    f244:	ea000007 	b	f268 <MiniHDLC::sendEscaped(unsigned char)+0xd4>
    f248:	e5992014 	ldr	r2, [r9, #20]
    f24c:	e2822001 	add	r2, r2, #1
    f250:	e3520005 	cmp	r2, #5
    f254:	e5892014 	str	r2, [r9, #20]
    f258:	0a000017 	beq	f2bc <MiniHDLC::sendEscaped(unsigned char)+0x128>
    f25c:	e2566001 	subs	r6, r6, #1
    f260:	e1a050a5 	lsr	r5, r5, #1
    f264:	0a00000b 	beq	f298 <MiniHDLC::sendEscaped(unsigned char)+0x104>
    f268:	e3530000 	cmp	r3, #0
    f26c:	e2058001 	and	r8, r5, #1
    f270:	0a000018 	beq	f2d8 <MiniHDLC::sendEscaped(unsigned char)+0x144>
    f274:	e1a00008 	mov	r0, r8
    f278:	e12fff33 	blx	r3
    f27c:	e3580000 	cmp	r8, #0
    f280:	e5973000 	ldr	r3, [r7]
    f284:	1affffef 	bne	f248 <MiniHDLC::sendEscaped(unsigned char)+0xb4>
    f288:	e589a014 	str	sl, [r9, #20]
    f28c:	e2566001 	subs	r6, r6, #1
    f290:	e1a050a5 	lsr	r5, r5, #1
    f294:	1afffff3 	bne	f268 <MiniHDLC::sendEscaped(unsigned char)+0xd4>
    f298:	e5d92000 	ldrb	r2, [r9]
    f29c:	e3520000 	cmp	r2, #0
    f2a0:	e2244020 	eor	r4, r4, #32
    f2a4:	1affffc5 	bne	f1c0 <MiniHDLC::sendEscaped(unsigned char)+0x2c>
    f2a8:	e3530000 	cmp	r3, #0
    f2ac:	08bd87f0 	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
    f2b0:	e1a00004 	mov	r0, r4
    f2b4:	e8bd47f0 	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
    f2b8:	e12fff13 	bx	r3
    f2bc:	e3530000 	cmp	r3, #0
    f2c0:	0afffff0 	beq	f288 <MiniHDLC::sendEscaped(unsigned char)+0xf4>
    f2c4:	e3a00000 	mov	r0, #0
    f2c8:	e12fff33 	blx	r3
    f2cc:	e5973000 	ldr	r3, [r7]
    f2d0:	e589a014 	str	sl, [r9, #20]
    f2d4:	eaffffec 	b	f28c <MiniHDLC::sendEscaped(unsigned char)+0xf8>
    f2d8:	e3580000 	cmp	r8, #0
    f2dc:	0affffe9 	beq	f288 <MiniHDLC::sendEscaped(unsigned char)+0xf4>
    f2e0:	e5992014 	ldr	r2, [r9, #20]
    f2e4:	e2822001 	add	r2, r2, #1
    f2e8:	e3520005 	cmp	r2, #5
    f2ec:	e5892014 	str	r2, [r9, #20]
    f2f0:	1affffd9 	bne	f25c <MiniHDLC::sendEscaped(unsigned char)+0xc8>
    f2f4:	eaffffe3 	b	f288 <MiniHDLC::sendEscaped(unsigned char)+0xf4>
    f2f8:	e3530000 	cmp	r3, #0
    f2fc:	08bd87f0 	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
    f300:	e3a0007d 	mov	r0, #125	; 0x7d
    f304:	e12fff33 	blx	r3
    f308:	e5d92000 	ldrb	r2, [r9]
    f30c:	e5973000 	ldr	r3, [r7]
    f310:	eaffffe1 	b	f29c <MiniHDLC::sendEscaped(unsigned char)+0x108>
    f314:	00043c88 	.word	0x00043c88

0000f318 <MiniHDLC::sendFrame(unsigned char const*, int)>:
    f318:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    f31c:	e5d03000 	ldrb	r3, [r0]
    f320:	e59f62c4 	ldr	r6, [pc, #708]	; f5ec <MiniHDLC::sendFrame(unsigned char const*, int)+0x2d4>
    f324:	e3530000 	cmp	r3, #0
    f328:	e24dd014 	sub	sp, sp, #20
    f32c:	e1a05000 	mov	r5, r0
    f330:	e1a09001 	mov	r9, r1
    f334:	e1a04002 	mov	r4, r2
    f338:	e5963000 	ldr	r3, [r6]
    f33c:	0a00008b 	beq	f570 <MiniHDLC::sendFrame(unsigned char const*, int)+0x258>
    f340:	e3a08008 	mov	r8, #8
    f344:	e3a0707e 	mov	r7, #126	; 0x7e
    f348:	ea000000 	b	f350 <MiniHDLC::sendFrame(unsigned char const*, int)+0x38>
    f34c:	e5963000 	ldr	r3, [r6]
    f350:	e3530000 	cmp	r3, #0
    f354:	e2070001 	and	r0, r7, #1
    f358:	0a000000 	beq	f360 <MiniHDLC::sendFrame(unsigned char const*, int)+0x48>
    f35c:	e12fff33 	blx	r3
    f360:	e2588001 	subs	r8, r8, #1
    f364:	e1a070a7 	lsr	r7, r7, #1
    f368:	1afffff7 	bne	f34c <MiniHDLC::sendFrame(unsigned char const*, int)+0x34>
    f36c:	e3540000 	cmp	r4, #0
    f370:	0a000084 	beq	f588 <MiniHDLC::sendFrame(unsigned char const*, int)+0x270>
    f374:	e3a08000 	mov	r8, #0
    f378:	e0893004 	add	r3, r9, r4
    f37c:	e59f726c 	ldr	r7, [pc, #620]	; f5f0 <MiniHDLC::sendFrame(unsigned char const*, int)+0x2d8>
    f380:	e58d3008 	str	r3, [sp, #8]
    f384:	e4d94001 	ldrb	r4, [r9], #1
    f388:	e59f1264 	ldr	r1, [pc, #612]	; f5f4 <MiniHDLC::sendFrame(unsigned char const*, int)+0x2dc>
    f38c:	e0243427 	eor	r3, r4, r7, lsr #8
    f390:	e1a03083 	lsl	r3, r3, #1
    f394:	e191b0b3 	ldrh	fp, [r1, r3]
    f398:	e244307d 	sub	r3, r4, #125	; 0x7d
    f39c:	e02bb407 	eor	fp, fp, r7, lsl #8
    f3a0:	e6bf107b 	sxth	r1, fp
    f3a4:	e3530001 	cmp	r3, #1
    f3a8:	e5d52000 	ldrb	r2, [r5]
    f3ac:	e58d1004 	str	r1, [sp, #4]
    f3b0:	e6ff7071 	uxth	r7, r1
    f3b4:	e5963000 	ldr	r3, [r6]
    f3b8:	9a00003c 	bls	f4b0 <MiniHDLC::sendFrame(unsigned char const*, int)+0x198>
    f3bc:	e3520000 	cmp	r2, #0
    f3c0:	0a00005b 	beq	f534 <MiniHDLC::sendFrame(unsigned char const*, int)+0x21c>
    f3c4:	e3a0a008 	mov	sl, #8
    f3c8:	ea000008 	b	f3f0 <MiniHDLC::sendFrame(unsigned char const*, int)+0xd8>
    f3cc:	e5953014 	ldr	r3, [r5, #20]
    f3d0:	e2833001 	add	r3, r3, #1
    f3d4:	e3530005 	cmp	r3, #5
    f3d8:	e5853014 	str	r3, [r5, #20]
    f3dc:	0a00002c 	beq	f494 <MiniHDLC::sendFrame(unsigned char const*, int)+0x17c>
    f3e0:	e25aa001 	subs	sl, sl, #1
    f3e4:	e1a040a4 	lsr	r4, r4, #1
    f3e8:	0a00000b 	beq	f41c <MiniHDLC::sendFrame(unsigned char const*, int)+0x104>
    f3ec:	e5963000 	ldr	r3, [r6]
    f3f0:	e3530000 	cmp	r3, #0
    f3f4:	e204b001 	and	fp, r4, #1
    f3f8:	0a000001 	beq	f404 <MiniHDLC::sendFrame(unsigned char const*, int)+0xec>
    f3fc:	e1a0000b 	mov	r0, fp
    f400:	e12fff33 	blx	r3
    f404:	e35b0000 	cmp	fp, #0
    f408:	1affffef 	bne	f3cc <MiniHDLC::sendFrame(unsigned char const*, int)+0xb4>
    f40c:	e5858014 	str	r8, [r5, #20]
    f410:	e25aa001 	subs	sl, sl, #1
    f414:	e1a040a4 	lsr	r4, r4, #1
    f418:	1afffff3 	bne	f3ec <MiniHDLC::sendFrame(unsigned char const*, int)+0xd4>
    f41c:	e59d3008 	ldr	r3, [sp, #8]
    f420:	e1590003 	cmp	r9, r3
    f424:	1affffd6 	bne	f384 <MiniHDLC::sendFrame(unsigned char const*, int)+0x6c>
    f428:	e5dd1004 	ldrb	r1, [sp, #4]
    f42c:	e1a07427 	lsr	r7, r7, #8
    f430:	e5d53001 	ldrb	r3, [r5, #1]
    f434:	e1a00005 	mov	r0, r5
    f438:	e3530000 	cmp	r3, #0
    f43c:	11a04001 	movne	r4, r1
    f440:	01a04007 	moveq	r4, r7
    f444:	11a01007 	movne	r1, r7
    f448:	ebffff51 	bl	f194 <MiniHDLC::sendEscaped(unsigned char)>
    f44c:	e1a01004 	mov	r1, r4
    f450:	e1a00005 	mov	r0, r5
    f454:	ebffff4e 	bl	f194 <MiniHDLC::sendEscaped(unsigned char)>
    f458:	e5d53000 	ldrb	r3, [r5]
    f45c:	e3530000 	cmp	r3, #0
    f460:	0a00004b 	beq	f594 <MiniHDLC::sendFrame(unsigned char const*, int)+0x27c>
    f464:	e3a05008 	mov	r5, #8
    f468:	e3a0407e 	mov	r4, #126	; 0x7e
    f46c:	e5963000 	ldr	r3, [r6]
    f470:	e2040001 	and	r0, r4, #1
    f474:	e3530000 	cmp	r3, #0
    f478:	0a000000 	beq	f480 <MiniHDLC::sendFrame(unsigned char const*, int)+0x168>
    f47c:	e12fff33 	blx	r3
    f480:	e2555001 	subs	r5, r5, #1
    f484:	e1a040a4 	lsr	r4, r4, #1
    f488:	1afffff7 	bne	f46c <MiniHDLC::sendFrame(unsigned char const*, int)+0x154>
    f48c:	e28dd014 	add	sp, sp, #20
    f490:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    f494:	e5963000 	ldr	r3, [r6]
    f498:	e3530000 	cmp	r3, #0
    f49c:	0affffda 	beq	f40c <MiniHDLC::sendFrame(unsigned char const*, int)+0xf4>
    f4a0:	e3a00000 	mov	r0, #0
    f4a4:	e12fff33 	blx	r3
    f4a8:	e5858014 	str	r8, [r5, #20]
    f4ac:	eaffffd7 	b	f410 <MiniHDLC::sendFrame(unsigned char const*, int)+0xf8>
    f4b0:	e3520000 	cmp	r2, #0
    f4b4:	0a000045 	beq	f5d0 <MiniHDLC::sendFrame(unsigned char const*, int)+0x2b8>
    f4b8:	e58d400c 	str	r4, [sp, #12]
    f4bc:	e3a0a008 	mov	sl, #8
    f4c0:	e3a0b07d 	mov	fp, #125	; 0x7d
    f4c4:	e1a04005 	mov	r4, r5
    f4c8:	ea000007 	b	f4ec <MiniHDLC::sendFrame(unsigned char const*, int)+0x1d4>
    f4cc:	e5942014 	ldr	r2, [r4, #20]
    f4d0:	e2822001 	add	r2, r2, #1
    f4d4:	e3520005 	cmp	r2, #5
    f4d8:	e5842014 	str	r2, [r4, #20]
    f4dc:	0a00001c 	beq	f554 <MiniHDLC::sendFrame(unsigned char const*, int)+0x23c>
    f4e0:	e25aa001 	subs	sl, sl, #1
    f4e4:	e1a0b0ab 	lsr	fp, fp, #1
    f4e8:	0a00000b 	beq	f51c <MiniHDLC::sendFrame(unsigned char const*, int)+0x204>
    f4ec:	e3530000 	cmp	r3, #0
    f4f0:	e20b5001 	and	r5, fp, #1
    f4f4:	0a00002d 	beq	f5b0 <MiniHDLC::sendFrame(unsigned char const*, int)+0x298>
    f4f8:	e1a00005 	mov	r0, r5
    f4fc:	e12fff33 	blx	r3
    f500:	e3550000 	cmp	r5, #0
    f504:	e5963000 	ldr	r3, [r6]
    f508:	1affffef 	bne	f4cc <MiniHDLC::sendFrame(unsigned char const*, int)+0x1b4>
    f50c:	e5848014 	str	r8, [r4, #20]
    f510:	e25aa001 	subs	sl, sl, #1
    f514:	e1a0b0ab 	lsr	fp, fp, #1
    f518:	1afffff3 	bne	f4ec <MiniHDLC::sendFrame(unsigned char const*, int)+0x1d4>
    f51c:	e1a05004 	mov	r5, r4
    f520:	e59d400c 	ldr	r4, [sp, #12]
    f524:	e5d52000 	ldrb	r2, [r5]
    f528:	e3520000 	cmp	r2, #0
    f52c:	e2244020 	eor	r4, r4, #32
    f530:	1affffa3 	bne	f3c4 <MiniHDLC::sendFrame(unsigned char const*, int)+0xac>
    f534:	e3530000 	cmp	r3, #0
    f538:	0affffb7 	beq	f41c <MiniHDLC::sendFrame(unsigned char const*, int)+0x104>
    f53c:	e1a00004 	mov	r0, r4
    f540:	e12fff33 	blx	r3
    f544:	e59d3008 	ldr	r3, [sp, #8]
    f548:	e1590003 	cmp	r9, r3
    f54c:	1affff8c 	bne	f384 <MiniHDLC::sendFrame(unsigned char const*, int)+0x6c>
    f550:	eaffffb4 	b	f428 <MiniHDLC::sendFrame(unsigned char const*, int)+0x110>
    f554:	e3530000 	cmp	r3, #0
    f558:	0affffeb 	beq	f50c <MiniHDLC::sendFrame(unsigned char const*, int)+0x1f4>
    f55c:	e3a00000 	mov	r0, #0
    f560:	e12fff33 	blx	r3
    f564:	e5963000 	ldr	r3, [r6]
    f568:	e5848014 	str	r8, [r4, #20]
    f56c:	eaffffe7 	b	f510 <MiniHDLC::sendFrame(unsigned char const*, int)+0x1f8>
    f570:	e3530000 	cmp	r3, #0
    f574:	0affff7c 	beq	f36c <MiniHDLC::sendFrame(unsigned char const*, int)+0x54>
    f578:	e3a0007e 	mov	r0, #126	; 0x7e
    f57c:	e12fff33 	blx	r3
    f580:	e3540000 	cmp	r4, #0
    f584:	1affff7a 	bne	f374 <MiniHDLC::sendFrame(unsigned char const*, int)+0x5c>
    f588:	e3a070ff 	mov	r7, #255	; 0xff
    f58c:	e1a01007 	mov	r1, r7
    f590:	eaffffa6 	b	f430 <MiniHDLC::sendFrame(unsigned char const*, int)+0x118>
    f594:	e5963000 	ldr	r3, [r6]
    f598:	e3530000 	cmp	r3, #0
    f59c:	0affffba 	beq	f48c <MiniHDLC::sendFrame(unsigned char const*, int)+0x174>
    f5a0:	e3a0007e 	mov	r0, #126	; 0x7e
    f5a4:	e28dd014 	add	sp, sp, #20
    f5a8:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    f5ac:	e12fff13 	bx	r3
    f5b0:	e3550000 	cmp	r5, #0
    f5b4:	0affffd4 	beq	f50c <MiniHDLC::sendFrame(unsigned char const*, int)+0x1f4>
    f5b8:	e5942014 	ldr	r2, [r4, #20]
    f5bc:	e2822001 	add	r2, r2, #1
    f5c0:	e3520005 	cmp	r2, #5
    f5c4:	e5842014 	str	r2, [r4, #20]
    f5c8:	1affffc4 	bne	f4e0 <MiniHDLC::sendFrame(unsigned char const*, int)+0x1c8>
    f5cc:	eaffffce 	b	f50c <MiniHDLC::sendFrame(unsigned char const*, int)+0x1f4>
    f5d0:	e3530000 	cmp	r3, #0
    f5d4:	0affff90 	beq	f41c <MiniHDLC::sendFrame(unsigned char const*, int)+0x104>
    f5d8:	e3a0007d 	mov	r0, #125	; 0x7d
    f5dc:	e12fff33 	blx	r3
    f5e0:	e5d52000 	ldrb	r2, [r5]
    f5e4:	e5963000 	ldr	r3, [r6]
    f5e8:	eaffffce 	b	f528 <MiniHDLC::sendFrame(unsigned char const*, int)+0x210>
    f5ec:	00043c88 	.word	0x00043c88
    f5f0:	0000ffff 	.word	0x0000ffff
    f5f4:	0002e898 	.word	0x0002e898

0000f5f8 <make_byte(int, char*, int)>:
    f5f8:	e3500001 	cmp	r0, #1
    f5fc:	0a00000b 	beq	f630 <make_byte(int, char*, int)+0x38>
    f600:	e3500002 	cmp	r0, #2
    f604:	0a000005 	beq	f620 <make_byte(int, char*, int)+0x28>
    f608:	e3500000 	cmp	r0, #0
    f60c:	112fff1e 	bxne	lr
    f610:	e1a00001 	mov	r0, r1
    f614:	e6ef2072 	uxtb	r2, r2
    f618:	e59f1020 	ldr	r1, [pc, #32]	; f640 <make_byte(int, char*, int)+0x48>
    f61c:	eaffe8e4 	b	99b4 <ee_sprintf>
    f620:	e1a00001 	mov	r0, r1
    f624:	e6ef2072 	uxtb	r2, r2
    f628:	e59f1014 	ldr	r1, [pc, #20]	; f644 <make_byte(int, char*, int)+0x4c>
    f62c:	eaffe8e0 	b	99b4 <ee_sprintf>
    f630:	e1a00001 	mov	r0, r1
    f634:	e6ef2072 	uxtb	r2, r2
    f638:	e59f1008 	ldr	r1, [pc, #8]	; f648 <make_byte(int, char*, int)+0x50>
    f63c:	eaffe8dc 	b	99b4 <ee_sprintf>
    f640:	0002eac0 	.word	0x0002eac0
    f644:	0002ead0 	.word	0x0002ead0
    f648:	0002eac8 	.word	0x0002eac8

0000f64c <make_ofs_byte(int, char*, int)>:
    f64c:	e352007f 	cmp	r2, #127	; 0x7f
    f650:	c3a0302d 	movgt	r3, #45	; 0x2d
    f654:	d3a0302b 	movle	r3, #43	; 0x2b
    f658:	c22220ff 	eorgt	r2, r2, #255	; 0xff
    f65c:	c2822001 	addgt	r2, r2, #1
    f660:	e3500001 	cmp	r0, #1
    f664:	e4c13001 	strb	r3, [r1], #1
    f668:	0a00000b 	beq	f69c <make_ofs_byte(int, char*, int)+0x50>
    f66c:	e3500002 	cmp	r0, #2
    f670:	0a000005 	beq	f68c <make_ofs_byte(int, char*, int)+0x40>
    f674:	e3500000 	cmp	r0, #0
    f678:	112fff1e 	bxne	lr
    f67c:	e1a00001 	mov	r0, r1
    f680:	e6ef2072 	uxtb	r2, r2
    f684:	e59f1020 	ldr	r1, [pc, #32]	; f6ac <make_ofs_byte(int, char*, int)+0x60>
    f688:	eaffe8c9 	b	99b4 <ee_sprintf>
    f68c:	e1a00001 	mov	r0, r1
    f690:	e6ef2072 	uxtb	r2, r2
    f694:	e59f1014 	ldr	r1, [pc, #20]	; f6b0 <make_ofs_byte(int, char*, int)+0x64>
    f698:	eaffe8c5 	b	99b4 <ee_sprintf>
    f69c:	e1a00001 	mov	r0, r1
    f6a0:	e6ef2072 	uxtb	r2, r2
    f6a4:	e59f1008 	ldr	r1, [pc, #8]	; f6b4 <make_ofs_byte(int, char*, int)+0x68>
    f6a8:	eaffe8c1 	b	99b4 <ee_sprintf>
    f6ac:	0002eac0 	.word	0x0002eac0
    f6b0:	0002ead0 	.word	0x0002ead0
    f6b4:	0002eac8 	.word	0x0002eac8

0000f6b8 <make_word(int, char*, int)>:
    f6b8:	e3500001 	cmp	r0, #1
    f6bc:	0a00000b 	beq	f6f0 <make_word(int, char*, int)+0x38>
    f6c0:	e3500002 	cmp	r0, #2
    f6c4:	0a000005 	beq	f6e0 <make_word(int, char*, int)+0x28>
    f6c8:	e3500000 	cmp	r0, #0
    f6cc:	112fff1e 	bxne	lr
    f6d0:	e1a00001 	mov	r0, r1
    f6d4:	e6ff2072 	uxth	r2, r2
    f6d8:	e59f1020 	ldr	r1, [pc, #32]	; f700 <make_word(int, char*, int)+0x48>
    f6dc:	eaffe8b4 	b	99b4 <ee_sprintf>
    f6e0:	e1a00001 	mov	r0, r1
    f6e4:	e6ff2072 	uxth	r2, r2
    f6e8:	e59f1014 	ldr	r1, [pc, #20]	; f704 <make_word(int, char*, int)+0x4c>
    f6ec:	eaffe8b0 	b	99b4 <ee_sprintf>
    f6f0:	e1a00001 	mov	r0, r1
    f6f4:	e6ff2072 	uxth	r2, r2
    f6f8:	e59f1008 	ldr	r1, [pc, #8]	; f708 <make_word(int, char*, int)+0x50>
    f6fc:	eaffe8ac 	b	99b4 <ee_sprintf>
    f700:	0002ead8 	.word	0x0002ead8
    f704:	0002eae8 	.word	0x0002eae8
    f708:	0002eae0 	.word	0x0002eae0

0000f70c <getOPdata(unsigned char*, unsigned long)>:
    f70c:	e92d4030 	push	{r4, r5, lr}
    f710:	e59f3090 	ldr	r3, [pc, #144]	; f7a8 <getOPdata(unsigned char*, unsigned long)+0x9c>
    f714:	e24dd014 	sub	sp, sp, #20
    f718:	e0804001 	add	r4, r0, r1
    f71c:	e8930007 	ldm	r3, {r0, r1, r2}
    f720:	e28d3010 	add	r3, sp, #16
    f724:	e9030007 	stmdb	r3, {r0, r1, r2}
    f728:	e59d3004 	ldr	r3, [sp, #4]
    f72c:	e59f0078 	ldr	r0, [pc, #120]	; f7ac <getOPdata(unsigned char*, unsigned long)+0xa0>
    f730:	e7d42003 	ldrb	r2, [r4, r3]
    f734:	e1a0c182 	lsl	ip, r2, #3
    f738:	e04c3002 	sub	r3, ip, r2
    f73c:	e7903103 	ldr	r3, [r0, r3, lsl #2]
    f740:	e3530000 	cmp	r3, #0
    f744:	a3a03000 	movge	r3, #0
    f748:	aa000011 	bge	f794 <getOPdata(unsigned char*, unsigned long)+0x88>
    f74c:	e59d2008 	ldr	r2, [sp, #8]
    f750:	e263e000 	rsb	lr, r3, #0
    f754:	e7d42002 	ldrb	r2, [r4, r2]
    f758:	e1a0318e 	lsl	r3, lr, #3
    f75c:	e043100e 	sub	r1, r3, lr
    f760:	e1a0c182 	lsl	ip, r2, #3
    f764:	e04c5002 	sub	r5, ip, r2
    f768:	e1a01501 	lsl	r1, r1, #10
    f76c:	e0811105 	add	r1, r1, r5, lsl #2
    f770:	e7901001 	ldr	r1, [r0, r1]
    f774:	e3510000 	cmp	r1, #0
    f778:	b59d300c 	ldrlt	r3, [sp, #12]
    f77c:	b261e000 	rsblt	lr, r1, #0
    f780:	b7d42003 	ldrblt	r2, [r4, r3]
    f784:	b1a0318e 	lsllt	r3, lr, #3
    f788:	e043300e 	sub	r3, r3, lr
    f78c:	b1a0c182 	lsllt	ip, r2, #3
    f790:	e1a03503 	lsl	r3, r3, #10
    f794:	e04c2002 	sub	r2, ip, r2
    f798:	e0833102 	add	r3, r3, r2, lsl #2
    f79c:	e0800003 	add	r0, r0, r3
    f7a0:	e28dd014 	add	sp, sp, #20
    f7a4:	e8bd8030 	pop	{r4, r5, pc}
    f7a8:	0002ea98 	.word	0x0002ea98
    f7ac:	00035c6c 	.word	0x00035c6c

0000f7b0 <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)>:
    f7b0:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    f7b4:	e1a04001 	mov	r4, r1
    f7b8:	e1a0b002 	mov	fp, r2
    f7bc:	e1a06003 	mov	r6, r3
    f7c0:	e24ddf4f 	sub	sp, sp, #316	; 0x13c
    f7c4:	e59fe9b8 	ldr	lr, [pc, #2488]	; 10184 <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0x9d4>
    f7c8:	e28dc01c 	add	ip, sp, #28
    f7cc:	e58d1010 	str	r1, [sp, #16]
    f7d0:	e58d0004 	str	r0, [sp, #4]
    f7d4:	e8be000f 	ldm	lr!, {r0, r1, r2, r3}
    f7d8:	e8ac000f 	stmia	ip!, {r0, r1, r2, r3}
    f7dc:	e89e0007 	ldm	lr, {r0, r1, r2}
    f7e0:	e59d5168 	ldr	r5, [sp, #360]	; 0x168
    f7e4:	e88c0007 	stm	ip, {r0, r1, r2}
    f7e8:	e3550000 	cmp	r5, #0
    f7ec:	e084200b 	add	r2, r4, fp
    f7f0:	159f1990 	ldrne	r1, [pc, #2448]	; 10188 <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0x9d8>
    f7f4:	059f1990 	ldreq	r1, [pc, #2448]	; 1018c <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0x9dc>
    f7f8:	e1a00006 	mov	r0, r6
    f7fc:	e59da164 	ldr	sl, [sp, #356]	; 0x164
    f800:	ebffe86b 	bl	99b4 <ee_sprintf>
    f804:	e59f3984 	ldr	r3, [pc, #2436]	; 10190 <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0x9e0>
    f808:	e28d9038 	add	r9, sp, #56	; 0x38
    f80c:	e1a04000 	mov	r4, r0
    f810:	e8930007 	ldm	r3, {r0, r1, r2}
    f814:	e8890007 	stm	r9, {r0, r1, r2}
    f818:	e59d2004 	ldr	r2, [sp, #4]
    f81c:	e59f7970 	ldr	r7, [pc, #2416]	; 10194 <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0x9e4>
    f820:	e082e00b 	add	lr, r2, fp
    f824:	e7de2000 	ldrb	r2, [lr, r0]
    f828:	e1a01182 	lsl	r1, r2, #3
    f82c:	e0413002 	sub	r3, r1, r2
    f830:	e7970103 	ldr	r0, [r7, r3, lsl #2]
    f834:	e3500000 	cmp	r0, #0
    f838:	aa00010e 	bge	fc78 <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0x4c8>
    f83c:	e59d303c 	ldr	r3, [sp, #60]	; 0x3c
    f840:	e2600000 	rsb	r0, r0, #0
    f844:	e7de2003 	ldrb	r2, [lr, r3]
    f848:	e1a03180 	lsl	r3, r0, #3
    f84c:	e043c000 	sub	ip, r3, r0
    f850:	e1a01182 	lsl	r1, r2, #3
    f854:	e0418002 	sub	r8, r1, r2
    f858:	e1a0c50c 	lsl	ip, ip, #10
    f85c:	e08cc108 	add	ip, ip, r8, lsl #2
    f860:	e797c00c 	ldr	ip, [r7, ip]
    f864:	e35c0000 	cmp	ip, #0
    f868:	b59d3040 	ldrlt	r3, [sp, #64]	; 0x40
    f86c:	b26c0000 	rsblt	r0, ip, #0
    f870:	b7de2003 	ldrblt	r2, [lr, r3]
    f874:	b1a03180 	lsllt	r3, r0, #3
    f878:	e0433000 	sub	r3, r3, r0
    f87c:	b1a01182 	lsllt	r1, r2, #3
    f880:	e1a03503 	lsl	r3, r3, #10
    f884:	e0412002 	sub	r2, r1, r2
    f888:	e0832102 	add	r2, r3, r2, lsl #2
    f88c:	e35a0000 	cmp	sl, #0
    f890:	e0877002 	add	r7, r7, r2
    f894:	0a000003 	beq	f8a8 <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0xf8>
    f898:	e59d3004 	ldr	r3, [sp, #4]
    f89c:	e7d3300b 	ldrb	r3, [r3, fp]
    f8a0:	e35300ff 	cmp	r3, #255	; 0xff
    f8a4:	0a0000fa 	beq	fc94 <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0x4e4>
    f8a8:	e3550000 	cmp	r5, #0
    f8ac:	0a00006e 	beq	fa6c <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0x2bc>
    f8b0:	e59f38e0 	ldr	r3, [pc, #2272]	; 10198 <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0x9e8>
    f8b4:	e086a004 	add	sl, r6, r4
    f8b8:	e1a02003 	mov	r2, r3
    f8bc:	e58d3008 	str	r3, [sp, #8]
    f8c0:	e5973008 	ldr	r3, [r7, #8]
    f8c4:	e7928103 	ldr	r8, [r2, r3, lsl #2]
    f8c8:	e1a05008 	mov	r5, r8
    f8cc:	ea000002 	b	f8dc <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0x12c>
    f8d0:	e4d50001 	ldrb	r0, [r5], #1
    f8d4:	eb0077a7 	bl	2d778 <toupper>
    f8d8:	e4ca0001 	strb	r0, [sl], #1
    f8dc:	e1a00008 	mov	r0, r8
    f8e0:	eb0073ad 	bl	2c79c <strlen>
    f8e4:	e0453008 	sub	r3, r5, r8
    f8e8:	e1530000 	cmp	r3, r0
    f8ec:	e2844001 	add	r4, r4, #1
    f8f0:	3afffff6 	bcc	f8d0 <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0x120>
    f8f4:	e3a03020 	mov	r3, #32
    f8f8:	e5ca3000 	strb	r3, [sl]
    f8fc:	e597300c 	ldr	r3, [r7, #12]
    f900:	e3530000 	cmp	r3, #0
    f904:	0a000045 	beq	fa20 <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0x270>
    f908:	e287a010 	add	sl, r7, #16
    f90c:	e5973004 	ldr	r3, [r7, #4]
    f910:	da000042 	ble	fa20 <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0x270>
    f914:	e58db00c 	str	fp, [sp, #12]
    f918:	e3a08000 	mov	r8, #0
    f91c:	e3a05020 	mov	r5, #32
    f920:	e1a0b003 	mov	fp, r3
    f924:	e59a2000 	ldr	r2, [sl]
    f928:	e0863004 	add	r3, r6, r4
    f92c:	e35200ff 	cmp	r2, #255	; 0xff
    f930:	e1a01003 	mov	r1, r3
    f934:	da00006c 	ble	faec <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0x33c>
    f938:	e3520f41 	cmp	r2, #260	; 0x104
    f93c:	0a000123 	beq	fdd0 <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0x620>
    f940:	da00007e 	ble	fb40 <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0x390>
    f944:	e3520b01 	cmp	r2, #1024	; 0x400
    f948:	0a000106 	beq	fd68 <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0x5b8>
    f94c:	ca0000a1 	bgt	fbd8 <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0x428>
    f950:	e3520c02 	cmp	r2, #512	; 0x200
    f954:	0a000139 	beq	fe40 <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0x690>
    f958:	e59f083c 	ldr	r0, [pc, #2108]	; 1019c <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0x9ec>
    f95c:	e1520000 	cmp	r2, r0
    f960:	1a000024 	bne	f9f8 <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0x248>
    f964:	e59d2004 	ldr	r2, [sp, #4]
    f968:	e59d100c 	ldr	r1, [sp, #12]
    f96c:	e082200b 	add	r2, r2, fp
    f970:	e7d22001 	ldrb	r2, [r2, r1]
    f974:	e59d0160 	ldr	r0, [sp, #352]	; 0x160
    f978:	e352007f 	cmp	r2, #127	; 0x7f
    f97c:	c1e02002 	mvngt	r2, r2
    f980:	c3a0102d 	movgt	r1, #45	; 0x2d
    f984:	d3a0102b 	movle	r1, #43	; 0x2b
    f988:	c6ef2072 	uxtbgt	r2, r2
    f98c:	c2822001 	addgt	r2, r2, #1
    f990:	e3500001 	cmp	r0, #1
    f994:	e5cd1038 	strb	r1, [sp, #56]	; 0x38
    f998:	0a0001a6 	beq	10038 <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0x888>
    f99c:	e3500002 	cmp	r0, #2
    f9a0:	0a00019d 	beq	1001c <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0x86c>
    f9a4:	e3500000 	cmp	r0, #0
    f9a8:	1a000005 	bne	f9c4 <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0x214>
    f9ac:	e6ef2072 	uxtb	r2, r2
    f9b0:	e59f17e8 	ldr	r1, [pc, #2024]	; 101a0 <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0x9f0>
    f9b4:	e28d0039 	add	r0, sp, #57	; 0x39
    f9b8:	e58d3014 	str	r3, [sp, #20]
    f9bc:	ebffe7fc 	bl	99b4 <ee_sprintf>
    f9c0:	e59d3014 	ldr	r3, [sp, #20]
    f9c4:	e1a00003 	mov	r0, r3
    f9c8:	e1a02009 	mov	r2, r9
    f9cc:	e59f17d0 	ldr	r1, [pc, #2000]	; 101a4 <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0x9f4>
    f9d0:	ebffe7f7 	bl	99b4 <ee_sprintf>
    f9d4:	e0844000 	add	r4, r4, r0
    f9d8:	e1a00009 	mov	r0, r9
    f9dc:	eb00736e 	bl	2c79c <strlen>
    f9e0:	e0863004 	add	r3, r6, r4
    f9e4:	e1a01003 	mov	r1, r3
    f9e8:	e2855004 	add	r5, r5, #4
    f9ec:	e28bb001 	add	fp, fp, #1
    f9f0:	e28aa004 	add	sl, sl, #4
    f9f4:	e0855000 	add	r5, r5, r0
    f9f8:	e597200c 	ldr	r2, [r7, #12]
    f9fc:	e2888001 	add	r8, r8, #1
    fa00:	e1520008 	cmp	r2, r8
    fa04:	da00004a 	ble	fb34 <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0x384>
    fa08:	e1a00003 	mov	r0, r3
    fa0c:	e59f1794 	ldr	r1, [pc, #1940]	; 101a8 <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0x9f8>
    fa10:	ebffe7e7 	bl	99b4 <ee_sprintf>
    fa14:	e2855001 	add	r5, r5, #1
    fa18:	e0844000 	add	r4, r4, r0
    fa1c:	eaffffc0 	b	f924 <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0x174>
    fa20:	e3a05020 	mov	r5, #32
    fa24:	e0863004 	add	r3, r6, r4
    fa28:	e59f877c 	ldr	r8, [pc, #1916]	; 101ac <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0x9fc>
    fa2c:	e1a00003 	mov	r0, r3
    fa30:	ea000000 	b	fa38 <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0x288>
    fa34:	e0860004 	add	r0, r6, r4
    fa38:	e1a01008 	mov	r1, r8
    fa3c:	ebffe7dc 	bl	99b4 <ee_sprintf>
    fa40:	e2855008 	add	r5, r5, #8
    fa44:	e355002f 	cmp	r5, #47	; 0x2f
    fa48:	e0844000 	add	r4, r4, r0
    fa4c:	dafffff8 	ble	fa34 <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0x284>
    fa50:	e0861004 	add	r1, r6, r4
    fa54:	e1a00001 	mov	r0, r1
    fa58:	e59f1750 	ldr	r1, [pc, #1872]	; 101b0 <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0xa00>
    fa5c:	ebffe7d4 	bl	99b4 <ee_sprintf>
    fa60:	e5970000 	ldr	r0, [r7]
    fa64:	e28ddf4f 	add	sp, sp, #316	; 0x13c
    fa68:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    fa6c:	e5973000 	ldr	r3, [r7]
    fa70:	e3530000 	cmp	r3, #0
    fa74:	da000081 	ble	fc80 <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0x4d0>
    fa78:	e59d3004 	ldr	r3, [sp, #4]
    fa7c:	e24ba001 	sub	sl, fp, #1
    fa80:	e59f872c 	ldr	r8, [pc, #1836]	; 101b4 <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0xa04>
    fa84:	e083a00a 	add	sl, r3, sl
    fa88:	e0860004 	add	r0, r6, r4
    fa8c:	e5fa2001 	ldrb	r2, [sl, #1]!
    fa90:	e1a01008 	mov	r1, r8
    fa94:	ebffe7c6 	bl	99b4 <ee_sprintf>
    fa98:	e5973000 	ldr	r3, [r7]
    fa9c:	e2855001 	add	r5, r5, #1
    faa0:	e1530005 	cmp	r3, r5
    faa4:	e0844000 	add	r4, r4, r0
    faa8:	cafffff6 	bgt	fa88 <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0x2d8>
    faac:	e3530004 	cmp	r3, #4
    fab0:	e0860004 	add	r0, r6, r4
    fab4:	1a000072 	bne	fc84 <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0x4d4>
    fab8:	e59f16ec 	ldr	r1, [pc, #1772]	; 101ac <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0x9fc>
    fabc:	ebffe7bc 	bl	99b4 <ee_sprintf>
    fac0:	e0844000 	add	r4, r4, r0
    fac4:	e59f36cc 	ldr	r3, [pc, #1740]	; 10198 <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0x9e8>
    fac8:	e0860004 	add	r0, r6, r4
    facc:	e1a02003 	mov	r2, r3
    fad0:	e58d3008 	str	r3, [sp, #8]
    fad4:	e5973008 	ldr	r3, [r7, #8]
    fad8:	e59f16d8 	ldr	r1, [pc, #1752]	; 101b8 <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0xa08>
    fadc:	e7922103 	ldr	r2, [r2, r3, lsl #2]
    fae0:	ebffe7b3 	bl	99b4 <ee_sprintf>
    fae4:	e0844000 	add	r4, r4, r0
    fae8:	eaffff83 	b	f8fc <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0x14c>
    faec:	e59d1008 	ldr	r1, [sp, #8]
    faf0:	e1a00003 	mov	r0, r3
    faf4:	e0812102 	add	r2, r1, r2, lsl #2
    faf8:	e5921118 	ldr	r1, [r2, #280]	; 0x118
    fafc:	ebffe7ac 	bl	99b4 <ee_sprintf>
    fb00:	e59d1008 	ldr	r1, [sp, #8]
    fb04:	e49a3004 	ldr	r3, [sl], #4
    fb08:	e0844000 	add	r4, r4, r0
    fb0c:	e0813103 	add	r3, r1, r3, lsl #2
    fb10:	e5930118 	ldr	r0, [r3, #280]	; 0x118
    fb14:	eb007320 	bl	2c79c <strlen>
    fb18:	e597200c 	ldr	r2, [r7, #12]
    fb1c:	e2888001 	add	r8, r8, #1
    fb20:	e0863004 	add	r3, r6, r4
    fb24:	e1520008 	cmp	r2, r8
    fb28:	e0855000 	add	r5, r5, r0
    fb2c:	e1a01003 	mov	r1, r3
    fb30:	caffffb4 	bgt	fa08 <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0x258>
    fb34:	e355002f 	cmp	r5, #47	; 0x2f
    fb38:	caffffc5 	bgt	fa54 <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0x2a4>
    fb3c:	eaffffb9 	b	fa28 <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0x278>
    fb40:	e59f0674 	ldr	r0, [pc, #1652]	; 101bc <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0xa0c>
    fb44:	e1520000 	cmp	r2, r0
    fb48:	0a0000f7 	beq	ff2c <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0x77c>
    fb4c:	da000112 	ble	ff9c <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0x7ec>
    fb50:	e59f0668 	ldr	r0, [pc, #1640]	; 101c0 <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0xa10>
    fb54:	e1520000 	cmp	r2, r0
    fb58:	1a000062 	bne	fce8 <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0x538>
    fb5c:	e59d2160 	ldr	r2, [sp, #352]	; 0x160
    fb60:	e59d100c 	ldr	r1, [sp, #12]
    fb64:	e3520001 	cmp	r2, #1
    fb68:	e59d2004 	ldr	r2, [sp, #4]
    fb6c:	e082200b 	add	r2, r2, fp
    fb70:	e7d22001 	ldrb	r2, [r2, r1]
    fb74:	0a00013c 	beq	1006c <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0x8bc>
    fb78:	e59d1160 	ldr	r1, [sp, #352]	; 0x160
    fb7c:	e3510002 	cmp	r1, #2
    fb80:	0a000133 	beq	10054 <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0x8a4>
    fb84:	e3510000 	cmp	r1, #0
    fb88:	1a000004 	bne	fba0 <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0x3f0>
    fb8c:	e59f160c 	ldr	r1, [pc, #1548]	; 101a0 <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0x9f0>
    fb90:	e1a00009 	mov	r0, r9
    fb94:	e58d3014 	str	r3, [sp, #20]
    fb98:	ebffe785 	bl	99b4 <ee_sprintf>
    fb9c:	e59d3014 	ldr	r3, [sp, #20]
    fba0:	e1a00003 	mov	r0, r3
    fba4:	e59f1618 	ldr	r1, [pc, #1560]	; 101c4 <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0xa14>
    fba8:	e1a02009 	mov	r2, r9
    fbac:	ebffe780 	bl	99b4 <ee_sprintf>
    fbb0:	e0844000 	add	r4, r4, r0
    fbb4:	e1a00009 	mov	r0, r9
    fbb8:	eb0072f7 	bl	2c79c <strlen>
    fbbc:	e2855002 	add	r5, r5, #2
    fbc0:	e0863004 	add	r3, r6, r4
    fbc4:	e28bb001 	add	fp, fp, #1
    fbc8:	e28aa004 	add	sl, sl, #4
    fbcc:	e0855000 	add	r5, r5, r0
    fbd0:	e1a01003 	mov	r1, r3
    fbd4:	eaffff87 	b	f9f8 <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0x248>
    fbd8:	e3520b02 	cmp	r2, #2048	; 0x800
    fbdc:	0a0000b3 	beq	feb0 <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0x700>
    fbe0:	e59f05e0 	ldr	r0, [pc, #1504]	; 101c8 <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0xa18>
    fbe4:	e1520000 	cmp	r2, r0
    fbe8:	1affff82 	bne	f9f8 <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0x248>
    fbec:	e59d200c 	ldr	r2, [sp, #12]
    fbf0:	e59dc004 	ldr	ip, [sp, #4]
    fbf4:	e08b1002 	add	r1, fp, r2
    fbf8:	e08c2001 	add	r2, ip, r1
    fbfc:	e5d20001 	ldrb	r0, [r2, #1]
    fc00:	e7dc2001 	ldrb	r2, [ip, r1]
    fc04:	e59d1160 	ldr	r1, [sp, #352]	; 0x160
    fc08:	e0822400 	add	r2, r2, r0, lsl #8
    fc0c:	e3510001 	cmp	r1, #1
    fc10:	0a000121 	beq	1009c <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0x8ec>
    fc14:	e3510002 	cmp	r1, #2
    fc18:	0a000119 	beq	10084 <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0x8d4>
    fc1c:	e3510000 	cmp	r1, #0
    fc20:	1a000004 	bne	fc38 <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0x488>
    fc24:	e59f15a0 	ldr	r1, [pc, #1440]	; 101cc <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0xa1c>
    fc28:	e1a00009 	mov	r0, r9
    fc2c:	e58d3014 	str	r3, [sp, #20]
    fc30:	ebffe75f 	bl	99b4 <ee_sprintf>
    fc34:	e59d3014 	ldr	r3, [sp, #20]
    fc38:	e59f1584 	ldr	r1, [pc, #1412]	; 101c4 <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0xa14>
    fc3c:	e1a00003 	mov	r0, r3
    fc40:	e1a02009 	mov	r2, r9
    fc44:	ebffe75a 	bl	99b4 <ee_sprintf>
    fc48:	e0844000 	add	r4, r4, r0
    fc4c:	e0863004 	add	r3, r6, r4
    fc50:	e1a00009 	mov	r0, r9
    fc54:	e58d3014 	str	r3, [sp, #20]
    fc58:	eb0072cf 	bl	2c79c <strlen>
    fc5c:	e59d3014 	ldr	r3, [sp, #20]
    fc60:	e2855002 	add	r5, r5, #2
    fc64:	e1a01003 	mov	r1, r3
    fc68:	e28bb002 	add	fp, fp, #2
    fc6c:	e28aa004 	add	sl, sl, #4
    fc70:	e0855000 	add	r5, r5, r0
    fc74:	eaffff5f 	b	f9f8 <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0x248>
    fc78:	e3a03000 	mov	r3, #0
    fc7c:	eaffff00 	b	f884 <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0xd4>
    fc80:	e0860004 	add	r0, r6, r4
    fc84:	e59f1544 	ldr	r1, [pc, #1348]	; 101d0 <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0xa20>
    fc88:	ebffe749 	bl	99b4 <ee_sprintf>
    fc8c:	e0804004 	add	r4, r0, r4
    fc90:	eaffff8b 	b	fac4 <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0x314>
    fc94:	e5de3001 	ldrb	r3, [lr, #1]
    fc98:	e35300ff 	cmp	r3, #255	; 0xff
    fc9c:	1affff01 	bne	f8a8 <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0xf8>
    fca0:	e5de1002 	ldrb	r1, [lr, #2]
    fca4:	e59d201c 	ldr	r2, [sp, #28]
    fca8:	e59d3028 	ldr	r3, [sp, #40]	; 0x28
    fcac:	e35100ff 	cmp	r1, #255	; 0xff
    fcb0:	e2820002 	add	r0, r2, #2
    fcb4:	e2831002 	add	r1, r3, #2
    fcb8:	1a0000ba 	bne	ffa8 <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0x7f8>
    fcbc:	e5de1003 	ldrb	r1, [lr, #3]
    fcc0:	e2820003 	add	r0, r2, #3
    fcc4:	e35100ff 	cmp	r1, #255	; 0xff
    fcc8:	02822004 	addeq	r2, r2, #4
    fccc:	e2831003 	add	r1, r3, #3
    fcd0:	02833004 	addeq	r3, r3, #4
    fcd4:	058d201c 	streq	r2, [sp, #28]
    fcd8:	058d3028 	streq	r3, [sp, #40]	; 0x28
    fcdc:	1a0000b1 	bne	ffa8 <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0x7f8>
    fce0:	e28d701c 	add	r7, sp, #28
    fce4:	eafffeef 	b	f8a8 <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0xf8>
    fce8:	e2800001 	add	r0, r0, #1
    fcec:	e1520000 	cmp	r2, r0
    fcf0:	1affff40 	bne	f9f8 <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0x248>
    fcf4:	e59d2160 	ldr	r2, [sp, #352]	; 0x160
    fcf8:	e59d100c 	ldr	r1, [sp, #12]
    fcfc:	e3520001 	cmp	r2, #1
    fd00:	e59d2004 	ldr	r2, [sp, #4]
    fd04:	e082200b 	add	r2, r2, fp
    fd08:	e7d22001 	ldrb	r2, [r2, r1]
    fd0c:	0a0000bc 	beq	10004 <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0x854>
    fd10:	e59d1160 	ldr	r1, [sp, #352]	; 0x160
    fd14:	e3510002 	cmp	r1, #2
    fd18:	0a0000ac 	beq	ffd0 <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0x820>
    fd1c:	e3510000 	cmp	r1, #0
    fd20:	1a000004 	bne	fd38 <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0x588>
    fd24:	e59f1474 	ldr	r1, [pc, #1140]	; 101a0 <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0x9f0>
    fd28:	e1a00009 	mov	r0, r9
    fd2c:	e58d3014 	str	r3, [sp, #20]
    fd30:	ebffe71f 	bl	99b4 <ee_sprintf>
    fd34:	e59d3014 	ldr	r3, [sp, #20]
    fd38:	e1a00003 	mov	r0, r3
    fd3c:	e1a01009 	mov	r1, r9
    fd40:	ebffe71b 	bl	99b4 <ee_sprintf>
    fd44:	e0844000 	add	r4, r4, r0
    fd48:	e1a00009 	mov	r0, r9
    fd4c:	eb007292 	bl	2c79c <strlen>
    fd50:	e0863004 	add	r3, r6, r4
    fd54:	e28bb001 	add	fp, fp, #1
    fd58:	e28aa004 	add	sl, sl, #4
    fd5c:	e0855000 	add	r5, r5, r0
    fd60:	e1a01003 	mov	r1, r3
    fd64:	eaffff23 	b	f9f8 <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0x248>
    fd68:	e59d2004 	ldr	r2, [sp, #4]
    fd6c:	e59d100c 	ldr	r1, [sp, #12]
    fd70:	e082200b 	add	r2, r2, fp
    fd74:	e7d21001 	ldrb	r1, [r2, r1]
    fd78:	e59d0160 	ldr	r0, [sp, #352]	; 0x160
    fd7c:	e351007f 	cmp	r1, #127	; 0x7f
    fd80:	e59d200c 	ldr	r2, [sp, #12]
    fd84:	c2411c01 	subgt	r1, r1, #256	; 0x100
    fd88:	e3500001 	cmp	r0, #1
    fd8c:	e59d0010 	ldr	r0, [sp, #16]
    fd90:	e2822002 	add	r2, r2, #2
    fd94:	e0822000 	add	r2, r2, r0
    fd98:	e0822001 	add	r2, r2, r1
    fd9c:	0a000084 	beq	ffb4 <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0x804>
    fda0:	e59d1160 	ldr	r1, [sp, #352]	; 0x160
    fda4:	e3510002 	cmp	r1, #2
    fda8:	0a00008e 	beq	ffe8 <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0x838>
    fdac:	e3510000 	cmp	r1, #0
    fdb0:	1affffe0 	bne	fd38 <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0x588>
    fdb4:	e6ff2072 	uxth	r2, r2
    fdb8:	e59f140c 	ldr	r1, [pc, #1036]	; 101cc <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0xa1c>
    fdbc:	e1a00009 	mov	r0, r9
    fdc0:	e58d3014 	str	r3, [sp, #20]
    fdc4:	ebffe6fa 	bl	99b4 <ee_sprintf>
    fdc8:	e59d3014 	ldr	r3, [sp, #20]
    fdcc:	eaffffd9 	b	fd38 <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0x588>
    fdd0:	e59d2160 	ldr	r2, [sp, #352]	; 0x160
    fdd4:	e59d100c 	ldr	r1, [sp, #12]
    fdd8:	e3520001 	cmp	r2, #1
    fddc:	e59d2004 	ldr	r2, [sp, #4]
    fde0:	e082200b 	add	r2, r2, fp
    fde4:	e7d22001 	ldrb	r2, [r2, r1]
    fde8:	0a0000df 	beq	1016c <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0x9bc>
    fdec:	e59d1160 	ldr	r1, [sp, #352]	; 0x160
    fdf0:	e3510002 	cmp	r1, #2
    fdf4:	0a0000d6 	beq	10154 <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0x9a4>
    fdf8:	e3510000 	cmp	r1, #0
    fdfc:	1a000004 	bne	fe14 <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0x664>
    fe00:	e59f1398 	ldr	r1, [pc, #920]	; 101a0 <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0x9f0>
    fe04:	e1a00009 	mov	r0, r9
    fe08:	e58d3014 	str	r3, [sp, #20]
    fe0c:	ebffe6e8 	bl	99b4 <ee_sprintf>
    fe10:	e59d3014 	ldr	r3, [sp, #20]
    fe14:	e1a00003 	mov	r0, r3
    fe18:	e1a01009 	mov	r1, r9
    fe1c:	ebffe6e4 	bl	99b4 <ee_sprintf>
    fe20:	e0844000 	add	r4, r4, r0
    fe24:	e1a00009 	mov	r0, r9
    fe28:	eb00725b 	bl	2c79c <strlen>
    fe2c:	e0863004 	add	r3, r6, r4
    fe30:	e28bb001 	add	fp, fp, #1
    fe34:	e0855000 	add	r5, r5, r0
    fe38:	e1a01003 	mov	r1, r3
    fe3c:	eafffeed 	b	f9f8 <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0x248>
    fe40:	e59d2004 	ldr	r2, [sp, #4]
    fe44:	e59d100c 	ldr	r1, [sp, #12]
    fe48:	e082200b 	add	r2, r2, fp
    fe4c:	e7d22001 	ldrb	r2, [r2, r1]
    fe50:	e59d0160 	ldr	r0, [sp, #352]	; 0x160
    fe54:	e352007f 	cmp	r2, #127	; 0x7f
    fe58:	c1e02002 	mvngt	r2, r2
    fe5c:	c3a0102d 	movgt	r1, #45	; 0x2d
    fe60:	d3a0102b 	movle	r1, #43	; 0x2b
    fe64:	c6ef2072 	uxtbgt	r2, r2
    fe68:	c2822001 	addgt	r2, r2, #1
    fe6c:	e3500001 	cmp	r0, #1
    fe70:	e5cd1038 	strb	r1, [sp, #56]	; 0x38
    fe74:	0a0000af 	beq	10138 <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0x988>
    fe78:	e3500002 	cmp	r0, #2
    fe7c:	0a0000a6 	beq	1011c <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0x96c>
    fe80:	e3500000 	cmp	r0, #0
    fe84:	1a000005 	bne	fea0 <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0x6f0>
    fe88:	e6ef2072 	uxtb	r2, r2
    fe8c:	e59f130c 	ldr	r1, [pc, #780]	; 101a0 <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0x9f0>
    fe90:	e28d0039 	add	r0, sp, #57	; 0x39
    fe94:	e58d3014 	str	r3, [sp, #20]
    fe98:	ebffe6c5 	bl	99b4 <ee_sprintf>
    fe9c:	e59d3014 	ldr	r3, [sp, #20]
    fea0:	e1a00003 	mov	r0, r3
    fea4:	e1a02009 	mov	r2, r9
    fea8:	e59f1324 	ldr	r1, [pc, #804]	; 101d4 <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0xa24>
    feac:	eafffec7 	b	f9d0 <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0x220>
    feb0:	e59d200c 	ldr	r2, [sp, #12]
    feb4:	e59dc004 	ldr	ip, [sp, #4]
    feb8:	e08b1002 	add	r1, fp, r2
    febc:	e08c2001 	add	r2, ip, r1
    fec0:	e5d20001 	ldrb	r0, [r2, #1]
    fec4:	e7dc2001 	ldrb	r2, [ip, r1]
    fec8:	e59d1160 	ldr	r1, [sp, #352]	; 0x160
    fecc:	e0822400 	add	r2, r2, r0, lsl #8
    fed0:	e3510001 	cmp	r1, #1
    fed4:	0a00008a 	beq	10104 <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0x954>
    fed8:	e3510002 	cmp	r1, #2
    fedc:	0a000082 	beq	100ec <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0x93c>
    fee0:	e3510000 	cmp	r1, #0
    fee4:	1a000004 	bne	fefc <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0x74c>
    fee8:	e59f12dc 	ldr	r1, [pc, #732]	; 101cc <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0xa1c>
    feec:	e1a00009 	mov	r0, r9
    fef0:	e58d3014 	str	r3, [sp, #20]
    fef4:	ebffe6ae 	bl	99b4 <ee_sprintf>
    fef8:	e59d3014 	ldr	r3, [sp, #20]
    fefc:	e1a00003 	mov	r0, r3
    ff00:	e1a01009 	mov	r1, r9
    ff04:	ebffe6aa 	bl	99b4 <ee_sprintf>
    ff08:	e0844000 	add	r4, r4, r0
    ff0c:	e1a00009 	mov	r0, r9
    ff10:	eb007221 	bl	2c79c <strlen>
    ff14:	e0863004 	add	r3, r6, r4
    ff18:	e28bb002 	add	fp, fp, #2
    ff1c:	e28aa004 	add	sl, sl, #4
    ff20:	e0855000 	add	r5, r5, r0
    ff24:	e1a01003 	mov	r1, r3
    ff28:	eafffeb2 	b	f9f8 <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0x248>
    ff2c:	e59d100c 	ldr	r1, [sp, #12]
    ff30:	e59d2004 	ldr	r2, [sp, #4]
    ff34:	e7d22001 	ldrb	r2, [r2, r1]
    ff38:	e59d1160 	ldr	r1, [sp, #352]	; 0x160
    ff3c:	e24220c7 	sub	r2, r2, #199	; 0xc7
    ff40:	e3510001 	cmp	r1, #1
    ff44:	0a000061 	beq	100d0 <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0x920>
    ff48:	e3510002 	cmp	r1, #2
    ff4c:	0a000058 	beq	100b4 <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0x904>
    ff50:	e3510000 	cmp	r1, #0
    ff54:	1a000005 	bne	ff70 <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0x7c0>
    ff58:	e6ef2072 	uxtb	r2, r2
    ff5c:	e59f123c 	ldr	r1, [pc, #572]	; 101a0 <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0x9f0>
    ff60:	e1a00009 	mov	r0, r9
    ff64:	e58d3014 	str	r3, [sp, #20]
    ff68:	ebffe691 	bl	99b4 <ee_sprintf>
    ff6c:	e59d3014 	ldr	r3, [sp, #20]
    ff70:	e1a00003 	mov	r0, r3
    ff74:	e1a01009 	mov	r1, r9
    ff78:	ebffe68d 	bl	99b4 <ee_sprintf>
    ff7c:	e0844000 	add	r4, r4, r0
    ff80:	e1a00009 	mov	r0, r9
    ff84:	eb007204 	bl	2c79c <strlen>
    ff88:	e0863004 	add	r3, r6, r4
    ff8c:	e28aa004 	add	sl, sl, #4
    ff90:	e0855000 	add	r5, r5, r0
    ff94:	e1a01003 	mov	r1, r3
    ff98:	eafffe96 	b	f9f8 <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0x248>
    ff9c:	e3520c01 	cmp	r2, #256	; 0x100
    ffa0:	0affff53 	beq	fcf4 <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0x544>
    ffa4:	eafffe93 	b	f9f8 <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0x248>
    ffa8:	e58d001c 	str	r0, [sp, #28]
    ffac:	e58d1028 	str	r1, [sp, #40]	; 0x28
    ffb0:	eaffff4a 	b	fce0 <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0x530>
    ffb4:	e6ff2072 	uxth	r2, r2
    ffb8:	e59f1218 	ldr	r1, [pc, #536]	; 101d8 <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0xa28>
    ffbc:	e1a00009 	mov	r0, r9
    ffc0:	e58d3014 	str	r3, [sp, #20]
    ffc4:	ebffe67a 	bl	99b4 <ee_sprintf>
    ffc8:	e59d3014 	ldr	r3, [sp, #20]
    ffcc:	eaffff59 	b	fd38 <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0x588>
    ffd0:	e59f1204 	ldr	r1, [pc, #516]	; 101dc <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0xa2c>
    ffd4:	e1a00009 	mov	r0, r9
    ffd8:	e58d3014 	str	r3, [sp, #20]
    ffdc:	ebffe674 	bl	99b4 <ee_sprintf>
    ffe0:	e59d3014 	ldr	r3, [sp, #20]
    ffe4:	eaffff53 	b	fd38 <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0x588>
    ffe8:	e6ff2072 	uxth	r2, r2
    ffec:	e59f11ec 	ldr	r1, [pc, #492]	; 101e0 <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0xa30>
    fff0:	e1a00009 	mov	r0, r9
    fff4:	e58d3014 	str	r3, [sp, #20]
    fff8:	ebffe66d 	bl	99b4 <ee_sprintf>
    fffc:	e59d3014 	ldr	r3, [sp, #20]
   10000:	eaffff4c 	b	fd38 <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0x588>
   10004:	e59f11d8 	ldr	r1, [pc, #472]	; 101e4 <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0xa34>
   10008:	e1a00009 	mov	r0, r9
   1000c:	e58d3014 	str	r3, [sp, #20]
   10010:	ebffe667 	bl	99b4 <ee_sprintf>
   10014:	e59d3014 	ldr	r3, [sp, #20]
   10018:	eaffff46 	b	fd38 <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0x588>
   1001c:	e6ef2072 	uxtb	r2, r2
   10020:	e59f11b4 	ldr	r1, [pc, #436]	; 101dc <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0xa2c>
   10024:	e28d0039 	add	r0, sp, #57	; 0x39
   10028:	e58d3014 	str	r3, [sp, #20]
   1002c:	ebffe660 	bl	99b4 <ee_sprintf>
   10030:	e59d3014 	ldr	r3, [sp, #20]
   10034:	eafffe62 	b	f9c4 <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0x214>
   10038:	e6ef2072 	uxtb	r2, r2
   1003c:	e59f11a0 	ldr	r1, [pc, #416]	; 101e4 <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0xa34>
   10040:	e28d0039 	add	r0, sp, #57	; 0x39
   10044:	e58d3014 	str	r3, [sp, #20]
   10048:	ebffe659 	bl	99b4 <ee_sprintf>
   1004c:	e59d3014 	ldr	r3, [sp, #20]
   10050:	eafffe5b 	b	f9c4 <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0x214>
   10054:	e59f1180 	ldr	r1, [pc, #384]	; 101dc <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0xa2c>
   10058:	e1a00009 	mov	r0, r9
   1005c:	e58d3014 	str	r3, [sp, #20]
   10060:	ebffe653 	bl	99b4 <ee_sprintf>
   10064:	e59d3014 	ldr	r3, [sp, #20]
   10068:	eafffecc 	b	fba0 <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0x3f0>
   1006c:	e59f1170 	ldr	r1, [pc, #368]	; 101e4 <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0xa34>
   10070:	e1a00009 	mov	r0, r9
   10074:	e58d3014 	str	r3, [sp, #20]
   10078:	ebffe64d 	bl	99b4 <ee_sprintf>
   1007c:	e59d3014 	ldr	r3, [sp, #20]
   10080:	eafffec6 	b	fba0 <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0x3f0>
   10084:	e59f1154 	ldr	r1, [pc, #340]	; 101e0 <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0xa30>
   10088:	e1a00009 	mov	r0, r9
   1008c:	e58d3014 	str	r3, [sp, #20]
   10090:	ebffe647 	bl	99b4 <ee_sprintf>
   10094:	e59d3014 	ldr	r3, [sp, #20]
   10098:	eafffee6 	b	fc38 <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0x488>
   1009c:	e59f1134 	ldr	r1, [pc, #308]	; 101d8 <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0xa28>
   100a0:	e1a00009 	mov	r0, r9
   100a4:	e58d3014 	str	r3, [sp, #20]
   100a8:	ebffe641 	bl	99b4 <ee_sprintf>
   100ac:	e59d3014 	ldr	r3, [sp, #20]
   100b0:	eafffee0 	b	fc38 <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0x488>
   100b4:	e6ef2072 	uxtb	r2, r2
   100b8:	e59f111c 	ldr	r1, [pc, #284]	; 101dc <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0xa2c>
   100bc:	e1a00009 	mov	r0, r9
   100c0:	e58d3014 	str	r3, [sp, #20]
   100c4:	ebffe63a 	bl	99b4 <ee_sprintf>
   100c8:	e59d3014 	ldr	r3, [sp, #20]
   100cc:	eaffffa7 	b	ff70 <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0x7c0>
   100d0:	e6ef2072 	uxtb	r2, r2
   100d4:	e59f1108 	ldr	r1, [pc, #264]	; 101e4 <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0xa34>
   100d8:	e1a00009 	mov	r0, r9
   100dc:	e58d3014 	str	r3, [sp, #20]
   100e0:	ebffe633 	bl	99b4 <ee_sprintf>
   100e4:	e59d3014 	ldr	r3, [sp, #20]
   100e8:	eaffffa0 	b	ff70 <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0x7c0>
   100ec:	e59f10ec 	ldr	r1, [pc, #236]	; 101e0 <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0xa30>
   100f0:	e1a00009 	mov	r0, r9
   100f4:	e58d3014 	str	r3, [sp, #20]
   100f8:	ebffe62d 	bl	99b4 <ee_sprintf>
   100fc:	e59d3014 	ldr	r3, [sp, #20]
   10100:	eaffff7d 	b	fefc <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0x74c>
   10104:	e59f10cc 	ldr	r1, [pc, #204]	; 101d8 <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0xa28>
   10108:	e1a00009 	mov	r0, r9
   1010c:	e58d3014 	str	r3, [sp, #20]
   10110:	ebffe627 	bl	99b4 <ee_sprintf>
   10114:	e59d3014 	ldr	r3, [sp, #20]
   10118:	eaffff77 	b	fefc <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0x74c>
   1011c:	e6ef2072 	uxtb	r2, r2
   10120:	e59f10b4 	ldr	r1, [pc, #180]	; 101dc <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0xa2c>
   10124:	e28d0039 	add	r0, sp, #57	; 0x39
   10128:	e58d3014 	str	r3, [sp, #20]
   1012c:	ebffe620 	bl	99b4 <ee_sprintf>
   10130:	e59d3014 	ldr	r3, [sp, #20]
   10134:	eaffff59 	b	fea0 <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0x6f0>
   10138:	e6ef2072 	uxtb	r2, r2
   1013c:	e59f10a0 	ldr	r1, [pc, #160]	; 101e4 <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0xa34>
   10140:	e28d0039 	add	r0, sp, #57	; 0x39
   10144:	e58d3014 	str	r3, [sp, #20]
   10148:	ebffe619 	bl	99b4 <ee_sprintf>
   1014c:	e59d3014 	ldr	r3, [sp, #20]
   10150:	eaffff52 	b	fea0 <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0x6f0>
   10154:	e59f1080 	ldr	r1, [pc, #128]	; 101dc <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0xa2c>
   10158:	e1a00009 	mov	r0, r9
   1015c:	e58d3014 	str	r3, [sp, #20]
   10160:	ebffe613 	bl	99b4 <ee_sprintf>
   10164:	e59d3014 	ldr	r3, [sp, #20]
   10168:	eaffff29 	b	fe14 <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0x664>
   1016c:	e59f1070 	ldr	r1, [pc, #112]	; 101e4 <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0xa34>
   10170:	e1a00009 	mov	r0, r9
   10174:	e58d3014 	str	r3, [sp, #20]
   10178:	ebffe60d 	bl	99b4 <ee_sprintf>
   1017c:	e59d3014 	ldr	r3, [sp, #20]
   10180:	eaffff23 	b	fe14 <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)+0x664>
   10184:	0002eaa4 	.word	0x0002eaa4
   10188:	0002eaf0 	.word	0x0002eaf0
   1018c:	0002eaf8 	.word	0x0002eaf8
   10190:	0002ea98 	.word	0x0002ea98
   10194:	00035c6c 	.word	0x00035c6c
   10198:	00035a40 	.word	0x00035a40
   1019c:	00000201 	.word	0x00000201
   101a0:	0002eac0 	.word	0x0002eac0
   101a4:	0002eb1c 	.word	0x0002eb1c
   101a8:	0002ee88 	.word	0x0002ee88
   101ac:	0002eb08 	.word	0x0002eb08
   101b0:	0002eb24 	.word	0x0002eb24
   101b4:	0002eb00 	.word	0x0002eb00
   101b8:	0002eb10 	.word	0x0002eb10
   101bc:	00000101 	.word	0x00000101
   101c0:	00000102 	.word	0x00000102
   101c4:	0003018c 	.word	0x0003018c
   101c8:	00000801 	.word	0x00000801
   101cc:	0002ead8 	.word	0x0002ead8
   101d0:	0002eb0c 	.word	0x0002eb0c
   101d4:	0002eb14 	.word	0x0002eb14
   101d8:	0002eae0 	.word	0x0002eae0
   101dc:	0002ead0 	.word	0x0002ead0
   101e0:	0002eae8 	.word	0x0002eae8
   101e4:	0002eac8 	.word	0x0002eac8

000101e8 <McTRS80CmdFormat::McTRS80CmdFormat()>:
   101e8:	e12fff1e 	bx	lr

000101ec <McTRS80CmdFormat::proc(void (*)(unsigned long, unsigned char const*, unsigned long), void (*)(Z80Registers const&), unsigned char const*, int)>:
   101ec:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   101f0:	e24dd054 	sub	sp, sp, #84	; 0x54
   101f4:	e59d5078 	ldr	r5, [sp, #120]	; 0x78
   101f8:	e2458002 	sub	r8, r5, #2
   101fc:	e3580000 	cmp	r8, #0
   10200:	da00002a 	ble	102b0 <McTRS80CmdFormat::proc(void (*)(unsigned long, unsigned char const*, unsigned long), void (*)(Z80Registers const&), unsigned char const*, int)+0xc4>
   10204:	e1a0a001 	mov	sl, r1
   10208:	e1a07003 	mov	r7, r3
   1020c:	e3a01000 	mov	r1, #0
   10210:	e59f9200 	ldr	r9, [pc, #512]	; 10418 <McTRS80CmdFormat::proc(void (*)(unsigned long, unsigned char const*, unsigned long), void (*)(Z80Registers const&), unsigned char const*, int)+0x22c>
   10214:	e59fb200 	ldr	fp, [pc, #512]	; 1041c <McTRS80CmdFormat::proc(void (*)(unsigned long, unsigned char const*, unsigned long), void (*)(Z80Registers const&), unsigned char const*, int)+0x230>
   10218:	e58d2004 	str	r2, [sp, #4]
   1021c:	e2455001 	sub	r5, r5, #1
   10220:	e1a02007 	mov	r2, r7
   10224:	e7f23001 	ldrb	r3, [r2, r1]!
   10228:	e2816002 	add	r6, r1, #2
   1022c:	e5d24001 	ldrb	r4, [r2, #1]
   10230:	e2432001 	sub	r2, r3, #1
   10234:	e1540005 	cmp	r4, r5
   10238:	a1a04005 	movge	r4, r5
   1023c:	e3540000 	cmp	r4, #0
   10240:	03a04c01 	moveq	r4, #256	; 0x100
   10244:	e3520004 	cmp	r2, #4
   10248:	979ff102 	ldrls	pc, [pc, r2, lsl #2]
   1024c:	ea000044 	b	10364 <McTRS80CmdFormat::proc(void (*)(unsigned long, unsigned char const*, unsigned long), void (*)(Z80Registers const&), unsigned char const*, int)+0x178>
   10250:	00010334 	.word	0x00010334
   10254:	000102b8 	.word	0x000102b8
   10258:	0001029c 	.word	0x0001029c
   1025c:	00010288 	.word	0x00010288
   10260:	00010264 	.word	0x00010264
   10264:	e59f21b4 	ldr	r2, [pc, #436]	; 10420 <McTRS80CmdFormat::proc(void (*)(unsigned long, unsigned char const*, unsigned long), void (*)(Z80Registers const&), unsigned char const*, int)+0x234>
   10268:	e3a01004 	mov	r1, #4
   1026c:	e5990000 	ldr	r0, [r9]
   10270:	ebffe54f 	bl	97b4 <LogWrite>
   10274:	e0861004 	add	r1, r6, r4
   10278:	e1510008 	cmp	r1, r8
   1027c:	baffffe7 	blt	10220 <McTRS80CmdFormat::proc(void (*)(unsigned long, unsigned char const*, unsigned long), void (*)(Z80Registers const&), unsigned char const*, int)+0x34>
   10280:	e28dd054 	add	sp, sp, #84	; 0x54
   10284:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10288:	e59f2194 	ldr	r2, [pc, #404]	; 10424 <McTRS80CmdFormat::proc(void (*)(unsigned long, unsigned char const*, unsigned long), void (*)(Z80Registers const&), unsigned char const*, int)+0x238>
   1028c:	e3a01004 	mov	r1, #4
   10290:	e5990000 	ldr	r0, [r9]
   10294:	ebffe546 	bl	97b4 <LogWrite>
   10298:	eafffff5 	b	10274 <McTRS80CmdFormat::proc(void (*)(unsigned long, unsigned char const*, unsigned long), void (*)(Z80Registers const&), unsigned char const*, int)+0x88>
   1029c:	e59f3174 	ldr	r3, [pc, #372]	; 10418 <McTRS80CmdFormat::proc(void (*)(unsigned long, unsigned char const*, unsigned long), void (*)(Z80Registers const&), unsigned char const*, int)+0x22c>
   102a0:	e59f2180 	ldr	r2, [pc, #384]	; 10428 <McTRS80CmdFormat::proc(void (*)(unsigned long, unsigned char const*, unsigned long), void (*)(Z80Registers const&), unsigned char const*, int)+0x23c>
   102a4:	e5930000 	ldr	r0, [r3]
   102a8:	e3a01004 	mov	r1, #4
   102ac:	ebffe540 	bl	97b4 <LogWrite>
   102b0:	e28dd054 	add	sp, sp, #84	; 0x54
   102b4:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   102b8:	e3540001 	cmp	r4, #1
   102bc:	1a00002d 	bne	10378 <McTRS80CmdFormat::proc(void (*)(unsigned long, unsigned char const*, unsigned long), void (*)(Z80Registers const&), unsigned char const*, int)+0x18c>
   102c0:	e3a03000 	mov	r3, #0
   102c4:	e7d72006 	ldrb	r2, [r7, r6]
   102c8:	e28d0050 	add	r0, sp, #80	; 0x50
   102cc:	e58d3024 	str	r3, [sp, #36]	; 0x24
   102d0:	e5202048 	str	r2, [r0, #-72]!	; 0xffffffb8
   102d4:	e58d3020 	str	r3, [sp, #32]
   102d8:	e58d301c 	str	r3, [sp, #28]
   102dc:	e58d3018 	str	r3, [sp, #24]
   102e0:	e58d3014 	str	r3, [sp, #20]
   102e4:	e58d3010 	str	r3, [sp, #16]
   102e8:	e58d300c 	str	r3, [sp, #12]
   102ec:	e58d3038 	str	r3, [sp, #56]	; 0x38
   102f0:	e58d3034 	str	r3, [sp, #52]	; 0x34
   102f4:	e58d3030 	str	r3, [sp, #48]	; 0x30
   102f8:	e58d302c 	str	r3, [sp, #44]	; 0x2c
   102fc:	e58d3028 	str	r3, [sp, #40]	; 0x28
   10300:	e58d304c 	str	r3, [sp, #76]	; 0x4c
   10304:	e58d3048 	str	r3, [sp, #72]	; 0x48
   10308:	e58d3044 	str	r3, [sp, #68]	; 0x44
   1030c:	e58d3040 	str	r3, [sp, #64]	; 0x40
   10310:	e58d303c 	str	r3, [sp, #60]	; 0x3c
   10314:	e59d3004 	ldr	r3, [sp, #4]
   10318:	e12fff33 	blx	r3
   1031c:	e59d3008 	ldr	r3, [sp, #8]
   10320:	e59f2104 	ldr	r2, [pc, #260]	; 1042c <McTRS80CmdFormat::proc(void (*)(unsigned long, unsigned char const*, unsigned long), void (*)(Z80Registers const&), unsigned char const*, int)+0x240>
   10324:	e3a01004 	mov	r1, #4
   10328:	e5990000 	ldr	r0, [r9]
   1032c:	ebffe520 	bl	97b4 <LogWrite>
   10330:	eaffffcf 	b	10274 <McTRS80CmdFormat::proc(void (*)(unsigned long, unsigned char const*, unsigned long), void (*)(Z80Registers const&), unsigned char const*, int)+0x88>
   10334:	e0873006 	add	r3, r7, r6
   10338:	e7d70006 	ldrb	r0, [r7, r6]
   1033c:	e3540002 	cmp	r4, #2
   10340:	e5d33001 	ldrb	r3, [r3, #1]
   10344:	e2816004 	add	r6, r1, #4
   10348:	d28440fe 	addle	r4, r4, #254	; 0xfe
   1034c:	c2444002 	subgt	r4, r4, #2
   10350:	e0800403 	add	r0, r0, r3, lsl #8
   10354:	e1a02004 	mov	r2, r4
   10358:	e0871006 	add	r1, r7, r6
   1035c:	e12fff3a 	blx	sl
   10360:	eaffffc3 	b	10274 <McTRS80CmdFormat::proc(void (*)(unsigned long, unsigned char const*, unsigned long), void (*)(Z80Registers const&), unsigned char const*, int)+0x88>
   10364:	e1a0200b 	mov	r2, fp
   10368:	e3a01004 	mov	r1, #4
   1036c:	e5990000 	ldr	r0, [r9]
   10370:	ebffe50f 	bl	97b4 <LogWrite>
   10374:	eaffffbe 	b	10274 <McTRS80CmdFormat::proc(void (*)(unsigned long, unsigned char const*, unsigned long), void (*)(Z80Registers const&), unsigned char const*, int)+0x88>
   10378:	e3540002 	cmp	r4, #2
   1037c:	1a000020 	bne	10404 <McTRS80CmdFormat::proc(void (*)(unsigned long, unsigned char const*, unsigned long), void (*)(Z80Registers const&), unsigned char const*, int)+0x218>
   10380:	e3a03000 	mov	r3, #0
   10384:	e0872006 	add	r2, r7, r6
   10388:	e5d2c001 	ldrb	ip, [r2, #1]
   1038c:	e7d72006 	ldrb	r2, [r7, r6]
   10390:	e28d0050 	add	r0, sp, #80	; 0x50
   10394:	e082240c 	add	r2, r2, ip, lsl #8
   10398:	e58d3024 	str	r3, [sp, #36]	; 0x24
   1039c:	e5202048 	str	r2, [r0, #-72]!	; 0xffffffb8
   103a0:	e58d3020 	str	r3, [sp, #32]
   103a4:	e58d301c 	str	r3, [sp, #28]
   103a8:	e58d3018 	str	r3, [sp, #24]
   103ac:	e58d3014 	str	r3, [sp, #20]
   103b0:	e58d3010 	str	r3, [sp, #16]
   103b4:	e58d300c 	str	r3, [sp, #12]
   103b8:	e58d3038 	str	r3, [sp, #56]	; 0x38
   103bc:	e58d3034 	str	r3, [sp, #52]	; 0x34
   103c0:	e58d3030 	str	r3, [sp, #48]	; 0x30
   103c4:	e58d302c 	str	r3, [sp, #44]	; 0x2c
   103c8:	e58d3028 	str	r3, [sp, #40]	; 0x28
   103cc:	e58d304c 	str	r3, [sp, #76]	; 0x4c
   103d0:	e58d3048 	str	r3, [sp, #72]	; 0x48
   103d4:	e58d3044 	str	r3, [sp, #68]	; 0x44
   103d8:	e58d3040 	str	r3, [sp, #64]	; 0x40
   103dc:	e58d303c 	str	r3, [sp, #60]	; 0x3c
   103e0:	e59d3004 	ldr	r3, [sp, #4]
   103e4:	e2816004 	add	r6, r1, #4
   103e8:	e12fff33 	blx	r3
   103ec:	e59d3008 	ldr	r3, [sp, #8]
   103f0:	e59f2038 	ldr	r2, [pc, #56]	; 10430 <McTRS80CmdFormat::proc(void (*)(unsigned long, unsigned char const*, unsigned long), void (*)(Z80Registers const&), unsigned char const*, int)+0x244>
   103f4:	e3a01004 	mov	r1, #4
   103f8:	e5990000 	ldr	r0, [r9]
   103fc:	ebffe4ec 	bl	97b4 <LogWrite>
   10400:	eaffff9b 	b	10274 <McTRS80CmdFormat::proc(void (*)(unsigned long, unsigned char const*, unsigned long), void (*)(Z80Registers const&), unsigned char const*, int)+0x88>
   10404:	e59f2028 	ldr	r2, [pc, #40]	; 10434 <McTRS80CmdFormat::proc(void (*)(unsigned long, unsigned char const*, unsigned long), void (*)(Z80Registers const&), unsigned char const*, int)+0x248>
   10408:	e3a01004 	mov	r1, #4
   1040c:	e5990000 	ldr	r0, [r9]
   10410:	ebffe4e7 	bl	97b4 <LogWrite>
   10414:	eaffff96 	b	10274 <McTRS80CmdFormat::proc(void (*)(unsigned long, unsigned char const*, unsigned long), void (*)(Z80Registers const&), unsigned char const*, int)+0x88>
   10418:	0004206c 	.word	0x0004206c
   1041c:	0002ed80 	.word	0x0002ed80
   10420:	0002ed78 	.word	0x0002ed78
   10424:	0002ed60 	.word	0x0002ed60
   10428:	0002ed50 	.word	0x0002ed50
   1042c:	0002ed1c 	.word	0x0002ed1c
   10430:	0002ed2c 	.word	0x0002ed2c
   10434:	0002ed3c 	.word	0x0002ed3c

00010438 <srec_init>:
   10438:	e3a02000 	mov	r2, #0
   1043c:	e59f300c 	ldr	r3, [pc, #12]	; 10450 <srec_init+0x18>
   10440:	e5c32000 	strb	r2, [r3]
   10444:	e58320f8 	str	r2, [r3, #248]	; 0xf8
   10448:	e5c320fc 	strb	r2, [r3, #252]	; 0xfc
   1044c:	e12fff1e 	bx	lr
   10450:	00043c90 	.word	0x00043c90

00010454 <chToNybble(int)>:
   10454:	e2403030 	sub	r3, r0, #48	; 0x30
   10458:	e3530036 	cmp	r3, #54	; 0x36
   1045c:	93a03000 	movls	r3, #0
   10460:	83a03001 	movhi	r3, #1
   10464:	e240203a 	sub	r2, r0, #58	; 0x3a
   10468:	e3520006 	cmp	r2, #6
   1046c:	93833001 	orrls	r3, r3, #1
   10470:	e3530000 	cmp	r3, #0
   10474:	1a000002 	bne	10484 <chToNybble(int)+0x30>
   10478:	e2403047 	sub	r3, r0, #71	; 0x47
   1047c:	e3530019 	cmp	r3, #25
   10480:	8a000002 	bhi	10490 <chToNybble(int)+0x3c>
   10484:	e3a02005 	mov	r2, #5
   10488:	e59f3010 	ldr	r3, [pc, #16]	; 104a0 <chToNybble(int)+0x4c>
   1048c:	e5c320fc 	strb	r2, [r3, #252]	; 0xfc
   10490:	e3500039 	cmp	r0, #57	; 0x39
   10494:	c2400007 	subgt	r0, r0, #7
   10498:	e200000f 	and	r0, r0, #15
   1049c:	e12fff1e 	bx	lr
   104a0:	00043c90 	.word	0x00043c90

000104a4 <srec_handle_char(int)>:
   104a4:	e92d4010 	push	{r4, lr}
   104a8:	e59f4454 	ldr	r4, [pc, #1108]	; 10904 <srec_handle_char(int)+0x460>
   104ac:	e1a03000 	mov	r3, r0
   104b0:	e59420f8 	ldr	r2, [r4, #248]	; 0xf8
   104b4:	e5d41000 	ldrb	r1, [r4]
   104b8:	e2822001 	add	r2, r2, #1
   104bc:	e58420f8 	str	r2, [r4, #248]	; 0xf8
   104c0:	e3510005 	cmp	r1, #5
   104c4:	979ff101 	ldrls	pc, [pc, r1, lsl #2]
   104c8:	ea000045 	b	105e4 <srec_handle_char(int)+0x140>
   104cc:	000106a8 	.word	0x000106a8
   104d0:	000106cc 	.word	0x000106cc
   104d4:	00010738 	.word	0x00010738
   104d8:	000104e4 	.word	0x000104e4
   104dc:	000107d0 	.word	0x000107d0
   104e0:	000105ec 	.word	0x000105ec
   104e4:	e2401030 	sub	r1, r0, #48	; 0x30
   104e8:	e3510036 	cmp	r1, #54	; 0x36
   104ec:	93a01000 	movls	r1, #0
   104f0:	83a01001 	movhi	r1, #1
   104f4:	e240203a 	sub	r2, r0, #58	; 0x3a
   104f8:	e3520006 	cmp	r2, #6
   104fc:	93811001 	orrls	r1, r1, #1
   10500:	e5d42028 	ldrb	r2, [r4, #40]	; 0x28
   10504:	e3510000 	cmp	r1, #0
   10508:	e1a02202 	lsl	r2, r2, #4
   1050c:	e6ef2072 	uxtb	r2, r2
   10510:	1a000002 	bne	10520 <srec_handle_char(int)+0x7c>
   10514:	e2401047 	sub	r1, r0, #71	; 0x47
   10518:	e3510019 	cmp	r1, #25
   1051c:	8a000001 	bhi	10528 <srec_handle_char(int)+0x84>
   10520:	e3a01005 	mov	r1, #5
   10524:	e5c410fc 	strb	r1, [r4, #252]	; 0xfc
   10528:	e3530039 	cmp	r3, #57	; 0x39
   1052c:	c2433007 	subgt	r3, r3, #7
   10530:	e5941010 	ldr	r1, [r4, #16]
   10534:	e203300f 	and	r3, r3, #15
   10538:	e0823003 	add	r3, r2, r3
   1053c:	e2812001 	add	r2, r1, #1
   10540:	e6ef3073 	uxtb	r3, r3
   10544:	e212c001 	ands	ip, r2, #1
   10548:	e5c43028 	strb	r3, [r4, #40]	; 0x28
   1054c:	e5842010 	str	r2, [r4, #16]
   10550:	1a000006 	bne	10570 <srec_handle_char(int)+0xcc>
   10554:	e5940024 	ldr	r0, [r4, #36]	; 0x24
   10558:	e5941004 	ldr	r1, [r4, #4]
   1055c:	e0830400 	add	r0, r3, r0, lsl #8
   10560:	e0813003 	add	r3, r1, r3
   10564:	e5c4c028 	strb	ip, [r4, #40]	; 0x28
   10568:	e5840024 	str	r0, [r4, #36]	; 0x24
   1056c:	e5843004 	str	r3, [r4, #4]
   10570:	e594300c 	ldr	r3, [r4, #12]
   10574:	e1520083 	cmp	r2, r3, lsl #1
   10578:	1a000019 	bne	105e4 <srec_handle_char(int)+0x140>
   1057c:	e5d43001 	ldrb	r3, [r4, #1]
   10580:	e3530001 	cmp	r3, #1
   10584:	1a000004 	bne	1059c <srec_handle_char(int)+0xf8>
   10588:	e5940024 	ldr	r0, [r4, #36]	; 0x24
   1058c:	e5943100 	ldr	r3, [r4, #256]	; 0x100
   10590:	e5840008 	str	r0, [r4, #8]
   10594:	e12fff33 	blx	r3
   10598:	e5d43001 	ldrb	r3, [r4, #1]
   1059c:	e3a02000 	mov	r2, #0
   105a0:	e1530002 	cmp	r3, r2
   105a4:	e584201c 	str	r2, [r4, #28]
   105a8:	1a0000cf 	bne	108ec <srec_handle_char(int)+0x448>
   105ac:	e5942010 	ldr	r2, [r4, #16]
   105b0:	e5943018 	ldr	r3, [r4, #24]
   105b4:	e0822fa2 	add	r2, r2, r2, lsr #31
   105b8:	e04330c2 	sub	r3, r3, r2, asr #1
   105bc:	e2433001 	sub	r3, r3, #1
   105c0:	e3530000 	cmp	r3, #0
   105c4:	e584301c 	str	r3, [r4, #28]
   105c8:	c3a02004 	movgt	r2, #4
   105cc:	da0000c6 	ble	108ec <srec_handle_char(int)+0x448>
   105d0:	e3a03000 	mov	r3, #0
   105d4:	e5c42000 	strb	r2, [r4]
   105d8:	e5c43028 	strb	r3, [r4, #40]	; 0x28
   105dc:	e5843020 	str	r3, [r4, #32]
   105e0:	e5843010 	str	r3, [r4, #16]
   105e4:	e5d400fc 	ldrb	r0, [r4, #252]	; 0xfc
   105e8:	e8bd8010 	pop	{r4, pc}
   105ec:	e2402030 	sub	r2, r0, #48	; 0x30
   105f0:	e3520036 	cmp	r2, #54	; 0x36
   105f4:	93a02000 	movls	r2, #0
   105f8:	83a02001 	movhi	r2, #1
   105fc:	e240103a 	sub	r1, r0, #58	; 0x3a
   10600:	e3510006 	cmp	r1, #6
   10604:	93822001 	orrls	r2, r2, #1
   10608:	e5d40028 	ldrb	r0, [r4, #40]	; 0x28
   1060c:	e3520000 	cmp	r2, #0
   10610:	e1a00200 	lsl	r0, r0, #4
   10614:	e6ef0070 	uxtb	r0, r0
   10618:	1a000002 	bne	10628 <srec_handle_char(int)+0x184>
   1061c:	e2432047 	sub	r2, r3, #71	; 0x47
   10620:	e3520019 	cmp	r2, #25
   10624:	8a000001 	bhi	10630 <srec_handle_char(int)+0x18c>
   10628:	e3a02005 	mov	r2, #5
   1062c:	e5c420fc 	strb	r2, [r4, #252]	; 0xfc
   10630:	e3530039 	cmp	r3, #57	; 0x39
   10634:	c2433007 	subgt	r3, r3, #7
   10638:	e5942010 	ldr	r2, [r4, #16]
   1063c:	e203300f 	and	r3, r3, #15
   10640:	e2822001 	add	r2, r2, #1
   10644:	e0803003 	add	r3, r0, r3
   10648:	e6ef3073 	uxtb	r3, r3
   1064c:	e3520002 	cmp	r2, #2
   10650:	e5c43028 	strb	r3, [r4, #40]	; 0x28
   10654:	e5842010 	str	r2, [r4, #16]
   10658:	1affffe1 	bne	105e4 <srec_handle_char(int)+0x140>
   1065c:	e5942004 	ldr	r2, [r4, #4]
   10660:	e3a01000 	mov	r1, #0
   10664:	e1e02002 	mvn	r2, r2
   10668:	e6ef2072 	uxtb	r2, r2
   1066c:	e1530002 	cmp	r3, r2
   10670:	e5c41000 	strb	r1, [r4]
   10674:	1a00009e 	bne	108f4 <srec_handle_char(int)+0x450>
   10678:	e5d43001 	ldrb	r3, [r4, #1]
   1067c:	e1530001 	cmp	r3, r1
   10680:	1a00009d 	bne	108fc <srec_handle_char(int)+0x458>
   10684:	e5943104 	ldr	r3, [r4, #260]	; 0x104
   10688:	e1530001 	cmp	r3, r1
   1068c:	0a00009a 	beq	108fc <srec_handle_char(int)+0x458>
   10690:	e5940024 	ldr	r0, [r4, #36]	; 0x24
   10694:	e594201c 	ldr	r2, [r4, #28]
   10698:	e59f1268 	ldr	r1, [pc, #616]	; 10908 <srec_handle_char(int)+0x464>
   1069c:	e12fff33 	blx	r3
   106a0:	e3a00001 	mov	r0, #1
   106a4:	e8bd8010 	pop	{r4, pc}
   106a8:	e3500053 	cmp	r0, #83	; 0x53
   106ac:	1a000076 	bne	1088c <srec_handle_char(int)+0x3e8>
   106b0:	e3a03000 	mov	r3, #0
   106b4:	e3a02001 	mov	r2, #1
   106b8:	e5843004 	str	r3, [r4, #4]
   106bc:	e58430f4 	str	r3, [r4, #244]	; 0xf4
   106c0:	e5c42000 	strb	r2, [r4]
   106c4:	e5d400fc 	ldrb	r0, [r4, #252]	; 0xfc
   106c8:	e8bd8010 	pop	{r4, pc}
   106cc:	e3a02000 	mov	r2, #0
   106d0:	e200100f 	and	r1, r0, #15
   106d4:	e3510008 	cmp	r1, #8
   106d8:	e5842010 	str	r2, [r4, #16]
   106dc:	e5842018 	str	r2, [r4, #24]
   106e0:	e5842014 	str	r2, [r4, #20]
   106e4:	03a02003 	moveq	r2, #3
   106e8:	0584200c 	streq	r2, [r4, #12]
   106ec:	0a000004 	beq	10704 <srec_handle_char(int)+0x260>
   106f0:	e3510009 	cmp	r1, #9
   106f4:	03a02002 	moveq	r2, #2
   106f8:	12002003 	andne	r2, r0, #3
   106fc:	12822001 	addne	r2, r2, #1
   10700:	e584200c 	str	r2, [r4, #12]
   10704:	e2433031 	sub	r3, r3, #49	; 0x31
   10708:	e3530008 	cmp	r3, #8
   1070c:	979ff103 	ldrls	pc, [pc, r3, lsl #2]
   10710:	ea000070 	b	108d8 <srec_handle_char(int)+0x434>
   10714:	000108c0 	.word	0x000108c0
   10718:	000108c0 	.word	0x000108c0
   1071c:	000108c0 	.word	0x000108c0
   10720:	000108d8 	.word	0x000108d8
   10724:	000108ac 	.word	0x000108ac
   10728:	000108ac 	.word	0x000108ac
   1072c:	00010894 	.word	0x00010894
   10730:	00010894 	.word	0x00010894
   10734:	00010894 	.word	0x00010894
   10738:	e2402030 	sub	r2, r0, #48	; 0x30
   1073c:	e3520036 	cmp	r2, #54	; 0x36
   10740:	93a02000 	movls	r2, #0
   10744:	83a02001 	movhi	r2, #1
   10748:	e240103a 	sub	r1, r0, #58	; 0x3a
   1074c:	e3510006 	cmp	r1, #6
   10750:	93822001 	orrls	r2, r2, #1
   10754:	e5941018 	ldr	r1, [r4, #24]
   10758:	e3520000 	cmp	r2, #0
   1075c:	e1a01201 	lsl	r1, r1, #4
   10760:	1a000003 	bne	10774 <srec_handle_char(int)+0x2d0>
   10764:	e2402047 	sub	r2, r0, #71	; 0x47
   10768:	e3520019 	cmp	r2, #25
   1076c:	85d400fc 	ldrbhi	r0, [r4, #252]	; 0xfc
   10770:	8a000002 	bhi	10780 <srec_handle_char(int)+0x2dc>
   10774:	e3a02005 	mov	r2, #5
   10778:	e1a00002 	mov	r0, r2
   1077c:	e5c420fc 	strb	r2, [r4, #252]	; 0xfc
   10780:	e3530039 	cmp	r3, #57	; 0x39
   10784:	e5942010 	ldr	r2, [r4, #16]
   10788:	c2433007 	subgt	r3, r3, #7
   1078c:	e2822001 	add	r2, r2, #1
   10790:	e203300f 	and	r3, r3, #15
   10794:	e0833001 	add	r3, r3, r1
   10798:	e3520002 	cmp	r2, #2
   1079c:	e5843018 	str	r3, [r4, #24]
   107a0:	e5842010 	str	r2, [r4, #16]
   107a4:	18bd8010 	popne	{r4, pc}
   107a8:	e3a02000 	mov	r2, #0
   107ac:	e3a0c003 	mov	ip, #3
   107b0:	e5941004 	ldr	r1, [r4, #4]
   107b4:	e5842010 	str	r2, [r4, #16]
   107b8:	e0813003 	add	r3, r1, r3
   107bc:	e5843004 	str	r3, [r4, #4]
   107c0:	e5842024 	str	r2, [r4, #36]	; 0x24
   107c4:	e5c42028 	strb	r2, [r4, #40]	; 0x28
   107c8:	e5c4c000 	strb	ip, [r4]
   107cc:	e8bd8010 	pop	{r4, pc}
   107d0:	e2401030 	sub	r1, r0, #48	; 0x30
   107d4:	e3510036 	cmp	r1, #54	; 0x36
   107d8:	93a01000 	movls	r1, #0
   107dc:	83a01001 	movhi	r1, #1
   107e0:	e240203a 	sub	r2, r0, #58	; 0x3a
   107e4:	e3520006 	cmp	r2, #6
   107e8:	93811001 	orrls	r1, r1, #1
   107ec:	e5d42028 	ldrb	r2, [r4, #40]	; 0x28
   107f0:	e3510000 	cmp	r1, #0
   107f4:	e1a02202 	lsl	r2, r2, #4
   107f8:	e6ef2072 	uxtb	r2, r2
   107fc:	1a000003 	bne	10810 <srec_handle_char(int)+0x36c>
   10800:	e2401047 	sub	r1, r0, #71	; 0x47
   10804:	e3510019 	cmp	r1, #25
   10808:	85d400fc 	ldrbhi	r0, [r4, #252]	; 0xfc
   1080c:	8a000002 	bhi	1081c <srec_handle_char(int)+0x378>
   10810:	e3a01005 	mov	r1, #5
   10814:	e1a00001 	mov	r0, r1
   10818:	e5c410fc 	strb	r1, [r4, #252]	; 0xfc
   1081c:	e3530039 	cmp	r3, #57	; 0x39
   10820:	c2433007 	subgt	r3, r3, #7
   10824:	e5941010 	ldr	r1, [r4, #16]
   10828:	e203300f 	and	r3, r3, #15
   1082c:	e0823003 	add	r3, r2, r3
   10830:	e2812001 	add	r2, r1, #1
   10834:	e6ef3073 	uxtb	r3, r3
   10838:	e3120001 	tst	r2, #1
   1083c:	e5c43028 	strb	r3, [r4, #40]	; 0x28
   10840:	e5842010 	str	r2, [r4, #16]
   10844:	18bd8010 	popne	{r4, pc}
   10848:	e5942020 	ldr	r2, [r4, #32]
   1084c:	e5941004 	ldr	r1, [r4, #4]
   10850:	e35200c7 	cmp	r2, #199	; 0xc7
   10854:	e0811003 	add	r1, r1, r3
   10858:	e5841004 	str	r1, [r4, #4]
   1085c:	d0841002 	addle	r1, r4, r2
   10860:	d5c13029 	strble	r3, [r1, #41]	; 0x29
   10864:	e594101c 	ldr	r1, [r4, #28]
   10868:	e2822001 	add	r2, r2, #1
   1086c:	e1520001 	cmp	r2, r1
   10870:	e3a03000 	mov	r3, #0
   10874:	e5842020 	str	r2, [r4, #32]
   10878:	a3a02005 	movge	r2, #5
   1087c:	e5c43028 	strb	r3, [r4, #40]	; 0x28
   10880:	a5843010 	strge	r3, [r4, #16]
   10884:	a5c42000 	strbge	r2, [r4]
   10888:	e8bd8010 	pop	{r4, pc}
   1088c:	e3a00002 	mov	r0, #2
   10890:	e8bd8010 	pop	{r4, pc}
   10894:	e3a02001 	mov	r2, #1
   10898:	e3a03002 	mov	r3, #2
   1089c:	e5c42001 	strb	r2, [r4, #1]
   108a0:	e5c43000 	strb	r3, [r4]
   108a4:	e5d400fc 	ldrb	r0, [r4, #252]	; 0xfc
   108a8:	e8bd8010 	pop	{r4, pc}
   108ac:	e3a03002 	mov	r3, #2
   108b0:	e5d400fc 	ldrb	r0, [r4, #252]	; 0xfc
   108b4:	e5c43001 	strb	r3, [r4, #1]
   108b8:	e5c43000 	strb	r3, [r4]
   108bc:	e8bd8010 	pop	{r4, pc}
   108c0:	e3a02000 	mov	r2, #0
   108c4:	e3a03002 	mov	r3, #2
   108c8:	e5c42001 	strb	r2, [r4, #1]
   108cc:	e5c43000 	strb	r3, [r4]
   108d0:	e5d400fc 	ldrb	r0, [r4, #252]	; 0xfc
   108d4:	e8bd8010 	pop	{r4, pc}
   108d8:	e3a03000 	mov	r3, #0
   108dc:	e3a00004 	mov	r0, #4
   108e0:	e5c43000 	strb	r3, [r4]
   108e4:	e5c400fc 	strb	r0, [r4, #252]	; 0xfc
   108e8:	e8bd8010 	pop	{r4, pc}
   108ec:	e3a02005 	mov	r2, #5
   108f0:	eaffff36 	b	105d0 <srec_handle_char(int)+0x12c>
   108f4:	e3a00003 	mov	r0, #3
   108f8:	e8bd8010 	pop	{r4, pc}
   108fc:	e3a00001 	mov	r0, #1
   10900:	e8bd8010 	pop	{r4, pc}
   10904:	00043c90 	.word	0x00043c90
   10908:	00043cb9 	.word	0x00043cb9

0001090c <srec_decode>:
   1090c:	e3a0c000 	mov	ip, #0
   10910:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10914:	e59f44bc 	ldr	r4, [pc, #1212]	; 10dd8 <srec_decode+0x4cc>
   10918:	e3530000 	cmp	r3, #0
   1091c:	e5c4c000 	strb	ip, [r4]
   10920:	e5840104 	str	r0, [r4, #260]	; 0x104
   10924:	e5841100 	str	r1, [r4, #256]	; 0x100
   10928:	e584c0f8 	str	ip, [r4, #248]	; 0xf8
   1092c:	e5c4c0fc 	strb	ip, [r4, #252]	; 0xfc
   10930:	08bd87f0 	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10934:	e1a05002 	mov	r5, r2
   10938:	e1a0100c 	mov	r1, ip
   1093c:	e3a08005 	mov	r8, #5
   10940:	e1a0200c 	mov	r2, ip
   10944:	e1a0700c 	mov	r7, ip
   10948:	e0856003 	add	r6, r5, r3
   1094c:	e2466001 	sub	r6, r6, #1
   10950:	e2455001 	sub	r5, r5, #1
   10954:	e2849029 	add	r9, r4, #41	; 0x29
   10958:	e5f53001 	ldrb	r3, [r5, #1]!
   1095c:	e2822001 	add	r2, r2, #1
   10960:	e58420f8 	str	r2, [r4, #248]	; 0xf8
   10964:	e1a02003 	mov	r2, r3
   10968:	e3510005 	cmp	r1, #5
   1096c:	979ff101 	ldrls	pc, [pc, r1, lsl #2]
   10970:	ea00001c 	b	109e8 <srec_decode+0xdc>
   10974:	00010bec 	.word	0x00010bec
   10978:	00010c10 	.word	0x00010c10
   1097c:	00010b6c 	.word	0x00010b6c
   10980:	00010a9c 	.word	0x00010a9c
   10984:	000109fc 	.word	0x000109fc
   10988:	0001098c 	.word	0x0001098c
   1098c:	e353002f 	cmp	r3, #47	; 0x2f
   10990:	c3a00000 	movgt	r0, #0
   10994:	d3a00001 	movle	r0, #1
   10998:	e243103a 	sub	r1, r3, #58	; 0x3a
   1099c:	e3510006 	cmp	r1, #6
   109a0:	93800001 	orrls	r0, r0, #1
   109a4:	e5d41028 	ldrb	r1, [r4, #40]	; 0x28
   109a8:	e3500000 	cmp	r0, #0
   109ac:	e1a01201 	lsl	r1, r1, #4
   109b0:	e6ef1071 	uxtb	r1, r1
   109b4:	0a0000ca 	beq	10ce4 <srec_decode+0x3d8>
   109b8:	e5c480fc 	strb	r8, [r4, #252]	; 0xfc
   109bc:	e3530039 	cmp	r3, #57	; 0x39
   109c0:	c2432007 	subgt	r2, r3, #7
   109c4:	e5943010 	ldr	r3, [r4, #16]
   109c8:	e202200f 	and	r2, r2, #15
   109cc:	e2833001 	add	r3, r3, #1
   109d0:	e0812002 	add	r2, r1, r2
   109d4:	e6ef2072 	uxtb	r2, r2
   109d8:	e3530002 	cmp	r3, #2
   109dc:	e5c42028 	strb	r2, [r4, #40]	; 0x28
   109e0:	e5843010 	str	r3, [r4, #16]
   109e4:	0a0000c7 	beq	10d08 <srec_decode+0x3fc>
   109e8:	e1550006 	cmp	r5, r6
   109ec:	08bd87f0 	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   109f0:	e59420f8 	ldr	r2, [r4, #248]	; 0xf8
   109f4:	e5d41000 	ldrb	r1, [r4]
   109f8:	eaffffd6 	b	10958 <srec_decode+0x4c>
   109fc:	e353002f 	cmp	r3, #47	; 0x2f
   10a00:	c3a00000 	movgt	r0, #0
   10a04:	d3a00001 	movle	r0, #1
   10a08:	e243103a 	sub	r1, r3, #58	; 0x3a
   10a0c:	e3510006 	cmp	r1, #6
   10a10:	93800001 	orrls	r0, r0, #1
   10a14:	e5d41028 	ldrb	r1, [r4, #40]	; 0x28
   10a18:	e3500000 	cmp	r0, #0
   10a1c:	e1a01201 	lsl	r1, r1, #4
   10a20:	e6ef1071 	uxtb	r1, r1
   10a24:	0a0000a5 	beq	10cc0 <srec_decode+0x3b4>
   10a28:	e5c480fc 	strb	r8, [r4, #252]	; 0xfc
   10a2c:	e3530039 	cmp	r3, #57	; 0x39
   10a30:	c2432007 	subgt	r2, r3, #7
   10a34:	e5943010 	ldr	r3, [r4, #16]
   10a38:	e202200f 	and	r2, r2, #15
   10a3c:	e2833001 	add	r3, r3, #1
   10a40:	e0812002 	add	r2, r1, r2
   10a44:	e6ef2072 	uxtb	r2, r2
   10a48:	e3130001 	tst	r3, #1
   10a4c:	e5c42028 	strb	r2, [r4, #40]	; 0x28
   10a50:	e5843010 	str	r3, [r4, #16]
   10a54:	1affffe3 	bne	109e8 <srec_decode+0xdc>
   10a58:	e5943020 	ldr	r3, [r4, #32]
   10a5c:	e5941004 	ldr	r1, [r4, #4]
   10a60:	e35300c7 	cmp	r3, #199	; 0xc7
   10a64:	e0811002 	add	r1, r1, r2
   10a68:	e5841004 	str	r1, [r4, #4]
   10a6c:	d0841003 	addle	r1, r4, r3
   10a70:	d5c12029 	strble	r2, [r1, #41]	; 0x29
   10a74:	e594201c 	ldr	r2, [r4, #28]
   10a78:	e2833001 	add	r3, r3, #1
   10a7c:	e1530002 	cmp	r3, r2
   10a80:	a5c48000 	strbge	r8, [r4]
   10a84:	a5847010 	strge	r7, [r4, #16]
   10a88:	e1550006 	cmp	r5, r6
   10a8c:	e5843020 	str	r3, [r4, #32]
   10a90:	e5c47028 	strb	r7, [r4, #40]	; 0x28
   10a94:	1affffd5 	bne	109f0 <srec_decode+0xe4>
   10a98:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10a9c:	e353002f 	cmp	r3, #47	; 0x2f
   10aa0:	c3a00000 	movgt	r0, #0
   10aa4:	d3a00001 	movle	r0, #1
   10aa8:	e243103a 	sub	r1, r3, #58	; 0x3a
   10aac:	e3510006 	cmp	r1, #6
   10ab0:	93800001 	orrls	r0, r0, #1
   10ab4:	e5d41028 	ldrb	r1, [r4, #40]	; 0x28
   10ab8:	e3500000 	cmp	r0, #0
   10abc:	e1a01201 	lsl	r1, r1, #4
   10ac0:	e6ef1071 	uxtb	r1, r1
   10ac4:	0a000074 	beq	10c9c <srec_decode+0x390>
   10ac8:	e5c480fc 	strb	r8, [r4, #252]	; 0xfc
   10acc:	e3530039 	cmp	r3, #57	; 0x39
   10ad0:	c2432007 	subgt	r2, r3, #7
   10ad4:	e5943010 	ldr	r3, [r4, #16]
   10ad8:	e202200f 	and	r2, r2, #15
   10adc:	e2833001 	add	r3, r3, #1
   10ae0:	e0812002 	add	r2, r1, r2
   10ae4:	e6ef2072 	uxtb	r2, r2
   10ae8:	e213c001 	ands	ip, r3, #1
   10aec:	e5c42028 	strb	r2, [r4, #40]	; 0x28
   10af0:	e5843010 	str	r3, [r4, #16]
   10af4:	1a000006 	bne	10b14 <srec_decode+0x208>
   10af8:	e5940024 	ldr	r0, [r4, #36]	; 0x24
   10afc:	e5941004 	ldr	r1, [r4, #4]
   10b00:	e0820400 	add	r0, r2, r0, lsl #8
   10b04:	e0812002 	add	r2, r1, r2
   10b08:	e5c4c028 	strb	ip, [r4, #40]	; 0x28
   10b0c:	e5840024 	str	r0, [r4, #36]	; 0x24
   10b10:	e5842004 	str	r2, [r4, #4]
   10b14:	e594200c 	ldr	r2, [r4, #12]
   10b18:	e1530082 	cmp	r3, r2, lsl #1
   10b1c:	1affffb1 	bne	109e8 <srec_decode+0xdc>
   10b20:	e5d43001 	ldrb	r3, [r4, #1]
   10b24:	e3530001 	cmp	r3, #1
   10b28:	1a000004 	bne	10b40 <srec_decode+0x234>
   10b2c:	e5940024 	ldr	r0, [r4, #36]	; 0x24
   10b30:	e5943100 	ldr	r3, [r4, #256]	; 0x100
   10b34:	e5840008 	str	r0, [r4, #8]
   10b38:	e12fff33 	blx	r3
   10b3c:	e5d43001 	ldrb	r3, [r4, #1]
   10b40:	e3530000 	cmp	r3, #0
   10b44:	e584701c 	str	r7, [r4, #28]
   10b48:	0a000098 	beq	10db0 <srec_decode+0x4a4>
   10b4c:	e3a03005 	mov	r3, #5
   10b50:	e1550006 	cmp	r5, r6
   10b54:	e5c43000 	strb	r3, [r4]
   10b58:	e5c47028 	strb	r7, [r4, #40]	; 0x28
   10b5c:	e5847020 	str	r7, [r4, #32]
   10b60:	e5847010 	str	r7, [r4, #16]
   10b64:	1affffa1 	bne	109f0 <srec_decode+0xe4>
   10b68:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10b6c:	e353002f 	cmp	r3, #47	; 0x2f
   10b70:	c3a00000 	movgt	r0, #0
   10b74:	d3a00001 	movle	r0, #1
   10b78:	e243103a 	sub	r1, r3, #58	; 0x3a
   10b7c:	e3510006 	cmp	r1, #6
   10b80:	93800001 	orrls	r0, r0, #1
   10b84:	e5941018 	ldr	r1, [r4, #24]
   10b88:	e3500000 	cmp	r0, #0
   10b8c:	e1a01201 	lsl	r1, r1, #4
   10b90:	0a000038 	beq	10c78 <srec_decode+0x36c>
   10b94:	e5c480fc 	strb	r8, [r4, #252]	; 0xfc
   10b98:	e3530039 	cmp	r3, #57	; 0x39
   10b9c:	c2432007 	subgt	r2, r3, #7
   10ba0:	e5943010 	ldr	r3, [r4, #16]
   10ba4:	e202200f 	and	r2, r2, #15
   10ba8:	e2833001 	add	r3, r3, #1
   10bac:	e0822001 	add	r2, r2, r1
   10bb0:	e3530002 	cmp	r3, #2
   10bb4:	e5842018 	str	r2, [r4, #24]
   10bb8:	e5843010 	str	r3, [r4, #16]
   10bbc:	1affff89 	bne	109e8 <srec_decode+0xdc>
   10bc0:	e3a01003 	mov	r1, #3
   10bc4:	e5943004 	ldr	r3, [r4, #4]
   10bc8:	e1550006 	cmp	r5, r6
   10bcc:	e0832002 	add	r2, r3, r2
   10bd0:	e5847010 	str	r7, [r4, #16]
   10bd4:	e5847024 	str	r7, [r4, #36]	; 0x24
   10bd8:	e5c47028 	strb	r7, [r4, #40]	; 0x28
   10bdc:	e5842004 	str	r2, [r4, #4]
   10be0:	e5c41000 	strb	r1, [r4]
   10be4:	1affff81 	bne	109f0 <srec_decode+0xe4>
   10be8:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10bec:	e3530053 	cmp	r3, #83	; 0x53
   10bf0:	1affff7c 	bne	109e8 <srec_decode+0xdc>
   10bf4:	e3a03001 	mov	r3, #1
   10bf8:	e1550006 	cmp	r5, r6
   10bfc:	e5847004 	str	r7, [r4, #4]
   10c00:	e58470f4 	str	r7, [r4, #244]	; 0xf4
   10c04:	e5c43000 	strb	r3, [r4]
   10c08:	1affff78 	bne	109f0 <srec_decode+0xe4>
   10c0c:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10c10:	e203200f 	and	r2, r3, #15
   10c14:	e3520008 	cmp	r2, #8
   10c18:	03a02003 	moveq	r2, #3
   10c1c:	e5847010 	str	r7, [r4, #16]
   10c20:	e5847018 	str	r7, [r4, #24]
   10c24:	e5847014 	str	r7, [r4, #20]
   10c28:	0584200c 	streq	r2, [r4, #12]
   10c2c:	0a000004 	beq	10c44 <srec_decode+0x338>
   10c30:	e3520009 	cmp	r2, #9
   10c34:	03a02002 	moveq	r2, #2
   10c38:	12032003 	andne	r2, r3, #3
   10c3c:	12822001 	addne	r2, r2, #1
   10c40:	e584200c 	str	r2, [r4, #12]
   10c44:	e2433031 	sub	r3, r3, #49	; 0x31
   10c48:	e3530008 	cmp	r3, #8
   10c4c:	979ff103 	ldrls	pc, [pc, r3, lsl #2]
   10c50:	ea000050 	b	10d98 <srec_decode+0x48c>
   10c54:	00010d80 	.word	0x00010d80
   10c58:	00010d80 	.word	0x00010d80
   10c5c:	00010d80 	.word	0x00010d80
   10c60:	00010d98 	.word	0x00010d98
   10c64:	00010d68 	.word	0x00010d68
   10c68:	00010d68 	.word	0x00010d68
   10c6c:	00010d4c 	.word	0x00010d4c
   10c70:	00010d4c 	.word	0x00010d4c
   10c74:	00010d4c 	.word	0x00010d4c
   10c78:	e3530066 	cmp	r3, #102	; 0x66
   10c7c:	d3a00000 	movle	r0, #0
   10c80:	c3a00001 	movgt	r0, #1
   10c84:	e243c047 	sub	ip, r3, #71	; 0x47
   10c88:	e35c0019 	cmp	ip, #25
   10c8c:	93800001 	orrls	r0, r0, #1
   10c90:	e3500000 	cmp	r0, #0
   10c94:	1affffbe 	bne	10b94 <srec_decode+0x288>
   10c98:	eaffffbe 	b	10b98 <srec_decode+0x28c>
   10c9c:	e3530066 	cmp	r3, #102	; 0x66
   10ca0:	d3a00000 	movle	r0, #0
   10ca4:	c3a00001 	movgt	r0, #1
   10ca8:	e243c047 	sub	ip, r3, #71	; 0x47
   10cac:	e35c0019 	cmp	ip, #25
   10cb0:	93800001 	orrls	r0, r0, #1
   10cb4:	e3500000 	cmp	r0, #0
   10cb8:	1affff82 	bne	10ac8 <srec_decode+0x1bc>
   10cbc:	eaffff82 	b	10acc <srec_decode+0x1c0>
   10cc0:	e3530066 	cmp	r3, #102	; 0x66
   10cc4:	d3a00000 	movle	r0, #0
   10cc8:	c3a00001 	movgt	r0, #1
   10ccc:	e243c047 	sub	ip, r3, #71	; 0x47
   10cd0:	e35c0019 	cmp	ip, #25
   10cd4:	93800001 	orrls	r0, r0, #1
   10cd8:	e3500000 	cmp	r0, #0
   10cdc:	1affff51 	bne	10a28 <srec_decode+0x11c>
   10ce0:	eaffff51 	b	10a2c <srec_decode+0x120>
   10ce4:	e3530066 	cmp	r3, #102	; 0x66
   10ce8:	d3a00000 	movle	r0, #0
   10cec:	c3a00001 	movgt	r0, #1
   10cf0:	e243c047 	sub	ip, r3, #71	; 0x47
   10cf4:	e35c0019 	cmp	ip, #25
   10cf8:	93800001 	orrls	r0, r0, #1
   10cfc:	e3500000 	cmp	r0, #0
   10d00:	1affff2c 	bne	109b8 <srec_decode+0xac>
   10d04:	eaffff2c 	b	109bc <srec_decode+0xb0>
   10d08:	e5943004 	ldr	r3, [r4, #4]
   10d0c:	e5c47000 	strb	r7, [r4]
   10d10:	e1e03003 	mvn	r3, r3
   10d14:	e6ef3073 	uxtb	r3, r3
   10d18:	e1520003 	cmp	r2, r3
   10d1c:	1affff31 	bne	109e8 <srec_decode+0xdc>
   10d20:	e5d43001 	ldrb	r3, [r4, #1]
   10d24:	e3530000 	cmp	r3, #0
   10d28:	1affff2e 	bne	109e8 <srec_decode+0xdc>
   10d2c:	e5943104 	ldr	r3, [r4, #260]	; 0x104
   10d30:	e3530000 	cmp	r3, #0
   10d34:	0affff2b 	beq	109e8 <srec_decode+0xdc>
   10d38:	e594201c 	ldr	r2, [r4, #28]
   10d3c:	e1a01009 	mov	r1, r9
   10d40:	e5940024 	ldr	r0, [r4, #36]	; 0x24
   10d44:	e12fff33 	blx	r3
   10d48:	eaffff26 	b	109e8 <srec_decode+0xdc>
   10d4c:	e3a02001 	mov	r2, #1
   10d50:	e3a03002 	mov	r3, #2
   10d54:	e1550006 	cmp	r5, r6
   10d58:	e5c42001 	strb	r2, [r4, #1]
   10d5c:	e5c43000 	strb	r3, [r4]
   10d60:	1affff22 	bne	109f0 <srec_decode+0xe4>
   10d64:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10d68:	e3a03002 	mov	r3, #2
   10d6c:	e1550006 	cmp	r5, r6
   10d70:	e5c43001 	strb	r3, [r4, #1]
   10d74:	e5c43000 	strb	r3, [r4]
   10d78:	1affff1c 	bne	109f0 <srec_decode+0xe4>
   10d7c:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10d80:	e3a03002 	mov	r3, #2
   10d84:	e1550006 	cmp	r5, r6
   10d88:	e5c47001 	strb	r7, [r4, #1]
   10d8c:	e5c43000 	strb	r3, [r4]
   10d90:	1affff16 	bne	109f0 <srec_decode+0xe4>
   10d94:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10d98:	e3a03004 	mov	r3, #4
   10d9c:	e1550006 	cmp	r5, r6
   10da0:	e5c47000 	strb	r7, [r4]
   10da4:	e5c430fc 	strb	r3, [r4, #252]	; 0xfc
   10da8:	1affff10 	bne	109f0 <srec_decode+0xe4>
   10dac:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10db0:	e5942010 	ldr	r2, [r4, #16]
   10db4:	e5943018 	ldr	r3, [r4, #24]
   10db8:	e0822fa2 	add	r2, r2, r2, lsr #31
   10dbc:	e04330c2 	sub	r3, r3, r2, asr #1
   10dc0:	e2433001 	sub	r3, r3, #1
   10dc4:	e3530000 	cmp	r3, #0
   10dc8:	e584301c 	str	r3, [r4, #28]
   10dcc:	c3a03004 	movgt	r3, #4
   10dd0:	caffff5e 	bgt	10b50 <srec_decode+0x244>
   10dd4:	eaffff5c 	b	10b4c <srec_decode+0x240>
   10dd8:	00043c90 	.word	0x00043c90

00010ddc <Hw512KRamRom::reset()>:
   10ddc:	e3a03000 	mov	r3, #0
   10de0:	e3a02001 	mov	r2, #1
   10de4:	e5c03004 	strb	r3, [r0, #4]
   10de8:	e5c02005 	strb	r2, [r0, #5]
   10dec:	e5803006 	str	r3, [r0, #6]
   10df0:	e12fff1e 	bx	lr

00010df4 <Hw512KRamRom::pageOutForEmulation(bool)>:
   10df4:	e5c01004 	strb	r1, [r0, #4]
   10df8:	e12fff1e 	bx	lr

00010dfc <Hw512KRamRom::pagingRequiresBusAccess()>:
   10dfc:	e5d00005 	ldrb	r0, [r0, #5]
   10e00:	e12fff1e 	bx	lr

00010e04 <Hw512KRamRom::pageOutForInjection(bool)>:
   10e04:	e5d03005 	ldrb	r3, [r0, #5]
   10e08:	e3530000 	cmp	r3, #0
   10e0c:	012fff1e 	bxeq	lr
   10e10:	e3a02001 	mov	r2, #1
   10e14:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
   10e18:	e3510000 	cmp	r1, #0
   10e1c:	e24dd00c 	sub	sp, sp, #12
   10e20:	e1a03001 	mov	r3, r1
   10e24:	158d2000 	strne	r2, [sp]
   10e28:	02801006 	addeq	r1, r0, #6
   10e2c:	058d2000 	streq	r2, [sp]
   10e30:	13a03000 	movne	r3, #0
   10e34:	13a02004 	movne	r2, #4
   10e38:	159f1010 	ldrne	r1, [pc, #16]	; 10e50 <Hw512KRamRom::pageOutForInjection(bool)+0x4c>
   10e3c:	03a02004 	moveq	r2, #4
   10e40:	e3a00078 	mov	r0, #120	; 0x78
   10e44:	eb001d41 	bl	18350 <BusAccess::blockWrite(unsigned long, unsigned char const*, unsigned long, int, int)>
   10e48:	e28dd00c 	add	sp, sp, #12
   10e4c:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
   10e50:	0004207c 	.word	0x0004207c

00010e54 <Hw512KRamRom::handleMemOrIOReq(unsigned long, unsigned long, unsigned long, unsigned long)>:
   10e54:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   10e58:	e1a05000 	mov	r5, r0
   10e5c:	e1a04001 	mov	r4, r1
   10e60:	e3a00002 	mov	r0, #2
   10e64:	e1a07003 	mov	r7, r3
   10e68:	e1a06002 	mov	r6, r2
   10e6c:	eb002176 	bl	1944c <BusAccess::isrAssert(int)>
   10e70:	e5d53005 	ldrb	r3, [r5, #5]
   10e74:	e6ef4074 	uxtb	r4, r4
   10e78:	e3530000 	cmp	r3, #0
   10e7c:	0a000002 	beq	10e8c <Hw512KRamRom::handleMemOrIOReq(unsigned long, unsigned long, unsigned long, unsigned long)+0x38>
   10e80:	e2443078 	sub	r3, r4, #120	; 0x78
   10e84:	e3530003 	cmp	r3, #3
   10e88:	9a000006 	bls	10ea8 <Hw512KRamRom::handleMemOrIOReq(unsigned long, unsigned long, unsigned long, unsigned long)+0x54>
   10e8c:	e354007c 	cmp	r4, #124	; 0x7c
   10e90:	1a000002 	bne	10ea0 <Hw512KRamRom::handleMemOrIOReq(unsigned long, unsigned long, unsigned long, unsigned long)+0x4c>
   10e94:	e3170002 	tst	r7, #2
   10e98:	12066001 	andne	r6, r6, #1
   10e9c:	15c56005 	strbne	r6, [r5, #5]
   10ea0:	e59d0018 	ldr	r0, [sp, #24]
   10ea4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   10ea8:	e3170002 	tst	r7, #2
   10eac:	0afffffb 	beq	10ea0 <Hw512KRamRom::handleMemOrIOReq(unsigned long, unsigned long, unsigned long, unsigned long)+0x4c>
   10eb0:	e0855003 	add	r5, r5, r3
   10eb4:	e5c56006 	strb	r6, [r5, #6]
   10eb8:	e1a01006 	mov	r1, r6
   10ebc:	e2440075 	sub	r0, r4, #117	; 0x75
   10ec0:	eb002170 	bl	19488 <BusAccess::isrValue(int, int)>
   10ec4:	eafffff5 	b	10ea0 <Hw512KRamRom::handleMemOrIOReq(unsigned long, unsigned long, unsigned long, unsigned long)+0x4c>

00010ec8 <Hw512KRamRom::Hw512KRamRom()>:
   10ec8:	e92d4010 	push	{r4, lr}
   10ecc:	e1a04000 	mov	r4, r0
   10ed0:	eb000053 	bl	11024 <HwBase::HwBase()>
   10ed4:	e3a03000 	mov	r3, #0
   10ed8:	e3a01001 	mov	r1, #1
   10edc:	e59f2014 	ldr	r2, [pc, #20]	; 10ef8 <Hw512KRamRom::Hw512KRamRom()+0x30>
   10ee0:	e5c41005 	strb	r1, [r4, #5]
   10ee4:	e5842000 	str	r2, [r4]
   10ee8:	e5c43004 	strb	r3, [r4, #4]
   10eec:	e5843006 	str	r3, [r4, #6]
   10ef0:	e1a00004 	mov	r0, r4
   10ef4:	e8bd8010 	pop	{r4, pc}
   10ef8:	0002edd8 	.word	0x0002edd8

00010efc <Hw64KPagedRam::reset()>:
   10efc:	e3a03000 	mov	r3, #0
   10f00:	e3a02001 	mov	r2, #1
   10f04:	e5c03004 	strb	r3, [r0, #4]
   10f08:	e5c02005 	strb	r2, [r0, #5]
   10f0c:	e5c03006 	strb	r3, [r0, #6]
   10f10:	e12fff1e 	bx	lr

00010f14 <Hw64KPagedRam::pagingRequiresBusAccess()>:
   10f14:	e3a00000 	mov	r0, #0
   10f18:	e12fff1e 	bx	lr

00010f1c <Hw64KPagedRam::handleMemOrIOReq(unsigned long, unsigned long, unsigned long, unsigned long)>:
   10f1c:	e59d0000 	ldr	r0, [sp]
   10f20:	e12fff1e 	bx	lr

00010f24 <Hw64KPagedRam::pageOutForEmulation(bool)>:
   10f24:	e5d03005 	ldrb	r3, [r0, #5]
   10f28:	e5c01004 	strb	r1, [r0, #4]
   10f2c:	e3530000 	cmp	r3, #0
   10f30:	012fff1e 	bxeq	lr
   10f34:	e59f3058 	ldr	r3, [pc, #88]	; 10f94 <Hw64KPagedRam::pageOutForEmulation(bool)+0x70>
   10f38:	e3510000 	cmp	r1, #0
   10f3c:	e92d4010 	push	{r4, lr}
   10f40:	e1a04000 	mov	r4, r0
   10f44:	e5930000 	ldr	r0, [r3]
   10f48:	0a000007 	beq	10f6c <Hw64KPagedRam::pageOutForEmulation(bool)+0x48>
   10f4c:	e3a01004 	mov	r1, #4
   10f50:	e59f3040 	ldr	r3, [pc, #64]	; 10f98 <Hw64KPagedRam::pageOutForEmulation(bool)+0x74>
   10f54:	e59f2040 	ldr	r2, [pc, #64]	; 10f9c <Hw64KPagedRam::pageOutForEmulation(bool)+0x78>
   10f58:	ebffe215 	bl	97b4 <LogWrite>
   10f5c:	e8bd4010 	pop	{r4, lr}
   10f60:	e3a01001 	mov	r1, #1
   10f64:	e3a00008 	mov	r0, #8
   10f68:	ea0019e4 	b	17700 <digitalWrite>
   10f6c:	e3a01004 	mov	r1, #4
   10f70:	e59f3028 	ldr	r3, [pc, #40]	; 10fa0 <Hw64KPagedRam::pageOutForEmulation(bool)+0x7c>
   10f74:	e59f2020 	ldr	r2, [pc, #32]	; 10f9c <Hw64KPagedRam::pageOutForEmulation(bool)+0x78>
   10f78:	ebffe20d 	bl	97b4 <LogWrite>
   10f7c:	e5d41006 	ldrb	r1, [r4, #6]
   10f80:	e3510000 	cmp	r1, #0
   10f84:	18bd8010 	popne	{r4, pc}
   10f88:	e3a00008 	mov	r0, #8
   10f8c:	e8bd4010 	pop	{r4, lr}
   10f90:	ea0019da 	b	17700 <digitalWrite>
   10f94:	00042084 	.word	0x00042084
   10f98:	0002ee38 	.word	0x0002ee38
   10f9c:	0002ee20 	.word	0x0002ee20
   10fa0:	0002ee1c 	.word	0x0002ee1c

00010fa4 <Hw64KPagedRam::pageOutForInjection(bool)>:
   10fa4:	e5d03005 	ldrb	r3, [r0, #5]
   10fa8:	e3530000 	cmp	r3, #0
   10fac:	012fff1e 	bxeq	lr
   10fb0:	e3510000 	cmp	r1, #0
   10fb4:	1a000004 	bne	10fcc <Hw64KPagedRam::pageOutForInjection(bool)+0x28>
   10fb8:	e5d03004 	ldrb	r3, [r0, #4]
   10fbc:	e3530000 	cmp	r3, #0
   10fc0:	112fff1e 	bxne	lr
   10fc4:	e3a00008 	mov	r0, #8
   10fc8:	ea0019cc 	b	17700 <digitalWrite>
   10fcc:	e3a01001 	mov	r1, #1
   10fd0:	e3a00008 	mov	r0, #8
   10fd4:	ea0019c9 	b	17700 <digitalWrite>

00010fd8 <Hw64KPagedRam::Hw64KPagedRam()>:
   10fd8:	e92d4010 	push	{r4, lr}
   10fdc:	e1a04000 	mov	r4, r0
   10fe0:	eb00000f 	bl	11024 <HwBase::HwBase()>
   10fe4:	e3a03000 	mov	r3, #0
   10fe8:	e3a01001 	mov	r1, #1
   10fec:	e59f2014 	ldr	r2, [pc, #20]	; 11008 <Hw64KPagedRam::Hw64KPagedRam()+0x30>
   10ff0:	e5c41005 	strb	r1, [r4, #5]
   10ff4:	e5842000 	str	r2, [r4]
   10ff8:	e5c43004 	strb	r3, [r4, #4]
   10ffc:	e5c43006 	strb	r3, [r4, #6]
   11000:	e1a00004 	mov	r0, r4
   11004:	e8bd8010 	pop	{r4, pc}
   11008:	0002ee08 	.word	0x0002ee08

0001100c <HwBase::reset()>:
   1100c:	e12fff1e 	bx	lr

00011010 <HwBase::handleMemOrIOReq(unsigned long, unsigned long, unsigned long, unsigned long)>:
   11010:	e59d0000 	ldr	r0, [sp]
   11014:	e12fff1e 	bx	lr

00011018 <HwBase::pageOutForEmulation(bool)>:
   11018:	e12fff1e 	bx	lr

0001101c <HwBase::pagingRequiresBusAccess()>:
   1101c:	e3a00000 	mov	r0, #0
   11020:	e12fff1e 	bx	lr

00011024 <HwBase::HwBase()>:
   11024:	e92d4010 	push	{r4, lr}
   11028:	e1a04000 	mov	r4, r0
   1102c:	e59f300c 	ldr	r3, [pc, #12]	; 11040 <HwBase::HwBase()+0x1c>
   11030:	e5803000 	str	r3, [r0]
   11034:	eb00003a 	bl	11124 <HwManager::add(HwBase*)>
   11038:	e1a00004 	mov	r0, r4
   1103c:	e8bd8010 	pop	{r4, pc}
   11040:	0002ee54 	.word	0x0002ee54

00011044 <HwManager::init(CommandHandler*, Display*)>:
   11044:	e59f3004 	ldr	r3, [pc, #4]	; 11050 <HwManager::init(CommandHandler*, Display*)+0xc>
   11048:	e1c300f0 	strd	r0, [r3]
   1104c:	e12fff1e 	bx	lr
   11050:	00043d98 	.word	0x00043d98

00011054 <HwManager::service()>:
   11054:	e3a03000 	mov	r3, #0
   11058:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1105c:	e1a0b003 	mov	fp, r3
   11060:	e3a05014 	mov	r5, #20
   11064:	e24ddf81 	sub	sp, sp, #516	; 0x204
   11068:	e28d6c02 	add	r6, sp, #512	; 0x200
   1106c:	e59f409c 	ldr	r4, [pc, #156]	; 11110 <HwManager::service()+0xbc>
   11070:	e59f709c 	ldr	r7, [pc, #156]	; 11114 <HwManager::service()+0xc0>
   11074:	e59fa09c 	ldr	sl, [pc, #156]	; 11118 <HwManager::service()+0xc4>
   11078:	e59f909c 	ldr	r9, [pc, #156]	; 1111c <HwManager::service()+0xc8>
   1107c:	e59f809c 	ldr	r8, [pc, #156]	; 11120 <HwManager::service()+0xcc>
   11080:	e56631f4 	strb	r3, [r6, #-500]!	; 0xfffffe0c
   11084:	e5942008 	ldr	r2, [r4, #8]
   11088:	e594300c 	ldr	r3, [r4, #12]
   1108c:	e1520003 	cmp	r2, r3
   11090:	0a000015 	beq	110ec <HwManager::service()+0x98>
   11094:	e1a00006 	mov	r0, r6
   11098:	eb006dbf 	bl	2c79c <strlen>
   1109c:	e594300c 	ldr	r3, [r4, #12]
   110a0:	e0860000 	add	r0, r6, r0
   110a4:	e0833083 	add	r3, r3, r3, lsl #1
   110a8:	e0871103 	add	r1, r7, r3, lsl #2
   110ac:	e5d12004 	ldrb	r2, [r1, #4]
   110b0:	e5911008 	ldr	r1, [r1, #8]
   110b4:	e3520000 	cmp	r2, #0
   110b8:	01a0200a 	moveq	r2, sl
   110bc:	11a02009 	movne	r2, r9
   110c0:	e7973103 	ldr	r3, [r7, r3, lsl #2]
   110c4:	e58d1000 	str	r1, [sp]
   110c8:	e1a01008 	mov	r1, r8
   110cc:	ebffe238 	bl	99b4 <ee_sprintf>
   110d0:	e594300c 	ldr	r3, [r4, #12]
   110d4:	e5942010 	ldr	r2, [r4, #16]
   110d8:	e2833001 	add	r3, r3, #1
   110dc:	e584300c 	str	r3, [r4, #12]
   110e0:	e594300c 	ldr	r3, [r4, #12]
   110e4:	e1530002 	cmp	r3, r2
   110e8:	2584b00c 	strcs	fp, [r4, #12]
   110ec:	e2555001 	subs	r5, r5, #1
   110f0:	1affffe3 	bne	11084 <HwManager::service()+0x30>
   110f4:	e5dd300c 	ldrb	r3, [sp, #12]
   110f8:	e3530000 	cmp	r3, #0
   110fc:	0a000001 	beq	11108 <HwManager::service()+0xb4>
   11100:	e28d000c 	add	r0, sp, #12
   11104:	eb00067b 	bl	12af8 <McManager::logDebugMessage(char const*)>
   11108:	e28ddf81 	add	sp, sp, #516	; 0x204
   1110c:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11110:	00043d98 	.word	0x00043d98
   11114:	00043dd8 	.word	0x00043dd8
   11118:	0002ee78 	.word	0x0002ee78
   1111c:	0002ee74 	.word	0x0002ee74
   11120:	0002ee7c 	.word	0x0002ee7c

00011124 <HwManager::add(HwBase*)>:
   11124:	e59f2018 	ldr	r2, [pc, #24]	; 11144 <HwManager::add(HwBase*)+0x20>
   11128:	e5923014 	ldr	r3, [r2, #20]
   1112c:	e3530009 	cmp	r3, #9
   11130:	d2831001 	addle	r1, r3, #1
   11134:	d0823103 	addle	r3, r2, r3, lsl #2
   11138:	d5821014 	strle	r1, [r2, #20]
   1113c:	d5830018 	strle	r0, [r3, #24]
   11140:	e12fff1e 	bx	lr
   11144:	00043d98 	.word	0x00043d98

00011148 <HwManager::reset()>:
   11148:	e92d4070 	push	{r4, r5, r6, lr}
   1114c:	e59f6034 	ldr	r6, [pc, #52]	; 11188 <HwManager::reset()+0x40>
   11150:	e5963014 	ldr	r3, [r6, #20]
   11154:	e3530000 	cmp	r3, #0
   11158:	d8bd8070 	pople	{r4, r5, r6, pc}
   1115c:	e3a04000 	mov	r4, #0
   11160:	e2865014 	add	r5, r6, #20
   11164:	e5b50004 	ldr	r0, [r5, #4]!
   11168:	e2844001 	add	r4, r4, #1
   1116c:	e5903000 	ldr	r3, [r0]
   11170:	e5933000 	ldr	r3, [r3]
   11174:	e12fff33 	blx	r3
   11178:	e5963014 	ldr	r3, [r6, #20]
   1117c:	e1530004 	cmp	r3, r4
   11180:	cafffff7 	bgt	11164 <HwManager::reset()+0x1c>
   11184:	e8bd8070 	pop	{r4, r5, r6, pc}
   11188:	00043d98 	.word	0x00043d98

0001118c <HwManager::pageOutForEmulation(bool)>:
   1118c:	e59f2060 	ldr	r2, [pc, #96]	; 111f4 <HwManager::pageOutForEmulation(bool)+0x68>
   11190:	e3500000 	cmp	r0, #0
   11194:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   11198:	e59f6058 	ldr	r6, [pc, #88]	; 111f8 <HwManager::pageOutForEmulation(bool)+0x6c>
   1119c:	e59f3058 	ldr	r3, [pc, #88]	; 111fc <HwManager::pageOutForEmulation(bool)+0x70>
   111a0:	e1a07000 	mov	r7, r0
   111a4:	11a03002 	movne	r3, r2
   111a8:	e3a01004 	mov	r1, #4
   111ac:	e59f204c 	ldr	r2, [pc, #76]	; 11200 <HwManager::pageOutForEmulation(bool)+0x74>
   111b0:	e59f004c 	ldr	r0, [pc, #76]	; 11204 <HwManager::pageOutForEmulation(bool)+0x78>
   111b4:	ebffe17e 	bl	97b4 <LogWrite>
   111b8:	e5963014 	ldr	r3, [r6, #20]
   111bc:	e3530000 	cmp	r3, #0
   111c0:	d8bd81f0 	pople	{r4, r5, r6, r7, r8, pc}
   111c4:	e3a04000 	mov	r4, #0
   111c8:	e2865014 	add	r5, r6, #20
   111cc:	e5b50004 	ldr	r0, [r5, #4]!
   111d0:	e1a01007 	mov	r1, r7
   111d4:	e5903000 	ldr	r3, [r0]
   111d8:	e2844001 	add	r4, r4, #1
   111dc:	e5933008 	ldr	r3, [r3, #8]
   111e0:	e12fff33 	blx	r3
   111e4:	e5963014 	ldr	r3, [r6, #20]
   111e8:	e1530004 	cmp	r3, r4
   111ec:	cafffff6 	bgt	111cc <HwManager::pageOutForEmulation(bool)+0x40>
   111f0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   111f4:	0002ee38 	.word	0x0002ee38
   111f8:	00043d98 	.word	0x00043d98
   111fc:	0002ee1c 	.word	0x0002ee1c
   11200:	0002ee20 	.word	0x0002ee20
   11204:	0002ee68 	.word	0x0002ee68

00011208 <HwManager::pageOutForInjection(bool)>:
   11208:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   1120c:	e59f603c 	ldr	r6, [pc, #60]	; 11250 <HwManager::pageOutForInjection(bool)+0x48>
   11210:	e5963014 	ldr	r3, [r6, #20]
   11214:	e3530000 	cmp	r3, #0
   11218:	d8bd81f0 	pople	{r4, r5, r6, r7, r8, pc}
   1121c:	e1a07000 	mov	r7, r0
   11220:	e3a04000 	mov	r4, #0
   11224:	e2865014 	add	r5, r6, #20
   11228:	e5b50004 	ldr	r0, [r5, #4]!
   1122c:	e1a01007 	mov	r1, r7
   11230:	e5903000 	ldr	r3, [r0]
   11234:	e2844001 	add	r4, r4, #1
   11238:	e593300c 	ldr	r3, [r3, #12]
   1123c:	e12fff33 	blx	r3
   11240:	e5963014 	ldr	r3, [r6, #20]
   11244:	e1530004 	cmp	r3, r4
   11248:	cafffff6 	bgt	11228 <HwManager::pageOutForInjection(bool)+0x20>
   1124c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   11250:	00043d98 	.word	0x00043d98

00011254 <HwManager::pagingRequiresBusAccess()>:
   11254:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11258:	e59f30cc 	ldr	r3, [pc, #204]	; 1132c <HwManager::pagingRequiresBusAccess()+0xd8>
   1125c:	e24dd00c 	sub	sp, sp, #12
   11260:	e5934014 	ldr	r4, [r3, #20]
   11264:	e3540000 	cmp	r4, #0
   11268:	d3a00000 	movle	r0, #0
   1126c:	da00002c 	ble	11324 <HwManager::pagingRequiresBusAccess()+0xd0>
   11270:	e3a03000 	mov	r3, #0
   11274:	e58d3000 	str	r3, [sp]
   11278:	e3a03000 	mov	r3, #0
   1127c:	e58d3004 	str	r3, [sp, #4]
   11280:	e3a0a000 	mov	sl, #0
   11284:	e3a0b000 	mov	fp, #0
   11288:	e3a08000 	mov	r8, #0
   1128c:	e3a07000 	mov	r7, #0
   11290:	e3a06000 	mov	r6, #0
   11294:	e3a05000 	mov	r5, #0
   11298:	e3a09000 	mov	r9, #0
   1129c:	ebffffec 	bl	11254 <HwManager::pagingRequiresBusAccess()>
   112a0:	e3500000 	cmp	r0, #0
   112a4:	e2899001 	add	r9, r9, #1
   112a8:	1a00001d 	bne	11324 <HwManager::pagingRequiresBusAccess()+0xd0>
   112ac:	e1540009 	cmp	r4, r9
   112b0:	1afffff9 	bne	1129c <HwManager::pagingRequiresBusAccess()+0x48>
   112b4:	e2855001 	add	r5, r5, #1
   112b8:	e1550004 	cmp	r5, r4
   112bc:	1afffff5 	bne	11298 <HwManager::pagingRequiresBusAccess()+0x44>
   112c0:	e2866001 	add	r6, r6, #1
   112c4:	e1560004 	cmp	r6, r4
   112c8:	1afffff1 	bne	11294 <HwManager::pagingRequiresBusAccess()+0x40>
   112cc:	e2877001 	add	r7, r7, #1
   112d0:	e1570004 	cmp	r7, r4
   112d4:	1affffed 	bne	11290 <HwManager::pagingRequiresBusAccess()+0x3c>
   112d8:	e2888001 	add	r8, r8, #1
   112dc:	e1580004 	cmp	r8, r4
   112e0:	1affffe9 	bne	1128c <HwManager::pagingRequiresBusAccess()+0x38>
   112e4:	e28bb001 	add	fp, fp, #1
   112e8:	e15b0004 	cmp	fp, r4
   112ec:	1affffe5 	bne	11288 <HwManager::pagingRequiresBusAccess()+0x34>
   112f0:	e28aa001 	add	sl, sl, #1
   112f4:	e15a0004 	cmp	sl, r4
   112f8:	1affffe1 	bne	11284 <HwManager::pagingRequiresBusAccess()+0x30>
   112fc:	e59d3004 	ldr	r3, [sp, #4]
   11300:	e2833001 	add	r3, r3, #1
   11304:	e1530004 	cmp	r3, r4
   11308:	e58d3004 	str	r3, [sp, #4]
   1130c:	1affffdb 	bne	11280 <HwManager::pagingRequiresBusAccess()+0x2c>
   11310:	e59d3000 	ldr	r3, [sp]
   11314:	e2833001 	add	r3, r3, #1
   11318:	e1530004 	cmp	r3, r4
   1131c:	e58d3000 	str	r3, [sp]
   11320:	1affffd4 	bne	11278 <HwManager::pagingRequiresBusAccess()+0x24>
   11324:	e28dd00c 	add	sp, sp, #12
   11328:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1132c:	00043d98 	.word	0x00043d98

00011330 <HwManager::handleMemOrIOReq(unsigned long, unsigned long, unsigned long, unsigned long)>:
   11330:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11334:	e59f5104 	ldr	r5, [pc, #260]	; 11440 <HwManager::handleMemOrIOReq(unsigned long, unsigned long, unsigned long, unsigned long)+0x110>
   11338:	e1a08000 	mov	r8, r0
   1133c:	e5950014 	ldr	r0, [r5, #20]
   11340:	e24dd008 	sub	sp, sp, #8
   11344:	e3500000 	cmp	r0, #0
   11348:	e1a07001 	mov	r7, r1
   1134c:	e1a06002 	mov	r6, r2
   11350:	e1a00003 	mov	r0, r3
   11354:	da00000e 	ble	11394 <HwManager::handleMemOrIOReq(unsigned long, unsigned long, unsigned long, unsigned long)+0x64>
   11358:	e3a04000 	mov	r4, #0
   1135c:	e2859018 	add	r9, r5, #24
   11360:	e7992104 	ldr	r2, [r9, r4, lsl #2]
   11364:	e1a03006 	mov	r3, r6
   11368:	e5921000 	ldr	r1, [r2]
   1136c:	e58d0000 	str	r0, [sp]
   11370:	e591a004 	ldr	sl, [r1, #4]
   11374:	e1a00002 	mov	r0, r2
   11378:	e1a01008 	mov	r1, r8
   1137c:	e1a02007 	mov	r2, r7
   11380:	e12fff3a 	blx	sl
   11384:	e5953014 	ldr	r3, [r5, #20]
   11388:	e2844001 	add	r4, r4, #1
   1138c:	e1530004 	cmp	r3, r4
   11390:	cafffff2 	bgt	11360 <HwManager::handleMemOrIOReq(unsigned long, unsigned long, unsigned long, unsigned long)+0x30>
   11394:	e3160008 	tst	r6, #8
   11398:	1a000001 	bne	113a4 <HwManager::handleMemOrIOReq(unsigned long, unsigned long, unsigned long, unsigned long)+0x74>
   1139c:	e28dd008 	add	sp, sp, #8
   113a0:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   113a4:	e5952010 	ldr	r2, [r5, #16]
   113a8:	e3520000 	cmp	r2, #0
   113ac:	0afffffa 	beq	1139c <HwManager::handleMemOrIOReq(unsigned long, unsigned long, unsigned long, unsigned long)+0x6c>
   113b0:	e5951008 	ldr	r1, [r5, #8]
   113b4:	e595300c 	ldr	r3, [r5, #12]
   113b8:	e1510003 	cmp	r1, r3
   113bc:	0a000008 	beq	113e4 <HwManager::handleMemOrIOReq(unsigned long, unsigned long, unsigned long, unsigned long)+0xb4>
   113c0:	e595300c 	ldr	r3, [r5, #12]
   113c4:	e5951008 	ldr	r1, [r5, #8]
   113c8:	e1530001 	cmp	r3, r1
   113cc:	e5951008 	ldr	r1, [r5, #8]
   113d0:	2a000016 	bcs	11430 <HwManager::handleMemOrIOReq(unsigned long, unsigned long, unsigned long, unsigned long)+0x100>
   113d4:	e242c001 	sub	ip, r2, #1
   113d8:	e3530000 	cmp	r3, #0
   113dc:	015c0001 	cmpeq	ip, r1
   113e0:	0affffed 	beq	1139c <HwManager::handleMemOrIOReq(unsigned long, unsigned long, unsigned long, unsigned long)+0x6c>
   113e4:	e5953008 	ldr	r3, [r5, #8]
   113e8:	e5951008 	ldr	r1, [r5, #8]
   113ec:	e0833083 	add	r3, r3, r3, lsl #1
   113f0:	e2811001 	add	r1, r1, #1
   113f4:	e5851008 	str	r1, [r5, #8]
   113f8:	e595c008 	ldr	ip, [r5, #8]
   113fc:	e59f1040 	ldr	r1, [pc, #64]	; 11444 <HwManager::handleMemOrIOReq(unsigned long, unsigned long, unsigned long, unsigned long)+0x114>
   11400:	e1a03103 	lsl	r3, r3, #2
   11404:	e15c0002 	cmp	ip, r2
   11408:	e1e06006 	mvn	r6, r6
   1140c:	e0812003 	add	r2, r1, r3
   11410:	e7818003 	str	r8, [r1, r3]
   11414:	23a03000 	movcs	r3, #0
   11418:	e2066001 	and	r6, r6, #1
   1141c:	e5c26004 	strb	r6, [r2, #4]
   11420:	e5827008 	str	r7, [r2, #8]
   11424:	25853008 	strcs	r3, [r5, #8]
   11428:	e28dd008 	add	sp, sp, #8
   1142c:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11430:	e0433001 	sub	r3, r3, r1
   11434:	e3530001 	cmp	r3, #1
   11438:	8affffe9 	bhi	113e4 <HwManager::handleMemOrIOReq(unsigned long, unsigned long, unsigned long, unsigned long)+0xb4>
   1143c:	eaffffd6 	b	1139c <HwManager::handleMemOrIOReq(unsigned long, unsigned long, unsigned long, unsigned long)+0x6c>
   11440:	00043d98 	.word	0x00043d98
   11444:	00043dd8 	.word	0x00043dd8

00011448 <_GLOBAL__sub_I__ZN9HwManager15_debugIOPortBufE>:
   11448:	e3a02000 	mov	r2, #0
   1144c:	e3a01f7d 	mov	r1, #500	; 0x1f4
   11450:	e59f300c 	ldr	r3, [pc, #12]	; 11464 <_GLOBAL__sub_I__ZN9HwManager15_debugIOPortBufE+0x1c>
   11454:	e5832008 	str	r2, [r3, #8]
   11458:	e5831010 	str	r1, [r3, #16]
   1145c:	e583200c 	str	r2, [r3, #12]
   11460:	e12fff1e 	bx	lr
   11464:	00043d98 	.word	0x00043d98

00011468 <McBase::debuggerCommand(char*, char*, int)>:
   11468:	e92d4070 	push	{r4, r5, r6, lr}
   1146c:	e1a04001 	mov	r4, r1
   11470:	e1a05002 	mov	r5, r2
   11474:	e1a06003 	mov	r6, r3
   11478:	eb002339 	bl	1a164 <TargetDebug::get()>
   1147c:	e3500000 	cmp	r0, #0
   11480:	08bd8070 	popeq	{r4, r5, r6, pc}
   11484:	e1a03006 	mov	r3, r6
   11488:	e1a02005 	mov	r2, r5
   1148c:	e1a01004 	mov	r1, r4
   11490:	e8bd4070 	pop	{r4, r5, r6, lr}
   11494:	ea002882 	b	1b6a4 <TargetDebug::debuggerCommand(char*, char*, int)>

00011498 <McBase::McBase()>:
   11498:	e92d4010 	push	{r4, lr}
   1149c:	e1a04000 	mov	r4, r0
   114a0:	e59f300c 	ldr	r3, [pc, #12]	; 114b4 <McBase::McBase()+0x1c>
   114a4:	e5803000 	str	r3, [r0]
   114a8:	eb0000c2 	bl	117b8 <McManager::add(McBase*)>
   114ac:	e1a00004 	mov	r0, r4
   114b0:	e8bd8010 	pop	{r4, pc}
   114b4:	0002ee94 	.word	0x0002ee94

000114b8 <McBase::getDescriptorTableCount()>:
   114b8:	e3a00001 	mov	r0, #1
   114bc:	e12fff1e 	bx	lr

000114c0 <McBase::reset(bool)>:
   114c0:	e3a00000 	mov	r0, #0
   114c4:	e12fff1e 	bx	lr

000114c8 <McManager::sendRemoteDebugProtocolMsg(char const*, char const*)>:
   114c8:	e59f3018 	ldr	r3, [pc, #24]	; 114e8 <McManager::sendRemoteDebugProtocolMsg(char const*, char const*)+0x20>
   114cc:	e5933000 	ldr	r3, [r3]
   114d0:	e3530000 	cmp	r3, #0
   114d4:	012fff1e 	bxeq	lr
   114d8:	e1a02001 	mov	r2, r1
   114dc:	e1a01000 	mov	r1, r0
   114e0:	e1a00003 	mov	r0, r3
   114e4:	eafff560 	b	ea6c <CommandHandler::sendRemoteDebugProtocolMsg(char const*, char const*)>
   114e8:	00045548 	.word	0x00045548

000114ec <McManager::targetIrqFromTimer(void*)>:
   114ec:	e92d4010 	push	{r4, lr}
   114f0:	eb001a1c 	bl	17d68 <BusAccess::isUnderControl()>
   114f4:	e3500000 	cmp	r0, #0
   114f8:	18bd8010 	popne	{r4, pc}
   114fc:	eb001f54 	bl	19254 <BusAccess::pauseIsPaused()>
   11500:	e3500000 	cmp	r0, #0
   11504:	18bd8010 	popne	{r4, pc}
   11508:	e3e00000 	mvn	r0, #0
   1150c:	e8bd4010 	pop	{r4, lr}
   11510:	ea001a07 	b	17d34 <BusAccess::targetIRQ(int)>

00011514 <McManager::init(CommandHandler*, Display*)>:
   11514:	e59f3018 	ldr	r3, [pc, #24]	; 11534 <McManager::init(CommandHandler*, Display*)+0x20>
   11518:	e92d4010 	push	{r4, lr}
   1151c:	e1c300f0 	strd	r0, [r3]
   11520:	eb00230f 	bl	1a164 <TargetDebug::get()>
   11524:	e59f300c 	ldr	r3, [pc, #12]	; 11538 <McManager::init(CommandHandler*, Display*)+0x24>
   11528:	e59f200c 	ldr	r2, [pc, #12]	; 1153c <McManager::init(CommandHandler*, Display*)+0x28>
   1152c:	e5832000 	str	r2, [r3]
   11530:	e8bd8010 	pop	{r4, pc}
   11534:	00045548 	.word	0x00045548
   11538:	0006aec8 	.word	0x0006aec8
   1153c:	000114c8 	.word	0x000114c8

00011540 <McManager::getNumMachines()>:
   11540:	e59f3004 	ldr	r3, [pc, #4]	; 1154c <McManager::getNumMachines()+0xc>
   11544:	e5930008 	ldr	r0, [r3, #8]
   11548:	e12fff1e 	bx	lr
   1154c:	00045548 	.word	0x00045548

00011550 <McManager::getMachine()>:
   11550:	e59f3004 	ldr	r3, [pc, #4]	; 1155c <McManager::getMachine()+0xc>
   11554:	e593000c 	ldr	r0, [r3, #12]
   11558:	e12fff1e 	bx	lr
   1155c:	00045548 	.word	0x00045548

00011560 <McManager::getDescriptorTable()>:
   11560:	e59f3020 	ldr	r3, [pc, #32]	; 11588 <McManager::getDescriptorTable()+0x28>
   11564:	e593000c 	ldr	r0, [r3, #12]
   11568:	e3500000 	cmp	r0, #0
   1156c:	0a000003 	beq	11580 <McManager::getDescriptorTable()+0x20>
   11570:	e5903000 	ldr	r3, [r0]
   11574:	e3e01000 	mvn	r1, #0
   11578:	e593300c 	ldr	r3, [r3, #12]
   1157c:	e12fff13 	bx	r3
   11580:	e59f0004 	ldr	r0, [pc, #4]	; 1158c <McManager::getDescriptorTable()+0x2c>
   11584:	e12fff1e 	bx	lr
   11588:	00045548 	.word	0x00045548
   1158c:	00042088 	.word	0x00042088

00011590 <McManager::getMachineJSON()>:
   11590:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11594:	e59fb1cc 	ldr	fp, [pc, #460]	; 11768 <McManager::getMachineJSON()+0x1d8>
   11598:	e24dd00c 	sub	sp, sp, #12
   1159c:	e3a02e46 	mov	r2, #1120	; 0x460
   115a0:	e28b0010 	add	r0, fp, #16
   115a4:	e59f11c0 	ldr	r1, [pc, #448]	; 1176c <McManager::getMachineJSON()+0x1dc>
   115a8:	eb006c66 	bl	2c748 <strlcpy>
   115ac:	e59b3008 	ldr	r3, [fp, #8]
   115b0:	e28b5010 	add	r5, fp, #16
   115b4:	e3530000 	cmp	r3, #0
   115b8:	da00003e 	ble	116b8 <McManager::getMachineJSON()+0x128>
   115bc:	e3a03000 	mov	r3, #0
   115c0:	e1a06005 	mov	r6, r5
   115c4:	e3a09001 	mov	r9, #1
   115c8:	e28b7e47 	add	r7, fp, #1136	; 0x470
   115cc:	e59fa19c 	ldr	sl, [pc, #412]	; 11770 <McManager::getMachineJSON()+0x1e0>
   115d0:	e59f819c 	ldr	r8, [pc, #412]	; 11774 <McManager::getMachineJSON()+0x1e4>
   115d4:	e58d3004 	str	r3, [sp, #4]
   115d8:	e2877004 	add	r7, r7, #4
   115dc:	e3a04000 	mov	r4, #0
   115e0:	ea000016 	b	11640 <McManager::getMachineJSON()+0xb0>
   115e4:	e3a02e46 	mov	r2, #1120	; 0x460
   115e8:	e1a01008 	mov	r1, r8
   115ec:	eb006c55 	bl	2c748 <strlcpy>
   115f0:	e1a00006 	mov	r0, r6
   115f4:	eb006c68 	bl	2c79c <strlen>
   115f8:	e1a09000 	mov	r9, r0
   115fc:	e5970000 	ldr	r0, [r7]
   11600:	e1a01004 	mov	r1, r4
   11604:	e5903000 	ldr	r3, [r0]
   11608:	e2844001 	add	r4, r4, #1
   1160c:	e593300c 	ldr	r3, [r3, #12]
   11610:	e12fff33 	blx	r3
   11614:	e3a02e46 	mov	r2, #1120	; 0x460
   11618:	e5901000 	ldr	r1, [r0]
   1161c:	e0850009 	add	r0, r5, r9
   11620:	eb006c48 	bl	2c748 <strlcpy>
   11624:	e1a00006 	mov	r0, r6
   11628:	eb006c5b 	bl	2c79c <strlen>
   1162c:	e3a02e46 	mov	r2, #1120	; 0x460
   11630:	e0850000 	add	r0, r5, r0
   11634:	e1a01008 	mov	r1, r8
   11638:	eb006c42 	bl	2c748 <strlcpy>
   1163c:	e3a09000 	mov	r9, #0
   11640:	e5970000 	ldr	r0, [r7]
   11644:	e5903000 	ldr	r3, [r0]
   11648:	e5933008 	ldr	r3, [r3, #8]
   1164c:	e153000a 	cmp	r3, sl
   11650:	03a00001 	moveq	r0, #1
   11654:	1a00000d 	bne	11690 <McManager::getMachineJSON()+0x100>
   11658:	e1500004 	cmp	r0, r4
   1165c:	da00000e 	ble	1169c <McManager::getMachineJSON()+0x10c>
   11660:	e1a00006 	mov	r0, r6
   11664:	eb006c4c 	bl	2c79c <strlen>
   11668:	e3590000 	cmp	r9, #0
   1166c:	e0850000 	add	r0, r5, r0
   11670:	1affffdb 	bne	115e4 <McManager::getMachineJSON()+0x54>
   11674:	e3a02e46 	mov	r2, #1120	; 0x460
   11678:	e59f10f8 	ldr	r1, [pc, #248]	; 11778 <McManager::getMachineJSON()+0x1e8>
   1167c:	eb006c31 	bl	2c748 <strlcpy>
   11680:	e1a00006 	mov	r0, r6
   11684:	eb006c44 	bl	2c79c <strlen>
   11688:	e0850000 	add	r0, r5, r0
   1168c:	eaffffd4 	b	115e4 <McManager::getMachineJSON()+0x54>
   11690:	e12fff33 	blx	r3
   11694:	e1500004 	cmp	r0, r4
   11698:	cafffff0 	bgt	11660 <McManager::getMachineJSON()+0xd0>
   1169c:	e59d2004 	ldr	r2, [sp, #4]
   116a0:	e59b3008 	ldr	r3, [fp, #8]
   116a4:	e2822001 	add	r2, r2, #1
   116a8:	e1530002 	cmp	r3, r2
   116ac:	e58d2004 	str	r2, [sp, #4]
   116b0:	e2877004 	add	r7, r7, #4
   116b4:	caffffc8 	bgt	115dc <McManager::getMachineJSON()+0x4c>
   116b8:	e59f00bc 	ldr	r0, [pc, #188]	; 1177c <McManager::getMachineJSON()+0x1ec>
   116bc:	eb006c36 	bl	2c79c <strlen>
   116c0:	e3a02e46 	mov	r2, #1120	; 0x460
   116c4:	e59f10b4 	ldr	r1, [pc, #180]	; 11780 <McManager::getMachineJSON()+0x1f0>
   116c8:	e0850000 	add	r0, r5, r0
   116cc:	eb006c1d 	bl	2c748 <strlcpy>
   116d0:	e59f00a4 	ldr	r0, [pc, #164]	; 1177c <McManager::getMachineJSON()+0x1ec>
   116d4:	eb006c30 	bl	2c79c <strlen>
   116d8:	e3a02e46 	mov	r2, #1120	; 0x460
   116dc:	e59f10a0 	ldr	r1, [pc, #160]	; 11784 <McManager::getMachineJSON()+0x1f4>
   116e0:	e0850000 	add	r0, r5, r0
   116e4:	eb006c17 	bl	2c748 <strlcpy>
   116e8:	e59f008c 	ldr	r0, [pc, #140]	; 1177c <McManager::getMachineJSON()+0x1ec>
   116ec:	eb006c2a 	bl	2c79c <strlen>
   116f0:	e3a02e46 	mov	r2, #1120	; 0x460
   116f4:	e59f1078 	ldr	r1, [pc, #120]	; 11774 <McManager::getMachineJSON()+0x1e4>
   116f8:	e0850000 	add	r0, r5, r0
   116fc:	eb006c11 	bl	2c748 <strlcpy>
   11700:	e59f0074 	ldr	r0, [pc, #116]	; 1177c <McManager::getMachineJSON()+0x1ec>
   11704:	eb006c24 	bl	2c79c <strlen>
   11708:	e59b300c 	ldr	r3, [fp, #12]
   1170c:	e0854000 	add	r4, r5, r0
   11710:	e3530000 	cmp	r3, #0
   11714:	0a000011 	beq	11760 <McManager::getMachineJSON()+0x1d0>
   11718:	e5932000 	ldr	r2, [r3]
   1171c:	e1a00003 	mov	r0, r3
   11720:	e3e01000 	mvn	r1, #0
   11724:	e592300c 	ldr	r3, [r2, #12]
   11728:	e12fff33 	blx	r3
   1172c:	e5901000 	ldr	r1, [r0]
   11730:	e3a02e46 	mov	r2, #1120	; 0x460
   11734:	e1a00004 	mov	r0, r4
   11738:	eb006c02 	bl	2c748 <strlcpy>
   1173c:	e59f0038 	ldr	r0, [pc, #56]	; 1177c <McManager::getMachineJSON()+0x1ec>
   11740:	eb006c15 	bl	2c79c <strlen>
   11744:	e3a02e46 	mov	r2, #1120	; 0x460
   11748:	e0850000 	add	r0, r5, r0
   1174c:	e59f1020 	ldr	r1, [pc, #32]	; 11774 <McManager::getMachineJSON()+0x1e4>
   11750:	eb006bfc 	bl	2c748 <strlcpy>
   11754:	e59f0020 	ldr	r0, [pc, #32]	; 1177c <McManager::getMachineJSON()+0x1ec>
   11758:	e28dd00c 	add	sp, sp, #12
   1175c:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11760:	e59f0020 	ldr	r0, [pc, #32]	; 11788 <McManager::getMachineJSON()+0x1f8>
   11764:	eafffff0 	b	1172c <McManager::getMachineJSON()+0x19c>
   11768:	00045548 	.word	0x00045548
   1176c:	0002eec4 	.word	0x0002eec4
   11770:	000114b8 	.word	0x000114b8
   11774:	0002e88c 	.word	0x0002e88c
   11778:	0002ee88 	.word	0x0002ee88
   1177c:	00045558 	.word	0x00045558
   11780:	0002eed4 	.word	0x0002eed4
   11784:	0002eed8 	.word	0x0002eed8
   11788:	00042088 	.word	0x00042088

0001178c <McManager::targetIrq(int)>:
   1178c:	e92d4010 	push	{r4, lr}
   11790:	e1a04000 	mov	r4, r0
   11794:	eb001973 	bl	17d68 <BusAccess::isUnderControl()>
   11798:	e3500000 	cmp	r0, #0
   1179c:	18bd8010 	popne	{r4, pc}
   117a0:	eb001eab 	bl	19254 <BusAccess::pauseIsPaused()>
   117a4:	e3500000 	cmp	r0, #0
   117a8:	18bd8010 	popne	{r4, pc}
   117ac:	e1a00004 	mov	r0, r4
   117b0:	e8bd4010 	pop	{r4, lr}
   117b4:	ea00195e 	b	17d34 <BusAccess::targetIRQ(int)>

000117b8 <McManager::add(McBase*)>:
   117b8:	e59f2018 	ldr	r2, [pc, #24]	; 117d8 <McManager::add(McBase*)+0x20>
   117bc:	e5923008 	ldr	r3, [r2, #8]
   117c0:	e3530009 	cmp	r3, #9
   117c4:	d2831001 	addle	r1, r3, #1
   117c8:	d0823103 	addle	r3, r2, r3, lsl #2
   117cc:	d5821008 	strle	r1, [r2, #8]
   117d0:	d5830474 	strle	r0, [r3, #1140]	; 0x474
   117d4:	e12fff1e 	bx	lr
   117d8:	00045548 	.word	0x00045548

000117dc <McManager::setMachineIdx(int, int, bool)>:
   117dc:	e92d40f0 	push	{r4, r5, r6, r7, lr}
   117e0:	e2505000 	subs	r5, r0, #0
   117e4:	e24dd02c 	sub	sp, sp, #44	; 0x2c
   117e8:	ba000089 	blt	11a14 <McManager::setMachineIdx(int, int, bool)+0x238>
   117ec:	e59f427c 	ldr	r4, [pc, #636]	; 11a70 <McManager::setMachineIdx(int, int, bool)+0x294>
   117f0:	e5940008 	ldr	r0, [r4, #8]
   117f4:	e1500005 	cmp	r0, r5
   117f8:	da000085 	ble	11a14 <McManager::setMachineIdx(int, int, bool)+0x238>
   117fc:	e59f7270 	ldr	r7, [pc, #624]	; 11a74 <McManager::setMachineIdx(int, int, bool)+0x298>
   11800:	e597004c 	ldr	r0, [r7, #76]	; 0x4c
   11804:	e1500005 	cmp	r0, r5
   11808:	0a00008a 	beq	11a38 <McManager::setMachineIdx(int, int, bool)+0x25c>
   1180c:	e594000c 	ldr	r0, [r4, #12]
   11810:	e1a06001 	mov	r6, r1
   11814:	e3500000 	cmp	r0, #0
   11818:	0a000002 	beq	11828 <McManager::setMachineIdx(int, int, bool)+0x4c>
   1181c:	e5903000 	ldr	r3, [r0]
   11820:	e5933004 	ldr	r3, [r3, #4]
   11824:	e12fff33 	blx	r3
   11828:	e0843105 	add	r3, r4, r5, lsl #2
   1182c:	e5930474 	ldr	r0, [r3, #1140]	; 0x474
   11830:	e1a01006 	mov	r1, r6
   11834:	e5903000 	ldr	r3, [r0]
   11838:	e587504c 	str	r5, [r7, #76]	; 0x4c
   1183c:	e584649c 	str	r6, [r4, #1180]	; 0x49c
   11840:	e584000c 	str	r0, [r4, #12]
   11844:	e593300c 	ldr	r3, [r3, #12]
   11848:	e12fff33 	blx	r3
   1184c:	e1a01000 	mov	r1, r0
   11850:	e5940004 	ldr	r0, [r4, #4]
   11854:	e3500000 	cmp	r0, #0
   11858:	0a000017 	beq	118bc <McManager::setMachineIdx(int, int, bool)+0xe0>
   1185c:	e3a0c008 	mov	ip, #8
   11860:	e3a02005 	mov	r2, #5
   11864:	e591300c 	ldr	r3, [r1, #12]
   11868:	e58dc024 	str	ip, [sp, #36]	; 0x24
   1186c:	e58d2020 	str	r2, [sp, #32]
   11870:	e591202c 	ldr	r2, [r1, #44]	; 0x2c
   11874:	e58d201c 	str	r2, [sp, #28]
   11878:	e5912028 	ldr	r2, [r1, #40]	; 0x28
   1187c:	e58d2018 	str	r2, [sp, #24]
   11880:	e591c024 	ldr	ip, [r1, #36]	; 0x24
   11884:	e3a02000 	mov	r2, #0
   11888:	e58dc014 	str	ip, [sp, #20]
   1188c:	e591c020 	ldr	ip, [r1, #32]
   11890:	e58dc010 	str	ip, [sp, #16]
   11894:	e591c01c 	ldr	ip, [r1, #28]
   11898:	e58dc00c 	str	ip, [sp, #12]
   1189c:	e591c018 	ldr	ip, [r1, #24]
   118a0:	e58dc008 	str	ip, [sp, #8]
   118a4:	e591c014 	ldr	ip, [r1, #20]
   118a8:	e58dc004 	str	ip, [sp, #4]
   118ac:	e591c010 	ldr	ip, [r1, #16]
   118b0:	e3e01000 	mvn	r1, #0
   118b4:	e58dc000 	str	ip, [sp]
   118b8:	eb0010d1 	bl	15c04 <Display::targetLayout(int, int, int, int, int, int, int, int, WgfxFont*, int, int, int, int)>
   118bc:	e594000c 	ldr	r0, [r4, #12]
   118c0:	e3500000 	cmp	r0, #0
   118c4:	0a000062 	beq	11a54 <McManager::setMachineIdx(int, int, bool)+0x278>
   118c8:	e5903000 	ldr	r3, [r0]
   118cc:	e594149c 	ldr	r1, [r4, #1180]	; 0x49c
   118d0:	e593300c 	ldr	r3, [r3, #12]
   118d4:	e12fff33 	blx	r3
   118d8:	e5905030 	ldr	r5, [r0, #48]	; 0x30
   118dc:	e3550000 	cmp	r5, #0
   118e0:	1a00004e 	bne	11a20 <McManager::setMachineIdx(int, int, bool)+0x244>
   118e4:	e1a00005 	mov	r0, r5
   118e8:	eb001d71 	bl	18eb4 <BusAccess::clockEnable(bool)>
   118ec:	e594000c 	ldr	r0, [r4, #12]
   118f0:	eb001ef5 	bl	194cc <RAMEmulator::setup(McBase*)>
   118f4:	e594000c 	ldr	r0, [r4, #12]
   118f8:	e594149c 	ldr	r1, [r4, #1180]	; 0x49c
   118fc:	e5903000 	ldr	r3, [r0]
   11900:	e593300c 	ldr	r3, [r3, #12]
   11904:	e12fff33 	blx	r3
   11908:	e5d0003a 	ldrb	r0, [r0, #58]	; 0x3a
   1190c:	eb001ef2 	bl	194dc <RAMEmulator::activateEmulation(bool)>
   11910:	e594000c 	ldr	r0, [r4, #12]
   11914:	e594149c 	ldr	r1, [r4, #1180]	; 0x49c
   11918:	e5903000 	ldr	r3, [r0]
   1191c:	e593300c 	ldr	r3, [r3, #12]
   11920:	e12fff33 	blx	r3
   11924:	e5d0003a 	ldrb	r0, [r0, #58]	; 0x3a
   11928:	ebfffe17 	bl	1118c <HwManager::pageOutForEmulation(bool)>
   1192c:	eb00220c 	bl	1a164 <TargetDebug::get()>
   11930:	e3500000 	cmp	r0, #0
   11934:	0a000001 	beq	11940 <McManager::setMachineIdx(int, int, bool)+0x164>
   11938:	e594100c 	ldr	r1, [r4, #12]
   1193c:	eb00220b 	bl	1a170 <TargetDebug::setup(McBase*)>
   11940:	e594000c 	ldr	r0, [r4, #12]
   11944:	e1a01006 	mov	r1, r6
   11948:	e5903000 	ldr	r3, [r0]
   1194c:	e5933000 	ldr	r3, [r3]
   11950:	e12fff33 	blx	r3
   11954:	e594000c 	ldr	r0, [r4, #12]
   11958:	e1a01006 	mov	r1, r6
   1195c:	e5903000 	ldr	r3, [r0]
   11960:	e593300c 	ldr	r3, [r3, #12]
   11964:	e12fff33 	blx	r3
   11968:	e5903034 	ldr	r3, [r0, #52]	; 0x34
   1196c:	e3530000 	cmp	r3, #0
   11970:	0a00001a 	beq	119e0 <McManager::setMachineIdx(int, int, bool)+0x204>
   11974:	e594000c 	ldr	r0, [r4, #12]
   11978:	e594149c 	ldr	r1, [r4, #1180]	; 0x49c
   1197c:	e5903000 	ldr	r3, [r0]
   11980:	e59f50f0 	ldr	r5, [pc, #240]	; 11a78 <McManager::setMachineIdx(int, int, bool)+0x29c>
   11984:	e593300c 	ldr	r3, [r3, #12]
   11988:	e12fff33 	blx	r3
   1198c:	e5901034 	ldr	r1, [r0, #52]	; 0x34
   11990:	e59f00e4 	ldr	r0, [pc, #228]	; 11a7c <McManager::setMachineIdx(int, int, bool)+0x2a0>
   11994:	eb007072 	bl	2db64 <__udivsi3>
   11998:	e3a02000 	mov	r2, #0
   1199c:	e3a0c001 	mov	ip, #1
   119a0:	e59f30d8 	ldr	r3, [pc, #216]	; 11a80 <McManager::setMachineIdx(int, int, bool)+0x2a4>
   119a4:	e5850000 	str	r0, [r5]
   119a8:	e5832000 	str	r2, [r3]
   119ac:	e59f10d0 	ldr	r1, [pc, #208]	; 11a84 <McManager::setMachineIdx(int, int, bool)+0x2a8>
   119b0:	e59f30d0 	ldr	r3, [pc, #208]	; 11a88 <McManager::setMachineIdx(int, int, bool)+0x2ac>
   119b4:	e59f00d0 	ldr	r0, [pc, #208]	; 11a8c <McManager::setMachineIdx(int, int, bool)+0x2b0>
   119b8:	e5c1c000 	strb	ip, [r1]
   119bc:	e5830000 	str	r0, [r3]
   119c0:	e59f10c8 	ldr	r1, [pc, #200]	; 11a90 <McManager::setMachineIdx(int, int, bool)+0x2b4>
   119c4:	e3a00003 	mov	r0, #3
   119c8:	eb000f61 	bl	15754 <CInterrupts::connectIRQ(unsigned int, void (*)(void*), void*)>
   119cc:	e59f20c0 	ldr	r2, [pc, #192]	; 11a94 <McManager::setMachineIdx(int, int, bool)+0x2b8>
   119d0:	e5951000 	ldr	r1, [r5]
   119d4:	e5923004 	ldr	r3, [r2, #4]
   119d8:	e0833001 	add	r3, r3, r1
   119dc:	e5823018 	str	r3, [r2, #24]
   119e0:	e594000c 	ldr	r0, [r4, #12]
   119e4:	e594149c 	ldr	r1, [r4, #1180]	; 0x49c
   119e8:	e5903000 	ldr	r3, [r0]
   119ec:	e593300c 	ldr	r3, [r3, #12]
   119f0:	e12fff33 	blx	r3
   119f4:	e59f209c 	ldr	r2, [pc, #156]	; 11a98 <McManager::setMachineIdx(int, int, bool)+0x2bc>
   119f8:	e5903000 	ldr	r3, [r0]
   119fc:	e3a01005 	mov	r1, #5
   11a00:	e59f0094 	ldr	r0, [pc, #148]	; 11a9c <McManager::setMachineIdx(int, int, bool)+0x2c0>
   11a04:	ebffdf6a 	bl	97b4 <LogWrite>
   11a08:	e3a00001 	mov	r0, #1
   11a0c:	e28dd02c 	add	sp, sp, #44	; 0x2c
   11a10:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
   11a14:	e3a00000 	mov	r0, #0
   11a18:	e28dd02c 	add	sp, sp, #44	; 0x2c
   11a1c:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
   11a20:	eb001d0a 	bl	18e50 <BusAccess::clockSetup()>
   11a24:	e1a00005 	mov	r0, r5
   11a28:	eb001d16 	bl	18e88 <BusAccess::clockSetFreqHz(unsigned long)>
   11a2c:	e3a00001 	mov	r0, #1
   11a30:	eb001d1f 	bl	18eb4 <BusAccess::clockEnable(bool)>
   11a34:	eaffffac 	b	118ec <McManager::setMachineIdx(int, int, bool)+0x110>
   11a38:	e594049c 	ldr	r0, [r4, #1180]	; 0x49c
   11a3c:	e1500001 	cmp	r0, r1
   11a40:	11a00002 	movne	r0, r2
   11a44:	03820001 	orreq	r0, r2, #1
   11a48:	e3500000 	cmp	r0, #0
   11a4c:	1affff6e 	bne	1180c <McManager::setMachineIdx(int, int, bool)+0x30>
   11a50:	eafffff0 	b	11a18 <McManager::setMachineIdx(int, int, bool)+0x23c>
   11a54:	e59f0040 	ldr	r0, [pc, #64]	; 11a9c <McManager::setMachineIdx(int, int, bool)+0x2c0>
   11a58:	e1a03005 	mov	r3, r5
   11a5c:	e59f203c 	ldr	r2, [pc, #60]	; 11aa0 <McManager::setMachineIdx(int, int, bool)+0x2c4>
   11a60:	e3a01004 	mov	r1, #4
   11a64:	ebffdf52 	bl	97b4 <LogWrite>
   11a68:	e3a00001 	mov	r0, #1
   11a6c:	eaffffe9 	b	11a18 <McManager::setMachineIdx(int, int, bool)+0x23c>
   11a70:	00045548 	.word	0x00045548
   11a74:	00042088 	.word	0x00042088
   11a78:	0004228c 	.word	0x0004228c
   11a7c:	000f4240 	.word	0x000f4240
   11a80:	00052cb8 	.word	0x00052cb8
   11a84:	00052cbc 	.word	0x00052cbc
   11a88:	00052cc0 	.word	0x00052cc0
   11a8c:	000114ec 	.word	0x000114ec
   11a90:	00012b18 	.word	0x00012b18
   11a94:	20003000 	.word	0x20003000
   11a98:	0002eee8 	.word	0x0002eee8
   11a9c:	0002eeb8 	.word	0x0002eeb8
   11aa0:	0002eefc 	.word	0x0002eefc

00011aa4 <McManager::setMachineByName(char const*)>:
   11aa4:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11aa8:	e59f90ac 	ldr	r9, [pc, #172]	; 11b5c <McManager::setMachineByName(char const*)+0xb8>
   11aac:	e5993008 	ldr	r3, [r9, #8]
   11ab0:	e3530000 	cmp	r3, #0
   11ab4:	da000022 	ble	11b44 <McManager::setMachineByName(char const*)+0xa0>
   11ab8:	e1a06000 	mov	r6, r0
   11abc:	e3a08000 	mov	r8, #0
   11ac0:	e2895e47 	add	r5, r9, #1136	; 0x470
   11ac4:	e59f7094 	ldr	r7, [pc, #148]	; 11b60 <McManager::setMachineByName(char const*)+0xbc>
   11ac8:	e2855004 	add	r5, r5, #4
   11acc:	e3a04000 	mov	r4, #0
   11ad0:	ea00000d 	b	11b0c <McManager::setMachineByName(char const*)+0x68>
   11ad4:	e1500004 	cmp	r0, r4
   11ad8:	da000014 	ble	11b30 <McManager::setMachineByName(char const*)+0x8c>
   11adc:	e5950000 	ldr	r0, [r5]
   11ae0:	e1a01004 	mov	r1, r4
   11ae4:	e5903000 	ldr	r3, [r0]
   11ae8:	e593300c 	ldr	r3, [r3, #12]
   11aec:	e12fff33 	blx	r3
   11af0:	e3a02064 	mov	r2, #100	; 0x64
   11af4:	e5901000 	ldr	r1, [r0]
   11af8:	e1a00006 	mov	r0, r6
   11afc:	eb006b3e 	bl	2c7fc <strncasecmp>
   11b00:	e2502000 	subs	r2, r0, #0
   11b04:	0a000010 	beq	11b4c <McManager::setMachineByName(char const*)+0xa8>
   11b08:	e2844001 	add	r4, r4, #1
   11b0c:	e5950000 	ldr	r0, [r5]
   11b10:	e5903000 	ldr	r3, [r0]
   11b14:	e5933008 	ldr	r3, [r3, #8]
   11b18:	e1530007 	cmp	r3, r7
   11b1c:	03a00001 	moveq	r0, #1
   11b20:	0affffeb 	beq	11ad4 <McManager::setMachineByName(char const*)+0x30>
   11b24:	e12fff33 	blx	r3
   11b28:	e1500004 	cmp	r0, r4
   11b2c:	caffffea 	bgt	11adc <McManager::setMachineByName(char const*)+0x38>
   11b30:	e5993008 	ldr	r3, [r9, #8]
   11b34:	e2888001 	add	r8, r8, #1
   11b38:	e1530008 	cmp	r3, r8
   11b3c:	e2855004 	add	r5, r5, #4
   11b40:	caffffe1 	bgt	11acc <McManager::setMachineByName(char const*)+0x28>
   11b44:	e3a00000 	mov	r0, #0
   11b48:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11b4c:	e1a01004 	mov	r1, r4
   11b50:	e1a00008 	mov	r0, r8
   11b54:	e8bd47f0 	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   11b58:	eaffff1f 	b	117dc <McManager::setMachineIdx(int, int, bool)>
   11b5c:	00045548 	.word	0x00045548
   11b60:	000114b8 	.word	0x000114b8

00011b64 <McManager::setMachineOpts(char const*)>:
   11b64:	e92d40f0 	push	{r4, r5, r6, r7, lr}
   11b68:	e59f41c4 	ldr	r4, [pc, #452]	; 11d34 <McManager::setMachineOpts(char const*)+0x1d0>
   11b6c:	e24dd00c 	sub	sp, sp, #12
   11b70:	e594200c 	ldr	r2, [r4, #12]
   11b74:	e3520000 	cmp	r2, #0
   11b78:	01a00002 	moveq	r0, r2
   11b7c:	0a000054 	beq	11cd4 <McManager::setMachineOpts(char const*)+0x170>
   11b80:	e1a05000 	mov	r5, r0
   11b84:	e5923000 	ldr	r3, [r2]
   11b88:	e1a00002 	mov	r0, r2
   11b8c:	e5933004 	ldr	r3, [r3, #4]
   11b90:	e12fff33 	blx	r3
   11b94:	e59f119c 	ldr	r1, [pc, #412]	; 11d38 <McManager::setMachineOpts(char const*)+0x1d4>
   11b98:	e1a00005 	mov	r0, r5
   11b9c:	eb006ca2 	bl	2ce2c <strstr>
   11ba0:	e1a06000 	mov	r6, r0
   11ba4:	e594000c 	ldr	r0, [r4, #12]
   11ba8:	e3500000 	cmp	r0, #0
   11bac:	0a00004a 	beq	11cdc <McManager::setMachineOpts(char const*)+0x178>
   11bb0:	e5903000 	ldr	r3, [r0]
   11bb4:	e3e01000 	mvn	r1, #0
   11bb8:	e593300c 	ldr	r3, [r3, #12]
   11bbc:	e12fff33 	blx	r3
   11bc0:	e2966000 	adds	r6, r6, #0
   11bc4:	13a06001 	movne	r6, #1
   11bc8:	e59f116c 	ldr	r1, [pc, #364]	; 11d3c <McManager::setMachineOpts(char const*)+0x1d8>
   11bcc:	e5c0603a 	strb	r6, [r0, #58]	; 0x3a
   11bd0:	e1a00005 	mov	r0, r5
   11bd4:	eb006c94 	bl	2ce2c <strstr>
   11bd8:	e594700c 	ldr	r7, [r4, #12]
   11bdc:	e1a06000 	mov	r6, r0
   11be0:	e3570000 	cmp	r7, #0
   11be4:	0a00004d 	beq	11d20 <McManager::setMachineOpts(char const*)+0x1bc>
   11be8:	e5973000 	ldr	r3, [r7]
   11bec:	e1a00007 	mov	r0, r7
   11bf0:	e593300c 	ldr	r3, [r3, #12]
   11bf4:	e3e01000 	mvn	r1, #0
   11bf8:	e12fff33 	blx	r3
   11bfc:	e2966000 	adds	r6, r6, #0
   11c00:	13a06001 	movne	r6, #1
   11c04:	e594300c 	ldr	r3, [r4, #12]
   11c08:	e5c06044 	strb	r6, [r0, #68]	; 0x44
   11c0c:	e3530000 	cmp	r3, #0
   11c10:	059f7128 	ldreq	r7, [pc, #296]	; 11d40 <McManager::setMachineOpts(char const*)+0x1dc>
   11c14:	0a00003a 	beq	11d04 <McManager::setMachineOpts(char const*)+0x1a0>
   11c18:	e5932000 	ldr	r2, [r3]
   11c1c:	e1a00003 	mov	r0, r3
   11c20:	e3e01000 	mvn	r1, #0
   11c24:	e592300c 	ldr	r3, [r2, #12]
   11c28:	e12fff33 	blx	r3
   11c2c:	e594300c 	ldr	r3, [r4, #12]
   11c30:	e5d0603a 	ldrb	r6, [r0, #58]	; 0x3a
   11c34:	e3530000 	cmp	r3, #0
   11c38:	059f0100 	ldreq	r0, [pc, #256]	; 11d40 <McManager::setMachineOpts(char const*)+0x1dc>
   11c3c:	0a000004 	beq	11c54 <McManager::setMachineOpts(char const*)+0xf0>
   11c40:	e5932000 	ldr	r2, [r3]
   11c44:	e1a00003 	mov	r0, r3
   11c48:	e3e01000 	mvn	r1, #0
   11c4c:	e592300c 	ldr	r3, [r2, #12]
   11c50:	e12fff33 	blx	r3
   11c54:	e5d02044 	ldrb	r2, [r0, #68]	; 0x44
   11c58:	e1a03005 	mov	r3, r5
   11c5c:	e58d2004 	str	r2, [sp, #4]
   11c60:	e59f00dc 	ldr	r0, [pc, #220]	; 11d44 <McManager::setMachineOpts(char const*)+0x1e0>
   11c64:	e58d6000 	str	r6, [sp]
   11c68:	e59f20d8 	ldr	r2, [pc, #216]	; 11d48 <McManager::setMachineOpts(char const*)+0x1e4>
   11c6c:	e3a01004 	mov	r1, #4
   11c70:	ebffdecf 	bl	97b4 <LogWrite>
   11c74:	e594000c 	ldr	r0, [r4, #12]
   11c78:	e3500000 	cmp	r0, #0
   11c7c:	0a000025 	beq	11d18 <McManager::setMachineOpts(char const*)+0x1b4>
   11c80:	e5903000 	ldr	r3, [r0]
   11c84:	e3e01000 	mvn	r1, #0
   11c88:	e593300c 	ldr	r3, [r3, #12]
   11c8c:	e12fff33 	blx	r3
   11c90:	e5d0003a 	ldrb	r0, [r0, #58]	; 0x3a
   11c94:	eb001e10 	bl	194dc <RAMEmulator::activateEmulation(bool)>
   11c98:	e594000c 	ldr	r0, [r4, #12]
   11c9c:	e3500000 	cmp	r0, #0
   11ca0:	0a00001a 	beq	11d10 <McManager::setMachineOpts(char const*)+0x1ac>
   11ca4:	e5903000 	ldr	r3, [r0]
   11ca8:	e3e01000 	mvn	r1, #0
   11cac:	e593300c 	ldr	r3, [r3, #12]
   11cb0:	e12fff33 	blx	r3
   11cb4:	e5d0003a 	ldrb	r0, [r0, #58]	; 0x3a
   11cb8:	ebfffd33 	bl	1118c <HwManager::pageOutForEmulation(bool)>
   11cbc:	e594000c 	ldr	r0, [r4, #12]
   11cc0:	e594149c 	ldr	r1, [r4, #1180]	; 0x49c
   11cc4:	e5903000 	ldr	r3, [r0]
   11cc8:	e5933000 	ldr	r3, [r3]
   11ccc:	e12fff33 	blx	r3
   11cd0:	e3a00001 	mov	r0, #1
   11cd4:	e28dd00c 	add	sp, sp, #12
   11cd8:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
   11cdc:	e2966000 	adds	r6, r6, #0
   11ce0:	13a06001 	movne	r6, #1
   11ce4:	e59f7054 	ldr	r7, [pc, #84]	; 11d40 <McManager::setMachineOpts(char const*)+0x1dc>
   11ce8:	e59f104c 	ldr	r1, [pc, #76]	; 11d3c <McManager::setMachineOpts(char const*)+0x1d8>
   11cec:	e1a00005 	mov	r0, r5
   11cf0:	e5c7603a 	strb	r6, [r7, #58]	; 0x3a
   11cf4:	eb006c4c 	bl	2ce2c <strstr>
   11cf8:	e2900000 	adds	r0, r0, #0
   11cfc:	13a00001 	movne	r0, #1
   11d00:	e5c70044 	strb	r0, [r7, #68]	; 0x44
   11d04:	e5d7603a 	ldrb	r6, [r7, #58]	; 0x3a
   11d08:	e59f0030 	ldr	r0, [pc, #48]	; 11d40 <McManager::setMachineOpts(char const*)+0x1dc>
   11d0c:	eaffffd0 	b	11c54 <McManager::setMachineOpts(char const*)+0xf0>
   11d10:	e59f0028 	ldr	r0, [pc, #40]	; 11d40 <McManager::setMachineOpts(char const*)+0x1dc>
   11d14:	eaffffe6 	b	11cb4 <McManager::setMachineOpts(char const*)+0x150>
   11d18:	e59f0020 	ldr	r0, [pc, #32]	; 11d40 <McManager::setMachineOpts(char const*)+0x1dc>
   11d1c:	eaffffdb 	b	11c90 <McManager::setMachineOpts(char const*)+0x12c>
   11d20:	e2906000 	adds	r6, r0, #0
   11d24:	13a06001 	movne	r6, #1
   11d28:	e59f7010 	ldr	r7, [pc, #16]	; 11d40 <McManager::setMachineOpts(char const*)+0x1dc>
   11d2c:	e5c76044 	strb	r6, [r7, #68]	; 0x44
   11d30:	eafffff3 	b	11d04 <McManager::setMachineOpts(char const*)+0x1a0>
   11d34:	00045548 	.word	0x00045548
   11d38:	0002ef1c 	.word	0x0002ef1c
   11d3c:	0002ef24 	.word	0x0002ef24
   11d40:	00042088 	.word	0x00042088
   11d44:	0002eeb8 	.word	0x0002eeb8
   11d48:	0002ef2c 	.word	0x0002ef2c

00011d4c <McManager::handleRxCharFromTarget(unsigned char const*, int)>:
   11d4c:	e92d4070 	push	{r4, r5, r6, lr}
   11d50:	e59f4050 	ldr	r4, [pc, #80]	; 11da8 <McManager::handleRxCharFromTarget(unsigned char const*, int)+0x5c>
   11d54:	e59f2050 	ldr	r2, [pc, #80]	; 11dac <McManager::handleRxCharFromTarget(unsigned char const*, int)+0x60>
   11d58:	e59434a0 	ldr	r3, [r4, #1184]	; 0x4a0
   11d5c:	e0835001 	add	r5, r3, r1
   11d60:	e1550002 	cmp	r5, r2
   11d64:	ca000009 	bgt	11d90 <McManager::handleRxCharFromTarget(unsigned char const*, int)+0x44>
   11d68:	e59fc040 	ldr	ip, [pc, #64]	; 11db0 <McManager::handleRxCharFromTarget(unsigned char const*, int)+0x64>
   11d6c:	e1a02001 	mov	r2, r1
   11d70:	e1a01000 	mov	r1, r0
   11d74:	e08c0003 	add	r0, ip, r3
   11d78:	eb0068b3 	bl	2c04c <memcpy>
   11d7c:	e3a02000 	mov	r2, #0
   11d80:	e0843005 	add	r3, r4, r5
   11d84:	e58454a0 	str	r5, [r4, #1184]	; 0x4a0
   11d88:	e5c324a4 	strb	r2, [r3, #1188]	; 0x4a4
   11d8c:	e8bd8070 	pop	{r4, r5, r6, pc}
   11d90:	e3a03000 	mov	r3, #0
   11d94:	e1510002 	cmp	r1, r2
   11d98:	e58434a0 	str	r3, [r4, #1184]	; 0x4a0
   11d9c:	c8bd8070 	popgt	{r4, r5, r6, pc}
   11da0:	e1a05001 	mov	r5, r1
   11da4:	eaffffef 	b	11d68 <McManager::handleRxCharFromTarget(unsigned char const*, int)+0x1c>
   11da8:	00045548 	.word	0x00045548
   11dac:	000007cf 	.word	0x000007cf
   11db0:	000459ec 	.word	0x000459ec

00011db4 <McManager::getNumCharsReceivedFromHost()>:
   11db4:	e59f3004 	ldr	r3, [pc, #4]	; 11dc0 <McManager::getNumCharsReceivedFromHost()+0xc>
   11db8:	e59304a0 	ldr	r0, [r3, #1184]	; 0x4a0
   11dbc:	e12fff1e 	bx	lr
   11dc0:	00045548 	.word	0x00045548

00011dc4 <McManager::getCharsReceivedFromHost(unsigned char*, int)>:
   11dc4:	e2503000 	subs	r3, r0, #0
   11dc8:	0a00000d 	beq	11e04 <McManager::getCharsReceivedFromHost(unsigned char*, int)+0x40>
   11dcc:	e92d4010 	push	{r4, lr}
   11dd0:	e59f4034 	ldr	r4, [pc, #52]	; 11e0c <McManager::getCharsReceivedFromHost(unsigned char*, int)+0x48>
   11dd4:	e59424a0 	ldr	r2, [r4, #1184]	; 0x4a0
   11dd8:	e1520001 	cmp	r2, r1
   11ddc:	da000001 	ble	11de8 <McManager::getCharsReceivedFromHost(unsigned char*, int)+0x24>
   11de0:	e3a00000 	mov	r0, #0
   11de4:	e8bd8010 	pop	{r4, pc}
   11de8:	e2841e4a 	add	r1, r4, #1184	; 0x4a0
   11dec:	e2811004 	add	r1, r1, #4
   11df0:	eb006895 	bl	2c04c <memcpy>
   11df4:	e3a03000 	mov	r3, #0
   11df8:	e59404a0 	ldr	r0, [r4, #1184]	; 0x4a0
   11dfc:	e58434a0 	str	r3, [r4, #1184]	; 0x4a0
   11e00:	e8bd8010 	pop	{r4, pc}
   11e04:	e1a00003 	mov	r0, r3
   11e08:	e12fff1e 	bx	lr
   11e0c:	00045548 	.word	0x00045548

00011e10 <McManager::sendKeyCodeToTarget(int)>:
   11e10:	e59f3014 	ldr	r3, [pc, #20]	; 11e2c <McManager::sendKeyCodeToTarget(int)+0x1c>
   11e14:	e5933000 	ldr	r3, [r3]
   11e18:	e3530000 	cmp	r3, #0
   11e1c:	012fff1e 	bxeq	lr
   11e20:	e1a01000 	mov	r1, r0
   11e24:	e1a00003 	mov	r0, r3
   11e28:	eafff0b2 	b	e0f8 <CommandHandler::sendKeyCodeToTarget(int)>
   11e2c:	00045548 	.word	0x00045548

00011e30 <McManager::debuggerCommand(char*, char*, int)>:
   11e30:	e59f3038 	ldr	r3, [pc, #56]	; 11e70 <McManager::debuggerCommand(char*, char*, int)+0x40>
   11e34:	e593c00c 	ldr	ip, [r3, #12]
   11e38:	e35c0000 	cmp	ip, #0
   11e3c:	0a000009 	beq	11e68 <McManager::debuggerCommand(char*, char*, int)+0x38>
   11e40:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
   11e44:	e59ce000 	ldr	lr, [ip]
   11e48:	e1a03002 	mov	r3, r2
   11e4c:	e59ee020 	ldr	lr, [lr, #32]
   11e50:	e1a02001 	mov	r2, r1
   11e54:	e1a01000 	mov	r1, r0
   11e58:	e1a0000c 	mov	r0, ip
   11e5c:	e1a0c00e 	mov	ip, lr
   11e60:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
   11e64:	e12fff1c 	bx	ip
   11e68:	e1a0000c 	mov	r0, ip
   11e6c:	e12fff1e 	bx	lr
   11e70:	00045548 	.word	0x00045548

00011e74 <McManager::blockWrite(unsigned long, unsigned char const*, unsigned long, bool, bool)>:
   11e74:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11e78:	e59fa108 	ldr	sl, [pc, #264]	; 11f88 <McManager::blockWrite(unsigned long, unsigned char const*, unsigned long, bool, bool)+0x114>
   11e7c:	e1a04000 	mov	r4, r0
   11e80:	e59a000c 	ldr	r0, [sl, #12]
   11e84:	e24dd008 	sub	sp, sp, #8
   11e88:	e3500000 	cmp	r0, #0
   11e8c:	e1a08001 	mov	r8, r1
   11e90:	e1a06002 	mov	r6, r2
   11e94:	e1a09003 	mov	r9, r3
   11e98:	e5dd5028 	ldrb	r5, [sp, #40]	; 0x28
   11e9c:	0a000028 	beq	11f44 <McManager::blockWrite(unsigned long, unsigned char const*, unsigned long, bool, bool)+0xd0>
   11ea0:	e5903000 	ldr	r3, [r0]
   11ea4:	e3e01000 	mvn	r1, #0
   11ea8:	e593300c 	ldr	r3, [r3, #12]
   11eac:	e12fff33 	blx	r3
   11eb0:	e59a300c 	ldr	r3, [sl, #12]
   11eb4:	e590703c 	ldr	r7, [r0, #60]	; 0x3c
   11eb8:	e3530000 	cmp	r3, #0
   11ebc:	0a00002e 	beq	11f7c <McManager::blockWrite(unsigned long, unsigned char const*, unsigned long, bool, bool)+0x108>
   11ec0:	e5932000 	ldr	r2, [r3]
   11ec4:	e1a00003 	mov	r0, r3
   11ec8:	e3e01000 	mvn	r1, #0
   11ecc:	e592300c 	ldr	r3, [r2, #12]
   11ed0:	e12fff33 	blx	r3
   11ed4:	e59a300c 	ldr	r3, [sl, #12]
   11ed8:	e590a040 	ldr	sl, [r0, #64]	; 0x40
   11edc:	e3530000 	cmp	r3, #0
   11ee0:	059f00a4 	ldreq	r0, [pc, #164]	; 11f8c <McManager::blockWrite(unsigned long, unsigned char const*, unsigned long, bool, bool)+0x118>
   11ee4:	0a000004 	beq	11efc <McManager::blockWrite(unsigned long, unsigned char const*, unsigned long, bool, bool)+0x88>
   11ee8:	e5932000 	ldr	r2, [r3]
   11eec:	e1a00003 	mov	r0, r3
   11ef0:	e3e01000 	mvn	r1, #0
   11ef4:	e592300c 	ldr	r3, [r2, #12]
   11ef8:	e12fff33 	blx	r3
   11efc:	e5d0203a 	ldrb	r2, [r0, #58]	; 0x3a
   11f00:	e2253001 	eor	r3, r5, #1
   11f04:	e0033002 	and	r3, r3, r2
   11f08:	e1540007 	cmp	r4, r7
   11f0c:	33a03000 	movcc	r3, #0
   11f10:	22033001 	andcs	r3, r3, #1
   11f14:	e3530000 	cmp	r3, #0
   11f18:	1a00000d 	bne	11f54 <McManager::blockWrite(unsigned long, unsigned char const*, unsigned long, bool, bool)+0xe0>
   11f1c:	e58d5000 	str	r5, [sp]
   11f20:	e1a03009 	mov	r3, r9
   11f24:	e1a02006 	mov	r2, r6
   11f28:	e1a01008 	mov	r1, r8
   11f2c:	e1a00004 	mov	r0, r4
   11f30:	eb001906 	bl	18350 <BusAccess::blockWrite(unsigned long, unsigned char const*, unsigned long, int, int)>
   11f34:	e16f0f10 	clz	r0, r0
   11f38:	e1a002a0 	lsr	r0, r0, #5
   11f3c:	e28dd008 	add	sp, sp, #8
   11f40:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11f44:	e59f0040 	ldr	r0, [pc, #64]	; 11f8c <McManager::blockWrite(unsigned long, unsigned char const*, unsigned long, bool, bool)+0x118>
   11f48:	e590703c 	ldr	r7, [r0, #60]	; 0x3c
   11f4c:	e590a040 	ldr	sl, [r0, #64]	; 0x40
   11f50:	eaffffe9 	b	11efc <McManager::blockWrite(unsigned long, unsigned char const*, unsigned long, bool, bool)+0x88>
   11f54:	e087700a 	add	r7, r7, sl
   11f58:	e0843006 	add	r3, r4, r6
   11f5c:	e1570003 	cmp	r7, r3
   11f60:	3affffed 	bcc	11f1c <McManager::blockWrite(unsigned long, unsigned char const*, unsigned long, bool, bool)+0xa8>
   11f64:	e1a02006 	mov	r2, r6
   11f68:	e1a01008 	mov	r1, r8
   11f6c:	e1a00004 	mov	r0, r4
   11f70:	e28dd008 	add	sp, sp, #8
   11f74:	e8bd47f0 	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   11f78:	ea001d74 	b	19550 <RAMEmulator::blockWrite(unsigned long, unsigned char const*, unsigned long)>
   11f7c:	e59f0008 	ldr	r0, [pc, #8]	; 11f8c <McManager::blockWrite(unsigned long, unsigned char const*, unsigned long, bool, bool)+0x118>
   11f80:	e590a040 	ldr	sl, [r0, #64]	; 0x40
   11f84:	eaffffdc 	b	11efc <McManager::blockWrite(unsigned long, unsigned char const*, unsigned long, bool, bool)+0x88>
   11f88:	00045548 	.word	0x00045548
   11f8c:	00042088 	.word	0x00042088

00011f90 <McManager::handleTargetProgram(bool, bool, bool) [clone .part.3]>:
   11f90:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11f94:	e3a05000 	mov	r5, #0
   11f98:	e24ddfb5 	sub	sp, sp, #724	; 0x2d4
   11f9c:	e1cd01fc 	strd	r0, [sp, #28]
   11fa0:	e58d2024 	str	r2, [sp, #36]	; 0x24
   11fa4:	e1a0b005 	mov	fp, r5
   11fa8:	e59f944c 	ldr	r9, [pc, #1100]	; 123fc <McManager::handleTargetProgram(bool, bool, bool) [clone .part.3]+0x46c>
   11fac:	ea000029 	b	12058 <McManager::handleTargetProgram(bool, bool, bool) [clone .part.3]+0xc8>
   11fb0:	e5932000 	ldr	r2, [r3]
   11fb4:	e1a00003 	mov	r0, r3
   11fb8:	e3e01000 	mvn	r1, #0
   11fbc:	e592300c 	ldr	r3, [r2, #12]
   11fc0:	e12fff33 	blx	r3
   11fc4:	e599300c 	ldr	r3, [r9, #12]
   11fc8:	e590a03c 	ldr	sl, [r0, #60]	; 0x3c
   11fcc:	e3530000 	cmp	r3, #0
   11fd0:	0a000105 	beq	123ec <McManager::handleTargetProgram(bool, bool, bool) [clone .part.3]+0x45c>
   11fd4:	e5932000 	ldr	r2, [r3]
   11fd8:	e1a00003 	mov	r0, r3
   11fdc:	e3e01000 	mvn	r1, #0
   11fe0:	e592300c 	ldr	r3, [r2, #12]
   11fe4:	e12fff33 	blx	r3
   11fe8:	e599300c 	ldr	r3, [r9, #12]
   11fec:	e5902040 	ldr	r2, [r0, #64]	; 0x40
   11ff0:	e3530000 	cmp	r3, #0
   11ff4:	059f0404 	ldreq	r0, [pc, #1028]	; 12400 <McManager::handleTargetProgram(bool, bool, bool) [clone .part.3]+0x470>
   11ff8:	0a000006 	beq	12018 <McManager::handleTargetProgram(bool, bool, bool) [clone .part.3]+0x88>
   11ffc:	e5931000 	ldr	r1, [r3]
   12000:	e58d2018 	str	r2, [sp, #24]
   12004:	e1a00003 	mov	r0, r3
   12008:	e591300c 	ldr	r3, [r1, #12]
   1200c:	e3e01000 	mvn	r1, #0
   12010:	e12fff33 	blx	r3
   12014:	e59d2018 	ldr	r2, [sp, #24]
   12018:	e5d0303a 	ldrb	r3, [r0, #58]	; 0x3a
   1201c:	e157000a 	cmp	r7, sl
   12020:	33a03000 	movcc	r3, #0
   12024:	22033001 	andcs	r3, r3, #1
   12028:	e3530000 	cmp	r3, #0
   1202c:	1a000023 	bne	120c0 <McManager::handleTargetProgram(bool, bool, bool) [clone .part.3]+0x130>
   12030:	e3a03000 	mov	r3, #0
   12034:	e1a02008 	mov	r2, r8
   12038:	e1a01006 	mov	r1, r6
   1203c:	e1a00007 	mov	r0, r7
   12040:	e58d3000 	str	r3, [sp]
   12044:	eb0018c1 	bl	18350 <BusAccess::blockWrite(unsigned long, unsigned char const*, unsigned long, int, int)>
   12048:	e5943000 	ldr	r3, [r4]
   1204c:	e2855001 	add	r5, r5, #1
   12050:	e3530000 	cmp	r3, #0
   12054:	03a0b001 	moveq	fp, #1
   12058:	eb0027c1 	bl	1bf64 <TargetState::numMemoryBlocks()>
   1205c:	e1500005 	cmp	r0, r5
   12060:	da00001f 	ble	120e4 <McManager::handleTargetProgram(bool, bool, bool) [clone .part.3]+0x154>
   12064:	e1a00005 	mov	r0, r5
   12068:	eb0027c1 	bl	1bf74 <TargetState::getMemoryBlock(int)>
   1206c:	e1a04000 	mov	r4, r0
   12070:	e5902004 	ldr	r2, [r0, #4]
   12074:	e5903000 	ldr	r3, [r0]
   12078:	e3a01005 	mov	r1, #5
   1207c:	e58d2000 	str	r2, [sp]
   12080:	e59f037c 	ldr	r0, [pc, #892]	; 12404 <McManager::handleTargetProgram(bool, bool, bool) [clone .part.3]+0x474>
   12084:	e59f237c 	ldr	r2, [pc, #892]	; 12408 <McManager::handleTargetProgram(bool, bool, bool) [clone .part.3]+0x478>
   12088:	ebffddc9 	bl	97b4 <LogWrite>
   1208c:	e5947000 	ldr	r7, [r4]
   12090:	eb0027bb 	bl	1bf84 <TargetState::getMemoryImagePtr()>
   12094:	e599300c 	ldr	r3, [r9, #12]
   12098:	e5946000 	ldr	r6, [r4]
   1209c:	e3530000 	cmp	r3, #0
   120a0:	e0806006 	add	r6, r0, r6
   120a4:	e5948004 	ldr	r8, [r4, #4]
   120a8:	1affffc0 	bne	11fb0 <McManager::handleTargetProgram(bool, bool, bool) [clone .part.3]+0x20>
   120ac:	e59f334c 	ldr	r3, [pc, #844]	; 12400 <McManager::handleTargetProgram(bool, bool, bool) [clone .part.3]+0x470>
   120b0:	e593a03c 	ldr	sl, [r3, #60]	; 0x3c
   120b4:	e5932040 	ldr	r2, [r3, #64]	; 0x40
   120b8:	e1a00003 	mov	r0, r3
   120bc:	eaffffd5 	b	12018 <McManager::handleTargetProgram(bool, bool, bool) [clone .part.3]+0x88>
   120c0:	e082a00a 	add	sl, r2, sl
   120c4:	e0873008 	add	r3, r7, r8
   120c8:	e15a0003 	cmp	sl, r3
   120cc:	3affffd7 	bcc	12030 <McManager::handleTargetProgram(bool, bool, bool) [clone .part.3]+0xa0>
   120d0:	e1a02008 	mov	r2, r8
   120d4:	e1a01006 	mov	r1, r6
   120d8:	e1a00007 	mov	r0, r7
   120dc:	eb001d1b 	bl	19550 <RAMEmulator::blockWrite(unsigned long, unsigned char const*, unsigned long)>
   120e0:	eaffffd8 	b	12048 <McManager::handleTargetProgram(bool, bool, bool) [clone .part.3]+0xb8>
   120e4:	eb00279e 	bl	1bf64 <TargetState::numMemoryBlocks()>
   120e8:	e59f231c 	ldr	r2, [pc, #796]	; 1240c <McManager::handleTargetProgram(bool, bool, bool) [clone .part.3]+0x47c>
   120ec:	e1a03000 	mov	r3, r0
   120f0:	e3a01005 	mov	r1, #5
   120f4:	e59f0308 	ldr	r0, [pc, #776]	; 12404 <McManager::handleTargetProgram(bool, bool, bool) [clone .part.3]+0x474>
   120f8:	ebffddad 	bl	97b4 <LogWrite>
   120fc:	e59d3020 	ldr	r3, [sp, #32]
   12100:	e3530000 	cmp	r3, #0
   12104:	1a000016 	bne	12164 <McManager::handleTargetProgram(bool, bool, bool) [clone .part.3]+0x1d4>
   12108:	e59d301c 	ldr	r3, [sp, #28]
   1210c:	e3530000 	cmp	r3, #0
   12110:	0a00000f 	beq	12154 <McManager::handleTargetProgram(bool, bool, bool) [clone .part.3]+0x1c4>
   12114:	e59f22f4 	ldr	r2, [pc, #756]	; 12410 <McManager::handleTargetProgram(bool, bool, bool) [clone .part.3]+0x480>
   12118:	e3a01004 	mov	r1, #4
   1211c:	e59f02e0 	ldr	r0, [pc, #736]	; 12404 <McManager::handleTargetProgram(bool, bool, bool) [clone .part.3]+0x474>
   12120:	ebffdda3 	bl	97b4 <LogWrite>
   12124:	eb00200e 	bl	1a164 <TargetDebug::get()>
   12128:	e1a05000 	mov	r5, r0
   1212c:	eb0027ad 	bl	1bfe8 <TargetState::areRegistersValid()>
   12130:	e3550000 	cmp	r5, #0
   12134:	03a04000 	moveq	r4, #0
   12138:	12004001 	andne	r4, r0, #1
   1213c:	e3540000 	cmp	r4, #0
   12140:	1a000009 	bne	1216c <McManager::handleTargetProgram(bool, bool, bool) [clone .part.3]+0x1dc>
   12144:	e59d001c 	ldr	r0, [sp, #28]
   12148:	eb001750 	bl	17e90 <BusAccess::controlRelease(bool)>
   1214c:	e28ddfb5 	add	sp, sp, #724	; 0x2d4
   12150:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12154:	e1a00003 	mov	r0, r3
   12158:	eb00174c 	bl	17e90 <BusAccess::controlRelease(bool)>
   1215c:	e28ddfb5 	add	sp, sp, #724	; 0x2d4
   12160:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12164:	eb001c34 	bl	1923c <BusAccess::pause()>
   12168:	eaffffe6 	b	12108 <McManager::handleTargetProgram(bool, bool, bool) [clone .part.3]+0x178>
   1216c:	e59f6288 	ldr	r6, [pc, #648]	; 123fc <McManager::handleTargetProgram(bool, bool, bool) [clone .part.3]+0x46c>
   12170:	e596000c 	ldr	r0, [r6, #12]
   12174:	e3500000 	cmp	r0, #0
   12178:	0a000021 	beq	12204 <McManager::handleTargetProgram(bool, bool, bool) [clone .part.3]+0x274>
   1217c:	e5903000 	ldr	r3, [r0]
   12180:	e3e01000 	mvn	r1, #0
   12184:	e593300c 	ldr	r3, [r3, #12]
   12188:	e12fff33 	blx	r3
   1218c:	e5d03044 	ldrb	r3, [r0, #68]	; 0x44
   12190:	e59d2024 	ldr	r2, [sp, #36]	; 0x24
   12194:	e1923003 	orrs	r3, r2, r3
   12198:	0a00001b 	beq	1220c <McManager::handleTargetProgram(bool, bool, bool) [clone .part.3]+0x27c>
   1219c:	e3a04000 	mov	r4, #0
   121a0:	e28d00dc 	add	r0, sp, #220	; 0xdc
   121a4:	e58d40f8 	str	r4, [sp, #248]	; 0xf8
   121a8:	e58d40f4 	str	r4, [sp, #244]	; 0xf4
   121ac:	e58d40f0 	str	r4, [sp, #240]	; 0xf0
   121b0:	e58d40ec 	str	r4, [sp, #236]	; 0xec
   121b4:	e58d40e8 	str	r4, [sp, #232]	; 0xe8
   121b8:	e58d40e4 	str	r4, [sp, #228]	; 0xe4
   121bc:	e58d40e0 	str	r4, [sp, #224]	; 0xe0
   121c0:	e58d40dc 	str	r4, [sp, #220]	; 0xdc
   121c4:	e58d410c 	str	r4, [sp, #268]	; 0x10c
   121c8:	e58d4108 	str	r4, [sp, #264]	; 0x108
   121cc:	e58d4104 	str	r4, [sp, #260]	; 0x104
   121d0:	e58d4100 	str	r4, [sp, #256]	; 0x100
   121d4:	e58d40fc 	str	r4, [sp, #252]	; 0xfc
   121d8:	e58d4120 	str	r4, [sp, #288]	; 0x120
   121dc:	e58d411c 	str	r4, [sp, #284]	; 0x11c
   121e0:	e58d4118 	str	r4, [sp, #280]	; 0x118
   121e4:	e58d4114 	str	r4, [sp, #276]	; 0x114
   121e8:	e58d4110 	str	r4, [sp, #272]	; 0x110
   121ec:	eb002781 	bl	1bff8 <TargetState::getTargetRegs(Z80Registers&)>
   121f0:	e28d10dc 	add	r1, sp, #220	; 0xdc
   121f4:	e1a00005 	mov	r0, r5
   121f8:	e58d401c 	str	r4, [sp, #28]
   121fc:	eb002015 	bl	1a258 <TargetDebug::startSetRegisterSequence(Z80Registers*)>
   12200:	eaffffcf 	b	12144 <McManager::handleTargetProgram(bool, bool, bool) [clone .part.3]+0x1b4>
   12204:	e59f01f4 	ldr	r0, [pc, #500]	; 12400 <McManager::handleTargetProgram(bool, bool, bool) [clone .part.3]+0x470>
   12208:	eaffffdf 	b	1218c <McManager::handleTargetProgram(bool, bool, bool) [clone .part.3]+0x1fc>
   1220c:	e35b0000 	cmp	fp, #0
   12210:	1affffcb 	bne	12144 <McManager::handleTargetProgram(bool, bool, bool) [clone .part.3]+0x1b4>
   12214:	e28d0030 	add	r0, sp, #48	; 0x30
   12218:	e58db04c 	str	fp, [sp, #76]	; 0x4c
   1221c:	e58db048 	str	fp, [sp, #72]	; 0x48
   12220:	e58db044 	str	fp, [sp, #68]	; 0x44
   12224:	e58db040 	str	fp, [sp, #64]	; 0x40
   12228:	e58db03c 	str	fp, [sp, #60]	; 0x3c
   1222c:	e58db038 	str	fp, [sp, #56]	; 0x38
   12230:	e58db034 	str	fp, [sp, #52]	; 0x34
   12234:	e58db030 	str	fp, [sp, #48]	; 0x30
   12238:	e58db060 	str	fp, [sp, #96]	; 0x60
   1223c:	e58db05c 	str	fp, [sp, #92]	; 0x5c
   12240:	e58db058 	str	fp, [sp, #88]	; 0x58
   12244:	e58db054 	str	fp, [sp, #84]	; 0x54
   12248:	e58db050 	str	fp, [sp, #80]	; 0x50
   1224c:	e58db074 	str	fp, [sp, #116]	; 0x74
   12250:	e58db070 	str	fp, [sp, #112]	; 0x70
   12254:	e58db06c 	str	fp, [sp, #108]	; 0x6c
   12258:	e58db068 	str	fp, [sp, #104]	; 0x68
   1225c:	e58db064 	str	fp, [sp, #100]	; 0x64
   12260:	eb002764 	bl	1bff8 <TargetState::getTargetRegs(Z80Registers&)>
   12264:	e1cd23d0 	ldrd	r2, [sp, #48]	; 0x30
   12268:	e59d104c 	ldr	r1, [sp, #76]	; 0x4c
   1226c:	e59de03c 	ldr	lr, [sp, #60]	; 0x3c
   12270:	e59dc038 	ldr	ip, [sp, #56]	; 0x38
   12274:	e59d0044 	ldr	r0, [sp, #68]	; 0x44
   12278:	e59d5048 	ldr	r5, [sp, #72]	; 0x48
   1227c:	e58d1014 	str	r1, [sp, #20]
   12280:	e59d1040 	ldr	r1, [sp, #64]	; 0x40
   12284:	e98d5001 	stmib	sp, {r0, ip, lr}
   12288:	e58d1000 	str	r1, [sp]
   1228c:	e58d5010 	str	r5, [sp, #16]
   12290:	e59f117c 	ldr	r1, [pc, #380]	; 12414 <McManager::handleTargetProgram(bool, bool, bool) [clone .part.3]+0x484>
   12294:	e28d0078 	add	r0, sp, #120	; 0x78
   12298:	ebffddc5 	bl	99b4 <ee_sprintf>
   1229c:	e28d1078 	add	r1, sp, #120	; 0x78
   122a0:	e3a02f7d 	mov	r2, #500	; 0x1f4
   122a4:	e28d00dc 	add	r0, sp, #220	; 0xdc
   122a8:	eb006926 	bl	2c748 <strlcpy>
   122ac:	e59d1064 	ldr	r1, [sp, #100]	; 0x64
   122b0:	e59de068 	ldr	lr, [sp, #104]	; 0x68
   122b4:	e59dc054 	ldr	ip, [sp, #84]	; 0x54
   122b8:	e58d1008 	str	r1, [sp, #8]
   122bc:	e59d1050 	ldr	r1, [sp, #80]	; 0x50
   122c0:	e58de00c 	str	lr, [sp, #12]
   122c4:	e88d1002 	stm	sp, {r1, ip}
   122c8:	e59d3058 	ldr	r3, [sp, #88]	; 0x58
   122cc:	e59d205c 	ldr	r2, [sp, #92]	; 0x5c
   122d0:	e59f1140 	ldr	r1, [pc, #320]	; 12418 <McManager::handleTargetProgram(bool, bool, bool) [clone .part.3]+0x488>
   122d4:	e28d0078 	add	r0, sp, #120	; 0x78
   122d8:	ebffddb5 	bl	99b4 <ee_sprintf>
   122dc:	e28d1078 	add	r1, sp, #120	; 0x78
   122e0:	e3a02f7d 	mov	r2, #500	; 0x1f4
   122e4:	e28d00dc 	add	r0, sp, #220	; 0xdc
   122e8:	eb0068e6 	bl	2c688 <strlcat>
   122ec:	e59dc074 	ldr	ip, [sp, #116]	; 0x74
   122f0:	e59d1070 	ldr	r1, [sp, #112]	; 0x70
   122f4:	e59d306c 	ldr	r3, [sp, #108]	; 0x6c
   122f8:	e88d1002 	stm	sp, {r1, ip}
   122fc:	e59d2060 	ldr	r2, [sp, #96]	; 0x60
   12300:	e59f1114 	ldr	r1, [pc, #276]	; 1241c <McManager::handleTargetProgram(bool, bool, bool) [clone .part.3]+0x48c>
   12304:	e28d0078 	add	r0, sp, #120	; 0x78
   12308:	ebffdda9 	bl	99b4 <ee_sprintf>
   1230c:	e28d1078 	add	r1, sp, #120	; 0x78
   12310:	e3a02f7d 	mov	r2, #500	; 0x1f4
   12314:	e28d00dc 	add	r0, sp, #220	; 0xdc
   12318:	eb0068da 	bl	2c688 <strlcat>
   1231c:	e59f00e0 	ldr	r0, [pc, #224]	; 12404 <McManager::handleTargetProgram(bool, bool, bool) [clone .part.3]+0x474>
   12320:	e28d30dc 	add	r3, sp, #220	; 0xdc
   12324:	e59f20f4 	ldr	r2, [pc, #244]	; 12420 <McManager::handleTargetProgram(bool, bool, bool) [clone .part.3]+0x490>
   12328:	e3a01004 	mov	r1, #4
   1232c:	ebffdd20 	bl	97b4 <LogWrite>
   12330:	e596000c 	ldr	r0, [r6, #12]
   12334:	e3500000 	cmp	r0, #0
   12338:	0a000029 	beq	123e4 <McManager::handleTargetProgram(bool, bool, bool) [clone .part.3]+0x454>
   1233c:	e5903000 	ldr	r3, [r0]
   12340:	e3e01000 	mvn	r1, #0
   12344:	e593300c 	ldr	r3, [r3, #12]
   12348:	e12fff33 	blx	r3
   1234c:	e5905048 	ldr	r5, [r0, #72]	; 0x48
   12350:	e28d1030 	add	r1, sp, #48	; 0x30
   12354:	e1a00005 	mov	r0, r5
   12358:	e3a03064 	mov	r3, #100	; 0x64
   1235c:	e28d2078 	add	r2, sp, #120	; 0x78
   12360:	eb001ec2 	bl	19e70 <TargetCPUZ80::getSnippetToSetRegs(unsigned long, Z80Registers&, unsigned char*, unsigned long)>
   12364:	e2506000 	subs	r6, r0, #0
   12368:	0a00001b 	beq	123dc <McManager::handleTargetProgram(bool, bool, bool) [clone .part.3]+0x44c>
   1236c:	e3a07000 	mov	r7, #0
   12370:	e1a03005 	mov	r3, r5
   12374:	e59f20a8 	ldr	r2, [pc, #168]	; 12424 <McManager::handleTargetProgram(bool, bool, bool) [clone .part.3]+0x494>
   12378:	e3a01004 	mov	r1, #4
   1237c:	e59f0080 	ldr	r0, [pc, #128]	; 12404 <McManager::handleTargetProgram(bool, bool, bool) [clone .part.3]+0x474>
   12380:	e58d6000 	str	r6, [sp]
   12384:	ebffdd0a 	bl	97b4 <LogWrite>
   12388:	e1a03007 	mov	r3, r7
   1238c:	e1a02006 	mov	r2, r6
   12390:	e28d1078 	add	r1, sp, #120	; 0x78
   12394:	e58d7000 	str	r7, [sp]
   12398:	e1a00005 	mov	r0, r5
   1239c:	ebfffeb4 	bl	11e74 <McManager::blockWrite(unsigned long, unsigned char const*, unsigned long, bool, bool)>
   123a0:	e3e0c03c 	mvn	ip, #60	; 0x3c
   123a4:	e1a0e425 	lsr	lr, r5, #8
   123a8:	e1a03007 	mov	r3, r7
   123ac:	e28d102c 	add	r1, sp, #44	; 0x2c
   123b0:	e58d7000 	str	r7, [sp]
   123b4:	e1a00007 	mov	r0, r7
   123b8:	e3a02003 	mov	r2, #3
   123bc:	e5cd502d 	strb	r5, [sp, #45]	; 0x2d
   123c0:	e5cde02e 	strb	lr, [sp, #46]	; 0x2e
   123c4:	e5cdc02c 	strb	ip, [sp, #44]	; 0x2c
   123c8:	ebfffea9 	bl	11e74 <McManager::blockWrite(unsigned long, unsigned char const*, unsigned long, bool, bool)>
   123cc:	e28d3078 	add	r3, sp, #120	; 0x78
   123d0:	e0831006 	add	r1, r3, r6
   123d4:	e1a00003 	mov	r0, r3
   123d8:	ebffdd9b 	bl	9a4c <ee_dump_mem>
   123dc:	e58d401c 	str	r4, [sp, #28]
   123e0:	eaffff57 	b	12144 <McManager::handleTargetProgram(bool, bool, bool) [clone .part.3]+0x1b4>
   123e4:	e59f0014 	ldr	r0, [pc, #20]	; 12400 <McManager::handleTargetProgram(bool, bool, bool) [clone .part.3]+0x470>
   123e8:	eaffffd7 	b	1234c <McManager::handleTargetProgram(bool, bool, bool) [clone .part.3]+0x3bc>
   123ec:	e59f300c 	ldr	r3, [pc, #12]	; 12400 <McManager::handleTargetProgram(bool, bool, bool) [clone .part.3]+0x470>
   123f0:	e5932040 	ldr	r2, [r3, #64]	; 0x40
   123f4:	e1a00003 	mov	r0, r3
   123f8:	eaffff06 	b	12018 <McManager::handleTargetProgram(bool, bool, bool) [clone .part.3]+0x88>
   123fc:	00045548 	.word	0x00045548
   12400:	00042088 	.word	0x00042088
   12404:	0002eeb8 	.word	0x0002eeb8
   12408:	0002ef58 	.word	0x0002ef58
   1240c:	0002ef78 	.word	0x0002ef78
   12410:	0002ef9c 	.word	0x0002ef9c
   12414:	0002efb4 	.word	0x0002efb4
   12418:	0002eff4 	.word	0x0002eff4
   1241c:	0002f028 	.word	0x0002f028
   12420:	0002f064 	.word	0x0002f064
   12424:	0002f070 	.word	0x0002f070

00012428 <McManager::blockRead(unsigned long, unsigned char*, unsigned long, bool, bool)>:
   12428:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1242c:	e59f4114 	ldr	r4, [pc, #276]	; 12548 <McManager::blockRead(unsigned long, unsigned char*, unsigned long, bool, bool)+0x120>
   12430:	e1a05000 	mov	r5, r0
   12434:	e594000c 	ldr	r0, [r4, #12]
   12438:	e24dd00c 	sub	sp, sp, #12
   1243c:	e3500000 	cmp	r0, #0
   12440:	e1a08001 	mov	r8, r1
   12444:	e1a06002 	mov	r6, r2
   12448:	e1a0b003 	mov	fp, r3
   1244c:	e5dd7030 	ldrb	r7, [sp, #48]	; 0x30
   12450:	0a000035 	beq	1252c <McManager::blockRead(unsigned long, unsigned char*, unsigned long, bool, bool)+0x104>
   12454:	e5903000 	ldr	r3, [r0]
   12458:	e3e01000 	mvn	r1, #0
   1245c:	e593300c 	ldr	r3, [r3, #12]
   12460:	e12fff33 	blx	r3
   12464:	e594300c 	ldr	r3, [r4, #12]
   12468:	e590903c 	ldr	r9, [r0, #60]	; 0x3c
   1246c:	e3530000 	cmp	r3, #0
   12470:	0a000031 	beq	1253c <McManager::blockRead(unsigned long, unsigned char*, unsigned long, bool, bool)+0x114>
   12474:	e5932000 	ldr	r2, [r3]
   12478:	e1a00003 	mov	r0, r3
   1247c:	e3e01000 	mvn	r1, #0
   12480:	e592300c 	ldr	r3, [r2, #12]
   12484:	e12fff33 	blx	r3
   12488:	e594300c 	ldr	r3, [r4, #12]
   1248c:	e590a040 	ldr	sl, [r0, #64]	; 0x40
   12490:	e3530000 	cmp	r3, #0
   12494:	059f00b0 	ldreq	r0, [pc, #176]	; 1254c <McManager::blockRead(unsigned long, unsigned char*, unsigned long, bool, bool)+0x124>
   12498:	0a000004 	beq	124b0 <McManager::blockRead(unsigned long, unsigned char*, unsigned long, bool, bool)+0x88>
   1249c:	e5932000 	ldr	r2, [r3]
   124a0:	e1a00003 	mov	r0, r3
   124a4:	e3e01000 	mvn	r1, #0
   124a8:	e592300c 	ldr	r3, [r2, #12]
   124ac:	e12fff33 	blx	r3
   124b0:	e5d0403a 	ldrb	r4, [r0, #58]	; 0x3a
   124b4:	eb001b66 	bl	19254 <BusAccess::pauseIsPaused()>
   124b8:	e3500000 	cmp	r0, #0
   124bc:	1a000014 	bne	12514 <McManager::blockRead(unsigned long, unsigned char*, unsigned long, bool, bool)+0xec>
   124c0:	e2273001 	eor	r3, r7, #1
   124c4:	e0044003 	and	r4, r4, r3
   124c8:	e1550009 	cmp	r5, r9
   124cc:	33a04000 	movcc	r4, #0
   124d0:	22044001 	andcs	r4, r4, #1
   124d4:	e3540000 	cmp	r4, #0
   124d8:	1a000009 	bne	12504 <McManager::blockRead(unsigned long, unsigned char*, unsigned long, bool, bool)+0xdc>
   124dc:	e58d7000 	str	r7, [sp]
   124e0:	e1a0300b 	mov	r3, fp
   124e4:	e1a02006 	mov	r2, r6
   124e8:	e1a01008 	mov	r1, r8
   124ec:	e1a00005 	mov	r0, r5
   124f0:	eb00185c 	bl	18668 <BusAccess::blockRead(unsigned long, unsigned char*, unsigned long, int, int)>
   124f4:	e16f0f10 	clz	r0, r0
   124f8:	e1a002a0 	lsr	r0, r0, #5
   124fc:	e28dd00c 	add	sp, sp, #12
   12500:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12504:	e089900a 	add	r9, r9, sl
   12508:	e0853006 	add	r3, r5, r6
   1250c:	e1590003 	cmp	r9, r3
   12510:	3afffff1 	bcc	124dc <McManager::blockRead(unsigned long, unsigned char*, unsigned long, bool, bool)+0xb4>
   12514:	e1a02006 	mov	r2, r6
   12518:	e1a01008 	mov	r1, r8
   1251c:	e1a00005 	mov	r0, r5
   12520:	e28dd00c 	add	sp, sp, #12
   12524:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12528:	ea001c24 	b	195c0 <RAMEmulator::blockRead(unsigned long, unsigned char*, unsigned long)>
   1252c:	e59f0018 	ldr	r0, [pc, #24]	; 1254c <McManager::blockRead(unsigned long, unsigned char*, unsigned long, bool, bool)+0x124>
   12530:	e590903c 	ldr	r9, [r0, #60]	; 0x3c
   12534:	e590a040 	ldr	sl, [r0, #64]	; 0x40
   12538:	eaffffdc 	b	124b0 <McManager::blockRead(unsigned long, unsigned char*, unsigned long, bool, bool)+0x88>
   1253c:	e59f0008 	ldr	r0, [pc, #8]	; 1254c <McManager::blockRead(unsigned long, unsigned char*, unsigned long, bool, bool)+0x124>
   12540:	e590a040 	ldr	sl, [r0, #64]	; 0x40
   12544:	eaffffd9 	b	124b0 <McManager::blockRead(unsigned long, unsigned char*, unsigned long, bool, bool)+0x88>
   12548:	00045548 	.word	0x00045548
   1254c:	00042088 	.word	0x00042088

00012550 <McManager::targetReset()>:
   12550:	e92d4010 	push	{r4, lr}
   12554:	ebfffafb 	bl	11148 <HwManager::reset()>
   12558:	e59f303c 	ldr	r3, [pc, #60]	; 1259c <McManager::targetReset()+0x4c>
   1255c:	e593000c 	ldr	r0, [r3, #12]
   12560:	e3500000 	cmp	r0, #0
   12564:	0a000004 	beq	1257c <McManager::targetReset()+0x2c>
   12568:	e5903000 	ldr	r3, [r0]
   1256c:	e59f202c 	ldr	r2, [pc, #44]	; 125a0 <McManager::targetReset()+0x50>
   12570:	e5933014 	ldr	r3, [r3, #20]
   12574:	e1530002 	cmp	r3, r2
   12578:	1a000002 	bne	12588 <McManager::targetReset()+0x38>
   1257c:	e8bd4010 	pop	{r4, lr}
   12580:	e3a00000 	mov	r0, #0
   12584:	ea0015b0 	b	17c4c <BusAccess::targetReset(bool)>
   12588:	e3a01000 	mov	r1, #0
   1258c:	e12fff33 	blx	r3
   12590:	e3500000 	cmp	r0, #0
   12594:	18bd8010 	popne	{r4, pc}
   12598:	eafffff7 	b	1257c <McManager::targetReset()+0x2c>
   1259c:	00045548 	.word	0x00045548
   125a0:	000114c0 	.word	0x000114c0

000125a4 <McManager::targetClearAllIO()>:
   125a4:	ea00198d 	b	18be0 <BusAccess::clearAllIO()>

000125a8 <McManager::targetPause()>:
   125a8:	ea001b23 	b	1923c <BusAccess::pause()>

000125ac <McManager::targetRelease()>:
   125ac:	ea001b44 	b	192c4 <BusAccess::pauseRelease()>

000125b0 <McManager::targetStep()>:
   125b0:	ea001b2b 	b	19264 <BusAccess::pauseStep()>

000125b4 <McManager::targetIsPaused()>:
   125b4:	ea001b26 	b	19254 <BusAccess::pauseIsPaused()>

000125b8 <McManager::targetBusUnderPiControl()>:
   125b8:	ea0015ea 	b	17d68 <BusAccess::isUnderControl()>

000125bc <McManager::handleTargetProgram(bool, bool, bool)>:
   125bc:	e92d4070 	push	{r4, r5, r6, lr}
   125c0:	e1a04000 	mov	r4, r0
   125c4:	e1a05001 	mov	r5, r1
   125c8:	e1a06002 	mov	r6, r2
   125cc:	eb002664 	bl	1bf64 <TargetState::numMemoryBlocks()>
   125d0:	e3500000 	cmp	r0, #0
   125d4:	0a00000a 	beq	12604 <McManager::handleTargetProgram(bool, bool, bool)+0x48>
   125d8:	e3a00000 	mov	r0, #0
   125dc:	eb00162b 	bl	17e90 <BusAccess::controlRelease(bool)>
   125e0:	eb001b37 	bl	192c4 <BusAccess::pauseRelease()>
   125e4:	eb00167e 	bl	17fe4 <BusAccess::controlRequestAndTake()>
   125e8:	e3500000 	cmp	r0, #0
   125ec:	1a000009 	bne	12618 <McManager::handleTargetProgram(bool, bool, bool)+0x5c>
   125f0:	e1a02006 	mov	r2, r6
   125f4:	e1a01005 	mov	r1, r5
   125f8:	e1a00004 	mov	r0, r4
   125fc:	e8bd4070 	pop	{r4, r5, r6, lr}
   12600:	eafffe62 	b	11f90 <McManager::handleTargetProgram(bool, bool, bool) [clone .part.3]>
   12604:	e59f2020 	ldr	r2, [pc, #32]	; 1262c <McManager::handleTargetProgram(bool, bool, bool)+0x70>
   12608:	e3a01004 	mov	r1, #4
   1260c:	e8bd4070 	pop	{r4, r5, r6, lr}
   12610:	e59f0018 	ldr	r0, [pc, #24]	; 12630 <McManager::handleTargetProgram(bool, bool, bool)+0x74>
   12614:	eaffdc66 	b	97b4 <LogWrite>
   12618:	e59f2014 	ldr	r2, [pc, #20]	; 12634 <McManager::handleTargetProgram(bool, bool, bool)+0x78>
   1261c:	e3a01004 	mov	r1, #4
   12620:	e8bd4070 	pop	{r4, r5, r6, lr}
   12624:	e59f0004 	ldr	r0, [pc, #4]	; 12630 <McManager::handleTargetProgram(bool, bool, bool)+0x74>
   12628:	eaffdc61 	b	97b4 <LogWrite>
   1262c:	0002f090 	.word	0x0002f090
   12630:	0002eeb8 	.word	0x0002eeb8
   12634:	0002f0b4 	.word	0x0002f0b4

00012638 <McManager::handleTargetFile(char const*, unsigned char const*, int)>:
   12638:	e59f3030 	ldr	r3, [pc, #48]	; 12670 <McManager::handleTargetFile(char const*, unsigned char const*, int)+0x38>
   1263c:	e593c00c 	ldr	ip, [r3, #12]
   12640:	e35c0000 	cmp	ip, #0
   12644:	012fff1e 	bxeq	lr
   12648:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
   1264c:	e59ce000 	ldr	lr, [ip]
   12650:	e1a03002 	mov	r3, r2
   12654:	e59ee01c 	ldr	lr, [lr, #28]
   12658:	e1a02001 	mov	r2, r1
   1265c:	e1a01000 	mov	r1, r0
   12660:	e1a0000c 	mov	r0, ip
   12664:	e1a0c00e 	mov	ip, lr
   12668:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
   1266c:	e12fff1c 	bx	ip
   12670:	00045548 	.word	0x00045548

00012674 <McManager::handleCommand(char const*, unsigned char const*, int, char*, int)>:
   12674:	e92d40f0 	push	{r4, r5, r6, r7, lr}
   12678:	e24dd0ec 	sub	sp, sp, #236	; 0xec
   1267c:	e1a04000 	mov	r4, r0
   12680:	e1a07001 	mov	r7, r1
   12684:	e1a06002 	mov	r6, r2
   12688:	e1a01000 	mov	r1, r0
   1268c:	e1a05003 	mov	r5, r3
   12690:	e28d201c 	add	r2, sp, #28
   12694:	e3a030c8 	mov	r3, #200	; 0xc8
   12698:	e59f03ec 	ldr	r0, [pc, #1004]	; 12a8c <McManager::handleCommand(char const*, unsigned char const*, int, char*, int)+0x418>
   1269c:	ebffe31d 	bl	b318 <jsonGetValueForKey>
   126a0:	e3500000 	cmp	r0, #0
   126a4:	0a000046 	beq	127c4 <McManager::handleCommand(char const*, unsigned char const*, int, char*, int)+0x150>
   126a8:	e3a03000 	mov	r3, #0
   126ac:	e59f13dc 	ldr	r1, [pc, #988]	; 12a90 <McManager::handleCommand(char const*, unsigned char const*, int, char*, int)+0x41c>
   126b0:	e5c53000 	strb	r3, [r5]
   126b4:	e28d001c 	add	r0, sp, #28
   126b8:	eb0066ec 	bl	2c270 <strcasecmp>
   126bc:	e3500000 	cmp	r0, #0
   126c0:	0a000041 	beq	127cc <McManager::handleCommand(char const*, unsigned char const*, int, char*, int)+0x158>
   126c4:	e59f13c8 	ldr	r1, [pc, #968]	; 12a94 <McManager::handleCommand(char const*, unsigned char const*, int, char*, int)+0x420>
   126c8:	e28d001c 	add	r0, sp, #28
   126cc:	eb0066e7 	bl	2c270 <strcasecmp>
   126d0:	e3500000 	cmp	r0, #0
   126d4:	0a000054 	beq	1282c <McManager::handleCommand(char const*, unsigned char const*, int, char*, int)+0x1b8>
   126d8:	e59f13b8 	ldr	r1, [pc, #952]	; 12a98 <McManager::handleCommand(char const*, unsigned char const*, int, char*, int)+0x424>
   126dc:	e28d001c 	add	r0, sp, #28
   126e0:	eb0066e2 	bl	2c270 <strcasecmp>
   126e4:	e2505000 	subs	r5, r0, #0
   126e8:	0a00003e 	beq	127e8 <McManager::handleCommand(char const*, unsigned char const*, int, char*, int)+0x174>
   126ec:	e59f13a8 	ldr	r1, [pc, #936]	; 12a9c <McManager::handleCommand(char const*, unsigned char const*, int, char*, int)+0x428>
   126f0:	e28d001c 	add	r0, sp, #28
   126f4:	eb0066dd 	bl	2c270 <strcasecmp>
   126f8:	e2505000 	subs	r5, r0, #0
   126fc:	0a00004f 	beq	12840 <McManager::handleCommand(char const*, unsigned char const*, int, char*, int)+0x1cc>
   12700:	e59f1398 	ldr	r1, [pc, #920]	; 12aa0 <McManager::handleCommand(char const*, unsigned char const*, int, char*, int)+0x42c>
   12704:	e28d001c 	add	r0, sp, #28
   12708:	eb0066d8 	bl	2c270 <strcasecmp>
   1270c:	e2505000 	subs	r5, r0, #0
   12710:	0a000057 	beq	12874 <McManager::handleCommand(char const*, unsigned char const*, int, char*, int)+0x200>
   12714:	e59f1388 	ldr	r1, [pc, #904]	; 12aa4 <McManager::handleCommand(char const*, unsigned char const*, int, char*, int)+0x430>
   12718:	e28d001c 	add	r0, sp, #28
   1271c:	eb0066d3 	bl	2c270 <strcasecmp>
   12720:	e3500000 	cmp	r0, #0
   12724:	0a000043 	beq	12838 <McManager::handleCommand(char const*, unsigned char const*, int, char*, int)+0x1c4>
   12728:	e59f1378 	ldr	r1, [pc, #888]	; 12aa8 <McManager::handleCommand(char const*, unsigned char const*, int, char*, int)+0x434>
   1272c:	e28d001c 	add	r0, sp, #28
   12730:	eb0066ce 	bl	2c270 <strcasecmp>
   12734:	e3500000 	cmp	r0, #0
   12738:	0a00006a 	beq	128e8 <McManager::handleCommand(char const*, unsigned char const*, int, char*, int)+0x274>
   1273c:	e59f1368 	ldr	r1, [pc, #872]	; 12aac <McManager::handleCommand(char const*, unsigned char const*, int, char*, int)+0x438>
   12740:	e28d001c 	add	r0, sp, #28
   12744:	eb0066c9 	bl	2c270 <strcasecmp>
   12748:	e3500000 	cmp	r0, #0
   1274c:	0a000067 	beq	128f0 <McManager::handleCommand(char const*, unsigned char const*, int, char*, int)+0x27c>
   12750:	e59f1358 	ldr	r1, [pc, #856]	; 12ab0 <McManager::handleCommand(char const*, unsigned char const*, int, char*, int)+0x43c>
   12754:	e28d001c 	add	r0, sp, #28
   12758:	eb0066c4 	bl	2c270 <strcasecmp>
   1275c:	e3500000 	cmp	r0, #0
   12760:	0a000055 	beq	128bc <McManager::handleCommand(char const*, unsigned char const*, int, char*, int)+0x248>
   12764:	e59f1348 	ldr	r1, [pc, #840]	; 12ab4 <McManager::handleCommand(char const*, unsigned char const*, int, char*, int)+0x440>
   12768:	e28d001c 	add	r0, sp, #28
   1276c:	eb0066bf 	bl	2c270 <strcasecmp>
   12770:	e3500000 	cmp	r0, #0
   12774:	0a000050 	beq	128bc <McManager::handleCommand(char const*, unsigned char const*, int, char*, int)+0x248>
   12778:	e3a0200a 	mov	r2, #10
   1277c:	e59f1334 	ldr	r1, [pc, #820]	; 12ab8 <McManager::handleCommand(char const*, unsigned char const*, int, char*, int)+0x444>
   12780:	e28d001c 	add	r0, sp, #28
   12784:	eb00681c 	bl	2c7fc <strncasecmp>
   12788:	e3500000 	cmp	r0, #0
   1278c:	1a000062 	bne	1291c <McManager::handleCommand(char const*, unsigned char const*, int, char*, int)+0x2a8>
   12790:	e28d001c 	add	r0, sp, #28
   12794:	e3a0103d 	mov	r1, #61	; 0x3d
   12798:	eb0066d0 	bl	2c2e0 <strchr>
   1279c:	e3500000 	cmp	r0, #0
   127a0:	0a000007 	beq	127c4 <McManager::handleCommand(char const*, unsigned char const*, int, char*, int)+0x150>
   127a4:	e2804001 	add	r4, r0, #1
   127a8:	e1a00004 	mov	r0, r4
   127ac:	ebfffcbc 	bl	11aa4 <McManager::setMachineByName(char const*)>
   127b0:	e1a03004 	mov	r3, r4
   127b4:	e59f2300 	ldr	r2, [pc, #768]	; 12abc <McManager::handleCommand(char const*, unsigned char const*, int, char*, int)+0x448>
   127b8:	e3a01005 	mov	r1, #5
   127bc:	e59f02fc 	ldr	r0, [pc, #764]	; 12ac0 <McManager::handleCommand(char const*, unsigned char const*, int, char*, int)+0x44c>
   127c0:	ebffdbfb 	bl	97b4 <LogWrite>
   127c4:	e28dd0ec 	add	sp, sp, #236	; 0xec
   127c8:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
   127cc:	ebfffb6f 	bl	11590 <McManager::getMachineJSON()>
   127d0:	e59d2100 	ldr	r2, [sp, #256]	; 0x100
   127d4:	e1a01000 	mov	r1, r0
   127d8:	e1a00005 	mov	r0, r5
   127dc:	eb0067a9 	bl	2c688 <strlcat>
   127e0:	e28dd0ec 	add	sp, sp, #236	; 0xec
   127e4:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
   127e8:	eb0025dd 	bl	1bf64 <TargetState::numMemoryBlocks()>
   127ec:	e3500000 	cmp	r0, #0
   127f0:	0a000008 	beq	12818 <McManager::handleCommand(char const*, unsigned char const*, int, char*, int)+0x1a4>
   127f4:	e1a00005 	mov	r0, r5
   127f8:	eb0015a4 	bl	17e90 <BusAccess::controlRelease(bool)>
   127fc:	eb001ab0 	bl	192c4 <BusAccess::pauseRelease()>
   12800:	eb0015f7 	bl	17fe4 <BusAccess::controlRequestAndTake()>
   12804:	e2502000 	subs	r2, r0, #0
   12808:	1a000026 	bne	128a8 <McManager::handleCommand(char const*, unsigned char const*, int, char*, int)+0x234>
   1280c:	e1a01002 	mov	r1, r2
   12810:	ebfffdde 	bl	11f90 <McManager::handleTargetProgram(bool, bool, bool) [clone .part.3]>
   12814:	eaffffea 	b	127c4 <McManager::handleCommand(char const*, unsigned char const*, int, char*, int)+0x150>
   12818:	e59f22a4 	ldr	r2, [pc, #676]	; 12ac4 <McManager::handleCommand(char const*, unsigned char const*, int, char*, int)+0x450>
   1281c:	e3a01004 	mov	r1, #4
   12820:	e59f0298 	ldr	r0, [pc, #664]	; 12ac0 <McManager::handleCommand(char const*, unsigned char const*, int, char*, int)+0x44c>
   12824:	ebffdbe2 	bl	97b4 <LogWrite>
   12828:	eaffffe5 	b	127c4 <McManager::handleCommand(char const*, unsigned char const*, int, char*, int)+0x150>
   1282c:	eb00257f 	bl	1be30 <TargetState::clear()>
   12830:	e28dd0ec 	add	sp, sp, #236	; 0xec
   12834:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
   12838:	eb001a7f 	bl	1923c <BusAccess::pause()>
   1283c:	eaffffe0 	b	127c4 <McManager::handleCommand(char const*, unsigned char const*, int, char*, int)+0x150>
   12840:	eb0025c7 	bl	1bf64 <TargetState::numMemoryBlocks()>
   12844:	e3500000 	cmp	r0, #0
   12848:	0afffff2 	beq	12818 <McManager::handleCommand(char const*, unsigned char const*, int, char*, int)+0x1a4>
   1284c:	e1a00005 	mov	r0, r5
   12850:	eb00158e 	bl	17e90 <BusAccess::controlRelease(bool)>
   12854:	eb001a9a 	bl	192c4 <BusAccess::pauseRelease()>
   12858:	eb0015e1 	bl	17fe4 <BusAccess::controlRequestAndTake()>
   1285c:	e2502000 	subs	r2, r0, #0
   12860:	1a000010 	bne	128a8 <McManager::handleCommand(char const*, unsigned char const*, int, char*, int)+0x234>
   12864:	e1a01002 	mov	r1, r2
   12868:	e3a00001 	mov	r0, #1
   1286c:	ebfffdc7 	bl	11f90 <McManager::handleTargetProgram(bool, bool, bool) [clone .part.3]>
   12870:	eaffffd3 	b	127c4 <McManager::handleCommand(char const*, unsigned char const*, int, char*, int)+0x150>
   12874:	ebfffa33 	bl	11148 <HwManager::reset()>
   12878:	e59f3248 	ldr	r3, [pc, #584]	; 12ac8 <McManager::handleCommand(char const*, unsigned char const*, int, char*, int)+0x454>
   1287c:	e593000c 	ldr	r0, [r3, #12]
   12880:	e3500000 	cmp	r0, #0
   12884:	0a000004 	beq	1289c <McManager::handleCommand(char const*, unsigned char const*, int, char*, int)+0x228>
   12888:	e5903000 	ldr	r3, [r0]
   1288c:	e59f2238 	ldr	r2, [pc, #568]	; 12acc <McManager::handleCommand(char const*, unsigned char const*, int, char*, int)+0x458>
   12890:	e5933014 	ldr	r3, [r3, #20]
   12894:	e1530002 	cmp	r3, r2
   12898:	1a00001a 	bne	12908 <McManager::handleCommand(char const*, unsigned char const*, int, char*, int)+0x294>
   1289c:	e3a00000 	mov	r0, #0
   128a0:	eb0014e9 	bl	17c4c <BusAccess::targetReset(bool)>
   128a4:	eaffffc6 	b	127c4 <McManager::handleCommand(char const*, unsigned char const*, int, char*, int)+0x150>
   128a8:	e59f2220 	ldr	r2, [pc, #544]	; 12ad0 <McManager::handleCommand(char const*, unsigned char const*, int, char*, int)+0x45c>
   128ac:	e3a01004 	mov	r1, #4
   128b0:	e59f0208 	ldr	r0, [pc, #520]	; 12ac0 <McManager::handleCommand(char const*, unsigned char const*, int, char*, int)+0x44c>
   128b4:	ebffdbbe 	bl	97b4 <LogWrite>
   128b8:	eaffffc1 	b	127c4 <McManager::handleCommand(char const*, unsigned char const*, int, char*, int)+0x150>
   128bc:	e59f3204 	ldr	r3, [pc, #516]	; 12ac8 <McManager::handleCommand(char const*, unsigned char const*, int, char*, int)+0x454>
   128c0:	e593000c 	ldr	r0, [r3, #12]
   128c4:	e3500000 	cmp	r0, #0
   128c8:	0affffbd 	beq	127c4 <McManager::handleCommand(char const*, unsigned char const*, int, char*, int)+0x150>
   128cc:	e590c000 	ldr	ip, [r0]
   128d0:	e1a01004 	mov	r1, r4
   128d4:	e1a03006 	mov	r3, r6
   128d8:	e1a02007 	mov	r2, r7
   128dc:	e59c401c 	ldr	r4, [ip, #28]
   128e0:	e12fff34 	blx	r4
   128e4:	eaffffb6 	b	127c4 <McManager::handleCommand(char const*, unsigned char const*, int, char*, int)+0x150>
   128e8:	eb001a75 	bl	192c4 <BusAccess::pauseRelease()>
   128ec:	eaffffb4 	b	127c4 <McManager::handleCommand(char const*, unsigned char const*, int, char*, int)+0x150>
   128f0:	e59f21dc 	ldr	r2, [pc, #476]	; 12ad4 <McManager::handleCommand(char const*, unsigned char const*, int, char*, int)+0x460>
   128f4:	e3a01005 	mov	r1, #5
   128f8:	e59f01c0 	ldr	r0, [pc, #448]	; 12ac0 <McManager::handleCommand(char const*, unsigned char const*, int, char*, int)+0x44c>
   128fc:	ebffdbac 	bl	97b4 <LogWrite>
   12900:	eb0018b6 	bl	18be0 <BusAccess::clearAllIO()>
   12904:	eaffffae 	b	127c4 <McManager::handleCommand(char const*, unsigned char const*, int, char*, int)+0x150>
   12908:	e1a01005 	mov	r1, r5
   1290c:	e12fff33 	blx	r3
   12910:	e3500000 	cmp	r0, #0
   12914:	1affffaa 	bne	127c4 <McManager::handleCommand(char const*, unsigned char const*, int, char*, int)+0x150>
   12918:	eaffffdf 	b	1289c <McManager::handleCommand(char const*, unsigned char const*, int, char*, int)+0x228>
   1291c:	e3a02009 	mov	r2, #9
   12920:	e59f11b0 	ldr	r1, [pc, #432]	; 12ad8 <McManager::handleCommand(char const*, unsigned char const*, int, char*, int)+0x464>
   12924:	e28d001c 	add	r0, sp, #28
   12928:	eb0067b3 	bl	2c7fc <strncasecmp>
   1292c:	e3500000 	cmp	r0, #0
   12930:	1a000007 	bne	12954 <McManager::handleCommand(char const*, unsigned char const*, int, char*, int)+0x2e0>
   12934:	e28d001c 	add	r0, sp, #28
   12938:	e3a0103d 	mov	r1, #61	; 0x3d
   1293c:	eb006667 	bl	2c2e0 <strchr>
   12940:	e3500000 	cmp	r0, #0
   12944:	0affff9e 	beq	127c4 <McManager::handleCommand(char const*, unsigned char const*, int, char*, int)+0x150>
   12948:	e2800001 	add	r0, r0, #1
   1294c:	ebfffc84 	bl	11b64 <McManager::setMachineOpts(char const*)>
   12950:	eaffff9b 	b	127c4 <McManager::handleCommand(char const*, unsigned char const*, int, char*, int)+0x150>
   12954:	e59f1180 	ldr	r1, [pc, #384]	; 12adc <McManager::handleCommand(char const*, unsigned char const*, int, char*, int)+0x468>
   12958:	e28d001c 	add	r0, sp, #28
   1295c:	eb006643 	bl	2c270 <strcasecmp>
   12960:	e3500000 	cmp	r0, #0
   12964:	0a000012 	beq	129b4 <McManager::handleCommand(char const*, unsigned char const*, int, char*, int)+0x340>
   12968:	e59f1170 	ldr	r1, [pc, #368]	; 12ae0 <McManager::handleCommand(char const*, unsigned char const*, int, char*, int)+0x46c>
   1296c:	e28d001c 	add	r0, sp, #28
   12970:	eb00663e 	bl	2c270 <strcasecmp>
   12974:	e3500000 	cmp	r0, #0
   12978:	0a000017 	beq	129dc <McManager::handleCommand(char const*, unsigned char const*, int, char*, int)+0x368>
   1297c:	e59f1160 	ldr	r1, [pc, #352]	; 12ae4 <McManager::handleCommand(char const*, unsigned char const*, int, char*, int)+0x470>
   12980:	e28d001c 	add	r0, sp, #28
   12984:	eb006639 	bl	2c270 <strcasecmp>
   12988:	e3500000 	cmp	r0, #0
   1298c:	1a00000c 	bne	129c4 <McManager::handleCommand(char const*, unsigned char const*, int, char*, int)+0x350>
   12990:	eb001df3 	bl	1a164 <TargetDebug::get()>
   12994:	e3500000 	cmp	r0, #0
   12998:	0affff89 	beq	127c4 <McManager::handleCommand(char const*, unsigned char const*, int, char*, int)+0x150>
   1299c:	e3a02001 	mov	r2, #1
   129a0:	e2803a01 	add	r3, r0, #4096	; 0x1000
   129a4:	e5c32a38 	strb	r2, [r3, #2616]	; 0xa38
   129a8:	e28000cc 	add	r0, r0, #204	; 0xcc
   129ac:	eb001b57 	bl	19710 <StepTester::writeTestCode()>
   129b0:	eaffff83 	b	127c4 <McManager::handleCommand(char const*, unsigned char const*, int, char*, int)+0x150>
   129b4:	e1a01006 	mov	r1, r6
   129b8:	e1a00007 	mov	r0, r7
   129bc:	ebfffce2 	bl	11d4c <McManager::handleRxCharFromTarget(unsigned char const*, int)>
   129c0:	eaffff7f 	b	127c4 <McManager::handleCommand(char const*, unsigned char const*, int, char*, int)+0x150>
   129c4:	e28d301c 	add	r3, sp, #28
   129c8:	e59f2118 	ldr	r2, [pc, #280]	; 12ae8 <McManager::handleCommand(char const*, unsigned char const*, int, char*, int)+0x474>
   129cc:	e3a01004 	mov	r1, #4
   129d0:	e59f00e8 	ldr	r0, [pc, #232]	; 12ac0 <McManager::handleCommand(char const*, unsigned char const*, int, char*, int)+0x44c>
   129d4:	ebffdb76 	bl	97b4 <LogWrite>
   129d8:	eaffff79 	b	127c4 <McManager::handleCommand(char const*, unsigned char const*, int, char*, int)+0x150>
   129dc:	e3a0c030 	mov	ip, #48	; 0x30
   129e0:	e1a01004 	mov	r1, r4
   129e4:	e28d2004 	add	r2, sp, #4
   129e8:	e3a03014 	mov	r3, #20
   129ec:	e59f00f8 	ldr	r0, [pc, #248]	; 12aec <McManager::handleCommand(char const*, unsigned char const*, int, char*, int)+0x478>
   129f0:	e1cdc0b4 	strh	ip, [sp, #4]
   129f4:	ebffe247 	bl	b318 <jsonGetValueForKey>
   129f8:	e3500000 	cmp	r0, #0
   129fc:	1a000003 	bne	12a10 <McManager::handleCommand(char const*, unsigned char const*, int, char*, int)+0x39c>
   12a00:	e59f20e8 	ldr	r2, [pc, #232]	; 12af0 <McManager::handleCommand(char const*, unsigned char const*, int, char*, int)+0x47c>
   12a04:	e3a01004 	mov	r1, #4
   12a08:	e59f00b0 	ldr	r0, [pc, #176]	; 12ac0 <McManager::handleCommand(char const*, unsigned char const*, int, char*, int)+0x44c>
   12a0c:	ebffdb68 	bl	97b4 <LogWrite>
   12a10:	e35600c8 	cmp	r6, #200	; 0xc8
   12a14:	a3a060c8 	movge	r6, #200	; 0xc8
   12a18:	e59f40a8 	ldr	r4, [pc, #168]	; 12ac8 <McManager::handleCommand(char const*, unsigned char const*, int, char*, int)+0x454>
   12a1c:	e1a02006 	mov	r2, r6
   12a20:	e2843ec7 	add	r3, r4, #3184	; 0xc70
   12a24:	e2833008 	add	r3, r3, #8
   12a28:	e1a00003 	mov	r0, r3
   12a2c:	e1a01007 	mov	r1, r7
   12a30:	eb006585 	bl	2c04c <memcpy>
   12a34:	e3a02000 	mov	r2, #0
   12a38:	e1a03000 	mov	r3, r0
   12a3c:	e594000c 	ldr	r0, [r4, #12]
   12a40:	e0846006 	add	r6, r4, r6
   12a44:	e1500002 	cmp	r0, r2
   12a48:	e5c62c78 	strb	r2, [r6, #3192]	; 0xc78
   12a4c:	e5c42d44 	strb	r2, [r4, #3396]	; 0xd44
   12a50:	0a000006 	beq	12a70 <McManager::handleCommand(char const*, unsigned char const*, int, char*, int)+0x3fc>
   12a54:	e5902000 	ldr	r2, [r0]
   12a58:	e1a01003 	mov	r1, r3
   12a5c:	e5925020 	ldr	r5, [r2, #32]
   12a60:	e2842d35 	add	r2, r4, #3392	; 0xd40
   12a64:	e3a03e7d 	mov	r3, #2000	; 0x7d0
   12a68:	e2822004 	add	r2, r2, #4
   12a6c:	e12fff35 	blx	r5
   12a70:	e5940000 	ldr	r0, [r4]
   12a74:	e3500000 	cmp	r0, #0
   12a78:	0affff51 	beq	127c4 <McManager::handleCommand(char const*, unsigned char const*, int, char*, int)+0x150>
   12a7c:	e28d2004 	add	r2, sp, #4
   12a80:	e59f106c 	ldr	r1, [pc, #108]	; 12af4 <McManager::handleCommand(char const*, unsigned char const*, int, char*, int)+0x480>
   12a84:	ebffeff8 	bl	ea6c <CommandHandler::sendRemoteDebugProtocolMsg(char const*, char const*)>
   12a88:	eaffff4d 	b	127c4 <McManager::handleCommand(char const*, unsigned char const*, int, char*, int)+0x150>
   12a8c:	0002e7e8 	.word	0x0002e7e8
   12a90:	0002f0dc 	.word	0x0002f0dc
   12a94:	0002f0e8 	.word	0x0002f0e8
   12a98:	0002f0f4 	.word	0x0002f0f4
   12a9c:	0002f104 	.word	0x0002f104
   12aa0:	0002f114 	.word	0x0002f114
   12aa4:	0002f120 	.word	0x0002f120
   12aa8:	0002f12c 	.word	0x0002f12c
   12aac:	0002f13c 	.word	0x0002f13c
   12ab0:	0002f158 	.word	0x0002f158
   12ab4:	0002f164 	.word	0x0002f164
   12ab8:	0002f170 	.word	0x0002f170
   12abc:	0002f17c 	.word	0x0002f17c
   12ac0:	0002eeb8 	.word	0x0002eeb8
   12ac4:	0002f090 	.word	0x0002f090
   12ac8:	00045548 	.word	0x00045548
   12acc:	000114c0 	.word	0x000114c0
   12ad0:	0002f0b4 	.word	0x0002f0b4
   12ad4:	0002f148 	.word	0x0002f148
   12ad8:	0002f190 	.word	0x0002f190
   12adc:	0002f19c 	.word	0x0002f19c
   12ae0:	0002e890 	.word	0x0002e890
   12ae4:	0002f1c8 	.word	0x0002f1c8
   12ae8:	0002f1d4 	.word	0x0002f1d4
   12aec:	0002e6b8 	.word	0x0002e6b8
   12af0:	0002f1a4 	.word	0x0002f1a4
   12af4:	0004628c 	.word	0x0004628c

00012af8 <McManager::logDebugMessage(char const*)>:
   12af8:	e59f3014 	ldr	r3, [pc, #20]	; 12b14 <McManager::logDebugMessage(char const*)+0x1c>
   12afc:	e5933000 	ldr	r3, [r3]
   12b00:	e3530000 	cmp	r3, #0
   12b04:	012fff1e 	bxeq	lr
   12b08:	e1a01000 	mov	r1, r0
   12b0c:	e1a00003 	mov	r0, r3
   12b10:	eaffeff8 	b	eaf8 <CommandHandler::logDebugMessage(char const*)>
   12b14:	00045548 	.word	0x00045548

00012b18 <Timers::timerISR(void*)>:
   12b18:	e3a02008 	mov	r2, #8
   12b1c:	e59f3038 	ldr	r3, [pc, #56]	; 12b5c <Timers::timerISR(void*)+0x44>
   12b20:	e59f1038 	ldr	r1, [pc, #56]	; 12b60 <Timers::timerISR(void*)+0x48>
   12b24:	e5832000 	str	r2, [r3]
   12b28:	e5932004 	ldr	r2, [r3, #4]
   12b2c:	e591c000 	ldr	ip, [r1]
   12b30:	e59f102c 	ldr	r1, [pc, #44]	; 12b64 <Timers::timerISR(void*)+0x4c>
   12b34:	e082200c 	add	r2, r2, ip
   12b38:	e5832018 	str	r2, [r3, #24]
   12b3c:	e5d13000 	ldrb	r3, [r1]
   12b40:	e3530000 	cmp	r3, #0
   12b44:	012fff1e 	bxeq	lr
   12b48:	e59f3018 	ldr	r3, [pc, #24]	; 12b68 <Timers::timerISR(void*)+0x50>
   12b4c:	e5933000 	ldr	r3, [r3]
   12b50:	e3530000 	cmp	r3, #0
   12b54:	012fff1e 	bxeq	lr
   12b58:	e12fff13 	bx	r3
   12b5c:	20003000 	.word	0x20003000
   12b60:	0004228c 	.word	0x0004228c
   12b64:	00052cbc 	.word	0x00052cbc
   12b68:	00052cc0 	.word	0x00052cc0

00012b6c <McRobsZ80::keyHandler(unsigned char, unsigned char const*)>:
   12b6c:	e12fff1e 	bx	lr

00012b70 <McRobsZ80::enable(int)>:
   12b70:	e3a03000 	mov	r3, #0
   12b74:	e92d4010 	push	{r4, lr}
   12b78:	e59f4034 	ldr	r4, [pc, #52]	; 12bb4 <McRobsZ80::enable(int)+0x44>
   12b7c:	e2800901 	add	r0, r0, #16384	; 0x4000
   12b80:	e5c03004 	strb	r3, [r0, #4]
   12b84:	e3a01004 	mov	r1, #4
   12b88:	e594004c 	ldr	r0, [r4, #76]	; 0x4c
   12b8c:	e59f2024 	ldr	r2, [pc, #36]	; 12bb8 <McRobsZ80::enable(int)+0x48>
   12b90:	ebffdb07 	bl	97b4 <LogWrite>
   12b94:	e59f0020 	ldr	r0, [pc, #32]	; 12bbc <McRobsZ80::enable(int)+0x4c>
   12b98:	eb00190b 	bl	18fcc <BusAccess::accessCallbackAdd(unsigned long (*)(unsigned long, unsigned long, unsigned long))>
   12b9c:	e5d41039 	ldrb	r1, [r4, #57]	; 0x39
   12ba0:	e5d40038 	ldrb	r0, [r4, #56]	; 0x38
   12ba4:	e3510000 	cmp	r1, #0
   12ba8:	05d4103a 	ldrbeq	r1, [r4, #58]	; 0x3a
   12bac:	e8bd4010 	pop	{r4, lr}
   12bb0:	ea00193a 	b	190a0 <BusAccess::waitSetup(bool, bool)>
   12bb4:	000420d8 	.word	0x000420d8
   12bb8:	0002f21c 	.word	0x0002f21c
   12bbc:	00012cfc 	.word	0x00012cfc

00012bc0 <McRobsZ80::disable()>:
   12bc0:	e59f3024 	ldr	r3, [pc, #36]	; 12bec <McRobsZ80::disable()+0x2c>
   12bc4:	e92d4010 	push	{r4, lr}
   12bc8:	e593004c 	ldr	r0, [r3, #76]	; 0x4c
   12bcc:	e59f201c 	ldr	r2, [pc, #28]	; 12bf0 <McRobsZ80::disable()+0x30>
   12bd0:	e3a01004 	mov	r1, #4
   12bd4:	ebffdaf6 	bl	97b4 <LogWrite>
   12bd8:	e3a01000 	mov	r1, #0
   12bdc:	e1a00001 	mov	r0, r1
   12be0:	eb00192e 	bl	190a0 <BusAccess::waitSetup(bool, bool)>
   12be4:	e8bd4010 	pop	{r4, lr}
   12be8:	ea0018fb 	b	18fdc <BusAccess::accessCallbackRemove()>
   12bec:	000420d8 	.word	0x000420d8
   12bf0:	0002f228 	.word	0x0002f228

00012bf4 <McRobsZ80::displayRefresh()>:
   12bf4:	e3a03000 	mov	r3, #0
   12bf8:	e3a02901 	mov	r2, #16384	; 0x4000
   12bfc:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12c00:	e24dd901 	sub	sp, sp, #16384	; 0x4000
   12c04:	e24dd014 	sub	sp, sp, #20
   12c08:	e28da010 	add	sl, sp, #16
   12c0c:	e58d3000 	str	r3, [sp]
   12c10:	e1a0b000 	mov	fp, r0
   12c14:	e1a0100a 	mov	r1, sl
   12c18:	e1a00002 	mov	r0, r2
   12c1c:	e3a03001 	mov	r3, #1
   12c20:	ebfffe00 	bl	12428 <McManager::blockRead(unsigned long, unsigned char*, unsigned long, bool, bool)>
   12c24:	e3500000 	cmp	r0, #0
   12c28:	0a00002f 	beq	12cec <McRobsZ80::displayRefresh()+0xf8>
   12c2c:	e59f30c4 	ldr	r3, [pc, #196]	; 12cf8 <McRobsZ80::displayRefresh()+0x104>
   12c30:	e26a2001 	rsb	r2, sl, #1
   12c34:	e593300c 	ldr	r3, [r3, #12]
   12c38:	e58d2008 	str	r2, [sp, #8]
   12c3c:	e3530000 	cmp	r3, #0
   12c40:	e2832007 	add	r2, r3, #7
   12c44:	b1a03002 	movlt	r3, r2
   12c48:	e1a031c3 	asr	r3, r3, #3
   12c4c:	e28b9004 	add	r9, fp, #4
   12c50:	e24a6001 	sub	r6, sl, #1
   12c54:	e58d300c 	str	r3, [sp, #12]
   12c58:	e28bb901 	add	fp, fp, #16384	; 0x4000
   12c5c:	e5db3004 	ldrb	r3, [fp, #4]
   12c60:	e59d2008 	ldr	r2, [sp, #8]
   12c64:	e3530000 	cmp	r3, #0
   12c68:	e0820006 	add	r0, r2, r6
   12c6c:	e5f6a001 	ldrb	sl, [r6, #1]!
   12c70:	0a000002 	beq	12c80 <McRobsZ80::displayRefresh()+0x8c>
   12c74:	e5d92000 	ldrb	r2, [r9]
   12c78:	e152000a 	cmp	r2, sl
   12c7c:	0a000013 	beq	12cd0 <McRobsZ80::displayRefresh()+0xdc>
   12c80:	e5c9a000 	strb	sl, [r9]
   12c84:	e59d100c 	ldr	r1, [sp, #12]
   12c88:	eb006bf2 	bl	2dc58 <__aeabi_uidivmod>
   12c8c:	e1a04181 	lsl	r4, r1, #3
   12c90:	e1a08000 	mov	r8, r0
   12c94:	e3a05080 	mov	r5, #128	; 0x80
   12c98:	e2847008 	add	r7, r4, #8
   12c9c:	ea000000 	b	12ca4 <McRobsZ80::displayRefresh()+0xb0>
   12ca0:	e5d6a000 	ldrb	sl, [r6]
   12ca4:	e11a0005 	tst	sl, r5
   12ca8:	13a03001 	movne	r3, #1
   12cac:	03a03000 	moveq	r3, #0
   12cb0:	e1a01004 	mov	r1, r4
   12cb4:	e1a02008 	mov	r2, r8
   12cb8:	e3a00000 	mov	r0, #0
   12cbc:	e2844001 	add	r4, r4, #1
   12cc0:	ebffe5c1 	bl	c3cc <wgfxSetMonoPixel>
   12cc4:	e1570004 	cmp	r7, r4
   12cc8:	e1a050c5 	asr	r5, r5, #1
   12ccc:	1afffff3 	bne	12ca0 <McRobsZ80::displayRefresh()+0xac>
   12cd0:	e28d3901 	add	r3, sp, #16384	; 0x4000
   12cd4:	e283300f 	add	r3, r3, #15
   12cd8:	e1560003 	cmp	r6, r3
   12cdc:	e2899001 	add	r9, r9, #1
   12ce0:	1affffdd 	bne	12c5c <McRobsZ80::displayRefresh()+0x68>
   12ce4:	e3a03001 	mov	r3, #1
   12ce8:	e5cb3004 	strb	r3, [fp, #4]
   12cec:	e28dd901 	add	sp, sp, #16384	; 0x4000
   12cf0:	e28dd014 	add	sp, sp, #20
   12cf4:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12cf8:	000420d8 	.word	0x000420d8

00012cfc <McRobsZ80::memoryRequestCallback(unsigned long, unsigned long, unsigned long)>:
   12cfc:	e92d4070 	push	{r4, r5, r6, lr}
   12d00:	e24dd008 	sub	sp, sp, #8
   12d04:	e1a04000 	mov	r4, r0
   12d08:	e1a05001 	mov	r5, r1
   12d0c:	e1a06002 	mov	r6, r2
   12d10:	eb001d13 	bl	1a164 <TargetDebug::get()>
   12d14:	e3500000 	cmp	r0, #0
   12d18:	03a00902 	moveq	r0, #32768	; 0x8000
   12d1c:	0a000007 	beq	12d40 <McRobsZ80::memoryRequestCallback(unsigned long, unsigned long, unsigned long)+0x44>
   12d20:	e3a0e902 	mov	lr, #32768	; 0x8000
   12d24:	e59fc01c 	ldr	ip, [pc, #28]	; 12d48 <McRobsZ80::memoryRequestCallback(unsigned long, unsigned long, unsigned long)+0x4c>
   12d28:	e1a03006 	mov	r3, r6
   12d2c:	e1a02005 	mov	r2, r5
   12d30:	e1a01004 	mov	r1, r4
   12d34:	e58de000 	str	lr, [sp]
   12d38:	e58dc004 	str	ip, [sp, #4]
   12d3c:	eb002321 	bl	1b9c8 <TargetDebug::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long, McDescriptorTable&)>
   12d40:	e28dd008 	add	sp, sp, #8
   12d44:	e8bd8070 	pop	{r4, r5, r6, pc}
   12d48:	000420d8 	.word	0x000420d8

00012d4c <McRobsZ80::fileHandler(char const*, unsigned char const*, int)>:
   12d4c:	e92d4070 	push	{r4, r5, r6, lr}
   12d50:	e24dd090 	sub	sp, sp, #144	; 0x90
   12d54:	e1a06002 	mov	r6, r2
   12d58:	e1a04003 	mov	r4, r3
   12d5c:	e28d2028 	add	r2, sp, #40	; 0x28
   12d60:	e3a03064 	mov	r3, #100	; 0x64
   12d64:	e59f007c 	ldr	r0, [pc, #124]	; 12de8 <McRobsZ80::fileHandler(char const*, unsigned char const*, int)+0x9c>
   12d68:	e1a05001 	mov	r5, r1
   12d6c:	ebffe169 	bl	b318 <jsonGetValueForKey>
   12d70:	e3500000 	cmp	r0, #0
   12d74:	1a000001 	bne	12d80 <McRobsZ80::fileHandler(char const*, unsigned char const*, int)+0x34>
   12d78:	e28dd090 	add	sp, sp, #144	; 0x90
   12d7c:	e8bd8070 	pop	{r4, r5, r6, pc}
   12d80:	e1a01005 	mov	r1, r5
   12d84:	e3a0301e 	mov	r3, #30
   12d88:	e28d2008 	add	r2, sp, #8
   12d8c:	e59f0058 	ldr	r0, [pc, #88]	; 12dec <McRobsZ80::fileHandler(char const*, unsigned char const*, int)+0xa0>
   12d90:	ebffe160 	bl	b318 <jsonGetValueForKey>
   12d94:	e2505000 	subs	r5, r0, #0
   12d98:	01a03005 	moveq	r3, r5
   12d9c:	0a000005 	beq	12db8 <McRobsZ80::fileHandler(char const*, unsigned char const*, int)+0x6c>
   12da0:	e28d0008 	add	r0, sp, #8
   12da4:	e3a02010 	mov	r2, #16
   12da8:	e3a01000 	mov	r1, #0
   12dac:	eb0069bb 	bl	2d4a0 <strtol>
   12db0:	e6ff3070 	uxth	r3, r0
   12db4:	e1a05003 	mov	r5, r3
   12db8:	e59f2030 	ldr	r2, [pc, #48]	; 12df0 <McRobsZ80::fileHandler(char const*, unsigned char const*, int)+0xa4>
   12dbc:	e58d4000 	str	r4, [sp]
   12dc0:	e592004c 	ldr	r0, [r2, #76]	; 0x4c
   12dc4:	e3a01004 	mov	r1, #4
   12dc8:	e59f2024 	ldr	r2, [pc, #36]	; 12df4 <McRobsZ80::fileHandler(char const*, unsigned char const*, int)+0xa8>
   12dcc:	ebffda78 	bl	97b4 <LogWrite>
   12dd0:	e1a02004 	mov	r2, r4
   12dd4:	e1a01006 	mov	r1, r6
   12dd8:	e1a00005 	mov	r0, r5
   12ddc:	eb002424 	bl	1be74 <TargetState::addMemoryBlock(unsigned long, unsigned char const*, unsigned long)>
   12de0:	e28dd090 	add	sp, sp, #144	; 0x90
   12de4:	e8bd8070 	pop	{r4, r5, r6, pc}
   12de8:	0002e604 	.word	0x0002e604
   12dec:	0002f234 	.word	0x0002f234
   12df0:	000420d8 	.word	0x000420d8
   12df4:	0002f240 	.word	0x0002f240

00012df8 <McRobsZ80::handleExecAddr(unsigned long)>:
   12df8:	e92d4010 	push	{r4, lr}
   12dfc:	e3e0303c 	mvn	r3, #60	; 0x3c
   12e00:	e1a04000 	mov	r4, r0
   12e04:	e24dd008 	sub	sp, sp, #8
   12e08:	e1a0c420 	lsr	ip, r0, #8
   12e0c:	e28d1004 	add	r1, sp, #4
   12e10:	e3a02003 	mov	r2, #3
   12e14:	e3a00000 	mov	r0, #0
   12e18:	e5cdc006 	strb	ip, [sp, #6]
   12e1c:	e5cd3004 	strb	r3, [sp, #4]
   12e20:	e5cd4005 	strb	r4, [sp, #5]
   12e24:	eb002412 	bl	1be74 <TargetState::addMemoryBlock(unsigned long, unsigned char const*, unsigned long)>
   12e28:	e59f2018 	ldr	r2, [pc, #24]	; 12e48 <McRobsZ80::handleExecAddr(unsigned long)+0x50>
   12e2c:	e1a03004 	mov	r3, r4
   12e30:	e592004c 	ldr	r0, [r2, #76]	; 0x4c
   12e34:	e3a01004 	mov	r1, #4
   12e38:	e59f200c 	ldr	r2, [pc, #12]	; 12e4c <McRobsZ80::handleExecAddr(unsigned long)+0x54>
   12e3c:	ebffda5c 	bl	97b4 <LogWrite>
   12e40:	e28dd008 	add	sp, sp, #8
   12e44:	e8bd8010 	pop	{r4, pc}
   12e48:	000420d8 	.word	0x000420d8
   12e4c:	0002f270 	.word	0x0002f270

00012e50 <McRobsZ80::getDescriptorTable(int)>:
   12e50:	e59f0000 	ldr	r0, [pc]	; 12e58 <McRobsZ80::getDescriptorTable(int)+0x8>
   12e54:	e12fff1e 	bx	lr
   12e58:	000420d8 	.word	0x000420d8

00012e5c <McTRS80::keyHandler(unsigned char, unsigned char const*)>:
   12e5c:	e3a03000 	mov	r3, #0
   12e60:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12e64:	e24dd014 	sub	sp, sp, #20
   12e68:	e1a0e003 	mov	lr, r3
   12e6c:	e3a04001 	mov	r4, #1
   12e70:	e3e0507f 	mvn	r5, #127	; 0x7f
   12e74:	e2011002 	and	r1, r1, #2
   12e78:	e242c001 	sub	ip, r2, #1
   12e7c:	e2826005 	add	r6, r2, #5
   12e80:	e58d3008 	str	r3, [sp, #8]
   12e84:	e58d300c 	str	r3, [sp, #12]
   12e88:	ea000008 	b	12eb0 <McTRS80::keyHandler(unsigned char, unsigned char const*)+0x54>
   12e8c:	e2433003 	sub	r3, r3, #3
   12e90:	e28d2010 	add	r2, sp, #16
   12e94:	e08271c3 	add	r7, r2, r3, asr #3
   12e98:	e5572008 	ldrb	r2, [r7, #-8]
   12e9c:	e2033007 	and	r3, r3, #7
   12ea0:	e1823314 	orr	r3, r2, r4, lsl r3
   12ea4:	e5473008 	strb	r3, [r7, #-8]
   12ea8:	e15c0006 	cmp	ip, r6
   12eac:	0a000010 	beq	12ef4 <McTRS80::keyHandler(unsigned char, unsigned char const*)+0x98>
   12eb0:	e5fc3001 	ldrb	r3, [ip, #1]!
   12eb4:	e2432004 	sub	r2, r3, #4
   12eb8:	e3520019 	cmp	r2, #25
   12ebc:	9afffff2 	bls	12e8c <McTRS80::keyHandler(unsigned char, unsigned char const*)+0x30>
   12ec0:	e353001f 	cmp	r3, #31
   12ec4:	0a000047 	beq	12fe8 <McTRS80::keyHandler(unsigned char, unsigned char const*)+0x18c>
   12ec8:	e3530023 	cmp	r3, #35	; 0x23
   12ecc:	0a00003a 	beq	12fbc <McTRS80::keyHandler(unsigned char, unsigned char const*)+0x160>
   12ed0:	e3530024 	cmp	r3, #36	; 0x24
   12ed4:	1a00004a 	bne	13004 <McTRS80::keyHandler(unsigned char, unsigned char const*)+0x1a8>
   12ed8:	e3510000 	cmp	r1, #0
   12edc:	0a000039 	beq	12fc8 <McTRS80::keyHandler(unsigned char, unsigned char const*)+0x16c>
   12ee0:	e5dd300c 	ldrb	r3, [sp, #12]
   12ee4:	e15c0006 	cmp	ip, r6
   12ee8:	e3833040 	orr	r3, r3, #64	; 0x40
   12eec:	e5cd300c 	strb	r3, [sp, #12]
   12ef0:	1affffee 	bne	12eb0 <McTRS80::keyHandler(unsigned char, unsigned char const*)+0x54>
   12ef4:	e5dd600f 	ldrb	r6, [sp, #15]
   12ef8:	e35e0000 	cmp	lr, #0
   12efc:	e5dd300e 	ldrb	r3, [sp, #14]
   12f00:	e59fc378 	ldr	ip, [pc, #888]	; 13280 <McTRS80::keyHandler(unsigned char, unsigned char const*)+0x424>
   12f04:	120660fc 	andne	r6, r6, #252	; 0xfc
   12f08:	e2801b01 	add	r1, r0, #1024	; 0x400
   12f0c:	e280ec05 	add	lr, r0, #1280	; 0x500
   12f10:	e58d3000 	str	r3, [sp]
   12f14:	e04cc000 	sub	ip, ip, r0
   12f18:	e2811004 	add	r1, r1, #4
   12f1c:	e28ee004 	add	lr, lr, #4
   12f20:	e5ddb009 	ldrb	fp, [sp, #9]
   12f24:	e5dda00a 	ldrb	sl, [sp, #10]
   12f28:	e5dd900b 	ldrb	r9, [sp, #11]
   12f2c:	e5dd800c 	ldrb	r8, [sp, #12]
   12f30:	e5dd700d 	ldrb	r7, [sp, #13]
   12f34:	e5dd4008 	ldrb	r4, [sp, #8]
   12f38:	e3a03000 	mov	r3, #0
   12f3c:	e3a05001 	mov	r5, #1
   12f40:	e58d6004 	str	r6, [sp, #4]
   12f44:	ea000002 	b	12f54 <McTRS80::keyHandler(unsigned char, unsigned char const*)+0xf8>
   12f48:	e3130001 	tst	r3, #1
   12f4c:	11a03004 	movne	r3, r4
   12f50:	03a03000 	moveq	r3, #0
   12f54:	e08c2001 	add	r2, ip, r1
   12f58:	e3120002 	tst	r2, #2
   12f5c:	118b3003 	orrne	r3, fp, r3
   12f60:	e3120004 	tst	r2, #4
   12f64:	118a3003 	orrne	r3, sl, r3
   12f68:	e3120008 	tst	r2, #8
   12f6c:	11893003 	orrne	r3, r9, r3
   12f70:	e3120010 	tst	r2, #16
   12f74:	11883003 	orrne	r3, r8, r3
   12f78:	e3120020 	tst	r2, #32
   12f7c:	11873003 	orrne	r3, r7, r3
   12f80:	e3120040 	tst	r2, #64	; 0x40
   12f84:	159d6000 	ldrne	r6, [sp]
   12f88:	11863003 	orrne	r3, r6, r3
   12f8c:	e3120080 	tst	r2, #128	; 0x80
   12f90:	159d2004 	ldrne	r2, [sp, #4]
   12f94:	11823003 	orrne	r3, r2, r3
   12f98:	e5f12001 	ldrb	r2, [r1, #1]!
   12f9c:	e1520003 	cmp	r2, r3
   12fa0:	15c13000 	strbne	r3, [r1]
   12fa4:	15c05505 	strbne	r5, [r0, #1285]	; 0x505
   12fa8:	e151000e 	cmp	r1, lr
   12fac:	e08c3001 	add	r3, ip, r1
   12fb0:	1affffe4 	bne	12f48 <McTRS80::keyHandler(unsigned char, unsigned char const*)+0xec>
   12fb4:	e28dd014 	add	sp, sp, #20
   12fb8:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12fbc:	e3510000 	cmp	r1, #0
   12fc0:	13a0e001 	movne	lr, #1
   12fc4:	1affffb7 	bne	12ea8 <McTRS80::keyHandler(unsigned char, unsigned char const*)+0x4c>
   12fc8:	e243301d 	sub	r3, r3, #29
   12fcc:	e28d2010 	add	r2, sp, #16
   12fd0:	e08221c3 	add	r2, r2, r3, asr #3
   12fd4:	e5527004 	ldrb	r7, [r2, #-4]
   12fd8:	e2033007 	and	r3, r3, #7
   12fdc:	e1873314 	orr	r3, r7, r4, lsl r3
   12fe0:	e5423004 	strb	r3, [r2, #-4]
   12fe4:	eaffffaf 	b	12ea8 <McTRS80::keyHandler(unsigned char, unsigned char const*)+0x4c>
   12fe8:	e3510000 	cmp	r1, #0
   12fec:	0afffff5 	beq	12fc8 <McTRS80::keyHandler(unsigned char, unsigned char const*)+0x16c>
   12ff0:	e3a0e001 	mov	lr, #1
   12ff4:	e5dd3008 	ldrb	r3, [sp, #8]
   12ff8:	e183300e 	orr	r3, r3, lr
   12ffc:	e5cd3008 	strb	r3, [sp, #8]
   13000:	eaffffa8 	b	12ea8 <McTRS80::keyHandler(unsigned char, unsigned char const*)+0x4c>
   13004:	e3530025 	cmp	r3, #37	; 0x25
   13008:	1a000005 	bne	13024 <McTRS80::keyHandler(unsigned char, unsigned char const*)+0x1c8>
   1300c:	e3510000 	cmp	r1, #0
   13010:	0affffec 	beq	12fc8 <McTRS80::keyHandler(unsigned char, unsigned char const*)+0x16c>
   13014:	e5dd300d 	ldrb	r3, [sp, #13]
   13018:	e3833004 	orr	r3, r3, #4
   1301c:	e5cd300d 	strb	r3, [sp, #13]
   13020:	eaffffa0 	b	12ea8 <McTRS80::keyHandler(unsigned char, unsigned char const*)+0x4c>
   13024:	e3530026 	cmp	r3, #38	; 0x26
   13028:	1a000008 	bne	13050 <McTRS80::keyHandler(unsigned char, unsigned char const*)+0x1f4>
   1302c:	e3510000 	cmp	r1, #0
   13030:	0affffe4 	beq	12fc8 <McTRS80::keyHandler(unsigned char, unsigned char const*)+0x16c>
   13034:	e5dd200d 	ldrb	r2, [sp, #13]
   13038:	e5dd300f 	ldrb	r3, [sp, #15]
   1303c:	e3822001 	orr	r2, r2, #1
   13040:	e3833001 	orr	r3, r3, #1
   13044:	e5cd200d 	strb	r2, [sp, #13]
   13048:	e5cd300f 	strb	r3, [sp, #15]
   1304c:	eaffff95 	b	12ea8 <McTRS80::keyHandler(unsigned char, unsigned char const*)+0x4c>
   13050:	e3530027 	cmp	r3, #39	; 0x27
   13054:	1a00000c 	bne	1308c <McTRS80::keyHandler(unsigned char, unsigned char const*)+0x230>
   13058:	e3510000 	cmp	r1, #0
   1305c:	0a000006 	beq	1307c <McTRS80::keyHandler(unsigned char, unsigned char const*)+0x220>
   13060:	e5dd200d 	ldrb	r2, [sp, #13]
   13064:	e5dd300f 	ldrb	r3, [sp, #15]
   13068:	e3822002 	orr	r2, r2, #2
   1306c:	e3833001 	orr	r3, r3, #1
   13070:	e5cd200d 	strb	r2, [sp, #13]
   13074:	e5cd300f 	strb	r3, [sp, #15]
   13078:	eaffff8a 	b	12ea8 <McTRS80::keyHandler(unsigned char, unsigned char const*)+0x4c>
   1307c:	e5dd300c 	ldrb	r3, [sp, #12]
   13080:	e3833001 	orr	r3, r3, #1
   13084:	e5cd300c 	strb	r3, [sp, #12]
   13088:	eaffff86 	b	12ea8 <McTRS80::keyHandler(unsigned char, unsigned char const*)+0x4c>
   1308c:	e243201e 	sub	r2, r3, #30
   13090:	e3520008 	cmp	r2, #8
   13094:	9affffcb 	bls	12fc8 <McTRS80::keyHandler(unsigned char, unsigned char const*)+0x16c>
   13098:	e3530033 	cmp	r3, #51	; 0x33
   1309c:	0a00000a 	beq	130cc <McTRS80::keyHandler(unsigned char, unsigned char const*)+0x270>
   130a0:	e3530034 	cmp	r3, #52	; 0x34
   130a4:	1a00000f 	bne	130e8 <McTRS80::keyHandler(unsigned char, unsigned char const*)+0x28c>
   130a8:	e3510000 	cmp	r1, #0
   130ac:	0a000056 	beq	1320c <McTRS80::keyHandler(unsigned char, unsigned char const*)+0x3b0>
   130b0:	e5dd200c 	ldrb	r2, [sp, #12]
   130b4:	e5dd300f 	ldrb	r3, [sp, #15]
   130b8:	e3822004 	orr	r2, r2, #4
   130bc:	e3833001 	orr	r3, r3, #1
   130c0:	e5cd200c 	strb	r2, [sp, #12]
   130c4:	e5cd300f 	strb	r3, [sp, #15]
   130c8:	eaffff76 	b	12ea8 <McTRS80::keyHandler(unsigned char, unsigned char const*)+0x4c>
   130cc:	e3510000 	cmp	r1, #0
   130d0:	e5dd300d 	ldrb	r3, [sp, #13]
   130d4:	1a000009 	bne	13100 <McTRS80::keyHandler(unsigned char, unsigned char const*)+0x2a4>
   130d8:	e3833008 	orr	r3, r3, #8
   130dc:	e5cd300d 	strb	r3, [sp, #13]
   130e0:	e3a0e001 	mov	lr, #1
   130e4:	eaffff6f 	b	12ea8 <McTRS80::keyHandler(unsigned char, unsigned char const*)+0x4c>
   130e8:	e3530036 	cmp	r3, #54	; 0x36
   130ec:	1a000007 	bne	13110 <McTRS80::keyHandler(unsigned char, unsigned char const*)+0x2b4>
   130f0:	e5dd300d 	ldrb	r3, [sp, #13]
   130f4:	e3833010 	orr	r3, r3, #16
   130f8:	e5cd300d 	strb	r3, [sp, #13]
   130fc:	eaffff69 	b	12ea8 <McTRS80::keyHandler(unsigned char, unsigned char const*)+0x4c>
   13100:	e3833004 	orr	r3, r3, #4
   13104:	e5cd300d 	strb	r3, [sp, #13]
   13108:	e3a0e001 	mov	lr, #1
   1310c:	eaffff65 	b	12ea8 <McTRS80::keyHandler(unsigned char, unsigned char const*)+0x4c>
   13110:	e3530037 	cmp	r3, #55	; 0x37
   13114:	05dd300d 	ldrbeq	r3, [sp, #13]
   13118:	03833040 	orreq	r3, r3, #64	; 0x40
   1311c:	05cd300d 	strbeq	r3, [sp, #13]
   13120:	0affff60 	beq	12ea8 <McTRS80::keyHandler(unsigned char, unsigned char const*)+0x4c>
   13124:	e353002e 	cmp	r3, #46	; 0x2e
   13128:	0a00003d 	beq	13224 <McTRS80::keyHandler(unsigned char, unsigned char const*)+0x3c8>
   1312c:	e353002d 	cmp	r3, #45	; 0x2d
   13130:	0a000048 	beq	13258 <McTRS80::keyHandler(unsigned char, unsigned char const*)+0x3fc>
   13134:	e3530038 	cmp	r3, #56	; 0x38
   13138:	05dd300d 	ldrbeq	r3, [sp, #13]
   1313c:	01853003 	orreq	r3, r5, r3
   13140:	05cd300d 	strbeq	r3, [sp, #13]
   13144:	0affff57 	beq	12ea8 <McTRS80::keyHandler(unsigned char, unsigned char const*)+0x4c>
   13148:	e3530028 	cmp	r3, #40	; 0x28
   1314c:	05dd300e 	ldrbeq	r3, [sp, #14]
   13150:	03833001 	orreq	r3, r3, #1
   13154:	05cd300e 	strbeq	r3, [sp, #14]
   13158:	0affff52 	beq	12ea8 <McTRS80::keyHandler(unsigned char, unsigned char const*)+0x4c>
   1315c:	e353002a 	cmp	r3, #42	; 0x2a
   13160:	0a000038 	beq	13248 <McTRS80::keyHandler(unsigned char, unsigned char const*)+0x3ec>
   13164:	e3530029 	cmp	r3, #41	; 0x29
   13168:	05dd300e 	ldrbeq	r3, [sp, #14]
   1316c:	03833004 	orreq	r3, r3, #4
   13170:	05cd300e 	strbeq	r3, [sp, #14]
   13174:	0affff4b 	beq	12ea8 <McTRS80::keyHandler(unsigned char, unsigned char const*)+0x4c>
   13178:	e3530052 	cmp	r3, #82	; 0x52
   1317c:	05dd300e 	ldrbeq	r3, [sp, #14]
   13180:	03833008 	orreq	r3, r3, #8
   13184:	05cd300e 	strbeq	r3, [sp, #14]
   13188:	0affff46 	beq	12ea8 <McTRS80::keyHandler(unsigned char, unsigned char const*)+0x4c>
   1318c:	e3530051 	cmp	r3, #81	; 0x51
   13190:	05dd300e 	ldrbeq	r3, [sp, #14]
   13194:	03833010 	orreq	r3, r3, #16
   13198:	05cd300e 	strbeq	r3, [sp, #14]
   1319c:	0affff41 	beq	12ea8 <McTRS80::keyHandler(unsigned char, unsigned char const*)+0x4c>
   131a0:	e3530050 	cmp	r3, #80	; 0x50
   131a4:	0a000027 	beq	13248 <McTRS80::keyHandler(unsigned char, unsigned char const*)+0x3ec>
   131a8:	e353004f 	cmp	r3, #79	; 0x4f
   131ac:	05dd300e 	ldrbeq	r3, [sp, #14]
   131b0:	03833040 	orreq	r3, r3, #64	; 0x40
   131b4:	05cd300e 	strbeq	r3, [sp, #14]
   131b8:	0affff3a 	beq	12ea8 <McTRS80::keyHandler(unsigned char, unsigned char const*)+0x4c>
   131bc:	e353002c 	cmp	r3, #44	; 0x2c
   131c0:	05dd300e 	ldrbeq	r3, [sp, #14]
   131c4:	01853003 	orreq	r3, r5, r3
   131c8:	05cd300e 	strbeq	r3, [sp, #14]
   131cc:	0affff35 	beq	12ea8 <McTRS80::keyHandler(unsigned char, unsigned char const*)+0x4c>
   131d0:	e353003a 	cmp	r3, #58	; 0x3a
   131d4:	05dd300e 	ldrbeq	r3, [sp, #14]
   131d8:	03833002 	orreq	r3, r3, #2
   131dc:	05cd300e 	strbeq	r3, [sp, #14]
   131e0:	0affff30 	beq	12ea8 <McTRS80::keyHandler(unsigned char, unsigned char const*)+0x4c>
   131e4:	e35300e1 	cmp	r3, #225	; 0xe1
   131e8:	05dd300f 	ldrbeq	r3, [sp, #15]
   131ec:	03833001 	orreq	r3, r3, #1
   131f0:	05cd300f 	strbeq	r3, [sp, #15]
   131f4:	0affff2b 	beq	12ea8 <McTRS80::keyHandler(unsigned char, unsigned char const*)+0x4c>
   131f8:	e35300e5 	cmp	r3, #229	; 0xe5
   131fc:	05dd300f 	ldrbeq	r3, [sp, #15]
   13200:	03833002 	orreq	r3, r3, #2
   13204:	05cd300f 	strbeq	r3, [sp, #15]
   13208:	0affff26 	beq	12ea8 <McTRS80::keyHandler(unsigned char, unsigned char const*)+0x4c>
   1320c:	e20330fb 	and	r3, r3, #251	; 0xfb
   13210:	e35300e0 	cmp	r3, #224	; 0xe0
   13214:	05dd300f 	ldrbeq	r3, [sp, #15]
   13218:	03833010 	orreq	r3, r3, #16
   1321c:	05cd300f 	strbeq	r3, [sp, #15]
   13220:	eaffff20 	b	12ea8 <McTRS80::keyHandler(unsigned char, unsigned char const*)+0x4c>
   13224:	e5dd200f 	ldrb	r2, [sp, #15]
   13228:	e3510000 	cmp	r1, #0
   1322c:	e3822001 	orr	r2, r2, #1
   13230:	e5dd300d 	ldrb	r3, [sp, #13]
   13234:	1a00000d 	bne	13270 <McTRS80::keyHandler(unsigned char, unsigned char const*)+0x414>
   13238:	e3833020 	orr	r3, r3, #32
   1323c:	e5cd300d 	strb	r3, [sp, #13]
   13240:	e5cd200f 	strb	r2, [sp, #15]
   13244:	eaffff17 	b	12ea8 <McTRS80::keyHandler(unsigned char, unsigned char const*)+0x4c>
   13248:	e5dd300e 	ldrb	r3, [sp, #14]
   1324c:	e3833020 	orr	r3, r3, #32
   13250:	e5cd300e 	strb	r3, [sp, #14]
   13254:	eaffff13 	b	12ea8 <McTRS80::keyHandler(unsigned char, unsigned char const*)+0x4c>
   13258:	e3510000 	cmp	r1, #0
   1325c:	05dd300d 	ldrbeq	r3, [sp, #13]
   13260:	03a0e001 	moveq	lr, #1
   13264:	03833020 	orreq	r3, r3, #32
   13268:	05cd300d 	strbeq	r3, [sp, #13]
   1326c:	eaffff0d 	b	12ea8 <McTRS80::keyHandler(unsigned char, unsigned char const*)+0x4c>
   13270:	e3833008 	orr	r3, r3, #8
   13274:	e5cd300d 	strb	r3, [sp, #13]
   13278:	e5cd200f 	strb	r2, [sp, #15]
   1327c:	eaffff09 	b	12ea8 <McTRS80::keyHandler(unsigned char, unsigned char const*)+0x4c>
   13280:	fffffbfc 	.word	0xfffffbfc

00013284 <McTRS80::enable(int)>:
   13284:	e92d4070 	push	{r4, r5, r6, lr}
   13288:	e59f40b0 	ldr	r4, [pc, #176]	; 13340 <McTRS80::enable(int)+0xbc>
   1328c:	e59f30b0 	ldr	r3, [pc, #176]	; 13344 <McTRS80::enable(int)+0xc0>
   13290:	e5d4c044 	ldrb	ip, [r4, #68]	; 0x44
   13294:	e5d41038 	ldrb	r1, [r4, #56]	; 0x38
   13298:	e59f20a8 	ldr	r2, [pc, #168]	; 13348 <McTRS80::enable(int)+0xc4>
   1329c:	e35c0000 	cmp	ip, #0
   132a0:	11a0c003 	movne	ip, r3
   132a4:	01a0c002 	moveq	ip, r2
   132a8:	e3510000 	cmp	r1, #0
   132ac:	11a01003 	movne	r1, r3
   132b0:	01a01002 	moveq	r1, r2
   132b4:	e3a05000 	mov	r5, #0
   132b8:	e5d4603a 	ldrb	r6, [r4, #58]	; 0x3a
   132bc:	e5d4e039 	ldrb	lr, [r4, #57]	; 0x39
   132c0:	e24dd018 	sub	sp, sp, #24
   132c4:	e196e00e 	orrs	lr, r6, lr
   132c8:	e1a0e000 	mov	lr, r0
   132cc:	11a00003 	movne	r0, r3
   132d0:	01a00002 	moveq	r0, r2
   132d4:	e58dc008 	str	ip, [sp, #8]
   132d8:	e58d100c 	str	r1, [sp, #12]
   132dc:	e594c03c 	ldr	ip, [r4, #60]	; 0x3c
   132e0:	e5941040 	ldr	r1, [r4, #64]	; 0x40
   132e4:	e1560005 	cmp	r6, r5
   132e8:	01a03002 	moveq	r3, r2
   132ec:	e08c2001 	add	r2, ip, r1
   132f0:	e5941048 	ldr	r1, [r4, #72]	; 0x48
   132f4:	e58d0010 	str	r0, [sp, #16]
   132f8:	e58dc000 	str	ip, [sp]
   132fc:	e58d2004 	str	r2, [sp, #4]
   13300:	e58d1014 	str	r1, [sp, #20]
   13304:	e594004c 	ldr	r0, [r4, #76]	; 0x4c
   13308:	e5ce5404 	strb	r5, [lr, #1028]	; 0x404
   1330c:	e5ce5505 	strb	r5, [lr, #1285]	; 0x505
   13310:	e59f2034 	ldr	r2, [pc, #52]	; 1334c <McTRS80::enable(int)+0xc8>
   13314:	e3a01004 	mov	r1, #4
   13318:	ebffd925 	bl	97b4 <LogWrite>
   1331c:	e59f002c 	ldr	r0, [pc, #44]	; 13350 <McTRS80::enable(int)+0xcc>
   13320:	eb001729 	bl	18fcc <BusAccess::accessCallbackAdd(unsigned long (*)(unsigned long, unsigned long, unsigned long))>
   13324:	e5d41039 	ldrb	r1, [r4, #57]	; 0x39
   13328:	e5d40038 	ldrb	r0, [r4, #56]	; 0x38
   1332c:	e1510005 	cmp	r1, r5
   13330:	05d4103a 	ldrbeq	r1, [r4, #58]	; 0x3a
   13334:	e28dd018 	add	sp, sp, #24
   13338:	e8bd4070 	pop	{r4, r5, r6, lr}
   1333c:	ea001757 	b	190a0 <BusAccess::waitSetup(bool, bool)>
   13340:	00042128 	.word	0x00042128
   13344:	0002ee38 	.word	0x0002ee38
   13348:	0002ee1c 	.word	0x0002ee1c
   1334c:	0002f2c8 	.word	0x0002f2c8
   13350:	000135dc 	.word	0x000135dc

00013354 <McTRS80::disable()>:
   13354:	e59f3024 	ldr	r3, [pc, #36]	; 13380 <McTRS80::disable()+0x2c>
   13358:	e92d4010 	push	{r4, lr}
   1335c:	e593004c 	ldr	r0, [r3, #76]	; 0x4c
   13360:	e59f201c 	ldr	r2, [pc, #28]	; 13384 <McTRS80::disable()+0x30>
   13364:	e3a01004 	mov	r1, #4
   13368:	ebffd911 	bl	97b4 <LogWrite>
   1336c:	e3a01000 	mov	r1, #0
   13370:	e1a00001 	mov	r0, r1
   13374:	eb001749 	bl	190a0 <BusAccess::waitSetup(bool, bool)>
   13378:	e8bd4010 	pop	{r4, lr}
   1337c:	ea001716 	b	18fdc <BusAccess::accessCallbackRemove()>
   13380:	00042128 	.word	0x00042128
   13384:	0002f31c 	.word	0x0002f31c

00013388 <McTRS80::displayRefresh()>:
   13388:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1338c:	e3a0a000 	mov	sl, #0
   13390:	e24dde41 	sub	sp, sp, #1040	; 0x410
   13394:	e24dd004 	sub	sp, sp, #4
   13398:	e1a09000 	mov	r9, r0
   1339c:	e58da000 	str	sl, [sp]
   133a0:	e28d1010 	add	r1, sp, #16
   133a4:	e3a03001 	mov	r3, #1
   133a8:	e3a02b01 	mov	r2, #1024	; 0x400
   133ac:	e3a00b0f 	mov	r0, #15360	; 0x3c00
   133b0:	ebfffc1c 	bl	12428 <McManager::blockRead(unsigned long, unsigned char*, unsigned long, bool, bool)>
   133b4:	e150000a 	cmp	r0, sl
   133b8:	0a00002f 	beq	1347c <McTRS80::displayRefresh()+0xf4>
   133bc:	e59f40f0 	ldr	r4, [pc, #240]	; 134b4 <McTRS80::displayRefresh()+0x12c>
   133c0:	e5941014 	ldr	r1, [r4, #20]
   133c4:	e594000c 	ldr	r0, [r4, #12]
   133c8:	eb006a2a 	bl	2dc78 <__divsi3>
   133cc:	e5941018 	ldr	r1, [r4, #24]
   133d0:	e1a08000 	mov	r8, r0
   133d4:	e5940010 	ldr	r0, [r4, #16]
   133d8:	eb006a26 	bl	2dc78 <__divsi3>
   133dc:	e250b000 	subs	fp, r0, #0
   133e0:	da000020 	ble	13468 <McTRS80::displayRefresh()+0xe0>
   133e4:	e158000a 	cmp	r8, sl
   133e8:	da00001e 	ble	13468 <McTRS80::displayRefresh()+0xe0>
   133ec:	e1a0700a 	mov	r7, sl
   133f0:	e28d300f 	add	r3, sp, #15
   133f4:	e58d3008 	str	r3, [sp, #8]
   133f8:	e2893004 	add	r3, r9, #4
   133fc:	e58d300c 	str	r3, [sp, #12]
   13400:	e3a04000 	mov	r4, #0
   13404:	e59d3008 	ldr	r3, [sp, #8]
   13408:	e083600a 	add	r6, r3, sl
   1340c:	e59d300c 	ldr	r3, [sp, #12]
   13410:	e083500a 	add	r5, r3, sl
   13414:	e5d92404 	ldrb	r2, [r9, #1028]	; 0x404
   13418:	e5f63001 	ldrb	r3, [r6, #1]!
   1341c:	e3520000 	cmp	r2, #0
   13420:	0a000002 	beq	13430 <McTRS80::displayRefresh()+0xa8>
   13424:	e5d52000 	ldrb	r2, [r5]
   13428:	e1520003 	cmp	r2, r3
   1342c:	0a000005 	beq	13448 <McTRS80::displayRefresh()+0xc0>
   13430:	e1a02007 	mov	r2, r7
   13434:	e1a01004 	mov	r1, r4
   13438:	e3a00000 	mov	r0, #0
   1343c:	ebffe3d7 	bl	c3a0 <wgfx_putc>
   13440:	e5d63000 	ldrb	r3, [r6]
   13444:	e5c53000 	strb	r3, [r5]
   13448:	e2844001 	add	r4, r4, #1
   1344c:	e1580004 	cmp	r8, r4
   13450:	e2855001 	add	r5, r5, #1
   13454:	1affffee 	bne	13414 <McTRS80::displayRefresh()+0x8c>
   13458:	e2877001 	add	r7, r7, #1
   1345c:	e15b0007 	cmp	fp, r7
   13460:	e08aa008 	add	sl, sl, r8
   13464:	1affffe5 	bne	13400 <McTRS80::displayRefresh()+0x78>
   13468:	e3a03001 	mov	r3, #1
   1346c:	e5d92505 	ldrb	r2, [r9, #1285]	; 0x505
   13470:	e5c93404 	strb	r3, [r9, #1028]	; 0x404
   13474:	e3520000 	cmp	r2, #0
   13478:	1a000002 	bne	13488 <McTRS80::displayRefresh()+0x100>
   1347c:	e28dde41 	add	sp, sp, #1040	; 0x410
   13480:	e28dd004 	add	sp, sp, #4
   13484:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13488:	e3a04000 	mov	r4, #0
   1348c:	e2891b01 	add	r1, r9, #1024	; 0x400
   13490:	e58d4000 	str	r4, [sp]
   13494:	e2811005 	add	r1, r1, #5
   13498:	e3a02c01 	mov	r2, #256	; 0x100
   1349c:	e3a00b0e 	mov	r0, #14336	; 0x3800
   134a0:	ebfffa73 	bl	11e74 <McManager::blockWrite(unsigned long, unsigned char const*, unsigned long, bool, bool)>
   134a4:	e5c94505 	strb	r4, [r9, #1285]	; 0x505
   134a8:	e28dde41 	add	sp, sp, #1040	; 0x410
   134ac:	e28dd004 	add	sp, sp, #4
   134b0:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   134b4:	00042128 	.word	0x00042128

000134b8 <McTRS80::fileHandler(char const*, unsigned char const*, int)>:
   134b8:	e92d4070 	push	{r4, r5, r6, lr}
   134bc:	e24dd090 	sub	sp, sp, #144	; 0x90
   134c0:	e1a05002 	mov	r5, r2
   134c4:	e1a04003 	mov	r4, r3
   134c8:	e28d2028 	add	r2, sp, #40	; 0x28
   134cc:	e3a03064 	mov	r3, #100	; 0x64
   134d0:	e59f00e0 	ldr	r0, [pc, #224]	; 135b8 <McTRS80::fileHandler(char const*, unsigned char const*, int)+0x100>
   134d4:	e1a06001 	mov	r6, r1
   134d8:	ebffdf8e 	bl	b318 <jsonGetValueForKey>
   134dc:	e3500000 	cmp	r0, #0
   134e0:	0a000017 	beq	13544 <McTRS80::fileHandler(char const*, unsigned char const*, int)+0x8c>
   134e4:	e3a0102e 	mov	r1, #46	; 0x2e
   134e8:	e28d0028 	add	r0, sp, #40	; 0x28
   134ec:	eb00637b 	bl	2c2e0 <strchr>
   134f0:	e59f30c4 	ldr	r3, [pc, #196]	; 135bc <McTRS80::fileHandler(char const*, unsigned char const*, int)+0x104>
   134f4:	e3500000 	cmp	r0, #0
   134f8:	01a00003 	moveq	r0, r3
   134fc:	e59f10bc 	ldr	r1, [pc, #188]	; 135c0 <McTRS80::fileHandler(char const*, unsigned char const*, int)+0x108>
   13500:	eb00635a 	bl	2c270 <strcasecmp>
   13504:	e3500000 	cmp	r0, #0
   13508:	1a00000f 	bne	1354c <McTRS80::fileHandler(char const*, unsigned char const*, int)+0x94>
   1350c:	e28d0008 	add	r0, sp, #8
   13510:	ebfff334 	bl	101e8 <McTRS80CmdFormat::McTRS80CmdFormat()>
   13514:	e59f20a8 	ldr	r2, [pc, #168]	; 135c4 <McTRS80::fileHandler(char const*, unsigned char const*, int)+0x10c>
   13518:	e1a03004 	mov	r3, r4
   1351c:	e592004c 	ldr	r0, [r2, #76]	; 0x4c
   13520:	e3a01004 	mov	r1, #4
   13524:	e59f209c 	ldr	r2, [pc, #156]	; 135c8 <McTRS80::fileHandler(char const*, unsigned char const*, int)+0x110>
   13528:	ebffd8a1 	bl	97b4 <LogWrite>
   1352c:	e28d0008 	add	r0, sp, #8
   13530:	e58d4000 	str	r4, [sp]
   13534:	e1a03005 	mov	r3, r5
   13538:	e59f208c 	ldr	r2, [pc, #140]	; 135cc <McTRS80::fileHandler(char const*, unsigned char const*, int)+0x114>
   1353c:	e59f108c 	ldr	r1, [pc, #140]	; 135d0 <McTRS80::fileHandler(char const*, unsigned char const*, int)+0x118>
   13540:	ebfff329 	bl	101ec <McTRS80CmdFormat::proc(void (*)(unsigned long, unsigned char const*, unsigned long), void (*)(Z80Registers const&), unsigned char const*, int)>
   13544:	e28dd090 	add	sp, sp, #144	; 0x90
   13548:	e8bd8070 	pop	{r4, r5, r6, pc}
   1354c:	e1a01006 	mov	r1, r6
   13550:	e3a0301e 	mov	r3, #30
   13554:	e28d2008 	add	r2, sp, #8
   13558:	e59f0074 	ldr	r0, [pc, #116]	; 135d4 <McTRS80::fileHandler(char const*, unsigned char const*, int)+0x11c>
   1355c:	ebffdf6d 	bl	b318 <jsonGetValueForKey>
   13560:	e2506000 	subs	r6, r0, #0
   13564:	01a03006 	moveq	r3, r6
   13568:	1a00000b 	bne	1359c <McTRS80::fileHandler(char const*, unsigned char const*, int)+0xe4>
   1356c:	e59f2050 	ldr	r2, [pc, #80]	; 135c4 <McTRS80::fileHandler(char const*, unsigned char const*, int)+0x10c>
   13570:	e58d4000 	str	r4, [sp]
   13574:	e592004c 	ldr	r0, [r2, #76]	; 0x4c
   13578:	e3a01004 	mov	r1, #4
   1357c:	e59f2054 	ldr	r2, [pc, #84]	; 135d8 <McTRS80::fileHandler(char const*, unsigned char const*, int)+0x120>
   13580:	ebffd88b 	bl	97b4 <LogWrite>
   13584:	e1a02004 	mov	r2, r4
   13588:	e1a01005 	mov	r1, r5
   1358c:	e1a00006 	mov	r0, r6
   13590:	eb002237 	bl	1be74 <TargetState::addMemoryBlock(unsigned long, unsigned char const*, unsigned long)>
   13594:	e28dd090 	add	sp, sp, #144	; 0x90
   13598:	e8bd8070 	pop	{r4, r5, r6, pc}
   1359c:	e28d0008 	add	r0, sp, #8
   135a0:	e3a02010 	mov	r2, #16
   135a4:	e3a01000 	mov	r1, #0
   135a8:	eb0067bc 	bl	2d4a0 <strtol>
   135ac:	e6ff3070 	uxth	r3, r0
   135b0:	e1a06003 	mov	r6, r3
   135b4:	eaffffec 	b	1356c <McTRS80::fileHandler(char const*, unsigned char const*, int)+0xb4>
   135b8:	0002e604 	.word	0x0002e604
   135bc:	00030310 	.word	0x00030310
   135c0:	0002f32c 	.word	0x0002f32c
   135c4:	00042128 	.word	0x00042128
   135c8:	0002f334 	.word	0x0002f334
   135cc:	0001bf90 	.word	0x0001bf90
   135d0:	0001be74 	.word	0x0001be74
   135d4:	0002f234 	.word	0x0002f234
   135d8:	0002f240 	.word	0x0002f240

000135dc <McTRS80::memoryRequestCallback(unsigned long, unsigned long, unsigned long)>:
   135dc:	e2023009 	and	r3, r2, #9
   135e0:	e3530009 	cmp	r3, #9
   135e4:	03500013 	cmpeq	r0, #19
   135e8:	e92d40f0 	push	{r4, r5, r6, r7, lr}
   135ec:	e24dd00c 	sub	sp, sp, #12
   135f0:	03a040ff 	moveq	r4, #255	; 0xff
   135f4:	13a04902 	movne	r4, #32768	; 0x8000
   135f8:	e1a06002 	mov	r6, r2
   135fc:	e1a05000 	mov	r5, r0
   13600:	e1a07001 	mov	r7, r1
   13604:	eb001ad6 	bl	1a164 <TargetDebug::get()>
   13608:	e3500000 	cmp	r0, #0
   1360c:	0a000007 	beq	13630 <McTRS80::memoryRequestCallback(unsigned long, unsigned long, unsigned long)+0x54>
   13610:	e59fc024 	ldr	ip, [pc, #36]	; 1363c <McTRS80::memoryRequestCallback(unsigned long, unsigned long, unsigned long)+0x60>
   13614:	e58d4000 	str	r4, [sp]
   13618:	e1a03006 	mov	r3, r6
   1361c:	e1a02007 	mov	r2, r7
   13620:	e1a01005 	mov	r1, r5
   13624:	e58dc004 	str	ip, [sp, #4]
   13628:	eb0020e6 	bl	1b9c8 <TargetDebug::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long, McDescriptorTable&)>
   1362c:	e1a04000 	mov	r4, r0
   13630:	e1a00004 	mov	r0, r4
   13634:	e28dd00c 	add	sp, sp, #12
   13638:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
   1363c:	00042128 	.word	0x00042128

00013640 <McTRS80::getDescriptorTable(int)>:
   13640:	e59f0000 	ldr	r0, [pc]	; 13648 <McTRS80::getDescriptorTable(int)+0x8>
   13644:	e12fff1e 	bx	lr
   13648:	00042128 	.word	0x00042128

0001364c <McTerminal::getDescriptorTableCount()>:
   1364c:	e3a00002 	mov	r0, #2
   13650:	e12fff1e 	bx	lr

00013654 <McTerminal::disable()>:
   13654:	e59f3024 	ldr	r3, [pc, #36]	; 13680 <McTerminal::disable()+0x2c>
   13658:	e92d4010 	push	{r4, lr}
   1365c:	e5930000 	ldr	r0, [r3]
   13660:	e59f201c 	ldr	r2, [pc, #28]	; 13684 <McTerminal::disable()+0x30>
   13664:	e3a01004 	mov	r1, #4
   13668:	ebffd851 	bl	97b4 <LogWrite>
   1366c:	e3a01000 	mov	r1, #0
   13670:	e1a00001 	mov	r0, r1
   13674:	eb001689 	bl	190a0 <BusAccess::waitSetup(bool, bool)>
   13678:	e8bd4010 	pop	{r4, lr}
   1367c:	ea001656 	b	18fdc <BusAccess::accessCallbackRemove()>
   13680:	00042178 	.word	0x00042178
   13684:	0002f228 	.word	0x0002f228

00013688 <McTerminal::memoryRequestCallback(unsigned long, unsigned long, unsigned long)>:
   13688:	e92d40f0 	push	{r4, r5, r6, r7, lr}
   1368c:	e3a03902 	mov	r3, #32768	; 0x8000
   13690:	e24dd00c 	sub	sp, sp, #12
   13694:	e1a06001 	mov	r6, r1
   13698:	e1a07002 	mov	r7, r2
   1369c:	e1a05000 	mov	r5, r0
   136a0:	ebfff722 	bl	11330 <HwManager::handleMemOrIOReq(unsigned long, unsigned long, unsigned long, unsigned long)>
   136a4:	e1a04000 	mov	r4, r0
   136a8:	eb001aad 	bl	1a164 <TargetDebug::get()>
   136ac:	e3500000 	cmp	r0, #0
   136b0:	0a00000c 	beq	136e8 <McTerminal::memoryRequestCallback(unsigned long, unsigned long, unsigned long)+0x60>
   136b4:	e59f3038 	ldr	r3, [pc, #56]	; 136f4 <McTerminal::memoryRequestCallback(unsigned long, unsigned long, unsigned long)+0x6c>
   136b8:	e58d4000 	str	r4, [sp]
   136bc:	e5933000 	ldr	r3, [r3]
   136c0:	e59fc030 	ldr	ip, [pc, #48]	; 136f8 <McTerminal::memoryRequestCallback(unsigned long, unsigned long, unsigned long)+0x70>
   136c4:	e0832183 	add	r2, r3, r3, lsl #3
   136c8:	e0833082 	add	r3, r3, r2, lsl #1
   136cc:	e08cc103 	add	ip, ip, r3, lsl #2
   136d0:	e1a02006 	mov	r2, r6
   136d4:	e1a03007 	mov	r3, r7
   136d8:	e1a01005 	mov	r1, r5
   136dc:	e58dc004 	str	ip, [sp, #4]
   136e0:	eb0020b8 	bl	1b9c8 <TargetDebug::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long, McDescriptorTable&)>
   136e4:	e1a04000 	mov	r4, r0
   136e8:	e1a00004 	mov	r0, r4
   136ec:	e28dd00c 	add	sp, sp, #12
   136f0:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
   136f4:	00046a60 	.word	0x00046a60
   136f8:	0004217c 	.word	0x0004217c

000136fc <McTerminal::fileHandler(char const*, unsigned char const*, int)>:
   136fc:	e92d4070 	push	{r4, r5, r6, lr}
   13700:	e24dd090 	sub	sp, sp, #144	; 0x90
   13704:	e1a06002 	mov	r6, r2
   13708:	e1a04003 	mov	r4, r3
   1370c:	e28d2028 	add	r2, sp, #40	; 0x28
   13710:	e3a03064 	mov	r3, #100	; 0x64
   13714:	e59f007c 	ldr	r0, [pc, #124]	; 13798 <McTerminal::fileHandler(char const*, unsigned char const*, int)+0x9c>
   13718:	e1a05001 	mov	r5, r1
   1371c:	ebffdefd 	bl	b318 <jsonGetValueForKey>
   13720:	e3500000 	cmp	r0, #0
   13724:	1a000001 	bne	13730 <McTerminal::fileHandler(char const*, unsigned char const*, int)+0x34>
   13728:	e28dd090 	add	sp, sp, #144	; 0x90
   1372c:	e8bd8070 	pop	{r4, r5, r6, pc}
   13730:	e1a01005 	mov	r1, r5
   13734:	e3a0301e 	mov	r3, #30
   13738:	e28d2008 	add	r2, sp, #8
   1373c:	e59f0058 	ldr	r0, [pc, #88]	; 1379c <McTerminal::fileHandler(char const*, unsigned char const*, int)+0xa0>
   13740:	ebffdef4 	bl	b318 <jsonGetValueForKey>
   13744:	e2505000 	subs	r5, r0, #0
   13748:	01a03005 	moveq	r3, r5
   1374c:	0a000005 	beq	13768 <McTerminal::fileHandler(char const*, unsigned char const*, int)+0x6c>
   13750:	e28d0008 	add	r0, sp, #8
   13754:	e3a02010 	mov	r2, #16
   13758:	e3a01000 	mov	r1, #0
   1375c:	eb00674f 	bl	2d4a0 <strtol>
   13760:	e6ff3070 	uxth	r3, r0
   13764:	e1a05003 	mov	r5, r3
   13768:	e59f2030 	ldr	r2, [pc, #48]	; 137a0 <McTerminal::fileHandler(char const*, unsigned char const*, int)+0xa4>
   1376c:	e58d4000 	str	r4, [sp]
   13770:	e5920000 	ldr	r0, [r2]
   13774:	e3a01004 	mov	r1, #4
   13778:	e59f2024 	ldr	r2, [pc, #36]	; 137a4 <McTerminal::fileHandler(char const*, unsigned char const*, int)+0xa8>
   1377c:	ebffd80c 	bl	97b4 <LogWrite>
   13780:	e1a02004 	mov	r2, r4
   13784:	e1a01006 	mov	r1, r6
   13788:	e1a00005 	mov	r0, r5
   1378c:	eb0021b8 	bl	1be74 <TargetState::addMemoryBlock(unsigned long, unsigned char const*, unsigned long)>
   13790:	e28dd090 	add	sp, sp, #144	; 0x90
   13794:	e8bd8070 	pop	{r4, r5, r6, pc}
   13798:	0002e604 	.word	0x0002e604
   1379c:	0002f234 	.word	0x0002f234
   137a0:	00042178 	.word	0x00042178
   137a4:	0002f240 	.word	0x0002f240

000137a8 <McTerminal::getDescriptorTable(int)>:
   137a8:	e92d4010 	push	{r4, lr}
   137ac:	e2514000 	subs	r4, r1, #0
   137b0:	ba00000c 	blt	137e8 <McTerminal::getDescriptorTable(int)+0x40>
   137b4:	e5903000 	ldr	r3, [r0]
   137b8:	e59f2054 	ldr	r2, [pc, #84]	; 13814 <McTerminal::getDescriptorTable(int)+0x6c>
   137bc:	e5933008 	ldr	r3, [r3, #8]
   137c0:	e1530002 	cmp	r3, r2
   137c4:	03a00002 	moveq	r0, #2
   137c8:	1a00000d 	bne	13804 <McTerminal::getDescriptorTable(int)+0x5c>
   137cc:	e1500004 	cmp	r0, r4
   137d0:	da000004 	ble	137e8 <McTerminal::getDescriptorTable(int)+0x40>
   137d4:	e0840184 	add	r0, r4, r4, lsl #3
   137d8:	e59f3038 	ldr	r3, [pc, #56]	; 13818 <McTerminal::getDescriptorTable(int)+0x70>
   137dc:	e0844080 	add	r4, r4, r0, lsl #1
   137e0:	e0830104 	add	r0, r3, r4, lsl #2
   137e4:	e8bd8010 	pop	{r4, pc}
   137e8:	e59f302c 	ldr	r3, [pc, #44]	; 1381c <McTerminal::getDescriptorTable(int)+0x74>
   137ec:	e59f4024 	ldr	r4, [pc, #36]	; 13818 <McTerminal::getDescriptorTable(int)+0x70>
   137f0:	e5933000 	ldr	r3, [r3]
   137f4:	e0830183 	add	r0, r3, r3, lsl #3
   137f8:	e0833080 	add	r3, r3, r0, lsl #1
   137fc:	e0840103 	add	r0, r4, r3, lsl #2
   13800:	e8bd8010 	pop	{r4, pc}
   13804:	e12fff33 	blx	r3
   13808:	e1500004 	cmp	r0, r4
   1380c:	cafffff0 	bgt	137d4 <McTerminal::getDescriptorTable(int)+0x2c>
   13810:	eafffff4 	b	137e8 <McTerminal::getDescriptorTable(int)+0x40>
   13814:	0001364c 	.word	0x0001364c
   13818:	0004217c 	.word	0x0004217c
   1381c:	00046a60 	.word	0x00046a60

00013820 <McTerminal::enable(int)>:
   13820:	e92d4030 	push	{r4, r5, lr}
   13824:	e59f40a4 	ldr	r4, [pc, #164]	; 138d0 <McTerminal::enable(int)+0xb0>
   13828:	e3510000 	cmp	r1, #0
   1382c:	e24dd00c 	sub	sp, sp, #12
   13830:	e5841000 	str	r1, [r4]
   13834:	e1a05000 	mov	r5, r0
   13838:	ba000007 	blt	1385c <McTerminal::enable(int)+0x3c>
   1383c:	e5903000 	ldr	r3, [r0]
   13840:	e59f208c 	ldr	r2, [pc, #140]	; 138d4 <McTerminal::enable(int)+0xb4>
   13844:	e5933008 	ldr	r3, [r3, #8]
   13848:	e1530002 	cmp	r3, r2
   1384c:	03a00002 	moveq	r0, #2
   13850:	1a000018 	bne	138b8 <McTerminal::enable(int)+0x98>
   13854:	e1500001 	cmp	r0, r1
   13858:	ca000001 	bgt	13864 <McTerminal::enable(int)+0x44>
   1385c:	e3a03000 	mov	r3, #0
   13860:	e5843000 	str	r3, [r4]
   13864:	e3a02000 	mov	r2, #0
   13868:	e59f3068 	ldr	r3, [pc, #104]	; 138d8 <McTerminal::enable(int)+0xb8>
   1386c:	e0814181 	add	r4, r1, r1, lsl #3
   13870:	e0811084 	add	r1, r1, r4, lsl #1
   13874:	e0834101 	add	r4, r3, r1, lsl #2
   13878:	e2855a02 	add	r5, r5, #8192	; 0x2000
   1387c:	e5c52eec 	strb	r2, [r5, #3820]	; 0xeec
   13880:	e5930000 	ldr	r0, [r3]
   13884:	e59f2050 	ldr	r2, [pc, #80]	; 138dc <McTerminal::enable(int)+0xbc>
   13888:	e5943004 	ldr	r3, [r4, #4]
   1388c:	e3a01004 	mov	r1, #4
   13890:	ebffd7c7 	bl	97b4 <LogWrite>
   13894:	e59f0044 	ldr	r0, [pc, #68]	; 138e0 <McTerminal::enable(int)+0xc0>
   13898:	eb0015cb 	bl	18fcc <BusAccess::accessCallbackAdd(unsigned long (*)(unsigned long, unsigned long, unsigned long))>
   1389c:	e5d4103d 	ldrb	r1, [r4, #61]	; 0x3d
   138a0:	e5d4003c 	ldrb	r0, [r4, #60]	; 0x3c
   138a4:	e3510000 	cmp	r1, #0
   138a8:	05d4103e 	ldrbeq	r1, [r4, #62]	; 0x3e
   138ac:	e28dd00c 	add	sp, sp, #12
   138b0:	e8bd4030 	pop	{r4, r5, lr}
   138b4:	ea0015f9 	b	190a0 <BusAccess::waitSetup(bool, bool)>
   138b8:	e58d1004 	str	r1, [sp, #4]
   138bc:	e12fff33 	blx	r3
   138c0:	e59d1004 	ldr	r1, [sp, #4]
   138c4:	e1500001 	cmp	r0, r1
   138c8:	daffffe3 	ble	1385c <McTerminal::enable(int)+0x3c>
   138cc:	eaffffe4 	b	13864 <McTerminal::enable(int)+0x44>
   138d0:	00046a60 	.word	0x00046a60
   138d4:	0001364c 	.word	0x0001364c
   138d8:	00042178 	.word	0x00042178
   138dc:	0002f38c 	.word	0x0002f38c
   138e0:	00013688 	.word	0x00013688

000138e4 <McTerminal::keyHandler(unsigned char, unsigned char const*)>:
   138e4:	e5d23000 	ldrb	r3, [r2]
   138e8:	e3530001 	cmp	r3, #1
   138ec:	912fff1e 	bxls	lr
   138f0:	e2430004 	sub	r0, r3, #4
   138f4:	e3500019 	cmp	r0, #25
   138f8:	e2011022 	and	r1, r1, #34	; 0x22
   138fc:	8a000004 	bhi	13914 <McTerminal::keyHandler(unsigned char, unsigned char const*)+0x30>
   13900:	e3510000 	cmp	r1, #0
   13904:	13a03041 	movne	r3, #65	; 0x41
   13908:	03a03061 	moveq	r3, #97	; 0x61
   1390c:	e0800003 	add	r0, r0, r3
   13910:	eafff93e 	b	11e10 <McManager::sendKeyCodeToTarget(int)>
   13914:	e243201e 	sub	r2, r3, #30
   13918:	e3520008 	cmp	r2, #8
   1391c:	8a000008 	bhi	13944 <McTerminal::keyHandler(unsigned char, unsigned char const*)+0x60>
   13920:	e3510000 	cmp	r1, #0
   13924:	02830013 	addeq	r0, r3, #19
   13928:	0afffff8 	beq	13910 <McTerminal::keyHandler(unsigned char, unsigned char const*)+0x2c>
   1392c:	e59f315c 	ldr	r3, [pc, #348]	; 13a90 <McTerminal::keyHandler(unsigned char, unsigned char const*)+0x1ac>
   13930:	e0832102 	add	r2, r3, r2, lsl #2
   13934:	e592009c 	ldr	r0, [r2, #156]	; 0x9c
   13938:	e3500000 	cmp	r0, #0
   1393c:	012fff1e 	bxeq	lr
   13940:	eafffff2 	b	13910 <McTerminal::keyHandler(unsigned char, unsigned char const*)+0x2c>
   13944:	e3530027 	cmp	r3, #39	; 0x27
   13948:	0a00001f 	beq	139cc <McTerminal::keyHandler(unsigned char, unsigned char const*)+0xe8>
   1394c:	e3530033 	cmp	r3, #51	; 0x33
   13950:	0a000028 	beq	139f8 <McTerminal::keyHandler(unsigned char, unsigned char const*)+0x114>
   13954:	e3530034 	cmp	r3, #52	; 0x34
   13958:	0a000020 	beq	139e0 <McTerminal::keyHandler(unsigned char, unsigned char const*)+0xfc>
   1395c:	e3530036 	cmp	r3, #54	; 0x36
   13960:	0a000028 	beq	13a08 <McTerminal::keyHandler(unsigned char, unsigned char const*)+0x124>
   13964:	e3530037 	cmp	r3, #55	; 0x37
   13968:	0a00002a 	beq	13a18 <McTerminal::keyHandler(unsigned char, unsigned char const*)+0x134>
   1396c:	e353002e 	cmp	r3, #46	; 0x2e
   13970:	0a00002c 	beq	13a28 <McTerminal::keyHandler(unsigned char, unsigned char const*)+0x144>
   13974:	e353002d 	cmp	r3, #45	; 0x2d
   13978:	0a00002e 	beq	13a38 <McTerminal::keyHandler(unsigned char, unsigned char const*)+0x154>
   1397c:	e3530038 	cmp	r3, #56	; 0x38
   13980:	0a000030 	beq	13a48 <McTerminal::keyHandler(unsigned char, unsigned char const*)+0x164>
   13984:	e3530028 	cmp	r3, #40	; 0x28
   13988:	0a000032 	beq	13a58 <McTerminal::keyHandler(unsigned char, unsigned char const*)+0x174>
   1398c:	e353002a 	cmp	r3, #42	; 0x2a
   13990:	0a000032 	beq	13a60 <McTerminal::keyHandler(unsigned char, unsigned char const*)+0x17c>
   13994:	e3530029 	cmp	r3, #41	; 0x29
   13998:	0a000032 	beq	13a68 <McTerminal::keyHandler(unsigned char, unsigned char const*)+0x184>
   1399c:	e3530052 	cmp	r3, #82	; 0x52
   139a0:	0a000032 	beq	13a70 <McTerminal::keyHandler(unsigned char, unsigned char const*)+0x18c>
   139a4:	e3530051 	cmp	r3, #81	; 0x51
   139a8:	0a000032 	beq	13a78 <McTerminal::keyHandler(unsigned char, unsigned char const*)+0x194>
   139ac:	e3530050 	cmp	r3, #80	; 0x50
   139b0:	0a000032 	beq	13a80 <McTerminal::keyHandler(unsigned char, unsigned char const*)+0x19c>
   139b4:	e353004f 	cmp	r3, #79	; 0x4f
   139b8:	0a000032 	beq	13a88 <McTerminal::keyHandler(unsigned char, unsigned char const*)+0x1a4>
   139bc:	e353002c 	cmp	r3, #44	; 0x2c
   139c0:	112fff1e 	bxne	lr
   139c4:	e3a00020 	mov	r0, #32
   139c8:	eaffffd0 	b	13910 <McTerminal::keyHandler(unsigned char, unsigned char const*)+0x2c>
   139cc:	e3510000 	cmp	r1, #0
   139d0:	0a000006 	beq	139f0 <McTerminal::keyHandler(unsigned char, unsigned char const*)+0x10c>
   139d4:	e59f30b4 	ldr	r3, [pc, #180]	; 13a90 <McTerminal::keyHandler(unsigned char, unsigned char const*)+0x1ac>
   139d8:	e59300c0 	ldr	r0, [r3, #192]	; 0xc0
   139dc:	eaffffd5 	b	13938 <McTerminal::keyHandler(unsigned char, unsigned char const*)+0x54>
   139e0:	e3510000 	cmp	r1, #0
   139e4:	03a00027 	moveq	r0, #39	; 0x27
   139e8:	13a00040 	movne	r0, #64	; 0x40
   139ec:	eaffffc7 	b	13910 <McTerminal::keyHandler(unsigned char, unsigned char const*)+0x2c>
   139f0:	e3a00030 	mov	r0, #48	; 0x30
   139f4:	eaffffc5 	b	13910 <McTerminal::keyHandler(unsigned char, unsigned char const*)+0x2c>
   139f8:	e3510000 	cmp	r1, #0
   139fc:	03a0003b 	moveq	r0, #59	; 0x3b
   13a00:	13a0003a 	movne	r0, #58	; 0x3a
   13a04:	eaffffc1 	b	13910 <McTerminal::keyHandler(unsigned char, unsigned char const*)+0x2c>
   13a08:	e3510000 	cmp	r1, #0
   13a0c:	03a0002c 	moveq	r0, #44	; 0x2c
   13a10:	13a0003c 	movne	r0, #60	; 0x3c
   13a14:	eaffffbd 	b	13910 <McTerminal::keyHandler(unsigned char, unsigned char const*)+0x2c>
   13a18:	e3510000 	cmp	r1, #0
   13a1c:	03a0002e 	moveq	r0, #46	; 0x2e
   13a20:	13a0003e 	movne	r0, #62	; 0x3e
   13a24:	eaffffb9 	b	13910 <McTerminal::keyHandler(unsigned char, unsigned char const*)+0x2c>
   13a28:	e3510000 	cmp	r1, #0
   13a2c:	03a0003d 	moveq	r0, #61	; 0x3d
   13a30:	13a0002b 	movne	r0, #43	; 0x2b
   13a34:	eaffffb5 	b	13910 <McTerminal::keyHandler(unsigned char, unsigned char const*)+0x2c>
   13a38:	e3510000 	cmp	r1, #0
   13a3c:	01a00003 	moveq	r0, r3
   13a40:	13a0005f 	movne	r0, #95	; 0x5f
   13a44:	eaffffb1 	b	13910 <McTerminal::keyHandler(unsigned char, unsigned char const*)+0x2c>
   13a48:	e3510000 	cmp	r1, #0
   13a4c:	03a0002f 	moveq	r0, #47	; 0x2f
   13a50:	13a0003f 	movne	r0, #63	; 0x3f
   13a54:	eaffffad 	b	13910 <McTerminal::keyHandler(unsigned char, unsigned char const*)+0x2c>
   13a58:	e3a0000d 	mov	r0, #13
   13a5c:	eaffffab 	b	13910 <McTerminal::keyHandler(unsigned char, unsigned char const*)+0x2c>
   13a60:	e3a00008 	mov	r0, #8
   13a64:	eaffffa9 	b	13910 <McTerminal::keyHandler(unsigned char, unsigned char const*)+0x2c>
   13a68:	e3a0001d 	mov	r0, #29
   13a6c:	eaffffa7 	b	13910 <McTerminal::keyHandler(unsigned char, unsigned char const*)+0x2c>
   13a70:	e3a00011 	mov	r0, #17
   13a74:	eaffffa5 	b	13910 <McTerminal::keyHandler(unsigned char, unsigned char const*)+0x2c>
   13a78:	e3a00012 	mov	r0, #18
   13a7c:	eaffffa3 	b	13910 <McTerminal::keyHandler(unsigned char, unsigned char const*)+0x2c>
   13a80:	e3a00013 	mov	r0, #19
   13a84:	eaffffa1 	b	13910 <McTerminal::keyHandler(unsigned char, unsigned char const*)+0x2c>
   13a88:	e3a00014 	mov	r0, #20
   13a8c:	eaffff9f 	b	13910 <McTerminal::keyHandler(unsigned char, unsigned char const*)+0x2c>
   13a90:	00042178 	.word	0x00042178

00013a94 <McTerminal::McTerminal()>:
   13a94:	e92d4070 	push	{r4, r5, r6, lr}
   13a98:	e1a04000 	mov	r4, r0
   13a9c:	ebfff67d 	bl	11498 <McBase::McBase()>
   13aa0:	e3a0301e 	mov	r3, #30
   13aa4:	e3a02000 	mov	r2, #0
   13aa8:	e3a0c001 	mov	ip, #1
   13aac:	e3a05050 	mov	r5, #80	; 0x50
   13ab0:	e3a00f7d 	mov	r0, #500	; 0x1f4
   13ab4:	e3a0105f 	mov	r1, #95	; 0x5f
   13ab8:	e59fe044 	ldr	lr, [pc, #68]	; 13b04 <McTerminal::McTerminal()+0x70>
   13abc:	e5843008 	str	r3, [r4, #8]
   13ac0:	e2843a02 	add	r3, r4, #8192	; 0x2000
   13ac4:	e5845004 	str	r5, [r4, #4]
   13ac8:	e584e000 	str	lr, [r4]
   13acc:	e5830f00 	str	r0, [r3, #3840]	; 0xf00
   13ad0:	e5c31f05 	strb	r1, [r3, #3845]	; 0xf05
   13ad4:	e5c32eec 	strb	r2, [r3, #3820]	; 0xeec
   13ad8:	e5832ef4 	str	r2, [r3, #3828]	; 0xef4
   13adc:	e5832ef0 	str	r2, [r3, #3824]	; 0xef0
   13ae0:	e5832efc 	str	r2, [r3, #3836]	; 0xefc
   13ae4:	e5c32f04 	strb	r2, [r3, #3844]	; 0xf04
   13ae8:	e5c3cef8 	strb	ip, [r3, #3832]	; 0xef8
   13aec:	e284000c 	add	r0, r4, #12
   13af0:	e3a02e96 	mov	r2, #2400	; 0x960
   13af4:	e3a01020 	mov	r1, #32
   13af8:	eb006197 	bl	2c15c <memset>
   13afc:	e1a00004 	mov	r0, r4
   13b00:	e8bd8070 	pop	{r4, r5, r6, pc}
   13b04:	0002f368 	.word	0x0002f368

00013b08 <McTerminal::convertRawToAscii(unsigned char, unsigned char const*)>:
   13b08:	e5d12000 	ldrb	r2, [r1]
   13b0c:	e3520001 	cmp	r2, #1
   13b10:	9a00002d 	bls	13bcc <McTerminal::convertRawToAscii(unsigned char, unsigned char const*)+0xc4>
   13b14:	e2423004 	sub	r3, r2, #4
   13b18:	e3530019 	cmp	r3, #25
   13b1c:	e2000022 	and	r0, r0, #34	; 0x22
   13b20:	8a000004 	bhi	13b38 <McTerminal::convertRawToAscii(unsigned char, unsigned char const*)+0x30>
   13b24:	e3500000 	cmp	r0, #0
   13b28:	13a00041 	movne	r0, #65	; 0x41
   13b2c:	03a00061 	moveq	r0, #97	; 0x61
   13b30:	e0830000 	add	r0, r3, r0
   13b34:	e12fff1e 	bx	lr
   13b38:	e242301e 	sub	r3, r2, #30
   13b3c:	e3530008 	cmp	r3, #8
   13b40:	9a000023 	bls	13bd4 <McTerminal::convertRawToAscii(unsigned char, unsigned char const*)+0xcc>
   13b44:	e3520027 	cmp	r2, #39	; 0x27
   13b48:	0a000027 	beq	13bec <McTerminal::convertRawToAscii(unsigned char, unsigned char const*)+0xe4>
   13b4c:	e3520033 	cmp	r2, #51	; 0x33
   13b50:	0a000030 	beq	13c18 <McTerminal::convertRawToAscii(unsigned char, unsigned char const*)+0x110>
   13b54:	e3520034 	cmp	r2, #52	; 0x34
   13b58:	0a000028 	beq	13c00 <McTerminal::convertRawToAscii(unsigned char, unsigned char const*)+0xf8>
   13b5c:	e3520036 	cmp	r2, #54	; 0x36
   13b60:	0a000030 	beq	13c28 <McTerminal::convertRawToAscii(unsigned char, unsigned char const*)+0x120>
   13b64:	e3520037 	cmp	r2, #55	; 0x37
   13b68:	0a000032 	beq	13c38 <McTerminal::convertRawToAscii(unsigned char, unsigned char const*)+0x130>
   13b6c:	e352002e 	cmp	r2, #46	; 0x2e
   13b70:	0a000034 	beq	13c48 <McTerminal::convertRawToAscii(unsigned char, unsigned char const*)+0x140>
   13b74:	e352002d 	cmp	r2, #45	; 0x2d
   13b78:	0a000036 	beq	13c58 <McTerminal::convertRawToAscii(unsigned char, unsigned char const*)+0x150>
   13b7c:	e3520038 	cmp	r2, #56	; 0x38
   13b80:	0a000038 	beq	13c68 <McTerminal::convertRawToAscii(unsigned char, unsigned char const*)+0x160>
   13b84:	e3520028 	cmp	r2, #40	; 0x28
   13b88:	0a00003a 	beq	13c78 <McTerminal::convertRawToAscii(unsigned char, unsigned char const*)+0x170>
   13b8c:	e352002a 	cmp	r2, #42	; 0x2a
   13b90:	0a00003a 	beq	13c80 <McTerminal::convertRawToAscii(unsigned char, unsigned char const*)+0x178>
   13b94:	e3520029 	cmp	r2, #41	; 0x29
   13b98:	0a00003a 	beq	13c88 <McTerminal::convertRawToAscii(unsigned char, unsigned char const*)+0x180>
   13b9c:	e3520052 	cmp	r2, #82	; 0x52
   13ba0:	0a00003a 	beq	13c90 <McTerminal::convertRawToAscii(unsigned char, unsigned char const*)+0x188>
   13ba4:	e3520051 	cmp	r2, #81	; 0x51
   13ba8:	0a00003a 	beq	13c98 <McTerminal::convertRawToAscii(unsigned char, unsigned char const*)+0x190>
   13bac:	e3520050 	cmp	r2, #80	; 0x50
   13bb0:	0a00003a 	beq	13ca0 <McTerminal::convertRawToAscii(unsigned char, unsigned char const*)+0x198>
   13bb4:	e352004f 	cmp	r2, #79	; 0x4f
   13bb8:	0a00003a 	beq	13ca8 <McTerminal::convertRawToAscii(unsigned char, unsigned char const*)+0x1a0>
   13bbc:	e352002c 	cmp	r2, #44	; 0x2c
   13bc0:	13a00000 	movne	r0, #0
   13bc4:	03a00020 	moveq	r0, #32
   13bc8:	e12fff1e 	bx	lr
   13bcc:	e3a00000 	mov	r0, #0
   13bd0:	e12fff1e 	bx	lr
   13bd4:	e3500000 	cmp	r0, #0
   13bd8:	159f20d0 	ldrne	r2, [pc, #208]	; 13cb0 <McTerminal::convertRawToAscii(unsigned char, unsigned char const*)+0x1a8>
   13bdc:	02820013 	addeq	r0, r2, #19
   13be0:	10823103 	addne	r3, r2, r3, lsl #2
   13be4:	1593009c 	ldrne	r0, [r3, #156]	; 0x9c
   13be8:	e12fff1e 	bx	lr
   13bec:	e3500000 	cmp	r0, #0
   13bf0:	0a000006 	beq	13c10 <McTerminal::convertRawToAscii(unsigned char, unsigned char const*)+0x108>
   13bf4:	e59f30b4 	ldr	r3, [pc, #180]	; 13cb0 <McTerminal::convertRawToAscii(unsigned char, unsigned char const*)+0x1a8>
   13bf8:	e59300c0 	ldr	r0, [r3, #192]	; 0xc0
   13bfc:	e12fff1e 	bx	lr
   13c00:	e3500000 	cmp	r0, #0
   13c04:	13a00040 	movne	r0, #64	; 0x40
   13c08:	03a00027 	moveq	r0, #39	; 0x27
   13c0c:	e12fff1e 	bx	lr
   13c10:	e3a00030 	mov	r0, #48	; 0x30
   13c14:	e12fff1e 	bx	lr
   13c18:	e3500000 	cmp	r0, #0
   13c1c:	13a0003a 	movne	r0, #58	; 0x3a
   13c20:	03a0003b 	moveq	r0, #59	; 0x3b
   13c24:	e12fff1e 	bx	lr
   13c28:	e3500000 	cmp	r0, #0
   13c2c:	13a0003c 	movne	r0, #60	; 0x3c
   13c30:	03a0002c 	moveq	r0, #44	; 0x2c
   13c34:	e12fff1e 	bx	lr
   13c38:	e3500000 	cmp	r0, #0
   13c3c:	13a0003e 	movne	r0, #62	; 0x3e
   13c40:	03a0002e 	moveq	r0, #46	; 0x2e
   13c44:	e12fff1e 	bx	lr
   13c48:	e3500000 	cmp	r0, #0
   13c4c:	13a0002b 	movne	r0, #43	; 0x2b
   13c50:	03a0003d 	moveq	r0, #61	; 0x3d
   13c54:	e12fff1e 	bx	lr
   13c58:	e3500000 	cmp	r0, #0
   13c5c:	01a00002 	moveq	r0, r2
   13c60:	13a0005f 	movne	r0, #95	; 0x5f
   13c64:	e12fff1e 	bx	lr
   13c68:	e3500000 	cmp	r0, #0
   13c6c:	13a0003f 	movne	r0, #63	; 0x3f
   13c70:	03a0002f 	moveq	r0, #47	; 0x2f
   13c74:	e12fff1e 	bx	lr
   13c78:	e3a0000d 	mov	r0, #13
   13c7c:	e12fff1e 	bx	lr
   13c80:	e3a00008 	mov	r0, #8
   13c84:	e12fff1e 	bx	lr
   13c88:	e3a0001d 	mov	r0, #29
   13c8c:	e12fff1e 	bx	lr
   13c90:	e3a00011 	mov	r0, #17
   13c94:	e12fff1e 	bx	lr
   13c98:	e3a00012 	mov	r0, #18
   13c9c:	e12fff1e 	bx	lr
   13ca0:	e3a00013 	mov	r0, #19
   13ca4:	e12fff1e 	bx	lr
   13ca8:	e3a00014 	mov	r0, #20
   13cac:	e12fff1e 	bx	lr
   13cb0:	00042178 	.word	0x00042178

00013cb4 <McTerminal::clearScreen()>:
   13cb4:	e92d4010 	push	{r4, lr}
   13cb8:	e1c020d4 	ldrd	r2, [r0, #4]
   13cbc:	e0020392 	mul	r2, r2, r3
   13cc0:	e3520000 	cmp	r2, #0
   13cc4:	e1a04000 	mov	r4, r0
   13cc8:	da000002 	ble	13cd8 <McTerminal::clearScreen()+0x24>
   13ccc:	e3a01020 	mov	r1, #32
   13cd0:	e280000c 	add	r0, r0, #12
   13cd4:	eb006120 	bl	2c15c <memset>
   13cd8:	e3a03000 	mov	r3, #0
   13cdc:	e2844a02 	add	r4, r4, #8192	; 0x2000
   13ce0:	e5843ef0 	str	r3, [r4, #3824]	; 0xef0
   13ce4:	e5843ef4 	str	r3, [r4, #3828]	; 0xef4
   13ce8:	e8bd8010 	pop	{r4, pc}

00013cec <McTerminal::dispChar(unsigned char)>:
   13cec:	e2412008 	sub	r2, r1, #8
   13cf0:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   13cf4:	e1a04000 	mov	r4, r0
   13cf8:	e3520005 	cmp	r2, #5
   13cfc:	979ff102 	ldrls	pc, [pc, r2, lsl #2]
   13d00:	ea000049 	b	13e2c <McTerminal::dispChar(unsigned char)+0x140>
   13d04:	00013d84 	.word	0x00013d84
   13d08:	00013d1c 	.word	0x00013d1c
   13d0c:	00013de8 	.word	0x00013de8
   13d10:	00013e2c 	.word	0x00013e2c
   13d14:	00013df8 	.word	0x00013df8
   13d18:	00013d20 	.word	0x00013d20
   13d1c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   13d20:	e2805a02 	add	r5, r0, #8192	; 0x2000
   13d24:	e5d53f04 	ldrb	r3, [r5, #3844]	; 0xf04
   13d28:	e5952ef4 	ldr	r2, [r5, #3828]	; 0xef4
   13d2c:	e3530000 	cmp	r3, #0
   13d30:	e5951ef0 	ldr	r1, [r5, #3824]	; 0xef0
   13d34:	e590c004 	ldr	ip, [r0, #4]
   13d38:	1a000071 	bne	13f04 <McTerminal::dispChar(unsigned char)+0x218>
   13d3c:	e3510000 	cmp	r1, #0
   13d40:	b3a03000 	movlt	r3, #0
   13d44:	b1a01003 	movlt	r1, r3
   13d48:	b5853ef0 	strlt	r3, [r5, #3824]	; 0xef0
   13d4c:	e2823001 	add	r3, r2, #1
   13d50:	e5853ef4 	str	r3, [r5, #3828]	; 0xef4
   13d54:	e15c0001 	cmp	ip, r1
   13d58:	e5940008 	ldr	r0, [r4, #8]
   13d5c:	ca00004c 	bgt	13e94 <McTerminal::dispChar(unsigned char)+0x1a8>
   13d60:	e3a01000 	mov	r1, #0
   13d64:	e2823002 	add	r3, r2, #2
   13d68:	e1530000 	cmp	r3, r0
   13d6c:	e5853ef4 	str	r3, [r5, #3828]	; 0xef4
   13d70:	e5851ef0 	str	r1, [r5, #3824]	; 0xef0
   13d74:	aa000048 	bge	13e9c <McTerminal::dispChar(unsigned char)+0x1b0>
   13d78:	e3530000 	cmp	r3, #0
   13d7c:	a8bd81f0 	popge	{r4, r5, r6, r7, r8, pc}
   13d80:	ea000040 	b	13e88 <McTerminal::dispChar(unsigned char)+0x19c>
   13d84:	e2805a02 	add	r5, r0, #8192	; 0x2000
   13d88:	e5d53f04 	ldrb	r3, [r5, #3844]	; 0xf04
   13d8c:	e3530000 	cmp	r3, #0
   13d90:	1a000084 	bne	13fa8 <McTerminal::dispChar(unsigned char)+0x2bc>
   13d94:	e5953ef0 	ldr	r3, [r5, #3824]	; 0xef0
   13d98:	e5950ef4 	ldr	r0, [r5, #3828]	; 0xef4
   13d9c:	e2433001 	sub	r3, r3, #1
   13da0:	e1c33fc3 	bic	r3, r3, r3, asr #31
   13da4:	e5853ef0 	str	r3, [r5, #3824]	; 0xef0
   13da8:	e5941004 	ldr	r1, [r4, #4]
   13dac:	e1510003 	cmp	r1, r3
   13db0:	d3a03000 	movle	r3, #0
   13db4:	d2800001 	addle	r0, r0, #1
   13db8:	d5850ef4 	strle	r0, [r5, #3828]	; 0xef4
   13dbc:	d5853ef0 	strle	r3, [r5, #3824]	; 0xef0
   13dc0:	e5942008 	ldr	r2, [r4, #8]
   13dc4:	e1520000 	cmp	r2, r0
   13dc8:	da00003f 	ble	13ecc <McTerminal::dispChar(unsigned char)+0x1e0>
   13dcc:	e3500000 	cmp	r0, #0
   13dd0:	ba000048 	blt	13ef8 <McTerminal::dispChar(unsigned char)+0x20c>
   13dd4:	e0233091 	mla	r3, r1, r0, r3
   13dd8:	e3a02020 	mov	r2, #32
   13ddc:	e0844003 	add	r4, r4, r3
   13de0:	e5c4200c 	strb	r2, [r4, #12]
   13de4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   13de8:	e3a03000 	mov	r3, #0
   13dec:	e2804a02 	add	r4, r0, #8192	; 0x2000
   13df0:	e5843ef0 	str	r3, [r4, #3824]	; 0xef0
   13df4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   13df8:	e5903004 	ldr	r3, [r0, #4]
   13dfc:	e5902008 	ldr	r2, [r0, #8]
   13e00:	e0020392 	mul	r2, r2, r3
   13e04:	e3520000 	cmp	r2, #0
   13e08:	da000002 	ble	13e18 <McTerminal::dispChar(unsigned char)+0x12c>
   13e0c:	e3a01020 	mov	r1, #32
   13e10:	e280000c 	add	r0, r0, #12
   13e14:	eb0060d0 	bl	2c15c <memset>
   13e18:	e3a03000 	mov	r3, #0
   13e1c:	e2844a02 	add	r4, r4, #8192	; 0x2000
   13e20:	e5843ef0 	str	r3, [r4, #3824]	; 0xef0
   13e24:	e5843ef4 	str	r3, [r4, #3828]	; 0xef4
   13e28:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   13e2c:	e2805a02 	add	r5, r0, #8192	; 0x2000
   13e30:	e5950ef0 	ldr	r0, [r5, #3824]	; 0xef0
   13e34:	e5952ef4 	ldr	r2, [r5, #3828]	; 0xef4
   13e38:	e594c004 	ldr	ip, [r4, #4]
   13e3c:	e0843000 	add	r3, r4, r0
   13e40:	e023329c 	mla	r3, ip, r2, r3
   13e44:	e5c3100c 	strb	r1, [r3, #12]
   13e48:	e5d53f04 	ldrb	r3, [r5, #3844]	; 0xf04
   13e4c:	e3530000 	cmp	r3, #0
   13e50:	1a00004c 	bne	13f88 <McTerminal::dispChar(unsigned char)+0x29c>
   13e54:	e2801001 	add	r1, r0, #1
   13e58:	e1c11fc1 	bic	r1, r1, r1, asr #31
   13e5c:	e15c0001 	cmp	ip, r1
   13e60:	c5851ef0 	strgt	r1, [r5, #3824]	; 0xef0
   13e64:	d3a03000 	movle	r3, #0
   13e68:	d2822001 	addle	r2, r2, #1
   13e6c:	d5852ef4 	strle	r2, [r5, #3828]	; 0xef4
   13e70:	d5853ef0 	strle	r3, [r5, #3824]	; 0xef0
   13e74:	e5943008 	ldr	r3, [r4, #8]
   13e78:	e1530002 	cmp	r3, r2
   13e7c:	da000029 	ble	13f28 <McTerminal::dispChar(unsigned char)+0x23c>
   13e80:	e3520000 	cmp	r2, #0
   13e84:	a8bd81f0 	popge	{r4, r5, r6, r7, r8, pc}
   13e88:	e3a03000 	mov	r3, #0
   13e8c:	e5853ef4 	str	r3, [r5, #3828]	; 0xef4
   13e90:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   13e94:	e1530000 	cmp	r3, r0
   13e98:	baffffb6 	blt	13d78 <McTerminal::dispChar(unsigned char)+0x8c>
   13e9c:	e3500001 	cmp	r0, #1
   13ea0:	e0060c90 	mul	r6, r0, ip
   13ea4:	ca000048 	bgt	13fcc <McTerminal::dispChar(unsigned char)+0x2e0>
   13ea8:	e3560000 	cmp	r6, #0
   13eac:	da000003 	ble	13ec0 <McTerminal::dispChar(unsigned char)+0x1d4>
   13eb0:	e1a02006 	mov	r2, r6
   13eb4:	e284000c 	add	r0, r4, #12
   13eb8:	e3a01020 	mov	r1, #32
   13ebc:	eb0060a6 	bl	2c15c <memset>
   13ec0:	e3a03000 	mov	r3, #0
   13ec4:	e5853ef0 	str	r3, [r5, #3824]	; 0xef0
   13ec8:	eaffffee 	b	13e88 <McTerminal::dispChar(unsigned char)+0x19c>
   13ecc:	e3520001 	cmp	r2, #1
   13ed0:	e0060192 	mul	r6, r2, r1
   13ed4:	ca000051 	bgt	14020 <McTerminal::dispChar(unsigned char)+0x334>
   13ed8:	e3560000 	cmp	r6, #0
   13edc:	da000003 	ble	13ef0 <McTerminal::dispChar(unsigned char)+0x204>
   13ee0:	e1a02006 	mov	r2, r6
   13ee4:	e3a01020 	mov	r1, #32
   13ee8:	e284000c 	add	r0, r4, #12
   13eec:	eb00609a 	bl	2c15c <memset>
   13ef0:	e3a03000 	mov	r3, #0
   13ef4:	e5853ef0 	str	r3, [r5, #3824]	; 0xef0
   13ef8:	e3a02000 	mov	r2, #0
   13efc:	e5852ef4 	str	r2, [r5, #3828]	; 0xef4
   13f00:	eaffffb4 	b	13dd8 <McTerminal::dispChar(unsigned char)+0xec>
   13f04:	e0803001 	add	r3, r0, r1
   13f08:	e02c3c92 	mla	ip, r2, ip, r3
   13f0c:	e3a00000 	mov	r0, #0
   13f10:	e5dc300c 	ldrb	r3, [ip, #12]
   13f14:	ebffe121 	bl	c3a0 <wgfx_putc>
   13f18:	e5951ef0 	ldr	r1, [r5, #3824]	; 0xef0
   13f1c:	e5952ef4 	ldr	r2, [r5, #3828]	; 0xef4
   13f20:	e594c004 	ldr	ip, [r4, #4]
   13f24:	eaffff84 	b	13d3c <McTerminal::dispChar(unsigned char)+0x50>
   13f28:	e3530001 	cmp	r3, #1
   13f2c:	e0060c93 	mul	r6, r3, ip
   13f30:	daffffdc 	ble	13ea8 <McTerminal::dispChar(unsigned char)+0x1bc>
   13f34:	e046700c 	sub	r7, r6, ip
   13f38:	e284000c 	add	r0, r4, #12
   13f3c:	e1a02007 	mov	r2, r7
   13f40:	e080100c 	add	r1, r0, ip
   13f44:	eb006040 	bl	2c04c <memcpy>
   13f48:	e1570006 	cmp	r7, r6
   13f4c:	aa000004 	bge	13f64 <McTerminal::dispChar(unsigned char)+0x278>
   13f50:	e287000c 	add	r0, r7, #12
   13f54:	e0462007 	sub	r2, r6, r7
   13f58:	e0840000 	add	r0, r4, r0
   13f5c:	e3a01020 	mov	r1, #32
   13f60:	eb00607d 	bl	2c15c <memset>
   13f64:	e3a03000 	mov	r3, #0
   13f68:	e5952ef4 	ldr	r2, [r5, #3828]	; 0xef4
   13f6c:	e5951ef0 	ldr	r1, [r5, #3824]	; 0xef0
   13f70:	e2422001 	sub	r2, r2, #1
   13f74:	e1510003 	cmp	r1, r3
   13f78:	e5852ef4 	str	r2, [r5, #3828]	; 0xef4
   13f7c:	e5c53eec 	strb	r3, [r5, #3820]	; 0xeec
   13f80:	b5853ef0 	strlt	r3, [r5, #3824]	; 0xef0
   13f84:	eaffffbd 	b	13e80 <McTerminal::dispChar(unsigned char)+0x194>
   13f88:	e1a03001 	mov	r3, r1
   13f8c:	e1a01000 	mov	r1, r0
   13f90:	e3a00000 	mov	r0, #0
   13f94:	ebffe101 	bl	c3a0 <wgfx_putc>
   13f98:	e5950ef0 	ldr	r0, [r5, #3824]	; 0xef0
   13f9c:	e5952ef4 	ldr	r2, [r5, #3828]	; 0xef4
   13fa0:	e594c004 	ldr	ip, [r4, #4]
   13fa4:	eaffffaa 	b	13e54 <McTerminal::dispChar(unsigned char)+0x168>
   13fa8:	e5951ef0 	ldr	r1, [r5, #3824]	; 0xef0
   13fac:	e5952ef4 	ldr	r2, [r5, #3828]	; 0xef4
   13fb0:	e5903004 	ldr	r3, [r0, #4]
   13fb4:	e0800001 	add	r0, r0, r1
   13fb8:	e0230293 	mla	r3, r3, r2, r0
   13fbc:	e3a00000 	mov	r0, #0
   13fc0:	e5d3300c 	ldrb	r3, [r3, #12]
   13fc4:	ebffe0f5 	bl	c3a0 <wgfx_putc>
   13fc8:	eaffff71 	b	13d94 <McTerminal::dispChar(unsigned char)+0xa8>
   13fcc:	e046700c 	sub	r7, r6, ip
   13fd0:	e284000c 	add	r0, r4, #12
   13fd4:	e1a02007 	mov	r2, r7
   13fd8:	e080100c 	add	r1, r0, ip
   13fdc:	eb00601a 	bl	2c04c <memcpy>
   13fe0:	e1570006 	cmp	r7, r6
   13fe4:	aa000004 	bge	13ffc <McTerminal::dispChar(unsigned char)+0x310>
   13fe8:	e287000c 	add	r0, r7, #12
   13fec:	e0462007 	sub	r2, r6, r7
   13ff0:	e0840000 	add	r0, r4, r0
   13ff4:	e3a01020 	mov	r1, #32
   13ff8:	eb006057 	bl	2c15c <memset>
   13ffc:	e3a02000 	mov	r2, #0
   14000:	e5953ef4 	ldr	r3, [r5, #3828]	; 0xef4
   14004:	e5951ef0 	ldr	r1, [r5, #3824]	; 0xef0
   14008:	e2433001 	sub	r3, r3, #1
   1400c:	e1510002 	cmp	r1, r2
   14010:	e5853ef4 	str	r3, [r5, #3828]	; 0xef4
   14014:	e5c52eec 	strb	r2, [r5, #3820]	; 0xeec
   14018:	b5852ef0 	strlt	r2, [r5, #3824]	; 0xef0
   1401c:	eaffff55 	b	13d78 <McTerminal::dispChar(unsigned char)+0x8c>
   14020:	e0467001 	sub	r7, r6, r1
   14024:	e284000c 	add	r0, r4, #12
   14028:	e1a02007 	mov	r2, r7
   1402c:	e0801001 	add	r1, r0, r1
   14030:	eb006005 	bl	2c04c <memcpy>
   14034:	e1560007 	cmp	r6, r7
   14038:	da000004 	ble	14050 <McTerminal::dispChar(unsigned char)+0x364>
   1403c:	e287000c 	add	r0, r7, #12
   14040:	e0462007 	sub	r2, r6, r7
   14044:	e0840000 	add	r0, r4, r0
   14048:	e3a01020 	mov	r1, #32
   1404c:	eb006042 	bl	2c15c <memset>
   14050:	e3a02000 	mov	r2, #0
   14054:	e5953ef0 	ldr	r3, [r5, #3824]	; 0xef0
   14058:	e5950ef4 	ldr	r0, [r5, #3828]	; 0xef4
   1405c:	e1530002 	cmp	r3, r2
   14060:	e2400001 	sub	r0, r0, #1
   14064:	e5850ef4 	str	r0, [r5, #3828]	; 0xef4
   14068:	e5c52eec 	strb	r2, [r5, #3820]	; 0xeec
   1406c:	b5852ef0 	strlt	r2, [r5, #3824]	; 0xef0
   14070:	b1a03002 	movlt	r3, r2
   14074:	e5941004 	ldr	r1, [r4, #4]
   14078:	eaffff53 	b	13dcc <McTerminal::dispChar(unsigned char)+0xe0>

0001407c <McTerminal::displayRefresh()>:
   1407c:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   14080:	e24dd008 	sub	sp, sp, #8
   14084:	e1a06000 	mov	r6, r0
   14088:	ebfff749 	bl	11db4 <McManager::getNumCharsReceivedFromHost()>
   1408c:	e2504000 	subs	r4, r0, #0
   14090:	1a000022 	bne	14120 <McTerminal::displayRefresh()+0xa4>
   14094:	e2868a02 	add	r8, r6, #8192	; 0x2000
   14098:	e3a02001 	mov	r2, #1
   1409c:	e5d83ef8 	ldrb	r3, [r8, #3832]	; 0xef8
   140a0:	e5c82eec 	strb	r2, [r8, #3820]	; 0xeec
   140a4:	e3530000 	cmp	r3, #0
   140a8:	1a000001 	bne	140b4 <McTerminal::displayRefresh()+0x38>
   140ac:	e28dd008 	add	sp, sp, #8
   140b0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   140b4:	eb000bc2 	bl	16fc4 <micros>
   140b8:	e5982f00 	ldr	r2, [r8, #3840]	; 0xf00
   140bc:	e5981efc 	ldr	r1, [r8, #3836]	; 0xefc
   140c0:	e0623282 	rsb	r3, r2, r2, lsl #5
   140c4:	e0822103 	add	r2, r2, r3, lsl #2
   140c8:	e1a02182 	lsl	r2, r2, #3
   140cc:	eb000bd1 	bl	17018 <isTimeout>
   140d0:	e3500000 	cmp	r0, #0
   140d4:	0afffff4 	beq	140ac <McTerminal::displayRefresh()+0x30>
   140d8:	e5d80f04 	ldrb	r0, [r8, #3844]	; 0xf04
   140dc:	e5981ef0 	ldr	r1, [r8, #3824]	; 0xef0
   140e0:	e3500000 	cmp	r0, #0
   140e4:	15963004 	ldrne	r3, [r6, #4]
   140e8:	e5982ef4 	ldr	r2, [r8, #3828]	; 0xef4
   140ec:	10866001 	addne	r6, r6, r1
   140f0:	10266293 	mlane	r6, r3, r2, r6
   140f4:	05d83f05 	ldrbeq	r3, [r8, #3845]	; 0xf05
   140f8:	15d6300c 	ldrbne	r3, [r6, #12]
   140fc:	13a00000 	movne	r0, #0
   14100:	ebffe0a6 	bl	c3a0 <wgfx_putc>
   14104:	e5d83f04 	ldrb	r3, [r8, #3844]	; 0xf04
   14108:	e2233001 	eor	r3, r3, #1
   1410c:	e5c83f04 	strb	r3, [r8, #3844]	; 0xf04
   14110:	eb000bab 	bl	16fc4 <micros>
   14114:	e5880efc 	str	r0, [r8, #3836]	; 0xefc
   14118:	e28dd008 	add	sp, sp, #8
   1411c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   14120:	e2840001 	add	r0, r4, #1
   14124:	ebffdb45 	bl	ae40 <nmalloc_malloc>
   14128:	e3500000 	cmp	r0, #0
   1412c:	e58d0004 	str	r0, [sp, #4]
   14130:	0affffd7 	beq	14094 <McTerminal::displayRefresh()+0x18>
   14134:	e1a01004 	mov	r1, r4
   14138:	ebfff721 	bl	11dc4 <McManager::getCharsReceivedFromHost(unsigned char*, int)>
   1413c:	e2505000 	subs	r5, r0, #0
   14140:	da000007 	ble	14164 <McTerminal::displayRefresh()+0xe8>
   14144:	e3a04000 	mov	r4, #0
   14148:	e59d3004 	ldr	r3, [sp, #4]
   1414c:	e1a00006 	mov	r0, r6
   14150:	e7d31004 	ldrb	r1, [r3, r4]
   14154:	e2844001 	add	r4, r4, #1
   14158:	ebfffee3 	bl	13cec <McTerminal::dispChar(unsigned char)>
   1415c:	e1550004 	cmp	r5, r4
   14160:	1afffff8 	bne	14148 <McTerminal::displayRefresh()+0xcc>
   14164:	e28d0004 	add	r0, sp, #4
   14168:	ebffdb71 	bl	af34 <nmalloc_free>
   1416c:	e5963008 	ldr	r3, [r6, #8]
   14170:	e3530000 	cmp	r3, #0
   14174:	daffffc6 	ble	14094 <McTerminal::displayRefresh()+0x18>
   14178:	e3a07000 	mov	r7, #0
   1417c:	e5962004 	ldr	r2, [r6, #4]
   14180:	e2868a02 	add	r8, r6, #8192	; 0x2000
   14184:	e3520000 	cmp	r2, #0
   14188:	da000016 	ble	141e8 <McTerminal::displayRefresh()+0x16c>
   1418c:	e3a05000 	mov	r5, #0
   14190:	e0245297 	mla	r4, r7, r2, r5
   14194:	e5d83eec 	ldrb	r3, [r8, #3820]	; 0xeec
   14198:	e0864004 	add	r4, r6, r4
   1419c:	e3530000 	cmp	r3, #0
   141a0:	e2841d5d 	add	r1, r4, #5952	; 0x1740
   141a4:	e5d4300c 	ldrb	r3, [r4, #12]
   141a8:	0a000002 	beq	141b8 <McTerminal::displayRefresh()+0x13c>
   141ac:	e5d1103c 	ldrb	r1, [r1, #60]	; 0x3c
   141b0:	e1510003 	cmp	r1, r3
   141b4:	0a000007 	beq	141d8 <McTerminal::displayRefresh()+0x15c>
   141b8:	e1a02007 	mov	r2, r7
   141bc:	e1a01005 	mov	r1, r5
   141c0:	e3a00000 	mov	r0, #0
   141c4:	ebffe075 	bl	c3a0 <wgfx_putc>
   141c8:	e5d4300c 	ldrb	r3, [r4, #12]
   141cc:	e2844d5d 	add	r4, r4, #5952	; 0x1740
   141d0:	e5c4303c 	strb	r3, [r4, #60]	; 0x3c
   141d4:	e5962004 	ldr	r2, [r6, #4]
   141d8:	e2855001 	add	r5, r5, #1
   141dc:	e1550002 	cmp	r5, r2
   141e0:	baffffea 	blt	14190 <McTerminal::displayRefresh()+0x114>
   141e4:	e5963008 	ldr	r3, [r6, #8]
   141e8:	e2877001 	add	r7, r7, #1
   141ec:	e1570003 	cmp	r7, r3
   141f0:	baffffe3 	blt	14184 <McTerminal::displayRefresh()+0x108>
   141f4:	eaffffa7 	b	14098 <McTerminal::displayRefresh()+0x1c>

000141f8 <McTerminal::vscrollBuffer(int)>:
   141f8:	e92d4070 	push	{r4, r5, r6, lr}
   141fc:	e5903008 	ldr	r3, [r0, #8]
   14200:	e590c004 	ldr	ip, [r0, #4]
   14204:	e1530001 	cmp	r3, r1
   14208:	e1a04000 	mov	r4, r0
   1420c:	e006039c 	mul	r6, ip, r3
   14210:	ca00000a 	bgt	14240 <McTerminal::vscrollBuffer(int)+0x48>
   14214:	e3560000 	cmp	r6, #0
   14218:	da000003 	ble	1422c <McTerminal::vscrollBuffer(int)+0x34>
   1421c:	e1a02006 	mov	r2, r6
   14220:	e3a01020 	mov	r1, #32
   14224:	e280000c 	add	r0, r0, #12
   14228:	eb005fcb 	bl	2c15c <memset>
   1422c:	e3a03000 	mov	r3, #0
   14230:	e2844a02 	add	r4, r4, #8192	; 0x2000
   14234:	e5843ef0 	str	r3, [r4, #3824]	; 0xef0
   14238:	e5843ef4 	str	r3, [r4, #3828]	; 0xef4
   1423c:	e8bd8070 	pop	{r4, r5, r6, pc}
   14240:	e0433001 	sub	r3, r3, r1
   14244:	e005039c 	mul	r5, ip, r3
   14248:	e280000c 	add	r0, r0, #12
   1424c:	e1a02005 	mov	r2, r5
   14250:	e021019c 	mla	r1, ip, r1, r0
   14254:	eb005f7c 	bl	2c04c <memcpy>
   14258:	e1550006 	cmp	r5, r6
   1425c:	aa000004 	bge	14274 <McTerminal::vscrollBuffer(int)+0x7c>
   14260:	e285000c 	add	r0, r5, #12
   14264:	e0462005 	sub	r2, r6, r5
   14268:	e0840000 	add	r0, r4, r0
   1426c:	e3a01020 	mov	r1, #32
   14270:	eb005fb9 	bl	2c15c <memset>
   14274:	e3a03000 	mov	r3, #0
   14278:	e2844a02 	add	r4, r4, #8192	; 0x2000
   1427c:	e5c43eec 	strb	r3, [r4, #3820]	; 0xeec
   14280:	e8bd8070 	pop	{r4, r5, r6, pc}

00014284 <McTerminal::moveAndCheckCurPos(int, int, int, int)>:
   14284:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14288:	e1a07000 	mov	r7, r0
   1428c:	e2805a02 	add	r5, r0, #8192	; 0x2000
   14290:	e5d50f04 	ldrb	r0, [r5, #3844]	; 0xf04
   14294:	e1a04001 	mov	r4, r1
   14298:	e3500000 	cmp	r0, #0
   1429c:	e1a08002 	mov	r8, r2
   142a0:	e1a09003 	mov	r9, r3
   142a4:	e597c004 	ldr	ip, [r7, #4]
   142a8:	e59d6020 	ldr	r6, [sp, #32]
   142ac:	1a000022 	bne	1433c <McTerminal::moveAndCheckCurPos(int, int, int, int)+0xb8>
   142b0:	e3540000 	cmp	r4, #0
   142b4:	b5954ef0 	ldrlt	r4, [r5, #3824]	; 0xef0
   142b8:	a5854ef0 	strge	r4, [r5, #3824]	; 0xef0
   142bc:	e3580000 	cmp	r8, #0
   142c0:	b5958ef4 	ldrlt	r8, [r5, #3828]	; 0xef4
   142c4:	e0843009 	add	r3, r4, r9
   142c8:	e1c33fc3 	bic	r3, r3, r3, asr #31
   142cc:	e0862008 	add	r2, r6, r8
   142d0:	e153000c 	cmp	r3, ip
   142d4:	e5853ef0 	str	r3, [r5, #3824]	; 0xef0
   142d8:	e5852ef4 	str	r2, [r5, #3828]	; 0xef4
   142dc:	a3a03000 	movge	r3, #0
   142e0:	a2822001 	addge	r2, r2, #1
   142e4:	a5852ef4 	strge	r2, [r5, #3828]	; 0xef4
   142e8:	a5853ef0 	strge	r3, [r5, #3824]	; 0xef0
   142ec:	e5973008 	ldr	r3, [r7, #8]
   142f0:	e1530002 	cmp	r3, r2
   142f4:	da000004 	ble	1430c <McTerminal::moveAndCheckCurPos(int, int, int, int)+0x88>
   142f8:	e3520000 	cmp	r2, #0
   142fc:	a8bd87f0 	popge	{r4, r5, r6, r7, r8, r9, sl, pc}
   14300:	e3a03000 	mov	r3, #0
   14304:	e5853ef4 	str	r3, [r5, #3828]	; 0xef4
   14308:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1430c:	e3530001 	cmp	r3, #1
   14310:	e004039c 	mul	r4, ip, r3
   14314:	ca000011 	bgt	14360 <McTerminal::moveAndCheckCurPos(int, int, int, int)+0xdc>
   14318:	e3540000 	cmp	r4, #0
   1431c:	da000003 	ble	14330 <McTerminal::moveAndCheckCurPos(int, int, int, int)+0xac>
   14320:	e1a02004 	mov	r2, r4
   14324:	e287000c 	add	r0, r7, #12
   14328:	e3a01020 	mov	r1, #32
   1432c:	eb005f8a 	bl	2c15c <memset>
   14330:	e3a03000 	mov	r3, #0
   14334:	e5853ef0 	str	r3, [r5, #3824]	; 0xef0
   14338:	eafffff0 	b	14300 <McTerminal::moveAndCheckCurPos(int, int, int, int)+0x7c>
   1433c:	e5951ef0 	ldr	r1, [r5, #3824]	; 0xef0
   14340:	e5952ef4 	ldr	r2, [r5, #3828]	; 0xef4
   14344:	e0873001 	add	r3, r7, r1
   14348:	e02c329c 	mla	ip, ip, r2, r3
   1434c:	e3a00000 	mov	r0, #0
   14350:	e5dc300c 	ldrb	r3, [ip, #12]
   14354:	ebffe011 	bl	c3a0 <wgfx_putc>
   14358:	e597c004 	ldr	ip, [r7, #4]
   1435c:	eaffffd3 	b	142b0 <McTerminal::moveAndCheckCurPos(int, int, int, int)+0x2c>
   14360:	e044600c 	sub	r6, r4, ip
   14364:	e287000c 	add	r0, r7, #12
   14368:	e1a02006 	mov	r2, r6
   1436c:	e080100c 	add	r1, r0, ip
   14370:	eb005f35 	bl	2c04c <memcpy>
   14374:	e1560004 	cmp	r6, r4
   14378:	aa000004 	bge	14390 <McTerminal::moveAndCheckCurPos(int, int, int, int)+0x10c>
   1437c:	e286000c 	add	r0, r6, #12
   14380:	e0442006 	sub	r2, r4, r6
   14384:	e0870000 	add	r0, r7, r0
   14388:	e3a01020 	mov	r1, #32
   1438c:	eb005f72 	bl	2c15c <memset>
   14390:	e3a03000 	mov	r3, #0
   14394:	e5952ef4 	ldr	r2, [r5, #3828]	; 0xef4
   14398:	e5951ef0 	ldr	r1, [r5, #3824]	; 0xef0
   1439c:	e2422001 	sub	r2, r2, #1
   143a0:	e1510003 	cmp	r1, r3
   143a4:	b5853ef0 	strlt	r3, [r5, #3824]	; 0xef0
   143a8:	e3520000 	cmp	r2, #0
   143ac:	e5852ef4 	str	r2, [r5, #3828]	; 0xef4
   143b0:	e5c53eec 	strb	r3, [r5, #3820]	; 0xeec
   143b4:	a8bd87f0 	popge	{r4, r5, r6, r7, r8, r9, sl, pc}
   143b8:	eaffffd0 	b	14300 <McTerminal::moveAndCheckCurPos(int, int, int, int)+0x7c>

000143bc <McZXSpectrum::keyHandler(unsigned char, unsigned char const*)>:
   143bc:	e3e03000 	mvn	r3, #0
   143c0:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   143c4:	e59fc238 	ldr	ip, [pc, #568]	; 14604 <McZXSpectrum::keyHandler(unsigned char, unsigned char const*)+0x248>
   143c8:	e24dd014 	sub	sp, sp, #20
   143cc:	e58c3000 	str	r3, [ip]
   143d0:	e58c3004 	str	r3, [ip, #4]
   143d4:	e5d2a000 	ldrb	sl, [r2]
   143d8:	e5d29001 	ldrb	r9, [r2, #1]
   143dc:	e24a302a 	sub	r3, sl, #42	; 0x2a
   143e0:	e16f3f13 	clz	r3, r3
   143e4:	e5d28002 	ldrb	r8, [r2, #2]
   143e8:	e359002a 	cmp	r9, #42	; 0x2a
   143ec:	e5d27003 	ldrb	r7, [r2, #3]
   143f0:	e1a032a3 	lsr	r3, r3, #5
   143f4:	e5d26004 	ldrb	r6, [r2, #4]
   143f8:	03a03001 	moveq	r3, #1
   143fc:	e358002a 	cmp	r8, #42	; 0x2a
   14400:	03a03001 	moveq	r3, #1
   14404:	e5d25005 	ldrb	r5, [r2, #5]
   14408:	e357002a 	cmp	r7, #42	; 0x2a
   1440c:	03a03001 	moveq	r3, #1
   14410:	e356002a 	cmp	r6, #42	; 0x2a
   14414:	03a03001 	moveq	r3, #1
   14418:	e355002a 	cmp	r5, #42	; 0x2a
   1441c:	03a03001 	moveq	r3, #1
   14420:	e59f01e0 	ldr	r0, [pc, #480]	; 14608 <McZXSpectrum::keyHandler(unsigned char, unsigned char const*)+0x24c>
   14424:	e58d300c 	str	r3, [sp, #12]
   14428:	e58d1008 	str	r1, [sp, #8]
   1442c:	e1a0300c 	mov	r3, ip
   14430:	e58dc004 	str	ip, [sp, #4]
   14434:	ea00000a 	b	14464 <McZXSpectrum::keyHandler(unsigned char, unsigned char const*)+0xa8>
   14438:	e1510000 	cmp	r1, r0
   1443c:	e59d1004 	ldr	r1, [sp, #4]
   14440:	e4c13001 	strb	r3, [r1], #1
   14444:	e58d1004 	str	r1, [sp, #4]
   14448:	0a000051 	beq	14594 <McZXSpectrum::keyHandler(unsigned char, unsigned char const*)+0x1d8>
   1444c:	e5d2a000 	ldrb	sl, [r2]
   14450:	e5d29001 	ldrb	r9, [r2, #1]
   14454:	e5d28002 	ldrb	r8, [r2, #2]
   14458:	e5d27003 	ldrb	r7, [r2, #3]
   1445c:	e5d26004 	ldrb	r6, [r2, #4]
   14460:	e5d25005 	ldrb	r5, [r2, #5]
   14464:	e590b000 	ldr	fp, [r0]
   14468:	e5904004 	ldr	r4, [r0, #4]
   1446c:	e15b000a 	cmp	fp, sl
   14470:	03a010fc 	moveq	r1, #252	; 0xfc
   14474:	03a030fe 	moveq	r3, #254	; 0xfe
   14478:	13a010fd 	movne	r1, #253	; 0xfd
   1447c:	13a030ff 	movne	r3, #255	; 0xff
   14480:	e154000a 	cmp	r4, sl
   14484:	01a03001 	moveq	r3, r1
   14488:	e590e008 	ldr	lr, [r0, #8]
   1448c:	e590c00c 	ldr	ip, [r0, #12]
   14490:	e5901010 	ldr	r1, [r0, #16]
   14494:	e15e000a 	cmp	lr, sl
   14498:	03c33004 	biceq	r3, r3, #4
   1449c:	e15c000a 	cmp	ip, sl
   144a0:	03c33008 	biceq	r3, r3, #8
   144a4:	e151000a 	cmp	r1, sl
   144a8:	03c33010 	biceq	r3, r3, #16
   144ac:	e15b0009 	cmp	fp, r9
   144b0:	03c33001 	biceq	r3, r3, #1
   144b4:	e1540009 	cmp	r4, r9
   144b8:	03c33002 	biceq	r3, r3, #2
   144bc:	e15e0009 	cmp	lr, r9
   144c0:	03c33004 	biceq	r3, r3, #4
   144c4:	e15c0009 	cmp	ip, r9
   144c8:	03c33008 	biceq	r3, r3, #8
   144cc:	e1510009 	cmp	r1, r9
   144d0:	03c33010 	biceq	r3, r3, #16
   144d4:	e158000b 	cmp	r8, fp
   144d8:	03c33001 	biceq	r3, r3, #1
   144dc:	e1580004 	cmp	r8, r4
   144e0:	03c33002 	biceq	r3, r3, #2
   144e4:	e15e0008 	cmp	lr, r8
   144e8:	03c33004 	biceq	r3, r3, #4
   144ec:	e15c0008 	cmp	ip, r8
   144f0:	03c33008 	biceq	r3, r3, #8
   144f4:	e1510008 	cmp	r1, r8
   144f8:	03c33010 	biceq	r3, r3, #16
   144fc:	e15b0007 	cmp	fp, r7
   14500:	03c33001 	biceq	r3, r3, #1
   14504:	e1540007 	cmp	r4, r7
   14508:	03c33002 	biceq	r3, r3, #2
   1450c:	e15e0007 	cmp	lr, r7
   14510:	03c33004 	biceq	r3, r3, #4
   14514:	e15c0007 	cmp	ip, r7
   14518:	03c33008 	biceq	r3, r3, #8
   1451c:	e1510007 	cmp	r1, r7
   14520:	03c33010 	biceq	r3, r3, #16
   14524:	e15b0006 	cmp	fp, r6
   14528:	03c33001 	biceq	r3, r3, #1
   1452c:	e1540006 	cmp	r4, r6
   14530:	03c33002 	biceq	r3, r3, #2
   14534:	e15e0006 	cmp	lr, r6
   14538:	03c33004 	biceq	r3, r3, #4
   1453c:	e15c0006 	cmp	ip, r6
   14540:	03c33008 	biceq	r3, r3, #8
   14544:	e1510006 	cmp	r1, r6
   14548:	03c33010 	biceq	r3, r3, #16
   1454c:	e155000b 	cmp	r5, fp
   14550:	03c33001 	biceq	r3, r3, #1
   14554:	e1550004 	cmp	r5, r4
   14558:	03c33002 	biceq	r3, r3, #2
   1455c:	e15e0005 	cmp	lr, r5
   14560:	03c33004 	biceq	r3, r3, #4
   14564:	e15c0005 	cmp	ip, r5
   14568:	03c33008 	biceq	r3, r3, #8
   1456c:	e1510005 	cmp	r1, r5
   14570:	e2800014 	add	r0, r0, #20
   14574:	e59f1090 	ldr	r1, [pc, #144]	; 1460c <McZXSpectrum::keyHandler(unsigned char, unsigned char const*)+0x250>
   14578:	1affffae 	bne	14438 <McZXSpectrum::keyHandler(unsigned char, unsigned char const*)+0x7c>
   1457c:	e1510000 	cmp	r1, r0
   14580:	e59d1004 	ldr	r1, [sp, #4]
   14584:	e3c33010 	bic	r3, r3, #16
   14588:	e4c13001 	strb	r3, [r1], #1
   1458c:	e58d1004 	str	r1, [sp, #4]
   14590:	1affffad 	bne	1444c <McZXSpectrum::keyHandler(unsigned char, unsigned char const*)+0x90>
   14594:	e59d300c 	ldr	r3, [sp, #12]
   14598:	e3530000 	cmp	r3, #0
   1459c:	1a000009 	bne	145c8 <McZXSpectrum::keyHandler(unsigned char, unsigned char const*)+0x20c>
   145a0:	e59d3008 	ldr	r3, [sp, #8]
   145a4:	e3130022 	tst	r3, #34	; 0x22
   145a8:	1a00000f 	bne	145ec <McZXSpectrum::keyHandler(unsigned char, unsigned char const*)+0x230>
   145ac:	e3130011 	tst	r3, #17
   145b0:	159f204c 	ldrne	r2, [pc, #76]	; 14604 <McZXSpectrum::keyHandler(unsigned char, unsigned char const*)+0x248>
   145b4:	15d23007 	ldrbne	r3, [r2, #7]
   145b8:	13c33002 	bicne	r3, r3, #2
   145bc:	15c23007 	strbne	r3, [r2, #7]
   145c0:	e28dd014 	add	sp, sp, #20
   145c4:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   145c8:	e59f1034 	ldr	r1, [pc, #52]	; 14604 <McZXSpectrum::keyHandler(unsigned char, unsigned char const*)+0x248>
   145cc:	e5d12000 	ldrb	r2, [r1]
   145d0:	e5d13004 	ldrb	r3, [r1, #4]
   145d4:	e3c22001 	bic	r2, r2, #1
   145d8:	e3c33001 	bic	r3, r3, #1
   145dc:	e5c13004 	strb	r3, [r1, #4]
   145e0:	e5c12000 	strb	r2, [r1]
   145e4:	e59d3008 	ldr	r3, [sp, #8]
   145e8:	eaffffef 	b	145ac <McZXSpectrum::keyHandler(unsigned char, unsigned char const*)+0x1f0>
   145ec:	e59f2010 	ldr	r2, [pc, #16]	; 14604 <McZXSpectrum::keyHandler(unsigned char, unsigned char const*)+0x248>
   145f0:	e5d23000 	ldrb	r3, [r2]
   145f4:	e3c33001 	bic	r3, r3, #1
   145f8:	e5c23000 	strb	r3, [r2]
   145fc:	e59d3008 	ldr	r3, [sp, #8]
   14600:	eaffffe9 	b	145ac <McZXSpectrum::keyHandler(unsigned char, unsigned char const*)+0x1f0>
   14604:	00046a64 	.word	0x00046a64
   14608:	0002f3c8 	.word	0x0002f3c8
   1460c:	0002f468 	.word	0x0002f468

00014610 <McZXSpectrum::enable(int)>:
   14610:	e3a03000 	mov	r3, #0
   14614:	e92d4010 	push	{r4, lr}
   14618:	e59f4034 	ldr	r4, [pc, #52]	; 14654 <McZXSpectrum::enable(int)+0x44>
   1461c:	e2800a01 	add	r0, r0, #4096	; 0x1000
   14620:	e5c03b04 	strb	r3, [r0, #2820]	; 0xb04
   14624:	e3a01005 	mov	r1, #5
   14628:	e594004c 	ldr	r0, [r4, #76]	; 0x4c
   1462c:	e59f2024 	ldr	r2, [pc, #36]	; 14658 <McZXSpectrum::enable(int)+0x48>
   14630:	ebffd45f 	bl	97b4 <LogWrite>
   14634:	e59f0020 	ldr	r0, [pc, #32]	; 1465c <McZXSpectrum::enable(int)+0x4c>
   14638:	eb001263 	bl	18fcc <BusAccess::accessCallbackAdd(unsigned long (*)(unsigned long, unsigned long, unsigned long))>
   1463c:	e5d41039 	ldrb	r1, [r4, #57]	; 0x39
   14640:	e5d40038 	ldrb	r0, [r4, #56]	; 0x38
   14644:	e3510000 	cmp	r1, #0
   14648:	05d4103a 	ldrbeq	r1, [r4, #58]	; 0x3a
   1464c:	e8bd4010 	pop	{r4, lr}
   14650:	ea001292 	b	190a0 <BusAccess::waitSetup(bool, bool)>
   14654:	0004223c 	.word	0x0004223c
   14658:	0002f21c 	.word	0x0002f21c
   1465c:	000148bc 	.word	0x000148bc

00014660 <McZXSpectrum::disable()>:
   14660:	e59f3024 	ldr	r3, [pc, #36]	; 1468c <McZXSpectrum::disable()+0x2c>
   14664:	e92d4010 	push	{r4, lr}
   14668:	e593004c 	ldr	r0, [r3, #76]	; 0x4c
   1466c:	e59f201c 	ldr	r2, [pc, #28]	; 14690 <McZXSpectrum::disable()+0x30>
   14670:	e3a01005 	mov	r1, #5
   14674:	ebffd44e 	bl	97b4 <LogWrite>
   14678:	e3a01000 	mov	r1, #0
   1467c:	e1a00001 	mov	r0, r1
   14680:	eb001286 	bl	190a0 <BusAccess::waitSetup(bool, bool)>
   14684:	e8bd4010 	pop	{r4, lr}
   14688:	ea001253 	b	18fdc <BusAccess::accessCallbackRemove()>
   1468c:	0004223c 	.word	0x0004223c
   14690:	0002f228 	.word	0x0002f228

00014694 <McZXSpectrum::displayRefresh()>:
   14694:	e3a03000 	mov	r3, #0
   14698:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1469c:	e24ddc1b 	sub	sp, sp, #6912	; 0x1b00
   146a0:	e24dd024 	sub	sp, sp, #36	; 0x24
   146a4:	e28d4020 	add	r4, sp, #32
   146a8:	e58d3000 	str	r3, [sp]
   146ac:	e1a0a000 	mov	sl, r0
   146b0:	e1a01004 	mov	r1, r4
   146b4:	e3a03001 	mov	r3, #1
   146b8:	e3a02c1b 	mov	r2, #6912	; 0x1b00
   146bc:	e3a00901 	mov	r0, #16384	; 0x4000
   146c0:	ebfff758 	bl	12428 <McManager::blockRead(unsigned long, unsigned char*, unsigned long, bool, bool)>
   146c4:	e3500000 	cmp	r0, #0
   146c8:	0a000070 	beq	14890 <McZXSpectrum::displayRefresh()+0x1fc>
   146cc:	e28a3b06 	add	r3, sl, #6144	; 0x1800
   146d0:	e2831004 	add	r1, r3, #4
   146d4:	e28d2b06 	add	r2, sp, #6144	; 0x1800
   146d8:	e28acc1b 	add	ip, sl, #6912	; 0x1b00
   146dc:	e2822020 	add	r2, r2, #32
   146e0:	e58d101c 	str	r1, [sp, #28]
   146e4:	e2833003 	add	r3, r3, #3
   146e8:	e28cc003 	add	ip, ip, #3
   146ec:	ea000001 	b	146f8 <McZXSpectrum::displayRefresh()+0x64>
   146f0:	e15c0003 	cmp	ip, r3
   146f4:	0a00006a 	beq	148a4 <McZXSpectrum::displayRefresh()+0x210>
   146f8:	e4d21001 	ldrb	r1, [r2], #1
   146fc:	e5f30001 	ldrb	r0, [r3, #1]!
   14700:	e1500001 	cmp	r0, r1
   14704:	0afffff9 	beq	146f0 <McZXSpectrum::displayRefresh()+0x5c>
   14708:	e3a05000 	mov	r5, #0
   1470c:	e28a3a01 	add	r3, sl, #4096	; 0x1000
   14710:	e58d300c 	str	r3, [sp, #12]
   14714:	e5c35b04 	strb	r5, [r3, #2820]	; 0xb04
   14718:	e59f3194 	ldr	r3, [pc, #404]	; 148b4 <McZXSpectrum::displayRefresh()+0x220>
   1471c:	e28aa004 	add	sl, sl, #4
   14720:	e593000c 	ldr	r0, [r3, #12]
   14724:	e5931014 	ldr	r1, [r3, #20]
   14728:	e3500000 	cmp	r0, #0
   1472c:	e2803007 	add	r3, r0, #7
   14730:	a1a03000 	movge	r3, r0
   14734:	e1a031c3 	asr	r3, r3, #3
   14738:	e58d3014 	str	r3, [sp, #20]
   1473c:	eb00654d 	bl	2dc78 <__divsi3>
   14740:	e2643001 	rsb	r3, r4, #1
   14744:	e58d0018 	str	r0, [sp, #24]
   14748:	e2448001 	sub	r8, r4, #1
   1474c:	e58d3010 	str	r3, [sp, #16]
   14750:	e3550000 	cmp	r5, #0
   14754:	e0834008 	add	r4, r3, r8
   14758:	e5f83001 	ldrb	r3, [r8, #1]!
   1475c:	0a000002 	beq	1476c <McZXSpectrum::displayRefresh()+0xd8>
   14760:	e5da2000 	ldrb	r2, [sl]
   14764:	e1520003 	cmp	r2, r3
   14768:	0a000038 	beq	14850 <McZXSpectrum::displayRefresh()+0x1bc>
   1476c:	e59d5018 	ldr	r5, [sp, #24]
   14770:	e5ca3000 	strb	r3, [sl]
   14774:	e1a01005 	mov	r1, r5
   14778:	e1a00004 	mov	r0, r4
   1477c:	e58d3008 	str	r3, [sp, #8]
   14780:	eb006534 	bl	2dc58 <__aeabi_uidivmod>
   14784:	e1a021c0 	asr	r2, r0, #3
   14788:	e28d3eb2 	add	r3, sp, #2848	; 0xb20
   1478c:	e2022018 	and	r2, r2, #24
   14790:	e2000007 	and	r0, r0, #7
   14794:	e0831001 	add	r1, r3, r1
   14798:	e1800002 	orr	r0, r0, r2
   1479c:	e0221095 	mla	r2, r5, r0, r1
   147a0:	e1a00004 	mov	r0, r4
   147a4:	e59d1014 	ldr	r1, [sp, #20]
   147a8:	e5d24d00 	ldrb	r4, [r2, #3328]	; 0xd00
   147ac:	eb006529 	bl	2dc58 <__aeabi_uidivmod>
   147b0:	e1a071c4 	asr	r7, r4, #3
   147b4:	e59f30fc 	ldr	r3, [pc, #252]	; 148b8 <McZXSpectrum::displayRefresh()+0x224>
   147b8:	e1a06180 	lsl	r6, r0, #3
   147bc:	e207200f 	and	r2, r7, #15
   147c0:	e204c007 	and	ip, r4, #7
   147c4:	e2077008 	and	r7, r7, #8
   147c8:	e1a04181 	lsl	r4, r1, #3
   147cc:	e2066038 	and	r6, r6, #56	; 0x38
   147d0:	e1a01d00 	lsl	r1, r0, #26
   147d4:	e0832102 	add	r2, r3, r2, lsl #2
   147d8:	e18c7007 	orr	r7, ip, r7
   147dc:	e1866ea1 	orr	r6, r6, r1, lsr #29
   147e0:	e20000c0 	and	r0, r0, #192	; 0xc0
   147e4:	e0837107 	add	r7, r3, r7, lsl #2
   147e8:	e3a05080 	mov	r5, #128	; 0x80
   147ec:	e592b0a0 	ldr	fp, [r2, #160]	; 0xa0
   147f0:	e1866000 	orr	r6, r6, r0
   147f4:	e2849008 	add	r9, r4, #8
   147f8:	e59d3008 	ldr	r3, [sp, #8]
   147fc:	ea000009 	b	14828 <McZXSpectrum::displayRefresh()+0x194>
   14800:	e1a01004 	mov	r1, r4
   14804:	e59730a0 	ldr	r3, [r7, #160]	; 0xa0
   14808:	e1a02006 	mov	r2, r6
   1480c:	e3a00000 	mov	r0, #0
   14810:	e2844001 	add	r4, r4, #1
   14814:	ebffdf2a 	bl	c4c4 <wgfxSetColourPixel>
   14818:	e1540009 	cmp	r4, r9
   1481c:	e1a050c5 	asr	r5, r5, #1
   14820:	0a00000a 	beq	14850 <McZXSpectrum::displayRefresh()+0x1bc>
   14824:	e5d83000 	ldrb	r3, [r8]
   14828:	e0130005 	ands	r0, r3, r5
   1482c:	1afffff3 	bne	14800 <McZXSpectrum::displayRefresh()+0x16c>
   14830:	e1a01004 	mov	r1, r4
   14834:	e1a0300b 	mov	r3, fp
   14838:	e1a02006 	mov	r2, r6
   1483c:	e2844001 	add	r4, r4, #1
   14840:	ebffdf1f 	bl	c4c4 <wgfxSetColourPixel>
   14844:	e1590004 	cmp	r9, r4
   14848:	e1a050c5 	asr	r5, r5, #1
   1484c:	1afffff4 	bne	14824 <McZXSpectrum::displayRefresh()+0x190>
   14850:	e28d3b06 	add	r3, sp, #6144	; 0x1800
   14854:	e283301f 	add	r3, r3, #31
   14858:	e1530008 	cmp	r3, r8
   1485c:	e28aa001 	add	sl, sl, #1
   14860:	159d300c 	ldrne	r3, [sp, #12]
   14864:	15d35b04 	ldrbne	r5, [r3, #2820]	; 0xb04
   14868:	159d3010 	ldrne	r3, [sp, #16]
   1486c:	1affffb7 	bne	14750 <McZXSpectrum::displayRefresh()+0xbc>
   14870:	e28d1b06 	add	r1, sp, #6144	; 0x1800
   14874:	e3a02c03 	mov	r2, #768	; 0x300
   14878:	e2811020 	add	r1, r1, #32
   1487c:	e59d001c 	ldr	r0, [sp, #28]
   14880:	eb005df1 	bl	2c04c <memcpy>
   14884:	e3a03001 	mov	r3, #1
   14888:	e59d200c 	ldr	r2, [sp, #12]
   1488c:	e5c23b04 	strb	r3, [r2, #2820]	; 0xb04
   14890:	e3e00000 	mvn	r0, #0
   14894:	ebfff3bc 	bl	1178c <McManager::targetIrq(int)>
   14898:	e28ddc1b 	add	sp, sp, #6912	; 0x1b00
   1489c:	e28dd024 	add	sp, sp, #36	; 0x24
   148a0:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   148a4:	e28a3a01 	add	r3, sl, #4096	; 0x1000
   148a8:	e58d300c 	str	r3, [sp, #12]
   148ac:	e5d35b04 	ldrb	r5, [r3, #2820]	; 0xb04
   148b0:	eaffff98 	b	14718 <McZXSpectrum::displayRefresh()+0x84>
   148b4:	0004223c 	.word	0x0004223c
   148b8:	0002f3c8 	.word	0x0002f3c8

000148bc <McZXSpectrum::memoryRequestCallback(unsigned long, unsigned long, unsigned long)>:
   148bc:	e92d4070 	push	{r4, r5, r6, lr}
   148c0:	e2123004 	ands	r3, r2, #4
   148c4:	e24dd008 	sub	sp, sp, #8
   148c8:	e1a06000 	mov	r6, r0
   148cc:	1a00002c 	bne	14984 <McZXSpectrum::memoryRequestCallback(unsigned long, unsigned long, unsigned long)+0xc8>
   148d0:	e3120001 	tst	r2, #1
   148d4:	0a000027 	beq	14978 <McZXSpectrum::memoryRequestCallback(unsigned long, unsigned long, unsigned long)+0xbc>
   148d8:	e3100001 	tst	r0, #1
   148dc:	1a000022 	bne	1496c <McZXSpectrum::memoryRequestCallback(unsigned long, unsigned long, unsigned long)+0xb0>
   148e0:	e3100c01 	tst	r0, #256	; 0x100
   148e4:	059f30e0 	ldreq	r3, [pc, #224]	; 149cc <McZXSpectrum::memoryRequestCallback(unsigned long, unsigned long, unsigned long)+0x110>
   148e8:	13a000ff 	movne	r0, #255	; 0xff
   148ec:	05d30000 	ldrbeq	r0, [r3]
   148f0:	e3160c02 	tst	r6, #512	; 0x200
   148f4:	059f30d0 	ldreq	r3, [pc, #208]	; 149cc <McZXSpectrum::memoryRequestCallback(unsigned long, unsigned long, unsigned long)+0x110>
   148f8:	05d33001 	ldrbeq	r3, [r3, #1]
   148fc:	00000003 	andeq	r0, r0, r3
   14900:	e3160b01 	tst	r6, #1024	; 0x400
   14904:	059f30c0 	ldreq	r3, [pc, #192]	; 149cc <McZXSpectrum::memoryRequestCallback(unsigned long, unsigned long, unsigned long)+0x110>
   14908:	05d33002 	ldrbeq	r3, [r3, #2]
   1490c:	00000003 	andeq	r0, r0, r3
   14910:	e3160b02 	tst	r6, #2048	; 0x800
   14914:	059f30b0 	ldreq	r3, [pc, #176]	; 149cc <McZXSpectrum::memoryRequestCallback(unsigned long, unsigned long, unsigned long)+0x110>
   14918:	05d33003 	ldrbeq	r3, [r3, #3]
   1491c:	00000003 	andeq	r0, r0, r3
   14920:	e3160a01 	tst	r6, #4096	; 0x1000
   14924:	059f30a0 	ldreq	r3, [pc, #160]	; 149cc <McZXSpectrum::memoryRequestCallback(unsigned long, unsigned long, unsigned long)+0x110>
   14928:	05d33004 	ldrbeq	r3, [r3, #4]
   1492c:	00000003 	andeq	r0, r0, r3
   14930:	e3160a02 	tst	r6, #8192	; 0x2000
   14934:	059f3090 	ldreq	r3, [pc, #144]	; 149cc <McZXSpectrum::memoryRequestCallback(unsigned long, unsigned long, unsigned long)+0x110>
   14938:	05d33005 	ldrbeq	r3, [r3, #5]
   1493c:	00000003 	andeq	r0, r0, r3
   14940:	e3160901 	tst	r6, #16384	; 0x4000
   14944:	059f3080 	ldreq	r3, [pc, #128]	; 149cc <McZXSpectrum::memoryRequestCallback(unsigned long, unsigned long, unsigned long)+0x110>
   14948:	05d33006 	ldrbeq	r3, [r3, #6]
   1494c:	00000003 	andeq	r0, r0, r3
   14950:	e3160902 	tst	r6, #32768	; 0x8000
   14954:	1a000008 	bne	1497c <McZXSpectrum::memoryRequestCallback(unsigned long, unsigned long, unsigned long)+0xc0>
   14958:	e59f306c 	ldr	r3, [pc, #108]	; 149cc <McZXSpectrum::memoryRequestCallback(unsigned long, unsigned long, unsigned long)+0x110>
   1495c:	e5d33007 	ldrb	r3, [r3, #7]
   14960:	e0000003 	and	r0, r0, r3
   14964:	e28dd008 	add	sp, sp, #8
   14968:	e8bd8070 	pop	{r4, r5, r6, pc}
   1496c:	e6efc070 	uxtb	ip, r0
   14970:	e35c001f 	cmp	ip, #31
   14974:	0a000011 	beq	149c0 <McZXSpectrum::memoryRequestCallback(unsigned long, unsigned long, unsigned long)+0x104>
   14978:	e3a00902 	mov	r0, #32768	; 0x8000
   1497c:	e28dd008 	add	sp, sp, #8
   14980:	e8bd8070 	pop	{r4, r5, r6, pc}
   14984:	e1a05001 	mov	r5, r1
   14988:	e1a04002 	mov	r4, r2
   1498c:	eb0015f4 	bl	1a164 <TargetDebug::get()>
   14990:	e3500000 	cmp	r0, #0
   14994:	0afffff7 	beq	14978 <McZXSpectrum::memoryRequestCallback(unsigned long, unsigned long, unsigned long)+0xbc>
   14998:	e3a0e902 	mov	lr, #32768	; 0x8000
   1499c:	e59fc02c 	ldr	ip, [pc, #44]	; 149d0 <McZXSpectrum::memoryRequestCallback(unsigned long, unsigned long, unsigned long)+0x114>
   149a0:	e1a03004 	mov	r3, r4
   149a4:	e1a02005 	mov	r2, r5
   149a8:	e1a01006 	mov	r1, r6
   149ac:	e58de000 	str	lr, [sp]
   149b0:	e58dc004 	str	ip, [sp, #4]
   149b4:	eb001c03 	bl	1b9c8 <TargetDebug::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long, McDescriptorTable&)>
   149b8:	e28dd008 	add	sp, sp, #8
   149bc:	e8bd8070 	pop	{r4, r5, r6, pc}
   149c0:	e1a00003 	mov	r0, r3
   149c4:	e28dd008 	add	sp, sp, #8
   149c8:	e8bd8070 	pop	{r4, r5, r6, pc}
   149cc:	00046a64 	.word	0x00046a64
   149d0:	0004223c 	.word	0x0004223c

000149d4 <McZXSpectrum::fileHandler(char const*, unsigned char const*, int)>:
   149d4:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   149d8:	e24ddfcf 	sub	sp, sp, #828	; 0x33c
   149dc:	e1a04002 	mov	r4, r2
   149e0:	e1a09003 	mov	r9, r3
   149e4:	e28d20dc 	add	r2, sp, #220	; 0xdc
   149e8:	e3a03064 	mov	r3, #100	; 0x64
   149ec:	e59f0be8 	ldr	r0, [pc, #3048]	; 155dc <McZXSpectrum::fileHandler(char const*, unsigned char const*, int)+0xc08>
   149f0:	e1a06001 	mov	r6, r1
   149f4:	ebffda47 	bl	b318 <jsonGetValueForKey>
   149f8:	e2503000 	subs	r3, r0, #0
   149fc:	e58d3018 	str	r3, [sp, #24]
   14a00:	0a000077 	beq	14be4 <McZXSpectrum::fileHandler(char const*, unsigned char const*, int)+0x210>
   14a04:	e3a0102e 	mov	r1, #46	; 0x2e
   14a08:	e28d00dc 	add	r0, sp, #220	; 0xdc
   14a0c:	eb005e33 	bl	2c2e0 <strchr>
   14a10:	e3500000 	cmp	r0, #0
   14a14:	e59f5bc4 	ldr	r5, [pc, #3012]	; 155e0 <McZXSpectrum::fileHandler(char const*, unsigned char const*, int)+0xc0c>
   14a18:	11a05000 	movne	r5, r0
   14a1c:	e59f1bc0 	ldr	r1, [pc, #3008]	; 155e4 <McZXSpectrum::fileHandler(char const*, unsigned char const*, int)+0xc10>
   14a20:	e1a00005 	mov	r0, r5
   14a24:	eb005e11 	bl	2c270 <strcasecmp>
   14a28:	e3500000 	cmp	r0, #0
   14a2c:	0a00006e 	beq	14bec <McZXSpectrum::fileHandler(char const*, unsigned char const*, int)+0x218>
   14a30:	e59f1bb0 	ldr	r1, [pc, #2992]	; 155e8 <McZXSpectrum::fileHandler(char const*, unsigned char const*, int)+0xc14>
   14a34:	e1a00005 	mov	r0, r5
   14a38:	eb005e0c 	bl	2c270 <strcasecmp>
   14a3c:	e2503000 	subs	r3, r0, #0
   14a40:	e58d301c 	str	r3, [sp, #28]
   14a44:	0a00012e 	beq	14f04 <McZXSpectrum::fileHandler(char const*, unsigned char const*, int)+0x530>
   14a48:	e1a00005 	mov	r0, r5
   14a4c:	e59f1b98 	ldr	r1, [pc, #2968]	; 155ec <McZXSpectrum::fileHandler(char const*, unsigned char const*, int)+0xc18>
   14a50:	eb005e06 	bl	2c270 <strcasecmp>
   14a54:	e2505000 	subs	r5, r0, #0
   14a58:	1a000099 	bne	14cc4 <McZXSpectrum::fileHandler(char const*, unsigned char const*, int)+0x2f0>
   14a5c:	e59f2b8c 	ldr	r2, [pc, #2956]	; 155f0 <McZXSpectrum::fileHandler(char const*, unsigned char const*, int)+0xc1c>
   14a60:	e1a03009 	mov	r3, r9
   14a64:	e592004c 	ldr	r0, [r2, #76]	; 0x4c
   14a68:	e3a01004 	mov	r1, #4
   14a6c:	e59f2b80 	ldr	r2, [pc, #2944]	; 155f4 <McZXSpectrum::fileHandler(char const*, unsigned char const*, int)+0xc20>
   14a70:	ebffd34f 	bl	97b4 <LogWrite>
   14a74:	e59f3b7c 	ldr	r3, [pc, #2940]	; 155f8 <McZXSpectrum::fileHandler(char const*, unsigned char const*, int)+0xc24>
   14a78:	e1590003 	cmp	r9, r3
   14a7c:	da0002d0 	ble	155c4 <McZXSpectrum::fileHandler(char const*, unsigned char const*, int)+0xbf0>
   14a80:	e5d42008 	ldrb	r2, [r4, #8]
   14a84:	e5d43007 	ldrb	r3, [r4, #7]
   14a88:	e5d41016 	ldrb	r1, [r4, #22]
   14a8c:	e5d4e015 	ldrb	lr, [r4, #21]
   14a90:	e5d4c00d 	ldrb	ip, [r4, #13]
   14a94:	e1833402 	orr	r3, r3, r2, lsl #8
   14a98:	e5d4200e 	ldrb	r2, [r4, #14]
   14a9c:	e18ee401 	orr	lr, lr, r1, lsl #8
   14aa0:	e18cc402 	orr	ip, ip, r2, lsl #8
   14aa4:	e5d41005 	ldrb	r1, [r4, #5]
   14aa8:	e5d42006 	ldrb	r2, [r4, #6]
   14aac:	e58d5174 	str	r5, [sp, #372]	; 0x174
   14ab0:	e1811402 	orr	r1, r1, r2, lsl #8
   14ab4:	e5d4200b 	ldrb	r2, [r4, #11]
   14ab8:	e58d5188 	str	r5, [sp, #392]	; 0x188
   14abc:	e58de158 	str	lr, [sp, #344]	; 0x158
   14ac0:	e5d4e00c 	ldrb	lr, [r4, #12]
   14ac4:	e58d3170 	str	r3, [sp, #368]	; 0x170
   14ac8:	e5d43003 	ldrb	r3, [r4, #3]
   14acc:	e182240e 	orr	r2, r2, lr, lsl #8
   14ad0:	e5d4e004 	ldrb	lr, [r4, #4]
   14ad4:	e58dc154 	str	ip, [sp, #340]	; 0x154
   14ad8:	e5d4c009 	ldrb	ip, [r4, #9]
   14adc:	e183340e 	orr	r3, r3, lr, lsl #8
   14ae0:	e5d4e00a 	ldrb	lr, [r4, #10]
   14ae4:	e58d116c 	str	r1, [sp, #364]	; 0x16c
   14ae8:	e18cc40e 	orr	ip, ip, lr, lsl #8
   14aec:	e5d41001 	ldrb	r1, [r4, #1]
   14af0:	e5d4e002 	ldrb	lr, [r4, #2]
   14af4:	e58d2150 	str	r2, [sp, #336]	; 0x150
   14af8:	e5d42011 	ldrb	r2, [r4, #17]
   14afc:	e181140e 	orr	r1, r1, lr, lsl #8
   14b00:	e5d4e012 	ldrb	lr, [r4, #18]
   14b04:	e58d3168 	str	r3, [sp, #360]	; 0x168
   14b08:	e5d4300f 	ldrb	r3, [r4, #15]
   14b0c:	e182240e 	orr	r2, r2, lr, lsl #8
   14b10:	e5d4e010 	ldrb	lr, [r4, #16]
   14b14:	e58dc14c 	str	ip, [sp, #332]	; 0x14c
   14b18:	e183340e 	orr	r3, r3, lr, lsl #8
   14b1c:	e58d1164 	str	r1, [sp, #356]	; 0x164
   14b20:	e58d3160 	str	r3, [sp, #352]	; 0x160
   14b24:	e58d215c 	str	r2, [sp, #348]	; 0x15c
   14b28:	e5d42017 	ldrb	r2, [r4, #23]
   14b2c:	e5d43018 	ldrb	r3, [r4, #24]
   14b30:	e28d0fce 	add	r0, sp, #824	; 0x338
   14b34:	e1822403 	orr	r2, r2, r3, lsl #8
   14b38:	e2421901 	sub	r1, r2, #16384	; 0x4000
   14b3c:	e281c001 	add	ip, r1, #1
   14b40:	e084c00c 	add	ip, r4, ip
   14b44:	e0841001 	add	r1, r4, r1
   14b48:	e5dce01b 	ldrb	lr, [ip, #27]
   14b4c:	e5d1301b 	ldrb	r3, [r1, #27]
   14b50:	e2822002 	add	r2, r2, #2
   14b54:	e083340e 	add	r3, r3, lr, lsl #8
   14b58:	e6ff3073 	uxth	r3, r3
   14b5c:	e52031f4 	str	r3, [r0, #-500]!	; 0xfffffe0c
   14b60:	e5d43013 	ldrb	r3, [r4, #19]
   14b64:	e5d4e019 	ldrb	lr, [r4, #25]
   14b68:	e1a03123 	lsr	r3, r3, #2
   14b6c:	e2033001 	and	r3, r3, #1
   14b70:	e58d2148 	str	r2, [sp, #328]	; 0x148
   14b74:	e58d3184 	str	r3, [sp, #388]	; 0x184
   14b78:	e5d42000 	ldrb	r2, [r4]
   14b7c:	e5d43014 	ldrb	r3, [r4, #20]
   14b80:	e20ee003 	and	lr, lr, #3
   14b84:	e5c1501b 	strb	r5, [r1, #27]
   14b88:	e5cc501b 	strb	r5, [ip, #27]
   14b8c:	e58de180 	str	lr, [sp, #384]	; 0x180
   14b90:	e58d317c 	str	r3, [sp, #380]	; 0x17c
   14b94:	e58d2178 	str	r2, [sp, #376]	; 0x178
   14b98:	eb001cfc 	bl	1bf90 <TargetState::setTargetRegisters(Z80Registers const&)>
   14b9c:	e284101b 	add	r1, r4, #27
   14ba0:	e3a02903 	mov	r2, #49152	; 0xc000
   14ba4:	e3a00901 	mov	r0, #16384	; 0x4000
   14ba8:	eb001cb1 	bl	1be74 <TargetState::addMemoryBlock(unsigned long, unsigned char const*, unsigned long)>
   14bac:	e59f2a48 	ldr	r2, [pc, #2632]	; 155fc <McZXSpectrum::fileHandler(char const*, unsigned char const*, int)+0xc28>
   14bb0:	e59d1158 	ldr	r1, [sp, #344]	; 0x158
   14bb4:	e5920000 	ldr	r0, [r2]
   14bb8:	e59d4154 	ldr	r4, [sp, #340]	; 0x154
   14bbc:	e59d2148 	ldr	r2, [sp, #328]	; 0x148
   14bc0:	e59de150 	ldr	lr, [sp, #336]	; 0x150
   14bc4:	e59dc14c 	ldr	ip, [sp, #332]	; 0x14c
   14bc8:	e58d2000 	str	r2, [sp]
   14bcc:	e98d5002 	stmib	sp, {r1, ip, lr}
   14bd0:	e59d3144 	ldr	r3, [sp, #324]	; 0x144
   14bd4:	e58d4010 	str	r4, [sp, #16]
   14bd8:	e59f2a20 	ldr	r2, [pc, #2592]	; 15600 <McZXSpectrum::fileHandler(char const*, unsigned char const*, int)+0xc2c>
   14bdc:	e3a01004 	mov	r1, #4
   14be0:	ebffd2f3 	bl	97b4 <LogWrite>
   14be4:	e28ddfcf 	add	sp, sp, #828	; 0x33c
   14be8:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14bec:	e59f29fc 	ldr	r2, [pc, #2556]	; 155f0 <McZXSpectrum::fileHandler(char const*, unsigned char const*, int)+0xc1c>
   14bf0:	e1a03009 	mov	r3, r9
   14bf4:	e592004c 	ldr	r0, [r2, #76]	; 0x4c
   14bf8:	e3a01004 	mov	r1, #4
   14bfc:	e59f2a00 	ldr	r2, [pc, #2560]	; 15604 <McZXSpectrum::fileHandler(char const*, unsigned char const*, int)+0xc30>
   14c00:	ebffd2eb 	bl	97b4 <LogWrite>
   14c04:	e3a02007 	mov	r2, #7
   14c08:	e59f19f8 	ldr	r1, [pc, #2552]	; 15608 <McZXSpectrum::fileHandler(char const*, unsigned char const*, int)+0xc34>
   14c0c:	e1a00004 	mov	r0, r4
   14c10:	eb005f1e 	bl	2c890 <strncmp>
   14c14:	e3500000 	cmp	r0, #0
   14c18:	1a000224 	bne	154b0 <McZXSpectrum::fileHandler(char const*, unsigned char const*, int)+0xadc>
   14c1c:	e3a0500a 	mov	r5, #10
   14c20:	e59f39e4 	ldr	r3, [pc, #2532]	; 1560c <McZXSpectrum::fileHandler(char const*, unsigned char const*, int)+0xc38>
   14c24:	e59f79e4 	ldr	r7, [pc, #2532]	; 15610 <McZXSpectrum::fileHandler(char const*, unsigned char const*, int)+0xc3c>
   14c28:	e58d3018 	str	r3, [sp, #24]
   14c2c:	e1590005 	cmp	r9, r5
   14c30:	daffffeb 	ble	14be4 <McZXSpectrum::fileHandler(char const*, unsigned char const*, int)+0x210>
   14c34:	e2453001 	sub	r3, r5, #1
   14c38:	e0843003 	add	r3, r4, r3
   14c3c:	e5f32001 	ldrb	r2, [r3, #1]!
   14c40:	e2856001 	add	r6, r5, #1
   14c44:	e3520010 	cmp	r2, #16
   14c48:	0a000038 	beq	14d30 <McZXSpectrum::fileHandler(char const*, unsigned char const*, int)+0x35c>
   14c4c:	e3520030 	cmp	r2, #48	; 0x30
   14c50:	1a00002f 	bne	14d14 <McZXSpectrum::fileHandler(char const*, unsigned char const*, int)+0x340>
   14c54:	e1590006 	cmp	r9, r6
   14c58:	d3a0a000 	movle	sl, #0
   14c5c:	c7d4a006 	ldrbgt	sl, [r4, r6]
   14c60:	e2851002 	add	r1, r5, #2
   14c64:	e0498001 	sub	r8, r9, r1
   14c68:	c28ab001 	addgt	fp, sl, #1
   14c6c:	d3a0b001 	movle	fp, #1
   14c70:	e158000a 	cmp	r8, sl
   14c74:	a1a0800a 	movge	r8, sl
   14c78:	e28d5f51 	add	r5, sp, #324	; 0x144
   14c7c:	e2882001 	add	r2, r8, #1
   14c80:	e0841001 	add	r1, r4, r1
   14c84:	e1a00005 	mov	r0, r5
   14c88:	eb005eae 	bl	2c748 <strlcpy>
   14c8c:	e3a0c000 	mov	ip, #0
   14c90:	e28d3fce 	add	r3, sp, #824	; 0x338
   14c94:	e0838008 	add	r8, r3, r8
   14c98:	e5970000 	ldr	r0, [r7]
   14c9c:	e1a0300a 	mov	r3, sl
   14ca0:	e58d5000 	str	r5, [sp]
   14ca4:	e59f2968 	ldr	r2, [pc, #2408]	; 15614 <McZXSpectrum::fileHandler(char const*, unsigned char const*, int)+0xc40>
   14ca8:	e3a01004 	mov	r1, #4
   14cac:	e086500b 	add	r5, r6, fp
   14cb0:	e548c1f4 	strb	ip, [r8, #-500]	; 0xfffffe0c
   14cb4:	ebffd2be 	bl	97b4 <LogWrite>
   14cb8:	e1590005 	cmp	r9, r5
   14cbc:	caffffdc 	bgt	14c34 <McZXSpectrum::fileHandler(char const*, unsigned char const*, int)+0x260>
   14cc0:	eaffffc7 	b	14be4 <McZXSpectrum::fileHandler(char const*, unsigned char const*, int)+0x210>
   14cc4:	e3a0301e 	mov	r3, #30
   14cc8:	e1a01006 	mov	r1, r6
   14ccc:	e28d2f51 	add	r2, sp, #324	; 0x144
   14cd0:	e59f0940 	ldr	r0, [pc, #2368]	; 15618 <McZXSpectrum::fileHandler(char const*, unsigned char const*, int)+0xc44>
   14cd4:	ebffd98f 	bl	b318 <jsonGetValueForKey>
   14cd8:	e2505000 	subs	r5, r0, #0
   14cdc:	01a03005 	moveq	r3, r5
   14ce0:	1a00021d 	bne	1555c <McZXSpectrum::fileHandler(char const*, unsigned char const*, int)+0xb88>
   14ce4:	e59f2904 	ldr	r2, [pc, #2308]	; 155f0 <McZXSpectrum::fileHandler(char const*, unsigned char const*, int)+0xc1c>
   14ce8:	e58d9000 	str	r9, [sp]
   14cec:	e592004c 	ldr	r0, [r2, #76]	; 0x4c
   14cf0:	e3a01004 	mov	r1, #4
   14cf4:	e59f2920 	ldr	r2, [pc, #2336]	; 1561c <McZXSpectrum::fileHandler(char const*, unsigned char const*, int)+0xc48>
   14cf8:	ebffd2ad 	bl	97b4 <LogWrite>
   14cfc:	e1a02009 	mov	r2, r9
   14d00:	e1a01004 	mov	r1, r4
   14d04:	e1a00005 	mov	r0, r5
   14d08:	eb001c59 	bl	1be74 <TargetState::addMemoryBlock(unsigned long, unsigned char const*, unsigned long)>
   14d0c:	e28ddfcf 	add	sp, sp, #828	; 0x33c
   14d10:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14d14:	e1590006 	cmp	r9, r6
   14d18:	e1a05006 	mov	r5, r6
   14d1c:	0affffb0 	beq	14be4 <McZXSpectrum::fileHandler(char const*, unsigned char const*, int)+0x210>
   14d20:	e5f32001 	ldrb	r2, [r3, #1]!
   14d24:	e2856001 	add	r6, r5, #1
   14d28:	e3520010 	cmp	r2, #16
   14d2c:	1affffc6 	bne	14c4c <McZXSpectrum::fileHandler(char const*, unsigned char const*, int)+0x278>
   14d30:	e2853002 	add	r3, r5, #2
   14d34:	e1590003 	cmp	r9, r3
   14d38:	c0843006 	addgt	r3, r4, r6
   14d3c:	c5d32001 	ldrbgt	r2, [r3, #1]
   14d40:	c7d43006 	ldrbgt	r3, [r4, r6]
   14d44:	d3a03000 	movle	r3, #0
   14d48:	c0833402 	addgt	r3, r3, r2, lsl #8
   14d4c:	e2852004 	add	r2, r5, #4
   14d50:	e1590002 	cmp	r9, r2
   14d54:	c2852003 	addgt	r2, r5, #3
   14d58:	c0841002 	addgt	r1, r4, r2
   14d5c:	c7d48002 	ldrbgt	r8, [r4, r2]
   14d60:	c5d11001 	ldrbgt	r1, [r1, #1]
   14d64:	d3a0a000 	movle	sl, #0
   14d68:	c0888401 	addgt	r8, r8, r1, lsl #8
   14d6c:	c1a0a008 	movgt	sl, r8
   14d70:	e5970000 	ldr	r0, [r7]
   14d74:	e59f28a4 	ldr	r2, [pc, #2212]	; 15620 <McZXSpectrum::fileHandler(char const*, unsigned char const*, int)+0xc4c>
   14d78:	e58da000 	str	sl, [sp]
   14d7c:	e3a01004 	mov	r1, #4
   14d80:	c288b004 	addgt	fp, r8, #4
   14d84:	d3a0b004 	movle	fp, #4
   14d88:	d1a0800a 	movle	r8, sl
   14d8c:	ebffd288 	bl	97b4 <LogWrite>
   14d90:	e2853005 	add	r3, r5, #5
   14d94:	e7d43003 	ldrb	r3, [r4, r3]
   14d98:	e3530000 	cmp	r3, #0
   14d9c:	1a000038 	bne	14e84 <McZXSpectrum::fileHandler(char const*, unsigned char const*, int)+0x4b0>
   14da0:	e2852006 	add	r2, r5, #6
   14da4:	e1590002 	cmp	r9, r2
   14da8:	ca00003c 	bgt	14ea0 <McZXSpectrum::fileHandler(char const*, unsigned char const*, int)+0x4cc>
   14dac:	e2851007 	add	r1, r5, #7
   14db0:	e0498001 	sub	r8, r9, r1
   14db4:	e358000a 	cmp	r8, #10
   14db8:	a3a0800a 	movge	r8, #10
   14dbc:	e28daf51 	add	sl, sp, #324	; 0x144
   14dc0:	e2882001 	add	r2, r8, #1
   14dc4:	e0841001 	add	r1, r4, r1
   14dc8:	e1a0000a 	mov	r0, sl
   14dcc:	e58d301c 	str	r3, [sp, #28]
   14dd0:	eb005e5c 	bl	2c748 <strlcpy>
   14dd4:	e3a01000 	mov	r1, #0
   14dd8:	e2852012 	add	r2, r5, #18
   14ddc:	e1590002 	cmp	r9, r2
   14de0:	e28d3fce 	add	r3, sp, #824	; 0x338
   14de4:	c2852011 	addgt	r2, r5, #17
   14de8:	e0838008 	add	r8, r3, r8
   14dec:	e54811f4 	strb	r1, [r8, #-500]	; 0xfffffe0c
   14df0:	c0841002 	addgt	r1, r4, r2
   14df4:	c5d10001 	ldrbgt	r0, [r1, #1]
   14df8:	c7d41002 	ldrbgt	r1, [r4, r2]
   14dfc:	e2852014 	add	r2, r5, #20
   14e00:	c0811400 	addgt	r1, r1, r0, lsl #8
   14e04:	e1590002 	cmp	r9, r2
   14e08:	c2852013 	addgt	r2, r5, #19
   14e0c:	c0840002 	addgt	r0, r4, r2
   14e10:	c5d00001 	ldrbgt	r0, [r0, #1]
   14e14:	c7d4c002 	ldrbgt	ip, [r4, r2]
   14e18:	e2852016 	add	r2, r5, #22
   14e1c:	c08cc400 	addgt	ip, ip, r0, lsl #8
   14e20:	d3a0c000 	movle	ip, #0
   14e24:	e1590002 	cmp	r9, r2
   14e28:	d3a02000 	movle	r2, #0
   14e2c:	c2852015 	addgt	r2, r5, #21
   14e30:	c0840002 	addgt	r0, r4, r2
   14e34:	c5d00001 	ldrbgt	r0, [r0, #1]
   14e38:	c7d42002 	ldrbgt	r2, [r4, r2]
   14e3c:	e2855017 	add	r5, r5, #23
   14e40:	c0822400 	addgt	r2, r2, r0, lsl #8
   14e44:	e1590005 	cmp	r9, r5
   14e48:	e59d301c 	ldr	r3, [sp, #28]
   14e4c:	c7d43005 	ldrbgt	r3, [r4, r5]
   14e50:	e5970000 	ldr	r0, [r7]
   14e54:	e1cd20f8 	strd	r2, [sp, #8]
   14e58:	e88d1002 	stm	sp, {r1, ip}
   14e5c:	e1a0300a 	mov	r3, sl
   14e60:	e59f27bc 	ldr	r2, [pc, #1980]	; 15624 <McZXSpectrum::fileHandler(char const*, unsigned char const*, int)+0xc50>
   14e64:	e3a01004 	mov	r1, #4
   14e68:	ebffd251 	bl	97b4 <LogWrite>
   14e6c:	e59f27b4 	ldr	r2, [pc, #1972]	; 15628 <McZXSpectrum::fileHandler(char const*, unsigned char const*, int)+0xc54>
   14e70:	e3a01004 	mov	r1, #4
   14e74:	e5970000 	ldr	r0, [r7]
   14e78:	e086500b 	add	r5, r6, fp
   14e7c:	ebffd24c 	bl	97b4 <LogWrite>
   14e80:	eaffff69 	b	14c2c <McZXSpectrum::fileHandler(char const*, unsigned char const*, int)+0x258>
   14e84:	e35300ff 	cmp	r3, #255	; 0xff
   14e88:	e5970000 	ldr	r0, [r7]
   14e8c:	0a000012 	beq	14edc <McZXSpectrum::fileHandler(char const*, unsigned char const*, int)+0x508>
   14e90:	e59f2794 	ldr	r2, [pc, #1940]	; 1562c <McZXSpectrum::fileHandler(char const*, unsigned char const*, int)+0xc58>
   14e94:	e3a01004 	mov	r1, #4
   14e98:	ebffd245 	bl	97b4 <LogWrite>
   14e9c:	eafffff2 	b	14e6c <McZXSpectrum::fileHandler(char const*, unsigned char const*, int)+0x498>
   14ea0:	e7d42002 	ldrb	r2, [r4, r2]
   14ea4:	e3520000 	cmp	r2, #0
   14ea8:	0affffbf 	beq	14dac <McZXSpectrum::fileHandler(char const*, unsigned char const*, int)+0x3d8>
   14eac:	e3520001 	cmp	r2, #1
   14eb0:	0a00013a 	beq	153a0 <McZXSpectrum::fileHandler(char const*, unsigned char const*, int)+0x9cc>
   14eb4:	e3520002 	cmp	r2, #2
   14eb8:	0a000182 	beq	154c8 <McZXSpectrum::fileHandler(char const*, unsigned char const*, int)+0xaf4>
   14ebc:	e3520003 	cmp	r2, #3
   14ec0:	0a00010b 	beq	152f4 <McZXSpectrum::fileHandler(char const*, unsigned char const*, int)+0x920>
   14ec4:	e1a03002 	mov	r3, r2
   14ec8:	e3a01004 	mov	r1, #4
   14ecc:	e59f275c 	ldr	r2, [pc, #1884]	; 15630 <McZXSpectrum::fileHandler(char const*, unsigned char const*, int)+0xc5c>
   14ed0:	e5970000 	ldr	r0, [r7]
   14ed4:	ebffd236 	bl	97b4 <LogWrite>
   14ed8:	eaffffe3 	b	14e6c <McZXSpectrum::fileHandler(char const*, unsigned char const*, int)+0x498>
   14edc:	e1a0300a 	mov	r3, sl
   14ee0:	e59f274c 	ldr	r2, [pc, #1868]	; 15634 <McZXSpectrum::fileHandler(char const*, unsigned char const*, int)+0xc60>
   14ee4:	e3a01004 	mov	r1, #4
   14ee8:	ebffd231 	bl	97b4 <LogWrite>
   14eec:	e2851006 	add	r1, r5, #6
   14ef0:	e0841001 	add	r1, r4, r1
   14ef4:	e1a02008 	mov	r2, r8
   14ef8:	e59d0018 	ldr	r0, [sp, #24]
   14efc:	eb001bdc 	bl	1be74 <TargetState::addMemoryBlock(unsigned long, unsigned char const*, unsigned long)>
   14f00:	eaffffd9 	b	14e6c <McZXSpectrum::fileHandler(char const*, unsigned char const*, int)+0x498>
   14f04:	e59f26e4 	ldr	r2, [pc, #1764]	; 155f0 <McZXSpectrum::fileHandler(char const*, unsigned char const*, int)+0xc1c>
   14f08:	e1a03009 	mov	r3, r9
   14f0c:	e592004c 	ldr	r0, [r2, #76]	; 0x4c
   14f10:	e3a01004 	mov	r1, #4
   14f14:	e59f271c 	ldr	r2, [pc, #1820]	; 15638 <McZXSpectrum::fileHandler(char const*, unsigned char const*, int)+0xc64>
   14f18:	ebffd225 	bl	97b4 <LogWrite>
   14f1c:	e3590031 	cmp	r9, #49	; 0x31
   14f20:	da000194 	ble	15578 <McZXSpectrum::fileHandler(char const*, unsigned char const*, int)+0xba4>
   14f24:	e5d4500c 	ldrb	r5, [r4, #12]
   14f28:	e5d42007 	ldrb	r2, [r4, #7]
   14f2c:	e35500ff 	cmp	r5, #255	; 0xff
   14f30:	03a03001 	moveq	r3, #1
   14f34:	01a05003 	moveq	r5, r3
   14f38:	05c4300c 	strbeq	r3, [r4, #12]
   14f3c:	e5d43006 	ldrb	r3, [r4, #6]
   14f40:	e1933402 	orrs	r3, r3, r2, lsl #8
   14f44:	1a00013a 	bne	15434 <McZXSpectrum::fileHandler(char const*, unsigned char const*, int)+0xa60>
   14f48:	e5d4201f 	ldrb	r2, [r4, #31]
   14f4c:	e5d4301e 	ldrb	r3, [r4, #30]
   14f50:	e58d9024 	str	r9, [sp, #36]	; 0x24
   14f54:	e0833402 	add	r3, r3, r2, lsl #8
   14f58:	e3530017 	cmp	r3, #23
   14f5c:	c3a02003 	movgt	r2, #3
   14f60:	d3a02002 	movle	r2, #2
   14f64:	e59fb6d0 	ldr	fp, [pc, #1744]	; 1563c <McZXSpectrum::fileHandler(char const*, unsigned char const*, int)+0xc68>
   14f68:	e58d302c 	str	r3, [sp, #44]	; 0x2c
   14f6c:	e58d2028 	str	r2, [sp, #40]	; 0x28
   14f70:	e283a002 	add	sl, r3, #2
   14f74:	e59f66c4 	ldr	r6, [pc, #1732]	; 15640 <McZXSpectrum::fileHandler(char const*, unsigned char const*, int)+0xc6c>
   14f78:	e1a09004 	mov	r9, r4
   14f7c:	ea000009 	b	14fa8 <McZXSpectrum::fileHandler(char const*, unsigned char const*, int)+0x5d4>
   14f80:	e3540008 	cmp	r4, #8
   14f84:	0a000047 	beq	150a8 <McZXSpectrum::fileHandler(char const*, unsigned char const*, int)+0x6d4>
   14f88:	e3540004 	cmp	r4, #4
   14f8c:	0a000048 	beq	150b4 <McZXSpectrum::fileHandler(char const*, unsigned char const*, int)+0x6e0>
   14f90:	e2877003 	add	r7, r7, #3
   14f94:	e08aa007 	add	sl, sl, r7
   14f98:	e59d2024 	ldr	r2, [sp, #36]	; 0x24
   14f9c:	e28a301e 	add	r3, sl, #30
   14fa0:	e1520003 	cmp	r2, r3
   14fa4:	da000045 	ble	150c0 <McZXSpectrum::fileHandler(char const*, unsigned char const*, int)+0x6ec>
   14fa8:	e089300a 	add	r3, r9, sl
   14fac:	e5d3201f 	ldrb	r2, [r3, #31]
   14fb0:	e5d3701e 	ldrb	r7, [r3, #30]
   14fb4:	e5d34020 	ldrb	r4, [r3, #32]
   14fb8:	e0877402 	add	r7, r7, r2, lsl #8
   14fbc:	e59b0000 	ldr	r0, [fp]
   14fc0:	e1a0300a 	mov	r3, sl
   14fc4:	e58d7000 	str	r7, [sp]
   14fc8:	e58d4004 	str	r4, [sp, #4]
   14fcc:	e59f2670 	ldr	r2, [pc, #1648]	; 15644 <McZXSpectrum::fileHandler(char const*, unsigned char const*, int)+0xc70>
   14fd0:	e3a01005 	mov	r1, #5
   14fd4:	ebffd1f6 	bl	97b4 <LogWrite>
   14fd8:	e3540005 	cmp	r4, #5
   14fdc:	1affffe7 	bne	14f80 <McZXSpectrum::fileHandler(char const*, unsigned char const*, int)+0x5ac>
   14fe0:	e3a03903 	mov	r3, #49152	; 0xc000
   14fe4:	e58d3020 	str	r3, [sp, #32]
   14fe8:	e089200a 	add	r2, r9, sl
   14fec:	e59f364c 	ldr	r3, [pc, #1612]	; 15640 <McZXSpectrum::fileHandler(char const*, unsigned char const*, int)+0xc6c>
   14ff0:	e59f5650 	ldr	r5, [pc, #1616]	; 15648 <McZXSpectrum::fileHandler(char const*, unsigned char const*, int)+0xc74>
   14ff4:	e2822021 	add	r2, r2, #33	; 0x21
   14ff8:	ea000002 	b	15008 <McZXSpectrum::fileHandler(char const*, unsigned char const*, int)+0x634>
   14ffc:	e5c31000 	strb	r1, [r3]
   15000:	e2822001 	add	r2, r2, #1
   15004:	e2833001 	add	r3, r3, #1
   15008:	e0430006 	sub	r0, r3, r6
   1500c:	e1500005 	cmp	r0, r5
   15010:	ca000012 	bgt	15060 <McZXSpectrum::fileHandler(char const*, unsigned char const*, int)+0x68c>
   15014:	e5d21000 	ldrb	r1, [r2]
   15018:	e35100ed 	cmp	r1, #237	; 0xed
   1501c:	1afffff6 	bne	14ffc <McZXSpectrum::fileHandler(char const*, unsigned char const*, int)+0x628>
   15020:	e5d2c001 	ldrb	ip, [r2, #1]
   15024:	e35c00ed 	cmp	ip, #237	; 0xed
   15028:	1afffff3 	bne	14ffc <McZXSpectrum::fileHandler(char const*, unsigned char const*, int)+0x628>
   1502c:	e5d28002 	ldrb	r8, [r2, #2]
   15030:	e2824004 	add	r4, r2, #4
   15034:	e3580000 	cmp	r8, #0
   15038:	0a000013 	beq	1508c <McZXSpectrum::fileHandler(char const*, unsigned char const*, int)+0x6b8>
   1503c:	e5d21003 	ldrb	r1, [r2, #3]
   15040:	e1a00003 	mov	r0, r3
   15044:	e1a02008 	mov	r2, r8
   15048:	eb005c43 	bl	2c15c <memset>
   1504c:	e0803008 	add	r3, r0, r8
   15050:	e0430006 	sub	r0, r3, r6
   15054:	e1500005 	cmp	r0, r5
   15058:	e1a02004 	mov	r2, r4
   1505c:	daffffec 	ble	15014 <McZXSpectrum::fileHandler(char const*, unsigned char const*, int)+0x640>
   15060:	e3500901 	cmp	r0, #16384	; 0x4000
   15064:	e1a04000 	mov	r4, r0
   15068:	1a000008 	bne	15090 <McZXSpectrum::fileHandler(char const*, unsigned char const*, int)+0x6bc>
   1506c:	e59d301c 	ldr	r3, [sp, #28]
   15070:	e59d0020 	ldr	r0, [sp, #32]
   15074:	e0833004 	add	r3, r3, r4
   15078:	e3a02901 	mov	r2, #16384	; 0x4000
   1507c:	e1a01006 	mov	r1, r6
   15080:	e58d301c 	str	r3, [sp, #28]
   15084:	eb001b7a 	bl	1be74 <TargetState::addMemoryBlock(unsigned long, unsigned char const*, unsigned long)>
   15088:	eaffffc0 	b	14f90 <McZXSpectrum::fileHandler(char const*, unsigned char const*, int)+0x5bc>
   1508c:	e1a04000 	mov	r4, r0
   15090:	e1a03004 	mov	r3, r4
   15094:	e59f25b0 	ldr	r2, [pc, #1456]	; 1564c <McZXSpectrum::fileHandler(char const*, unsigned char const*, int)+0xc78>
   15098:	e3a01004 	mov	r1, #4
   1509c:	e59b0000 	ldr	r0, [fp]
   150a0:	ebffd1c3 	bl	97b4 <LogWrite>
   150a4:	eafffff0 	b	1506c <McZXSpectrum::fileHandler(char const*, unsigned char const*, int)+0x698>
   150a8:	e3a03901 	mov	r3, #16384	; 0x4000
   150ac:	e58d3020 	str	r3, [sp, #32]
   150b0:	eaffffcc 	b	14fe8 <McZXSpectrum::fileHandler(char const*, unsigned char const*, int)+0x614>
   150b4:	e3a03902 	mov	r3, #32768	; 0x8000
   150b8:	e58d3020 	str	r3, [sp, #32]
   150bc:	eaffffc9 	b	14fe8 <McZXSpectrum::fileHandler(char const*, unsigned char const*, int)+0x614>
   150c0:	e1a04009 	mov	r4, r9
   150c4:	e1a09002 	mov	r9, r2
   150c8:	e3a01000 	mov	r1, #0
   150cc:	e5d43000 	ldrb	r3, [r4]
   150d0:	e5d42001 	ldrb	r2, [r4, #1]
   150d4:	e5d40015 	ldrb	r0, [r4, #21]
   150d8:	e0822403 	add	r2, r2, r3, lsl #8
   150dc:	e5d43016 	ldrb	r3, [r4, #22]
   150e0:	e58d2044 	str	r2, [sp, #68]	; 0x44
   150e4:	e5d42002 	ldrb	r2, [r4, #2]
   150e8:	e0833400 	add	r3, r3, r0, lsl #8
   150ec:	e5d40003 	ldrb	r0, [r4, #3]
   150f0:	e58d305c 	str	r3, [sp, #92]	; 0x5c
   150f4:	e5d4300f 	ldrb	r3, [r4, #15]
   150f8:	e1822400 	orr	r2, r2, r0, lsl #8
   150fc:	e5d40010 	ldrb	r0, [r4, #16]
   15100:	e58d2040 	str	r2, [sp, #64]	; 0x40
   15104:	e5d4200d 	ldrb	r2, [r4, #13]
   15108:	e1833400 	orr	r3, r3, r0, lsl #8
   1510c:	e5d4000e 	ldrb	r0, [r4, #14]
   15110:	e58d3058 	str	r3, [sp, #88]	; 0x58
   15114:	e5d43011 	ldrb	r3, [r4, #17]
   15118:	e1822400 	orr	r2, r2, r0, lsl #8
   1511c:	e5d40012 	ldrb	r0, [r4, #18]
   15120:	e58d203c 	str	r2, [sp, #60]	; 0x3c
   15124:	e5d42004 	ldrb	r2, [r4, #4]
   15128:	e1833400 	orr	r3, r3, r0, lsl #8
   1512c:	e5d40005 	ldrb	r0, [r4, #5]
   15130:	e58d3054 	str	r3, [sp, #84]	; 0x54
   15134:	e5d43013 	ldrb	r3, [r4, #19]
   15138:	e1822400 	orr	r2, r2, r0, lsl #8
   1513c:	e5d40014 	ldrb	r0, [r4, #20]
   15140:	e58d2038 	str	r2, [sp, #56]	; 0x38
   15144:	e5d42019 	ldrb	r2, [r4, #25]
   15148:	e1833400 	orr	r3, r3, r0, lsl #8
   1514c:	e5d4001a 	ldrb	r0, [r4, #26]
   15150:	e58d3050 	str	r3, [sp, #80]	; 0x50
   15154:	e5d43017 	ldrb	r3, [r4, #23]
   15158:	e1822400 	orr	r2, r2, r0, lsl #8
   1515c:	e5d40018 	ldrb	r0, [r4, #24]
   15160:	e58d2048 	str	r2, [sp, #72]	; 0x48
   15164:	e1833400 	orr	r3, r3, r0, lsl #8
   15168:	e58d304c 	str	r3, [sp, #76]	; 0x4c
   1516c:	e58d1060 	str	r1, [sp, #96]	; 0x60
   15170:	e58d1074 	str	r1, [sp, #116]	; 0x74
   15174:	e5d40008 	ldrb	r0, [r4, #8]
   15178:	e5d43009 	ldrb	r3, [r4, #9]
   1517c:	e59d2028 	ldr	r2, [sp, #40]	; 0x28
   15180:	e5d41006 	ldrb	r1, [r4, #6]
   15184:	e3520001 	cmp	r2, #1
   15188:	e1800403 	orr	r0, r0, r3, lsl #8
   1518c:	e5d4200b 	ldrb	r2, [r4, #11]
   15190:	e5d43007 	ldrb	r3, [r4, #7]
   15194:	e202207f 	and	r2, r2, #127	; 0x7f
   15198:	e1811403 	orr	r1, r1, r3, lsl #8
   1519c:	e5d4301d 	ldrb	r3, [r4, #29]
   151a0:	e58d2068 	str	r2, [sp, #104]	; 0x68
   151a4:	e5d4201b 	ldrb	r2, [r4, #27]
   151a8:	e2033003 	and	r3, r3, #3
   151ac:	e58d306c 	str	r3, [sp, #108]	; 0x6c
   151b0:	e58d2070 	str	r2, [sp, #112]	; 0x70
   151b4:	15d43020 	ldrbne	r3, [r4, #32]
   151b8:	15d42021 	ldrbne	r2, [r4, #33]	; 0x21
   151bc:	e58d1030 	str	r1, [sp, #48]	; 0x30
   151c0:	e5d4100a 	ldrb	r1, [r4, #10]
   151c4:	10833402 	addne	r3, r3, r2, lsl #8
   151c8:	e58d0034 	str	r0, [sp, #52]	; 0x34
   151cc:	e28d0030 	add	r0, sp, #48	; 0x30
   151d0:	158d3030 	strne	r3, [sp, #48]	; 0x30
   151d4:	e58d1064 	str	r1, [sp, #100]	; 0x64
   151d8:	eb001b6c 	bl	1bf90 <TargetState::setTargetRegisters(Z80Registers const&)>
   151dc:	e59d101c 	ldr	r1, [sp, #28]
   151e0:	e59f3468 	ldr	r3, [pc, #1128]	; 15650 <McZXSpectrum::fileHandler(char const*, unsigned char const*, int)+0xc7c>
   151e4:	e58d100c 	str	r1, [sp, #12]
   151e8:	e59d1018 	ldr	r1, [sp, #24]
   151ec:	e59f2460 	ldr	r2, [pc, #1120]	; 15654 <McZXSpectrum::fileHandler(char const*, unsigned char const*, int)+0xc80>
   151f0:	e3510000 	cmp	r1, #0
   151f4:	11a02003 	movne	r2, r3
   151f8:	e59d1030 	ldr	r1, [sp, #48]	; 0x30
   151fc:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
   15200:	e59b0000 	ldr	r0, [fp]
   15204:	e58d3000 	str	r3, [sp]
   15208:	e58d2004 	str	r2, [sp, #4]
   1520c:	e59d3028 	ldr	r3, [sp, #40]	; 0x28
   15210:	e58d1010 	str	r1, [sp, #16]
   15214:	e58d9008 	str	r9, [sp, #8]
   15218:	e59f2438 	ldr	r2, [pc, #1080]	; 15658 <McZXSpectrum::fileHandler(char const*, unsigned char const*, int)+0xc84>
   1521c:	e3a01005 	mov	r1, #5
   15220:	ebffd163 	bl	97b4 <LogWrite>
   15224:	e1cd23d0 	ldrd	r2, [sp, #48]	; 0x30
   15228:	e59d104c 	ldr	r1, [sp, #76]	; 0x4c
   1522c:	e59de03c 	ldr	lr, [sp, #60]	; 0x3c
   15230:	e59dc038 	ldr	ip, [sp, #56]	; 0x38
   15234:	e59d0044 	ldr	r0, [sp, #68]	; 0x44
   15238:	e59d4048 	ldr	r4, [sp, #72]	; 0x48
   1523c:	e58d1014 	str	r1, [sp, #20]
   15240:	e59d1040 	ldr	r1, [sp, #64]	; 0x40
   15244:	e98d5001 	stmib	sp, {r0, ip, lr}
   15248:	e58d1000 	str	r1, [sp]
   1524c:	e58d4010 	str	r4, [sp, #16]
   15250:	e28d0078 	add	r0, sp, #120	; 0x78
   15254:	e59f1400 	ldr	r1, [pc, #1024]	; 1565c <McZXSpectrum::fileHandler(char const*, unsigned char const*, int)+0xc88>
   15258:	ebffd1d5 	bl	99b4 <ee_sprintf>
   1525c:	e28d1078 	add	r1, sp, #120	; 0x78
   15260:	e28d0f51 	add	r0, sp, #324	; 0x144
   15264:	e3a02f7d 	mov	r2, #500	; 0x1f4
   15268:	eb005d36 	bl	2c748 <strlcpy>
   1526c:	e59d1064 	ldr	r1, [sp, #100]	; 0x64
   15270:	e59de068 	ldr	lr, [sp, #104]	; 0x68
   15274:	e59dc054 	ldr	ip, [sp, #84]	; 0x54
   15278:	e58d1008 	str	r1, [sp, #8]
   1527c:	e59d1050 	ldr	r1, [sp, #80]	; 0x50
   15280:	e58de00c 	str	lr, [sp, #12]
   15284:	e88d1002 	stm	sp, {r1, ip}
   15288:	e59d3058 	ldr	r3, [sp, #88]	; 0x58
   1528c:	e59d205c 	ldr	r2, [sp, #92]	; 0x5c
   15290:	e28d0078 	add	r0, sp, #120	; 0x78
   15294:	e59f13c4 	ldr	r1, [pc, #964]	; 15660 <McZXSpectrum::fileHandler(char const*, unsigned char const*, int)+0xc8c>
   15298:	ebffd1c5 	bl	99b4 <ee_sprintf>
   1529c:	e28d1078 	add	r1, sp, #120	; 0x78
   152a0:	e28d0f51 	add	r0, sp, #324	; 0x144
   152a4:	e3a02f7d 	mov	r2, #500	; 0x1f4
   152a8:	eb005cf6 	bl	2c688 <strlcat>
   152ac:	e59dc074 	ldr	ip, [sp, #116]	; 0x74
   152b0:	e59d1070 	ldr	r1, [sp, #112]	; 0x70
   152b4:	e59d306c 	ldr	r3, [sp, #108]	; 0x6c
   152b8:	e88d1002 	stm	sp, {r1, ip}
   152bc:	e59d2060 	ldr	r2, [sp, #96]	; 0x60
   152c0:	e28d0078 	add	r0, sp, #120	; 0x78
   152c4:	e59f1398 	ldr	r1, [pc, #920]	; 15664 <McZXSpectrum::fileHandler(char const*, unsigned char const*, int)+0xc90>
   152c8:	ebffd1b9 	bl	99b4 <ee_sprintf>
   152cc:	e28d1078 	add	r1, sp, #120	; 0x78
   152d0:	e28d0f51 	add	r0, sp, #324	; 0x144
   152d4:	e3a02f7d 	mov	r2, #500	; 0x1f4
   152d8:	eb005cea 	bl	2c688 <strlcat>
   152dc:	e28d3f51 	add	r3, sp, #324	; 0x144
   152e0:	e59b0000 	ldr	r0, [fp]
   152e4:	e59f237c 	ldr	r2, [pc, #892]	; 15668 <McZXSpectrum::fileHandler(char const*, unsigned char const*, int)+0xc94>
   152e8:	e3a01005 	mov	r1, #5
   152ec:	ebffd130 	bl	97b4 <LogWrite>
   152f0:	eafffe3b 	b	14be4 <McZXSpectrum::fileHandler(char const*, unsigned char const*, int)+0x210>
   152f4:	e2851007 	add	r1, r5, #7
   152f8:	e0498001 	sub	r8, r9, r1
   152fc:	e358000a 	cmp	r8, #10
   15300:	a3a0800a 	movge	r8, #10
   15304:	e28daf51 	add	sl, sp, #324	; 0x144
   15308:	e0841001 	add	r1, r4, r1
   1530c:	e2882001 	add	r2, r8, #1
   15310:	e1a0000a 	mov	r0, sl
   15314:	e58d3018 	str	r3, [sp, #24]
   15318:	eb005d0a 	bl	2c748 <strlcpy>
   1531c:	e2852012 	add	r2, r5, #18
   15320:	e1590002 	cmp	r9, r2
   15324:	c2852011 	addgt	r2, r5, #17
   15328:	c0841002 	addgt	r1, r4, r2
   1532c:	c5d11001 	ldrbgt	r1, [r1, #1]
   15330:	c7d42002 	ldrbgt	r2, [r4, r2]
   15334:	e28d3fce 	add	r3, sp, #824	; 0x338
   15338:	e0838008 	add	r8, r3, r8
   1533c:	e59d3018 	ldr	r3, [sp, #24]
   15340:	c0822401 	addgt	r2, r2, r1, lsl #8
   15344:	e2851014 	add	r1, r5, #20
   15348:	d1a02003 	movle	r2, r3
   1534c:	e1590001 	cmp	r9, r1
   15350:	d3a01000 	movle	r1, #0
   15354:	c2851013 	addgt	r1, r5, #19
   15358:	c0840001 	addgt	r0, r4, r1
   1535c:	c5d00001 	ldrbgt	r0, [r0, #1]
   15360:	c7d41001 	ldrbgt	r1, [r4, r1]
   15364:	e2855016 	add	r5, r5, #22
   15368:	c0811400 	addgt	r1, r1, r0, lsl #8
   1536c:	e1590005 	cmp	r9, r5
   15370:	e54831f4 	strb	r3, [r8, #-500]	; 0xfffffe0c
   15374:	c7d43005 	ldrbgt	r3, [r4, r5]
   15378:	e58d1018 	str	r1, [sp, #24]
   1537c:	e5970000 	ldr	r0, [r7]
   15380:	e58d3008 	str	r3, [sp, #8]
   15384:	e59d3018 	ldr	r3, [sp, #24]
   15388:	e3a01004 	mov	r1, #4
   1538c:	e1cd20f0 	strd	r2, [sp]
   15390:	e1a0300a 	mov	r3, sl
   15394:	e59f22d0 	ldr	r2, [pc, #720]	; 1566c <McZXSpectrum::fileHandler(char const*, unsigned char const*, int)+0xc98>
   15398:	ebffd105 	bl	97b4 <LogWrite>
   1539c:	eafffeb2 	b	14e6c <McZXSpectrum::fileHandler(char const*, unsigned char const*, int)+0x498>
   153a0:	e2851007 	add	r1, r5, #7
   153a4:	e0498001 	sub	r8, r9, r1
   153a8:	e358000a 	cmp	r8, #10
   153ac:	a3a0800a 	movge	r8, #10
   153b0:	e28daf51 	add	sl, sp, #324	; 0x144
   153b4:	e0841001 	add	r1, r4, r1
   153b8:	e2882001 	add	r2, r8, #1
   153bc:	e1a0000a 	mov	r0, sl
   153c0:	e58d301c 	str	r3, [sp, #28]
   153c4:	eb005cdf 	bl	2c748 <strlcpy>
   153c8:	e2852012 	add	r2, r5, #18
   153cc:	e1590002 	cmp	r9, r2
   153d0:	c2852011 	addgt	r2, r5, #17
   153d4:	c0841002 	addgt	r1, r4, r2
   153d8:	c5d11001 	ldrbgt	r1, [r1, #1]
   153dc:	c7d42002 	ldrbgt	r2, [r4, r2]
   153e0:	e28d3fce 	add	r3, sp, #824	; 0x338
   153e4:	e0838008 	add	r8, r3, r8
   153e8:	e59d301c 	ldr	r3, [sp, #28]
   153ec:	c0822401 	addgt	r2, r2, r1, lsl #8
   153f0:	e2851014 	add	r1, r5, #20
   153f4:	d1a02003 	movle	r2, r3
   153f8:	e1590001 	cmp	r9, r1
   153fc:	d3a01000 	movle	r1, #0
   15400:	e2855016 	add	r5, r5, #22
   15404:	c7d41001 	ldrbgt	r1, [r4, r1]
   15408:	e1590005 	cmp	r9, r5
   1540c:	e54831f4 	strb	r3, [r8, #-500]	; 0xfffffe0c
   15410:	c7d43005 	ldrbgt	r3, [r4, r5]
   15414:	e5970000 	ldr	r0, [r7]
   15418:	e98d000a 	stmib	sp, {r1, r3}
   1541c:	e58d2000 	str	r2, [sp]
   15420:	e1a0300a 	mov	r3, sl
   15424:	e59f2244 	ldr	r2, [pc, #580]	; 15670 <McZXSpectrum::fileHandler(char const*, unsigned char const*, int)+0xc9c>
   15428:	e3a01004 	mov	r1, #4
   1542c:	ebffd0e0 	bl	97b4 <LogWrite>
   15430:	eafffe8d 	b	14e6c <McZXSpectrum::fileHandler(char const*, unsigned char const*, int)+0x498>
   15434:	e59f6204 	ldr	r6, [pc, #516]	; 15640 <McZXSpectrum::fileHandler(char const*, unsigned char const*, int)+0xc6c>
   15438:	e2055020 	and	r5, r5, #32
   1543c:	e1a03006 	mov	r3, r6
   15440:	e284201e 	add	r2, r4, #30
   15444:	e59f7228 	ldr	r7, [pc, #552]	; 15674 <McZXSpectrum::fileHandler(char const*, unsigned char const*, int)+0xca0>
   15448:	ea000002 	b	15458 <McZXSpectrum::fileHandler(char const*, unsigned char const*, int)+0xa84>
   1544c:	e5c31000 	strb	r1, [r3]
   15450:	e2822001 	add	r2, r2, #1
   15454:	e2833001 	add	r3, r3, #1
   15458:	e043c006 	sub	ip, r3, r6
   1545c:	e15c0007 	cmp	ip, r7
   15460:	ca00004a 	bgt	15590 <McZXSpectrum::fileHandler(char const*, unsigned char const*, int)+0xbbc>
   15464:	e3550000 	cmp	r5, #0
   15468:	e5d21000 	ldrb	r1, [r2]
   1546c:	0afffff6 	beq	1544c <McZXSpectrum::fileHandler(char const*, unsigned char const*, int)+0xa78>
   15470:	e35100ed 	cmp	r1, #237	; 0xed
   15474:	1afffff4 	bne	1544c <McZXSpectrum::fileHandler(char const*, unsigned char const*, int)+0xa78>
   15478:	e5d20001 	ldrb	r0, [r2, #1]
   1547c:	e35000ed 	cmp	r0, #237	; 0xed
   15480:	1afffff1 	bne	1544c <McZXSpectrum::fileHandler(char const*, unsigned char const*, int)+0xa78>
   15484:	e5d28002 	ldrb	r8, [r2, #2]
   15488:	e282a004 	add	sl, r2, #4
   1548c:	e3580000 	cmp	r8, #0
   15490:	0a00003e 	beq	15590 <McZXSpectrum::fileHandler(char const*, unsigned char const*, int)+0xbbc>
   15494:	e5d21003 	ldrb	r1, [r2, #3]
   15498:	e1a00003 	mov	r0, r3
   1549c:	e1a02008 	mov	r2, r8
   154a0:	eb005b2d 	bl	2c15c <memset>
   154a4:	e1a0200a 	mov	r2, sl
   154a8:	e0803008 	add	r3, r0, r8
   154ac:	eaffffe9 	b	15458 <McZXSpectrum::fileHandler(char const*, unsigned char const*, int)+0xa84>
   154b0:	e59f3158 	ldr	r3, [pc, #344]	; 15610 <McZXSpectrum::fileHandler(char const*, unsigned char const*, int)+0xc3c>
   154b4:	e59f21bc 	ldr	r2, [pc, #444]	; 15678 <McZXSpectrum::fileHandler(char const*, unsigned char const*, int)+0xca4>
   154b8:	e5930000 	ldr	r0, [r3]
   154bc:	e3a01004 	mov	r1, #4
   154c0:	ebffd0bb 	bl	97b4 <LogWrite>
   154c4:	eafffdc6 	b	14be4 <McZXSpectrum::fileHandler(char const*, unsigned char const*, int)+0x210>
   154c8:	e2851007 	add	r1, r5, #7
   154cc:	e0498001 	sub	r8, r9, r1
   154d0:	e358000a 	cmp	r8, #10
   154d4:	a3a0800a 	movge	r8, #10
   154d8:	e28daf51 	add	sl, sp, #324	; 0x144
   154dc:	e0841001 	add	r1, r4, r1
   154e0:	e2882001 	add	r2, r8, #1
   154e4:	e1a0000a 	mov	r0, sl
   154e8:	e58d301c 	str	r3, [sp, #28]
   154ec:	eb005c95 	bl	2c748 <strlcpy>
   154f0:	e2852012 	add	r2, r5, #18
   154f4:	e1590002 	cmp	r9, r2
   154f8:	c2852011 	addgt	r2, r5, #17
   154fc:	c0841002 	addgt	r1, r4, r2
   15500:	c5d11001 	ldrbgt	r1, [r1, #1]
   15504:	c7d42002 	ldrbgt	r2, [r4, r2]
   15508:	e28d3fce 	add	r3, sp, #824	; 0x338
   1550c:	e0838008 	add	r8, r3, r8
   15510:	e59d301c 	ldr	r3, [sp, #28]
   15514:	c0822401 	addgt	r2, r2, r1, lsl #8
   15518:	e2851014 	add	r1, r5, #20
   1551c:	d1a02003 	movle	r2, r3
   15520:	e1590001 	cmp	r9, r1
   15524:	d3a01000 	movle	r1, #0
   15528:	e2855016 	add	r5, r5, #22
   1552c:	c7d41001 	ldrbgt	r1, [r4, r1]
   15530:	e1590005 	cmp	r9, r5
   15534:	e54831f4 	strb	r3, [r8, #-500]	; 0xfffffe0c
   15538:	c7d43005 	ldrbgt	r3, [r4, r5]
   1553c:	e5970000 	ldr	r0, [r7]
   15540:	e98d000a 	stmib	sp, {r1, r3}
   15544:	e58d2000 	str	r2, [sp]
   15548:	e1a0300a 	mov	r3, sl
   1554c:	e59f2128 	ldr	r2, [pc, #296]	; 1567c <McZXSpectrum::fileHandler(char const*, unsigned char const*, int)+0xca8>
   15550:	e3a01004 	mov	r1, #4
   15554:	ebffd096 	bl	97b4 <LogWrite>
   15558:	eafffe43 	b	14e6c <McZXSpectrum::fileHandler(char const*, unsigned char const*, int)+0x498>
   1555c:	e28d0f51 	add	r0, sp, #324	; 0x144
   15560:	e3a02010 	mov	r2, #16
   15564:	e3a01000 	mov	r1, #0
   15568:	eb005fcc 	bl	2d4a0 <strtol>
   1556c:	e6ff3070 	uxth	r3, r0
   15570:	e1a05003 	mov	r5, r3
   15574:	eafffdda 	b	14ce4 <McZXSpectrum::fileHandler(char const*, unsigned char const*, int)+0x310>
   15578:	e59f30bc 	ldr	r3, [pc, #188]	; 1563c <McZXSpectrum::fileHandler(char const*, unsigned char const*, int)+0xc68>
   1557c:	e59f20fc 	ldr	r2, [pc, #252]	; 15680 <McZXSpectrum::fileHandler(char const*, unsigned char const*, int)+0xcac>
   15580:	e5930000 	ldr	r0, [r3]
   15584:	e3a01004 	mov	r1, #4
   15588:	ebffd089 	bl	97b4 <LogWrite>
   1558c:	eafffd94 	b	14be4 <McZXSpectrum::fileHandler(char const*, unsigned char const*, int)+0x210>
   15590:	e2953000 	adds	r3, r5, #0
   15594:	13a03001 	movne	r3, #1
   15598:	e59f10a0 	ldr	r1, [pc, #160]	; 15640 <McZXSpectrum::fileHandler(char const*, unsigned char const*, int)+0xc6c>
   1559c:	e3a00901 	mov	r0, #16384	; 0x4000
   155a0:	e3a02903 	mov	r2, #49152	; 0xc000
   155a4:	e58d3018 	str	r3, [sp, #24]
   155a8:	e58dc01c 	str	ip, [sp, #28]
   155ac:	eb001a30 	bl	1be74 <TargetState::addMemoryBlock(unsigned long, unsigned char const*, unsigned long)>
   155b0:	e3a00001 	mov	r0, #1
   155b4:	e3a01000 	mov	r1, #0
   155b8:	e59fb07c 	ldr	fp, [pc, #124]	; 1563c <McZXSpectrum::fileHandler(char const*, unsigned char const*, int)+0xc68>
   155bc:	e1cd02f8 	strd	r0, [sp, #40]	; 0x28
   155c0:	eafffec0 	b	150c8 <McZXSpectrum::fileHandler(char const*, unsigned char const*, int)+0x6f4>
   155c4:	e59f3030 	ldr	r3, [pc, #48]	; 155fc <McZXSpectrum::fileHandler(char const*, unsigned char const*, int)+0xc28>
   155c8:	e59f20b0 	ldr	r2, [pc, #176]	; 15680 <McZXSpectrum::fileHandler(char const*, unsigned char const*, int)+0xcac>
   155cc:	e5930000 	ldr	r0, [r3]
   155d0:	e3a01004 	mov	r1, #4
   155d4:	ebffd076 	bl	97b4 <LogWrite>
   155d8:	eafffd81 	b	14be4 <McZXSpectrum::fileHandler(char const*, unsigned char const*, int)+0x210>
   155dc:	0002e604 	.word	0x0002e604
   155e0:	00030310 	.word	0x00030310
   155e4:	0002f4d4 	.word	0x0002f4d4
   155e8:	0002f690 	.word	0x0002f690
   155ec:	0002f770 	.word	0x0002f770
   155f0:	0004223c 	.word	0x0004223c
   155f4:	0002f778 	.word	0x0002f778
   155f8:	0000c01a 	.word	0x0000c01a
   155fc:	00042070 	.word	0x00042070
   15600:	0002f794 	.word	0x0002f794
   15604:	0002f4dc 	.word	0x0002f4dc
   15608:	0002f4f8 	.word	0x0002f4f8
   1560c:	00005ccb 	.word	0x00005ccb
   15610:	00042074 	.word	0x00042074
   15614:	0002f670 	.word	0x0002f670
   15618:	0002f234 	.word	0x0002f234
   1561c:	0002f240 	.word	0x0002f240
   15620:	0002f510 	.word	0x0002f510
   15624:	0002f538 	.word	0x0002f538
   15628:	0002f898 	.word	0x0002f898
   1562c:	0002f658 	.word	0x0002f658
   15630:	0002f630 	.word	0x0002f630
   15634:	0002f644 	.word	0x0002f644
   15638:	0002f698 	.word	0x0002f698
   1563c:	00042078 	.word	0x00042078
   15640:	00046a6c 	.word	0x00046a6c
   15644:	0002f6d8 	.word	0x0002f6d8
   15648:	00003fff 	.word	0x00003fff
   1564c:	0002f708 	.word	0x0002f708
   15650:	0002ee38 	.word	0x0002ee38
   15654:	0002ee1c 	.word	0x0002ee1c
   15658:	0002f728 	.word	0x0002f728
   1565c:	0002efb4 	.word	0x0002efb4
   15660:	0002eff4 	.word	0x0002eff4
   15664:	0002f028 	.word	0x0002f028
   15668:	0002f064 	.word	0x0002f064
   1566c:	0002f5f8 	.word	0x0002f5f8
   15670:	0002f584 	.word	0x0002f584
   15674:	0000bfff 	.word	0x0000bfff
   15678:	0002f500 	.word	0x0002f500
   1567c:	0002f5bc 	.word	0x0002f5bc
   15680:	0002f6b4 	.word	0x0002f6b4

00015684 <McZXSpectrum::McZXSpectrum()>:
   15684:	e92d4010 	push	{r4, lr}
   15688:	e1a04000 	mov	r4, r0
   1568c:	ebffef81 	bl	11498 <McBase::McBase()>
   15690:	e3e02000 	mvn	r2, #0
   15694:	e3a0c000 	mov	ip, #0
   15698:	e59f301c 	ldr	r3, [pc, #28]	; 156bc <McZXSpectrum::McZXSpectrum()+0x38>
   1569c:	e59f001c 	ldr	r0, [pc, #28]	; 156c0 <McZXSpectrum::McZXSpectrum()+0x3c>
   156a0:	e2841a01 	add	r1, r4, #4096	; 0x1000
   156a4:	e5840000 	str	r0, [r4]
   156a8:	e1a00004 	mov	r0, r4
   156ac:	e5c1cb04 	strb	ip, [r1, #2820]	; 0xb04
   156b0:	e5832000 	str	r2, [r3]
   156b4:	e5832004 	str	r2, [r3, #4]
   156b8:	e8bd8010 	pop	{r4, pc}
   156bc:	00046a64 	.word	0x00046a64
   156c0:	0002f4b0 	.word	0x0002f4b0

000156c4 <McZXSpectrum::getKeyBitmap(int const*, int, unsigned char const*)>:
   156c4:	e92d40f0 	push	{r4, r5, r6, r7, lr}
   156c8:	e3a060ff 	mov	r6, #255	; 0xff
   156cc:	e2400004 	sub	r0, r0, #4
   156d0:	e2827006 	add	r7, r2, #6
   156d4:	e0805101 	add	r5, r0, r1, lsl #2
   156d8:	e3510000 	cmp	r1, #0
   156dc:	da000008 	ble	15704 <McZXSpectrum::getKeyBitmap(int const*, int, unsigned char const*)+0x40>
   156e0:	e1a03000 	mov	r3, r0
   156e4:	e3a0c001 	mov	ip, #1
   156e8:	e5d24000 	ldrb	r4, [r2]
   156ec:	e5b3e004 	ldr	lr, [r3, #4]!
   156f0:	e154000e 	cmp	r4, lr
   156f4:	01c6600c 	biceq	r6, r6, ip
   156f8:	e1550003 	cmp	r5, r3
   156fc:	e1a0c08c 	lsl	ip, ip, #1
   15700:	1afffff9 	bne	156ec <McZXSpectrum::getKeyBitmap(int const*, int, unsigned char const*)+0x28>
   15704:	e2822001 	add	r2, r2, #1
   15708:	e1520007 	cmp	r2, r7
   1570c:	1afffff1 	bne	156d8 <McZXSpectrum::getKeyBitmap(int const*, int, unsigned char const*)+0x14>
   15710:	e1a00006 	mov	r0, r6
   15714:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}

00015718 <McZXSpectrum::getDescriptorTable(int)>:
   15718:	e59f0000 	ldr	r0, [pc]	; 15720 <McZXSpectrum::getDescriptorTable(int)+0x8>
   1571c:	e12fff1e 	bx	lr
   15720:	0004223c 	.word	0x0004223c

00015724 <CInterrupts::setup()>:
   15724:	e3e02000 	mvn	r2, #0
   15728:	e3a01000 	mov	r1, #0
   1572c:	e92d4010 	push	{r4, lr}
   15730:	e59f3018 	ldr	r3, [pc, #24]	; 15750 <CInterrupts::setup()+0x2c>
   15734:	e583120c 	str	r1, [r3, #524]	; 0x20c
   15738:	e583221c 	str	r2, [r3, #540]	; 0x21c
   1573c:	e5832220 	str	r2, [r3, #544]	; 0x220
   15740:	e5832224 	str	r2, [r3, #548]	; 0x224
   15744:	ebffca63 	bl	80d8 <lowlev_enable_irq>
   15748:	e8bd4010 	pop	{r4, lr}
   1574c:	eaffca67 	b	80f0 <lowlev_enable_fiq>
   15750:	2000b000 	.word	0x2000b000

00015754 <CInterrupts::connectIRQ(unsigned int, void (*)(void*), void*)>:
   15754:	e16f3f11 	clz	r3, r1
   15758:	e1a032a3 	lsr	r3, r3, #5
   1575c:	e3500047 	cmp	r0, #71	; 0x47
   15760:	83833001 	orrhi	r3, r3, #1
   15764:	e3530000 	cmp	r3, #0
   15768:	112fff1e 	bxne	lr
   1576c:	e59f303c 	ldr	r3, [pc, #60]	; 157b0 <CInterrupts::connectIRQ(unsigned int, void (*)(void*), void*)+0x5c>
   15770:	e350001f 	cmp	r0, #31
   15774:	e083c100 	add	ip, r3, r0, lsl #2
   15778:	e7831100 	str	r1, [r3, r0, lsl #2]
   1577c:	e58c2120 	str	r2, [ip, #288]	; 0x120
   15780:	8a000005 	bhi	1579c <CInterrupts::connectIRQ(unsigned int, void (*)(void*), void*)+0x48>
   15784:	e59f2028 	ldr	r2, [pc, #40]	; 157b4 <CInterrupts::connectIRQ(unsigned int, void (*)(void*), void*)+0x60>
   15788:	e3a03001 	mov	r3, #1
   1578c:	e200001f 	and	r0, r0, #31
   15790:	e1a00013 	lsl	r0, r3, r0
   15794:	e5820000 	str	r0, [r2]
   15798:	e12fff1e 	bx	lr
   1579c:	e59f3014 	ldr	r3, [pc, #20]	; 157b8 <CInterrupts::connectIRQ(unsigned int, void (*)(void*), void*)+0x64>
   157a0:	e350003f 	cmp	r0, #63	; 0x3f
   157a4:	e59f2010 	ldr	r2, [pc, #16]	; 157bc <CInterrupts::connectIRQ(unsigned int, void (*)(void*), void*)+0x68>
   157a8:	91a02003 	movls	r2, r3
   157ac:	eafffff5 	b	15788 <CInterrupts::connectIRQ(unsigned int, void (*)(void*), void*)+0x34>
   157b0:	00052a6c 	.word	0x00052a6c
   157b4:	2000b210 	.word	0x2000b210
   157b8:	2000b214 	.word	0x2000b214
   157bc:	2000b218 	.word	0x2000b218

000157c0 <CInterrupts::disconnectIRQ(unsigned int)>:
   157c0:	e3500047 	cmp	r0, #71	; 0x47
   157c4:	812fff1e 	bxhi	lr
   157c8:	e3a03001 	mov	r3, #1
   157cc:	e200201f 	and	r2, r0, #31
   157d0:	e350001f 	cmp	r0, #31
   157d4:	e1a03213 	lsl	r3, r3, r2
   157d8:	8a000007 	bhi	157fc <CInterrupts::disconnectIRQ(unsigned int)+0x3c>
   157dc:	e59fc02c 	ldr	ip, [pc, #44]	; 15810 <CInterrupts::disconnectIRQ(unsigned int)+0x50>
   157e0:	e3a01000 	mov	r1, #0
   157e4:	e59f2028 	ldr	r2, [pc, #40]	; 15814 <CInterrupts::disconnectIRQ(unsigned int)+0x54>
   157e8:	e58c3000 	str	r3, [ip]
   157ec:	e0823100 	add	r3, r2, r0, lsl #2
   157f0:	e5831120 	str	r1, [r3, #288]	; 0x120
   157f4:	e7821100 	str	r1, [r2, r0, lsl #2]
   157f8:	e12fff1e 	bx	lr
   157fc:	e59f2014 	ldr	r2, [pc, #20]	; 15818 <CInterrupts::disconnectIRQ(unsigned int)+0x58>
   15800:	e350003f 	cmp	r0, #63	; 0x3f
   15804:	e59fc010 	ldr	ip, [pc, #16]	; 1581c <CInterrupts::disconnectIRQ(unsigned int)+0x5c>
   15808:	81a0c002 	movhi	ip, r2
   1580c:	eafffff3 	b	157e0 <CInterrupts::disconnectIRQ(unsigned int)+0x20>
   15810:	2000b21c 	.word	0x2000b21c
   15814:	00052a6c 	.word	0x00052a6c
   15818:	2000b224 	.word	0x2000b224
   1581c:	2000b220 	.word	0x2000b220

00015820 <CInterrupts::connectFIQ(unsigned int, void (*)(void*), void*)>:
   15820:	e16f3f11 	clz	r3, r1
   15824:	e1a032a3 	lsr	r3, r3, #5
   15828:	e3500047 	cmp	r0, #71	; 0x47
   1582c:	83833001 	orrhi	r3, r3, #1
   15830:	e3530000 	cmp	r3, #0
   15834:	112fff1e 	bxne	lr
   15838:	e59f301c 	ldr	r3, [pc, #28]	; 1585c <CInterrupts::connectFIQ(unsigned int, void (*)(void*), void*)+0x3c>
   1583c:	e59fc01c 	ldr	ip, [pc, #28]	; 15860 <CInterrupts::connectFIQ(unsigned int, void (*)(void*), void*)+0x40>
   15840:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
   15844:	e380e080 	orr	lr, r0, #128	; 0x80
   15848:	e5830240 	str	r0, [r3, #576]	; 0x240
   1584c:	e5831244 	str	r1, [r3, #580]	; 0x244
   15850:	e5832248 	str	r2, [r3, #584]	; 0x248
   15854:	e58ce20c 	str	lr, [ip, #524]	; 0x20c
   15858:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
   1585c:	00052a6c 	.word	0x00052a6c
   15860:	2000b000 	.word	0x2000b000

00015864 <CInterrupts::disconnectFIQ()>:
   15864:	e3a03000 	mov	r3, #0
   15868:	e59f2010 	ldr	r2, [pc, #16]	; 15880 <CInterrupts::disconnectFIQ()+0x1c>
   1586c:	e59f1010 	ldr	r1, [pc, #16]	; 15884 <CInterrupts::disconnectFIQ()+0x20>
   15870:	e581320c 	str	r3, [r1, #524]	; 0x20c
   15874:	e5823244 	str	r3, [r2, #580]	; 0x244
   15878:	e5823248 	str	r3, [r2, #584]	; 0x248
   1587c:	e12fff1e 	bx	lr
   15880:	00052a6c 	.word	0x00052a6c
   15884:	2000b000 	.word	0x2000b000

00015888 <CInterrupts::enableIRQ(unsigned int)>:
   15888:	e3500047 	cmp	r0, #71	; 0x47
   1588c:	812fff1e 	bxhi	lr
   15890:	e3a03001 	mov	r3, #1
   15894:	e200201f 	and	r2, r0, #31
   15898:	e350001f 	cmp	r0, #31
   1589c:	e1a03213 	lsl	r3, r3, r2
   158a0:	8a000002 	bhi	158b0 <CInterrupts::enableIRQ(unsigned int)+0x28>
   158a4:	e59f0020 	ldr	r0, [pc, #32]	; 158cc <CInterrupts::enableIRQ(unsigned int)+0x44>
   158a8:	e5803000 	str	r3, [r0]
   158ac:	e12fff1e 	bx	lr
   158b0:	e59f2018 	ldr	r2, [pc, #24]	; 158d0 <CInterrupts::enableIRQ(unsigned int)+0x48>
   158b4:	e59f1018 	ldr	r1, [pc, #24]	; 158d4 <CInterrupts::enableIRQ(unsigned int)+0x4c>
   158b8:	e350003f 	cmp	r0, #63	; 0x3f
   158bc:	91a00002 	movls	r0, r2
   158c0:	81a00001 	movhi	r0, r1
   158c4:	e5803000 	str	r3, [r0]
   158c8:	e12fff1e 	bx	lr
   158cc:	2000b210 	.word	0x2000b210
   158d0:	2000b214 	.word	0x2000b214
   158d4:	2000b218 	.word	0x2000b218

000158d8 <CInterrupts::disableIRQ(unsigned int)>:
   158d8:	e3500047 	cmp	r0, #71	; 0x47
   158dc:	812fff1e 	bxhi	lr
   158e0:	e3a03001 	mov	r3, #1
   158e4:	e200201f 	and	r2, r0, #31
   158e8:	e350001f 	cmp	r0, #31
   158ec:	e1a03213 	lsl	r3, r3, r2
   158f0:	8a000002 	bhi	15900 <CInterrupts::disableIRQ(unsigned int)+0x28>
   158f4:	e59f0020 	ldr	r0, [pc, #32]	; 1591c <CInterrupts::disableIRQ(unsigned int)+0x44>
   158f8:	e5803000 	str	r3, [r0]
   158fc:	e12fff1e 	bx	lr
   15900:	e59f2018 	ldr	r2, [pc, #24]	; 15920 <CInterrupts::disableIRQ(unsigned int)+0x48>
   15904:	e59f1018 	ldr	r1, [pc, #24]	; 15924 <CInterrupts::disableIRQ(unsigned int)+0x4c>
   15908:	e350003f 	cmp	r0, #63	; 0x3f
   1590c:	91a00002 	movls	r0, r2
   15910:	81a00001 	movhi	r0, r1
   15914:	e5803000 	str	r3, [r0]
   15918:	e12fff1e 	bx	lr
   1591c:	2000b21c 	.word	0x2000b21c
   15920:	2000b220 	.word	0x2000b220
   15924:	2000b224 	.word	0x2000b224

00015928 <CInterrupts::enableFIQ(unsigned int)>:
   15928:	e3500047 	cmp	r0, #71	; 0x47
   1592c:	959f3008 	ldrls	r3, [pc, #8]	; 1593c <CInterrupts::enableFIQ(unsigned int)+0x14>
   15930:	93800080 	orrls	r0, r0, #128	; 0x80
   15934:	9583020c 	strls	r0, [r3, #524]	; 0x20c
   15938:	e12fff1e 	bx	lr
   1593c:	2000b000 	.word	0x2000b000

00015940 <CInterrupts::disableFIQ()>:
   15940:	e3a02000 	mov	r2, #0
   15944:	e59f3004 	ldr	r3, [pc, #4]	; 15950 <CInterrupts::disableFIQ()+0x10>
   15948:	e583220c 	str	r2, [r3, #524]	; 0x20c
   1594c:	e12fff1e 	bx	lr
   15950:	2000b000 	.word	0x2000b000

00015954 <CInterrupts::irqHandler(unsigned int)>:
   15954:	e3500047 	cmp	r0, #71	; 0x47
   15958:	8a000009 	bhi	15984 <CInterrupts::irqHandler(unsigned int)+0x30>
   1595c:	e59f3064 	ldr	r3, [pc, #100]	; 159c8 <CInterrupts::irqHandler(unsigned int)+0x74>
   15960:	e7932100 	ldr	r2, [r3, r0, lsl #2]
   15964:	e3520000 	cmp	r2, #0
   15968:	0a000007 	beq	1598c <CInterrupts::irqHandler(unsigned int)+0x38>
   1596c:	e0830100 	add	r0, r3, r0, lsl #2
   15970:	e92d4010 	push	{r4, lr}
   15974:	e5900120 	ldr	r0, [r0, #288]	; 0x120
   15978:	e12fff32 	blx	r2
   1597c:	e3a00001 	mov	r0, #1
   15980:	e8bd8010 	pop	{r4, pc}
   15984:	e3a00000 	mov	r0, #0
   15988:	e12fff1e 	bx	lr
   1598c:	e3a03001 	mov	r3, #1
   15990:	e200201f 	and	r2, r0, #31
   15994:	e350001f 	cmp	r0, #31
   15998:	e1a03213 	lsl	r3, r3, r2
   1599c:	9a000007 	bls	159c0 <CInterrupts::irqHandler(unsigned int)+0x6c>
   159a0:	e59f2024 	ldr	r2, [pc, #36]	; 159cc <CInterrupts::irqHandler(unsigned int)+0x78>
   159a4:	e59f1024 	ldr	r1, [pc, #36]	; 159d0 <CInterrupts::irqHandler(unsigned int)+0x7c>
   159a8:	e350003f 	cmp	r0, #63	; 0x3f
   159ac:	91a00002 	movls	r0, r2
   159b0:	81a00001 	movhi	r0, r1
   159b4:	e5803000 	str	r3, [r0]
   159b8:	e3a00000 	mov	r0, #0
   159bc:	e12fff1e 	bx	lr
   159c0:	e59f000c 	ldr	r0, [pc, #12]	; 159d4 <CInterrupts::irqHandler(unsigned int)+0x80>
   159c4:	eafffffa 	b	159b4 <CInterrupts::irqHandler(unsigned int)+0x60>
   159c8:	00052a6c 	.word	0x00052a6c
   159cc:	2000b220 	.word	0x2000b220
   159d0:	2000b224 	.word	0x2000b224
   159d4:	2000b21c 	.word	0x2000b21c

000159d8 <CInterrupts::interruptService()>:
   159d8:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   159dc:	e3a00000 	mov	r0, #0
   159e0:	e3a05001 	mov	r5, #1
   159e4:	e59f30c0 	ldr	r3, [pc, #192]	; 15aac <CInterrupts::interruptService()+0xd4>
   159e8:	e24dd010 	sub	sp, sp, #16
   159ec:	e5931204 	ldr	r1, [r3, #516]	; 0x204
   159f0:	e5932208 	ldr	r2, [r3, #520]	; 0x208
   159f4:	e5933200 	ldr	r3, [r3, #512]	; 0x200
   159f8:	e59fc0b0 	ldr	ip, [pc, #176]	; 15ab0 <CInterrupts::interruptService()+0xd8>
   159fc:	e6ef3073 	uxtb	r3, r3
   15a00:	e1cd20f8 	strd	r2, [sp, #8]
   15a04:	e59f70a8 	ldr	r7, [pc, #168]	; 15ab4 <CInterrupts::interruptService()+0xdc>
   15a08:	e59f80a8 	ldr	r8, [pc, #168]	; 15ab8 <CInterrupts::interruptService()+0xe0>
   15a0c:	e59f60a8 	ldr	r6, [pc, #168]	; 15abc <CInterrupts::interruptService()+0xe4>
   15a10:	e58d1004 	str	r1, [sp, #4]
   15a14:	e28de004 	add	lr, sp, #4
   15a18:	e79e3100 	ldr	r3, [lr, r0, lsl #2]
   15a1c:	e3530000 	cmp	r3, #0
   15a20:	1a000004 	bne	15a38 <CInterrupts::interruptService()+0x60>
   15a24:	e2800001 	add	r0, r0, #1
   15a28:	e3500003 	cmp	r0, #3
   15a2c:	1afffff9 	bne	15a18 <CInterrupts::interruptService()+0x40>
   15a30:	e28dd010 	add	sp, sp, #16
   15a34:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   15a38:	e1a01280 	lsl	r1, r0, #5
   15a3c:	ea000002 	b	15a4c <CInterrupts::interruptService()+0x74>
   15a40:	e1b030a3 	lsrs	r3, r3, #1
   15a44:	e2811001 	add	r1, r1, #1
   15a48:	0afffff5 	beq	15a24 <CInterrupts::interruptService()+0x4c>
   15a4c:	e1e02003 	mvn	r2, r3
   15a50:	e3510047 	cmp	r1, #71	; 0x47
   15a54:	83822001 	orrhi	r2, r2, #1
   15a58:	e3120001 	tst	r2, #1
   15a5c:	1afffff7 	bne	15a40 <CInterrupts::interruptService()+0x68>
   15a60:	e79c2101 	ldr	r2, [ip, r1, lsl #2]
   15a64:	e1a04101 	lsl	r4, r1, #2
   15a68:	e3520000 	cmp	r2, #0
   15a6c:	0a000004 	beq	15a84 <CInterrupts::interruptService()+0xac>
   15a70:	e08cc004 	add	ip, ip, r4
   15a74:	e59c0120 	ldr	r0, [ip, #288]	; 0x120
   15a78:	e28dd010 	add	sp, sp, #16
   15a7c:	e8bd41f0 	pop	{r4, r5, r6, r7, r8, lr}
   15a80:	e12fff12 	bx	r2
   15a84:	e351001f 	cmp	r1, #31
   15a88:	e201201f 	and	r2, r1, #31
   15a8c:	e1a02215 	lsl	r2, r5, r2
   15a90:	91a04007 	movls	r4, r7
   15a94:	9a000002 	bls	15aa4 <CInterrupts::interruptService()+0xcc>
   15a98:	e351003f 	cmp	r1, #63	; 0x3f
   15a9c:	91a04008 	movls	r4, r8
   15aa0:	81a04006 	movhi	r4, r6
   15aa4:	e5842000 	str	r2, [r4]
   15aa8:	eaffffe4 	b	15a40 <CInterrupts::interruptService()+0x68>
   15aac:	2000b000 	.word	0x2000b000
   15ab0:	00052a6c 	.word	0x00052a6c
   15ab4:	2000b21c 	.word	0x2000b21c
   15ab8:	2000b220 	.word	0x2000b220
   15abc:	2000b224 	.word	0x2000b224

00015ac0 <CInterrupts::fiqService()>:
   15ac0:	e59f2010 	ldr	r2, [pc, #16]	; 15ad8 <CInterrupts::fiqService()+0x18>
   15ac4:	e5923244 	ldr	r3, [r2, #580]	; 0x244
   15ac8:	e3530000 	cmp	r3, #0
   15acc:	012fff1e 	bxeq	lr
   15ad0:	e5920248 	ldr	r0, [r2, #584]	; 0x248
   15ad4:	e12fff13 	bx	r3
   15ad8:	00052a6c 	.word	0x00052a6c

00015adc <irq_handler_>:
   15adc:	e24ee004 	sub	lr, lr, #4
   15ae0:	e92d51ff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, ip, lr}
   15ae4:	e3a00000 	mov	r0, #0
   15ae8:	e3a05001 	mov	r5, #1
   15aec:	e59f30c0 	ldr	r3, [pc, #192]	; 15bb4 <irq_handler_+0xd8>
   15af0:	e24dd014 	sub	sp, sp, #20
   15af4:	e5931204 	ldr	r1, [r3, #516]	; 0x204
   15af8:	e5932208 	ldr	r2, [r3, #520]	; 0x208
   15afc:	e5933200 	ldr	r3, [r3, #512]	; 0x200
   15b00:	e59fc0b0 	ldr	ip, [pc, #176]	; 15bb8 <irq_handler_+0xdc>
   15b04:	e6ef3073 	uxtb	r3, r3
   15b08:	e1cd20f8 	strd	r2, [sp, #8]
   15b0c:	e59f70a8 	ldr	r7, [pc, #168]	; 15bbc <irq_handler_+0xe0>
   15b10:	e59f80a8 	ldr	r8, [pc, #168]	; 15bc0 <irq_handler_+0xe4>
   15b14:	e59f60a8 	ldr	r6, [pc, #168]	; 15bc4 <irq_handler_+0xe8>
   15b18:	e58d1004 	str	r1, [sp, #4]
   15b1c:	e28de004 	add	lr, sp, #4
   15b20:	e79e3100 	ldr	r3, [lr, r0, lsl #2]
   15b24:	e3530000 	cmp	r3, #0
   15b28:	1a000004 	bne	15b40 <irq_handler_+0x64>
   15b2c:	e2800001 	add	r0, r0, #1
   15b30:	e3500003 	cmp	r0, #3
   15b34:	1afffff9 	bne	15b20 <irq_handler_+0x44>
   15b38:	e28dd014 	add	sp, sp, #20
   15b3c:	e8fd91ff 	ldm	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, ip, pc}^
   15b40:	e1a01280 	lsl	r1, r0, #5
   15b44:	ea000002 	b	15b54 <irq_handler_+0x78>
   15b48:	e1b030a3 	lsrs	r3, r3, #1
   15b4c:	e2811001 	add	r1, r1, #1
   15b50:	0afffff5 	beq	15b2c <irq_handler_+0x50>
   15b54:	e1e02003 	mvn	r2, r3
   15b58:	e3510047 	cmp	r1, #71	; 0x47
   15b5c:	83822001 	orrhi	r2, r2, #1
   15b60:	e3120001 	tst	r2, #1
   15b64:	1afffff7 	bne	15b48 <irq_handler_+0x6c>
   15b68:	e79c2101 	ldr	r2, [ip, r1, lsl #2]
   15b6c:	e1a04101 	lsl	r4, r1, #2
   15b70:	e3520000 	cmp	r2, #0
   15b74:	0a000004 	beq	15b8c <irq_handler_+0xb0>
   15b78:	e08cc004 	add	ip, ip, r4
   15b7c:	e59c0120 	ldr	r0, [ip, #288]	; 0x120
   15b80:	e12fff32 	blx	r2
   15b84:	e28dd014 	add	sp, sp, #20
   15b88:	e8fd91ff 	ldm	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, ip, pc}^
   15b8c:	e351001f 	cmp	r1, #31
   15b90:	e201201f 	and	r2, r1, #31
   15b94:	e1a02215 	lsl	r2, r5, r2
   15b98:	91a04007 	movls	r4, r7
   15b9c:	9a000002 	bls	15bac <irq_handler_+0xd0>
   15ba0:	e351003f 	cmp	r1, #63	; 0x3f
   15ba4:	91a04008 	movls	r4, r8
   15ba8:	81a04006 	movhi	r4, r6
   15bac:	e5842000 	str	r2, [r4]
   15bb0:	eaffffe4 	b	15b48 <irq_handler_+0x6c>
   15bb4:	2000b000 	.word	0x2000b000
   15bb8:	00052a6c 	.word	0x00052a6c
   15bbc:	2000b21c 	.word	0x2000b21c
   15bc0:	2000b220 	.word	0x2000b220
   15bc4:	2000b224 	.word	0x2000b224

00015bc8 <c_firq_handler>:
   15bc8:	e59f2010 	ldr	r2, [pc, #16]	; 15be0 <c_firq_handler+0x18>
   15bcc:	e5923244 	ldr	r3, [r2, #580]	; 0x244
   15bd0:	e3530000 	cmp	r3, #0
   15bd4:	012fff1e 	bxeq	lr
   15bd8:	e5920248 	ldr	r0, [r2, #584]	; 0x248
   15bdc:	e12fff13 	bx	r3
   15be0:	00052a6c 	.word	0x00052a6c

00015be4 <Display::Display()>:
   15be4:	e12fff1e 	bx	lr

00015be8 <Display::~Display()>:
   15be8:	e12fff1e 	bx	lr

00015bec <Display::init(int, int)>:
   15bec:	e1a00001 	mov	r0, r1
   15bf0:	e92d4010 	push	{r4, lr}
   15bf4:	e1a01002 	mov	r1, r2
   15bf8:	ebffdf2b 	bl	d8ac <wgfx_init>
   15bfc:	e3a00001 	mov	r0, #1
   15c00:	e8bd8010 	pop	{r4, pc}

00015c04 <Display::targetLayout(int, int, int, int, int, int, int, int, WgfxFont*, int, int, int, int)>:
   15c04:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15c08:	e1a07002 	mov	r7, r2
   15c0c:	e1a08003 	mov	r8, r3
   15c10:	e24dd044 	sub	sp, sp, #68	; 0x44
   15c14:	e59d3080 	ldr	r3, [sp, #128]	; 0x80
   15c18:	e59d006c 	ldr	r0, [sp, #108]	; 0x6c
   15c1c:	e59d2084 	ldr	r2, [sp, #132]	; 0x84
   15c20:	e58d3034 	str	r3, [sp, #52]	; 0x34
   15c24:	e59d308c 	ldr	r3, [sp, #140]	; 0x8c
   15c28:	e59d4068 	ldr	r4, [sp, #104]	; 0x68
   15c2c:	e59d6078 	ldr	r6, [sp, #120]	; 0x78
   15c30:	e59d5088 	ldr	r5, [sp, #136]	; 0x88
   15c34:	e58d103c 	str	r1, [sp, #60]	; 0x3c
   15c38:	e58d0038 	str	r0, [sp, #56]	; 0x38
   15c3c:	e59d9070 	ldr	r9, [sp, #112]	; 0x70
   15c40:	e59da074 	ldr	sl, [sp, #116]	; 0x74
   15c44:	e59db07c 	ldr	fp, [sp, #124]	; 0x7c
   15c48:	e58d2030 	str	r2, [sp, #48]	; 0x30
   15c4c:	e58d302c 	str	r3, [sp, #44]	; 0x2c
   15c50:	ebffd850 	bl	bd98 <wgfx_clear>
   15c54:	e59d2030 	ldr	r2, [sp, #48]	; 0x30
   15c58:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
   15c5c:	e58d201c 	str	r2, [sp, #28]
   15c60:	e1a02007 	mov	r2, r7
   15c64:	e3a07001 	mov	r7, #1
   15c68:	e59d0038 	ldr	r0, [sp, #56]	; 0x38
   15c6c:	e58d3024 	str	r3, [sp, #36]	; 0x24
   15c70:	e59d3034 	ldr	r3, [sp, #52]	; 0x34
   15c74:	e58d0004 	str	r0, [sp, #4]
   15c78:	e58d3018 	str	r3, [sp, #24]
   15c7c:	e59d103c 	ldr	r1, [sp, #60]	; 0x3c
   15c80:	e1a03008 	mov	r3, r8
   15c84:	e58d5020 	str	r5, [sp, #32]
   15c88:	e58db014 	str	fp, [sp, #20]
   15c8c:	e58d6010 	str	r6, [sp, #16]
   15c90:	e58da00c 	str	sl, [sp, #12]
   15c94:	e58d9008 	str	r9, [sp, #8]
   15c98:	e58d4000 	str	r4, [sp]
   15c9c:	e3a00000 	mov	r0, #0
   15ca0:	ebffd764 	bl	ba38 <wgfx_set_window>
   15ca4:	e3e03000 	mvn	r3, #0
   15ca8:	e3a01000 	mov	r1, #0
   15cac:	e3a00008 	mov	r0, #8
   15cb0:	e1a02715 	lsl	r2, r5, r7
   15cb4:	e0222496 	mla	r2, r6, r4, r2
   15cb8:	e58d0024 	str	r0, [sp, #36]	; 0x24
   15cbc:	e282200a 	add	r2, r2, #10
   15cc0:	e1a00007 	mov	r0, r7
   15cc4:	e58d1020 	str	r1, [sp, #32]
   15cc8:	e58d1014 	str	r1, [sp, #20]
   15ccc:	e58d301c 	str	r3, [sp, #28]
   15cd0:	e58d3018 	str	r3, [sp, #24]
   15cd4:	e58d3008 	str	r3, [sp, #8]
   15cd8:	e58d3004 	str	r3, [sp, #4]
   15cdc:	e58d3000 	str	r3, [sp]
   15ce0:	e58d7010 	str	r7, [sp, #16]
   15ce4:	e58d700c 	str	r7, [sp, #12]
   15ce8:	ebffd752 	bl	ba38 <wgfx_set_window>
   15cec:	e1a00007 	mov	r0, r7
   15cf0:	e28dd044 	add	sp, sp, #68	; 0x44
   15cf4:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15cf8:	eaffd80c 	b	bd30 <wgfx_set_console_window>

00015cfc <Display::targetSetChar()>:
   15cfc:	e12fff1e 	bx	lr

00015d00 <Display::windowWrite(int, int, int, unsigned char const*)>:
   15d00:	e1a00001 	mov	r0, r1
   15d04:	e1a01002 	mov	r1, r2
   15d08:	e1a02003 	mov	r2, r3
   15d0c:	e59d3000 	ldr	r3, [sp]
   15d10:	eaffd97b 	b	c304 <wgfx_puts>

00015d14 <Display::termWrite(char const*)>:
   15d14:	e1a00001 	mov	r0, r1
   15d18:	eaffdd90 	b	d360 <wgfx_term_putstring>

00015d1c <Display::termWrite(int)>:
   15d1c:	e6ef0071 	uxtb	r0, r1
   15d20:	eaffd8d9 	b	c08c <wgfx_term_putchar>

00015d24 <Display::termColour(int)>:
   15d24:	e6ef0071 	uxtb	r0, r1
   15d28:	eaffdf97 	b	db8c <wgfx_set_fg>

00015d2c <Display::termGetWidth()>:
   15d2c:	eaffd970 	b	c2f4 <wgfx_get_term_width>

00015d30 <OTAUpdate::performUpdate(unsigned char const*, int)>:
   15d30:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   15d34:	e3a0564d 	mov	r5, #80740352	; 0x4d00000
   15d38:	e1a06001 	mov	r6, r1
   15d3c:	e1a08000 	mov	r8, r0
   15d40:	e59f706c 	ldr	r7, [pc, #108]	; 15db4 <OTAUpdate::performUpdate(unsigned char const*, int)+0x84>
   15d44:	e24dd008 	sub	sp, sp, #8
   15d48:	e5974000 	ldr	r4, [r7]
   15d4c:	e1a03005 	mov	r3, r5
   15d50:	e59f2060 	ldr	r2, [pc, #96]	; 15db8 <OTAUpdate::performUpdate(unsigned char const*, int)+0x88>
   15d54:	e3a01004 	mov	r1, #4
   15d58:	e59f005c 	ldr	r0, [pc, #92]	; 15dbc <OTAUpdate::performUpdate(unsigned char const*, int)+0x8c>
   15d5c:	e58d4000 	str	r4, [sp]
   15d60:	ebffce93 	bl	97b4 <LogWrite>
   15d64:	e0844005 	add	r4, r4, r5
   15d68:	ebffc8de 	bl	80e8 <lowlev_disable_irq>
   15d6c:	ebffc8e3 	bl	8100 <lowlev_disable_fiq>
   15d70:	ebffc8f2 	bl	8140 <disable_mmu_and_cache>
   15d74:	e5972000 	ldr	r2, [r7]
   15d78:	e1a00005 	mov	r0, r5
   15d7c:	e59f103c 	ldr	r1, [pc, #60]	; 15dc0 <OTAUpdate::performUpdate(unsigned char const*, int)+0x90>
   15d80:	eb0058b1 	bl	2c04c <memcpy>
   15d84:	e1a02006 	mov	r2, r6
   15d88:	e1a01008 	mov	r1, r8
   15d8c:	e1a00004 	mov	r0, r4
   15d90:	eb0058ad 	bl	2c04c <memcpy>
   15d94:	e3a03902 	mov	r3, #32768	; 0x8000
   15d98:	e1a01004 	mov	r1, r4
   15d9c:	e1a02006 	mov	r2, r6
   15da0:	e1a00003 	mov	r0, r3
   15da4:	e1a0c005 	mov	ip, r5
   15da8:	e28dd008 	add	sp, sp, #8
   15dac:	e8bd41f0 	pop	{r4, r5, r6, r7, r8, lr}
   15db0:	e12fff1c 	bx	ip
   15db4:	00008234 	.word	0x00008234
   15db8:	0002f804 	.word	0x0002f804
   15dbc:	0002f7f8 	.word	0x0002f7f8
   15dc0:	00008218 	.word	0x00008218

00015dc4 <operator new(unsigned int)>:
   15dc4:	eaffd41d 	b	ae40 <nmalloc_malloc>

00015dc8 <operator new[](unsigned int)>:
   15dc8:	eaffd41c 	b	ae40 <nmalloc_malloc>

00015dcc <operator delete(void*)>:
   15dcc:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
   15dd0:	e24dd00c 	sub	sp, sp, #12
   15dd4:	e28d3008 	add	r3, sp, #8
   15dd8:	e5230004 	str	r0, [r3, #-4]!
   15ddc:	e1a00003 	mov	r0, r3
   15de0:	ebffd453 	bl	af34 <nmalloc_free>
   15de4:	e28dd00c 	add	sp, sp, #12
   15de8:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

00015dec <operator delete[](void*)>:
   15dec:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
   15df0:	e24dd00c 	sub	sp, sp, #12
   15df4:	e28d3008 	add	r3, sp, #8
   15df8:	e5230004 	str	r0, [r3, #-4]!
   15dfc:	e1a00003 	mov	r0, r3
   15e00:	ebffd44b 	bl	af34 <nmalloc_free>
   15e04:	e28dd00c 	add	sp, sp, #12
   15e08:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

00015e0c <operator delete(void*, unsigned int)>:
   15e0c:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
   15e10:	e24dd00c 	sub	sp, sp, #12
   15e14:	e28d3008 	add	r3, sp, #8
   15e18:	e5230004 	str	r0, [r3, #-4]!
   15e1c:	e1a00003 	mov	r0, r3
   15e20:	ebffd443 	bl	af34 <nmalloc_free>
   15e24:	e28dd00c 	add	sp, sp, #12
   15e28:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

00015e2c <operator delete[](void*, unsigned int)>:
   15e2c:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
   15e30:	e24dd00c 	sub	sp, sp, #12
   15e34:	e28d3008 	add	r3, sp, #8
   15e38:	e5230004 	str	r0, [r3, #-4]!
   15e3c:	e1a00003 	mov	r0, r3
   15e40:	ebffd43b 	bl	af34 <nmalloc_free>
   15e44:	e28dd00c 	add	sp, sp, #12
   15e48:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

00015e4c <UartMaxi::isrStatic(void*)>:
   15e4c:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   15e50:	e3a0e000 	mov	lr, #0
   15e54:	ee07ef9a 	mcr	15, 0, lr, cr7, cr10, {4}
   15e58:	e59f3198 	ldr	r3, [pc, #408]	; 15ff8 <UartMaxi::isrStatic(void*)+0x1ac>
   15e5c:	e3a04004 	mov	r4, #4
   15e60:	e1a01003 	mov	r1, r3
   15e64:	e3a07003 	mov	r7, #3
   15e68:	e3a06002 	mov	r6, #2
   15e6c:	e3a05001 	mov	r5, #1
   15e70:	e5932040 	ldr	r2, [r3, #64]	; 0x40
   15e74:	e5832044 	str	r2, [r3, #68]	; 0x44
   15e78:	e5913018 	ldr	r3, [r1, #24]
   15e7c:	e3130010 	tst	r3, #16
   15e80:	1a000024 	bne	15f18 <UartMaxi::isrStatic(void*)+0xcc>
   15e84:	e5913000 	ldr	r3, [r1]
   15e88:	e590200c 	ldr	r2, [r0, #12]
   15e8c:	e3130b01 	tst	r3, #1024	; 0x400
   15e90:	0a000039 	beq	15f7c <UartMaxi::isrStatic(void*)+0x130>
   15e94:	e5d0c010 	ldrb	ip, [r0, #16]
   15e98:	e35c0000 	cmp	ip, #0
   15e9c:	05c05010 	strbeq	r5, [r0, #16]
   15ea0:	e3520000 	cmp	r2, #0
   15ea4:	0afffff3 	beq	15e78 <UartMaxi::isrStatic(void*)+0x2c>
   15ea8:	e5908004 	ldr	r8, [r0, #4]
   15eac:	e590c008 	ldr	ip, [r0, #8]
   15eb0:	e158000c 	cmp	r8, ip
   15eb4:	0a000008 	beq	15edc <UartMaxi::isrStatic(void*)+0x90>
   15eb8:	e590c008 	ldr	ip, [r0, #8]
   15ebc:	e5908004 	ldr	r8, [r0, #4]
   15ec0:	e15c0008 	cmp	ip, r8
   15ec4:	2a00003e 	bcs	15fc4 <UartMaxi::isrStatic(void*)+0x178>
   15ec8:	e5908004 	ldr	r8, [r0, #4]
   15ecc:	e2422001 	sub	r2, r2, #1
   15ed0:	e35c0000 	cmp	ip, #0
   15ed4:	01520008 	cmpeq	r2, r8
   15ed8:	0a00002f 	beq	15f9c <UartMaxi::isrStatic(void*)+0x150>
   15edc:	e5902000 	ldr	r2, [r0]
   15ee0:	e3520000 	cmp	r2, #0
   15ee4:	0a00002c 	beq	15f9c <UartMaxi::isrStatic(void*)+0x150>
   15ee8:	e590c004 	ldr	ip, [r0, #4]
   15eec:	e7c2300c 	strb	r3, [r2, ip]
   15ef0:	e5903004 	ldr	r3, [r0, #4]
   15ef4:	e590200c 	ldr	r2, [r0, #12]
   15ef8:	e2833001 	add	r3, r3, #1
   15efc:	e5803004 	str	r3, [r0, #4]
   15f00:	e5903004 	ldr	r3, [r0, #4]
   15f04:	e1530002 	cmp	r3, r2
   15f08:	2580e004 	strcs	lr, [r0, #4]
   15f0c:	e5913018 	ldr	r3, [r1, #24]
   15f10:	e3130010 	tst	r3, #16
   15f14:	0affffda 	beq	15e84 <UartMaxi::isrStatic(void*)+0x38>
   15f18:	e59f10d8 	ldr	r1, [pc, #216]	; 15ff8 <UartMaxi::isrStatic(void*)+0x1ac>
   15f1c:	ea000010 	b	15f64 <UartMaxi::isrStatic(void*)+0x118>
   15f20:	e590c018 	ldr	ip, [r0, #24]
   15f24:	e590201c 	ldr	r2, [r0, #28]
   15f28:	e15c0002 	cmp	ip, r2
   15f2c:	0a00002c 	beq	15fe4 <UartMaxi::isrStatic(void*)+0x198>
   15f30:	e5902014 	ldr	r2, [r0, #20]
   15f34:	e3520000 	cmp	r2, #0
   15f38:	0a000029 	beq	15fe4 <UartMaxi::isrStatic(void*)+0x198>
   15f3c:	e590c01c 	ldr	ip, [r0, #28]
   15f40:	e7d2200c 	ldrb	r2, [r2, ip]
   15f44:	e5812000 	str	r2, [r1]
   15f48:	e590201c 	ldr	r2, [r0, #28]
   15f4c:	e590c020 	ldr	ip, [r0, #32]
   15f50:	e2822001 	add	r2, r2, #1
   15f54:	e580201c 	str	r2, [r0, #28]
   15f58:	e590201c 	ldr	r2, [r0, #28]
   15f5c:	e152000c 	cmp	r2, ip
   15f60:	2580301c 	strcs	r3, [r0, #28]
   15f64:	e5913018 	ldr	r3, [r1, #24]
   15f68:	e2133020 	ands	r3, r3, #32
   15f6c:	0affffeb 	beq	15f20 <UartMaxi::isrStatic(void*)+0xd4>
   15f70:	e3a03000 	mov	r3, #0
   15f74:	ee073fba 	mcr	15, 0, r3, cr7, cr10, {5}
   15f78:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   15f7c:	e3130b02 	tst	r3, #2048	; 0x800
   15f80:	0a000009 	beq	15fac <UartMaxi::isrStatic(void*)+0x160>
   15f84:	e5d0c010 	ldrb	ip, [r0, #16]
   15f88:	e35c0000 	cmp	ip, #0
   15f8c:	05c06010 	strbeq	r6, [r0, #16]
   15f90:	eaffffc2 	b	15ea0 <UartMaxi::isrStatic(void*)+0x54>
   15f94:	e3520000 	cmp	r2, #0
   15f98:	1affffc2 	bne	15ea8 <UartMaxi::isrStatic(void*)+0x5c>
   15f9c:	e5d03010 	ldrb	r3, [r0, #16]
   15fa0:	e3530000 	cmp	r3, #0
   15fa4:	05c04010 	strbeq	r4, [r0, #16]
   15fa8:	eaffffb2 	b	15e78 <UartMaxi::isrStatic(void*)+0x2c>
   15fac:	e3130c01 	tst	r3, #256	; 0x100
   15fb0:	0afffff7 	beq	15f94 <UartMaxi::isrStatic(void*)+0x148>
   15fb4:	e5d0c010 	ldrb	ip, [r0, #16]
   15fb8:	e35c0000 	cmp	ip, #0
   15fbc:	05c07010 	strbeq	r7, [r0, #16]
   15fc0:	eaffffb6 	b	15ea0 <UartMaxi::isrStatic(void*)+0x54>
   15fc4:	e5902004 	ldr	r2, [r0, #4]
   15fc8:	e04cc002 	sub	ip, ip, r2
   15fcc:	e35c0001 	cmp	ip, #1
   15fd0:	8affffc1 	bhi	15edc <UartMaxi::isrStatic(void*)+0x90>
   15fd4:	e5d03010 	ldrb	r3, [r0, #16]
   15fd8:	e3530000 	cmp	r3, #0
   15fdc:	05c04010 	strbeq	r4, [r0, #16]
   15fe0:	eaffffa4 	b	15e78 <UartMaxi::isrStatic(void*)+0x2c>
   15fe4:	e59f200c 	ldr	r2, [pc, #12]	; 15ff8 <UartMaxi::isrStatic(void*)+0x1ac>
   15fe8:	e5923038 	ldr	r3, [r2, #56]	; 0x38
   15fec:	e3c33020 	bic	r3, r3, #32
   15ff0:	e5823038 	str	r3, [r2, #56]	; 0x38
   15ff4:	eaffffdd 	b	15f70 <UartMaxi::isrStatic(void*)+0x124>
   15ff8:	20201000 	.word	0x20201000

00015ffc <UartMaxi::UartMaxi()>:
   15ffc:	e3a02000 	mov	r2, #0
   16000:	e5802004 	str	r2, [r0, #4]
   16004:	e580200c 	str	r2, [r0, #12]
   16008:	e5802008 	str	r2, [r0, #8]
   1600c:	e5802020 	str	r2, [r0, #32]
   16010:	e5802018 	str	r2, [r0, #24]
   16014:	e5802000 	str	r2, [r0]
   16018:	e580201c 	str	r2, [r0, #28]
   1601c:	e5802014 	str	r2, [r0, #20]
   16020:	e5c02010 	strb	r2, [r0, #16]
   16024:	e12fff1e 	bx	lr

00016028 <UartMaxi::~UartMaxi()>:
   16028:	e92d4010 	push	{r4, lr}
   1602c:	e3a03000 	mov	r3, #0
   16030:	e1a04000 	mov	r4, r0
   16034:	ee073f9a 	mcr	15, 0, r3, cr7, cr10, {4}
   16038:	e59f2040 	ldr	r2, [pc, #64]	; 16080 <UartMaxi::~UartMaxi()+0x58>
   1603c:	e5823038 	str	r3, [r2, #56]	; 0x38
   16040:	e5823030 	str	r3, [r2, #48]	; 0x30
   16044:	ee073fba 	mcr	15, 0, r3, cr7, cr10, {5}
   16048:	e3a00039 	mov	r0, #57	; 0x39
   1604c:	ebfffddb 	bl	157c0 <CInterrupts::disconnectIRQ(unsigned int)>
   16050:	e5943000 	ldr	r3, [r4]
   16054:	e3530000 	cmp	r3, #0
   16058:	0a000001 	beq	16064 <UartMaxi::~UartMaxi()+0x3c>
   1605c:	e1a00004 	mov	r0, r4
   16060:	ebffd3b3 	bl	af34 <nmalloc_free>
   16064:	e5943014 	ldr	r3, [r4, #20]
   16068:	e3530000 	cmp	r3, #0
   1606c:	0a000001 	beq	16078 <UartMaxi::~UartMaxi()+0x50>
   16070:	e2840014 	add	r0, r4, #20
   16074:	ebffd3ae 	bl	af34 <nmalloc_free>
   16078:	e1a00004 	mov	r0, r4
   1607c:	e8bd8010 	pop	{r4, pc}
   16080:	20201000 	.word	0x20201000

00016084 <UartMaxi::setup(unsigned int, int, int)>:
   16084:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16088:	e24dd014 	sub	sp, sp, #20
   1608c:	e1a08002 	mov	r8, r2
   16090:	e1a09003 	mov	r9, r3
   16094:	e1a06001 	mov	r6, r1
   16098:	e1a04000 	mov	r4, r0
   1609c:	eb000549 	bl	175c8 <CMachineInfo::Get()>
   160a0:	e3a01002 	mov	r1, #2
   160a4:	eb0004e6 	bl	17444 <CMachineInfo::GetMaxClockRate(unsigned long) const>
   160a8:	e1a0b000 	mov	fp, r0
   160ac:	eb000545 	bl	175c8 <CMachineInfo::Get()>
   160b0:	e3a03001 	mov	r3, #1
   160b4:	e59f21ac 	ldr	r2, [pc, #428]	; 16268 <UartMaxi::setup(unsigned int, int, int)+0x1e4>
   160b8:	e3a01002 	mov	r1, #2
   160bc:	eb000521 	bl	17548 <CMachineInfo::SetClockRate(unsigned long, unsigned int, bool)>
   160c0:	eb000540 	bl	175c8 <CMachineInfo::Get()>
   160c4:	e3a01002 	mov	r1, #2
   160c8:	eb0004f2 	bl	17498 <CMachineInfo::GetClockRate(unsigned long) const>
   160cc:	e1a05206 	lsl	r5, r6, #4
   160d0:	e1a01005 	mov	r1, r5
   160d4:	e1a0a000 	mov	sl, r0
   160d8:	eb005ede 	bl	2dc58 <__aeabi_uidivmod>
   160dc:	e59f3188 	ldr	r3, [pc, #392]	; 1626c <UartMaxi::setup(unsigned int, int, int)+0x1e8>
   160e0:	e2402001 	sub	r2, r0, #1
   160e4:	e1520003 	cmp	r2, r3
   160e8:	e1a07000 	mov	r7, r0
   160ec:	8a000053 	bhi	16240 <UartMaxi::setup(unsigned int, int, int)+0x1bc>
   160f0:	e1a00181 	lsl	r0, r1, #3
   160f4:	e1a01006 	mov	r1, r6
   160f8:	eb005e99 	bl	2db64 <__udivsi3>
   160fc:	e2005001 	and	r5, r0, #1
   16100:	e08550a0 	add	r5, r5, r0, lsr #1
   16104:	e355003f 	cmp	r5, #63	; 0x3f
   16108:	8a000041 	bhi	16214 <UartMaxi::setup(unsigned int, int, int)+0x190>
   1610c:	e1a03006 	mov	r3, r6
   16110:	e58d5004 	str	r5, [sp, #4]
   16114:	e58d7000 	str	r7, [sp]
   16118:	e59f2150 	ldr	r2, [pc, #336]	; 16270 <UartMaxi::setup(unsigned int, int, int)+0x1ec>
   1611c:	e3a01005 	mov	r1, #5
   16120:	e59f014c 	ldr	r0, [pc, #332]	; 16274 <UartMaxi::setup(unsigned int, int, int)+0x1f0>
   16124:	ebffcda2 	bl	97b4 <LogWrite>
   16128:	e5943000 	ldr	r3, [r4]
   1612c:	e3530000 	cmp	r3, #0
   16130:	0a000001 	beq	1613c <UartMaxi::setup(unsigned int, int, int)+0xb8>
   16134:	e1a00004 	mov	r0, r4
   16138:	ebffd37d 	bl	af34 <nmalloc_free>
   1613c:	e3a02000 	mov	r2, #0
   16140:	e5943014 	ldr	r3, [r4, #20]
   16144:	e5842000 	str	r2, [r4]
   16148:	e1530002 	cmp	r3, r2
   1614c:	0a000001 	beq	16158 <UartMaxi::setup(unsigned int, int, int)+0xd4>
   16150:	e2840014 	add	r0, r4, #20
   16154:	ebffd376 	bl	af34 <nmalloc_free>
   16158:	e3a06000 	mov	r6, #0
   1615c:	e1a00008 	mov	r0, r8
   16160:	e5846014 	str	r6, [r4, #20]
   16164:	ebffd335 	bl	ae40 <nmalloc_malloc>
   16168:	e1500006 	cmp	r0, r6
   1616c:	e5840000 	str	r0, [r4]
   16170:	0a00002f 	beq	16234 <UartMaxi::setup(unsigned int, int, int)+0x1b0>
   16174:	e1a00009 	mov	r0, r9
   16178:	ebffd330 	bl	ae40 <nmalloc_malloc>
   1617c:	e3500000 	cmp	r0, #0
   16180:	e5840014 	str	r0, [r4, #20]
   16184:	0a00002a 	beq	16234 <UartMaxi::setup(unsigned int, int, int)+0x1b0>
   16188:	e5846004 	str	r6, [r4, #4]
   1618c:	e584800c 	str	r8, [r4, #12]
   16190:	e5846008 	str	r6, [r4, #8]
   16194:	e5849020 	str	r9, [r4, #32]
   16198:	e5846018 	str	r6, [r4, #24]
   1619c:	e3a01004 	mov	r1, #4
   161a0:	e584601c 	str	r6, [r4, #28]
   161a4:	e3a0000f 	mov	r0, #15
   161a8:	eb000512 	bl	175f8 <pinMode>
   161ac:	e3a01004 	mov	r1, #4
   161b0:	e3a0000e 	mov	r0, #14
   161b4:	eb00050f 	bl	175f8 <pinMode>
   161b8:	e1a02004 	mov	r2, r4
   161bc:	e59f10b4 	ldr	r1, [pc, #180]	; 16278 <UartMaxi::setup(unsigned int, int, int)+0x1f4>
   161c0:	e3a00039 	mov	r0, #57	; 0x39
   161c4:	ebfffd62 	bl	15754 <CInterrupts::connectIRQ(unsigned int, void (*)(void*), void*)>
   161c8:	ee076f9a 	mcr	15, 0, r6, cr7, cr10, {4}
   161cc:	e3a0c011 	mov	ip, #17
   161d0:	e3a00070 	mov	r0, #112	; 0x70
   161d4:	e3a01e45 	mov	r1, #1104	; 0x450
   161d8:	e59f309c 	ldr	r3, [pc, #156]	; 1627c <UartMaxi::setup(unsigned int, int, int)+0x1f8>
   161dc:	e59f209c 	ldr	r2, [pc, #156]	; 16280 <UartMaxi::setup(unsigned int, int, int)+0x1fc>
   161e0:	e5836038 	str	r6, [r3, #56]	; 0x38
   161e4:	e5832044 	str	r2, [r3, #68]	; 0x44
   161e8:	e59f2094 	ldr	r2, [pc, #148]	; 16284 <UartMaxi::setup(unsigned int, int, int)+0x200>
   161ec:	e5837024 	str	r7, [r3, #36]	; 0x24
   161f0:	e5835028 	str	r5, [r3, #40]	; 0x28
   161f4:	e583c034 	str	ip, [r3, #52]	; 0x34
   161f8:	e583002c 	str	r0, [r3, #44]	; 0x2c
   161fc:	e5831038 	str	r1, [r3, #56]	; 0x38
   16200:	e5832030 	str	r2, [r3, #48]	; 0x30
   16204:	ee076fba 	mcr	15, 0, r6, cr7, cr10, {5}
   16208:	e3a00001 	mov	r0, #1
   1620c:	e28dd014 	add	sp, sp, #20
   16210:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16214:	e1a03005 	mov	r3, r5
   16218:	e59f2068 	ldr	r2, [pc, #104]	; 16288 <UartMaxi::setup(unsigned int, int, int)+0x204>
   1621c:	e3a01005 	mov	r1, #5
   16220:	e59f004c 	ldr	r0, [pc, #76]	; 16274 <UartMaxi::setup(unsigned int, int, int)+0x1f0>
   16224:	ebffcd62 	bl	97b4 <LogWrite>
   16228:	e3a00000 	mov	r0, #0
   1622c:	e28dd014 	add	sp, sp, #20
   16230:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16234:	e3a00000 	mov	r0, #0
   16238:	e28dd014 	add	sp, sp, #20
   1623c:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16240:	e1a03000 	mov	r3, r0
   16244:	e58d5008 	str	r5, [sp, #8]
   16248:	e1cda0f0 	strd	sl, [sp]
   1624c:	e59f2038 	ldr	r2, [pc, #56]	; 1628c <UartMaxi::setup(unsigned int, int, int)+0x208>
   16250:	e3a01005 	mov	r1, #5
   16254:	e59f0018 	ldr	r0, [pc, #24]	; 16274 <UartMaxi::setup(unsigned int, int, int)+0x1f0>
   16258:	ebffcd55 	bl	97b4 <LogWrite>
   1625c:	e3a00000 	mov	r0, #0
   16260:	e28dd014 	add	sp, sp, #20
   16264:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16268:	00f42400 	.word	0x00f42400
   1626c:	0000fffe 	.word	0x0000fffe
   16270:	0002f884 	.word	0x0002f884
   16274:	0002f828 	.word	0x0002f828
   16278:	00015e4c 	.word	0x00015e4c
   1627c:	20201000 	.word	0x20201000
   16280:	000007ff 	.word	0x000007ff
   16284:	00000301 	.word	0x00000301
   16288:	0002f874 	.word	0x0002f874
   1628c:	0002f834 	.word	0x0002f834

00016290 <UartMaxi::clear()>:
   16290:	e3a03000 	mov	r3, #0
   16294:	e5803004 	str	r3, [r0, #4]
   16298:	e5803008 	str	r3, [r0, #8]
   1629c:	e12fff1e 	bx	lr

000162a0 <UartMaxi::writeBase(unsigned int)>:
   162a0:	e1a03000 	mov	r3, r0
   162a4:	e5900014 	ldr	r0, [r0, #20]
   162a8:	e3500000 	cmp	r0, #0
   162ac:	012fff1e 	bxeq	lr
   162b0:	e5932020 	ldr	r2, [r3, #32]
   162b4:	e3520000 	cmp	r2, #0
   162b8:	0a00001a 	beq	16328 <UartMaxi::writeBase(unsigned int)+0x88>
   162bc:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
   162c0:	e593e018 	ldr	lr, [r3, #24]
   162c4:	e593c01c 	ldr	ip, [r3, #28]
   162c8:	e15e000c 	cmp	lr, ip
   162cc:	0a000008 	beq	162f4 <UartMaxi::writeBase(unsigned int)+0x54>
   162d0:	e593c01c 	ldr	ip, [r3, #28]
   162d4:	e593e018 	ldr	lr, [r3, #24]
   162d8:	e15c000e 	cmp	ip, lr
   162dc:	2a000015 	bcs	16338 <UartMaxi::writeBase(unsigned int)+0x98>
   162e0:	e593e018 	ldr	lr, [r3, #24]
   162e4:	e2422001 	sub	r2, r2, #1
   162e8:	e35c0000 	cmp	ip, #0
   162ec:	0152000e 	cmpeq	r2, lr
   162f0:	0a000014 	beq	16348 <UartMaxi::writeBase(unsigned int)+0xa8>
   162f4:	e5932018 	ldr	r2, [r3, #24]
   162f8:	e7c01002 	strb	r1, [r0, r2]
   162fc:	e5932018 	ldr	r2, [r3, #24]
   16300:	e5931020 	ldr	r1, [r3, #32]
   16304:	e2822001 	add	r2, r2, #1
   16308:	e5832018 	str	r2, [r3, #24]
   1630c:	e5932018 	ldr	r2, [r3, #24]
   16310:	e1520001 	cmp	r2, r1
   16314:	3a000005 	bcc	16330 <UartMaxi::writeBase(unsigned int)+0x90>
   16318:	e3a02000 	mov	r2, #0
   1631c:	e3a00001 	mov	r0, #1
   16320:	e5832018 	str	r2, [r3, #24]
   16324:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
   16328:	e1a00002 	mov	r0, r2
   1632c:	e12fff1e 	bx	lr
   16330:	e3a00001 	mov	r0, #1
   16334:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
   16338:	e5932018 	ldr	r2, [r3, #24]
   1633c:	e04c2002 	sub	r2, ip, r2
   16340:	e3520001 	cmp	r2, #1
   16344:	8affffea 	bhi	162f4 <UartMaxi::writeBase(unsigned int)+0x54>
   16348:	e3a00000 	mov	r0, #0
   1634c:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

00016350 <UartMaxi::txPumpPrime()>:
   16350:	e5902018 	ldr	r2, [r0, #24]
   16354:	e590301c 	ldr	r3, [r0, #28]
   16358:	e1520003 	cmp	r2, r3
   1635c:	012fff1e 	bxeq	lr
   16360:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
   16364:	e590e014 	ldr	lr, [r0, #20]
   16368:	e35e0000 	cmp	lr, #0
   1636c:	049df004 	popeq	{pc}		; (ldreq pc, [sp], #4)
   16370:	e3a03000 	mov	r3, #0
   16374:	ee073f9a 	mcr	15, 0, r3, cr7, cr10, {4}
   16378:	e59f1068 	ldr	r1, [pc, #104]	; 163e8 <UartMaxi::txPumpPrime()+0x98>
   1637c:	e5912018 	ldr	r2, [r1, #24]
   16380:	e2122020 	ands	r2, r2, #32
   16384:	1a000012 	bne	163d4 <UartMaxi::txPumpPrime()+0x84>
   16388:	e590301c 	ldr	r3, [r0, #28]
   1638c:	e7de3003 	ldrb	r3, [lr, r3]
   16390:	e5813000 	str	r3, [r1]
   16394:	e590301c 	ldr	r3, [r0, #28]
   16398:	e590c020 	ldr	ip, [r0, #32]
   1639c:	e2833001 	add	r3, r3, #1
   163a0:	e580301c 	str	r3, [r0, #28]
   163a4:	e590301c 	ldr	r3, [r0, #28]
   163a8:	e153000c 	cmp	r3, ip
   163ac:	2580201c 	strcs	r2, [r0, #28]
   163b0:	ee072fba 	mcr	15, 0, r2, cr7, cr10, {5}
   163b4:	e590c018 	ldr	ip, [r0, #24]
   163b8:	e590301c 	ldr	r3, [r0, #28]
   163bc:	e15c0003 	cmp	ip, r3
   163c0:	049df004 	popeq	{pc}		; (ldreq pc, [sp], #4)
   163c4:	ee072f9a 	mcr	15, 0, r2, cr7, cr10, {4}
   163c8:	e5913018 	ldr	r3, [r1, #24]
   163cc:	e3130020 	tst	r3, #32
   163d0:	0affffec 	beq	16388 <UartMaxi::txPumpPrime()+0x38>
   163d4:	e59f200c 	ldr	r2, [pc, #12]	; 163e8 <UartMaxi::txPumpPrime()+0x98>
   163d8:	e5923038 	ldr	r3, [r2, #56]	; 0x38
   163dc:	e3833020 	orr	r3, r3, #32
   163e0:	e5823038 	str	r3, [r2, #56]	; 0x38
   163e4:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
   163e8:	20201000 	.word	0x20201000

000163ec <UartMaxi::write(unsigned int)>:
   163ec:	e92d4010 	push	{r4, lr}
   163f0:	e5904014 	ldr	r4, [r0, #20]
   163f4:	e1a03000 	mov	r3, r0
   163f8:	e3540000 	cmp	r4, #0
   163fc:	0a000049 	beq	16528 <UartMaxi::write(unsigned int)+0x13c>
   16400:	e5902020 	ldr	r2, [r0, #32]
   16404:	e3520000 	cmp	r2, #0
   16408:	0a000023 	beq	1649c <UartMaxi::write(unsigned int)+0xb0>
   1640c:	e590c018 	ldr	ip, [r0, #24]
   16410:	e590001c 	ldr	r0, [r0, #28]
   16414:	e15c0000 	cmp	ip, r0
   16418:	0a000008 	beq	16440 <UartMaxi::write(unsigned int)+0x54>
   1641c:	e593001c 	ldr	r0, [r3, #28]
   16420:	e593c018 	ldr	ip, [r3, #24]
   16424:	e150000c 	cmp	r0, ip
   16428:	2a000017 	bcs	1648c <UartMaxi::write(unsigned int)+0xa0>
   1642c:	e593c018 	ldr	ip, [r3, #24]
   16430:	e2422001 	sub	r2, r2, #1
   16434:	e3500000 	cmp	r0, #0
   16438:	0152000c 	cmpeq	r2, ip
   1643c:	0a000016 	beq	1649c <UartMaxi::write(unsigned int)+0xb0>
   16440:	e5932018 	ldr	r2, [r3, #24]
   16444:	e7c41002 	strb	r1, [r4, r2]
   16448:	e5932018 	ldr	r2, [r3, #24]
   1644c:	e5931020 	ldr	r1, [r3, #32]
   16450:	e2822001 	add	r2, r2, #1
   16454:	e5832018 	str	r2, [r3, #24]
   16458:	e5932018 	ldr	r2, [r3, #24]
   1645c:	e1520001 	cmp	r2, r1
   16460:	23a02000 	movcs	r2, #0
   16464:	25832018 	strcs	r2, [r3, #24]
   16468:	e5932018 	ldr	r2, [r3, #24]
   1646c:	e593101c 	ldr	r1, [r3, #28]
   16470:	e1510002 	cmp	r1, r2
   16474:	0a00002f 	beq	16538 <UartMaxi::write(unsigned int)+0x14c>
   16478:	e5934014 	ldr	r4, [r3, #20]
   1647c:	e3a00001 	mov	r0, #1
   16480:	e3540000 	cmp	r4, #0
   16484:	1a000009 	bne	164b0 <UartMaxi::write(unsigned int)+0xc4>
   16488:	e8bd8010 	pop	{r4, pc}
   1648c:	e5932018 	ldr	r2, [r3, #24]
   16490:	e0400002 	sub	r0, r0, r2
   16494:	e3500001 	cmp	r0, #1
   16498:	8affffe8 	bhi	16440 <UartMaxi::write(unsigned int)+0x54>
   1649c:	e5932018 	ldr	r2, [r3, #24]
   164a0:	e593101c 	ldr	r1, [r3, #28]
   164a4:	e3a00000 	mov	r0, #0
   164a8:	e1510002 	cmp	r1, r2
   164ac:	08bd8010 	popeq	{r4, pc}
   164b0:	e3a02000 	mov	r2, #0
   164b4:	ee072f9a 	mcr	15, 0, r2, cr7, cr10, {4}
   164b8:	e59fc080 	ldr	ip, [pc, #128]	; 16540 <UartMaxi::write(unsigned int)+0x154>
   164bc:	e59c1018 	ldr	r1, [ip, #24]
   164c0:	e2111020 	ands	r1, r1, #32
   164c4:	1a000012 	bne	16514 <UartMaxi::write(unsigned int)+0x128>
   164c8:	e593201c 	ldr	r2, [r3, #28]
   164cc:	e7d42002 	ldrb	r2, [r4, r2]
   164d0:	e58c2000 	str	r2, [ip]
   164d4:	e593201c 	ldr	r2, [r3, #28]
   164d8:	e593e020 	ldr	lr, [r3, #32]
   164dc:	e2822001 	add	r2, r2, #1
   164e0:	e583201c 	str	r2, [r3, #28]
   164e4:	e593201c 	ldr	r2, [r3, #28]
   164e8:	e152000e 	cmp	r2, lr
   164ec:	2583101c 	strcs	r1, [r3, #28]
   164f0:	ee071fba 	mcr	15, 0, r1, cr7, cr10, {5}
   164f4:	e593e018 	ldr	lr, [r3, #24]
   164f8:	e593201c 	ldr	r2, [r3, #28]
   164fc:	e15e0002 	cmp	lr, r2
   16500:	08bd8010 	popeq	{r4, pc}
   16504:	ee071f9a 	mcr	15, 0, r1, cr7, cr10, {4}
   16508:	e59c2018 	ldr	r2, [ip, #24]
   1650c:	e3120020 	tst	r2, #32
   16510:	0affffec 	beq	164c8 <UartMaxi::write(unsigned int)+0xdc>
   16514:	e59f2024 	ldr	r2, [pc, #36]	; 16540 <UartMaxi::write(unsigned int)+0x154>
   16518:	e5923038 	ldr	r3, [r2, #56]	; 0x38
   1651c:	e3833020 	orr	r3, r3, #32
   16520:	e5823038 	str	r3, [r2, #56]	; 0x38
   16524:	e8bd8010 	pop	{r4, pc}
   16528:	e5932018 	ldr	r2, [r3, #24]
   1652c:	e1a00004 	mov	r0, r4
   16530:	e593301c 	ldr	r3, [r3, #28]
   16534:	e8bd8010 	pop	{r4, pc}
   16538:	e3a00001 	mov	r0, #1
   1653c:	e8bd8010 	pop	{r4, pc}
   16540:	20201000 	.word	0x20201000

00016544 <UartMaxi::write(char const*, unsigned int)>:
   16544:	e3520000 	cmp	r2, #0
   16548:	e92d4030 	push	{r4, r5, lr}
   1654c:	10812002 	addne	r2, r1, r2
   16550:	13a04000 	movne	r4, #0
   16554:	0a00001f 	beq	165d8 <UartMaxi::write(char const*, unsigned int)+0x94>
   16558:	e5903014 	ldr	r3, [r0, #20]
   1655c:	e3530000 	cmp	r3, #0
   16560:	0a000019 	beq	165cc <UartMaxi::write(char const*, unsigned int)+0x88>
   16564:	e590c020 	ldr	ip, [r0, #32]
   16568:	e35c0000 	cmp	ip, #0
   1656c:	0a000016 	beq	165cc <UartMaxi::write(char const*, unsigned int)+0x88>
   16570:	e5905018 	ldr	r5, [r0, #24]
   16574:	e590e01c 	ldr	lr, [r0, #28]
   16578:	e155000e 	cmp	r5, lr
   1657c:	0a000008 	beq	165a4 <UartMaxi::write(char const*, unsigned int)+0x60>
   16580:	e590e01c 	ldr	lr, [r0, #28]
   16584:	e5905018 	ldr	r5, [r0, #24]
   16588:	e24cc001 	sub	ip, ip, #1
   1658c:	e15e0005 	cmp	lr, r5
   16590:	2a000035 	bcs	1666c <UartMaxi::write(char const*, unsigned int)+0x128>
   16594:	e5905018 	ldr	r5, [r0, #24]
   16598:	e35e0000 	cmp	lr, #0
   1659c:	015c0005 	cmpeq	ip, r5
   165a0:	0a000009 	beq	165cc <UartMaxi::write(char const*, unsigned int)+0x88>
   165a4:	e590c018 	ldr	ip, [r0, #24]
   165a8:	e5d1e000 	ldrb	lr, [r1]
   165ac:	e7c3e00c 	strb	lr, [r3, ip]
   165b0:	e5903018 	ldr	r3, [r0, #24]
   165b4:	e590c020 	ldr	ip, [r0, #32]
   165b8:	e2833001 	add	r3, r3, #1
   165bc:	e5803018 	str	r3, [r0, #24]
   165c0:	e5903018 	ldr	r3, [r0, #24]
   165c4:	e153000c 	cmp	r3, ip
   165c8:	25804018 	strcs	r4, [r0, #24]
   165cc:	e2811001 	add	r1, r1, #1
   165d0:	e1510002 	cmp	r1, r2
   165d4:	1affffdf 	bne	16558 <UartMaxi::write(char const*, unsigned int)+0x14>
   165d8:	e5902018 	ldr	r2, [r0, #24]
   165dc:	e590301c 	ldr	r3, [r0, #28]
   165e0:	e1520003 	cmp	r2, r3
   165e4:	08bd8030 	popeq	{r4, r5, pc}
   165e8:	e590e014 	ldr	lr, [r0, #20]
   165ec:	e35e0000 	cmp	lr, #0
   165f0:	08bd8030 	popeq	{r4, r5, pc}
   165f4:	e3a03000 	mov	r3, #0
   165f8:	ee073f9a 	mcr	15, 0, r3, cr7, cr10, {4}
   165fc:	e59f107c 	ldr	r1, [pc, #124]	; 16680 <UartMaxi::write(char const*, unsigned int)+0x13c>
   16600:	e5912018 	ldr	r2, [r1, #24]
   16604:	e2122020 	ands	r2, r2, #32
   16608:	1a000012 	bne	16658 <UartMaxi::write(char const*, unsigned int)+0x114>
   1660c:	e590301c 	ldr	r3, [r0, #28]
   16610:	e7de3003 	ldrb	r3, [lr, r3]
   16614:	e5813000 	str	r3, [r1]
   16618:	e590301c 	ldr	r3, [r0, #28]
   1661c:	e590c020 	ldr	ip, [r0, #32]
   16620:	e2833001 	add	r3, r3, #1
   16624:	e580301c 	str	r3, [r0, #28]
   16628:	e590301c 	ldr	r3, [r0, #28]
   1662c:	e153000c 	cmp	r3, ip
   16630:	2580201c 	strcs	r2, [r0, #28]
   16634:	ee072fba 	mcr	15, 0, r2, cr7, cr10, {5}
   16638:	e590c018 	ldr	ip, [r0, #24]
   1663c:	e590301c 	ldr	r3, [r0, #28]
   16640:	e15c0003 	cmp	ip, r3
   16644:	08bd8030 	popeq	{r4, r5, pc}
   16648:	ee072f9a 	mcr	15, 0, r2, cr7, cr10, {4}
   1664c:	e5913018 	ldr	r3, [r1, #24]
   16650:	e3130020 	tst	r3, #32
   16654:	0affffec 	beq	1660c <UartMaxi::write(char const*, unsigned int)+0xc8>
   16658:	e59f2020 	ldr	r2, [pc, #32]	; 16680 <UartMaxi::write(char const*, unsigned int)+0x13c>
   1665c:	e5923038 	ldr	r3, [r2, #56]	; 0x38
   16660:	e3833020 	orr	r3, r3, #32
   16664:	e5823038 	str	r3, [r2, #56]	; 0x38
   16668:	e8bd8030 	pop	{r4, r5, pc}
   1666c:	e590c018 	ldr	ip, [r0, #24]
   16670:	e04ee00c 	sub	lr, lr, ip
   16674:	e35e0001 	cmp	lr, #1
   16678:	8affffc9 	bhi	165a4 <UartMaxi::write(char const*, unsigned int)+0x60>
   1667c:	eaffffd2 	b	165cc <UartMaxi::write(char const*, unsigned int)+0x88>
   16680:	20201000 	.word	0x20201000

00016684 <UartMaxi::writeStr(char const*)>:
   16684:	e92d4070 	push	{r4, r5, r6, lr}
   16688:	e1a04000 	mov	r4, r0
   1668c:	e1a00001 	mov	r0, r1
   16690:	e1a05001 	mov	r5, r1
   16694:	eb005840 	bl	2c79c <strlen>
   16698:	e3500000 	cmp	r0, #0
   1669c:	11a01005 	movne	r1, r5
   166a0:	13a0e000 	movne	lr, #0
   166a4:	10810000 	addne	r0, r1, r0
   166a8:	0a00001f 	beq	1672c <UartMaxi::writeStr(char const*)+0xa8>
   166ac:	e5943014 	ldr	r3, [r4, #20]
   166b0:	e3530000 	cmp	r3, #0
   166b4:	0a000019 	beq	16720 <UartMaxi::writeStr(char const*)+0x9c>
   166b8:	e5942020 	ldr	r2, [r4, #32]
   166bc:	e3520000 	cmp	r2, #0
   166c0:	0a000016 	beq	16720 <UartMaxi::writeStr(char const*)+0x9c>
   166c4:	e5945018 	ldr	r5, [r4, #24]
   166c8:	e594c01c 	ldr	ip, [r4, #28]
   166cc:	e155000c 	cmp	r5, ip
   166d0:	0a000008 	beq	166f8 <UartMaxi::writeStr(char const*)+0x74>
   166d4:	e594c01c 	ldr	ip, [r4, #28]
   166d8:	e5945018 	ldr	r5, [r4, #24]
   166dc:	e2422001 	sub	r2, r2, #1
   166e0:	e15c0005 	cmp	ip, r5
   166e4:	2a000035 	bcs	167c0 <UartMaxi::writeStr(char const*)+0x13c>
   166e8:	e5945018 	ldr	r5, [r4, #24]
   166ec:	e35c0000 	cmp	ip, #0
   166f0:	01520005 	cmpeq	r2, r5
   166f4:	0a000009 	beq	16720 <UartMaxi::writeStr(char const*)+0x9c>
   166f8:	e5942018 	ldr	r2, [r4, #24]
   166fc:	e5d1c000 	ldrb	ip, [r1]
   16700:	e7c3c002 	strb	ip, [r3, r2]
   16704:	e5943018 	ldr	r3, [r4, #24]
   16708:	e5942020 	ldr	r2, [r4, #32]
   1670c:	e2833001 	add	r3, r3, #1
   16710:	e5843018 	str	r3, [r4, #24]
   16714:	e5943018 	ldr	r3, [r4, #24]
   16718:	e1530002 	cmp	r3, r2
   1671c:	2584e018 	strcs	lr, [r4, #24]
   16720:	e2811001 	add	r1, r1, #1
   16724:	e1510000 	cmp	r1, r0
   16728:	1affffdf 	bne	166ac <UartMaxi::writeStr(char const*)+0x28>
   1672c:	e5942018 	ldr	r2, [r4, #24]
   16730:	e594301c 	ldr	r3, [r4, #28]
   16734:	e1520003 	cmp	r2, r3
   16738:	08bd8070 	popeq	{r4, r5, r6, pc}
   1673c:	e594c014 	ldr	ip, [r4, #20]
   16740:	e35c0000 	cmp	ip, #0
   16744:	08bd8070 	popeq	{r4, r5, r6, pc}
   16748:	e3a03000 	mov	r3, #0
   1674c:	ee073f9a 	mcr	15, 0, r3, cr7, cr10, {4}
   16750:	e59f107c 	ldr	r1, [pc, #124]	; 167d4 <UartMaxi::writeStr(char const*)+0x150>
   16754:	e5912018 	ldr	r2, [r1, #24]
   16758:	e2122020 	ands	r2, r2, #32
   1675c:	1a000012 	bne	167ac <UartMaxi::writeStr(char const*)+0x128>
   16760:	e594301c 	ldr	r3, [r4, #28]
   16764:	e7dc3003 	ldrb	r3, [ip, r3]
   16768:	e5813000 	str	r3, [r1]
   1676c:	e594301c 	ldr	r3, [r4, #28]
   16770:	e5940020 	ldr	r0, [r4, #32]
   16774:	e2833001 	add	r3, r3, #1
   16778:	e584301c 	str	r3, [r4, #28]
   1677c:	e594301c 	ldr	r3, [r4, #28]
   16780:	e1530000 	cmp	r3, r0
   16784:	2584201c 	strcs	r2, [r4, #28]
   16788:	ee072fba 	mcr	15, 0, r2, cr7, cr10, {5}
   1678c:	e5940018 	ldr	r0, [r4, #24]
   16790:	e594301c 	ldr	r3, [r4, #28]
   16794:	e1500003 	cmp	r0, r3
   16798:	08bd8070 	popeq	{r4, r5, r6, pc}
   1679c:	ee072f9a 	mcr	15, 0, r2, cr7, cr10, {4}
   167a0:	e5913018 	ldr	r3, [r1, #24]
   167a4:	e3130020 	tst	r3, #32
   167a8:	0affffec 	beq	16760 <UartMaxi::writeStr(char const*)+0xdc>
   167ac:	e59f2020 	ldr	r2, [pc, #32]	; 167d4 <UartMaxi::writeStr(char const*)+0x150>
   167b0:	e5923038 	ldr	r3, [r2, #56]	; 0x38
   167b4:	e3833020 	orr	r3, r3, #32
   167b8:	e5823038 	str	r3, [r2, #56]	; 0x38
   167bc:	e8bd8070 	pop	{r4, r5, r6, pc}
   167c0:	e5942018 	ldr	r2, [r4, #24]
   167c4:	e04cc002 	sub	ip, ip, r2
   167c8:	e35c0001 	cmp	ip, #1
   167cc:	8affffc9 	bhi	166f8 <UartMaxi::writeStr(char const*)+0x74>
   167d0:	eaffffd2 	b	16720 <UartMaxi::writeStr(char const*)+0x9c>
   167d4:	20201000 	.word	0x20201000

000167d8 <UartMaxi::read()>:
   167d8:	e5901000 	ldr	r1, [r0]
   167dc:	e1a03000 	mov	r3, r0
   167e0:	e3510000 	cmp	r1, #0
   167e4:	0a00000e 	beq	16824 <UartMaxi::read()+0x4c>
   167e8:	e5900004 	ldr	r0, [r0, #4]
   167ec:	e5932008 	ldr	r2, [r3, #8]
   167f0:	e1500002 	cmp	r0, r2
   167f4:	0a00000a 	beq	16824 <UartMaxi::read()+0x4c>
   167f8:	e5930008 	ldr	r0, [r3, #8]
   167fc:	e5932008 	ldr	r2, [r3, #8]
   16800:	e7d10000 	ldrb	r0, [r1, r0]
   16804:	e2822001 	add	r2, r2, #1
   16808:	e5832008 	str	r2, [r3, #8]
   1680c:	e5931008 	ldr	r1, [r3, #8]
   16810:	e593200c 	ldr	r2, [r3, #12]
   16814:	e1510002 	cmp	r1, r2
   16818:	23a02000 	movcs	r2, #0
   1681c:	25832008 	strcs	r2, [r3, #8]
   16820:	e12fff1e 	bx	lr
   16824:	e3e00000 	mvn	r0, #0
   16828:	e12fff1e 	bx	lr

0001682c <UartMaxi::poll()>:
   1682c:	e5902004 	ldr	r2, [r0, #4]
   16830:	e5900008 	ldr	r0, [r0, #8]
   16834:	e0520000 	subs	r0, r2, r0
   16838:	13a00001 	movne	r0, #1
   1683c:	e12fff1e 	bx	lr

00016840 <UartMaxi::peek()>:
   16840:	e5903000 	ldr	r3, [r0]
   16844:	e3530000 	cmp	r3, #0
   16848:	0a000006 	beq	16868 <UartMaxi::peek()+0x28>
   1684c:	e5901004 	ldr	r1, [r0, #4]
   16850:	e5902008 	ldr	r2, [r0, #8]
   16854:	e1510002 	cmp	r1, r2
   16858:	0a000002 	beq	16868 <UartMaxi::peek()+0x28>
   1685c:	e5902008 	ldr	r2, [r0, #8]
   16860:	e7d30002 	ldrb	r0, [r3, r2]
   16864:	e12fff1e 	bx	lr
   16868:	e3e00000 	mvn	r0, #0
   1686c:	e12fff1e 	bx	lr

00016870 <UartMaxi::available()>:
   16870:	e5903008 	ldr	r3, [r0, #8]
   16874:	e5902004 	ldr	r2, [r0, #4]
   16878:	e1530002 	cmp	r3, r2
   1687c:	85902004 	ldrhi	r2, [r0, #4]
   16880:	8590000c 	ldrhi	r0, [r0, #12]
   16884:	95900004 	ldrls	r0, [r0, #4]
   16888:	80820000 	addhi	r0, r2, r0
   1688c:	e0400003 	sub	r0, r0, r3
   16890:	e12fff1e 	bx	lr

00016894 <UartMaxi::isr()>:
   16894:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   16898:	e3a0e000 	mov	lr, #0
   1689c:	ee07ef9a 	mcr	15, 0, lr, cr7, cr10, {4}
   168a0:	e59f3198 	ldr	r3, [pc, #408]	; 16a40 <UartMaxi::isr()+0x1ac>
   168a4:	e3a04004 	mov	r4, #4
   168a8:	e1a01003 	mov	r1, r3
   168ac:	e3a07003 	mov	r7, #3
   168b0:	e3a06002 	mov	r6, #2
   168b4:	e3a05001 	mov	r5, #1
   168b8:	e5932040 	ldr	r2, [r3, #64]	; 0x40
   168bc:	e5832044 	str	r2, [r3, #68]	; 0x44
   168c0:	e5913018 	ldr	r3, [r1, #24]
   168c4:	e3130010 	tst	r3, #16
   168c8:	1a000024 	bne	16960 <UartMaxi::isr()+0xcc>
   168cc:	e5913000 	ldr	r3, [r1]
   168d0:	e590200c 	ldr	r2, [r0, #12]
   168d4:	e3130b01 	tst	r3, #1024	; 0x400
   168d8:	0a000039 	beq	169c4 <UartMaxi::isr()+0x130>
   168dc:	e5d0c010 	ldrb	ip, [r0, #16]
   168e0:	e35c0000 	cmp	ip, #0
   168e4:	05c05010 	strbeq	r5, [r0, #16]
   168e8:	e3520000 	cmp	r2, #0
   168ec:	0afffff3 	beq	168c0 <UartMaxi::isr()+0x2c>
   168f0:	e5908004 	ldr	r8, [r0, #4]
   168f4:	e590c008 	ldr	ip, [r0, #8]
   168f8:	e158000c 	cmp	r8, ip
   168fc:	0a000008 	beq	16924 <UartMaxi::isr()+0x90>
   16900:	e590c008 	ldr	ip, [r0, #8]
   16904:	e5908004 	ldr	r8, [r0, #4]
   16908:	e15c0008 	cmp	ip, r8
   1690c:	2a00003e 	bcs	16a0c <UartMaxi::isr()+0x178>
   16910:	e5908004 	ldr	r8, [r0, #4]
   16914:	e2422001 	sub	r2, r2, #1
   16918:	e35c0000 	cmp	ip, #0
   1691c:	01520008 	cmpeq	r2, r8
   16920:	0a00002f 	beq	169e4 <UartMaxi::isr()+0x150>
   16924:	e5902000 	ldr	r2, [r0]
   16928:	e3520000 	cmp	r2, #0
   1692c:	0a00002c 	beq	169e4 <UartMaxi::isr()+0x150>
   16930:	e590c004 	ldr	ip, [r0, #4]
   16934:	e7c2300c 	strb	r3, [r2, ip]
   16938:	e5903004 	ldr	r3, [r0, #4]
   1693c:	e590200c 	ldr	r2, [r0, #12]
   16940:	e2833001 	add	r3, r3, #1
   16944:	e5803004 	str	r3, [r0, #4]
   16948:	e5903004 	ldr	r3, [r0, #4]
   1694c:	e1530002 	cmp	r3, r2
   16950:	2580e004 	strcs	lr, [r0, #4]
   16954:	e5913018 	ldr	r3, [r1, #24]
   16958:	e3130010 	tst	r3, #16
   1695c:	0affffda 	beq	168cc <UartMaxi::isr()+0x38>
   16960:	e59f10d8 	ldr	r1, [pc, #216]	; 16a40 <UartMaxi::isr()+0x1ac>
   16964:	ea000010 	b	169ac <UartMaxi::isr()+0x118>
   16968:	e590c018 	ldr	ip, [r0, #24]
   1696c:	e590201c 	ldr	r2, [r0, #28]
   16970:	e15c0002 	cmp	ip, r2
   16974:	0a00002c 	beq	16a2c <UartMaxi::isr()+0x198>
   16978:	e5902014 	ldr	r2, [r0, #20]
   1697c:	e3520000 	cmp	r2, #0
   16980:	0a000029 	beq	16a2c <UartMaxi::isr()+0x198>
   16984:	e590c01c 	ldr	ip, [r0, #28]
   16988:	e7d2200c 	ldrb	r2, [r2, ip]
   1698c:	e5812000 	str	r2, [r1]
   16990:	e590201c 	ldr	r2, [r0, #28]
   16994:	e590c020 	ldr	ip, [r0, #32]
   16998:	e2822001 	add	r2, r2, #1
   1699c:	e580201c 	str	r2, [r0, #28]
   169a0:	e590201c 	ldr	r2, [r0, #28]
   169a4:	e152000c 	cmp	r2, ip
   169a8:	2580301c 	strcs	r3, [r0, #28]
   169ac:	e5913018 	ldr	r3, [r1, #24]
   169b0:	e2133020 	ands	r3, r3, #32
   169b4:	0affffeb 	beq	16968 <UartMaxi::isr()+0xd4>
   169b8:	e3a03000 	mov	r3, #0
   169bc:	ee073fba 	mcr	15, 0, r3, cr7, cr10, {5}
   169c0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   169c4:	e3130b02 	tst	r3, #2048	; 0x800
   169c8:	0a000009 	beq	169f4 <UartMaxi::isr()+0x160>
   169cc:	e5d0c010 	ldrb	ip, [r0, #16]
   169d0:	e35c0000 	cmp	ip, #0
   169d4:	05c06010 	strbeq	r6, [r0, #16]
   169d8:	eaffffc2 	b	168e8 <UartMaxi::isr()+0x54>
   169dc:	e3520000 	cmp	r2, #0
   169e0:	1affffc2 	bne	168f0 <UartMaxi::isr()+0x5c>
   169e4:	e5d03010 	ldrb	r3, [r0, #16]
   169e8:	e3530000 	cmp	r3, #0
   169ec:	05c04010 	strbeq	r4, [r0, #16]
   169f0:	eaffffb2 	b	168c0 <UartMaxi::isr()+0x2c>
   169f4:	e3130c01 	tst	r3, #256	; 0x100
   169f8:	0afffff7 	beq	169dc <UartMaxi::isr()+0x148>
   169fc:	e5d0c010 	ldrb	ip, [r0, #16]
   16a00:	e35c0000 	cmp	ip, #0
   16a04:	05c07010 	strbeq	r7, [r0, #16]
   16a08:	eaffffb6 	b	168e8 <UartMaxi::isr()+0x54>
   16a0c:	e5902004 	ldr	r2, [r0, #4]
   16a10:	e04cc002 	sub	ip, ip, r2
   16a14:	e35c0001 	cmp	ip, #1
   16a18:	8affffc1 	bhi	16924 <UartMaxi::isr()+0x90>
   16a1c:	e5d03010 	ldrb	r3, [r0, #16]
   16a20:	e3530000 	cmp	r3, #0
   16a24:	05c04010 	strbeq	r4, [r0, #16]
   16a28:	eaffffa4 	b	168c0 <UartMaxi::isr()+0x2c>
   16a2c:	e59f200c 	ldr	r2, [pc, #12]	; 16a40 <UartMaxi::isr()+0x1ac>
   16a30:	e5923038 	ldr	r3, [r2, #56]	; 0x38
   16a34:	e3c33020 	bic	r3, r3, #32
   16a38:	e5823038 	str	r3, [r2, #56]	; 0x38
   16a3c:	eaffffdd 	b	169b8 <UartMaxi::isr()+0x124>
   16a40:	20201000 	.word	0x20201000

00016a44 <UartMini::isrStatic(void*)>:
   16a44:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
   16a48:	e59f1044 	ldr	r1, [pc, #68]	; 16a94 <UartMini::isrStatic(void*)+0x50>
   16a4c:	e59f0044 	ldr	r0, [pc, #68]	; 16a98 <UartMini::isrStatic(void*)+0x54>
   16a50:	e59fe044 	ldr	lr, [pc, #68]	; 16a9c <UartMini::isrStatic(void*)+0x58>
   16a54:	e59fc044 	ldr	ip, [pc, #68]	; 16aa0 <UartMini::isrStatic(void*)+0x5c>
   16a58:	e5913048 	ldr	r3, [r1, #72]	; 0x48
   16a5c:	e3130001 	tst	r3, #1
   16a60:	e2032006 	and	r2, r3, #6
   16a64:	149df004 	popne	{pc}		; (ldrne pc, [sp], #4)
   16a68:	e3520004 	cmp	r2, #4
   16a6c:	1afffff9 	bne	16a58 <UartMini::isrStatic(void*)+0x14>
   16a70:	e5913040 	ldr	r3, [r1, #64]	; 0x40
   16a74:	e5902000 	ldr	r2, [r0]
   16a78:	e6ef3073 	uxtb	r3, r3
   16a7c:	e7ce3002 	strb	r3, [lr, r2]
   16a80:	e5903000 	ldr	r3, [r0]
   16a84:	e2833001 	add	r3, r3, #1
   16a88:	e003300c 	and	r3, r3, ip
   16a8c:	e5803000 	str	r3, [r0]
   16a90:	eafffff0 	b	16a58 <UartMini::isrStatic(void*)+0x14>
   16a94:	20215000 	.word	0x20215000
   16a98:	00052cc4 	.word	0x00052cc4
   16a9c:	00052ccc 	.word	0x00052ccc
   16aa0:	00007fff 	.word	0x00007fff

00016aa4 <UartMini::UartMini()>:
   16aa4:	e12fff1e 	bx	lr

00016aa8 <UartMini::~UartMini()>:
   16aa8:	e12fff1e 	bx	lr

00016aac <UartMini::read()>:
   16aac:	e59f2034 	ldr	r2, [pc, #52]	; 16ae8 <UartMini::read()+0x3c>
   16ab0:	e5921004 	ldr	r1, [r2, #4]
   16ab4:	e5923000 	ldr	r3, [r2]
   16ab8:	e1510003 	cmp	r1, r3
   16abc:	15923004 	ldrne	r3, [r2, #4]
   16ac0:	159f1024 	ldrne	r1, [pc, #36]	; 16aec <UartMini::read()+0x40>
   16ac4:	17d10003 	ldrbne	r0, [r1, r3]
   16ac8:	15923004 	ldrne	r3, [r2, #4]
   16acc:	16ef0070 	uxtbne	r0, r0
   16ad0:	12833001 	addne	r3, r3, #1
   16ad4:	11a03883 	lslne	r3, r3, #17
   16ad8:	11a038a3 	lsrne	r3, r3, #17
   16adc:	15823004 	strne	r3, [r2, #4]
   16ae0:	03a00000 	moveq	r0, #0
   16ae4:	e12fff1e 	bx	lr
   16ae8:	00052cc4 	.word	0x00052cc4
   16aec:	00052ccc 	.word	0x00052ccc

00016af0 <UartMini::poll()>:
   16af0:	e59f3010 	ldr	r3, [pc, #16]	; 16b08 <UartMini::poll()+0x18>
   16af4:	e5930004 	ldr	r0, [r3, #4]
   16af8:	e5933000 	ldr	r3, [r3]
   16afc:	e0500003 	subs	r0, r0, r3
   16b00:	13a00001 	movne	r0, #1
   16b04:	e12fff1e 	bx	lr
   16b08:	00052cc4 	.word	0x00052cc4

00016b0c <UartMini::write(unsigned int)>:
   16b0c:	e59f2014 	ldr	r2, [pc, #20]	; 16b28 <UartMini::write(unsigned int)+0x1c>
   16b10:	e5923054 	ldr	r3, [r2, #84]	; 0x54
   16b14:	e3130020 	tst	r3, #32
   16b18:	0afffffc 	beq	16b10 <UartMini::write(unsigned int)+0x4>
   16b1c:	e5821040 	str	r1, [r2, #64]	; 0x40
   16b20:	e3a00001 	mov	r0, #1
   16b24:	e12fff1e 	bx	lr
   16b28:	20215000 	.word	0x20215000

00016b2c <UartMini::write(char const*, unsigned int)>:
   16b2c:	e3520000 	cmp	r2, #0
   16b30:	012fff1e 	bxeq	lr
   16b34:	e081c002 	add	ip, r1, r2
   16b38:	e59f2024 	ldr	r2, [pc, #36]	; 16b64 <UartMini::write(char const*, unsigned int)+0x38>
   16b3c:	e24cc001 	sub	ip, ip, #1
   16b40:	e2411001 	sub	r1, r1, #1
   16b44:	e5f10001 	ldrb	r0, [r1, #1]!
   16b48:	e5923054 	ldr	r3, [r2, #84]	; 0x54
   16b4c:	e3130020 	tst	r3, #32
   16b50:	0afffffc 	beq	16b48 <UartMini::write(char const*, unsigned int)+0x1c>
   16b54:	e151000c 	cmp	r1, ip
   16b58:	e5820040 	str	r0, [r2, #64]	; 0x40
   16b5c:	1afffff8 	bne	16b44 <UartMini::write(char const*, unsigned int)+0x18>
   16b60:	e12fff1e 	bx	lr
   16b64:	20215000 	.word	0x20215000

00016b68 <UartMini::writeStr(char const*)>:
   16b68:	e5d10000 	ldrb	r0, [r1]
   16b6c:	e3500000 	cmp	r0, #0
   16b70:	012fff1e 	bxeq	lr
   16b74:	e59f201c 	ldr	r2, [pc, #28]	; 16b98 <UartMini::writeStr(char const*)+0x30>
   16b78:	e5923054 	ldr	r3, [r2, #84]	; 0x54
   16b7c:	e3130020 	tst	r3, #32
   16b80:	0afffffc 	beq	16b78 <UartMini::writeStr(char const*)+0x10>
   16b84:	e5820040 	str	r0, [r2, #64]	; 0x40
   16b88:	e5f10001 	ldrb	r0, [r1, #1]!
   16b8c:	e3500000 	cmp	r0, #0
   16b90:	1afffff8 	bne	16b78 <UartMini::writeStr(char const*)+0x10>
   16b94:	e12fff1e 	bx	lr
   16b98:	20215000 	.word	0x20215000

00016b9c <UartMini::clear()>:
   16b9c:	e59f3018 	ldr	r3, [pc, #24]	; 16bbc <UartMini::clear()+0x20>
   16ba0:	e59f1018 	ldr	r1, [pc, #24]	; 16bc0 <UartMini::clear()+0x24>
   16ba4:	e5912054 	ldr	r2, [r1, #84]	; 0x54
   16ba8:	e3120040 	tst	r2, #64	; 0x40
   16bac:	112fff1e 	bxne	lr
   16bb0:	e2533001 	subs	r3, r3, #1
   16bb4:	1afffffa 	bne	16ba4 <UartMini::clear()+0x8>
   16bb8:	e12fff1e 	bx	lr
   16bbc:	000186a0 	.word	0x000186a0
   16bc0:	20215000 	.word	0x20215000

00016bc4 <UartMini::isr()>:
   16bc4:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
   16bc8:	e59f1044 	ldr	r1, [pc, #68]	; 16c14 <UartMini::isr()+0x50>
   16bcc:	e59f0044 	ldr	r0, [pc, #68]	; 16c18 <UartMini::isr()+0x54>
   16bd0:	e59fe044 	ldr	lr, [pc, #68]	; 16c1c <UartMini::isr()+0x58>
   16bd4:	e59fc044 	ldr	ip, [pc, #68]	; 16c20 <UartMini::isr()+0x5c>
   16bd8:	e5913048 	ldr	r3, [r1, #72]	; 0x48
   16bdc:	e3130001 	tst	r3, #1
   16be0:	e2032006 	and	r2, r3, #6
   16be4:	149df004 	popne	{pc}		; (ldrne pc, [sp], #4)
   16be8:	e3520004 	cmp	r2, #4
   16bec:	1afffff9 	bne	16bd8 <UartMini::isr()+0x14>
   16bf0:	e5913040 	ldr	r3, [r1, #64]	; 0x40
   16bf4:	e5902000 	ldr	r2, [r0]
   16bf8:	e6ef3073 	uxtb	r3, r3
   16bfc:	e7ce3002 	strb	r3, [lr, r2]
   16c00:	e5903000 	ldr	r3, [r0]
   16c04:	e2833001 	add	r3, r3, #1
   16c08:	e003300c 	and	r3, r3, ip
   16c0c:	e5803000 	str	r3, [r0]
   16c10:	eafffff0 	b	16bd8 <UartMini::isr()+0x14>
   16c14:	20215000 	.word	0x20215000
   16c18:	00052cc4 	.word	0x00052cc4
   16c1c:	00052ccc 	.word	0x00052ccc
   16c20:	00007fff 	.word	0x00007fff

00016c24 <UartMini::setup(unsigned int, int, int)>:
   16c24:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   16c28:	e3a02005 	mov	r2, #5
   16c2c:	e3a05000 	mov	r5, #0
   16c30:	e3a07003 	mov	r7, #3
   16c34:	e3a06001 	mov	r6, #1
   16c38:	e3a030c6 	mov	r3, #198	; 0xc6
   16c3c:	e59f405c 	ldr	r4, [pc, #92]	; 16ca0 <UartMini::setup(unsigned int, int, int)+0x7c>
   16c40:	e1a01711 	lsl	r1, r1, r7
   16c44:	e5846004 	str	r6, [r4, #4]
   16c48:	e59f0054 	ldr	r0, [pc, #84]	; 16ca4 <UartMini::setup(unsigned int, int, int)+0x80>
   16c4c:	e5845044 	str	r5, [r4, #68]	; 0x44
   16c50:	e5845060 	str	r5, [r4, #96]	; 0x60
   16c54:	e584704c 	str	r7, [r4, #76]	; 0x4c
   16c58:	e5845050 	str	r5, [r4, #80]	; 0x50
   16c5c:	e5842044 	str	r2, [r4, #68]	; 0x44
   16c60:	e5843048 	str	r3, [r4, #72]	; 0x48
   16c64:	eb005bbe 	bl	2db64 <__udivsi3>
   16c68:	e59f1038 	ldr	r1, [pc, #56]	; 16ca8 <UartMini::setup(unsigned int, int, int)+0x84>
   16c6c:	e2400001 	sub	r0, r0, #1
   16c70:	e5840068 	str	r0, [r4, #104]	; 0x68
   16c74:	e5913004 	ldr	r3, [r1, #4]
   16c78:	e1a02005 	mov	r2, r5
   16c7c:	e3c33a3f 	bic	r3, r3, #258048	; 0x3f000
   16c80:	e3833a12 	orr	r3, r3, #73728	; 0x12000
   16c84:	e5813004 	str	r3, [r1, #4]
   16c88:	e3a0001d 	mov	r0, #29
   16c8c:	e59f1018 	ldr	r1, [pc, #24]	; 16cac <UartMini::setup(unsigned int, int, int)+0x88>
   16c90:	e5847060 	str	r7, [r4, #96]	; 0x60
   16c94:	ebfffaae 	bl	15754 <CInterrupts::connectIRQ(unsigned int, void (*)(void*), void*)>
   16c98:	e1a00006 	mov	r0, r6
   16c9c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   16ca0:	20215000 	.word	0x20215000
   16ca4:	0ee6b280 	.word	0x0ee6b280
   16ca8:	20200000 	.word	0x20200000
   16cac:	00016a44 	.word	0x00016a44

00016cb0 <CBcmMailBox::CBcmMailBox(unsigned int)>:
   16cb0:	e5801000 	str	r1, [r0]
   16cb4:	e12fff1e 	bx	lr

00016cb8 <CBcmMailBox::~CBcmMailBox()>:
   16cb8:	e12fff1e 	bx	lr

00016cbc <CBcmMailBox::WriteRead(unsigned long)>:
   16cbc:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   16cc0:	e3a03000 	mov	r3, #0
   16cc4:	e1a06000 	mov	r6, r0
   16cc8:	e1a05001 	mov	r5, r1
   16ccc:	ee073f9a 	mcr	15, 0, r3, cr7, cr10, {4}
   16cd0:	e59f4070 	ldr	r4, [pc, #112]	; 16d48 <CBcmMailBox::WriteRead(unsigned long)+0x8c>
   16cd4:	e5943898 	ldr	r3, [r4, #2200]	; 0x898
   16cd8:	e3130101 	tst	r3, #1073741824	; 0x40000000
   16cdc:	1a000006 	bne	16cfc <CBcmMailBox::WriteRead(unsigned long)+0x40>
   16ce0:	e59f7064 	ldr	r7, [pc, #100]	; 16d4c <CBcmMailBox::WriteRead(unsigned long)+0x90>
   16ce4:	e1a00007 	mov	r0, r7
   16ce8:	e5943880 	ldr	r3, [r4, #2176]	; 0x880
   16cec:	eb0000b8 	bl	16fd4 <microsDelay>
   16cf0:	e5943898 	ldr	r3, [r4, #2200]	; 0x898
   16cf4:	e3130101 	tst	r3, #1073741824	; 0x40000000
   16cf8:	0afffff9 	beq	16ce4 <CBcmMailBox::WriteRead(unsigned long)+0x28>
   16cfc:	e59f0044 	ldr	r0, [pc, #68]	; 16d48 <CBcmMailBox::WriteRead(unsigned long)+0x8c>
   16d00:	e59038b8 	ldr	r3, [r0, #2232]	; 0x8b8
   16d04:	e3530000 	cmp	r3, #0
   16d08:	bafffffc 	blt	16d00 <CBcmMailBox::WriteRead(unsigned long)+0x44>
   16d0c:	e5963000 	ldr	r3, [r6]
   16d10:	e59f2030 	ldr	r2, [pc, #48]	; 16d48 <CBcmMailBox::WriteRead(unsigned long)+0x8c>
   16d14:	e1855003 	orr	r5, r5, r3
   16d18:	e58058a0 	str	r5, [r0, #2208]	; 0x8a0
   16d1c:	e596c000 	ldr	ip, [r6]
   16d20:	e5923898 	ldr	r3, [r2, #2200]	; 0x898
   16d24:	e2133101 	ands	r3, r3, #1073741824	; 0x40000000
   16d28:	1afffffc 	bne	16d20 <CBcmMailBox::WriteRead(unsigned long)+0x64>
   16d2c:	e5920880 	ldr	r0, [r2, #2176]	; 0x880
   16d30:	e200100f 	and	r1, r0, #15
   16d34:	e151000c 	cmp	r1, ip
   16d38:	1afffff8 	bne	16d20 <CBcmMailBox::WriteRead(unsigned long)+0x64>
   16d3c:	ee073fba 	mcr	15, 0, r3, cr7, cr10, {5}
   16d40:	e3c0000f 	bic	r0, r0, #15
   16d44:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   16d48:	2000b000 	.word	0x2000b000
   16d4c:	00004e20 	.word	0x00004e20

00016d50 <CBcmMailBox::Flush()>:
   16d50:	e92d4070 	push	{r4, r5, r6, lr}
   16d54:	e59f4028 	ldr	r4, [pc, #40]	; 16d84 <CBcmMailBox::Flush()+0x34>
   16d58:	e5943898 	ldr	r3, [r4, #2200]	; 0x898
   16d5c:	e3130101 	tst	r3, #1073741824	; 0x40000000
   16d60:	18bd8070 	popne	{r4, r5, r6, pc}
   16d64:	e59f501c 	ldr	r5, [pc, #28]	; 16d88 <CBcmMailBox::Flush()+0x38>
   16d68:	e1a00005 	mov	r0, r5
   16d6c:	e5943880 	ldr	r3, [r4, #2176]	; 0x880
   16d70:	eb000097 	bl	16fd4 <microsDelay>
   16d74:	e5943898 	ldr	r3, [r4, #2200]	; 0x898
   16d78:	e3130101 	tst	r3, #1073741824	; 0x40000000
   16d7c:	0afffff9 	beq	16d68 <CBcmMailBox::Flush()+0x18>
   16d80:	e8bd8070 	pop	{r4, r5, r6, pc}
   16d84:	2000b000 	.word	0x2000b000
   16d88:	00004e20 	.word	0x00004e20

00016d8c <CBcmMailBox::Read()>:
   16d8c:	e5901000 	ldr	r1, [r0]
   16d90:	e59f2020 	ldr	r2, [pc, #32]	; 16db8 <CBcmMailBox::Read()+0x2c>
   16d94:	e5923898 	ldr	r3, [r2, #2200]	; 0x898
   16d98:	e3130101 	tst	r3, #1073741824	; 0x40000000
   16d9c:	1afffffc 	bne	16d94 <CBcmMailBox::Read()+0x8>
   16da0:	e5920880 	ldr	r0, [r2, #2176]	; 0x880
   16da4:	e200300f 	and	r3, r0, #15
   16da8:	e1530001 	cmp	r3, r1
   16dac:	1afffff8 	bne	16d94 <CBcmMailBox::Read()+0x8>
   16db0:	e3c0000f 	bic	r0, r0, #15
   16db4:	e12fff1e 	bx	lr
   16db8:	2000b000 	.word	0x2000b000

00016dbc <CBcmMailBox::Write(unsigned long)>:
   16dbc:	e59f2018 	ldr	r2, [pc, #24]	; 16ddc <CBcmMailBox::Write(unsigned long)+0x20>
   16dc0:	e59238b8 	ldr	r3, [r2, #2232]	; 0x8b8
   16dc4:	e3530000 	cmp	r3, #0
   16dc8:	bafffffc 	blt	16dc0 <CBcmMailBox::Write(unsigned long)+0x4>
   16dcc:	e5903000 	ldr	r3, [r0]
   16dd0:	e1811003 	orr	r1, r1, r3
   16dd4:	e58218a0 	str	r1, [r2, #2208]	; 0x8a0
   16dd8:	e12fff1e 	bx	lr
   16ddc:	2000b000 	.word	0x2000b000

00016de0 <CBcmPropertyTags::CBcmPropertyTags()>:
   16de0:	e92d4010 	push	{r4, lr}
   16de4:	e1a04000 	mov	r4, r0
   16de8:	e3a01008 	mov	r1, #8
   16dec:	ebffffaf 	bl	16cb0 <CBcmMailBox::CBcmMailBox(unsigned int)>
   16df0:	e1a00004 	mov	r0, r4
   16df4:	e8bd8010 	pop	{r4, pc}

00016df8 <CBcmPropertyTags::~CBcmPropertyTags()>:
   16df8:	e92d4010 	push	{r4, lr}
   16dfc:	e1a04000 	mov	r4, r0
   16e00:	ebffffac 	bl	16cb8 <CBcmMailBox::~CBcmMailBox()>
   16e04:	e1a00004 	mov	r0, r4
   16e08:	e8bd8010 	pop	{r4, pc}

00016e0c <CBcmPropertyTags::GetTag(unsigned long, void*, unsigned int, unsigned int)>:
   16e0c:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   16e10:	e1a04002 	mov	r4, r2
   16e14:	e1a05003 	mov	r5, r3
   16e18:	e3a06000 	mov	r6, #0
   16e1c:	e3a08503 	mov	r8, #12582912	; 0xc00000
   16e20:	e243c00c 	sub	ip, r3, #12
   16e24:	e59d2020 	ldr	r2, [sp, #32]
   16e28:	e1a03421 	lsr	r3, r1, #8
   16e2c:	e5c43001 	strb	r3, [r4, #1]
   16e30:	e1a03821 	lsr	r3, r1, #16
   16e34:	e3c22102 	bic	r2, r2, #-2147483648	; 0x80000000
   16e38:	e5c41000 	strb	r1, [r4]
   16e3c:	e5c43002 	strb	r3, [r4, #2]
   16e40:	e59f70e8 	ldr	r7, [pc, #232]	; 16f30 <CBcmPropertyTags::GetTag(unsigned long, void*, unsigned int, unsigned int)+0x124>
   16e44:	e1a0382c 	lsr	r3, ip, #16
   16e48:	e1a09000 	mov	r9, r0
   16e4c:	e1a01c21 	lsr	r1, r1, #24
   16e50:	e1a0042c 	lsr	r0, ip, #8
   16e54:	e5c41003 	strb	r1, [r4, #3]
   16e58:	e5c4c004 	strb	ip, [r4, #4]
   16e5c:	e5c40005 	strb	r0, [r4, #5]
   16e60:	e1a0e422 	lsr	lr, r2, #8
   16e64:	e5c43006 	strb	r3, [r4, #6]
   16e68:	e1a0cc2c 	lsr	ip, ip, #24
   16e6c:	e1a00822 	lsr	r0, r2, #16
   16e70:	e1a01c22 	lsr	r1, r2, #24
   16e74:	e285300c 	add	r3, r5, #12
   16e78:	e5c42008 	strb	r2, [r4, #8]
   16e7c:	e5c4000a 	strb	r0, [r4, #10]
   16e80:	e5c4100b 	strb	r1, [r4, #11]
   16e84:	e5c4c007 	strb	ip, [r4, #7]
   16e88:	e5c4e009 	strb	lr, [r4, #9]
   16e8c:	e1a02005 	mov	r2, r5
   16e90:	e8880048 	stm	r8, {r3, r6}
   16e94:	e1a01004 	mov	r1, r4
   16e98:	e1a00007 	mov	r0, r7
   16e9c:	eb00546a 	bl	2c04c <memcpy>
   16ea0:	e7876005 	str	r6, [r7, r5]
   16ea4:	ee076f9a 	mcr	15, 0, r6, cr7, cr10, {4}
   16ea8:	e59f1084 	ldr	r1, [pc, #132]	; 16f34 <CBcmPropertyTags::GetTag(unsigned long, void*, unsigned int, unsigned int)+0x128>
   16eac:	e1a00009 	mov	r0, r9
   16eb0:	ebffff81 	bl	16cbc <CBcmMailBox::WriteRead(unsigned long)>
   16eb4:	e37005fd 	cmn	r0, #1061158912	; 0x3f400000
   16eb8:	0a000001 	beq	16ec4 <CBcmPropertyTags::GetTag(unsigned long, void*, unsigned int, unsigned int)+0xb8>
   16ebc:	e3a00000 	mov	r0, #0
   16ec0:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   16ec4:	ee076fba 	mcr	15, 0, r6, cr7, cr10, {5}
   16ec8:	e5983004 	ldr	r3, [r8, #4]
   16ecc:	e3530102 	cmp	r3, #-2147483648	; 0x80000000
   16ed0:	1afffff9 	bne	16ebc <CBcmPropertyTags::GetTag(unsigned long, void*, unsigned int, unsigned int)+0xb0>
   16ed4:	e1a02005 	mov	r2, r5
   16ed8:	e1a01007 	mov	r1, r7
   16edc:	e1a00004 	mov	r0, r4
   16ee0:	eb005459 	bl	2c04c <memcpy>
   16ee4:	e5d42009 	ldrb	r2, [r4, #9]
   16ee8:	e5d43008 	ldrb	r3, [r4, #8]
   16eec:	e5d4100a 	ldrb	r1, [r4, #10]
   16ef0:	e1833402 	orr	r3, r3, r2, lsl #8
   16ef4:	e5d4200b 	ldrb	r2, [r4, #11]
   16ef8:	e1833801 	orr	r3, r3, r1, lsl #16
   16efc:	e1933c02 	orrs	r3, r3, r2, lsl #24
   16f00:	5affffed 	bpl	16ebc <CBcmPropertyTags::GetTag(unsigned long, void*, unsigned int, unsigned int)+0xb0>
   16f04:	e3c33102 	bic	r3, r3, #-2147483648	; 0x80000000
   16f08:	e2930000 	adds	r0, r3, #0
   16f0c:	e1a0c423 	lsr	ip, r3, #8
   16f10:	e1a01823 	lsr	r1, r3, #16
   16f14:	e1a02c23 	lsr	r2, r3, #24
   16f18:	13a00001 	movne	r0, #1
   16f1c:	e5c43008 	strb	r3, [r4, #8]
   16f20:	e5c4c009 	strb	ip, [r4, #9]
   16f24:	e5c4100a 	strb	r1, [r4, #10]
   16f28:	e5c4200b 	strb	r2, [r4, #11]
   16f2c:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   16f30:	00c00008 	.word	0x00c00008
   16f34:	c0c00000 	.word	0xc0c00000

00016f38 <CBcmPropertyTags::GetCoherentPage(unsigned int)>:
   16f38:	e1a01601 	lsl	r1, r1, #12
   16f3c:	e2810503 	add	r0, r1, #12582912	; 0xc00000
   16f40:	e12fff1e 	bx	lr

00016f44 <CBcmPropertyTags::GetTags(void*, unsigned int)>:
   16f44:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   16f48:	e3a04000 	mov	r4, #0
   16f4c:	e3a05503 	mov	r5, #12582912	; 0xc00000
   16f50:	e1a07002 	mov	r7, r2
   16f54:	e59f6060 	ldr	r6, [pc, #96]	; 16fbc <CBcmPropertyTags::GetTags(void*, unsigned int)+0x78>
   16f58:	e282300c 	add	r3, r2, #12
   16f5c:	e1a08000 	mov	r8, r0
   16f60:	e8850018 	stm	r5, {r3, r4}
   16f64:	e1a00006 	mov	r0, r6
   16f68:	e1a09001 	mov	r9, r1
   16f6c:	eb005436 	bl	2c04c <memcpy>
   16f70:	e7864007 	str	r4, [r6, r7]
   16f74:	ee074f9a 	mcr	15, 0, r4, cr7, cr10, {4}
   16f78:	e59f1040 	ldr	r1, [pc, #64]	; 16fc0 <CBcmPropertyTags::GetTags(void*, unsigned int)+0x7c>
   16f7c:	e1a00008 	mov	r0, r8
   16f80:	ebffff4d 	bl	16cbc <CBcmMailBox::WriteRead(unsigned long)>
   16f84:	e37005fd 	cmn	r0, #1061158912	; 0x3f400000
   16f88:	0a000001 	beq	16f94 <CBcmPropertyTags::GetTags(void*, unsigned int)+0x50>
   16f8c:	e1a00004 	mov	r0, r4
   16f90:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   16f94:	ee074fba 	mcr	15, 0, r4, cr7, cr10, {5}
   16f98:	e5953004 	ldr	r3, [r5, #4]
   16f9c:	e3530102 	cmp	r3, #-2147483648	; 0x80000000
   16fa0:	1afffff9 	bne	16f8c <CBcmPropertyTags::GetTags(void*, unsigned int)+0x48>
   16fa4:	e1a02007 	mov	r2, r7
   16fa8:	e1a01006 	mov	r1, r6
   16fac:	e1a00009 	mov	r0, r9
   16fb0:	eb005425 	bl	2c04c <memcpy>
   16fb4:	e3a00001 	mov	r0, #1
   16fb8:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   16fbc:	00c00008 	.word	0x00c00008
   16fc0:	c0c00000 	.word	0xc0c00000

00016fc4 <micros>:
   16fc4:	e59f3004 	ldr	r3, [pc, #4]	; 16fd0 <micros+0xc>
   16fc8:	e5930004 	ldr	r0, [r3, #4]
   16fcc:	e12fff1e 	bx	lr
   16fd0:	20003000 	.word	0x20003000

00016fd4 <microsDelay>:
   16fd4:	e59f3038 	ldr	r3, [pc, #56]	; 17014 <microsDelay+0x40>
   16fd8:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
   16fdc:	e1a0c003 	mov	ip, r3
   16fe0:	e5931004 	ldr	r1, [r3, #4]
   16fe4:	e080e001 	add	lr, r0, r1
   16fe8:	e59c2004 	ldr	r2, [ip, #4]
   16fec:	e2423001 	sub	r3, r2, #1
   16ff0:	e1510002 	cmp	r1, r2
   16ff4:	e0433001 	sub	r3, r3, r1
   16ff8:	8a000002 	bhi	17008 <microsDelay+0x34>
   16ffc:	e152000e 	cmp	r2, lr
   17000:	9afffff8 	bls	16fe8 <microsDelay+0x14>
   17004:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
   17008:	e1500003 	cmp	r0, r3
   1700c:	2afffff5 	bcs	16fe8 <microsDelay+0x14>
   17010:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
   17014:	20003000 	.word	0x20003000

00017018 <isTimeout>:
   17018:	e1500001 	cmp	r0, r1
   1701c:	2a000005 	bcs	17038 <isTimeout+0x20>
   17020:	e0400001 	sub	r0, r0, r1
   17024:	e2400001 	sub	r0, r0, #1
   17028:	e1500002 	cmp	r0, r2
   1702c:	93a00000 	movls	r0, #0
   17030:	83a00001 	movhi	r0, #1
   17034:	e12fff1e 	bx	lr
   17038:	e0811002 	add	r1, r1, r2
   1703c:	e1510000 	cmp	r1, r0
   17040:	23a00000 	movcs	r0, #0
   17044:	33a00001 	movcc	r0, #1
   17048:	e12fff1e 	bx	lr

0001704c <entry_point>:
   1704c:	e92d4070 	push	{r4, r5, r6, lr}
   17050:	e59f3044 	ldr	r3, [pc, #68]	; 1709c <entry_point+0x50>
   17054:	e59f4044 	ldr	r4, [pc, #68]	; 170a0 <entry_point+0x54>
   17058:	e1540003 	cmp	r4, r3
   1705c:	2a000008 	bcs	17084 <entry_point+0x38>
   17060:	e1e05004 	mvn	r5, r4
   17064:	e0855003 	add	r5, r5, r3
   17068:	e3c55003 	bic	r5, r5, #3
   1706c:	e0855004 	add	r5, r5, r4
   17070:	e2444004 	sub	r4, r4, #4
   17074:	e5b43004 	ldr	r3, [r4, #4]!
   17078:	e12fff33 	blx	r3
   1707c:	e1540005 	cmp	r4, r5
   17080:	1afffffb 	bne	17074 <entry_point+0x28>
   17084:	e3a01301 	mov	r1, #67108864	; 0x4000000
   17088:	e3a0060d 	mov	r0, #13631488	; 0xd00000
   1708c:	ebffcf62 	bl	ae1c <nmalloc_set_memory_area>
   17090:	ebfff9a3 	bl	15724 <CInterrupts::setup()>
   17094:	e8bd4070 	pop	{r4, r5, r6, lr}
   17098:	ea00148b 	b	1c2cc <main>
   1709c:	00032a3c 	.word	0x00032a3c
   170a0:	00032a28 	.word	0x00032a28

000170a4 <__cxa_pure_virtual>:
   170a4:	e12fff1e 	bx	lr

000170a8 <__aeabi_atexit>:
   170a8:	e3a00000 	mov	r0, #0
   170ac:	e12fff1e 	bx	lr

000170b0 <CMachineInfo::CMachineInfo()>:
   170b0:	e3a03000 	mov	r3, #0
   170b4:	e92d4070 	push	{r4, r5, r6, lr}
   170b8:	e3a0100e 	mov	r1, #14
   170bc:	e3a06003 	mov	r6, #3
   170c0:	e59f22ec 	ldr	r2, [pc, #748]	; 173b4 <CMachineInfo::CMachineInfo()+0x304>
   170c4:	e24dd020 	sub	sp, sp, #32
   170c8:	e5925000 	ldr	r5, [r2]
   170cc:	e1a04000 	mov	r4, r0
   170d0:	e1550003 	cmp	r5, r3
   170d4:	e5c01004 	strb	r1, [r0, #4]
   170d8:	e5803000 	str	r3, [r0]
   170dc:	e5803008 	str	r3, [r0, #8]
   170e0:	e580300c 	str	r3, [r0, #12]
   170e4:	e5803014 	str	r3, [r0, #20]
   170e8:	e5c06010 	strb	r6, [r0, #16]
   170ec:	0a00000c 	beq	17124 <CMachineInfo::CMachineInfo()+0x74>
   170f0:	e1c500d8 	ldrd	r0, [r5, #8]
   170f4:	e5953000 	ldr	r3, [r5]
   170f8:	e5d5c004 	ldrb	ip, [r5, #4]
   170fc:	e5d52010 	ldrb	r2, [r5, #16]
   17100:	e5843000 	str	r3, [r4]
   17104:	e5953014 	ldr	r3, [r5, #20]
   17108:	e1c400f8 	strd	r0, [r4, #8]
   1710c:	e1a00004 	mov	r0, r4
   17110:	e5c4c004 	strb	ip, [r4, #4]
   17114:	e5c42010 	strb	r2, [r4, #16]
   17118:	e5843014 	str	r3, [r4, #20]
   1711c:	e28dd020 	add	sp, sp, #32
   17120:	e8bd8070 	pop	{r4, r5, r6, pc}
   17124:	e28d000c 	add	r0, sp, #12
   17128:	e5824000 	str	r4, [r2]
   1712c:	ebffff2b 	bl	16de0 <CBcmPropertyTags::CBcmPropertyTags()>
   17130:	e3a03010 	mov	r3, #16
   17134:	e58d5000 	str	r5, [sp]
   17138:	e28d000c 	add	r0, sp, #12
   1713c:	e08d2003 	add	r2, sp, r3
   17140:	e59f1270 	ldr	r1, [pc, #624]	; 173b8 <CMachineInfo::CMachineInfo()+0x308>
   17144:	ebffff30 	bl	16e0c <CBcmPropertyTags::GetTag(unsigned long, void*, unsigned int, unsigned int)>
   17148:	e3500000 	cmp	r0, #0
   1714c:	0a000039 	beq	17238 <CMachineInfo::CMachineInfo()+0x188>
   17150:	e59d301c 	ldr	r3, [sp, #28]
   17154:	e2132502 	ands	r2, r3, #8388608	; 0x800000
   17158:	e5843000 	str	r3, [r4]
   1715c:	0a00003a 	beq	1724c <CMachineInfo::CMachineInfo()+0x19c>
   17160:	e1a02223 	lsr	r2, r3, #4
   17164:	e21220ff 	ands	r2, r2, #255	; 0xff
   17168:	0a000016 	beq	171c8 <CMachineInfo::CMachineInfo()+0x118>
   1716c:	e3520001 	cmp	r2, #1
   17170:	0a000014 	beq	171c8 <CMachineInfo::CMachineInfo()+0x118>
   17174:	e3520002 	cmp	r2, #2
   17178:	0a000012 	beq	171c8 <CMachineInfo::CMachineInfo()+0x118>
   1717c:	e3520003 	cmp	r2, #3
   17180:	0a000010 	beq	171c8 <CMachineInfo::CMachineInfo()+0x118>
   17184:	e3520004 	cmp	r2, #4
   17188:	0a00000e 	beq	171c8 <CMachineInfo::CMachineInfo()+0x118>
   1718c:	e3520006 	cmp	r2, #6
   17190:	0a000067 	beq	17334 <CMachineInfo::CMachineInfo()+0x284>
   17194:	e3520008 	cmp	r2, #8
   17198:	0a000069 	beq	17344 <CMachineInfo::CMachineInfo()+0x294>
   1719c:	e3520009 	cmp	r2, #9
   171a0:	0a00006b 	beq	17354 <CMachineInfo::CMachineInfo()+0x2a4>
   171a4:	e352000a 	cmp	r2, #10
   171a8:	0a00006b 	beq	1735c <CMachineInfo::CMachineInfo()+0x2ac>
   171ac:	e352000c 	cmp	r2, #12
   171b0:	0a00006d 	beq	1736c <CMachineInfo::CMachineInfo()+0x2bc>
   171b4:	e352000d 	cmp	r2, #13
   171b8:	0a000071 	beq	17384 <CMachineInfo::CMachineInfo()+0x2d4>
   171bc:	e352000e 	cmp	r2, #14
   171c0:	1a00001c 	bne	17238 <CMachineInfo::CMachineInfo()+0x188>
   171c4:	e3a0200b 	mov	r2, #11
   171c8:	e59f11ec 	ldr	r1, [pc, #492]	; 173bc <CMachineInfo::CMachineInfo()+0x30c>
   171cc:	e0822082 	add	r2, r2, r2, lsl #1
   171d0:	e0811102 	add	r1, r1, r2, lsl #2
   171d4:	e5d1c004 	ldrb	ip, [r1, #4]
   171d8:	e591e008 	ldr	lr, [r1, #8]
   171dc:	e1a01623 	lsr	r1, r3, #12
   171e0:	e201100f 	and	r1, r1, #15
   171e4:	e3510002 	cmp	r1, #2
   171e8:	e5c41010 	strb	r1, [r4, #16]
   171ec:	83a01003 	movhi	r1, #3
   171f0:	e1a02a23 	lsr	r2, r3, #20
   171f4:	e2022007 	and	r2, r2, #7
   171f8:	e3a00c01 	mov	r0, #256	; 0x100
   171fc:	85c41010 	strbhi	r1, [r4, #16]
   17200:	e35c0003 	cmp	ip, #3
   17204:	03520000 	cmpeq	r2, #0
   17208:	e203300f 	and	r3, r3, #15
   1720c:	e1a00210 	lsl	r0, r0, r2
   17210:	e2833001 	add	r3, r3, #1
   17214:	e5c4c004 	strb	ip, [r4, #4]
   17218:	e584e008 	str	lr, [r4, #8]
   1721c:	e5840014 	str	r0, [r4, #20]
   17220:	e584300c 	str	r3, [r4, #12]
   17224:	1a000003 	bne	17238 <CMachineInfo::CMachineInfo()+0x188>
   17228:	e3530001 	cmp	r3, #1
   1722c:	03a03001 	moveq	r3, #1
   17230:	13a03002 	movne	r3, #2
   17234:	e5c43004 	strb	r3, [r4, #4]
   17238:	e28d000c 	add	r0, sp, #12
   1723c:	ebfffeed 	bl	16df8 <CBcmPropertyTags::~CBcmPropertyTags()>
   17240:	e1a00004 	mov	r0, r4
   17244:	e28dd020 	add	sp, sp, #32
   17248:	e8bd8070 	pop	{r4, r5, r6, pc}
   1724c:	e3530002 	cmp	r3, #2
   17250:	0a000020 	beq	172d8 <CMachineInfo::CMachineInfo()+0x228>
   17254:	e3530003 	cmp	r3, #3
   17258:	0a00002d 	beq	17314 <CMachineInfo::CMachineInfo()+0x264>
   1725c:	e3530004 	cmp	r3, #4
   17260:	0a000029 	beq	1730c <CMachineInfo::CMachineInfo()+0x25c>
   17264:	e3530005 	cmp	r3, #5
   17268:	0a00002b 	beq	1731c <CMachineInfo::CMachineInfo()+0x26c>
   1726c:	e3530006 	cmp	r3, #6
   17270:	0a00002b 	beq	17324 <CMachineInfo::CMachineInfo()+0x274>
   17274:	e3530007 	cmp	r3, #7
   17278:	0a00002b 	beq	1732c <CMachineInfo::CMachineInfo()+0x27c>
   1727c:	e3530008 	cmp	r3, #8
   17280:	0a00002d 	beq	1733c <CMachineInfo::CMachineInfo()+0x28c>
   17284:	e3530009 	cmp	r3, #9
   17288:	0a00002f 	beq	1734c <CMachineInfo::CMachineInfo()+0x29c>
   1728c:	e353000d 	cmp	r3, #13
   17290:	0a000033 	beq	17364 <CMachineInfo::CMachineInfo()+0x2b4>
   17294:	e353000e 	cmp	r3, #14
   17298:	0a000035 	beq	17374 <CMachineInfo::CMachineInfo()+0x2c4>
   1729c:	e353000f 	cmp	r3, #15
   172a0:	0a000035 	beq	1737c <CMachineInfo::CMachineInfo()+0x2cc>
   172a4:	e3530010 	cmp	r3, #16
   172a8:	0a000037 	beq	1738c <CMachineInfo::CMachineInfo()+0x2dc>
   172ac:	e3530011 	cmp	r3, #17
   172b0:	0a000037 	beq	17394 <CMachineInfo::CMachineInfo()+0x2e4>
   172b4:	e3530012 	cmp	r3, #18
   172b8:	0a000037 	beq	1739c <CMachineInfo::CMachineInfo()+0x2ec>
   172bc:	e3530013 	cmp	r3, #19
   172c0:	0a000037 	beq	173a4 <CMachineInfo::CMachineInfo()+0x2f4>
   172c4:	e3530014 	cmp	r3, #20
   172c8:	0a000037 	beq	173ac <CMachineInfo::CMachineInfo()+0x2fc>
   172cc:	e3530015 	cmp	r3, #21
   172d0:	1affffd8 	bne	17238 <CMachineInfo::CMachineInfo()+0x188>
   172d4:	e3a02010 	mov	r2, #16
   172d8:	e3a01001 	mov	r1, #1
   172dc:	e3a03000 	mov	r3, #0
   172e0:	e59f60d4 	ldr	r6, [pc, #212]	; 173bc <CMachineInfo::CMachineInfo()+0x30c>
   172e4:	e5841008 	str	r1, [r4, #8]
   172e8:	e0866202 	add	r6, r6, r2, lsl #4
   172ec:	e5d60094 	ldrb	r0, [r6, #148]	; 0x94
   172f0:	e5961098 	ldr	r1, [r6, #152]	; 0x98
   172f4:	e596209c 	ldr	r2, [r6, #156]	; 0x9c
   172f8:	e5c40004 	strb	r0, [r4, #4]
   172fc:	e584100c 	str	r1, [r4, #12]
   17300:	e5842014 	str	r2, [r4, #20]
   17304:	e5c43010 	strb	r3, [r4, #16]
   17308:	eaffffca 	b	17238 <CMachineInfo::CMachineInfo()+0x188>
   1730c:	e3a02002 	mov	r2, #2
   17310:	eafffff0 	b	172d8 <CMachineInfo::CMachineInfo()+0x228>
   17314:	e3a02001 	mov	r2, #1
   17318:	eaffffee 	b	172d8 <CMachineInfo::CMachineInfo()+0x228>
   1731c:	e1a02006 	mov	r2, r6
   17320:	eaffffec 	b	172d8 <CMachineInfo::CMachineInfo()+0x228>
   17324:	e3a02004 	mov	r2, #4
   17328:	eaffffea 	b	172d8 <CMachineInfo::CMachineInfo()+0x228>
   1732c:	e3a02005 	mov	r2, #5
   17330:	eaffffe8 	b	172d8 <CMachineInfo::CMachineInfo()+0x228>
   17334:	e3a02005 	mov	r2, #5
   17338:	eaffffa2 	b	171c8 <CMachineInfo::CMachineInfo()+0x118>
   1733c:	e3a02006 	mov	r2, #6
   17340:	eaffffe4 	b	172d8 <CMachineInfo::CMachineInfo()+0x228>
   17344:	e3a02006 	mov	r2, #6
   17348:	eaffff9e 	b	171c8 <CMachineInfo::CMachineInfo()+0x118>
   1734c:	e3a02007 	mov	r2, #7
   17350:	eaffffe0 	b	172d8 <CMachineInfo::CMachineInfo()+0x228>
   17354:	e3a02007 	mov	r2, #7
   17358:	eaffff9a 	b	171c8 <CMachineInfo::CMachineInfo()+0x118>
   1735c:	e3a02008 	mov	r2, #8
   17360:	eaffff98 	b	171c8 <CMachineInfo::CMachineInfo()+0x118>
   17364:	e3a02008 	mov	r2, #8
   17368:	eaffffda 	b	172d8 <CMachineInfo::CMachineInfo()+0x228>
   1736c:	e3a02009 	mov	r2, #9
   17370:	eaffff94 	b	171c8 <CMachineInfo::CMachineInfo()+0x118>
   17374:	e3a02009 	mov	r2, #9
   17378:	eaffffd6 	b	172d8 <CMachineInfo::CMachineInfo()+0x228>
   1737c:	e3a0200a 	mov	r2, #10
   17380:	eaffffd4 	b	172d8 <CMachineInfo::CMachineInfo()+0x228>
   17384:	e3a0200a 	mov	r2, #10
   17388:	eaffff8e 	b	171c8 <CMachineInfo::CMachineInfo()+0x118>
   1738c:	e3a0200b 	mov	r2, #11
   17390:	eaffffd0 	b	172d8 <CMachineInfo::CMachineInfo()+0x228>
   17394:	e3a0200c 	mov	r2, #12
   17398:	eaffffce 	b	172d8 <CMachineInfo::CMachineInfo()+0x228>
   1739c:	e3a0200d 	mov	r2, #13
   173a0:	eaffffcc 	b	172d8 <CMachineInfo::CMachineInfo()+0x228>
   173a4:	e3a0200e 	mov	r2, #14
   173a8:	eaffffca 	b	172d8 <CMachineInfo::CMachineInfo()+0x228>
   173ac:	e3a0200f 	mov	r2, #15
   173b0:	eaffffc8 	b	172d8 <CMachineInfo::CMachineInfo()+0x228>
   173b4:	0005acd0 	.word	0x0005acd0
   173b8:	00010002 	.word	0x00010002
   173bc:	0002f89c 	.word	0x0002f89c

000173c0 <CMachineInfo::~CMachineInfo()>:
   173c0:	e3a0200e 	mov	r2, #14
   173c4:	e59f3014 	ldr	r3, [pc, #20]	; 173e0 <CMachineInfo::~CMachineInfo()+0x20>
   173c8:	e5c02004 	strb	r2, [r0, #4]
   173cc:	e5932000 	ldr	r2, [r3]
   173d0:	e1520000 	cmp	r2, r0
   173d4:	03a02000 	moveq	r2, #0
   173d8:	05832000 	streq	r2, [r3]
   173dc:	e12fff1e 	bx	lr
   173e0:	0005acd0 	.word	0x0005acd0

000173e4 <CMachineInfo::GetMachineModel() const>:
   173e4:	e5d00004 	ldrb	r0, [r0, #4]
   173e8:	e12fff1e 	bx	lr

000173ec <CMachineInfo::GetMachineName() const>:
   173ec:	e5d02004 	ldrb	r2, [r0, #4]
   173f0:	e59f3008 	ldr	r3, [pc, #8]	; 17400 <CMachineInfo::GetMachineName() const+0x14>
   173f4:	e0833102 	add	r3, r3, r2, lsl #2
   173f8:	e59301a0 	ldr	r0, [r3, #416]	; 0x1a0
   173fc:	e12fff1e 	bx	lr
   17400:	0002f89c 	.word	0x0002f89c

00017404 <CMachineInfo::GetModelMajor() const>:
   17404:	e5900008 	ldr	r0, [r0, #8]
   17408:	e12fff1e 	bx	lr

0001740c <CMachineInfo::GetModelRevision() const>:
   1740c:	e590000c 	ldr	r0, [r0, #12]
   17410:	e12fff1e 	bx	lr

00017414 <CMachineInfo::GetSoCType() const>:
   17414:	e5d00010 	ldrb	r0, [r0, #16]
   17418:	e12fff1e 	bx	lr

0001741c <CMachineInfo::GetRAMSize() const>:
   1741c:	e5900014 	ldr	r0, [r0, #20]
   17420:	e12fff1e 	bx	lr

00017424 <CMachineInfo::GetSoCName() const>:
   17424:	e5d02010 	ldrb	r2, [r0, #16]
   17428:	e59f3008 	ldr	r3, [pc, #8]	; 17438 <CMachineInfo::GetSoCName() const+0x14>
   1742c:	e0833102 	add	r3, r3, r2, lsl #2
   17430:	e59301dc 	ldr	r0, [r3, #476]	; 0x1dc
   17434:	e12fff1e 	bx	lr
   17438:	0002f89c 	.word	0x0002f89c

0001743c <CMachineInfo::GetRevisionRaw() const>:
   1743c:	e5900000 	ldr	r0, [r0]
   17440:	e12fff1e 	bx	lr

00017444 <CMachineInfo::GetMaxClockRate(unsigned long) const>:
   17444:	e92d4010 	push	{r4, lr}
   17448:	e24dd020 	sub	sp, sp, #32
   1744c:	e28d0008 	add	r0, sp, #8
   17450:	e1a04001 	mov	r4, r1
   17454:	ebfffe61 	bl	16de0 <CBcmPropertyTags::CBcmPropertyTags()>
   17458:	e3a03004 	mov	r3, #4
   1745c:	e28d200c 	add	r2, sp, #12
   17460:	e58d3000 	str	r3, [sp]
   17464:	e59f1028 	ldr	r1, [pc, #40]	; 17494 <CMachineInfo::GetMaxClockRate(unsigned long) const+0x50>
   17468:	e3a03014 	mov	r3, #20
   1746c:	e28d0008 	add	r0, sp, #8
   17470:	e58d4018 	str	r4, [sp, #24]
   17474:	ebfffe64 	bl	16e0c <CBcmPropertyTags::GetTag(unsigned long, void*, unsigned int, unsigned int)>
   17478:	e2504000 	subs	r4, r0, #0
   1747c:	159d401c 	ldrne	r4, [sp, #28]
   17480:	e28d0008 	add	r0, sp, #8
   17484:	ebfffe5b 	bl	16df8 <CBcmPropertyTags::~CBcmPropertyTags()>
   17488:	e1a00004 	mov	r0, r4
   1748c:	e28dd020 	add	sp, sp, #32
   17490:	e8bd8010 	pop	{r4, pc}
   17494:	00030004 	.word	0x00030004

00017498 <CMachineInfo::GetClockRate(unsigned long) const>:
   17498:	e92d4030 	push	{r4, r5, lr}
   1749c:	e24dd024 	sub	sp, sp, #36	; 0x24
   174a0:	e1a05000 	mov	r5, r0
   174a4:	e28d0008 	add	r0, sp, #8
   174a8:	e1a04001 	mov	r4, r1
   174ac:	ebfffe4b 	bl	16de0 <CBcmPropertyTags::CBcmPropertyTags()>
   174b0:	e3a03004 	mov	r3, #4
   174b4:	e28d0008 	add	r0, sp, #8
   174b8:	e58d3000 	str	r3, [sp]
   174bc:	e28d200c 	add	r2, sp, #12
   174c0:	e3a03014 	mov	r3, #20
   174c4:	e59f1068 	ldr	r1, [pc, #104]	; 17534 <CMachineInfo::GetClockRate(unsigned long) const+0x9c>
   174c8:	e58d4018 	str	r4, [sp, #24]
   174cc:	ebfffe4e 	bl	16e0c <CBcmPropertyTags::GetTag(unsigned long, void*, unsigned int, unsigned int)>
   174d0:	e3500000 	cmp	r0, #0
   174d4:	1a00000c 	bne	1750c <CMachineInfo::GetClockRate(unsigned long) const+0x74>
   174d8:	e3540002 	cmp	r4, #2
   174dc:	0a00000c 	beq	17514 <CMachineInfo::GetClockRate(unsigned long) const+0x7c>
   174e0:	e3540004 	cmp	r4, #4
   174e4:	0a00000c 	beq	1751c <CMachineInfo::GetClockRate(unsigned long) const+0x84>
   174e8:	e59f3048 	ldr	r3, [pc, #72]	; 17538 <CMachineInfo::GetClockRate(unsigned long) const+0xa0>
   174ec:	e3540001 	cmp	r4, #1
   174f0:	01a04003 	moveq	r4, r3
   174f4:	13a04000 	movne	r4, #0
   174f8:	e28d0008 	add	r0, sp, #8
   174fc:	ebfffe3d 	bl	16df8 <CBcmPropertyTags::~CBcmPropertyTags()>
   17500:	e1a00004 	mov	r0, r4
   17504:	e28dd024 	add	sp, sp, #36	; 0x24
   17508:	e8bd8030 	pop	{r4, r5, pc}
   1750c:	e59d401c 	ldr	r4, [sp, #28]
   17510:	eafffff8 	b	174f8 <CMachineInfo::GetClockRate(unsigned long) const+0x60>
   17514:	e59f4020 	ldr	r4, [pc, #32]	; 1753c <CMachineInfo::GetClockRate(unsigned long) const+0xa4>
   17518:	eafffff6 	b	174f8 <CMachineInfo::GetClockRate(unsigned long) const+0x60>
   1751c:	e5952008 	ldr	r2, [r5, #8]
   17520:	e59f3018 	ldr	r3, [pc, #24]	; 17540 <CMachineInfo::GetClockRate(unsigned long) const+0xa8>
   17524:	e3520002 	cmp	r2, #2
   17528:	e59f4014 	ldr	r4, [pc, #20]	; 17544 <CMachineInfo::GetClockRate(unsigned long) const+0xac>
   1752c:	81a04003 	movhi	r4, r3
   17530:	eafffff0 	b	174f8 <CMachineInfo::GetClockRate(unsigned long) const+0x60>
   17534:	00030002 	.word	0x00030002
   17538:	05f5e100 	.word	0x05f5e100
   1753c:	02dc6c00 	.word	0x02dc6c00
   17540:	11e1a300 	.word	0x11e1a300
   17544:	0ee6b280 	.word	0x0ee6b280

00017548 <CMachineInfo::SetClockRate(unsigned long, unsigned int, bool)>:
   17548:	e92d4070 	push	{r4, r5, r6, lr}
   1754c:	e24dd028 	sub	sp, sp, #40	; 0x28
   17550:	e28d000c 	add	r0, sp, #12
   17554:	e1a06001 	mov	r6, r1
   17558:	e1a05002 	mov	r5, r2
   1755c:	e1a04003 	mov	r4, r3
   17560:	ebfffe1e 	bl	16de0 <CBcmPropertyTags::CBcmPropertyTags()>
   17564:	e3a0300c 	mov	r3, #12
   17568:	e28d2010 	add	r2, sp, #16
   1756c:	e58d3000 	str	r3, [sp]
   17570:	e08d0003 	add	r0, sp, r3
   17574:	e59f1028 	ldr	r1, [pc, #40]	; 175a4 <CMachineInfo::SetClockRate(unsigned long, unsigned int, bool)+0x5c>
   17578:	e3a03018 	mov	r3, #24
   1757c:	e58d4024 	str	r4, [sp, #36]	; 0x24
   17580:	e58d601c 	str	r6, [sp, #28]
   17584:	e58d5020 	str	r5, [sp, #32]
   17588:	ebfffe1f 	bl	16e0c <CBcmPropertyTags::GetTag(unsigned long, void*, unsigned int, unsigned int)>
   1758c:	e1a04000 	mov	r4, r0
   17590:	e28d000c 	add	r0, sp, #12
   17594:	ebfffe17 	bl	16df8 <CBcmPropertyTags::~CBcmPropertyTags()>
   17598:	e1a00004 	mov	r0, r4
   1759c:	e28dd028 	add	sp, sp, #40	; 0x28
   175a0:	e8bd8070 	pop	{r4, r5, r6, pc}
   175a4:	00038002 	.word	0x00038002

000175a8 <CMachineInfo::GetDevice(TDeviceId) const>:
   175a8:	e3510000 	cmp	r1, #0
   175ac:	1a000003 	bne	175c0 <CMachineInfo::GetDevice(TDeviceId) const+0x18>
   175b0:	e5d00004 	ldrb	r0, [r0, #4]
   175b4:	e2500001 	subs	r0, r0, #1
   175b8:	13a00001 	movne	r0, #1
   175bc:	e12fff1e 	bx	lr
   175c0:	e3a00000 	mov	r0, #0
   175c4:	e12fff1e 	bx	lr

000175c8 <CMachineInfo::Get()>:
   175c8:	e59f3004 	ldr	r3, [pc, #4]	; 175d4 <CMachineInfo::Get()+0xc>
   175cc:	e5930000 	ldr	r0, [r3]
   175d0:	e12fff1e 	bx	lr
   175d4:	0005acd0 	.word	0x0005acd0

000175d8 <convModeToVal>:
   175d8:	e2400001 	sub	r0, r0, #1
   175dc:	e6ef0070 	uxtb	r0, r0
   175e0:	e3500008 	cmp	r0, #8
   175e4:	959f3008 	ldrls	r3, [pc, #8]	; 175f4 <convModeToVal+0x1c>
   175e8:	97d30000 	ldrbls	r0, [r3, r0]
   175ec:	83a00000 	movhi	r0, #0
   175f0:	e12fff1e 	bx	lr
   175f4:	0002fbcc 	.word	0x0002fbcc

000175f8 <pinMode>:
   175f8:	e92d4070 	push	{r4, r5, r6, lr}
   175fc:	e3a0e007 	mov	lr, #7
   17600:	e59f20e8 	ldr	r2, [pc, #232]	; 176f0 <pinMode+0xf8>
   17604:	e59f40e8 	ldr	r4, [pc, #232]	; 176f4 <pinMode+0xfc>
   17608:	e0832290 	umull	r2, r3, r0, r2
   1760c:	e1a021a3 	lsr	r2, r3, #3
   17610:	e6ef2072 	uxtb	r2, r2
   17614:	e0623e82 	rsb	r3, r2, r2, lsl #29
   17618:	e0623103 	rsb	r3, r2, r3, lsl #2
   1761c:	e0803083 	add	r3, r0, r3, lsl #1
   17620:	e0c54493 	smull	r4, r5, r3, r4
   17624:	e1a0cfc3 	asr	ip, r3, #31
   17628:	e2822302 	add	r2, r2, #134217728	; 0x8000000
   1762c:	e06cc145 	rsb	ip, ip, r5, asr #2
   17630:	e08cc10c 	add	ip, ip, ip, lsl #2
   17634:	e2822702 	add	r2, r2, #524288	; 0x80000
   17638:	e043308c 	sub	r3, r3, ip, lsl #1
   1763c:	e2411001 	sub	r1, r1, #1
   17640:	e1a02102 	lsl	r2, r2, #2
   17644:	e6ef1071 	uxtb	r1, r1
   17648:	e0833083 	add	r3, r3, r3, lsl #1
   1764c:	e592c000 	ldr	ip, [r2]
   17650:	e6ef3073 	uxtb	r3, r3
   17654:	e3510008 	cmp	r1, #8
   17658:	e1cce31e 	bic	lr, ip, lr, lsl r3
   1765c:	8a000017 	bhi	176c0 <pinMode+0xc8>
   17660:	e59fc090 	ldr	ip, [pc, #144]	; 176f8 <pinMode+0x100>
   17664:	e7dc1001 	ldrb	r1, [ip, r1]
   17668:	e201c00f 	and	ip, r1, #15
   1766c:	e18ee31c 	orr	lr, lr, ip, lsl r3
   17670:	e31100f0 	tst	r1, #240	; 0xf0
   17674:	e582e000 	str	lr, [r2]
   17678:	08bd8070 	popeq	{r4, r5, r6, pc}
   1767c:	e1a04000 	mov	r4, r0
   17680:	e59f5074 	ldr	r5, [pc, #116]	; 176fc <pinMode+0x104>
   17684:	e1a01241 	asr	r1, r1, #4
   17688:	e5851094 	str	r1, [r5, #148]	; 0x94
   1768c:	e3a00096 	mov	r0, #150	; 0x96
   17690:	ebffc29c 	bl	8108 <lowlev_cycleDelay>
   17694:	e354001f 	cmp	r4, #31
   17698:	8a00000a 	bhi	176c8 <pinMode+0xd0>
   1769c:	e3a00001 	mov	r0, #1
   176a0:	e1a00410 	lsl	r0, r0, r4
   176a4:	e5850098 	str	r0, [r5, #152]	; 0x98
   176a8:	e3a00096 	mov	r0, #150	; 0x96
   176ac:	ebffc295 	bl	8108 <lowlev_cycleDelay>
   176b0:	e3a03000 	mov	r3, #0
   176b4:	e5853094 	str	r3, [r5, #148]	; 0x94
   176b8:	e5853098 	str	r3, [r5, #152]	; 0x98
   176bc:	e8bd8070 	pop	{r4, r5, r6, pc}
   176c0:	e582e000 	str	lr, [r2]
   176c4:	e8bd8070 	pop	{r4, r5, r6, pc}
   176c8:	e3a03001 	mov	r3, #1
   176cc:	e2440020 	sub	r0, r4, #32
   176d0:	e1a00013 	lsl	r0, r3, r0
   176d4:	e585009c 	str	r0, [r5, #156]	; 0x9c
   176d8:	e3a00096 	mov	r0, #150	; 0x96
   176dc:	ebffc289 	bl	8108 <lowlev_cycleDelay>
   176e0:	e3a03000 	mov	r3, #0
   176e4:	e5853094 	str	r3, [r5, #148]	; 0x94
   176e8:	e585309c 	str	r3, [r5, #156]	; 0x9c
   176ec:	e8bd8070 	pop	{r4, r5, r6, pc}
   176f0:	cccccccd 	.word	0xcccccccd
   176f4:	66666667 	.word	0x66666667
   176f8:	0002fbcc 	.word	0x0002fbcc
   176fc:	20200000 	.word	0x20200000

00017700 <digitalWrite>:
   17700:	e3510000 	cmp	r1, #0
   17704:	e3a03001 	mov	r3, #1
   17708:	0a000008 	beq	17730 <digitalWrite+0x30>
   1770c:	e350001f 	cmp	r0, #31
   17710:	82400020 	subhi	r0, r0, #32
   17714:	959f2038 	ldrls	r2, [pc, #56]	; 17754 <digitalWrite+0x54>
   17718:	859f2034 	ldrhi	r2, [pc, #52]	; 17754 <digitalWrite+0x54>
   1771c:	91a00013 	lslls	r0, r3, r0
   17720:	81a00013 	lslhi	r0, r3, r0
   17724:	9582001c 	strls	r0, [r2, #28]
   17728:	85820020 	strhi	r0, [r2, #32]
   1772c:	e12fff1e 	bx	lr
   17730:	e350001f 	cmp	r0, #31
   17734:	82400020 	subhi	r0, r0, #32
   17738:	959f2014 	ldrls	r2, [pc, #20]	; 17754 <digitalWrite+0x54>
   1773c:	859f2010 	ldrhi	r2, [pc, #16]	; 17754 <digitalWrite+0x54>
   17740:	91a00013 	lslls	r0, r3, r0
   17744:	81a00013 	lslhi	r0, r3, r0
   17748:	95820028 	strls	r0, [r2, #40]	; 0x28
   1774c:	8582002c 	strhi	r0, [r2, #44]	; 0x2c
   17750:	e12fff1e 	bx	lr
   17754:	20200000 	.word	0x20200000

00017758 <digitalRead>:
   17758:	e350001f 	cmp	r0, #31
   1775c:	959f301c 	ldrls	r3, [pc, #28]	; 17780 <digitalRead+0x28>
   17760:	859f2018 	ldrhi	r2, [pc, #24]	; 17780 <digitalRead+0x28>
   17764:	82403020 	subhi	r3, r0, #32
   17768:	95933034 	ldrls	r3, [r3, #52]	; 0x34
   1776c:	85920038 	ldrhi	r0, [r2, #56]	; 0x38
   17770:	91a00033 	lsrls	r0, r3, r0
   17774:	81a00330 	lsrhi	r0, r0, r3
   17778:	e2000001 	and	r0, r0, #1
   1777c:	e12fff1e 	bx	lr
   17780:	20200000 	.word	0x20200000

00017784 <malloc>:
   17784:	eaffcdad 	b	ae40 <nmalloc_malloc>

00017788 <free>:
   17788:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
   1778c:	e24dd00c 	sub	sp, sp, #12
   17790:	e28d3008 	add	r3, sp, #8
   17794:	e5230004 	str	r0, [r3, #-4]!
   17798:	e1a00003 	mov	r0, r3
   1779c:	ebffcde4 	bl	af34 <nmalloc_free>
   177a0:	e28dd00c 	add	sp, sp, #12
   177a4:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

000177a8 <MsDelay>:
   177a8:	e0603280 	rsb	r3, r0, r0, lsl #5
   177ac:	e0800103 	add	r0, r0, r3, lsl #2
   177b0:	e1a00180 	lsl	r0, r0, #3
   177b4:	eafffe06 	b	16fd4 <microsDelay>

000177b8 <usDelay>:
   177b8:	eafffe05 	b	16fd4 <microsDelay>

000177bc <StartKernelTimer>:
   177bc:	e0800100 	add	r0, r0, r0, lsl #2
   177c0:	e0800100 	add	r0, r0, r0, lsl #2
   177c4:	e1a00100 	lsl	r0, r0, #2
   177c8:	eaffcf83 	b	b5dc <timer_attach_handler>

000177cc <CancelKernelTimer>:
   177cc:	e12fff1e 	bx	lr

000177d0 <ConnectInterrupt>:
   177d0:	e3a00009 	mov	r0, #9
   177d4:	eafff7de 	b	15754 <CInterrupts::connectIRQ(unsigned int, void (*)(void*), void*)>

000177d8 <SetPowerStateOn>:
   177d8:	e92d4010 	push	{r4, lr}
   177dc:	e6ef0070 	uxtb	r0, r0
   177e0:	e3a01000 	mov	r1, #0
   177e4:	ebffce9a 	bl	b254 <rhw_set_device_power>
   177e8:	e3500000 	cmp	r0, #0
   177ec:	0a000001 	beq	177f8 <SetPowerStateOn+0x20>
   177f0:	e3a00000 	mov	r0, #0
   177f4:	e8bd8010 	pop	{r4, pc}
   177f8:	e59f0008 	ldr	r0, [pc, #8]	; 17808 <SetPowerStateOn+0x30>
   177fc:	ebfffdf4 	bl	16fd4 <microsDelay>
   17800:	e3a00001 	mov	r0, #1
   17804:	e8bd8010 	pop	{r4, pc}
   17808:	0007a120 	.word	0x0007a120

0001780c <GetMACAddress>:
   1780c:	e92d4010 	push	{r4, lr}
   17810:	ebffce65 	bl	b1ac <rhw_get_mac_address>
   17814:	e16f0f10 	clz	r0, r0
   17818:	e1a002a0 	lsr	r0, r0, #5
   1781c:	e8bd8010 	pop	{r4, pc}

00017820 <uspi_assertion_failed>:
   17820:	e92d4010 	push	{r4, lr}
   17824:	e1a03002 	mov	r3, r2
   17828:	e1a02001 	mov	r2, r1
   1782c:	e1a01000 	mov	r1, r0
   17830:	e59f0010 	ldr	r0, [pc, #16]	; 17848 <uspi_assertion_failed+0x28>
   17834:	ebffc86d 	bl	99f0 <ee_printf>
   17838:	e59f400c 	ldr	r4, [pc, #12]	; 1784c <uspi_assertion_failed+0x2c>
   1783c:	e1a00004 	mov	r0, r4
   17840:	ebfffde3 	bl	16fd4 <microsDelay>
   17844:	eafffffc 	b	1783c <uspi_assertion_failed+0x1c>
   17848:	0002fbd8 	.word	0x0002fbd8
   1784c:	000f4240 	.word	0x000f4240

00017850 <DebugHexdump>:
   17850:	e92d4070 	push	{r4, r5, r6, lr}
   17854:	e1a04000 	mov	r4, r0
   17858:	e1a05001 	mov	r5, r1
   1785c:	e59f0014 	ldr	r0, [pc, #20]	; 17878 <DebugHexdump+0x28>
   17860:	e1a01002 	mov	r1, r2
   17864:	ebffc861 	bl	99f0 <ee_printf>
   17868:	e0841005 	add	r1, r4, r5
   1786c:	e1a00004 	mov	r0, r4
   17870:	e8bd4070 	pop	{r4, r5, r6, lr}
   17874:	eaffc874 	b	9a4c <ee_dump_mem>
   17878:	0002fc00 	.word	0x0002fc00

0001787c <BusAccess::waitStateISR(void*)>:
   1787c:	e3a01040 	mov	r1, #64	; 0x40
   17880:	e3a02c0e 	mov	r2, #3584	; 0xe00
   17884:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17888:	e59f41f8 	ldr	r4, [pc, #504]	; 17a88 <BusAccess::waitStateISR(void*)+0x20c>
   1788c:	e3a00064 	mov	r0, #100	; 0x64
   17890:	e5943008 	ldr	r3, [r4, #8]
   17894:	e24dd00c 	sub	sp, sp, #12
   17898:	e20334ff 	and	r3, r3, #-16777216	; 0xff000000
   1789c:	e5843008 	str	r3, [r4, #8]
   178a0:	e5841028 	str	r1, [r4, #40]	; 0x28
   178a4:	e5842028 	str	r2, [r4, #40]	; 0x28
   178a8:	ebffc216 	bl	8108 <lowlev_cycleDelay>
   178ac:	e1a01004 	mov	r1, r4
   178b0:	e59f31d4 	ldr	r3, [pc, #468]	; 17a8c <BusAccess::waitStateISR(void*)+0x210>
   178b4:	e59f01d4 	ldr	r0, [pc, #468]	; 17a90 <BusAccess::waitStateISR(void*)+0x214>
   178b8:	ea000001 	b	178c4 <BusAccess::waitStateISR(void*)+0x48>
   178bc:	e2533001 	subs	r3, r3, #1
   178c0:	0a000003 	beq	178d4 <BusAccess::waitStateISR(void*)+0x58>
   178c4:	e5914034 	ldr	r4, [r1, #52]	; 0x34
   178c8:	e0042000 	and	r2, r4, r0
   178cc:	e3520806 	cmp	r2, #393216	; 0x60000
   178d0:	0afffff9 	beq	178bc <BusAccess::waitStateISR(void*)+0x40>
   178d4:	e3a03c06 	mov	r3, #1536	; 0x600
   178d8:	e3a07c0e 	mov	r7, #3584	; 0xe00
   178dc:	e3a09c0e 	mov	r9, #3584	; 0xe00
   178e0:	e3a0bc02 	mov	fp, #512	; 0x200
   178e4:	e59f519c 	ldr	r5, [pc, #412]	; 17a88 <BusAccess::waitStateISR(void*)+0x20c>
   178e8:	e3a00019 	mov	r0, #25
   178ec:	e5857028 	str	r7, [r5, #40]	; 0x28
   178f0:	e585301c 	str	r3, [r5, #28]
   178f4:	ebffc203 	bl	8108 <lowlev_cycleDelay>
   178f8:	e5958034 	ldr	r8, [r5, #52]	; 0x34
   178fc:	e3a00019 	mov	r0, #25
   17900:	e5857028 	str	r7, [r5, #40]	; 0x28
   17904:	e585701c 	str	r7, [r5, #28]
   17908:	ebffc1fe 	bl	8108 <lowlev_cycleDelay>
   1790c:	e5956034 	ldr	r6, [r5, #52]	; 0x34
   17910:	e5857028 	str	r7, [r5, #40]	; 0x28
   17914:	e1a05924 	lsr	r5, r4, #18
   17918:	e3a00019 	mov	r0, #25
   1791c:	e2255001 	eor	r5, r5, #1
   17920:	ebffc1f8 	bl	8108 <lowlev_cycleDelay>
   17924:	e2055001 	and	r5, r5, #1
   17928:	e214a802 	ands	sl, r4, #131072	; 0x20000
   1792c:	03855002 	orreq	r5, r5, #2
   17930:	e3140001 	tst	r4, #1
   17934:	03855004 	orreq	r5, r5, #4
   17938:	e1a06626 	lsr	r6, r6, #12
   1793c:	e3140002 	tst	r4, #2
   17940:	e59f7140 	ldr	r7, [pc, #320]	; 17a88 <BusAccess::waitStateISR(void*)+0x20c>
   17944:	03855008 	orreq	r5, r5, #8
   17948:	e1a08208 	lsl	r8, r8, #4
   1794c:	e3140020 	tst	r4, #32
   17950:	e2066cff 	and	r6, r6, #65280	; 0xff00
   17954:	03855020 	orreq	r5, r5, #32
   17958:	e3a01001 	mov	r1, #1
   1795c:	e3140601 	tst	r4, #1048576	; 0x100000
   17960:	e3a00006 	mov	r0, #6
   17964:	e1866c28 	orr	r6, r6, r8, lsr #24
   17968:	e59f8124 	ldr	r8, [pc, #292]	; 17a94 <BusAccess::waitStateISR(void*)+0x218>
   1796c:	03855010 	orreq	r5, r5, #16
   17970:	ebffff62 	bl	17700 <digitalWrite>
   17974:	e5879028 	str	r9, [r7, #40]	; 0x28
   17978:	e3a00019 	mov	r0, #25
   1797c:	e587b01c 	str	fp, [r7, #28]
   17980:	ebffc1e0 	bl	8108 <lowlev_cycleDelay>
   17984:	e5974034 	ldr	r4, [r7, #52]	; 0x34
   17988:	e5983000 	ldr	r3, [r8]
   1798c:	e1a04a24 	lsr	r4, r4, #20
   17990:	e3530000 	cmp	r3, #0
   17994:	e5879028 	str	r9, [r7, #40]	; 0x28
   17998:	e6ef4074 	uxtb	r4, r4
   1799c:	0a000013 	beq	179f0 <BusAccess::waitStateISR(void*)+0x174>
   179a0:	e1a02005 	mov	r2, r5
   179a4:	e1a01004 	mov	r1, r4
   179a8:	e1a00006 	mov	r0, r6
   179ac:	e12fff33 	blx	r3
   179b0:	e35a0000 	cmp	sl, #0
   179b4:	1a000008 	bne	179dc <BusAccess::waitStateISR(void*)+0x160>
   179b8:	e3100a02 	tst	r0, #8192	; 0x2000
   179bc:	0a00000b 	beq	179f0 <BusAccess::waitStateISR(void*)+0x174>
   179c0:	e3e02000 	mvn	r2, #0
   179c4:	e59f30bc 	ldr	r3, [pc, #188]	; 17a88 <BusAccess::waitStateISR(void*)+0x20c>
   179c8:	e5886004 	str	r6, [r8, #4]
   179cc:	e1c840f8 	strd	r4, [r8, #8]
   179d0:	e5832040 	str	r2, [r3, #64]	; 0x40
   179d4:	e28dd00c 	add	sp, sp, #12
   179d8:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   179dc:	e2101902 	ands	r1, r0, #32768	; 0x8000
   179e0:	e200aa02 	and	sl, r0, #8192	; 0x2000
   179e4:	0a00000c 	beq	17a1c <BusAccess::waitStateISR(void*)+0x1a0>
   179e8:	e35a0000 	cmp	sl, #0
   179ec:	1afffff3 	bne	179c0 <BusAccess::waitStateISR(void*)+0x144>
   179f0:	e3e02000 	mvn	r2, #0
   179f4:	e3a03a03 	mov	r3, #12288	; 0x3000
   179f8:	e59f4088 	ldr	r4, [pc, #136]	; 17a88 <BusAccess::waitStateISR(void*)+0x20c>
   179fc:	e3a00005 	mov	r0, #5
   17a00:	e5842040 	str	r2, [r4, #64]	; 0x40
   17a04:	e5843028 	str	r3, [r4, #40]	; 0x28
   17a08:	ebffc1be 	bl	8108 <lowlev_cycleDelay>
   17a0c:	e5983010 	ldr	r3, [r8, #16]
   17a10:	e584301c 	str	r3, [r4, #28]
   17a14:	e28dd00c 	add	sp, sp, #12
   17a18:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17a1c:	e58d0004 	str	r0, [sp, #4]
   17a20:	e3a00006 	mov	r0, #6
   17a24:	ebffff35 	bl	17700 <digitalWrite>
   17a28:	e59d3004 	ldr	r3, [sp, #4]
   17a2c:	e5879028 	str	r9, [r7, #40]	; 0x28
   17a30:	e1a02a03 	lsl	r2, r3, #20
   17a34:	e1e01002 	mvn	r1, r2
   17a38:	e587b01c 	str	fp, [r7, #28]
   17a3c:	e597c008 	ldr	ip, [r7, #8]
   17a40:	e59f0050 	ldr	r0, [pc, #80]	; 17a98 <BusAccess::waitStateISR(void*)+0x21c>
   17a44:	e20cc4ff 	and	ip, ip, #-16777216	; 0xff000000
   17a48:	e18c0000 	orr	r0, ip, r0
   17a4c:	e20116ff 	and	r1, r1, #267386880	; 0xff00000
   17a50:	e20226ff 	and	r2, r2, #267386880	; 0xff00000
   17a54:	e5870008 	str	r0, [r7, #8]
   17a58:	e587201c 	str	r2, [r7, #28]
   17a5c:	e3a00005 	mov	r0, #5
   17a60:	e5871028 	str	r1, [r7, #40]	; 0x28
   17a64:	ebffc1a7 	bl	8108 <lowlev_cycleDelay>
   17a68:	e5879028 	str	r9, [r7, #40]	; 0x28
   17a6c:	e3a00064 	mov	r0, #100	; 0x64
   17a70:	ebffc1a4 	bl	8108 <lowlev_cycleDelay>
   17a74:	e35a0000 	cmp	sl, #0
   17a78:	0affffdc 	beq	179f0 <BusAccess::waitStateISR(void*)+0x174>
   17a7c:	e59d3004 	ldr	r3, [sp, #4]
   17a80:	e1a04003 	mov	r4, r3
   17a84:	eaffffcd 	b	179c0 <BusAccess::waitStateISR(void*)+0x144>
   17a88:	20200000 	.word	0x20200000
   17a8c:	00002710 	.word	0x00002710
   17a90:	00060001 	.word	0x00060001
   17a94:	0005acd4 	.word	0x0005acd4
   17a98:	00249249 	.word	0x00249249

00017a9c <BusAccess::init()>:
   17a9c:	e92d4070 	push	{r4, r5, r6, lr}
   17aa0:	e3a04000 	mov	r4, #0
   17aa4:	ebffc195 	bl	8100 <lowlev_disable_fiq>
   17aa8:	e1a01004 	mov	r1, r4
   17aac:	e3a0000b 	mov	r0, #11
   17ab0:	ebffff12 	bl	17700 <digitalWrite>
   17ab4:	e3a01001 	mov	r1, #1
   17ab8:	e3a0000b 	mov	r0, #11
   17abc:	ebfffecd 	bl	175f8 <pinMode>
   17ac0:	e1a01004 	mov	r1, r4
   17ac4:	e3a0000b 	mov	r0, #11
   17ac8:	ebffff0c 	bl	17700 <digitalWrite>
   17acc:	e1a01004 	mov	r1, r4
   17ad0:	e3a00009 	mov	r0, #9
   17ad4:	ebffff09 	bl	17700 <digitalWrite>
   17ad8:	e3a01001 	mov	r1, #1
   17adc:	e3a00009 	mov	r0, #9
   17ae0:	ebfffec4 	bl	175f8 <pinMode>
   17ae4:	e1a01004 	mov	r1, r4
   17ae8:	e3a00009 	mov	r0, #9
   17aec:	ebffff03 	bl	17700 <digitalWrite>
   17af0:	e1a01004 	mov	r1, r4
   17af4:	e3a0000a 	mov	r0, #10
   17af8:	ebffff00 	bl	17700 <digitalWrite>
   17afc:	e3a01001 	mov	r1, #1
   17b00:	e3a0000a 	mov	r0, #10
   17b04:	ebfffebb 	bl	175f8 <pinMode>
   17b08:	e1a01004 	mov	r1, r4
   17b0c:	e3a0000a 	mov	r0, #10
   17b10:	ebfffefa 	bl	17700 <digitalWrite>
   17b14:	e3a01001 	mov	r1, #1
   17b18:	e3a00013 	mov	r0, #19
   17b1c:	ebfffef7 	bl	17700 <digitalWrite>
   17b20:	e3a01001 	mov	r1, #1
   17b24:	e3a00013 	mov	r0, #19
   17b28:	ebfffeb2 	bl	175f8 <pinMode>
   17b2c:	e3a01001 	mov	r1, #1
   17b30:	e3a00013 	mov	r0, #19
   17b34:	ebfffef1 	bl	17700 <digitalWrite>
   17b38:	e1a01004 	mov	r1, r4
   17b3c:	e3a0000d 	mov	r0, #13
   17b40:	ebfffeee 	bl	17700 <digitalWrite>
   17b44:	e3a01001 	mov	r1, #1
   17b48:	e3a0000d 	mov	r0, #13
   17b4c:	ebfffea9 	bl	175f8 <pinMode>
   17b50:	e1a01004 	mov	r1, r4
   17b54:	e3a0000d 	mov	r0, #13
   17b58:	ebfffee8 	bl	17700 <digitalWrite>
   17b5c:	e1a01004 	mov	r1, r4
   17b60:	e3a0000c 	mov	r0, #12
   17b64:	ebfffee5 	bl	17700 <digitalWrite>
   17b68:	e3a01001 	mov	r1, #1
   17b6c:	e3a0000c 	mov	r0, #12
   17b70:	ebfffea0 	bl	175f8 <pinMode>
   17b74:	e59f50cc 	ldr	r5, [pc, #204]	; 17c48 <BusAccess::init()+0x1ac>
   17b78:	e1a01004 	mov	r1, r4
   17b7c:	e3a0000c 	mov	r0, #12
   17b80:	ebfffede 	bl	17700 <digitalWrite>
   17b84:	e3a01001 	mov	r1, #1
   17b88:	e3a00003 	mov	r0, #3
   17b8c:	e5854010 	str	r4, [r5, #16]
   17b90:	e5854014 	str	r4, [r5, #20]
   17b94:	ebfffed9 	bl	17700 <digitalWrite>
   17b98:	e3a01001 	mov	r1, #1
   17b9c:	e3a00003 	mov	r0, #3
   17ba0:	ebfffe94 	bl	175f8 <pinMode>
   17ba4:	e3a01001 	mov	r1, #1
   17ba8:	e3a00003 	mov	r0, #3
   17bac:	ebfffed3 	bl	17700 <digitalWrite>
   17bb0:	e1a01004 	mov	r1, r4
   17bb4:	e3a00007 	mov	r0, #7
   17bb8:	ebfffed0 	bl	17700 <digitalWrite>
   17bbc:	e3a01001 	mov	r1, #1
   17bc0:	e3a00007 	mov	r0, #7
   17bc4:	ebfffe8b 	bl	175f8 <pinMode>
   17bc8:	e1a01004 	mov	r1, r4
   17bcc:	e3a00007 	mov	r0, #7
   17bd0:	ebfffeca 	bl	17700 <digitalWrite>
   17bd4:	e1a01004 	mov	r1, r4
   17bd8:	e3a00010 	mov	r0, #16
   17bdc:	ebfffec7 	bl	17700 <digitalWrite>
   17be0:	e3a01001 	mov	r1, #1
   17be4:	e3a00010 	mov	r0, #16
   17be8:	ebfffe82 	bl	175f8 <pinMode>
   17bec:	e1a01004 	mov	r1, r4
   17bf0:	e3a00010 	mov	r0, #16
   17bf4:	ebfffec1 	bl	17700 <digitalWrite>
   17bf8:	e3a01001 	mov	r1, #1
   17bfc:	e3a00006 	mov	r0, #6
   17c00:	ebfffebe 	bl	17700 <digitalWrite>
   17c04:	e3a01001 	mov	r1, #1
   17c08:	e3a00006 	mov	r0, #6
   17c0c:	ebfffe79 	bl	175f8 <pinMode>
   17c10:	e3a01001 	mov	r1, #1
   17c14:	e3a00006 	mov	r0, #6
   17c18:	ebfffeb8 	bl	17700 <digitalWrite>
   17c1c:	e1a01004 	mov	r1, r4
   17c20:	e3a00008 	mov	r0, #8
   17c24:	ebfffeb5 	bl	17700 <digitalWrite>
   17c28:	e3a01001 	mov	r1, #1
   17c2c:	e3a00008 	mov	r0, #8
   17c30:	ebfffe70 	bl	175f8 <pinMode>
   17c34:	e1a01004 	mov	r1, r4
   17c38:	e3a00008 	mov	r0, #8
   17c3c:	ebfffeaf 	bl	17700 <digitalWrite>
   17c40:	e5c54018 	strb	r4, [r5, #24]
   17c44:	e8bd8070 	pop	{r4, r5, r6, pc}
   17c48:	0005acd4 	.word	0x0005acd4

00017c4c <BusAccess::targetReset(bool)>:
   17c4c:	e92d4070 	push	{r4, r5, r6, lr}
   17c50:	e1a06000 	mov	r6, r0
   17c54:	ebffc129 	bl	8100 <lowlev_disable_fiq>
   17c58:	e3a01a03 	mov	r1, #12288	; 0x3000
   17c5c:	e59f5098 	ldr	r5, [pc, #152]	; 17cfc <BusAccess::targetReset(bool)+0xb0>
   17c60:	e59f3098 	ldr	r3, [pc, #152]	; 17d00 <BusAccess::targetReset(bool)+0xb4>
   17c64:	e5952014 	ldr	r2, [r5, #20]
   17c68:	e5831028 	str	r1, [r3, #40]	; 0x28
   17c6c:	e5852010 	str	r2, [r5, #16]
   17c70:	e583201c 	str	r2, [r3, #28]
   17c74:	e3120a02 	tst	r2, #8192	; 0x2000
   17c78:	e5932058 	ldr	r2, [r3, #88]	; 0x58
   17c7c:	e59f407c 	ldr	r4, [pc, #124]	; 17d00 <BusAccess::targetReset(bool)+0xb4>
   17c80:	13822020 	orrne	r2, r2, #32
   17c84:	03c22020 	biceq	r2, r2, #32
   17c88:	e5832058 	str	r2, [r3, #88]	; 0x58
   17c8c:	e3a02c0e 	mov	r2, #3584	; 0xe00
   17c90:	e3a03c0a 	mov	r3, #2560	; 0xa00
   17c94:	e3560000 	cmp	r6, #0
   17c98:	e5842028 	str	r2, [r4, #40]	; 0x28
   17c9c:	e584301c 	str	r3, [r4, #28]
   17ca0:	18bd8070 	popne	{r4, r5, r6, pc}
   17ca4:	e3a00064 	mov	r0, #100	; 0x64
   17ca8:	ebfffcc9 	bl	16fd4 <microsDelay>
   17cac:	e3a03a03 	mov	r3, #12288	; 0x3000
   17cb0:	e3a00005 	mov	r0, #5
   17cb4:	e5843028 	str	r3, [r4, #40]	; 0x28
   17cb8:	ebffc112 	bl	8108 <lowlev_cycleDelay>
   17cbc:	e3e03000 	mvn	r3, #0
   17cc0:	e5d51018 	ldrb	r1, [r5, #24]
   17cc4:	e5952010 	ldr	r2, [r5, #16]
   17cc8:	e3510000 	cmp	r1, #0
   17ccc:	e584201c 	str	r2, [r4, #28]
   17cd0:	e5843040 	str	r3, [r4, #64]	; 0x40
   17cd4:	1a000005 	bne	17cf0 <BusAccess::targetReset(bool)+0xa4>
   17cd8:	e3a01c0e 	mov	r1, #3584	; 0xe00
   17cdc:	e3e02000 	mvn	r2, #0
   17ce0:	e59f3018 	ldr	r3, [pc, #24]	; 17d00 <BusAccess::targetReset(bool)+0xb4>
   17ce4:	e5831028 	str	r1, [r3, #40]	; 0x28
   17ce8:	e5832040 	str	r2, [r3, #64]	; 0x40
   17cec:	e8bd8070 	pop	{r4, r5, r6, pc}
   17cf0:	e5843040 	str	r3, [r4, #64]	; 0x40
   17cf4:	ebffc0fd 	bl	80f0 <lowlev_enable_fiq>
   17cf8:	eafffff6 	b	17cd8 <BusAccess::targetReset(bool)+0x8c>
   17cfc:	0005acd4 	.word	0x0005acd4
   17d00:	20200000 	.word	0x20200000

00017d04 <BusAccess::targetNMI(int)>:
   17d04:	e92d4070 	push	{r4, r5, r6, lr}
   17d08:	e3a03b03 	mov	r3, #3072	; 0xc00
   17d0c:	e3a05c0e 	mov	r5, #3584	; 0xe00
   17d10:	e59f4018 	ldr	r4, [pc, #24]	; 17d30 <BusAccess::targetNMI(int)+0x2c>
   17d14:	e3500000 	cmp	r0, #0
   17d18:	e5845028 	str	r5, [r4, #40]	; 0x28
   17d1c:	d3a0000a 	movle	r0, #10
   17d20:	e584301c 	str	r3, [r4, #28]
   17d24:	ebfffcaa 	bl	16fd4 <microsDelay>
   17d28:	e5845028 	str	r5, [r4, #40]	; 0x28
   17d2c:	e8bd8070 	pop	{r4, r5, r6, pc}
   17d30:	20200000 	.word	0x20200000

00017d34 <BusAccess::targetIRQ(int)>:
   17d34:	e92d4070 	push	{r4, r5, r6, lr}
   17d38:	e3a03b01 	mov	r3, #1024	; 0x400
   17d3c:	e3a05c0e 	mov	r5, #3584	; 0xe00
   17d40:	e2402001 	sub	r2, r0, #1
   17d44:	e59f4018 	ldr	r4, [pc, #24]	; 17d64 <BusAccess::targetIRQ(int)+0x30>
   17d48:	e3520ffa 	cmp	r2, #1000	; 0x3e8
   17d4c:	e5845028 	str	r5, [r4, #40]	; 0x28
   17d50:	23a00032 	movcs	r0, #50	; 0x32
   17d54:	e584301c 	str	r3, [r4, #28]
   17d58:	ebfffc9d 	bl	16fd4 <microsDelay>
   17d5c:	e5845028 	str	r5, [r4, #40]	; 0x28
   17d60:	e8bd8070 	pop	{r4, r5, r6, pc}
   17d64:	20200000 	.word	0x20200000

00017d68 <BusAccess::isUnderControl()>:
   17d68:	e59f3004 	ldr	r3, [pc, #4]	; 17d74 <BusAccess::isUnderControl()+0xc>
   17d6c:	e5d30019 	ldrb	r0, [r3, #25]
   17d70:	e12fff1e 	bx	lr
   17d74:	0005acd4 	.word	0x0005acd4

00017d78 <BusAccess::controlRequest()>:
   17d78:	e3a0c040 	mov	ip, #64	; 0x40
   17d7c:	e59f3018 	ldr	r3, [pc, #24]	; 17d9c <BusAccess::controlRequest()+0x24>
   17d80:	e3a01000 	mov	r1, #0
   17d84:	e5932008 	ldr	r2, [r3, #8]
   17d88:	e3a00013 	mov	r0, #19
   17d8c:	e20224ff 	and	r2, r2, #-16777216	; 0xff000000
   17d90:	e5832008 	str	r2, [r3, #8]
   17d94:	e583c01c 	str	ip, [r3, #28]
   17d98:	eafffe58 	b	17700 <digitalWrite>
   17d9c:	20200000 	.word	0x20200000

00017da0 <BusAccess::controlBusAcknowledged()>:
   17da0:	e59f3010 	ldr	r3, [pc, #16]	; 17db8 <BusAccess::controlBusAcknowledged()+0x18>
   17da4:	e5930034 	ldr	r0, [r3, #52]	; 0x34
   17da8:	e1a00120 	lsr	r0, r0, #2
   17dac:	e2200001 	eor	r0, r0, #1
   17db0:	e2000001 	and	r0, r0, #1
   17db4:	e12fff1e 	bx	lr
   17db8:	20200000 	.word	0x20200000

00017dbc <BusAccess::controlTake()>:
   17dbc:	e92d4010 	push	{r4, lr}
   17dc0:	e3a04001 	mov	r4, #1
   17dc4:	ebffc0cd 	bl	8100 <lowlev_disable_fiq>
   17dc8:	e3a0c040 	mov	ip, #64	; 0x40
   17dcc:	e59f20b4 	ldr	r2, [pc, #180]	; 17e88 <BusAccess::controlTake()+0xcc>
   17dd0:	e59f30b4 	ldr	r3, [pc, #180]	; 17e8c <BusAccess::controlTake()+0xd0>
   17dd4:	e5c24019 	strb	r4, [r2, #25]
   17dd8:	e5932008 	ldr	r2, [r3, #8]
   17ddc:	e1a01004 	mov	r1, r4
   17de0:	e20224ff 	and	r2, r2, #-16777216	; 0xff000000
   17de4:	e5832008 	str	r2, [r3, #8]
   17de8:	e3a00011 	mov	r0, #17
   17dec:	e583c01c 	str	ip, [r3, #28]
   17df0:	ebfffe42 	bl	17700 <digitalWrite>
   17df4:	e1a01004 	mov	r1, r4
   17df8:	e3a00011 	mov	r0, #17
   17dfc:	ebfffdfd 	bl	175f8 <pinMode>
   17e00:	e1a01004 	mov	r1, r4
   17e04:	e3a00011 	mov	r0, #17
   17e08:	ebfffe3c 	bl	17700 <digitalWrite>
   17e0c:	e1a01004 	mov	r1, r4
   17e10:	e3a00012 	mov	r0, #18
   17e14:	ebfffe39 	bl	17700 <digitalWrite>
   17e18:	e1a01004 	mov	r1, r4
   17e1c:	e3a00012 	mov	r0, #18
   17e20:	ebfffdf4 	bl	175f8 <pinMode>
   17e24:	e1a01004 	mov	r1, r4
   17e28:	e3a00012 	mov	r0, #18
   17e2c:	ebfffe33 	bl	17700 <digitalWrite>
   17e30:	e1a01004 	mov	r1, r4
   17e34:	e3a00000 	mov	r0, #0
   17e38:	ebfffe30 	bl	17700 <digitalWrite>
   17e3c:	e1a01004 	mov	r1, r4
   17e40:	e3a00000 	mov	r0, #0
   17e44:	ebfffdeb 	bl	175f8 <pinMode>
   17e48:	e1a01004 	mov	r1, r4
   17e4c:	e3a00000 	mov	r0, #0
   17e50:	ebfffe2a 	bl	17700 <digitalWrite>
   17e54:	e1a01004 	mov	r1, r4
   17e58:	e1a00004 	mov	r0, r4
   17e5c:	ebfffe27 	bl	17700 <digitalWrite>
   17e60:	e1a01004 	mov	r1, r4
   17e64:	e1a00004 	mov	r0, r4
   17e68:	ebfffde2 	bl	175f8 <pinMode>
   17e6c:	e1a01004 	mov	r1, r4
   17e70:	e1a00004 	mov	r0, r4
   17e74:	ebfffe21 	bl	17700 <digitalWrite>
   17e78:	e8bd4010 	pop	{r4, lr}
   17e7c:	e3a01000 	mov	r1, #0
   17e80:	e3a00003 	mov	r0, #3
   17e84:	eafffe1d 	b	17700 <digitalWrite>
   17e88:	0005acd4 	.word	0x0005acd4
   17e8c:	20200000 	.word	0x20200000

00017e90 <BusAccess::controlRelease(bool)>:
   17e90:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   17e94:	e3a0c601 	mov	ip, #1048576	; 0x100000
   17e98:	e3a016fe 	mov	r1, #266338304	; 0xfe00000
   17e9c:	e3a05040 	mov	r5, #64	; 0x40
   17ea0:	e59f4130 	ldr	r4, [pc, #304]	; 17fd8 <BusAccess::controlRelease(bool)+0x148>
   17ea4:	e59f3130 	ldr	r3, [pc, #304]	; 17fdc <BusAccess::controlRelease(bool)+0x14c>
   17ea8:	e5942008 	ldr	r2, [r4, #8]
   17eac:	e1a06000 	mov	r6, r0
   17eb0:	e20224ff 	and	r2, r2, #-16777216	; 0xff000000
   17eb4:	e1823003 	orr	r3, r2, r3
   17eb8:	e5843008 	str	r3, [r4, #8]
   17ebc:	e3a00002 	mov	r0, #2
   17ec0:	e584c01c 	str	ip, [r4, #28]
   17ec4:	e5841028 	str	r1, [r4, #40]	; 0x28
   17ec8:	e5845028 	str	r5, [r4, #40]	; 0x28
   17ecc:	ebfffc40 	bl	16fd4 <microsDelay>
   17ed0:	e3a01000 	mov	r1, #0
   17ed4:	e1a00001 	mov	r0, r1
   17ed8:	ebfffe08 	bl	17700 <digitalWrite>
   17edc:	e3a00002 	mov	r0, #2
   17ee0:	ebfffc3b 	bl	16fd4 <microsDelay>
   17ee4:	e3a01001 	mov	r1, #1
   17ee8:	e3a00000 	mov	r0, #0
   17eec:	ebfffe03 	bl	17700 <digitalWrite>
   17ef0:	e584501c 	str	r5, [r4, #28]
   17ef4:	e5943008 	ldr	r3, [r4, #8]
   17ef8:	e3a00002 	mov	r0, #2
   17efc:	e20334ff 	and	r3, r3, #-16777216	; 0xff000000
   17f00:	e5843008 	str	r3, [r4, #8]
   17f04:	ebfffc32 	bl	16fd4 <microsDelay>
   17f08:	e3a02c0e 	mov	r2, #3584	; 0xe00
   17f0c:	e3a03a03 	mov	r3, #12288	; 0x3000
   17f10:	e3e07000 	mvn	r7, #0
   17f14:	e59f50c4 	ldr	r5, [pc, #196]	; 17fe0 <BusAccess::controlRelease(bool)+0x150>
   17f18:	e5842028 	str	r2, [r4, #40]	; 0x28
   17f1c:	e3a00005 	mov	r0, #5
   17f20:	e5843028 	str	r3, [r4, #40]	; 0x28
   17f24:	ebffc077 	bl	8108 <lowlev_cycleDelay>
   17f28:	e5953010 	ldr	r3, [r5, #16]
   17f2c:	e3a01000 	mov	r1, #0
   17f30:	e584301c 	str	r3, [r4, #28]
   17f34:	e3a00011 	mov	r0, #17
   17f38:	e5847040 	str	r7, [r4, #64]	; 0x40
   17f3c:	ebfffdad 	bl	175f8 <pinMode>
   17f40:	e3a01000 	mov	r1, #0
   17f44:	e3a00012 	mov	r0, #18
   17f48:	ebfffdaa 	bl	175f8 <pinMode>
   17f4c:	e3a01000 	mov	r1, #0
   17f50:	e1a00001 	mov	r0, r1
   17f54:	ebfffda7 	bl	175f8 <pinMode>
   17f58:	e3a01000 	mov	r1, #0
   17f5c:	e3a00001 	mov	r0, #1
   17f60:	ebfffda4 	bl	175f8 <pinMode>
   17f64:	e3a01001 	mov	r1, #1
   17f68:	e3a00003 	mov	r0, #3
   17f6c:	ebfffde3 	bl	17700 <digitalWrite>
   17f70:	e5d53018 	ldrb	r3, [r5, #24]
   17f74:	e3530000 	cmp	r3, #0
   17f78:	1a000013 	bne	17fcc <BusAccess::controlRelease(bool)+0x13c>
   17f7c:	e3560000 	cmp	r6, #0
   17f80:	1a000005 	bne	17f9c <BusAccess::controlRelease(bool)+0x10c>
   17f84:	e3a01001 	mov	r1, #1
   17f88:	e3a00013 	mov	r0, #19
   17f8c:	ebfffddb 	bl	17700 <digitalWrite>
   17f90:	e3a03000 	mov	r3, #0
   17f94:	e5c53019 	strb	r3, [r5, #25]
   17f98:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   17f9c:	e3a03c0a 	mov	r3, #2560	; 0xa00
   17fa0:	e3a06c0e 	mov	r6, #3584	; 0xe00
   17fa4:	e59f402c 	ldr	r4, [pc, #44]	; 17fd8 <BusAccess::controlRelease(bool)+0x148>
   17fa8:	e3a01001 	mov	r1, #1
   17fac:	e5846028 	str	r6, [r4, #40]	; 0x28
   17fb0:	e3a00013 	mov	r0, #19
   17fb4:	e584301c 	str	r3, [r4, #28]
   17fb8:	ebfffdd0 	bl	17700 <digitalWrite>
   17fbc:	e3a00064 	mov	r0, #100	; 0x64
   17fc0:	ebfffc03 	bl	16fd4 <microsDelay>
   17fc4:	e5846028 	str	r6, [r4, #40]	; 0x28
   17fc8:	eafffff0 	b	17f90 <BusAccess::controlRelease(bool)+0x100>
   17fcc:	e5847040 	str	r7, [r4, #64]	; 0x40
   17fd0:	ebffc046 	bl	80f0 <lowlev_enable_fiq>
   17fd4:	eaffffe8 	b	17f7c <BusAccess::controlRelease(bool)+0xec>
   17fd8:	20200000 	.word	0x20200000
   17fdc:	00249249 	.word	0x00249249
   17fe0:	0005acd4 	.word	0x0005acd4

00017fe4 <BusAccess::controlRequestAndTake()>:
   17fe4:	e3a02040 	mov	r2, #64	; 0x40
   17fe8:	e92d4070 	push	{r4, r5, r6, lr}
   17fec:	e59f5068 	ldr	r5, [pc, #104]	; 1805c <BusAccess::controlRequestAndTake()+0x78>
   17ff0:	e3a01000 	mov	r1, #0
   17ff4:	e5953008 	ldr	r3, [r5, #8]
   17ff8:	e3a00013 	mov	r0, #19
   17ffc:	e20334ff 	and	r3, r3, #-16777216	; 0xff000000
   18000:	e5853008 	str	r3, [r5, #8]
   18004:	e585201c 	str	r2, [r5, #28]
   18008:	ebfffdbc 	bl	17700 <digitalWrite>
   1800c:	e3a040fa 	mov	r4, #250	; 0xfa
   18010:	ea000003 	b	18024 <BusAccess::controlRequestAndTake()+0x40>
   18014:	e3a00001 	mov	r0, #1
   18018:	ebfffbed 	bl	16fd4 <microsDelay>
   1801c:	e2544001 	subs	r4, r4, #1
   18020:	0a000002 	beq	18030 <BusAccess::controlRequestAndTake()+0x4c>
   18024:	e5953034 	ldr	r3, [r5, #52]	; 0x34
   18028:	e3130004 	tst	r3, #4
   1802c:	1afffff8 	bne	18014 <BusAccess::controlRequestAndTake()+0x30>
   18030:	e59f3024 	ldr	r3, [pc, #36]	; 1805c <BusAccess::controlRequestAndTake()+0x78>
   18034:	e5930034 	ldr	r0, [r3, #52]	; 0x34
   18038:	e2104004 	ands	r4, r0, #4
   1803c:	1a000002 	bne	1804c <BusAccess::controlRequestAndTake()+0x68>
   18040:	ebffff5d 	bl	17dbc <BusAccess::controlTake()>
   18044:	e1a00004 	mov	r0, r4
   18048:	e8bd8070 	pop	{r4, r5, r6, pc}
   1804c:	e3a00000 	mov	r0, #0
   18050:	ebffff8e 	bl	17e90 <BusAccess::controlRelease(bool)>
   18054:	e3a00002 	mov	r0, #2
   18058:	e8bd8070 	pop	{r4, r5, r6, pc}
   1805c:	20200000 	.word	0x20200000

00018060 <BusAccess::addrLowSet(unsigned long)>:
   18060:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   18064:	e3a07801 	mov	r7, #65536	; 0x10000
   18068:	e1a06000 	mov	r6, r0
   1806c:	e3a00014 	mov	r0, #20
   18070:	ebffc024 	bl	8108 <lowlev_cycleDelay>
   18074:	e59f9054 	ldr	r9, [pc, #84]	; 180d0 <BusAccess::addrLowSet(unsigned long)+0x70>
   18078:	e3a0ac0e 	mov	sl, #3584	; 0xe00
   1807c:	e3a03b02 	mov	r3, #2048	; 0x800
   18080:	e1a08007 	mov	r8, r7
   18084:	e1a05009 	mov	r5, r9
   18088:	e3a04000 	mov	r4, #0
   1808c:	e589a028 	str	sl, [r9, #40]	; 0x28
   18090:	e3a00014 	mov	r0, #20
   18094:	e589301c 	str	r3, [r9, #28]
   18098:	e6ef6076 	uxtb	r6, r6
   1809c:	ebffc019 	bl	8108 <lowlev_cycleDelay>
   180a0:	e2866001 	add	r6, r6, #1
   180a4:	e589a028 	str	sl, [r9, #40]	; 0x28
   180a8:	e3a00014 	mov	r0, #20
   180ac:	e585801c 	str	r8, [r5, #28]
   180b0:	ebffc014 	bl	8108 <lowlev_cycleDelay>
   180b4:	e2844001 	add	r4, r4, #1
   180b8:	e5857028 	str	r7, [r5, #40]	; 0x28
   180bc:	e3a00014 	mov	r0, #20
   180c0:	ebffc010 	bl	8108 <lowlev_cycleDelay>
   180c4:	e1540006 	cmp	r4, r6
   180c8:	1afffff6 	bne	180a8 <BusAccess::addrLowSet(unsigned long)+0x48>
   180cc:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   180d0:	20200000 	.word	0x20200000

000180d4 <BusAccess::addrLowInc()>:
   180d4:	e92d4070 	push	{r4, r5, r6, lr}
   180d8:	e3a05801 	mov	r5, #65536	; 0x10000
   180dc:	e59f4018 	ldr	r4, [pc, #24]	; 180fc <BusAccess::addrLowInc()+0x28>
   180e0:	e3a00014 	mov	r0, #20
   180e4:	e584501c 	str	r5, [r4, #28]
   180e8:	ebffc006 	bl	8108 <lowlev_cycleDelay>
   180ec:	e5845028 	str	r5, [r4, #40]	; 0x28
   180f0:	e3a00014 	mov	r0, #20
   180f4:	e8bd4070 	pop	{r4, r5, r6, lr}
   180f8:	eaffc002 	b	8108 <lowlev_cycleDelay>
   180fc:	20200000 	.word	0x20200000

00018100 <BusAccess::addrHighSet(unsigned long)>:
   18100:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   18104:	e1a05000 	mov	r5, r0
   18108:	e3a06009 	mov	r6, #9
   1810c:	e3a07c0e 	mov	r7, #3584	; 0xe00
   18110:	e59f404c 	ldr	r4, [pc, #76]	; 18164 <BusAccess::addrHighSet(unsigned long)+0x64>
   18114:	e3a08080 	mov	r8, #128	; 0x80
   18118:	e2153080 	ands	r3, r5, #128	; 0x80
   1811c:	e5847028 	str	r7, [r4, #40]	; 0x28
   18120:	e3a00014 	mov	r0, #20
   18124:	1584701c 	strne	r7, [r4, #28]
   18128:	0584301c 	streq	r3, [r4, #28]
   1812c:	ebffbff5 	bl	8108 <lowlev_cycleDelay>
   18130:	e584801c 	str	r8, [r4, #28]
   18134:	e3a00014 	mov	r0, #20
   18138:	ebffbff2 	bl	8108 <lowlev_cycleDelay>
   1813c:	e2566001 	subs	r6, r6, #1
   18140:	e1a05085 	lsl	r5, r5, #1
   18144:	e5848028 	str	r8, [r4, #40]	; 0x28
   18148:	1afffff1 	bne	18114 <BusAccess::addrHighSet(unsigned long)+0x14>
   1814c:	e3a00014 	mov	r0, #20
   18150:	ebffbfec 	bl	8108 <lowlev_cycleDelay>
   18154:	e3a02c0e 	mov	r2, #3584	; 0xe00
   18158:	e59f3004 	ldr	r3, [pc, #4]	; 18164 <BusAccess::addrHighSet(unsigned long)+0x64>
   1815c:	e5832028 	str	r2, [r3, #40]	; 0x28
   18160:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   18164:	20200000 	.word	0x20200000

00018168 <BusAccess::addrSet(unsigned int)>:
   18168:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1816c:	e1a09000 	mov	r9, r0
   18170:	e3a06009 	mov	r6, #9
   18174:	e3a07c0e 	mov	r7, #3584	; 0xe00
   18178:	e59f50a8 	ldr	r5, [pc, #168]	; 18228 <BusAccess::addrSet(unsigned int)+0xc0>
   1817c:	e1a04420 	lsr	r4, r0, #8
   18180:	e3a08080 	mov	r8, #128	; 0x80
   18184:	e2143080 	ands	r3, r4, #128	; 0x80
   18188:	e5857028 	str	r7, [r5, #40]	; 0x28
   1818c:	e3a00014 	mov	r0, #20
   18190:	1585701c 	strne	r7, [r5, #28]
   18194:	0585301c 	streq	r3, [r5, #28]
   18198:	ebffbfda 	bl	8108 <lowlev_cycleDelay>
   1819c:	e585801c 	str	r8, [r5, #28]
   181a0:	e3a00014 	mov	r0, #20
   181a4:	ebffbfd7 	bl	8108 <lowlev_cycleDelay>
   181a8:	e2566001 	subs	r6, r6, #1
   181ac:	e1a04084 	lsl	r4, r4, #1
   181b0:	e5858028 	str	r8, [r5, #40]	; 0x28
   181b4:	1afffff1 	bne	18180 <BusAccess::addrSet(unsigned int)+0x18>
   181b8:	e3a05c0e 	mov	r5, #3584	; 0xe00
   181bc:	e59f4064 	ldr	r4, [pc, #100]	; 18228 <BusAccess::addrSet(unsigned int)+0xc0>
   181c0:	e3a00014 	mov	r0, #20
   181c4:	ebffbfcf 	bl	8108 <lowlev_cycleDelay>
   181c8:	e5845028 	str	r5, [r4, #40]	; 0x28
   181cc:	e3a00014 	mov	r0, #20
   181d0:	ebffbfcc 	bl	8108 <lowlev_cycleDelay>
   181d4:	e3a03b02 	mov	r3, #2048	; 0x800
   181d8:	e3a06801 	mov	r6, #65536	; 0x10000
   181dc:	e5845028 	str	r5, [r4, #40]	; 0x28
   181e0:	e3a00014 	mov	r0, #20
   181e4:	e584301c 	str	r3, [r4, #28]
   181e8:	ebffbfc6 	bl	8108 <lowlev_cycleDelay>
   181ec:	e1a07006 	mov	r7, r6
   181f0:	e5845028 	str	r5, [r4, #40]	; 0x28
   181f4:	e3a05000 	mov	r5, #0
   181f8:	e6ef9079 	uxtb	r9, r9
   181fc:	e2899001 	add	r9, r9, #1
   18200:	e3a00014 	mov	r0, #20
   18204:	e584701c 	str	r7, [r4, #28]
   18208:	ebffbfbe 	bl	8108 <lowlev_cycleDelay>
   1820c:	e2855001 	add	r5, r5, #1
   18210:	e5846028 	str	r6, [r4, #40]	; 0x28
   18214:	e3a00014 	mov	r0, #20
   18218:	ebffbfba 	bl	8108 <lowlev_cycleDelay>
   1821c:	e1550009 	cmp	r5, r9
   18220:	1afffff6 	bne	18200 <BusAccess::addrSet(unsigned int)+0x98>
   18224:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   18228:	20200000 	.word	0x20200000

0001822c <BusAccess::byteWrite(unsigned long, int)>:
   1822c:	e1a00a00 	lsl	r0, r0, #20
   18230:	e1e02000 	mvn	r2, r0
   18234:	e59f3078 	ldr	r3, [pc, #120]	; 182b4 <BusAccess::byteWrite(unsigned long, int)+0x88>
   18238:	e20226ff 	and	r2, r2, #267386880	; 0xff00000
   1823c:	e20006ff 	and	r0, r0, #267386880	; 0xff00000
   18240:	e3510000 	cmp	r1, #0
   18244:	e92d4010 	push	{r4, lr}
   18248:	e583001c 	str	r0, [r3, #28]
   1824c:	e5832028 	str	r2, [r3, #40]	; 0x28
   18250:	0a00000d 	beq	1828c <BusAccess::byteWrite(unsigned long, int)+0x60>
   18254:	e3a02802 	mov	r2, #131072	; 0x20000
   18258:	e3a01c02 	mov	r1, #512	; 0x200
   1825c:	e59fc054 	ldr	ip, [pc, #84]	; 182b8 <BusAccess::byteWrite(unsigned long, int)+0x8c>
   18260:	e3a000fa 	mov	r0, #250	; 0xfa
   18264:	e583c028 	str	ip, [r3, #40]	; 0x28
   18268:	e583101c 	str	r1, [r3, #28]
   1826c:	e5832028 	str	r2, [r3, #40]	; 0x28
   18270:	ebffbfa4 	bl	8108 <lowlev_cycleDelay>
   18274:	e59f2040 	ldr	r2, [pc, #64]	; 182bc <BusAccess::byteWrite(unsigned long, int)+0x90>
   18278:	e3a01c0e 	mov	r1, #3584	; 0xe00
   1827c:	e59f3030 	ldr	r3, [pc, #48]	; 182b4 <BusAccess::byteWrite(unsigned long, int)+0x88>
   18280:	e583201c 	str	r2, [r3, #28]
   18284:	e5831028 	str	r1, [r3, #40]	; 0x28
   18288:	e8bd8010 	pop	{r4, pc}
   1828c:	e3a02802 	mov	r2, #131072	; 0x20000
   18290:	e3a01c02 	mov	r1, #512	; 0x200
   18294:	e59fc024 	ldr	ip, [pc, #36]	; 182c0 <BusAccess::byteWrite(unsigned long, int)+0x94>
   18298:	e3a000fa 	mov	r0, #250	; 0xfa
   1829c:	e583c028 	str	ip, [r3, #40]	; 0x28
   182a0:	e583101c 	str	r1, [r3, #28]
   182a4:	e5832028 	str	r2, [r3, #40]	; 0x28
   182a8:	ebffbf96 	bl	8108 <lowlev_cycleDelay>
   182ac:	e59f2010 	ldr	r2, [pc, #16]	; 182c4 <BusAccess::byteWrite(unsigned long, int)+0x98>
   182b0:	eafffff0 	b	18278 <BusAccess::byteWrite(unsigned long, int)+0x4c>
   182b4:	20200000 	.word	0x20200000
   182b8:	00000e42 	.word	0x00000e42
   182bc:	00020042 	.word	0x00020042
   182c0:	00000e41 	.word	0x00000e41
   182c4:	00020041 	.word	0x00020041

000182c8 <BusAccess::byteRead(int)>:
   182c8:	e3500000 	cmp	r0, #0
   182cc:	e92d4010 	push	{r4, lr}
   182d0:	e3a03c02 	mov	r3, #512	; 0x200
   182d4:	e59f4060 	ldr	r4, [pc, #96]	; 1833c <BusAccess::byteRead(int)+0x74>
   182d8:	1a00000d 	bne	18314 <BusAccess::byteRead(int)+0x4c>
   182dc:	e59f205c 	ldr	r2, [pc, #92]	; 18340 <BusAccess::byteRead(int)+0x78>
   182e0:	e3a00019 	mov	r0, #25
   182e4:	e5842028 	str	r2, [r4, #40]	; 0x28
   182e8:	e584301c 	str	r3, [r4, #28]
   182ec:	ebffbf85 	bl	8108 <lowlev_cycleDelay>
   182f0:	e5940034 	ldr	r0, [r4, #52]	; 0x34
   182f4:	e59f2048 	ldr	r2, [pc, #72]	; 18344 <BusAccess::byteRead(int)+0x7c>
   182f8:	e1a00a20 	lsr	r0, r0, #20
   182fc:	e6ef0070 	uxtb	r0, r0
   18300:	e3a01c0e 	mov	r1, #3584	; 0xe00
   18304:	e59f3030 	ldr	r3, [pc, #48]	; 1833c <BusAccess::byteRead(int)+0x74>
   18308:	e583201c 	str	r2, [r3, #28]
   1830c:	e5831028 	str	r1, [r3, #40]	; 0x28
   18310:	e8bd8010 	pop	{r4, pc}
   18314:	e59f202c 	ldr	r2, [pc, #44]	; 18348 <BusAccess::byteRead(int)+0x80>
   18318:	e3a00019 	mov	r0, #25
   1831c:	e5842028 	str	r2, [r4, #40]	; 0x28
   18320:	e584301c 	str	r3, [r4, #28]
   18324:	ebffbf77 	bl	8108 <lowlev_cycleDelay>
   18328:	e5940034 	ldr	r0, [r4, #52]	; 0x34
   1832c:	e59f2018 	ldr	r2, [pc, #24]	; 1834c <BusAccess::byteRead(int)+0x84>
   18330:	e1a00a20 	lsr	r0, r0, #20
   18334:	e6ef0070 	uxtb	r0, r0
   18338:	eafffff0 	b	18300 <BusAccess::byteRead(int)+0x38>
   1833c:	20200000 	.word	0x20200000
   18340:	00040e01 	.word	0x00040e01
   18344:	00040001 	.word	0x00040001
   18348:	00040e02 	.word	0x00040e02
   1834c:	00040002 	.word	0x00040002

00018350 <BusAccess::blockWrite(unsigned long, unsigned char const*, unsigned long, int, int)>:
   18350:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18354:	e3530000 	cmp	r3, #0
   18358:	e24dd00c 	sub	sp, sp, #12
   1835c:	e58d3004 	str	r3, [sp, #4]
   18360:	e1a05000 	mov	r5, r0
   18364:	e1a0a001 	mov	sl, r1
   18368:	e1a08002 	mov	r8, r2
   1836c:	0a000016 	beq	183cc <BusAccess::blockWrite(unsigned long, unsigned char const*, unsigned long, int, int)+0x7c>
   18370:	e3a02040 	mov	r2, #64	; 0x40
   18374:	e59f62d4 	ldr	r6, [pc, #724]	; 18650 <BusAccess::blockWrite(unsigned long, unsigned char const*, unsigned long, int, int)+0x300>
   18378:	e3a01000 	mov	r1, #0
   1837c:	e5963008 	ldr	r3, [r6, #8]
   18380:	e3a00013 	mov	r0, #19
   18384:	e20334ff 	and	r3, r3, #-16777216	; 0xff000000
   18388:	e5863008 	str	r3, [r6, #8]
   1838c:	e586201c 	str	r2, [r6, #28]
   18390:	ebfffcda 	bl	17700 <digitalWrite>
   18394:	e3a040fa 	mov	r4, #250	; 0xfa
   18398:	ea000003 	b	183ac <BusAccess::blockWrite(unsigned long, unsigned char const*, unsigned long, int, int)+0x5c>
   1839c:	e3a00001 	mov	r0, #1
   183a0:	ebfffb0b 	bl	16fd4 <microsDelay>
   183a4:	e2544001 	subs	r4, r4, #1
   183a8:	0a000002 	beq	183b8 <BusAccess::blockWrite(unsigned long, unsigned char const*, unsigned long, int, int)+0x68>
   183ac:	e5963034 	ldr	r3, [r6, #52]	; 0x34
   183b0:	e3130004 	tst	r3, #4
   183b4:	1afffff8 	bne	1839c <BusAccess::blockWrite(unsigned long, unsigned char const*, unsigned long, int, int)+0x4c>
   183b8:	e59f3290 	ldr	r3, [pc, #656]	; 18650 <BusAccess::blockWrite(unsigned long, unsigned char const*, unsigned long, int, int)+0x300>
   183bc:	e5933034 	ldr	r3, [r3, #52]	; 0x34
   183c0:	e3130004 	tst	r3, #4
   183c4:	1a00009c 	bne	1863c <BusAccess::blockWrite(unsigned long, unsigned char const*, unsigned long, int, int)+0x2ec>
   183c8:	ebfffe7b 	bl	17dbc <BusAccess::controlTake()>
   183cc:	e59f227c 	ldr	r2, [pc, #636]	; 18650 <BusAccess::blockWrite(unsigned long, unsigned char const*, unsigned long, int, int)+0x300>
   183d0:	e3a07009 	mov	r7, #9
   183d4:	e1a0b002 	mov	fp, r2
   183d8:	e3a06c0e 	mov	r6, #3584	; 0xe00
   183dc:	e5921008 	ldr	r1, [r2, #8]
   183e0:	e1a04425 	lsr	r4, r5, #8
   183e4:	e20114ff 	and	r1, r1, #-16777216	; 0xff000000
   183e8:	e5821008 	str	r1, [r2, #8]
   183ec:	e3a09080 	mov	r9, #128	; 0x80
   183f0:	e2143080 	ands	r3, r4, #128	; 0x80
   183f4:	13a00014 	movne	r0, #20
   183f8:	03a00014 	moveq	r0, #20
   183fc:	e58b6028 	str	r6, [fp, #40]	; 0x28
   18400:	158b601c 	strne	r6, [fp, #28]
   18404:	058b301c 	streq	r3, [fp, #28]
   18408:	ebffbf3e 	bl	8108 <lowlev_cycleDelay>
   1840c:	e58b901c 	str	r9, [fp, #28]
   18410:	e3a00014 	mov	r0, #20
   18414:	ebffbf3b 	bl	8108 <lowlev_cycleDelay>
   18418:	e2577001 	subs	r7, r7, #1
   1841c:	e1a04084 	lsl	r4, r4, #1
   18420:	e58b9028 	str	r9, [fp, #40]	; 0x28
   18424:	1afffff0 	bne	183ec <BusAccess::blockWrite(unsigned long, unsigned char const*, unsigned long, int, int)+0x9c>
   18428:	e3a0bc0e 	mov	fp, #3584	; 0xe00
   1842c:	e59f421c 	ldr	r4, [pc, #540]	; 18650 <BusAccess::blockWrite(unsigned long, unsigned char const*, unsigned long, int, int)+0x300>
   18430:	e3a00014 	mov	r0, #20
   18434:	ebffbf33 	bl	8108 <lowlev_cycleDelay>
   18438:	e584b028 	str	fp, [r4, #40]	; 0x28
   1843c:	e3a00014 	mov	r0, #20
   18440:	ebffbf30 	bl	8108 <lowlev_cycleDelay>
   18444:	e3a03b02 	mov	r3, #2048	; 0x800
   18448:	e3a09801 	mov	r9, #65536	; 0x10000
   1844c:	e584b028 	str	fp, [r4, #40]	; 0x28
   18450:	e3a00014 	mov	r0, #20
   18454:	e584301c 	str	r3, [r4, #28]
   18458:	ebffbf2a 	bl	8108 <lowlev_cycleDelay>
   1845c:	e3a07000 	mov	r7, #0
   18460:	e584b028 	str	fp, [r4, #40]	; 0x28
   18464:	e1a0b009 	mov	fp, r9
   18468:	e6ef6075 	uxtb	r6, r5
   1846c:	e2866001 	add	r6, r6, #1
   18470:	e3a00014 	mov	r0, #20
   18474:	e584b01c 	str	fp, [r4, #28]
   18478:	ebffbf22 	bl	8108 <lowlev_cycleDelay>
   1847c:	e2877001 	add	r7, r7, #1
   18480:	e5849028 	str	r9, [r4, #40]	; 0x28
   18484:	e3a00014 	mov	r0, #20
   18488:	ebffbf1e 	bl	8108 <lowlev_cycleDelay>
   1848c:	e1570006 	cmp	r7, r6
   18490:	1afffff6 	bne	18470 <BusAccess::blockWrite(unsigned long, unsigned char const*, unsigned long, int, int)+0x120>
   18494:	e5942008 	ldr	r2, [r4, #8]
   18498:	e59f31b4 	ldr	r3, [pc, #436]	; 18654 <BusAccess::blockWrite(unsigned long, unsigned char const*, unsigned long, int, int)+0x304>
   1849c:	e20224ff 	and	r2, r2, #-16777216	; 0xff000000
   184a0:	e1823003 	orr	r3, r2, r3
   184a4:	e3580000 	cmp	r8, #0
   184a8:	e5843008 	str	r3, [r4, #8]
   184ac:	0a000054 	beq	18604 <BusAccess::blockWrite(unsigned long, unsigned char const*, unsigned long, int, int)+0x2b4>
   184b0:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
   184b4:	e59f219c 	ldr	r2, [pc, #412]	; 18658 <BusAccess::blockWrite(unsigned long, unsigned char const*, unsigned long, int, int)+0x308>
   184b8:	e3530000 	cmp	r3, #0
   184bc:	e0853008 	add	r3, r5, r8
   184c0:	e59f9194 	ldr	r9, [pc, #404]	; 1865c <BusAccess::blockWrite(unsigned long, unsigned char const*, unsigned long, int, int)+0x30c>
   184c4:	e59fb184 	ldr	fp, [pc, #388]	; 18650 <BusAccess::blockWrite(unsigned long, unsigned char const*, unsigned long, int, int)+0x300>
   184c8:	01a09002 	moveq	r9, r2
   184cc:	e24a7001 	sub	r7, sl, #1
   184d0:	e58d3000 	str	r3, [sp]
   184d4:	ea000017 	b	18538 <BusAccess::blockWrite(unsigned long, unsigned char const*, unsigned long, int, int)+0x1e8>
   184d8:	e3a02c02 	mov	r2, #512	; 0x200
   184dc:	e3a03802 	mov	r3, #131072	; 0x20000
   184e0:	e59f1178 	ldr	r1, [pc, #376]	; 18660 <BusAccess::blockWrite(unsigned long, unsigned char const*, unsigned long, int, int)+0x310>
   184e4:	e3a06801 	mov	r6, #65536	; 0x10000
   184e8:	e3a04c0e 	mov	r4, #3584	; 0xe00
   184ec:	e58b1028 	str	r1, [fp, #40]	; 0x28
   184f0:	e3a000fa 	mov	r0, #250	; 0xfa
   184f4:	e58b201c 	str	r2, [fp, #28]
   184f8:	e58b3028 	str	r3, [fp, #40]	; 0x28
   184fc:	ebffbf01 	bl	8108 <lowlev_cycleDelay>
   18500:	e58b901c 	str	r9, [fp, #28]
   18504:	e3a00014 	mov	r0, #20
   18508:	e58b4028 	str	r4, [fp, #40]	; 0x28
   1850c:	e58b601c 	str	r6, [fp, #28]
   18510:	ebffbefc 	bl	8108 <lowlev_cycleDelay>
   18514:	e2855001 	add	r5, r5, #1
   18518:	e58b6028 	str	r6, [fp, #40]	; 0x28
   1851c:	e3a00014 	mov	r0, #20
   18520:	ebffbef8 	bl	8108 <lowlev_cycleDelay>
   18524:	e31500ff 	tst	r5, #255	; 0xff
   18528:	0a00000e 	beq	18568 <BusAccess::blockWrite(unsigned long, unsigned char const*, unsigned long, int, int)+0x218>
   1852c:	e59d3000 	ldr	r3, [sp]
   18530:	e1550003 	cmp	r5, r3
   18534:	0a000032 	beq	18604 <BusAccess::blockWrite(unsigned long, unsigned char const*, unsigned long, int, int)+0x2b4>
   18538:	e5f73001 	ldrb	r3, [r7, #1]!
   1853c:	e59d2030 	ldr	r2, [sp, #48]	; 0x30
   18540:	e1a03a03 	lsl	r3, r3, #20
   18544:	e3520000 	cmp	r2, #0
   18548:	e22326ff 	eor	r2, r3, #267386880	; 0xff00000
   1854c:	e58b301c 	str	r3, [fp, #28]
   18550:	e58b2028 	str	r2, [fp, #40]	; 0x28
   18554:	1affffdf 	bne	184d8 <BusAccess::blockWrite(unsigned long, unsigned char const*, unsigned long, int, int)+0x188>
   18558:	e3a02c02 	mov	r2, #512	; 0x200
   1855c:	e3a03802 	mov	r3, #131072	; 0x20000
   18560:	e59f10fc 	ldr	r1, [pc, #252]	; 18664 <BusAccess::blockWrite(unsigned long, unsigned char const*, unsigned long, int, int)+0x314>
   18564:	eaffffde 	b	184e4 <BusAccess::blockWrite(unsigned long, unsigned char const*, unsigned long, int, int)+0x194>
   18568:	e3a0a009 	mov	sl, #9
   1856c:	e1a08425 	lsr	r8, r5, #8
   18570:	e3a06080 	mov	r6, #128	; 0x80
   18574:	e2183080 	ands	r3, r8, #128	; 0x80
   18578:	13a00014 	movne	r0, #20
   1857c:	03a00014 	moveq	r0, #20
   18580:	e58b4028 	str	r4, [fp, #40]	; 0x28
   18584:	158b401c 	strne	r4, [fp, #28]
   18588:	058b301c 	streq	r3, [fp, #28]
   1858c:	ebffbedd 	bl	8108 <lowlev_cycleDelay>
   18590:	e58b601c 	str	r6, [fp, #28]
   18594:	e3a00014 	mov	r0, #20
   18598:	ebffbeda 	bl	8108 <lowlev_cycleDelay>
   1859c:	e25aa001 	subs	sl, sl, #1
   185a0:	e1a08088 	lsl	r8, r8, #1
   185a4:	e58b6028 	str	r6, [fp, #40]	; 0x28
   185a8:	1afffff0 	bne	18570 <BusAccess::blockWrite(unsigned long, unsigned char const*, unsigned long, int, int)+0x220>
   185ac:	e3a04c0e 	mov	r4, #3584	; 0xe00
   185b0:	e3a00014 	mov	r0, #20
   185b4:	ebffbed3 	bl	8108 <lowlev_cycleDelay>
   185b8:	e3a00014 	mov	r0, #20
   185bc:	e58b4028 	str	r4, [fp, #40]	; 0x28
   185c0:	ebffbed0 	bl	8108 <lowlev_cycleDelay>
   185c4:	e3a03b02 	mov	r3, #2048	; 0x800
   185c8:	e3a06801 	mov	r6, #65536	; 0x10000
   185cc:	e58b4028 	str	r4, [fp, #40]	; 0x28
   185d0:	e3a00014 	mov	r0, #20
   185d4:	e58b301c 	str	r3, [fp, #28]
   185d8:	ebffbeca 	bl	8108 <lowlev_cycleDelay>
   185dc:	e58b4028 	str	r4, [fp, #40]	; 0x28
   185e0:	e3a00014 	mov	r0, #20
   185e4:	e58b601c 	str	r6, [fp, #28]
   185e8:	ebffbec6 	bl	8108 <lowlev_cycleDelay>
   185ec:	e58b6028 	str	r6, [fp, #40]	; 0x28
   185f0:	e3a00014 	mov	r0, #20
   185f4:	ebffbec3 	bl	8108 <lowlev_cycleDelay>
   185f8:	e59d3000 	ldr	r3, [sp]
   185fc:	e1550003 	cmp	r5, r3
   18600:	1affffcc 	bne	18538 <BusAccess::blockWrite(unsigned long, unsigned char const*, unsigned long, int, int)+0x1e8>
   18604:	e59f2044 	ldr	r2, [pc, #68]	; 18650 <BusAccess::blockWrite(unsigned long, unsigned char const*, unsigned long, int, int)+0x300>
   18608:	e59d0004 	ldr	r0, [sp, #4]
   1860c:	e5923008 	ldr	r3, [r2, #8]
   18610:	e3500000 	cmp	r0, #0
   18614:	e20334ff 	and	r3, r3, #-16777216	; 0xff000000
   18618:	e5823008 	str	r3, [r2, #8]
   1861c:	1a000001 	bne	18628 <BusAccess::blockWrite(unsigned long, unsigned char const*, unsigned long, int, int)+0x2d8>
   18620:	e28dd00c 	add	sp, sp, #12
   18624:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18628:	e3a00000 	mov	r0, #0
   1862c:	ebfffe17 	bl	17e90 <BusAccess::controlRelease(bool)>
   18630:	e3a00000 	mov	r0, #0
   18634:	e28dd00c 	add	sp, sp, #12
   18638:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1863c:	e3a00000 	mov	r0, #0
   18640:	ebfffe12 	bl	17e90 <BusAccess::controlRelease(bool)>
   18644:	e3a00002 	mov	r0, #2
   18648:	e28dd00c 	add	sp, sp, #12
   1864c:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18650:	20200000 	.word	0x20200000
   18654:	00249249 	.word	0x00249249
   18658:	00020041 	.word	0x00020041
   1865c:	00020042 	.word	0x00020042
   18660:	00000e42 	.word	0x00000e42
   18664:	00000e41 	.word	0x00000e41

00018668 <BusAccess::blockRead(unsigned long, unsigned char*, unsigned long, int, int)>:
   18668:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1866c:	e3530000 	cmp	r3, #0
   18670:	e24dd00c 	sub	sp, sp, #12
   18674:	e58d3004 	str	r3, [sp, #4]
   18678:	e1a08000 	mov	r8, r0
   1867c:	e1a0b001 	mov	fp, r1
   18680:	e1a06002 	mov	r6, r2
   18684:	0a000016 	beq	186e4 <BusAccess::blockRead(unsigned long, unsigned char*, unsigned long, int, int)+0x7c>
   18688:	e3a02040 	mov	r2, #64	; 0x40
   1868c:	e59f52b0 	ldr	r5, [pc, #688]	; 18944 <BusAccess::blockRead(unsigned long, unsigned char*, unsigned long, int, int)+0x2dc>
   18690:	e3a01000 	mov	r1, #0
   18694:	e5953008 	ldr	r3, [r5, #8]
   18698:	e3a00013 	mov	r0, #19
   1869c:	e20334ff 	and	r3, r3, #-16777216	; 0xff000000
   186a0:	e5853008 	str	r3, [r5, #8]
   186a4:	e585201c 	str	r2, [r5, #28]
   186a8:	ebfffc14 	bl	17700 <digitalWrite>
   186ac:	e3a040fa 	mov	r4, #250	; 0xfa
   186b0:	ea000003 	b	186c4 <BusAccess::blockRead(unsigned long, unsigned char*, unsigned long, int, int)+0x5c>
   186b4:	e3a00001 	mov	r0, #1
   186b8:	ebfffa45 	bl	16fd4 <microsDelay>
   186bc:	e2544001 	subs	r4, r4, #1
   186c0:	0a000002 	beq	186d0 <BusAccess::blockRead(unsigned long, unsigned char*, unsigned long, int, int)+0x68>
   186c4:	e5953034 	ldr	r3, [r5, #52]	; 0x34
   186c8:	e3130004 	tst	r3, #4
   186cc:	1afffff8 	bne	186b4 <BusAccess::blockRead(unsigned long, unsigned char*, unsigned long, int, int)+0x4c>
   186d0:	e59f326c 	ldr	r3, [pc, #620]	; 18944 <BusAccess::blockRead(unsigned long, unsigned char*, unsigned long, int, int)+0x2dc>
   186d4:	e5933034 	ldr	r3, [r3, #52]	; 0x34
   186d8:	e3130004 	tst	r3, #4
   186dc:	1a000093 	bne	18930 <BusAccess::blockRead(unsigned long, unsigned char*, unsigned long, int, int)+0x2c8>
   186e0:	ebfffdb5 	bl	17dbc <BusAccess::controlTake()>
   186e4:	e59f2258 	ldr	r2, [pc, #600]	; 18944 <BusAccess::blockRead(unsigned long, unsigned char*, unsigned long, int, int)+0x2dc>
   186e8:	e3a09009 	mov	r9, #9
   186ec:	e1a0a002 	mov	sl, r2
   186f0:	e3a05c0e 	mov	r5, #3584	; 0xe00
   186f4:	e5921008 	ldr	r1, [r2, #8]
   186f8:	e1a04428 	lsr	r4, r8, #8
   186fc:	e20114ff 	and	r1, r1, #-16777216	; 0xff000000
   18700:	e5821008 	str	r1, [r2, #8]
   18704:	e3a07080 	mov	r7, #128	; 0x80
   18708:	e2143080 	ands	r3, r4, #128	; 0x80
   1870c:	13a00014 	movne	r0, #20
   18710:	03a00014 	moveq	r0, #20
   18714:	e58a5028 	str	r5, [sl, #40]	; 0x28
   18718:	158a501c 	strne	r5, [sl, #28]
   1871c:	058a301c 	streq	r3, [sl, #28]
   18720:	ebffbe78 	bl	8108 <lowlev_cycleDelay>
   18724:	e58a701c 	str	r7, [sl, #28]
   18728:	e3a00014 	mov	r0, #20
   1872c:	ebffbe75 	bl	8108 <lowlev_cycleDelay>
   18730:	e2599001 	subs	r9, r9, #1
   18734:	e1a04084 	lsl	r4, r4, #1
   18738:	e58a7028 	str	r7, [sl, #40]	; 0x28
   1873c:	1afffff0 	bne	18704 <BusAccess::blockRead(unsigned long, unsigned char*, unsigned long, int, int)+0x9c>
   18740:	e3a0ac0e 	mov	sl, #3584	; 0xe00
   18744:	e59f41f8 	ldr	r4, [pc, #504]	; 18944 <BusAccess::blockRead(unsigned long, unsigned char*, unsigned long, int, int)+0x2dc>
   18748:	e3a00014 	mov	r0, #20
   1874c:	ebffbe6d 	bl	8108 <lowlev_cycleDelay>
   18750:	e584a028 	str	sl, [r4, #40]	; 0x28
   18754:	e3a00014 	mov	r0, #20
   18758:	ebffbe6a 	bl	8108 <lowlev_cycleDelay>
   1875c:	e3a03b02 	mov	r3, #2048	; 0x800
   18760:	e3a07801 	mov	r7, #65536	; 0x10000
   18764:	e584a028 	str	sl, [r4, #40]	; 0x28
   18768:	e3a00014 	mov	r0, #20
   1876c:	e584301c 	str	r3, [r4, #28]
   18770:	ebffbe64 	bl	8108 <lowlev_cycleDelay>
   18774:	e3a09000 	mov	r9, #0
   18778:	e584a028 	str	sl, [r4, #40]	; 0x28
   1877c:	e1a0a007 	mov	sl, r7
   18780:	e6ef5078 	uxtb	r5, r8
   18784:	e2855001 	add	r5, r5, #1
   18788:	e3a00014 	mov	r0, #20
   1878c:	e584a01c 	str	sl, [r4, #28]
   18790:	ebffbe5c 	bl	8108 <lowlev_cycleDelay>
   18794:	e2899001 	add	r9, r9, #1
   18798:	e5847028 	str	r7, [r4, #40]	; 0x28
   1879c:	e3a00014 	mov	r0, #20
   187a0:	ebffbe58 	bl	8108 <lowlev_cycleDelay>
   187a4:	e1590005 	cmp	r9, r5
   187a8:	1afffff6 	bne	18788 <BusAccess::blockRead(unsigned long, unsigned char*, unsigned long, int, int)+0x120>
   187ac:	e3a03c02 	mov	r3, #512	; 0x200
   187b0:	e3560000 	cmp	r6, #0
   187b4:	e584301c 	str	r3, [r4, #28]
   187b8:	0a000050 	beq	18900 <BusAccess::blockRead(unsigned long, unsigned char*, unsigned long, int, int)+0x298>
   187bc:	e59d2030 	ldr	r2, [sp, #48]	; 0x30
   187c0:	e59f3180 	ldr	r3, [pc, #384]	; 18948 <BusAccess::blockRead(unsigned long, unsigned char*, unsigned long, int, int)+0x2e0>
   187c4:	e3520000 	cmp	r2, #0
   187c8:	e59fa17c 	ldr	sl, [pc, #380]	; 1894c <BusAccess::blockRead(unsigned long, unsigned char*, unsigned long, int, int)+0x2e4>
   187cc:	01a0a003 	moveq	sl, r3
   187d0:	e08b3006 	add	r3, fp, r6
   187d4:	e1a0500b 	mov	r5, fp
   187d8:	e59f4164 	ldr	r4, [pc, #356]	; 18944 <BusAccess::blockRead(unsigned long, unsigned char*, unsigned long, int, int)+0x2dc>
   187dc:	e58d3000 	str	r3, [sp]
   187e0:	e048800b 	sub	r8, r8, fp
   187e4:	ea000012 	b	18834 <BusAccess::blockRead(unsigned long, unsigned char*, unsigned long, int, int)+0x1cc>
   187e8:	e59f3160 	ldr	r3, [pc, #352]	; 18950 <BusAccess::blockRead(unsigned long, unsigned char*, unsigned long, int, int)+0x2e8>
   187ec:	e3a00019 	mov	r0, #25
   187f0:	e5843028 	str	r3, [r4, #40]	; 0x28
   187f4:	ebffbe43 	bl	8108 <lowlev_cycleDelay>
   187f8:	e5943034 	ldr	r3, [r4, #52]	; 0x34
   187fc:	e1a03a23 	lsr	r3, r3, #20
   18800:	e5c53000 	strb	r3, [r5]
   18804:	e584a01c 	str	sl, [r4, #28]
   18808:	e3a00014 	mov	r0, #20
   1880c:	ebffbe3d 	bl	8108 <lowlev_cycleDelay>
   18810:	e3a02801 	mov	r2, #65536	; 0x10000
   18814:	e2855001 	add	r5, r5, #1
   18818:	e0853008 	add	r3, r5, r8
   1881c:	e31300ff 	tst	r3, #255	; 0xff
   18820:	e5842028 	str	r2, [r4, #40]	; 0x28
   18824:	0a00000d 	beq	18860 <BusAccess::blockRead(unsigned long, unsigned char*, unsigned long, int, int)+0x1f8>
   18828:	e59d3000 	ldr	r3, [sp]
   1882c:	e1550003 	cmp	r5, r3
   18830:	0a000032 	beq	18900 <BusAccess::blockRead(unsigned long, unsigned char*, unsigned long, int, int)+0x298>
   18834:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
   18838:	e3530000 	cmp	r3, #0
   1883c:	1affffe9 	bne	187e8 <BusAccess::blockRead(unsigned long, unsigned char*, unsigned long, int, int)+0x180>
   18840:	e59f310c 	ldr	r3, [pc, #268]	; 18954 <BusAccess::blockRead(unsigned long, unsigned char*, unsigned long, int, int)+0x2ec>
   18844:	e3a00019 	mov	r0, #25
   18848:	e5843028 	str	r3, [r4, #40]	; 0x28
   1884c:	ebffbe2d 	bl	8108 <lowlev_cycleDelay>
   18850:	e5943034 	ldr	r3, [r4, #52]	; 0x34
   18854:	e1a03a23 	lsr	r3, r3, #20
   18858:	e5c53000 	strb	r3, [r5]
   1885c:	eaffffe8 	b	18804 <BusAccess::blockRead(unsigned long, unsigned char*, unsigned long, int, int)+0x19c>
   18860:	e3a0b009 	mov	fp, #9
   18864:	e3a06c0e 	mov	r6, #3584	; 0xe00
   18868:	e1a09423 	lsr	r9, r3, #8
   1886c:	e3a07080 	mov	r7, #128	; 0x80
   18870:	e2193080 	ands	r3, r9, #128	; 0x80
   18874:	13a00014 	movne	r0, #20
   18878:	03a00014 	moveq	r0, #20
   1887c:	e5846028 	str	r6, [r4, #40]	; 0x28
   18880:	1584601c 	strne	r6, [r4, #28]
   18884:	0584301c 	streq	r3, [r4, #28]
   18888:	ebffbe1e 	bl	8108 <lowlev_cycleDelay>
   1888c:	e584701c 	str	r7, [r4, #28]
   18890:	e3a00014 	mov	r0, #20
   18894:	ebffbe1b 	bl	8108 <lowlev_cycleDelay>
   18898:	e25bb001 	subs	fp, fp, #1
   1889c:	e1a09089 	lsl	r9, r9, #1
   188a0:	e5847028 	str	r7, [r4, #40]	; 0x28
   188a4:	1afffff0 	bne	1886c <BusAccess::blockRead(unsigned long, unsigned char*, unsigned long, int, int)+0x204>
   188a8:	e3a06c0e 	mov	r6, #3584	; 0xe00
   188ac:	e3a00014 	mov	r0, #20
   188b0:	ebffbe14 	bl	8108 <lowlev_cycleDelay>
   188b4:	e3a00014 	mov	r0, #20
   188b8:	e5846028 	str	r6, [r4, #40]	; 0x28
   188bc:	ebffbe11 	bl	8108 <lowlev_cycleDelay>
   188c0:	e3a03b02 	mov	r3, #2048	; 0x800
   188c4:	e3a07801 	mov	r7, #65536	; 0x10000
   188c8:	e5846028 	str	r6, [r4, #40]	; 0x28
   188cc:	e3a00014 	mov	r0, #20
   188d0:	e584301c 	str	r3, [r4, #28]
   188d4:	ebffbe0b 	bl	8108 <lowlev_cycleDelay>
   188d8:	e5846028 	str	r6, [r4, #40]	; 0x28
   188dc:	e3a00014 	mov	r0, #20
   188e0:	e584701c 	str	r7, [r4, #28]
   188e4:	ebffbe07 	bl	8108 <lowlev_cycleDelay>
   188e8:	e5847028 	str	r7, [r4, #40]	; 0x28
   188ec:	e3a00014 	mov	r0, #20
   188f0:	ebffbe04 	bl	8108 <lowlev_cycleDelay>
   188f4:	e59d3000 	ldr	r3, [sp]
   188f8:	e1550003 	cmp	r5, r3
   188fc:	1affffcc 	bne	18834 <BusAccess::blockRead(unsigned long, unsigned char*, unsigned long, int, int)+0x1cc>
   18900:	e3a02c0e 	mov	r2, #3584	; 0xe00
   18904:	e59d1004 	ldr	r1, [sp, #4]
   18908:	e59f3034 	ldr	r3, [pc, #52]	; 18944 <BusAccess::blockRead(unsigned long, unsigned char*, unsigned long, int, int)+0x2dc>
   1890c:	e3510000 	cmp	r1, #0
   18910:	e5832028 	str	r2, [r3, #40]	; 0x28
   18914:	1a000002 	bne	18924 <BusAccess::blockRead(unsigned long, unsigned char*, unsigned long, int, int)+0x2bc>
   18918:	e3a00000 	mov	r0, #0
   1891c:	e28dd00c 	add	sp, sp, #12
   18920:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18924:	e3a00000 	mov	r0, #0
   18928:	ebfffd58 	bl	17e90 <BusAccess::controlRelease(bool)>
   1892c:	eafffff9 	b	18918 <BusAccess::blockRead(unsigned long, unsigned char*, unsigned long, int, int)+0x2b0>
   18930:	e3a00000 	mov	r0, #0
   18934:	ebfffd55 	bl	17e90 <BusAccess::controlRelease(bool)>
   18938:	e3a00002 	mov	r0, #2
   1893c:	e28dd00c 	add	sp, sp, #12
   18940:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18944:	20200000 	.word	0x20200000
   18948:	00050001 	.word	0x00050001
   1894c:	00050002 	.word	0x00050002
   18950:	00040002 	.word	0x00040002
   18954:	00040001 	.word	0x00040001

00018958 <BusAccess::grabMemoryAndReleaseBusRq(unsigned char*, unsigned long)>:
   18958:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1895c:	e59f926c 	ldr	r9, [pc, #620]	; 18bd0 <BusAccess::grabMemoryAndReleaseBusRq(unsigned char*, unsigned long)+0x278>
   18960:	e24dd014 	sub	sp, sp, #20
   18964:	e5d93019 	ldrb	r3, [r9, #25]
   18968:	e3530000 	cmp	r3, #0
   1896c:	1a000001 	bne	18978 <BusAccess::grabMemoryAndReleaseBusRq(unsigned char*, unsigned long)+0x20>
   18970:	e28dd014 	add	sp, sp, #20
   18974:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18978:	e3a06c0e 	mov	r6, #3584	; 0xe00
   1897c:	e3a02a02 	mov	r2, #8192	; 0x2000
   18980:	e1a08000 	mov	r8, r0
   18984:	e1a0a006 	mov	sl, r6
   18988:	e3a0b009 	mov	fp, #9
   1898c:	e59f3240 	ldr	r3, [pc, #576]	; 18bd4 <BusAccess::grabMemoryAndReleaseBusRq(unsigned char*, unsigned long)+0x27c>
   18990:	e1a07001 	mov	r7, r1
   18994:	e5832028 	str	r2, [r3, #40]	; 0x28
   18998:	e5932058 	ldr	r2, [r3, #88]	; 0x58
   1899c:	e5991010 	ldr	r1, [r9, #16]
   189a0:	e3c22020 	bic	r2, r2, #32
   189a4:	e5832058 	str	r2, [r3, #88]	; 0x58
   189a8:	e5932008 	ldr	r2, [r3, #8]
   189ac:	e1a05003 	mov	r5, r3
   189b0:	e20224ff 	and	r2, r2, #-16777216	; 0xff000000
   189b4:	e5832008 	str	r2, [r3, #8]
   189b8:	e3c13a02 	bic	r3, r1, #8192	; 0x2000
   189bc:	e5893010 	str	r3, [r9, #16]
   189c0:	e2013a02 	and	r3, r1, #8192	; 0x2000
   189c4:	e58d300c 	str	r3, [sp, #12]
   189c8:	e3a03000 	mov	r3, #0
   189cc:	e3a04080 	mov	r4, #128	; 0x80
   189d0:	e585a028 	str	sl, [r5, #40]	; 0x28
   189d4:	e3a00014 	mov	r0, #20
   189d8:	e585301c 	str	r3, [r5, #28]
   189dc:	ebffbdc9 	bl	8108 <lowlev_cycleDelay>
   189e0:	e585401c 	str	r4, [r5, #28]
   189e4:	e3a00014 	mov	r0, #20
   189e8:	ebffbdc6 	bl	8108 <lowlev_cycleDelay>
   189ec:	e25bb001 	subs	fp, fp, #1
   189f0:	e5854028 	str	r4, [r5, #40]	; 0x28
   189f4:	1afffff3 	bne	189c8 <BusAccess::grabMemoryAndReleaseBusRq(unsigned char*, unsigned long)+0x70>
   189f8:	e3a00014 	mov	r0, #20
   189fc:	ebffbdc1 	bl	8108 <lowlev_cycleDelay>
   18a00:	e3a00014 	mov	r0, #20
   18a04:	e5856028 	str	r6, [r5, #40]	; 0x28
   18a08:	ebffbdbe 	bl	8108 <lowlev_cycleDelay>
   18a0c:	e3a03b02 	mov	r3, #2048	; 0x800
   18a10:	e3a0b801 	mov	fp, #65536	; 0x10000
   18a14:	e5856028 	str	r6, [r5, #40]	; 0x28
   18a18:	e3a00014 	mov	r0, #20
   18a1c:	e585301c 	str	r3, [r5, #28]
   18a20:	ebffbdb8 	bl	8108 <lowlev_cycleDelay>
   18a24:	e5856028 	str	r6, [r5, #40]	; 0x28
   18a28:	e3a00014 	mov	r0, #20
   18a2c:	e585b01c 	str	fp, [r5, #28]
   18a30:	ebffbdb4 	bl	8108 <lowlev_cycleDelay>
   18a34:	e585b028 	str	fp, [r5, #40]	; 0x28
   18a38:	e3a00014 	mov	r0, #20
   18a3c:	ebffbdb1 	bl	8108 <lowlev_cycleDelay>
   18a40:	e3a03c02 	mov	r3, #512	; 0x200
   18a44:	e3570000 	cmp	r7, #0
   18a48:	e585301c 	str	r3, [r5, #28]
   18a4c:	0a00004a 	beq	18b7c <BusAccess::grabMemoryAndReleaseBusRq(unsigned char*, unsigned long)+0x224>
   18a50:	e1a06008 	mov	r6, r8
   18a54:	e59fa17c 	ldr	sl, [pc, #380]	; 18bd8 <BusAccess::grabMemoryAndReleaseBusRq(unsigned char*, unsigned long)+0x280>
   18a58:	e3a00019 	mov	r0, #25
   18a5c:	e585a028 	str	sl, [r5, #40]	; 0x28
   18a60:	ebffbda8 	bl	8108 <lowlev_cycleDelay>
   18a64:	e5953034 	ldr	r3, [r5, #52]	; 0x34
   18a68:	e59f216c 	ldr	r2, [pc, #364]	; 18bdc <BusAccess::grabMemoryAndReleaseBusRq(unsigned char*, unsigned long)+0x284>
   18a6c:	e1a03a23 	lsr	r3, r3, #20
   18a70:	e4c63001 	strb	r3, [r6], #1
   18a74:	e3a00014 	mov	r0, #20
   18a78:	e585201c 	str	r2, [r5, #28]
   18a7c:	e0883007 	add	r3, r8, r7
   18a80:	e59f414c 	ldr	r4, [pc, #332]	; 18bd4 <BusAccess::grabMemoryAndReleaseBusRq(unsigned char*, unsigned long)+0x27c>
   18a84:	e98d0408 	stmib	sp, {r3, sl}
   18a88:	ebffbd9e 	bl	8108 <lowlev_cycleDelay>
   18a8c:	e585b028 	str	fp, [r5, #40]	; 0x28
   18a90:	e59d3004 	ldr	r3, [sp, #4]
   18a94:	e1530006 	cmp	r3, r6
   18a98:	0a000037 	beq	18b7c <BusAccess::grabMemoryAndReleaseBusRq(unsigned char*, unsigned long)+0x224>
   18a9c:	e59d3008 	ldr	r3, [sp, #8]
   18aa0:	e3a00019 	mov	r0, #25
   18aa4:	e5843028 	str	r3, [r4, #40]	; 0x28
   18aa8:	ebffbd96 	bl	8108 <lowlev_cycleDelay>
   18aac:	e5943034 	ldr	r3, [r4, #52]	; 0x34
   18ab0:	e59f2124 	ldr	r2, [pc, #292]	; 18bdc <BusAccess::grabMemoryAndReleaseBusRq(unsigned char*, unsigned long)+0x284>
   18ab4:	e1a03a23 	lsr	r3, r3, #20
   18ab8:	e4c63001 	strb	r3, [r6], #1
   18abc:	e3a00014 	mov	r0, #20
   18ac0:	e584201c 	str	r2, [r4, #28]
   18ac4:	ebffbd8f 	bl	8108 <lowlev_cycleDelay>
   18ac8:	e3a02801 	mov	r2, #65536	; 0x10000
   18acc:	e0463008 	sub	r3, r6, r8
   18ad0:	e31300ff 	tst	r3, #255	; 0xff
   18ad4:	e5842028 	str	r2, [r4, #40]	; 0x28
   18ad8:	1affffec 	bne	18a90 <BusAccess::grabMemoryAndReleaseBusRq(unsigned char*, unsigned long)+0x138>
   18adc:	e3a07009 	mov	r7, #9
   18ae0:	e3a05c0e 	mov	r5, #3584	; 0xe00
   18ae4:	e1a0a423 	lsr	sl, r3, #8
   18ae8:	e3a0b080 	mov	fp, #128	; 0x80
   18aec:	e21a1080 	ands	r1, sl, #128	; 0x80
   18af0:	13a00014 	movne	r0, #20
   18af4:	03a00014 	moveq	r0, #20
   18af8:	e5845028 	str	r5, [r4, #40]	; 0x28
   18afc:	1584501c 	strne	r5, [r4, #28]
   18b00:	0584101c 	streq	r1, [r4, #28]
   18b04:	ebffbd7f 	bl	8108 <lowlev_cycleDelay>
   18b08:	e584b01c 	str	fp, [r4, #28]
   18b0c:	e3a00014 	mov	r0, #20
   18b10:	ebffbd7c 	bl	8108 <lowlev_cycleDelay>
   18b14:	e2577001 	subs	r7, r7, #1
   18b18:	e1a0a08a 	lsl	sl, sl, #1
   18b1c:	e584b028 	str	fp, [r4, #40]	; 0x28
   18b20:	1afffff0 	bne	18ae8 <BusAccess::grabMemoryAndReleaseBusRq(unsigned char*, unsigned long)+0x190>
   18b24:	e3a05c0e 	mov	r5, #3584	; 0xe00
   18b28:	e3a00014 	mov	r0, #20
   18b2c:	ebffbd75 	bl	8108 <lowlev_cycleDelay>
   18b30:	e3a00014 	mov	r0, #20
   18b34:	e5845028 	str	r5, [r4, #40]	; 0x28
   18b38:	ebffbd72 	bl	8108 <lowlev_cycleDelay>
   18b3c:	e3a03b02 	mov	r3, #2048	; 0x800
   18b40:	e3a0b801 	mov	fp, #65536	; 0x10000
   18b44:	e5845028 	str	r5, [r4, #40]	; 0x28
   18b48:	e3a00014 	mov	r0, #20
   18b4c:	e584301c 	str	r3, [r4, #28]
   18b50:	ebffbd6c 	bl	8108 <lowlev_cycleDelay>
   18b54:	e5845028 	str	r5, [r4, #40]	; 0x28
   18b58:	e3a00014 	mov	r0, #20
   18b5c:	e584b01c 	str	fp, [r4, #28]
   18b60:	ebffbd68 	bl	8108 <lowlev_cycleDelay>
   18b64:	e584b028 	str	fp, [r4, #40]	; 0x28
   18b68:	e3a00014 	mov	r0, #20
   18b6c:	ebffbd65 	bl	8108 <lowlev_cycleDelay>
   18b70:	e59d3004 	ldr	r3, [sp, #4]
   18b74:	e1530006 	cmp	r3, r6
   18b78:	1affffc7 	bne	18a9c <BusAccess::grabMemoryAndReleaseBusRq(unsigned char*, unsigned long)+0x144>
   18b7c:	e59d100c 	ldr	r1, [sp, #12]
   18b80:	e3a02c0e 	mov	r2, #3584	; 0xe00
   18b84:	e3510000 	cmp	r1, #0
   18b88:	e3a01a02 	mov	r1, #8192	; 0x2000
   18b8c:	e3a00000 	mov	r0, #0
   18b90:	e59f303c 	ldr	r3, [pc, #60]	; 18bd4 <BusAccess::grabMemoryAndReleaseBusRq(unsigned char*, unsigned long)+0x27c>
   18b94:	e5832028 	str	r2, [r3, #40]	; 0x28
   18b98:	e5992010 	ldr	r2, [r9, #16]
   18b9c:	1583101c 	strne	r1, [r3, #28]
   18ba0:	05831028 	streq	r1, [r3, #40]	; 0x28
   18ba4:	15931058 	ldrne	r1, [r3, #88]	; 0x58
   18ba8:	05931058 	ldreq	r1, [r3, #88]	; 0x58
   18bac:	13822a02 	orrne	r2, r2, #8192	; 0x2000
   18bb0:	13811020 	orrne	r1, r1, #32
   18bb4:	03c22a02 	biceq	r2, r2, #8192	; 0x2000
   18bb8:	03c11020 	biceq	r1, r1, #32
   18bbc:	e5892010 	str	r2, [r9, #16]
   18bc0:	e5831058 	str	r1, [r3, #88]	; 0x58
   18bc4:	e28dd014 	add	sp, sp, #20
   18bc8:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18bcc:	eafffcaf 	b	17e90 <BusAccess::controlRelease(bool)>
   18bd0:	0005acd4 	.word	0x0005acd4
   18bd4:	20200000 	.word	0x20200000
   18bd8:	00040001 	.word	0x00040001
   18bdc:	00050001 	.word	0x00050001

00018be0 <BusAccess::clearAllIO()>:
   18be0:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18be4:	e24ddf41 	sub	sp, sp, #260	; 0x104
   18be8:	e1a0800d 	mov	r8, sp
   18bec:	e3a02c01 	mov	r2, #256	; 0x100
   18bf0:	e3a010ff 	mov	r1, #255	; 0xff
   18bf4:	e1a00008 	mov	r0, r8
   18bf8:	eb004d57 	bl	2c15c <memset>
   18bfc:	e3a02040 	mov	r2, #64	; 0x40
   18c00:	e59f5238 	ldr	r5, [pc, #568]	; 18e40 <BusAccess::clearAllIO()+0x260>
   18c04:	e3a01000 	mov	r1, #0
   18c08:	e5953008 	ldr	r3, [r5, #8]
   18c0c:	e3a00013 	mov	r0, #19
   18c10:	e20334ff 	and	r3, r3, #-16777216	; 0xff000000
   18c14:	e5853008 	str	r3, [r5, #8]
   18c18:	e585201c 	str	r2, [r5, #28]
   18c1c:	ebfffab7 	bl	17700 <digitalWrite>
   18c20:	e3a040fa 	mov	r4, #250	; 0xfa
   18c24:	ea000003 	b	18c38 <BusAccess::clearAllIO()+0x58>
   18c28:	e3a00001 	mov	r0, #1
   18c2c:	ebfff8e8 	bl	16fd4 <microsDelay>
   18c30:	e2544001 	subs	r4, r4, #1
   18c34:	0a000002 	beq	18c44 <BusAccess::clearAllIO()+0x64>
   18c38:	e5953034 	ldr	r3, [r5, #52]	; 0x34
   18c3c:	e3130004 	tst	r3, #4
   18c40:	1afffff8 	bne	18c28 <BusAccess::clearAllIO()+0x48>
   18c44:	e59f61f4 	ldr	r6, [pc, #500]	; 18e40 <BusAccess::clearAllIO()+0x260>
   18c48:	e5963034 	ldr	r3, [r6, #52]	; 0x34
   18c4c:	e3130004 	tst	r3, #4
   18c50:	13a00000 	movne	r0, #0
   18c54:	1a000076 	bne	18e34 <BusAccess::clearAllIO()+0x254>
   18c58:	e3a09c0e 	mov	r9, #3584	; 0xe00
   18c5c:	e1a04006 	mov	r4, r6
   18c60:	e1a07009 	mov	r7, r9
   18c64:	e3a05009 	mov	r5, #9
   18c68:	ebfffc53 	bl	17dbc <BusAccess::controlTake()>
   18c6c:	e5963008 	ldr	r3, [r6, #8]
   18c70:	e20334ff 	and	r3, r3, #-16777216	; 0xff000000
   18c74:	e5863008 	str	r3, [r6, #8]
   18c78:	e3a03000 	mov	r3, #0
   18c7c:	e3a06080 	mov	r6, #128	; 0x80
   18c80:	e5847028 	str	r7, [r4, #40]	; 0x28
   18c84:	e3a00014 	mov	r0, #20
   18c88:	e584301c 	str	r3, [r4, #28]
   18c8c:	ebffbd1d 	bl	8108 <lowlev_cycleDelay>
   18c90:	e584601c 	str	r6, [r4, #28]
   18c94:	e3a00014 	mov	r0, #20
   18c98:	ebffbd1a 	bl	8108 <lowlev_cycleDelay>
   18c9c:	e2555001 	subs	r5, r5, #1
   18ca0:	e5846028 	str	r6, [r4, #40]	; 0x28
   18ca4:	1afffff3 	bne	18c78 <BusAccess::clearAllIO()+0x98>
   18ca8:	e3a00014 	mov	r0, #20
   18cac:	ebffbd15 	bl	8108 <lowlev_cycleDelay>
   18cb0:	e5849028 	str	r9, [r4, #40]	; 0x28
   18cb4:	e3a00014 	mov	r0, #20
   18cb8:	ebffbd12 	bl	8108 <lowlev_cycleDelay>
   18cbc:	e3a03b02 	mov	r3, #2048	; 0x800
   18cc0:	e3a05801 	mov	r5, #65536	; 0x10000
   18cc4:	e5849028 	str	r9, [r4, #40]	; 0x28
   18cc8:	e3a00014 	mov	r0, #20
   18ccc:	e584301c 	str	r3, [r4, #28]
   18cd0:	ebffbd0c 	bl	8108 <lowlev_cycleDelay>
   18cd4:	e5849028 	str	r9, [r4, #40]	; 0x28
   18cd8:	e3a00014 	mov	r0, #20
   18cdc:	e584501c 	str	r5, [r4, #28]
   18ce0:	ebffbd08 	bl	8108 <lowlev_cycleDelay>
   18ce4:	e5845028 	str	r5, [r4, #40]	; 0x28
   18ce8:	e3a00014 	mov	r0, #20
   18cec:	ebffbd05 	bl	8108 <lowlev_cycleDelay>
   18cf0:	e5942008 	ldr	r2, [r4, #8]
   18cf4:	e59f3148 	ldr	r3, [pc, #328]	; 18e44 <BusAccess::clearAllIO()+0x264>
   18cf8:	e20224ff 	and	r2, r2, #-16777216	; 0xff000000
   18cfc:	e1823003 	orr	r3, r2, r3
   18d00:	e5843008 	str	r3, [r4, #8]
   18d04:	e1a07008 	mov	r7, r8
   18d08:	e59f4130 	ldr	r4, [pc, #304]	; 18e40 <BusAccess::clearAllIO()+0x260>
   18d0c:	e59fa134 	ldr	sl, [pc, #308]	; 18e48 <BusAccess::clearAllIO()+0x268>
   18d10:	ea000002 	b	18d20 <BusAccess::clearAllIO()+0x140>
   18d14:	e28d3c01 	add	r3, sp, #256	; 0x100
   18d18:	e1570003 	cmp	r7, r3
   18d1c:	0a00003f 	beq	18e20 <BusAccess::clearAllIO()+0x240>
   18d20:	e3a01c02 	mov	r1, #512	; 0x200
   18d24:	e3a02802 	mov	r2, #131072	; 0x20000
   18d28:	e3a05801 	mov	r5, #65536	; 0x10000
   18d2c:	e3a06c0e 	mov	r6, #3584	; 0xe00
   18d30:	e4d73001 	ldrb	r3, [r7], #1
   18d34:	e3a000fa 	mov	r0, #250	; 0xfa
   18d38:	e1a03a03 	lsl	r3, r3, #20
   18d3c:	e223c6ff 	eor	ip, r3, #267386880	; 0xff00000
   18d40:	e584301c 	str	r3, [r4, #28]
   18d44:	e584c028 	str	ip, [r4, #40]	; 0x28
   18d48:	e584a028 	str	sl, [r4, #40]	; 0x28
   18d4c:	e584101c 	str	r1, [r4, #28]
   18d50:	e5842028 	str	r2, [r4, #40]	; 0x28
   18d54:	ebffbceb 	bl	8108 <lowlev_cycleDelay>
   18d58:	e59f30ec 	ldr	r3, [pc, #236]	; 18e4c <BusAccess::clearAllIO()+0x26c>
   18d5c:	e3a00014 	mov	r0, #20
   18d60:	e584301c 	str	r3, [r4, #28]
   18d64:	e5846028 	str	r6, [r4, #40]	; 0x28
   18d68:	e584501c 	str	r5, [r4, #28]
   18d6c:	ebffbce5 	bl	8108 <lowlev_cycleDelay>
   18d70:	e5845028 	str	r5, [r4, #40]	; 0x28
   18d74:	e3a00014 	mov	r0, #20
   18d78:	e0475008 	sub	r5, r7, r8
   18d7c:	ebffbce1 	bl	8108 <lowlev_cycleDelay>
   18d80:	e31500ff 	tst	r5, #255	; 0xff
   18d84:	1affffe2 	bne	18d14 <BusAccess::clearAllIO()+0x134>
   18d88:	e3a09009 	mov	r9, #9
   18d8c:	e1a05425 	lsr	r5, r5, #8
   18d90:	e3a0b080 	mov	fp, #128	; 0x80
   18d94:	e2152080 	ands	r2, r5, #128	; 0x80
   18d98:	e5846028 	str	r6, [r4, #40]	; 0x28
   18d9c:	e3a00014 	mov	r0, #20
   18da0:	1584601c 	strne	r6, [r4, #28]
   18da4:	0584201c 	streq	r2, [r4, #28]
   18da8:	ebffbcd6 	bl	8108 <lowlev_cycleDelay>
   18dac:	e584b01c 	str	fp, [r4, #28]
   18db0:	e3a00014 	mov	r0, #20
   18db4:	ebffbcd3 	bl	8108 <lowlev_cycleDelay>
   18db8:	e2599001 	subs	r9, r9, #1
   18dbc:	e1a05085 	lsl	r5, r5, #1
   18dc0:	e584b028 	str	fp, [r4, #40]	; 0x28
   18dc4:	1afffff1 	bne	18d90 <BusAccess::clearAllIO()+0x1b0>
   18dc8:	e3a05c0e 	mov	r5, #3584	; 0xe00
   18dcc:	e3a00014 	mov	r0, #20
   18dd0:	ebffbccc 	bl	8108 <lowlev_cycleDelay>
   18dd4:	e3a00014 	mov	r0, #20
   18dd8:	e5845028 	str	r5, [r4, #40]	; 0x28
   18ddc:	ebffbcc9 	bl	8108 <lowlev_cycleDelay>
   18de0:	e3a03b02 	mov	r3, #2048	; 0x800
   18de4:	e3a06801 	mov	r6, #65536	; 0x10000
   18de8:	e5845028 	str	r5, [r4, #40]	; 0x28
   18dec:	e3a00014 	mov	r0, #20
   18df0:	e584301c 	str	r3, [r4, #28]
   18df4:	ebffbcc3 	bl	8108 <lowlev_cycleDelay>
   18df8:	e5845028 	str	r5, [r4, #40]	; 0x28
   18dfc:	e3a00014 	mov	r0, #20
   18e00:	e584601c 	str	r6, [r4, #28]
   18e04:	ebffbcbf 	bl	8108 <lowlev_cycleDelay>
   18e08:	e5846028 	str	r6, [r4, #40]	; 0x28
   18e0c:	e3a00014 	mov	r0, #20
   18e10:	ebffbcbc 	bl	8108 <lowlev_cycleDelay>
   18e14:	e28d3c01 	add	r3, sp, #256	; 0x100
   18e18:	e1570003 	cmp	r7, r3
   18e1c:	1affffbf 	bne	18d20 <BusAccess::clearAllIO()+0x140>
   18e20:	e3a00000 	mov	r0, #0
   18e24:	e59f2014 	ldr	r2, [pc, #20]	; 18e40 <BusAccess::clearAllIO()+0x260>
   18e28:	e5923008 	ldr	r3, [r2, #8]
   18e2c:	e20334ff 	and	r3, r3, #-16777216	; 0xff000000
   18e30:	e5823008 	str	r3, [r2, #8]
   18e34:	e28ddf41 	add	sp, sp, #260	; 0x104
   18e38:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18e3c:	eafffc13 	b	17e90 <BusAccess::controlRelease(bool)>
   18e40:	20200000 	.word	0x20200000
   18e44:	00249249 	.word	0x00249249
   18e48:	00000e42 	.word	0x00000e42
   18e4c:	00020042 	.word	0x00020042

00018e50 <BusAccess::clockSetup()>:
   18e50:	e3a01004 	mov	r1, #4
   18e54:	e59f3020 	ldr	r3, [pc, #32]	; 18e7c <BusAccess::clockSetup()+0x2c>
   18e58:	e5d32020 	ldrb	r2, [r3, #32]
   18e5c:	e5831028 	str	r1, [r3, #40]	; 0x28
   18e60:	e3520000 	cmp	r2, #0
   18e64:	159f2014 	ldrne	r2, [pc, #20]	; 18e80 <BusAccess::clockSetup()+0x30>
   18e68:	159f1014 	ldrne	r1, [pc, #20]	; 18e84 <BusAccess::clockSetup()+0x34>
   18e6c:	15821070 	strne	r1, [r2, #112]	; 0x70
   18e70:	e3a02004 	mov	r2, #4
   18e74:	e5832024 	str	r2, [r3, #36]	; 0x24
   18e78:	e12fff1e 	bx	lr
   18e7c:	0005acd4 	.word	0x0005acd4
   18e80:	20101000 	.word	0x20101000
   18e84:	5a000006 	.word	0x5a000006

00018e88 <BusAccess::clockSetFreqHz(unsigned long)>:
   18e88:	e59f3018 	ldr	r3, [pc, #24]	; 18ea8 <BusAccess::clockSetFreqHz(unsigned long)+0x20>
   18e8c:	e5d32020 	ldrb	r2, [r3, #32]
   18e90:	e3520000 	cmp	r2, #0
   18e94:	159f2010 	ldrne	r2, [pc, #16]	; 18eac <BusAccess::clockSetFreqHz(unsigned long)+0x24>
   18e98:	159f1010 	ldrne	r1, [pc, #16]	; 18eb0 <BusAccess::clockSetFreqHz(unsigned long)+0x28>
   18e9c:	15821070 	strne	r1, [r2, #112]	; 0x70
   18ea0:	e583001c 	str	r0, [r3, #28]
   18ea4:	e12fff1e 	bx	lr
   18ea8:	0005acd4 	.word	0x0005acd4
   18eac:	20101000 	.word	0x20101000
   18eb0:	5a000006 	.word	0x5a000006

00018eb4 <BusAccess::clockEnable(bool)>:
   18eb4:	e92d4070 	push	{r4, r5, r6, lr}
   18eb8:	e59f40dc 	ldr	r4, [pc, #220]	; 18f9c <BusAccess::clockEnable(bool)+0xe8>
   18ebc:	e24dd010 	sub	sp, sp, #16
   18ec0:	e5d43020 	ldrb	r3, [r4, #32]
   18ec4:	e1530000 	cmp	r3, r0
   18ec8:	0a000004 	beq	18ee0 <BusAccess::clockEnable(bool)+0x2c>
   18ecc:	e59f30cc 	ldr	r3, [pc, #204]	; 18fa0 <BusAccess::clockEnable(bool)+0xec>
   18ed0:	e59f20cc 	ldr	r2, [pc, #204]	; 18fa4 <BusAccess::clockEnable(bool)+0xf0>
   18ed4:	e3500000 	cmp	r0, #0
   18ed8:	e5832070 	str	r2, [r3, #112]	; 0x70
   18edc:	1a000001 	bne	18ee8 <BusAccess::clockEnable(bool)+0x34>
   18ee0:	e28dd010 	add	sp, sp, #16
   18ee4:	e8bd8070 	pop	{r4, r5, r6, pc}
   18ee8:	e5940024 	ldr	r0, [r4, #36]	; 0x24
   18eec:	e3700001 	cmn	r0, #1
   18ef0:	0afffffa 	beq	18ee0 <BusAccess::clockEnable(bool)+0x2c>
   18ef4:	e5941028 	ldr	r1, [r4, #40]	; 0x28
   18ef8:	e3510000 	cmp	r1, #0
   18efc:	0afffff7 	beq	18ee0 <BusAccess::clockEnable(bool)+0x2c>
   18f00:	e1a02003 	mov	r2, r3
   18f04:	e3a03ffa 	mov	r3, #1000	; 0x3e8
   18f08:	ea000001 	b	18f14 <BusAccess::clockEnable(bool)+0x60>
   18f0c:	e2533001 	subs	r3, r3, #1
   18f10:	0a000002 	beq	18f20 <BusAccess::clockEnable(bool)+0x6c>
   18f14:	e592c070 	ldr	ip, [r2, #112]	; 0x70
   18f18:	e31c0080 	tst	ip, #128	; 0x80
   18f1c:	1afffffa 	bne	18f0c <BusAccess::clockEnable(bool)+0x58>
   18f20:	e6ef1071 	uxtb	r1, r1
   18f24:	e6ef0070 	uxtb	r0, r0
   18f28:	ebfff9b2 	bl	175f8 <pinMode>
   18f2c:	e594601c 	ldr	r6, [r4, #28]
   18f30:	e59f0070 	ldr	r0, [pc, #112]	; 18fa8 <BusAccess::clockEnable(bool)+0xf4>
   18f34:	e1a01006 	mov	r1, r6
   18f38:	eb005309 	bl	2db64 <__udivsi3>
   18f3c:	e59f5068 	ldr	r5, [pc, #104]	; 18fac <BusAccess::clockEnable(bool)+0xf8>
   18f40:	e59f2058 	ldr	r2, [pc, #88]	; 18fa0 <BusAccess::clockEnable(bool)+0xec>
   18f44:	e1500005 	cmp	r0, r5
   18f48:	31a05000 	movcc	r5, r0
   18f4c:	e59f105c 	ldr	r1, [pc, #92]	; 18fb0 <BusAccess::clockEnable(bool)+0xfc>
   18f50:	e1a03605 	lsl	r3, r5, #12
   18f54:	e383345a 	orr	r3, r3, #1509949440	; 0x5a000000
   18f58:	e5823074 	str	r3, [r2, #116]	; 0x74
   18f5c:	e59f0044 	ldr	r0, [pc, #68]	; 18fa8 <BusAccess::clockEnable(bool)+0xf4>
   18f60:	e5821070 	str	r1, [r2, #112]	; 0x70
   18f64:	e1a01005 	mov	r1, r5
   18f68:	eb0052fd 	bl	2db64 <__udivsi3>
   18f6c:	e5941028 	ldr	r1, [r4, #40]	; 0x28
   18f70:	e5942024 	ldr	r2, [r4, #36]	; 0x24
   18f74:	e1a03000 	mov	r3, r0
   18f78:	e58d100c 	str	r1, [sp, #12]
   18f7c:	e58d2008 	str	r2, [sp, #8]
   18f80:	e58d6000 	str	r6, [sp]
   18f84:	e58d5004 	str	r5, [sp, #4]
   18f88:	e59f2024 	ldr	r2, [pc, #36]	; 18fb4 <BusAccess::clockEnable(bool)+0x100>
   18f8c:	e3a01003 	mov	r1, #3
   18f90:	e59f0020 	ldr	r0, [pc, #32]	; 18fb8 <BusAccess::clockEnable(bool)+0x104>
   18f94:	ebffc206 	bl	97b4 <LogWrite>
   18f98:	eaffffd0 	b	18ee0 <BusAccess::clockEnable(bool)+0x2c>
   18f9c:	0005acd4 	.word	0x0005acd4
   18fa0:	20101000 	.word	0x20101000
   18fa4:	5a000006 	.word	0x5a000006
   18fa8:	1dcd6500 	.word	0x1dcd6500
   18fac:	00000fff 	.word	0x00000fff
   18fb0:	5a000016 	.word	0x5a000016
   18fb4:	0002fc14 	.word	0x0002fc14
   18fb8:	0002fc50 	.word	0x0002fc50

00018fbc <BusAccess::clockCurFreqHz()>:
   18fbc:	e59f3004 	ldr	r3, [pc, #4]	; 18fc8 <BusAccess::clockCurFreqHz()+0xc>
   18fc0:	e593001c 	ldr	r0, [r3, #28]
   18fc4:	e12fff1e 	bx	lr
   18fc8:	0005acd4 	.word	0x0005acd4

00018fcc <BusAccess::accessCallbackAdd(unsigned long (*)(unsigned long, unsigned long, unsigned long))>:
   18fcc:	e59f3004 	ldr	r3, [pc, #4]	; 18fd8 <BusAccess::accessCallbackAdd(unsigned long (*)(unsigned long, unsigned long, unsigned long))+0xc>
   18fd0:	e5830000 	str	r0, [r3]
   18fd4:	e12fff1e 	bx	lr
   18fd8:	0005acd4 	.word	0x0005acd4

00018fdc <BusAccess::accessCallbackRemove()>:
   18fdc:	e3a02000 	mov	r2, #0
   18fe0:	e59f3004 	ldr	r3, [pc, #4]	; 18fec <BusAccess::accessCallbackRemove()+0x10>
   18fe4:	e5832000 	str	r2, [r3]
   18fe8:	e12fff1e 	bx	lr
   18fec:	0005acd4 	.word	0x0005acd4

00018ff0 <BusAccess::waitGet(bool&, bool&)>:
   18ff0:	e59f301c 	ldr	r3, [pc, #28]	; 19014 <BusAccess::waitGet(bool&, bool&)+0x24>
   18ff4:	e5933010 	ldr	r3, [r3, #16]
   18ff8:	e1a02623 	lsr	r2, r3, #12
   18ffc:	e1a036a3 	lsr	r3, r3, #13
   19000:	e2022001 	and	r2, r2, #1
   19004:	e2033001 	and	r3, r3, #1
   19008:	e5c02000 	strb	r2, [r0]
   1900c:	e5c13000 	strb	r3, [r1]
   19010:	e12fff1e 	bx	lr
   19014:	0005acd4 	.word	0x0005acd4

00019018 <BusAccess::waitOnInstruction(bool)>:
   19018:	e3500000 	cmp	r0, #0
   1901c:	e3a00a02 	mov	r0, #8192	; 0x2000
   19020:	e59f2034 	ldr	r2, [pc, #52]	; 1905c <BusAccess::waitOnInstruction(bool)+0x44>
   19024:	e59f1034 	ldr	r1, [pc, #52]	; 19060 <BusAccess::waitOnInstruction(bool)+0x48>
   19028:	e5923010 	ldr	r3, [r2, #16]
   1902c:	1581001c 	strne	r0, [r1, #28]
   19030:	05810028 	streq	r0, [r1, #40]	; 0x28
   19034:	11833000 	orrne	r3, r3, r0
   19038:	05910058 	ldreq	r0, [r1, #88]	; 0x58
   1903c:	15910058 	ldrne	r0, [r1, #88]	; 0x58
   19040:	03c33a02 	biceq	r3, r3, #8192	; 0x2000
   19044:	15823010 	strne	r3, [r2, #16]
   19048:	05823010 	streq	r3, [r2, #16]
   1904c:	13803020 	orrne	r3, r0, #32
   19050:	03c03020 	biceq	r3, r0, #32
   19054:	e5813058 	str	r3, [r1, #88]	; 0x58
   19058:	e12fff1e 	bx	lr
   1905c:	0005acd4 	.word	0x0005acd4
   19060:	20200000 	.word	0x20200000

00019064 <BusAccess::waitRestoreDefaults()>:
   19064:	e3a00a03 	mov	r0, #12288	; 0x3000
   19068:	e59f1028 	ldr	r1, [pc, #40]	; 19098 <BusAccess::waitRestoreDefaults()+0x34>
   1906c:	e59f3028 	ldr	r3, [pc, #40]	; 1909c <BusAccess::waitRestoreDefaults()+0x38>
   19070:	e5912014 	ldr	r2, [r1, #20]
   19074:	e5830028 	str	r0, [r3, #40]	; 0x28
   19078:	e5812010 	str	r2, [r1, #16]
   1907c:	e583201c 	str	r2, [r3, #28]
   19080:	e3120a02 	tst	r2, #8192	; 0x2000
   19084:	e5932058 	ldr	r2, [r3, #88]	; 0x58
   19088:	13822020 	orrne	r2, r2, #32
   1908c:	03c22020 	biceq	r2, r2, #32
   19090:	e5832058 	str	r2, [r3, #88]	; 0x58
   19094:	e12fff1e 	bx	lr
   19098:	0005acd4 	.word	0x0005acd4
   1909c:	20200000 	.word	0x20200000

000190a0 <BusAccess::waitSetup(bool, bool)>:
   190a0:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   190a4:	e1a06000 	mov	r6, r0
   190a8:	e1a05001 	mov	r5, r1
   190ac:	ebffbc13 	bl	8100 <lowlev_disable_fiq>
   190b0:	e3a02000 	mov	r2, #0
   190b4:	e59f4144 	ldr	r4, [pc, #324]	; 19200 <BusAccess::waitSetup(bool, bool)+0x160>
   190b8:	e1560002 	cmp	r6, r2
   190bc:	e5842010 	str	r2, [r4, #16]
   190c0:	0a000022 	beq	19150 <BusAccess::waitSetup(bool, bool)+0xb0>
   190c4:	e3a03a01 	mov	r3, #4096	; 0x1000
   190c8:	e1550002 	cmp	r5, r2
   190cc:	e5843010 	str	r3, [r4, #16]
   190d0:	0a000030 	beq	19198 <BusAccess::waitSetup(bool, bool)+0xf8>
   190d4:	e3a03a03 	mov	r3, #12288	; 0x3000
   190d8:	e59f6124 	ldr	r6, [pc, #292]	; 19204 <BusAccess::waitSetup(bool, bool)+0x164>
   190dc:	e1a00002 	mov	r0, r2
   190e0:	e5863028 	str	r3, [r6, #40]	; 0x28
   190e4:	e59f111c 	ldr	r1, [pc, #284]	; 19208 <BusAccess::waitSetup(bool, bool)+0x168>
   190e8:	e586301c 	str	r3, [r6, #28]
   190ec:	e5843010 	str	r3, [r4, #16]
   190f0:	e5843014 	str	r3, [r4, #20]
   190f4:	ebfff1c9 	bl	15820 <CInterrupts::connectFIQ(unsigned int, void (*)(void*), void*)>
   190f8:	e3a03003 	mov	r3, #3
   190fc:	e5863040 	str	r3, [r6, #64]	; 0x40
   19100:	e59f20fc 	ldr	r2, [pc, #252]	; 19204 <BusAccess::waitSetup(bool, bool)+0x164>
   19104:	e5923058 	ldr	r3, [r2, #88]	; 0x58
   19108:	e3833002 	orr	r3, r3, #2
   1910c:	e5823058 	str	r3, [r2, #88]	; 0x58
   19110:	e59f20ec 	ldr	r2, [pc, #236]	; 19204 <BusAccess::waitSetup(bool, bool)+0x164>
   19114:	e3550000 	cmp	r5, #0
   19118:	e5923058 	ldr	r3, [r2, #88]	; 0x58
   1911c:	e3a0c0b4 	mov	ip, #180	; 0xb4
   19120:	13833020 	orrne	r3, r3, #32
   19124:	03c33020 	biceq	r3, r3, #32
   19128:	e5823058 	str	r3, [r2, #88]	; 0x58
   1912c:	e3e01000 	mvn	r1, #0
   19130:	e3a03001 	mov	r3, #1
   19134:	e59f00d0 	ldr	r0, [pc, #208]	; 1920c <BusAccess::waitSetup(bool, bool)+0x16c>
   19138:	e59f20c4 	ldr	r2, [pc, #196]	; 19204 <BusAccess::waitSetup(bool, bool)+0x164>
   1913c:	e580c20c 	str	ip, [r0, #524]	; 0x20c
   19140:	e5821040 	str	r1, [r2, #64]	; 0x40
   19144:	e5c43018 	strb	r3, [r4, #24]
   19148:	e8bd41f0 	pop	{r4, r5, r6, r7, r8, lr}
   1914c:	eaffbbe7 	b	80f0 <lowlev_enable_fiq>
   19150:	e3550000 	cmp	r5, #0
   19154:	1a00001b 	bne	191c8 <BusAccess::waitSetup(bool, bool)+0x128>
   19158:	e3a03a03 	mov	r3, #12288	; 0x3000
   1915c:	e59f60a0 	ldr	r6, [pc, #160]	; 19204 <BusAccess::waitSetup(bool, bool)+0x164>
   19160:	e1a02005 	mov	r2, r5
   19164:	e5863028 	str	r3, [r6, #40]	; 0x28
   19168:	e59f1098 	ldr	r1, [pc, #152]	; 19208 <BusAccess::waitSetup(bool, bool)+0x168>
   1916c:	e586501c 	str	r5, [r6, #28]
   19170:	e1a00005 	mov	r0, r5
   19174:	e5845014 	str	r5, [r4, #20]
   19178:	ebfff1a8 	bl	15820 <CInterrupts::connectFIQ(unsigned int, void (*)(void*), void*)>
   1917c:	e3a03003 	mov	r3, #3
   19180:	e5863040 	str	r3, [r6, #64]	; 0x40
   19184:	e59f2078 	ldr	r2, [pc, #120]	; 19204 <BusAccess::waitSetup(bool, bool)+0x164>
   19188:	e5923058 	ldr	r3, [r2, #88]	; 0x58
   1918c:	e3c33002 	bic	r3, r3, #2
   19190:	e5823058 	str	r3, [r2, #88]	; 0x58
   19194:	eaffffdd 	b	19110 <BusAccess::waitSetup(bool, bool)+0x70>
   19198:	e3a01a03 	mov	r1, #12288	; 0x3000
   1919c:	e59f6060 	ldr	r6, [pc, #96]	; 19204 <BusAccess::waitSetup(bool, bool)+0x164>
   191a0:	e1a02005 	mov	r2, r5
   191a4:	e5861028 	str	r1, [r6, #40]	; 0x28
   191a8:	e1a00005 	mov	r0, r5
   191ac:	e586301c 	str	r3, [r6, #28]
   191b0:	e59f1050 	ldr	r1, [pc, #80]	; 19208 <BusAccess::waitSetup(bool, bool)+0x168>
   191b4:	e5843014 	str	r3, [r4, #20]
   191b8:	ebfff198 	bl	15820 <CInterrupts::connectFIQ(unsigned int, void (*)(void*), void*)>
   191bc:	e3a03003 	mov	r3, #3
   191c0:	e5863040 	str	r3, [r6, #64]	; 0x40
   191c4:	eaffffcd 	b	19100 <BusAccess::waitSetup(bool, bool)+0x60>
   191c8:	e3a03a02 	mov	r3, #8192	; 0x2000
   191cc:	e3a01a03 	mov	r1, #12288	; 0x3000
   191d0:	e59f702c 	ldr	r7, [pc, #44]	; 19204 <BusAccess::waitSetup(bool, bool)+0x164>
   191d4:	e1a02006 	mov	r2, r6
   191d8:	e5871028 	str	r1, [r7, #40]	; 0x28
   191dc:	e1a00006 	mov	r0, r6
   191e0:	e587301c 	str	r3, [r7, #28]
   191e4:	e59f101c 	ldr	r1, [pc, #28]	; 19208 <BusAccess::waitSetup(bool, bool)+0x168>
   191e8:	e5843010 	str	r3, [r4, #16]
   191ec:	e5843014 	str	r3, [r4, #20]
   191f0:	ebfff18a 	bl	15820 <CInterrupts::connectFIQ(unsigned int, void (*)(void*), void*)>
   191f4:	e3a03003 	mov	r3, #3
   191f8:	e5873040 	str	r3, [r7, #64]	; 0x40
   191fc:	eaffffe0 	b	19184 <BusAccess::waitSetup(bool, bool)+0xe4>
   19200:	0005acd4 	.word	0x0005acd4
   19204:	20200000 	.word	0x20200000
   19208:	0001787c 	.word	0x0001787c
   1920c:	2000b000 	.word	0x2000b000

00019210 <BusAccess::waitIntClear()>:
   19210:	e3e02000 	mvn	r2, #0
   19214:	e59f3004 	ldr	r3, [pc, #4]	; 19220 <BusAccess::waitIntClear()+0x10>
   19218:	e5832040 	str	r2, [r3, #64]	; 0x40
   1921c:	e12fff1e 	bx	lr
   19220:	20200000 	.word	0x20200000

00019224 <BusAccess::waitIntDisable()>:
   19224:	eaffbbb5 	b	8100 <lowlev_disable_fiq>

00019228 <BusAccess::waitIntEnable()>:
   19228:	e3e02000 	mvn	r2, #0
   1922c:	e59f3004 	ldr	r3, [pc, #4]	; 19238 <BusAccess::waitIntEnable()+0x10>
   19230:	e5832040 	str	r2, [r3, #64]	; 0x40
   19234:	eaffbbad 	b	80f0 <lowlev_enable_fiq>
   19238:	20200000 	.word	0x20200000

0001923c <BusAccess::pause()>:
   1923c:	e3a02001 	mov	r2, #1
   19240:	e59f3008 	ldr	r3, [pc, #8]	; 19250 <BusAccess::pause()+0x14>
   19244:	e3a00000 	mov	r0, #0
   19248:	e5c3202c 	strb	r2, [r3, #44]	; 0x2c
   1924c:	e12fff1e 	bx	lr
   19250:	0005acd4 	.word	0x0005acd4

00019254 <BusAccess::pauseIsPaused()>:
   19254:	e59f3004 	ldr	r3, [pc, #4]	; 19260 <BusAccess::pauseIsPaused()+0xc>
   19258:	e5d3002c 	ldrb	r0, [r3, #44]	; 0x2c
   1925c:	e12fff1e 	bx	lr
   19260:	0005acd4 	.word	0x0005acd4

00019264 <BusAccess::pauseStep()>:
   19264:	e92d4070 	push	{r4, r5, r6, lr}
   19268:	e59f404c 	ldr	r4, [pc, #76]	; 192bc <BusAccess::pauseStep()+0x58>
   1926c:	e5d4302c 	ldrb	r3, [r4, #44]	; 0x2c
   19270:	e3530000 	cmp	r3, #0
   19274:	0a00000e 	beq	192b4 <BusAccess::pauseStep()+0x50>
   19278:	ebffbba0 	bl	8100 <lowlev_disable_fiq>
   1927c:	ebffbb99 	bl	80e8 <lowlev_disable_irq>
   19280:	e3a03a03 	mov	r3, #12288	; 0x3000
   19284:	e59f5034 	ldr	r5, [pc, #52]	; 192c0 <BusAccess::pauseStep()+0x5c>
   19288:	e3a00005 	mov	r0, #5
   1928c:	e5853028 	str	r3, [r5, #40]	; 0x28
   19290:	ebffbb9c 	bl	8108 <lowlev_cycleDelay>
   19294:	e3e03000 	mvn	r3, #0
   19298:	e5942010 	ldr	r2, [r4, #16]
   1929c:	e585201c 	str	r2, [r5, #28]
   192a0:	e5853040 	str	r3, [r5, #64]	; 0x40
   192a4:	ebffbb91 	bl	80f0 <lowlev_enable_fiq>
   192a8:	ebffbb8a 	bl	80d8 <lowlev_enable_irq>
   192ac:	e3a00000 	mov	r0, #0
   192b0:	e8bd8070 	pop	{r4, r5, r6, pc}
   192b4:	e3a00003 	mov	r0, #3
   192b8:	e8bd8070 	pop	{r4, r5, r6, pc}
   192bc:	0005acd4 	.word	0x0005acd4
   192c0:	20200000 	.word	0x20200000

000192c4 <BusAccess::pauseRelease()>:
   192c4:	e92d4070 	push	{r4, r5, r6, lr}
   192c8:	e59f505c 	ldr	r5, [pc, #92]	; 1932c <BusAccess::pauseRelease()+0x68>
   192cc:	e5d5302c 	ldrb	r3, [r5, #44]	; 0x2c
   192d0:	e3530000 	cmp	r3, #0
   192d4:	0a000012 	beq	19324 <BusAccess::pauseRelease()+0x60>
   192d8:	ebffbb82 	bl	80e8 <lowlev_disable_irq>
   192dc:	e3a04000 	mov	r4, #0
   192e0:	ebffbb86 	bl	8100 <lowlev_disable_fiq>
   192e4:	e3a03a03 	mov	r3, #12288	; 0x3000
   192e8:	e59f6040 	ldr	r6, [pc, #64]	; 19330 <BusAccess::pauseRelease()+0x6c>
   192ec:	e3a00005 	mov	r0, #5
   192f0:	e5c5402c 	strb	r4, [r5, #44]	; 0x2c
   192f4:	e5863028 	str	r3, [r6, #40]	; 0x28
   192f8:	ebffbb82 	bl	8108 <lowlev_cycleDelay>
   192fc:	e3a02c0e 	mov	r2, #3584	; 0xe00
   19300:	e3e03000 	mvn	r3, #0
   19304:	e5951010 	ldr	r1, [r5, #16]
   19308:	e586101c 	str	r1, [r6, #28]
   1930c:	e5862028 	str	r2, [r6, #40]	; 0x28
   19310:	e5863040 	str	r3, [r6, #64]	; 0x40
   19314:	ebffbb75 	bl	80f0 <lowlev_enable_fiq>
   19318:	ebffbb6e 	bl	80d8 <lowlev_enable_irq>
   1931c:	e1a00004 	mov	r0, r4
   19320:	e8bd8070 	pop	{r4, r5, r6, pc}
   19324:	e3a00003 	mov	r0, #3
   19328:	e8bd8070 	pop	{r4, r5, r6, pc}
   1932c:	0005acd4 	.word	0x0005acd4
   19330:	20200000 	.word	0x20200000

00019334 <BusAccess::service()>:
   19334:	e12fff1e 	bx	lr

00019338 <BusAccess::setPinOut(int, bool)>:
   19338:	e92d4070 	push	{r4, r5, r6, lr}
   1933c:	e1a05001 	mov	r5, r1
   19340:	e6ef4070 	uxtb	r4, r0
   19344:	e1a00004 	mov	r0, r4
   19348:	ebfff8ec 	bl	17700 <digitalWrite>
   1934c:	e1a00004 	mov	r0, r4
   19350:	e3a01001 	mov	r1, #1
   19354:	ebfff8a7 	bl	175f8 <pinMode>
   19358:	e1a01005 	mov	r1, r5
   1935c:	e1a00004 	mov	r0, r4
   19360:	e8bd4070 	pop	{r4, r5, r6, lr}
   19364:	eafff8e5 	b	17700 <digitalWrite>

00019368 <BusAccess::muxClear()>:
   19368:	e3a02c0e 	mov	r2, #3584	; 0xe00
   1936c:	e59f3004 	ldr	r3, [pc, #4]	; 19378 <BusAccess::muxClear()+0x10>
   19370:	e5832028 	str	r2, [r3, #40]	; 0x28
   19374:	e12fff1e 	bx	lr
   19378:	20200000 	.word	0x20200000

0001937c <BusAccess::muxSet(int)>:
   1937c:	e3a02c0e 	mov	r2, #3584	; 0xe00
   19380:	e59f300c 	ldr	r3, [pc, #12]	; 19394 <BusAccess::muxSet(int)+0x18>
   19384:	e1a00480 	lsl	r0, r0, #9
   19388:	e5832028 	str	r2, [r3, #40]	; 0x28
   1938c:	e583001c 	str	r0, [r3, #28]
   19390:	e12fff1e 	bx	lr
   19394:	20200000 	.word	0x20200000

00019398 <BusAccess::pibSetOut()>:
   19398:	e59f1014 	ldr	r1, [pc, #20]	; 193b4 <BusAccess::pibSetOut()+0x1c>
   1939c:	e59f3014 	ldr	r3, [pc, #20]	; 193b8 <BusAccess::pibSetOut()+0x20>
   193a0:	e5912008 	ldr	r2, [r1, #8]
   193a4:	e20224ff 	and	r2, r2, #-16777216	; 0xff000000
   193a8:	e1823003 	orr	r3, r2, r3
   193ac:	e5813008 	str	r3, [r1, #8]
   193b0:	e12fff1e 	bx	lr
   193b4:	20200000 	.word	0x20200000
   193b8:	00249249 	.word	0x00249249

000193bc <BusAccess::pibSetIn()>:
   193bc:	e59f200c 	ldr	r2, [pc, #12]	; 193d0 <BusAccess::pibSetIn()+0x14>
   193c0:	e5923008 	ldr	r3, [r2, #8]
   193c4:	e20334ff 	and	r3, r3, #-16777216	; 0xff000000
   193c8:	e5823008 	str	r3, [r2, #8]
   193cc:	e12fff1e 	bx	lr
   193d0:	20200000 	.word	0x20200000

000193d4 <BusAccess::pibSetValue(unsigned char)>:
   193d4:	e1a00a00 	lsl	r0, r0, #20
   193d8:	e59f300c 	ldr	r3, [pc, #12]	; 193ec <BusAccess::pibSetValue(unsigned char)+0x18>
   193dc:	e22026ff 	eor	r2, r0, #267386880	; 0xff00000
   193e0:	e583001c 	str	r0, [r3, #28]
   193e4:	e5832028 	str	r2, [r3, #40]	; 0x28
   193e8:	e12fff1e 	bx	lr
   193ec:	20200000 	.word	0x20200000

000193f0 <BusAccess::pibGetValue()>:
   193f0:	e59f300c 	ldr	r3, [pc, #12]	; 19404 <BusAccess::pibGetValue()+0x14>
   193f4:	e5930034 	ldr	r0, [r3, #52]	; 0x34
   193f8:	e1a00a20 	lsr	r0, r0, #20
   193fc:	e6ef0070 	uxtb	r0, r0
   19400:	e12fff1e 	bx	lr
   19404:	20200000 	.word	0x20200000

00019408 <BusAccess::clearWaitFF()>:
   19408:	e3a03a03 	mov	r3, #12288	; 0x3000
   1940c:	e92d4010 	push	{r4, lr}
   19410:	e59f4018 	ldr	r4, [pc, #24]	; 19430 <BusAccess::clearWaitFF()+0x28>
   19414:	e3a00005 	mov	r0, #5
   19418:	e5843028 	str	r3, [r4, #40]	; 0x28
   1941c:	ebffbb39 	bl	8108 <lowlev_cycleDelay>
   19420:	e59f300c 	ldr	r3, [pc, #12]	; 19434 <BusAccess::clearWaitFF()+0x2c>
   19424:	e5933010 	ldr	r3, [r3, #16]
   19428:	e584301c 	str	r3, [r4, #28]
   1942c:	e8bd8010 	pop	{r4, pc}
   19430:	20200000 	.word	0x20200000
   19434:	0005acd4 	.word	0x0005acd4

00019438 <BusAccess::clearWaitDetected()>:
   19438:	e3e02000 	mvn	r2, #0
   1943c:	e59f3004 	ldr	r3, [pc, #4]	; 19448 <BusAccess::clearWaitDetected()+0x10>
   19440:	e5832040 	str	r2, [r3, #64]	; 0x40
   19444:	e12fff1e 	bx	lr
   19448:	20200000 	.word	0x20200000

0001944c <BusAccess::isrAssert(int)>:
   1944c:	e3500007 	cmp	r0, #7
   19450:	d59f3010 	ldrle	r3, [pc, #16]	; 19468 <BusAccess::isrAssert(int)+0x1c>
   19454:	d0830100 	addle	r0, r3, r0, lsl #2
   19458:	d5903030 	ldrle	r3, [r0, #48]	; 0x30
   1945c:	d2833001 	addle	r3, r3, #1
   19460:	d5803030 	strle	r3, [r0, #48]	; 0x30
   19464:	e12fff1e 	bx	lr
   19468:	0005acd4 	.word	0x0005acd4

0001946c <BusAccess::isrAssertGetCount(int)>:
   1946c:	e3500007 	cmp	r0, #7
   19470:	d59f300c 	ldrle	r3, [pc, #12]	; 19484 <BusAccess::isrAssertGetCount(int)+0x18>
   19474:	d0830100 	addle	r0, r3, r0, lsl #2
   19478:	d5900030 	ldrle	r0, [r0, #48]	; 0x30
   1947c:	c3a00000 	movgt	r0, #0
   19480:	e12fff1e 	bx	lr
   19484:	0005acd4 	.word	0x0005acd4

00019488 <BusAccess::isrValue(int, int)>:
   19488:	e3500007 	cmp	r0, #7
   1948c:	d59f3008 	ldrle	r3, [pc, #8]	; 1949c <BusAccess::isrValue(int, int)+0x14>
   19490:	d0830100 	addle	r0, r3, r0, lsl #2
   19494:	d5801030 	strle	r1, [r0, #48]	; 0x30
   19498:	e12fff1e 	bx	lr
   1949c:	0005acd4 	.word	0x0005acd4

000194a0 <_GLOBAL__sub_I__ZN9BusAccess19_pBusAccessCallbackE>:
   194a0:	e3a02000 	mov	r2, #0
   194a4:	e3e01000 	mvn	r1, #0
   194a8:	e59f3014 	ldr	r3, [pc, #20]	; 194c4 <_GLOBAL__sub_I__ZN9BusAccess19_pBusAccessCallbackE+0x24>
   194ac:	e59f0014 	ldr	r0, [pc, #20]	; 194c8 <_GLOBAL__sub_I__ZN9BusAccess19_pBusAccessCallbackE+0x28>
   194b0:	e5c32020 	strb	r2, [r3, #32]
   194b4:	e5832028 	str	r2, [r3, #40]	; 0x28
   194b8:	e583001c 	str	r0, [r3, #28]
   194bc:	e5831024 	str	r1, [r3, #36]	; 0x24
   194c0:	e12fff1e 	bx	lr
   194c4:	0005acd4 	.word	0x0005acd4
   194c8:	000f4240 	.word	0x000f4240

000194cc <RAMEmulator::setup(McBase*)>:
   194cc:	e59f3004 	ldr	r3, [pc, #4]	; 194d8 <RAMEmulator::setup(McBase*)+0xc>
   194d0:	e5830000 	str	r0, [r3]
   194d4:	e12fff1e 	bx	lr
   194d8:	0005ad24 	.word	0x0005ad24

000194dc <RAMEmulator::activateEmulation(bool)>:
   194dc:	e59f3004 	ldr	r3, [pc, #4]	; 194e8 <RAMEmulator::activateEmulation(bool)+0xc>
   194e0:	e5c30004 	strb	r0, [r3, #4]
   194e4:	e12fff1e 	bx	lr
   194e8:	0005ad24 	.word	0x0005ad24

000194ec <RAMEmulator::getMemoryByte(unsigned long)>:
   194ec:	e59f3010 	ldr	r3, [pc, #16]	; 19504 <RAMEmulator::getMemoryByte(unsigned long)+0x18>
   194f0:	e1500003 	cmp	r0, r3
   194f4:	959f300c 	ldrls	r3, [pc, #12]	; 19508 <RAMEmulator::getMemoryByte(unsigned long)+0x1c>
   194f8:	97d30000 	ldrbls	r0, [r3, r0]
   194fc:	83a00000 	movhi	r0, #0
   19500:	e12fff1e 	bx	lr
   19504:	0000fffe 	.word	0x0000fffe
   19508:	0005ad2c 	.word	0x0005ad2c

0001950c <RAMEmulator::getMemoryWord(unsigned long)>:
   1950c:	e59f3020 	ldr	r3, [pc, #32]	; 19534 <RAMEmulator::getMemoryWord(unsigned long)+0x28>
   19510:	e1500003 	cmp	r0, r3
   19514:	959f301c 	ldrls	r3, [pc, #28]	; 19538 <RAMEmulator::getMemoryWord(unsigned long)+0x2c>
   19518:	90832000 	addls	r2, r3, r0
   1951c:	95d22001 	ldrbls	r2, [r2, #1]
   19520:	97d30000 	ldrbls	r0, [r3, r0]
   19524:	90800402 	addls	r0, r0, r2, lsl #8
   19528:	96ff0070 	uxthls	r0, r0
   1952c:	83a00000 	movhi	r0, #0
   19530:	e12fff1e 	bx	lr
   19534:	0000fffe 	.word	0x0000fffe
   19538:	0005ad2c 	.word	0x0005ad2c

0001953c <RAMEmulator::clearMemory()>:
   1953c:	e3a02801 	mov	r2, #65536	; 0x10000
   19540:	e3a01000 	mov	r1, #0
   19544:	e59f0000 	ldr	r0, [pc]	; 1954c <RAMEmulator::clearMemory()+0x10>
   19548:	ea004b03 	b	2c15c <memset>
   1954c:	0005ad2c 	.word	0x0005ad2c

00019550 <RAMEmulator::blockWrite(unsigned long, unsigned char const*, unsigned long)>:
   19550:	e92d4070 	push	{r4, r5, r6, lr}
   19554:	e1a04000 	mov	r4, r0
   19558:	e24dd008 	sub	sp, sp, #8
   1955c:	e58d2000 	str	r2, [sp]
   19560:	e1a03000 	mov	r3, r0
   19564:	e1a05002 	mov	r5, r2
   19568:	e59f0044 	ldr	r0, [pc, #68]	; 195b4 <RAMEmulator::blockWrite(unsigned long, unsigned char const*, unsigned long)+0x64>
   1956c:	e1a06001 	mov	r6, r1
   19570:	e59f2040 	ldr	r2, [pc, #64]	; 195b8 <RAMEmulator::blockWrite(unsigned long, unsigned char const*, unsigned long)+0x68>
   19574:	e3a01004 	mov	r1, #4
   19578:	ebffc08d 	bl	97b4 <LogWrite>
   1957c:	e3540801 	cmp	r4, #65536	; 0x10000
   19580:	23a00000 	movcs	r0, #0
   19584:	2a000008 	bcs	195ac <RAMEmulator::blockWrite(unsigned long, unsigned char const*, unsigned long)+0x5c>
   19588:	e0843005 	add	r3, r4, r5
   1958c:	e3530801 	cmp	r3, #65536	; 0x10000
   19590:	e59f0024 	ldr	r0, [pc, #36]	; 195bc <RAMEmulator::blockWrite(unsigned long, unsigned char const*, unsigned long)+0x6c>
   19594:	82645801 	rsbhi	r5, r4, #65536	; 0x10000
   19598:	e1a02005 	mov	r2, r5
   1959c:	e1a01006 	mov	r1, r6
   195a0:	e0800004 	add	r0, r0, r4
   195a4:	eb004aa8 	bl	2c04c <memcpy>
   195a8:	e3a00001 	mov	r0, #1
   195ac:	e28dd008 	add	sp, sp, #8
   195b0:	e8bd8070 	pop	{r4, r5, r6, pc}
   195b4:	0002fc5c 	.word	0x0002fc5c
   195b8:	0002fc64 	.word	0x0002fc64
   195bc:	0005ad2c 	.word	0x0005ad2c

000195c0 <RAMEmulator::blockRead(unsigned long, unsigned char*, unsigned long)>:
   195c0:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
   195c4:	e3500801 	cmp	r0, #65536	; 0x10000
   195c8:	e24dd00c 	sub	sp, sp, #12
   195cc:	e1a03000 	mov	r3, r0
   195d0:	2a000009 	bcs	195fc <RAMEmulator::blockRead(unsigned long, unsigned char*, unsigned long)+0x3c>
   195d4:	e0820000 	add	r0, r2, r0
   195d8:	e59fc03c 	ldr	ip, [pc, #60]	; 1961c <RAMEmulator::blockRead(unsigned long, unsigned char*, unsigned long)+0x5c>
   195dc:	e3500801 	cmp	r0, #65536	; 0x10000
   195e0:	82632801 	rsbhi	r2, r3, #65536	; 0x10000
   195e4:	e1a00001 	mov	r0, r1
   195e8:	e08c1003 	add	r1, ip, r3
   195ec:	eb004a96 	bl	2c04c <memcpy>
   195f0:	e3a00001 	mov	r0, #1
   195f4:	e28dd00c 	add	sp, sp, #12
   195f8:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
   195fc:	e58d2000 	str	r2, [sp]
   19600:	e3a01004 	mov	r1, #4
   19604:	e59f2014 	ldr	r2, [pc, #20]	; 19620 <RAMEmulator::blockRead(unsigned long, unsigned char*, unsigned long)+0x60>
   19608:	e59f0014 	ldr	r0, [pc, #20]	; 19624 <RAMEmulator::blockRead(unsigned long, unsigned char*, unsigned long)+0x64>
   1960c:	ebffc068 	bl	97b4 <LogWrite>
   19610:	e3a00000 	mov	r0, #0
   19614:	e28dd00c 	add	sp, sp, #12
   19618:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
   1961c:	0005ad2c 	.word	0x0005ad2c
   19620:	0002fc80 	.word	0x0002fc80
   19624:	0002fc5c 	.word	0x0002fc5c

00019628 <RAMEmulator::getMemBuffer()>:
   19628:	e59f0000 	ldr	r0, [pc]	; 19630 <RAMEmulator::getMemBuffer()+0x8>
   1962c:	e12fff1e 	bx	lr
   19630:	0005ad2c 	.word	0x0005ad2c

00019634 <RAMEmulator::getMemBufferLen()>:
   19634:	e3a00801 	mov	r0, #65536	; 0x10000
   19638:	e12fff1e 	bx	lr

0001963c <RAMEmulator::service()>:
   1963c:	e12fff1e 	bx	lr

00019640 <RAMEmulator::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long, McDescriptorTable&)>:
   19640:	e59fc034 	ldr	ip, [pc, #52]	; 1967c <RAMEmulator::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long, McDescriptorTable&)+0x3c>
   19644:	e5dcc004 	ldrb	ip, [ip, #4]
   19648:	e35c0000 	cmp	ip, #0
   1964c:	0a000004 	beq	19664 <RAMEmulator::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long, McDescriptorTable&)+0x24>
   19650:	e3120001 	tst	r2, #1
   19654:	1a000004 	bne	1966c <RAMEmulator::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long, McDescriptorTable&)+0x2c>
   19658:	e3120002 	tst	r2, #2
   1965c:	159f201c 	ldrne	r2, [pc, #28]	; 19680 <RAMEmulator::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long, McDescriptorTable&)+0x40>
   19660:	17c21000 	strbne	r1, [r2, r0]
   19664:	e1a00003 	mov	r0, r3
   19668:	e12fff1e 	bx	lr
   1966c:	e59f300c 	ldr	r3, [pc, #12]	; 19680 <RAMEmulator::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long, McDescriptorTable&)+0x40>
   19670:	e7d33000 	ldrb	r3, [r3, r0]
   19674:	e1a00003 	mov	r0, r3
   19678:	e12fff1e 	bx	lr
   1967c:	0005ad24 	.word	0x0005ad24
   19680:	0005ad2c 	.word	0x0005ad2c

00019684 <StepTester::StepTester()>:
   19684:	e3a03000 	mov	r3, #0
   19688:	e92d4010 	push	{r4, lr}
   1968c:	e3a0c030 	mov	ip, #48	; 0x30
   19690:	e3a0e0c8 	mov	lr, #200	; 0xc8
   19694:	e59f4070 	ldr	r4, [pc, #112]	; 1970c <StepTester::StepTester()+0x88>
   19698:	e2801a01 	add	r1, r0, #4096	; 0x1000
   1969c:	e580301c 	str	r3, [r0, #28]
   196a0:	e5803018 	str	r3, [r0, #24]
   196a4:	e5803014 	str	r3, [r0, #20]
   196a8:	e5803010 	str	r3, [r0, #16]
   196ac:	e580300c 	str	r3, [r0, #12]
   196b0:	e5803008 	str	r3, [r0, #8]
   196b4:	e5803004 	str	r3, [r0, #4]
   196b8:	e5803000 	str	r3, [r0]
   196bc:	e5803030 	str	r3, [r0, #48]	; 0x30
   196c0:	e580302c 	str	r3, [r0, #44]	; 0x2c
   196c4:	e5803028 	str	r3, [r0, #40]	; 0x28
   196c8:	e5803024 	str	r3, [r0, #36]	; 0x24
   196cc:	e5803020 	str	r3, [r0, #32]
   196d0:	e5803044 	str	r3, [r0, #68]	; 0x44
   196d4:	e5803040 	str	r3, [r0, #64]	; 0x40
   196d8:	e580303c 	str	r3, [r0, #60]	; 0x3c
   196dc:	e5803038 	str	r3, [r0, #56]	; 0x38
   196e0:	e5803034 	str	r3, [r0, #52]	; 0x34
   196e4:	e5813948 	str	r3, [r1, #2376]	; 0x948
   196e8:	e5813954 	str	r3, [r1, #2388]	; 0x954
   196ec:	e581394c 	str	r3, [r1, #2380]	; 0x94c
   196f0:	e5813958 	str	r3, [r1, #2392]	; 0x958
   196f4:	e581495c 	str	r4, [r1, #2396]	; 0x95c
   196f8:	e581e950 	str	lr, [r1, #2384]	; 0x950
   196fc:	e581c960 	str	ip, [r1, #2400]	; 0x960
   19700:	e5813964 	str	r3, [r1, #2404]	; 0x964
   19704:	e5813968 	str	r3, [r1, #2408]	; 0x968
   19708:	e8bd8010 	pop	{r4, pc}
   1970c:	0000ffff 	.word	0x0000ffff

00019710 <StepTester::writeTestCode()>:
   19710:	e92d4030 	push	{r4, r5, lr}
   19714:	e3a04000 	mov	r4, #0
   19718:	e24dd00c 	sub	sp, sp, #12
   1971c:	e1a05000 	mov	r5, r0
   19720:	e58d4000 	str	r4, [sp]
   19724:	e3a03001 	mov	r3, #1
   19728:	e3a02018 	mov	r2, #24
   1972c:	e59f107c 	ldr	r1, [pc, #124]	; 197b0 <StepTester::writeTestCode()+0xa0>
   19730:	e3a00b0f 	mov	r0, #15360	; 0x3c00
   19734:	ebffe1ce 	bl	11e74 <McManager::blockWrite(unsigned long, unsigned char const*, unsigned long, bool, bool)>
   19738:	e3a03001 	mov	r3, #1
   1973c:	e3a02019 	mov	r2, #25
   19740:	e58d4000 	str	r4, [sp]
   19744:	e1a00004 	mov	r0, r4
   19748:	e59f1064 	ldr	r1, [pc, #100]	; 197b4 <StepTester::writeTestCode()+0xa4>
   1974c:	ebffe1c8 	bl	11e74 <McManager::blockWrite(unsigned long, unsigned char const*, unsigned long, bool, bool)>
   19750:	e3a01001 	mov	r1, #1
   19754:	e1a00001 	mov	r0, r1
   19758:	ebfffe50 	bl	190a0 <BusAccess::waitSetup(bool, bool)>
   1975c:	ebffe37b 	bl	12550 <McManager::targetReset()>
   19760:	e585401c 	str	r4, [r5, #28]
   19764:	e5854018 	str	r4, [r5, #24]
   19768:	e5854014 	str	r4, [r5, #20]
   1976c:	e5854010 	str	r4, [r5, #16]
   19770:	e585400c 	str	r4, [r5, #12]
   19774:	e5854008 	str	r4, [r5, #8]
   19778:	e5854004 	str	r4, [r5, #4]
   1977c:	e5854000 	str	r4, [r5]
   19780:	e5854030 	str	r4, [r5, #48]	; 0x30
   19784:	e585402c 	str	r4, [r5, #44]	; 0x2c
   19788:	e5854028 	str	r4, [r5, #40]	; 0x28
   1978c:	e5854024 	str	r4, [r5, #36]	; 0x24
   19790:	e5854020 	str	r4, [r5, #32]
   19794:	e5854044 	str	r4, [r5, #68]	; 0x44
   19798:	e5854040 	str	r4, [r5, #64]	; 0x40
   1979c:	e585403c 	str	r4, [r5, #60]	; 0x3c
   197a0:	e5854038 	str	r4, [r5, #56]	; 0x38
   197a4:	e5854034 	str	r4, [r5, #52]	; 0x34
   197a8:	e28dd00c 	add	sp, sp, #12
   197ac:	e8bd8030 	pop	{r4, r5, pc}
   197b0:	0002fc9c 	.word	0x0002fc9c
   197b4:	00042290 	.word	0x00042290

000197b8 <StepTester::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long)>:
   197b8:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   197bc:	e1a06000 	mov	r6, r0
   197c0:	e3a00002 	mov	r0, #2
   197c4:	e2864a01 	add	r4, r6, #4096	; 0x1000
   197c8:	e1a08002 	mov	r8, r2
   197cc:	e1a07001 	mov	r7, r1
   197d0:	e1a09003 	mov	r9, r3
   197d4:	ebffff1c 	bl	1944c <BusAccess::isrAssert(int)>
   197d8:	e5945964 	ldr	r5, [r4, #2404]	; 0x964
   197dc:	e5942964 	ldr	r2, [r4, #2404]	; 0x964
   197e0:	e352000d 	cmp	r2, #13
   197e4:	0a000009 	beq	19810 <StepTester::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long)+0x58>
   197e8:	9a000035 	bls	198c4 <StepTester::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long)+0x10c>
   197ec:	e3520013 	cmp	r2, #19
   197f0:	0a000016 	beq	19850 <StepTester::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long)+0x98>
   197f4:	9a000064 	bls	1998c <StepTester::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long)+0x1d4>
   197f8:	e3520016 	cmp	r2, #22
   197fc:	0a000013 	beq	19850 <StepTester::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long)+0x98>
   19800:	9a000073 	bls	199d4 <StepTester::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long)+0x21c>
   19804:	e3520018 	cmp	r2, #24
   19808:	0a000096 	beq	19a68 <StepTester::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long)+0x2b0>
   1980c:	2a000088 	bcs	19a34 <StepTester::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long)+0x27c>
   19810:	e3a03025 	mov	r3, #37	; 0x25
   19814:	e5942964 	ldr	r2, [r4, #2404]	; 0x964
   19818:	e2855001 	add	r5, r5, #1
   1981c:	e1520007 	cmp	r2, r7
   19820:	01530009 	cmpeq	r3, r9
   19824:	e59f1290 	ldr	r1, [pc, #656]	; 19abc <StepTester::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long)+0x304>
   19828:	1a00000f 	bne	1986c <StepTester::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long)+0xb4>
   1982c:	e59f2288 	ldr	r2, [pc, #648]	; 19abc <StepTester::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long)+0x304>
   19830:	e1510002 	cmp	r1, r2
   19834:	11510008 	cmpne	r1, r8
   19838:	1a00000b 	bne	1986c <StepTester::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long)+0xb4>
   1983c:	ea00001a 	b	198ac <StepTester::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long)+0xf4>
   19840:	e352000e 	cmp	r2, #14
   19844:	0a000095 	beq	19aa0 <StepTester::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long)+0x2e8>
   19848:	e352000f 	cmp	r2, #15
   1984c:	1a000026 	bne	198ec <StepTester::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long)+0x134>
   19850:	e3a03035 	mov	r3, #53	; 0x35
   19854:	e59f1260 	ldr	r1, [pc, #608]	; 19abc <StepTester::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long)+0x304>
   19858:	e2855001 	add	r5, r5, #1
   1985c:	e5942964 	ldr	r2, [r4, #2404]	; 0x964
   19860:	e1520007 	cmp	r2, r7
   19864:	01530009 	cmpeq	r3, r9
   19868:	0affffef 	beq	1982c <StepTester::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long)+0x74>
   1986c:	e5942954 	ldr	r2, [r4, #2388]	; 0x954
   19870:	e2822001 	add	r2, r2, #1
   19874:	e3520009 	cmp	r2, #9
   19878:	e5842954 	str	r2, [r4, #2388]	; 0x954
   1987c:	da00001d 	ble	198f8 <StepTester::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long)+0x140>
   19880:	e3a01001 	mov	r1, #1
   19884:	e3a00008 	mov	r0, #8
   19888:	ebfff79c 	bl	17700 <digitalWrite>
   1988c:	e3a00002 	mov	r0, #2
   19890:	ebfff5cf 	bl	16fd4 <microsDelay>
   19894:	e3a00008 	mov	r0, #8
   19898:	e3a01000 	mov	r1, #0
   1989c:	ebfff797 	bl	17700 <digitalWrite>
   198a0:	e3a00003 	mov	r0, #3
   198a4:	e2875001 	add	r5, r7, #1
   198a8:	ebfffee7 	bl	1944c <BusAccess::isrAssert(int)>
   198ac:	e5845964 	str	r5, [r4, #2404]	; 0x964
   198b0:	e5943968 	ldr	r3, [r4, #2408]	; 0x968
   198b4:	e59d0020 	ldr	r0, [sp, #32]
   198b8:	e2833001 	add	r3, r3, #1
   198bc:	e5843968 	str	r3, [r4, #2408]	; 0x968
   198c0:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   198c4:	e3520005 	cmp	r2, #5
   198c8:	0a000070 	beq	19a90 <StepTester::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long)+0x2d8>
   198cc:	8a000036 	bhi	199ac <StepTester::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long)+0x1f4>
   198d0:	e3520002 	cmp	r2, #2
   198d4:	0affffdd 	beq	19850 <StepTester::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long)+0x98>
   198d8:	8affffcc 	bhi	19810 <StepTester::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long)+0x58>
   198dc:	e3520000 	cmp	r2, #0
   198e0:	0a000064 	beq	19a78 <StepTester::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long)+0x2c0>
   198e4:	e3520001 	cmp	r2, #1
   198e8:	0affffc8 	beq	19810 <StepTester::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long)+0x58>
   198ec:	e59f11c8 	ldr	r1, [pc, #456]	; 19abc <StepTester::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long)+0x304>
   198f0:	e3a03025 	mov	r3, #37	; 0x25
   198f4:	eaffffd8 	b	1985c <StepTester::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long)+0xa4>
   198f8:	e5942950 	ldr	r2, [r4, #2384]	; 0x950
   198fc:	e3520000 	cmp	r2, #0
   19900:	0affffde 	beq	19880 <StepTester::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long)+0xc8>
   19904:	e594c948 	ldr	ip, [r4, #2376]	; 0x948
   19908:	e594094c 	ldr	r0, [r4, #2380]	; 0x94c
   1990c:	e15c0000 	cmp	ip, r0
   19910:	0a000008 	beq	19938 <StepTester::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long)+0x180>
   19914:	e594094c 	ldr	r0, [r4, #2380]	; 0x94c
   19918:	e594c948 	ldr	ip, [r4, #2376]	; 0x948
   1991c:	e150000c 	cmp	r0, ip
   19920:	e594c948 	ldr	ip, [r4, #2376]	; 0x948
   19924:	2a00003e 	bcs	19a24 <StepTester::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long)+0x26c>
   19928:	e242e001 	sub	lr, r2, #1
   1992c:	e3500000 	cmp	r0, #0
   19930:	015e000c 	cmpeq	lr, ip
   19934:	0affffd1 	beq	19880 <StepTester::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long)+0xc8>
   19938:	e5940948 	ldr	r0, [r4, #2376]	; 0x948
   1993c:	e0866280 	add	r6, r6, r0, lsl #5
   19940:	e5867048 	str	r7, [r6, #72]	; 0x48
   19944:	e5940964 	ldr	r0, [r4, #2404]	; 0x964
   19948:	e586004c 	str	r0, [r6, #76]	; 0x4c
   1994c:	e5868050 	str	r8, [r6, #80]	; 0x50
   19950:	e5861054 	str	r1, [r6, #84]	; 0x54
   19954:	e59d1020 	ldr	r1, [sp, #32]
   19958:	e5861058 	str	r1, [r6, #88]	; 0x58
   1995c:	e586905c 	str	r9, [r6, #92]	; 0x5c
   19960:	e5863060 	str	r3, [r6, #96]	; 0x60
   19964:	e5943968 	ldr	r3, [r4, #2408]	; 0x968
   19968:	e5863064 	str	r3, [r6, #100]	; 0x64
   1996c:	e5943948 	ldr	r3, [r4, #2376]	; 0x948
   19970:	e2833001 	add	r3, r3, #1
   19974:	e5843948 	str	r3, [r4, #2376]	; 0x948
   19978:	e5943948 	ldr	r3, [r4, #2376]	; 0x948
   1997c:	e1530002 	cmp	r3, r2
   19980:	23a03000 	movcs	r3, #0
   19984:	25843948 	strcs	r3, [r4, #2376]	; 0x948
   19988:	eaffffbc 	b	19880 <StepTester::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long)+0xc8>
   1998c:	e3520010 	cmp	r2, #16
   19990:	0a00002d 	beq	19a4c <StepTester::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long)+0x294>
   19994:	9affffa9 	bls	19840 <StepTester::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long)+0x88>
   19998:	e3520011 	cmp	r2, #17
   1999c:	0affffab 	beq	19850 <StepTester::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long)+0x98>
   199a0:	e3520012 	cmp	r2, #18
   199a4:	0affff99 	beq	19810 <StepTester::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long)+0x58>
   199a8:	eaffffcf 	b	198ec <StepTester::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long)+0x134>
   199ac:	e3520008 	cmp	r2, #8
   199b0:	8a000012 	bhi	19a00 <StepTester::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long)+0x248>
   199b4:	e3520007 	cmp	r2, #7
   199b8:	2affff94 	bcs	19810 <StepTester::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long)+0x58>
   199bc:	e59f30fc 	ldr	r3, [pc, #252]	; 19ac0 <StepTester::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long)+0x308>
   199c0:	e2855001 	add	r5, r5, #1
   199c4:	e584395c 	str	r3, [r4, #2396]	; 0x95c
   199c8:	e59f10ec 	ldr	r1, [pc, #236]	; 19abc <StepTester::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long)+0x304>
   199cc:	e3a03035 	mov	r3, #53	; 0x35
   199d0:	eaffffa1 	b	1985c <StepTester::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long)+0xa4>
   199d4:	e3520014 	cmp	r2, #20
   199d8:	0affff8c 	beq	19810 <StepTester::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long)+0x58>
   199dc:	e3520015 	cmp	r2, #21
   199e0:	1affffc1 	bne	198ec <StepTester::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long)+0x134>
   199e4:	e5943960 	ldr	r3, [r4, #2400]	; 0x960
   199e8:	e3530039 	cmp	r3, #57	; 0x39
   199ec:	8affff87 	bhi	19810 <StepTester::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long)+0x58>
   199f0:	e3a05002 	mov	r5, #2
   199f4:	e3a03025 	mov	r3, #37	; 0x25
   199f8:	e59f10bc 	ldr	r1, [pc, #188]	; 19abc <StepTester::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long)+0x304>
   199fc:	eaffff96 	b	1985c <StepTester::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long)+0xa4>
   19a00:	e3520009 	cmp	r2, #9
   19a04:	1affff91 	bne	19850 <StepTester::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long)+0x98>
   19a08:	e594395c 	ldr	r3, [r4, #2396]	; 0x95c
   19a0c:	e2855001 	add	r5, r5, #1
   19a10:	e2433001 	sub	r3, r3, #1
   19a14:	e584395c 	str	r3, [r4, #2396]	; 0x95c
   19a18:	e59f109c 	ldr	r1, [pc, #156]	; 19abc <StepTester::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long)+0x304>
   19a1c:	e3a03035 	mov	r3, #53	; 0x35
   19a20:	eaffff8d 	b	1985c <StepTester::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long)+0xa4>
   19a24:	e040000c 	sub	r0, r0, ip
   19a28:	e3500001 	cmp	r0, #1
   19a2c:	8affffc1 	bhi	19938 <StepTester::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long)+0x180>
   19a30:	eaffff92 	b	19880 <StepTester::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long)+0xc8>
   19a34:	e3520b0f 	cmp	r2, #15360	; 0x3c00
   19a38:	1affffab 	bne	198ec <StepTester::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long)+0x134>
   19a3c:	e5941960 	ldr	r1, [r4, #2400]	; 0x960
   19a40:	e3a05006 	mov	r5, #6
   19a44:	e3a03026 	mov	r3, #38	; 0x26
   19a48:	eaffff83 	b	1985c <StepTester::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long)+0xa4>
   19a4c:	e5943960 	ldr	r3, [r4, #2400]	; 0x960
   19a50:	e2855001 	add	r5, r5, #1
   19a54:	e2833001 	add	r3, r3, #1
   19a58:	e5843960 	str	r3, [r4, #2400]	; 0x960
   19a5c:	e59f1058 	ldr	r1, [pc, #88]	; 19abc <StepTester::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long)+0x304>
   19a60:	e3a03035 	mov	r3, #53	; 0x35
   19a64:	eaffff7c 	b	1985c <StepTester::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long)+0xa4>
   19a68:	e59f104c 	ldr	r1, [pc, #76]	; 19abc <StepTester::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long)+0x304>
   19a6c:	e3a05000 	mov	r5, #0
   19a70:	e3a03025 	mov	r3, #37	; 0x25
   19a74:	eaffff78 	b	1985c <StepTester::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long)+0xa4>
   19a78:	e3a03030 	mov	r3, #48	; 0x30
   19a7c:	e2855001 	add	r5, r5, #1
   19a80:	e5843960 	str	r3, [r4, #2400]	; 0x960
   19a84:	e59f1030 	ldr	r1, [pc, #48]	; 19abc <StepTester::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long)+0x304>
   19a88:	e3a03035 	mov	r3, #53	; 0x35
   19a8c:	eaffff72 	b	1985c <StepTester::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long)+0xa4>
   19a90:	e59f1024 	ldr	r1, [pc, #36]	; 19abc <StepTester::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long)+0x304>
   19a94:	e3a05b0f 	mov	r5, #15360	; 0x3c00
   19a98:	e3a03035 	mov	r3, #53	; 0x35
   19a9c:	eaffff6e 	b	1985c <StepTester::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long)+0xa4>
   19aa0:	e594395c 	ldr	r3, [r4, #2396]	; 0x95c
   19aa4:	e3530000 	cmp	r3, #0
   19aa8:	0affff58 	beq	19810 <StepTester::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long)+0x58>
   19aac:	e59f1008 	ldr	r1, [pc, #8]	; 19abc <StepTester::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long)+0x304>
   19ab0:	e3a05009 	mov	r5, #9
   19ab4:	e3a03025 	mov	r3, #37	; 0x25
   19ab8:	eaffff67 	b	1985c <StepTester::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long)+0xa4>
   19abc:	0000ffff 	.word	0x0000ffff
   19ac0:	00001fff 	.word	0x00001fff

00019ac4 <StepTester::service()>:
   19ac4:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19ac8:	e2805a01 	add	r5, r0, #4096	; 0x1000
   19acc:	e5953958 	ldr	r3, [r5, #2392]	; 0x958
   19ad0:	e24ddf9b 	sub	sp, sp, #620	; 0x26c
   19ad4:	e2833001 	add	r3, r3, #1
   19ad8:	e3530063 	cmp	r3, #99	; 0x63
   19adc:	d5853958 	strle	r3, [r5, #2392]	; 0x958
   19ae0:	da00007a 	ble	19cd0 <StepTester::service()+0x20c>
   19ae4:	e3a03000 	mov	r3, #0
   19ae8:	e5952954 	ldr	r2, [r5, #2388]	; 0x954
   19aec:	e5853958 	str	r3, [r5, #2392]	; 0x958
   19af0:	e3520014 	cmp	r2, #20
   19af4:	ca000075 	bgt	19cd0 <StepTester::service()+0x20c>
   19af8:	e28d7f9a 	add	r7, sp, #616	; 0x268
   19afc:	e56731f4 	strb	r3, [r7, #-500]!	; 0xfffffe0c
   19b00:	e1a06007 	mov	r6, r7
   19b04:	e1a09000 	mov	r9, r0
   19b08:	e1a08003 	mov	r8, r3
   19b0c:	e1a07000 	mov	r7, r0
   19b10:	e5952948 	ldr	r2, [r5, #2376]	; 0x948
   19b14:	e595394c 	ldr	r3, [r5, #2380]	; 0x94c
   19b18:	e1520003 	cmp	r2, r3
   19b1c:	0a000068 	beq	19cc4 <StepTester::service()+0x200>
   19b20:	e595494c 	ldr	r4, [r5, #2380]	; 0x94c
   19b24:	e1a00006 	mov	r0, r6
   19b28:	e1a04284 	lsl	r4, r4, #5
   19b2c:	eb004b1a 	bl	2c79c <strlen>
   19b30:	e0871004 	add	r1, r7, r4
   19b34:	e591e05c 	ldr	lr, [r1, #92]	; 0x5c
   19b38:	e5912060 	ldr	r2, [r1, #96]	; 0x60
   19b3c:	e31e0001 	tst	lr, #1
   19b40:	13a03052 	movne	r3, #82	; 0x52
   19b44:	03a03020 	moveq	r3, #32
   19b48:	e31e0002 	tst	lr, #2
   19b4c:	e58d3050 	str	r3, [sp, #80]	; 0x50
   19b50:	13a03057 	movne	r3, #87	; 0x57
   19b54:	03a03020 	moveq	r3, #32
   19b58:	e31e0004 	tst	lr, #4
   19b5c:	e58d3054 	str	r3, [sp, #84]	; 0x54
   19b60:	13a0304d 	movne	r3, #77	; 0x4d
   19b64:	03a03020 	moveq	r3, #32
   19b68:	e31e0008 	tst	lr, #8
   19b6c:	e58d3058 	str	r3, [sp, #88]	; 0x58
   19b70:	13a03049 	movne	r3, #73	; 0x49
   19b74:	03a03020 	moveq	r3, #32
   19b78:	e31e0010 	tst	lr, #16
   19b7c:	13a09031 	movne	r9, #49	; 0x31
   19b80:	03a09020 	moveq	r9, #32
   19b84:	e31e0020 	tst	lr, #32
   19b88:	13a0e054 	movne	lr, #84	; 0x54
   19b8c:	03a0e020 	moveq	lr, #32
   19b90:	e58d305c 	str	r3, [sp, #92]	; 0x5c
   19b94:	e5913064 	ldr	r3, [r1, #100]	; 0x64
   19b98:	e591c048 	ldr	ip, [r1, #72]	; 0x48
   19b9c:	e591b050 	ldr	fp, [r1, #80]	; 0x50
   19ba0:	e58dc048 	str	ip, [sp, #72]	; 0x48
   19ba4:	e591c04c 	ldr	ip, [r1, #76]	; 0x4c
   19ba8:	e58de064 	str	lr, [sp, #100]	; 0x64
   19bac:	e58dc04c 	str	ip, [sp, #76]	; 0x4c
   19bb0:	e59fe120 	ldr	lr, [pc, #288]	; 19cd8 <StepTester::service()+0x214>
   19bb4:	e591c054 	ldr	ip, [r1, #84]	; 0x54
   19bb8:	e58d9060 	str	r9, [sp, #96]	; 0x60
   19bbc:	e15c000e 	cmp	ip, lr
   19bc0:	15911054 	ldrne	r1, [r1, #84]	; 0x54
   19bc4:	03a01000 	moveq	r1, #0
   19bc8:	e3120001 	tst	r2, #1
   19bcc:	13a0a052 	movne	sl, #82	; 0x52
   19bd0:	03a0a020 	moveq	sl, #32
   19bd4:	e3120002 	tst	r2, #2
   19bd8:	13a09057 	movne	r9, #87	; 0x57
   19bdc:	03a09020 	moveq	r9, #32
   19be0:	e3120004 	tst	r2, #4
   19be4:	13a0c04d 	movne	ip, #77	; 0x4d
   19be8:	03a0c020 	moveq	ip, #32
   19bec:	e3120008 	tst	r2, #8
   19bf0:	13a0e049 	movne	lr, #73	; 0x49
   19bf4:	03a0e020 	moveq	lr, #32
   19bf8:	e3120010 	tst	r2, #16
   19bfc:	e58de06c 	str	lr, [sp, #108]	; 0x6c
   19c00:	13a0e031 	movne	lr, #49	; 0x31
   19c04:	03a0e020 	moveq	lr, #32
   19c08:	e3120020 	tst	r2, #32
   19c0c:	e58dc068 	str	ip, [sp, #104]	; 0x68
   19c10:	13a0c054 	movne	ip, #84	; 0x54
   19c14:	03a0c020 	moveq	ip, #32
   19c18:	e0874004 	add	r4, r7, r4
   19c1c:	e5942058 	ldr	r2, [r4, #88]	; 0x58
   19c20:	e58db004 	str	fp, [sp, #4]
   19c24:	e59db048 	ldr	fp, [sp, #72]	; 0x48
   19c28:	e59d4050 	ldr	r4, [sp, #80]	; 0x50
   19c2c:	e58db000 	str	fp, [sp]
   19c30:	e58d1024 	str	r1, [sp, #36]	; 0x24
   19c34:	e59db064 	ldr	fp, [sp, #100]	; 0x64
   19c38:	e59d104c 	ldr	r1, [sp, #76]	; 0x4c
   19c3c:	e58d4008 	str	r4, [sp, #8]
   19c40:	e58d2040 	str	r2, [sp, #64]	; 0x40
   19c44:	e58d1020 	str	r1, [sp, #32]
   19c48:	e58db01c 	str	fp, [sp, #28]
   19c4c:	e59db060 	ldr	fp, [sp, #96]	; 0x60
   19c50:	e59d4068 	ldr	r4, [sp, #104]	; 0x68
   19c54:	e58db018 	str	fp, [sp, #24]
   19c58:	e59db05c 	ldr	fp, [sp, #92]	; 0x5c
   19c5c:	e58d4030 	str	r4, [sp, #48]	; 0x30
   19c60:	e58db014 	str	fp, [sp, #20]
   19c64:	e59db058 	ldr	fp, [sp, #88]	; 0x58
   19c68:	e59d406c 	ldr	r4, [sp, #108]	; 0x6c
   19c6c:	e58db010 	str	fp, [sp, #16]
   19c70:	e59db054 	ldr	fp, [sp, #84]	; 0x54
   19c74:	e1a02008 	mov	r2, r8
   19c78:	e59f105c 	ldr	r1, [pc, #92]	; 19cdc <StepTester::service()+0x218>
   19c7c:	e58de038 	str	lr, [sp, #56]	; 0x38
   19c80:	e58dc03c 	str	ip, [sp, #60]	; 0x3c
   19c84:	e0860000 	add	r0, r6, r0
   19c88:	e58db00c 	str	fp, [sp, #12]
   19c8c:	e58da028 	str	sl, [sp, #40]	; 0x28
   19c90:	e58d902c 	str	r9, [sp, #44]	; 0x2c
   19c94:	e58d4034 	str	r4, [sp, #52]	; 0x34
   19c98:	ebffbf45 	bl	99b4 <ee_sprintf>
   19c9c:	e1a00006 	mov	r0, r6
   19ca0:	ebffe394 	bl	12af8 <McManager::logDebugMessage(char const*)>
   19ca4:	e595394c 	ldr	r3, [r5, #2380]	; 0x94c
   19ca8:	e5952950 	ldr	r2, [r5, #2384]	; 0x950
   19cac:	e2833001 	add	r3, r3, #1
   19cb0:	e585394c 	str	r3, [r5, #2380]	; 0x94c
   19cb4:	e595394c 	ldr	r3, [r5, #2380]	; 0x94c
   19cb8:	e1530002 	cmp	r3, r2
   19cbc:	23a03000 	movcs	r3, #0
   19cc0:	2585394c 	strcs	r3, [r5, #2380]	; 0x94c
   19cc4:	e2888001 	add	r8, r8, #1
   19cc8:	e3580014 	cmp	r8, #20
   19ccc:	1affff8f 	bne	19b10 <StepTester::service()+0x4c>
   19cd0:	e28ddf9b 	add	sp, sp, #620	; 0x26c
   19cd4:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19cd8:	0000ffff 	.word	0x0000ffff
   19cdc:	0002fcb8 	.word	0x0002fcb8

00019ce0 <TargetCPUZ80::store16BitVal(unsigned char*, int, unsigned short)>:
   19ce0:	e1a03422 	lsr	r3, r2, #8
   19ce4:	e7e02001 	strb	r2, [r0, r1]!
   19ce8:	e5c03001 	strb	r3, [r0, #1]
   19cec:	e12fff1e 	bx	lr

00019cf0 <TargetCPUZ80::getInjectToSetRegs(Z80Registers&, unsigned char*, unsigned long)>:
   19cf0:	e92d4070 	push	{r4, r5, r6, lr}
   19cf4:	e59f3170 	ldr	r3, [pc, #368]	; 19e6c <TargetCPUZ80::getInjectToSetRegs(Z80Registers&, unsigned char*, unsigned long)+0x17c>
   19cf8:	e5904018 	ldr	r4, [r0, #24]
   19cfc:	e590c020 	ldr	ip, [r0, #32]
   19d00:	e5906024 	ldr	r6, [r0, #36]	; 0x24
   19d04:	e5c3c00a 	strb	ip, [r3, #10]
   19d08:	e6ff5074 	uxth	r5, r4
   19d0c:	e6ffc07c 	uxth	ip, ip
   19d10:	e1a05425 	lsr	r5, r5, #8
   19d14:	e1a0c42c 	lsr	ip, ip, #8
   19d18:	e590e01c 	ldr	lr, [r0, #28]
   19d1c:	e5c3c00b 	strb	ip, [r3, #11]
   19d20:	e5c35004 	strb	r5, [r3, #4]
   19d24:	e6ffc076 	uxth	ip, r6
   19d28:	e5905028 	ldr	r5, [r0, #40]	; 0x28
   19d2c:	e1a0c42c 	lsr	ip, ip, #8
   19d30:	e5c3c00e 	strb	ip, [r3, #14]
   19d34:	e5c3e007 	strb	lr, [r3, #7]
   19d38:	e6ffc075 	uxth	ip, r5
   19d3c:	e6ffe07e 	uxth	lr, lr
   19d40:	e1a0e42e 	lsr	lr, lr, #8
   19d44:	e1a0c42c 	lsr	ip, ip, #8
   19d48:	e5c3c011 	strb	ip, [r3, #17]
   19d4c:	e5c35010 	strb	r5, [r3, #16]
   19d50:	e5c3600d 	strb	r6, [r3, #13]
   19d54:	e5c3e008 	strb	lr, [r3, #8]
   19d58:	e590e004 	ldr	lr, [r0, #4]
   19d5c:	e5c34003 	strb	r4, [r3, #3]
   19d60:	e6ffc07e 	uxth	ip, lr
   19d64:	e1a0c42c 	lsr	ip, ip, #8
   19d68:	e5c3c025 	strb	ip, [r3, #37]	; 0x25
   19d6c:	e5c3e024 	strb	lr, [r3, #36]	; 0x24
   19d70:	e590e008 	ldr	lr, [r0, #8]
   19d74:	e590402c 	ldr	r4, [r0, #44]	; 0x2c
   19d78:	e6ffc07e 	uxth	ip, lr
   19d7c:	e1a0c42c 	lsr	ip, ip, #8
   19d80:	e5c3c015 	strb	ip, [r3, #21]
   19d84:	e5c3e014 	strb	lr, [r3, #20]
   19d88:	e590e00c 	ldr	lr, [r0, #12]
   19d8c:	e6ffc07e 	uxth	ip, lr
   19d90:	e1a0c42c 	lsr	ip, ip, #8
   19d94:	e5c3e017 	strb	lr, [r3, #23]
   19d98:	e5c3c018 	strb	ip, [r3, #24]
   19d9c:	e590c010 	ldr	ip, [r0, #16]
   19da0:	e6ffe074 	uxth	lr, r4
   19da4:	e5c3c01a 	strb	ip, [r3, #26]
   19da8:	e6ffc07c 	uxth	ip, ip
   19dac:	e1a0e42e 	lsr	lr, lr, #8
   19db0:	e1a0c42c 	lsr	ip, ip, #8
   19db4:	e5c3401d 	strb	r4, [r3, #29]
   19db8:	e5c3e01e 	strb	lr, [r3, #30]
   19dbc:	e5c3c01b 	strb	ip, [r3, #27]
   19dc0:	e590c014 	ldr	ip, [r0, #20]
   19dc4:	e5c3c021 	strb	ip, [r3, #33]	; 0x21
   19dc8:	e5904034 	ldr	r4, [r0, #52]	; 0x34
   19dcc:	e6ffe07c 	uxth	lr, ip
   19dd0:	e1a0e42e 	lsr	lr, lr, #8
   19dd4:	e5c34027 	strb	r4, [r3, #39]	; 0x27
   19dd8:	e5c3e022 	strb	lr, [r3, #34]	; 0x22
   19ddc:	e1a0e44c 	asr	lr, ip, #8
   19de0:	e590c038 	ldr	ip, [r0, #56]	; 0x38
   19de4:	e5c3e02f 	strb	lr, [r3, #47]	; 0x2f
   19de8:	e28cc0fb 	add	ip, ip, #251	; 0xfb
   19dec:	e27ce000 	rsbs	lr, ip, #0
   19df0:	e6efe07e 	uxtb	lr, lr
   19df4:	e6efc07c 	uxtb	ip, ip
   19df8:	526ec000 	rsbpl	ip, lr, #0
   19dfc:	e5c3c02b 	strb	ip, [r3, #43]	; 0x2b
   19e00:	e590c03c 	ldr	ip, [r0, #60]	; 0x3c
   19e04:	e35c0000 	cmp	ip, #0
   19e08:	03a0c046 	moveq	ip, #70	; 0x46
   19e0c:	0a000002 	beq	19e1c <TargetCPUZ80::getInjectToSetRegs(Z80Registers&, unsigned char*, unsigned long)+0x12c>
   19e10:	e35c0001 	cmp	ip, #1
   19e14:	03a0c056 	moveq	ip, #86	; 0x56
   19e18:	13a0c05e 	movne	ip, #94	; 0x5e
   19e1c:	e5c3c031 	strb	ip, [r3, #49]	; 0x31
   19e20:	e590c040 	ldr	ip, [r0, #64]	; 0x40
   19e24:	e35c0000 	cmp	ip, #0
   19e28:	03a0c0f3 	moveq	ip, #243	; 0xf3
   19e2c:	13a0c0fb 	movne	ip, #251	; 0xfb
   19e30:	e5c3c032 	strb	ip, [r3, #50]	; 0x32
   19e34:	e5900000 	ldr	r0, [r0]
   19e38:	e3520035 	cmp	r2, #53	; 0x35
   19e3c:	e6ffc070 	uxth	ip, r0
   19e40:	e1a0c42c 	lsr	ip, ip, #8
   19e44:	e5c30034 	strb	r0, [r3, #52]	; 0x34
   19e48:	e5c3c035 	strb	ip, [r3, #53]	; 0x35
   19e4c:	8a000001 	bhi	19e58 <TargetCPUZ80::getInjectToSetRegs(Z80Registers&, unsigned char*, unsigned long)+0x168>
   19e50:	e3a00000 	mov	r0, #0
   19e54:	e8bd8070 	pop	{r4, r5, r6, pc}
   19e58:	e1a00001 	mov	r0, r1
   19e5c:	e59f1008 	ldr	r1, [pc, #8]	; 19e6c <TargetCPUZ80::getInjectToSetRegs(Z80Registers&, unsigned char*, unsigned long)+0x17c>
   19e60:	eb004879 	bl	2c04c <memcpy>
   19e64:	e3a00036 	mov	r0, #54	; 0x36
   19e68:	e8bd8070 	pop	{r4, r5, r6, pc}
   19e6c:	000422ac 	.word	0x000422ac

00019e70 <TargetCPUZ80::getSnippetToSetRegs(unsigned long, Z80Registers&, unsigned char*, unsigned long)>:
   19e70:	e59fc18c 	ldr	ip, [pc, #396]	; 1a004 <TargetCPUZ80::getSnippetToSetRegs(unsigned long, Z80Registers&, unsigned char*, unsigned long)+0x194>
   19e74:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   19e78:	e591e01c 	ldr	lr, [r1, #28]
   19e7c:	e5918018 	ldr	r8, [r1, #24]
   19e80:	e5917020 	ldr	r7, [r1, #32]
   19e84:	e5cce048 	strb	lr, [ip, #72]	; 0x48
   19e88:	e6ffe07e 	uxth	lr, lr
   19e8c:	e1a0e42e 	lsr	lr, lr, #8
   19e90:	e5916024 	ldr	r6, [r1, #36]	; 0x24
   19e94:	e5915028 	ldr	r5, [r1, #40]	; 0x28
   19e98:	e5cce049 	strb	lr, [ip, #73]	; 0x49
   19e9c:	e6ff4078 	uxth	r4, r8
   19ea0:	e6ffe077 	uxth	lr, r7
   19ea4:	e1a04424 	lsr	r4, r4, #8
   19ea8:	e1a0e42e 	lsr	lr, lr, #8
   19eac:	e5cce04c 	strb	lr, [ip, #76]	; 0x4c
   19eb0:	e5cc4045 	strb	r4, [ip, #69]	; 0x45
   19eb4:	e6ffe075 	uxth	lr, r5
   19eb8:	e6ff4076 	uxth	r4, r6
   19ebc:	e1a04424 	lsr	r4, r4, #8
   19ec0:	e1a0e42e 	lsr	lr, lr, #8
   19ec4:	e5cc5051 	strb	r5, [ip, #81]	; 0x51
   19ec8:	e5cce052 	strb	lr, [ip, #82]	; 0x52
   19ecc:	e5cc704b 	strb	r7, [ip, #75]	; 0x4b
   19ed0:	e5cc604e 	strb	r6, [ip, #78]	; 0x4e
   19ed4:	e5cc404f 	strb	r4, [ip, #79]	; 0x4f
   19ed8:	e5cc8044 	strb	r8, [ip, #68]	; 0x44
   19edc:	e5914004 	ldr	r4, [r1, #4]
   19ee0:	e591502c 	ldr	r5, [r1, #44]	; 0x2c
   19ee4:	e6ffe074 	uxth	lr, r4
   19ee8:	e1a0e42e 	lsr	lr, lr, #8
   19eec:	e5cce062 	strb	lr, [ip, #98]	; 0x62
   19ef0:	e5cc4061 	strb	r4, [ip, #97]	; 0x61
   19ef4:	e5914008 	ldr	r4, [r1, #8]
   19ef8:	e2800006 	add	r0, r0, #6
   19efc:	e6ffe074 	uxth	lr, r4
   19f00:	e1a0e42e 	lsr	lr, lr, #8
   19f04:	e5cce056 	strb	lr, [ip, #86]	; 0x56
   19f08:	e5cc4055 	strb	r4, [ip, #85]	; 0x55
   19f0c:	e591400c 	ldr	r4, [r1, #12]
   19f10:	e6ff0070 	uxth	r0, r0
   19f14:	e6ffe074 	uxth	lr, r4
   19f18:	e1a0e42e 	lsr	lr, lr, #8
   19f1c:	e5cc4058 	strb	r4, [ip, #88]	; 0x58
   19f20:	e5cce059 	strb	lr, [ip, #89]	; 0x59
   19f24:	e5916010 	ldr	r6, [r1, #16]
   19f28:	e6ffe075 	uxth	lr, r5
   19f2c:	e6ff4076 	uxth	r4, r6
   19f30:	e1a04424 	lsr	r4, r4, #8
   19f34:	e5cc405c 	strb	r4, [ip, #92]	; 0x5c
   19f38:	e1a0e42e 	lsr	lr, lr, #8
   19f3c:	e1a04420 	lsr	r4, r0, #8
   19f40:	e5cc0039 	strb	r0, [ip, #57]	; 0x39
   19f44:	e5cc403a 	strb	r4, [ip, #58]	; 0x3a
   19f48:	e5cc503e 	strb	r5, [ip, #62]	; 0x3e
   19f4c:	e5cc605b 	strb	r6, [ip, #91]	; 0x5b
   19f50:	e5cce03f 	strb	lr, [ip, #63]	; 0x3f
   19f54:	e5910034 	ldr	r0, [r1, #52]	; 0x34
   19f58:	e5914014 	ldr	r4, [r1, #20]
   19f5c:	e5cc0064 	strb	r0, [ip, #100]	; 0x64
   19f60:	e591e038 	ldr	lr, [r1, #56]	; 0x38
   19f64:	e1a00444 	asr	r0, r4, #8
   19f68:	e28ee0fb 	add	lr, lr, #251	; 0xfb
   19f6c:	e27e5000 	rsbs	r5, lr, #0
   19f70:	e6ef5075 	uxtb	r5, r5
   19f74:	e6efe07e 	uxtb	lr, lr
   19f78:	5265e000 	rsbpl	lr, r5, #0
   19f7c:	e5cce068 	strb	lr, [ip, #104]	; 0x68
   19f80:	e5cc006c 	strb	r0, [ip, #108]	; 0x6c
   19f84:	e591003c 	ldr	r0, [r1, #60]	; 0x3c
   19f88:	e6ffe074 	uxth	lr, r4
   19f8c:	e1a0e42e 	lsr	lr, lr, #8
   19f90:	e3500000 	cmp	r0, #0
   19f94:	e5cc4040 	strb	r4, [ip, #64]	; 0x40
   19f98:	e5cce041 	strb	lr, [ip, #65]	; 0x41
   19f9c:	03a00046 	moveq	r0, #70	; 0x46
   19fa0:	0a000002 	beq	19fb0 <TargetCPUZ80::getSnippetToSetRegs(unsigned long, Z80Registers&, unsigned char*, unsigned long)+0x140>
   19fa4:	e3500001 	cmp	r0, #1
   19fa8:	03a00056 	moveq	r0, #86	; 0x56
   19fac:	13a0005e 	movne	r0, #94	; 0x5e
   19fb0:	e5cc006e 	strb	r0, [ip, #110]	; 0x6e
   19fb4:	e5910040 	ldr	r0, [r1, #64]	; 0x40
   19fb8:	e3500000 	cmp	r0, #0
   19fbc:	03a000f3 	moveq	r0, #243	; 0xf3
   19fc0:	13a000fb 	movne	r0, #251	; 0xfb
   19fc4:	e5cc006f 	strb	r0, [ip, #111]	; 0x6f
   19fc8:	e5910000 	ldr	r0, [r1]
   19fcc:	e353003a 	cmp	r3, #58	; 0x3a
   19fd0:	e6ff1070 	uxth	r1, r0
   19fd4:	e1a01421 	lsr	r1, r1, #8
   19fd8:	e5cc0071 	strb	r0, [ip, #113]	; 0x71
   19fdc:	e5cc1072 	strb	r1, [ip, #114]	; 0x72
   19fe0:	8a000001 	bhi	19fec <TargetCPUZ80::getSnippetToSetRegs(unsigned long, Z80Registers&, unsigned char*, unsigned long)+0x17c>
   19fe4:	e3a00000 	mov	r0, #0
   19fe8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   19fec:	e1a00002 	mov	r0, r2
   19ff0:	e59f1010 	ldr	r1, [pc, #16]	; 1a008 <TargetCPUZ80::getSnippetToSetRegs(unsigned long, Z80Registers&, unsigned char*, unsigned long)+0x198>
   19ff4:	e1a02003 	mov	r2, r3
   19ff8:	eb004813 	bl	2c04c <memcpy>
   19ffc:	e3a0003b 	mov	r0, #59	; 0x3b
   1a000:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   1a004:	000422ac 	.word	0x000422ac
   1a008:	000422e4 	.word	0x000422e4

0001a00c <TargetDebug::enableBreakpoint(int, bool) [clone .part.0]>:
   1a00c:	e92d4010 	push	{r4, lr}
   1a010:	e3a0e000 	mov	lr, #0
   1a014:	e59f4048 	ldr	r4, [pc, #72]	; 1a064 <TargetDebug::enableBreakpoint(int, bool) [clone .part.0]+0x58>
   1a018:	e1a0c00e 	mov	ip, lr
   1a01c:	e1a0300e 	mov	r3, lr
   1a020:	e1a02004 	mov	r2, r4
   1a024:	e0800080 	add	r0, r0, r0, lsl #1
   1a028:	e0800180 	add	r0, r0, r0, lsl #3
   1a02c:	e7c41100 	strb	r1, [r4, r0, lsl #2]
   1a030:	e59f0030 	ldr	r0, [pc, #48]	; 1a068 <TargetDebug::enableBreakpoint(int, bool) [clone .part.0]+0x5c>
   1a034:	e580e000 	str	lr, [r0]
   1a038:	e5d21000 	ldrb	r1, [r2]
   1a03c:	e282206c 	add	r2, r2, #108	; 0x6c
   1a040:	e3510000 	cmp	r1, #0
   1a044:	1080110c 	addne	r1, r0, ip, lsl #2
   1a048:	15813004 	strne	r3, [r1, #4]
   1a04c:	e2833001 	add	r3, r3, #1
   1a050:	128cc001 	addne	ip, ip, #1
   1a054:	e3530064 	cmp	r3, #100	; 0x64
   1a058:	1afffff6 	bne	1a038 <TargetDebug::enableBreakpoint(int, bool) [clone .part.0]+0x2c>
   1a05c:	e580c000 	str	ip, [r0]
   1a060:	e8bd8010 	pop	{r4, pc}
   1a064:	0006aed0 	.word	0x0006aed0
   1a068:	0006ad2c 	.word	0x0006ad2c

0001a06c <TargetDebug::TargetDebug()>:
   1a06c:	e92d4070 	push	{r4, r5, r6, lr}
   1a070:	e1a04000 	mov	r4, r0
   1a074:	e3a05000 	mov	r5, #0
   1a078:	e28000cc 	add	r0, r0, #204	; 0xcc
   1a07c:	e5845020 	str	r5, [r4, #32]
   1a080:	e584501c 	str	r5, [r4, #28]
   1a084:	e5845018 	str	r5, [r4, #24]
   1a088:	e5845014 	str	r5, [r4, #20]
   1a08c:	e5845010 	str	r5, [r4, #16]
   1a090:	e584500c 	str	r5, [r4, #12]
   1a094:	e5845008 	str	r5, [r4, #8]
   1a098:	e5845004 	str	r5, [r4, #4]
   1a09c:	e5845034 	str	r5, [r4, #52]	; 0x34
   1a0a0:	e5845030 	str	r5, [r4, #48]	; 0x30
   1a0a4:	e584502c 	str	r5, [r4, #44]	; 0x2c
   1a0a8:	e5845028 	str	r5, [r4, #40]	; 0x28
   1a0ac:	e5845024 	str	r5, [r4, #36]	; 0x24
   1a0b0:	e5845048 	str	r5, [r4, #72]	; 0x48
   1a0b4:	e5845044 	str	r5, [r4, #68]	; 0x44
   1a0b8:	e5845040 	str	r5, [r4, #64]	; 0x40
   1a0bc:	e584503c 	str	r5, [r4, #60]	; 0x3c
   1a0c0:	e5845038 	str	r5, [r4, #56]	; 0x38
   1a0c4:	ebfffd6e 	bl	19684 <StepTester::StepTester()>
   1a0c8:	e1a02005 	mov	r2, r5
   1a0cc:	e59f3080 	ldr	r3, [pc, #128]	; 1a154 <TargetDebug::TargetDebug()+0xe8>
   1a0d0:	e59f0080 	ldr	r0, [pc, #128]	; 1a158 <TargetDebug::TargetDebug()+0xec>
   1a0d4:	e2831c2a 	add	r1, r3, #10752	; 0x2a00
   1a0d8:	e5845000 	str	r5, [r4]
   1a0dc:	e5c4504c 	strb	r5, [r4, #76]	; 0x4c
   1a0e0:	e5c4504d 	strb	r5, [r4, #77]	; 0x4d
   1a0e4:	e5c45050 	strb	r5, [r4, #80]	; 0x50
   1a0e8:	e5c45051 	strb	r5, [r4, #81]	; 0x51
   1a0ec:	e5c45052 	strb	r5, [r4, #82]	; 0x52
   1a0f0:	e5c45058 	strb	r5, [r4, #88]	; 0x58
   1a0f4:	e5c45059 	strb	r5, [r4, #89]	; 0x59
   1a0f8:	e584505c 	str	r5, [r4, #92]	; 0x5c
   1a0fc:	e5845060 	str	r5, [r4, #96]	; 0x60
   1a100:	e5840054 	str	r0, [r4, #84]	; 0x54
   1a104:	e2811030 	add	r1, r1, #48	; 0x30
   1a108:	e4c3206c 	strb	r2, [r3], #108	; 0x6c
   1a10c:	e1530001 	cmp	r3, r1
   1a110:	1afffffc 	bne	1a108 <TargetDebug::TargetDebug()+0x9c>
   1a114:	e3a0c001 	mov	ip, #1
   1a118:	e59f303c 	ldr	r3, [pc, #60]	; 1a15c <TargetDebug::TargetDebug()+0xf0>
   1a11c:	e59f003c 	ldr	r0, [pc, #60]	; 1a160 <TargetDebug::TargetDebug()+0xf4>
   1a120:	e2841a01 	add	r1, r4, #4096	; 0x1000
   1a124:	e58420c8 	str	r2, [r4, #200]	; 0xc8
   1a128:	e5c4204f 	strb	r2, [r4, #79]	; 0x4f
   1a12c:	e5c4204e 	strb	r2, [r4, #78]	; 0x4e
   1a130:	e5c0c000 	strb	ip, [r0]
   1a134:	e5832000 	str	r2, [r3]
   1a138:	e5c32194 	strb	r2, [r3, #404]	; 0x194
   1a13c:	e5c32195 	strb	r2, [r3, #405]	; 0x195
   1a140:	e5c32196 	strb	r2, [r3, #406]	; 0x196
   1a144:	e5832198 	str	r2, [r3, #408]	; 0x198
   1a148:	e5c12a38 	strb	r2, [r1, #2616]	; 0xa38
   1a14c:	e1a00004 	mov	r0, r4
   1a150:	e8bd8070 	pop	{r4, r5, r6, pc}
   1a154:	0006aed0 	.word	0x0006aed0
   1a158:	0007a120 	.word	0x0007a120
   1a15c:	0006ad2c 	.word	0x0006ad2c
   1a160:	00042320 	.word	0x00042320

0001a164 <TargetDebug::get()>:
   1a164:	e59f0000 	ldr	r0, [pc]	; 1a16c <TargetDebug::get()+0x8>
   1a168:	e12fff1e 	bx	lr
   1a16c:	0006d900 	.word	0x0006d900

0001a170 <TargetDebug::setup(McBase*)>:
   1a170:	e5801000 	str	r1, [r0]
   1a174:	e12fff1e 	bx	lr

0001a178 <TargetDebug::enableBreakpoint(int, bool)>:
   1a178:	e3510063 	cmp	r1, #99	; 0x63
   1a17c:	812fff1e 	bxhi	lr
   1a180:	e92d4010 	push	{r4, lr}
   1a184:	e3a0e000 	mov	lr, #0
   1a188:	e59f4048 	ldr	r4, [pc, #72]	; 1a1d8 <TargetDebug::enableBreakpoint(int, bool)+0x60>
   1a18c:	e1a0c00e 	mov	ip, lr
   1a190:	e1a0300e 	mov	r3, lr
   1a194:	e1a00004 	mov	r0, r4
   1a198:	e0811081 	add	r1, r1, r1, lsl #1
   1a19c:	e0811181 	add	r1, r1, r1, lsl #3
   1a1a0:	e7c42101 	strb	r2, [r4, r1, lsl #2]
   1a1a4:	e59f1030 	ldr	r1, [pc, #48]	; 1a1dc <TargetDebug::enableBreakpoint(int, bool)+0x64>
   1a1a8:	e581e000 	str	lr, [r1]
   1a1ac:	e5d02000 	ldrb	r2, [r0]
   1a1b0:	e280006c 	add	r0, r0, #108	; 0x6c
   1a1b4:	e3520000 	cmp	r2, #0
   1a1b8:	1081210c 	addne	r2, r1, ip, lsl #2
   1a1bc:	15823004 	strne	r3, [r2, #4]
   1a1c0:	e2833001 	add	r3, r3, #1
   1a1c4:	128cc001 	addne	ip, ip, #1
   1a1c8:	e3530064 	cmp	r3, #100	; 0x64
   1a1cc:	1afffff6 	bne	1a1ac <TargetDebug::enableBreakpoint(int, bool)+0x34>
   1a1d0:	e581c000 	str	ip, [r1]
   1a1d4:	e8bd8010 	pop	{r4, pc}
   1a1d8:	0006aed0 	.word	0x0006aed0
   1a1dc:	0006ad2c 	.word	0x0006ad2c

0001a1e0 <TargetDebug::setBreakpointMessage(int, char const*)>:
   1a1e0:	e3510063 	cmp	r1, #99	; 0x63
   1a1e4:	83a03000 	movhi	r3, #0
   1a1e8:	93a03001 	movls	r3, #1
   1a1ec:	e3520000 	cmp	r2, #0
   1a1f0:	03a03000 	moveq	r3, #0
   1a1f4:	e3530000 	cmp	r3, #0
   1a1f8:	012fff1e 	bxeq	lr
   1a1fc:	e0813081 	add	r3, r1, r1, lsl #1
   1a200:	e59f0010 	ldr	r0, [pc, #16]	; 1a218 <TargetDebug::setBreakpointMessage(int, char const*)+0x38>
   1a204:	e0833183 	add	r3, r3, r3, lsl #3
   1a208:	e1a01002 	mov	r1, r2
   1a20c:	e0800103 	add	r0, r0, r3, lsl #2
   1a210:	e3a02064 	mov	r2, #100	; 0x64
   1a214:	ea00494b 	b	2c748 <strlcpy>
   1a218:	0006aed1 	.word	0x0006aed1

0001a21c <TargetDebug::setBreakpointPCAddr(int, unsigned long)>:
   1a21c:	e3510063 	cmp	r1, #99	; 0x63
   1a220:	90811081 	addls	r1, r1, r1, lsl #1
   1a224:	959f300c 	ldrls	r3, [pc, #12]	; 1a238 <TargetDebug::setBreakpointPCAddr(int, unsigned long)+0x1c>
   1a228:	90811181 	addls	r1, r1, r1, lsl #3
   1a22c:	90831101 	addls	r1, r3, r1, lsl #2
   1a230:	95812068 	strls	r2, [r1, #104]	; 0x68
   1a234:	e12fff1e 	bx	lr
   1a238:	0006aed0 	.word	0x0006aed0

0001a23c <TargetDebug::startGetRegisterSequence()>:
   1a23c:	e3a03000 	mov	r3, #0
   1a240:	e3a02001 	mov	r2, #1
   1a244:	e5c03059 	strb	r3, [r0, #89]	; 0x59
   1a248:	e5c02058 	strb	r2, [r0, #88]	; 0x58
   1a24c:	e580305c 	str	r3, [r0, #92]	; 0x5c
   1a250:	e5803060 	str	r3, [r0, #96]	; 0x60
   1a254:	e12fff1e 	bx	lr

0001a258 <TargetDebug::startSetRegisterSequence(Z80Registers*)>:
   1a258:	e92d4010 	push	{r4, lr}
   1a25c:	e3510000 	cmp	r1, #0
   1a260:	e24dd008 	sub	sp, sp, #8
   1a264:	e1a04000 	mov	r4, r0
   1a268:	0a000002 	beq	1a278 <TargetDebug::startSetRegisterSequence(Z80Registers*)+0x20>
   1a26c:	e3a02048 	mov	r2, #72	; 0x48
   1a270:	e2800004 	add	r0, r0, #4
   1a274:	eb004774 	bl	2c04c <memcpy>
   1a278:	e3a03000 	mov	r3, #0
   1a27c:	e28d0008 	add	r0, sp, #8
   1a280:	e2841052 	add	r1, r4, #82	; 0x52
   1a284:	e5603001 	strb	r3, [r0, #-1]!
   1a288:	ebfffb58 	bl	18ff0 <BusAccess::waitGet(bool&, bool&)>
   1a28c:	ebfffb4a 	bl	18fbc <BusAccess::clockCurFreqHz()>
   1a290:	e5d41052 	ldrb	r1, [r4, #82]	; 0x52
   1a294:	e59f2058 	ldr	r2, [pc, #88]	; 1a2f4 <TargetDebug::startSetRegisterSequence(Z80Registers*)+0x9c>
   1a298:	e3510000 	cmp	r1, #0
   1a29c:	e59f3054 	ldr	r3, [pc, #84]	; 1a2f8 <TargetDebug::startSetRegisterSequence(Z80Registers*)+0xa0>
   1a2a0:	e3a01005 	mov	r1, #5
   1a2a4:	01a03002 	moveq	r3, r2
   1a2a8:	e5840054 	str	r0, [r4, #84]	; 0x54
   1a2ac:	e59f2048 	ldr	r2, [pc, #72]	; 1a2fc <TargetDebug::startSetRegisterSequence(Z80Registers*)+0xa4>
   1a2b0:	e59f0048 	ldr	r0, [pc, #72]	; 1a300 <TargetDebug::startSetRegisterSequence(Z80Registers*)+0xa8>
   1a2b4:	ebffbd3e 	bl	97b4 <LogWrite>
   1a2b8:	e3a00001 	mov	r0, #1
   1a2bc:	e5d43052 	ldrb	r3, [r4, #82]	; 0x52
   1a2c0:	e5c40051 	strb	r0, [r4, #81]	; 0x51
   1a2c4:	e3530000 	cmp	r3, #0
   1a2c8:	05c4304f 	strbeq	r3, [r4, #79]	; 0x4f
   1a2cc:	ebfffb51 	bl	19018 <BusAccess::waitOnInstruction(bool)>
   1a2d0:	e59f002c 	ldr	r0, [pc, #44]	; 1a304 <TargetDebug::startSetRegisterSequence(Z80Registers*)+0xac>
   1a2d4:	ebfffaeb 	bl	18e88 <BusAccess::clockSetFreqHz(unsigned long)>
   1a2d8:	e3a03000 	mov	r3, #0
   1a2dc:	e3a02002 	mov	r2, #2
   1a2e0:	e5c43059 	strb	r3, [r4, #89]	; 0x59
   1a2e4:	e5c42058 	strb	r2, [r4, #88]	; 0x58
   1a2e8:	e5843060 	str	r3, [r4, #96]	; 0x60
   1a2ec:	e28dd008 	add	sp, sp, #8
   1a2f0:	e8bd8010 	pop	{r4, pc}
   1a2f4:	0002ee1c 	.word	0x0002ee1c
   1a2f8:	0002ee38 	.word	0x0002ee38
   1a2fc:	0002fd20 	.word	0x0002fd20
   1a300:	0002fd04 	.word	0x0002fd04
   1a304:	0007a120 	.word	0x0007a120

0001a308 <TargetDebug::commandMatch(char const*, char const*)>:
   1a308:	e5d10000 	ldrb	r0, [r1]
   1a30c:	e92d4070 	push	{r4, r5, r6, lr}
   1a310:	e3500020 	cmp	r0, #32
   1a314:	1a000002 	bne	1a324 <TargetDebug::commandMatch(char const*, char const*)+0x1c>
   1a318:	e5f10001 	ldrb	r0, [r1, #1]!
   1a31c:	e3500020 	cmp	r0, #32
   1a320:	0afffffc 	beq	1a318 <TargetDebug::commandMatch(char const*, char const*)+0x10>
   1a324:	e1a04001 	mov	r4, r1
   1a328:	e2425001 	sub	r5, r2, #1
   1a32c:	ea000008 	b	1a354 <TargetDebug::commandMatch(char const*, char const*)+0x4c>
   1a330:	e3530000 	cmp	r3, #0
   1a334:	0a00000c 	beq	1a36c <TargetDebug::commandMatch(char const*, char const*)+0x64>
   1a338:	ebffc450 	bl	b480 <rdtolower>
   1a33c:	e1a06000 	mov	r6, r0
   1a340:	e5d50000 	ldrb	r0, [r5]
   1a344:	ebffc44d 	bl	b480 <rdtolower>
   1a348:	e1560000 	cmp	r6, r0
   1a34c:	1a000010 	bne	1a394 <TargetDebug::commandMatch(char const*, char const*)+0x8c>
   1a350:	e5f40001 	ldrb	r0, [r4, #1]!
   1a354:	e3500000 	cmp	r0, #0
   1a358:	e5f53001 	ldrb	r3, [r5, #1]!
   1a35c:	1afffff3 	bne	1a330 <TargetDebug::commandMatch(char const*, char const*)+0x28>
   1a360:	e16f0f13 	clz	r0, r3
   1a364:	e1a002a0 	lsr	r0, r0, #5
   1a368:	e8bd8070 	pop	{r4, r5, r6, pc}
   1a36c:	e5d40000 	ldrb	r0, [r4]
   1a370:	ebffc42f 	bl	b434 <rdisspace>
   1a374:	e3500000 	cmp	r0, #0
   1a378:	e1a05004 	mov	r5, r4
   1a37c:	e2844001 	add	r4, r4, #1
   1a380:	1afffff9 	bne	1a36c <TargetDebug::commandMatch(char const*, char const*)+0x64>
   1a384:	e5d53000 	ldrb	r3, [r5]
   1a388:	e16f0f13 	clz	r0, r3
   1a38c:	e1a002a0 	lsr	r0, r0, #5
   1a390:	e8bd8070 	pop	{r4, r5, r6, pc}
   1a394:	e3a00000 	mov	r0, #0
   1a398:	e8bd8070 	pop	{r4, r5, r6, pc}

0001a39c <TargetDebug::service()>:
   1a39c:	e92d4030 	push	{r4, r5, lr}
   1a3a0:	e5d03050 	ldrb	r3, [r0, #80]	; 0x50
   1a3a4:	e24dd0dc 	sub	sp, sp, #220	; 0xdc
   1a3a8:	e3530000 	cmp	r3, #0
   1a3ac:	e1a05000 	mov	r5, r0
   1a3b0:	1a000035 	bne	1a48c <TargetDebug::service()+0xf0>
   1a3b4:	e59f4108 	ldr	r4, [pc, #264]	; 1a4c4 <TargetDebug::service()+0x128>
   1a3b8:	e5d43194 	ldrb	r3, [r4, #404]	; 0x194
   1a3bc:	e3530000 	cmp	r3, #0
   1a3c0:	1a000023 	bne	1a454 <TargetDebug::service()+0xb8>
   1a3c4:	e5d43196 	ldrb	r3, [r4, #406]	; 0x196
   1a3c8:	e3530000 	cmp	r3, #0
   1a3cc:	1a000007 	bne	1a3f0 <TargetDebug::service()+0x54>
   1a3d0:	e2853a01 	add	r3, r5, #4096	; 0x1000
   1a3d4:	e5d33a38 	ldrb	r3, [r3, #2616]	; 0xa38
   1a3d8:	e3530000 	cmp	r3, #0
   1a3dc:	0a000001 	beq	1a3e8 <TargetDebug::service()+0x4c>
   1a3e0:	e28500cc 	add	r0, r5, #204	; 0xcc
   1a3e4:	ebfffdb6 	bl	19ac4 <StepTester::service()>
   1a3e8:	e28dd0dc 	add	sp, sp, #220	; 0xdc
   1a3ec:	e8bd8030 	pop	{r4, r5, pc}
   1a3f0:	e59f20d0 	ldr	r2, [pc, #208]	; 1a4c8 <TargetDebug::service()+0x12c>
   1a3f4:	e3a01005 	mov	r1, #5
   1a3f8:	e59f00cc 	ldr	r0, [pc, #204]	; 1a4cc <TargetDebug::service()+0x130>
   1a3fc:	ebffbcec 	bl	97b4 <LogWrite>
   1a400:	ebfffc88 	bl	19628 <RAMEmulator::getMemBuffer()>
   1a404:	e3a01000 	mov	r1, #0
   1a408:	e3a03001 	mov	r3, #1
   1a40c:	e59421a0 	ldr	r2, [r4, #416]	; 0x1a0
   1a410:	e98d000a 	stmib	sp, {r1, r3}
   1a414:	e58d1000 	str	r1, [sp]
   1a418:	e28d3010 	add	r3, sp, #16
   1a41c:	ebffd4e3 	bl	f7b0 <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)>
   1a420:	e28d0010 	add	r0, sp, #16
   1a424:	e3a020c8 	mov	r2, #200	; 0xc8
   1a428:	e59f10a0 	ldr	r1, [pc, #160]	; 1a4d0 <TargetDebug::service()+0x134>
   1a42c:	eb004895 	bl	2c688 <strlcat>
   1a430:	e594319c 	ldr	r3, [r4, #412]	; 0x19c
   1a434:	e3530000 	cmp	r3, #0
   1a438:	0a000002 	beq	1a448 <TargetDebug::service()+0xac>
   1a43c:	e28d0010 	add	r0, sp, #16
   1a440:	e59f108c 	ldr	r1, [pc, #140]	; 1a4d4 <TargetDebug::service()+0x138>
   1a444:	e12fff33 	blx	r3
   1a448:	e3a03000 	mov	r3, #0
   1a44c:	e5c43196 	strb	r3, [r4, #406]	; 0x196
   1a450:	eaffffde 	b	1a3d0 <TargetDebug::service()+0x34>
   1a454:	e5943198 	ldr	r3, [r4, #408]	; 0x198
   1a458:	e59f2078 	ldr	r2, [pc, #120]	; 1a4d8 <TargetDebug::service()+0x13c>
   1a45c:	e3a01005 	mov	r1, #5
   1a460:	e59f0064 	ldr	r0, [pc, #100]	; 1a4cc <TargetDebug::service()+0x130>
   1a464:	ebffbcd2 	bl	97b4 <LogWrite>
   1a468:	e594319c 	ldr	r3, [r4, #412]	; 0x19c
   1a46c:	e3530000 	cmp	r3, #0
   1a470:	0a000002 	beq	1a480 <TargetDebug::service()+0xe4>
   1a474:	e59f1058 	ldr	r1, [pc, #88]	; 1a4d4 <TargetDebug::service()+0x138>
   1a478:	e59f0050 	ldr	r0, [pc, #80]	; 1a4d0 <TargetDebug::service()+0x134>
   1a47c:	e12fff33 	blx	r3
   1a480:	e3a03000 	mov	r3, #0
   1a484:	e5c43194 	strb	r3, [r4, #404]	; 0x194
   1a488:	eaffffcd 	b	1a3c4 <TargetDebug::service()+0x28>
   1a48c:	e3a03000 	mov	r3, #0
   1a490:	e3a00001 	mov	r0, #1
   1a494:	e5c53050 	strb	r3, [r5, #80]	; 0x50
   1a498:	ebffdb5a 	bl	11208 <HwManager::pageOutForInjection(bool)>
   1a49c:	ebfff6d0 	bl	17fe4 <BusAccess::controlRequestAndTake()>
   1a4a0:	e3500000 	cmp	r0, #0
   1a4a4:	1affffc2 	bne	1a3b4 <TargetDebug::service()+0x18>
   1a4a8:	ebfffc5e 	bl	19628 <RAMEmulator::getMemBuffer()>
   1a4ac:	e1a04000 	mov	r4, r0
   1a4b0:	ebfffc5f 	bl	19634 <RAMEmulator::getMemBufferLen()>
   1a4b4:	e1a01000 	mov	r1, r0
   1a4b8:	e1a00004 	mov	r0, r4
   1a4bc:	ebfff925 	bl	18958 <BusAccess::grabMemoryAndReleaseBusRq(unsigned char*, unsigned long)>
   1a4c0:	eaffffbb 	b	1a3b4 <TargetDebug::service()+0x18>
   1a4c4:	0006ad2c 	.word	0x0006ad2c
   1a4c8:	0002fd78 	.word	0x0002fd78
   1a4cc:	0002fd04 	.word	0x0002fd04
   1a4d0:	0002fd64 	.word	0x0002fd64
   1a4d4:	00030678 	.word	0x00030678
   1a4d8:	0002fd4c 	.word	0x0002fd4c

0001a4dc <TargetDebug::procDebuggerLine(char*, char*, int)>:
   1a4dc:	e1a0c001 	mov	ip, r1
   1a4e0:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a4e4:	e59f1fc8 	ldr	r1, [pc, #4040]	; 1b4b4 <TargetDebug::procDebuggerLine(char*, char*, int)+0xfd8>
   1a4e8:	e24dd09c 	sub	sp, sp, #156	; 0x9c
   1a4ec:	e1a07000 	mov	r7, r0
   1a4f0:	e1a0000c 	mov	r0, ip
   1a4f4:	e1a05002 	mov	r5, r2
   1a4f8:	e1a06003 	mov	r6, r3
   1a4fc:	eb004b20 	bl	2d184 <strtok>
   1a500:	e59f1fac 	ldr	r1, [pc, #4012]	; 1b4b4 <TargetDebug::procDebuggerLine(char*, char*, int)+0xfd8>
   1a504:	e1a04000 	mov	r4, r0
   1a508:	e3a00000 	mov	r0, #0
   1a50c:	eb004b1c 	bl	2d184 <strtok>
   1a510:	e59f1f9c 	ldr	r1, [pc, #3996]	; 1b4b4 <TargetDebug::procDebuggerLine(char*, char*, int)+0xfd8>
   1a514:	e58d001c 	str	r0, [sp, #28]
   1a518:	e3a00000 	mov	r0, #0
   1a51c:	eb004b18 	bl	2d184 <strtok>
   1a520:	e59f1f90 	ldr	r1, [pc, #3984]	; 1b4b8 <TargetDebug::procDebuggerLine(char*, char*, int)+0xfdc>
   1a524:	e58d0020 	str	r0, [sp, #32]
   1a528:	e3a00000 	mov	r0, #0
   1a52c:	eb004b14 	bl	2d184 <strtok>
   1a530:	e58d0024 	str	r0, [sp, #36]	; 0x24
   1a534:	e5d40000 	ldrb	r0, [r4]
   1a538:	e1a0b004 	mov	fp, r4
   1a53c:	e3500020 	cmp	r0, #32
   1a540:	1a000002 	bne	1a550 <TargetDebug::procDebuggerLine(char*, char*, int)+0x74>
   1a544:	e5fb0001 	ldrb	r0, [fp, #1]!
   1a548:	e3500020 	cmp	r0, #32
   1a54c:	0afffffc 	beq	1a544 <TargetDebug::procDebuggerLine(char*, char*, int)+0x68>
   1a550:	e59faf64 	ldr	sl, [pc, #3940]	; 1b4bc <TargetDebug::procDebuggerLine(char*, char*, int)+0xfe0>
   1a554:	ea000008 	b	1a57c <TargetDebug::procDebuggerLine(char*, char*, int)+0xa0>
   1a558:	e3590000 	cmp	r9, #0
   1a55c:	0a00001c 	beq	1a5d4 <TargetDebug::procDebuggerLine(char*, char*, int)+0xf8>
   1a560:	ebffc3c6 	bl	b480 <rdtolower>
   1a564:	e1a08000 	mov	r8, r0
   1a568:	e1a00009 	mov	r0, r9
   1a56c:	ebffc3c3 	bl	b480 <rdtolower>
   1a570:	e1580000 	cmp	r8, r0
   1a574:	1a000021 	bne	1a600 <TargetDebug::procDebuggerLine(char*, char*, int)+0x124>
   1a578:	e5fb0001 	ldrb	r0, [fp, #1]!
   1a57c:	e3500000 	cmp	r0, #0
   1a580:	e5fa9001 	ldrb	r9, [sl, #1]!
   1a584:	1afffff3 	bne	1a558 <TargetDebug::procDebuggerLine(char*, char*, int)+0x7c>
   1a588:	e16f3f19 	clz	r3, r9
   1a58c:	e1a032a3 	lsr	r3, r3, #5
   1a590:	e3530000 	cmp	r3, #0
   1a594:	0a000019 	beq	1a600 <TargetDebug::procDebuggerLine(char*, char*, int)+0x124>
   1a598:	e1a02006 	mov	r2, r6
   1a59c:	e59f1f1c 	ldr	r1, [pc, #3868]	; 1b4c0 <TargetDebug::procDebuggerLine(char*, char*, int)+0xfe4>
   1a5a0:	e1a00005 	mov	r0, r5
   1a5a4:	eb004837 	bl	2c688 <strlcat>
   1a5a8:	ebffe001 	bl	125b4 <McManager::targetIsPaused()>
   1a5ac:	e59f3f10 	ldr	r3, [pc, #3856]	; 1b4c4 <TargetDebug::procDebuggerLine(char*, char*, int)+0xfe8>
   1a5b0:	e3500000 	cmp	r0, #0
   1a5b4:	e59f1f0c 	ldr	r1, [pc, #3852]	; 1b4c8 <TargetDebug::procDebuggerLine(char*, char*, int)+0xfec>
   1a5b8:	e1a02006 	mov	r2, r6
   1a5bc:	11a01003 	movne	r1, r3
   1a5c0:	e1a00005 	mov	r0, r5
   1a5c4:	eb00482f 	bl	2c688 <strlcat>
   1a5c8:	e3a00001 	mov	r0, #1
   1a5cc:	e28dd09c 	add	sp, sp, #156	; 0x9c
   1a5d0:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a5d4:	e5db0000 	ldrb	r0, [fp]
   1a5d8:	ebffc395 	bl	b434 <rdisspace>
   1a5dc:	e3500000 	cmp	r0, #0
   1a5e0:	e1a0900b 	mov	r9, fp
   1a5e4:	e28bb001 	add	fp, fp, #1
   1a5e8:	1afffff9 	bne	1a5d4 <TargetDebug::procDebuggerLine(char*, char*, int)+0xf8>
   1a5ec:	e5d93000 	ldrb	r3, [r9]
   1a5f0:	e16f3f13 	clz	r3, r3
   1a5f4:	e1a032a3 	lsr	r3, r3, #5
   1a5f8:	e3530000 	cmp	r3, #0
   1a5fc:	1affffe5 	bne	1a598 <TargetDebug::procDebuggerLine(char*, char*, int)+0xbc>
   1a600:	e5d40000 	ldrb	r0, [r4]
   1a604:	e1a0b004 	mov	fp, r4
   1a608:	e3500020 	cmp	r0, #32
   1a60c:	1a000002 	bne	1a61c <TargetDebug::procDebuggerLine(char*, char*, int)+0x140>
   1a610:	e5fb0001 	ldrb	r0, [fp, #1]!
   1a614:	e3500020 	cmp	r0, #32
   1a618:	0afffffc 	beq	1a610 <TargetDebug::procDebuggerLine(char*, char*, int)+0x134>
   1a61c:	e59faea8 	ldr	sl, [pc, #3752]	; 1b4cc <TargetDebug::procDebuggerLine(char*, char*, int)+0xff0>
   1a620:	ea000008 	b	1a648 <TargetDebug::procDebuggerLine(char*, char*, int)+0x16c>
   1a624:	e3590000 	cmp	r9, #0
   1a628:	0a000012 	beq	1a678 <TargetDebug::procDebuggerLine(char*, char*, int)+0x19c>
   1a62c:	ebffc393 	bl	b480 <rdtolower>
   1a630:	e1a08000 	mov	r8, r0
   1a634:	e1a00009 	mov	r0, r9
   1a638:	ebffc390 	bl	b480 <rdtolower>
   1a63c:	e1580000 	cmp	r8, r0
   1a640:	1a000016 	bne	1a6a0 <TargetDebug::procDebuggerLine(char*, char*, int)+0x1c4>
   1a644:	e5fb0001 	ldrb	r0, [fp, #1]!
   1a648:	e3500000 	cmp	r0, #0
   1a64c:	e5fa9001 	ldrb	r9, [sl, #1]!
   1a650:	1afffff3 	bne	1a624 <TargetDebug::procDebuggerLine(char*, char*, int)+0x148>
   1a654:	e16f3f19 	clz	r3, r9
   1a658:	e1a032a3 	lsr	r3, r3, #5
   1a65c:	e3530000 	cmp	r3, #0
   1a660:	0a00000e 	beq	1a6a0 <TargetDebug::procDebuggerLine(char*, char*, int)+0x1c4>
   1a664:	e1a02006 	mov	r2, r6
   1a668:	e59f1e60 	ldr	r1, [pc, #3680]	; 1b4d0 <TargetDebug::procDebuggerLine(char*, char*, int)+0xff4>
   1a66c:	e1a00005 	mov	r0, r5
   1a670:	eb004804 	bl	2c688 <strlcat>
   1a674:	eaffffcb 	b	1a5a8 <TargetDebug::procDebuggerLine(char*, char*, int)+0xcc>
   1a678:	e5db0000 	ldrb	r0, [fp]
   1a67c:	ebffc36c 	bl	b434 <rdisspace>
   1a680:	e3500000 	cmp	r0, #0
   1a684:	e1a0900b 	mov	r9, fp
   1a688:	e28bb001 	add	fp, fp, #1
   1a68c:	1afffff9 	bne	1a678 <TargetDebug::procDebuggerLine(char*, char*, int)+0x19c>
   1a690:	e5d93000 	ldrb	r3, [r9]
   1a694:	e16f3f13 	clz	r3, r3
   1a698:	e1a032a3 	lsr	r3, r3, #5
   1a69c:	eaffffee 	b	1a65c <TargetDebug::procDebuggerLine(char*, char*, int)+0x180>
   1a6a0:	e5d40000 	ldrb	r0, [r4]
   1a6a4:	e1a0b004 	mov	fp, r4
   1a6a8:	e3500020 	cmp	r0, #32
   1a6ac:	1a000002 	bne	1a6bc <TargetDebug::procDebuggerLine(char*, char*, int)+0x1e0>
   1a6b0:	e5fb0001 	ldrb	r0, [fp, #1]!
   1a6b4:	e3500020 	cmp	r0, #32
   1a6b8:	0afffffc 	beq	1a6b0 <TargetDebug::procDebuggerLine(char*, char*, int)+0x1d4>
   1a6bc:	e59fae10 	ldr	sl, [pc, #3600]	; 1b4d4 <TargetDebug::procDebuggerLine(char*, char*, int)+0xff8>
   1a6c0:	ea000008 	b	1a6e8 <TargetDebug::procDebuggerLine(char*, char*, int)+0x20c>
   1a6c4:	e3590000 	cmp	r9, #0
   1a6c8:	0a000013 	beq	1a71c <TargetDebug::procDebuggerLine(char*, char*, int)+0x240>
   1a6cc:	ebffc36b 	bl	b480 <rdtolower>
   1a6d0:	e1a08000 	mov	r8, r0
   1a6d4:	e1a00009 	mov	r0, r9
   1a6d8:	ebffc368 	bl	b480 <rdtolower>
   1a6dc:	e1580000 	cmp	r8, r0
   1a6e0:	1a000017 	bne	1a744 <TargetDebug::procDebuggerLine(char*, char*, int)+0x268>
   1a6e4:	e5fb0001 	ldrb	r0, [fp, #1]!
   1a6e8:	e3500000 	cmp	r0, #0
   1a6ec:	e5fa9001 	ldrb	r9, [sl, #1]!
   1a6f0:	1afffff3 	bne	1a6c4 <TargetDebug::procDebuggerLine(char*, char*, int)+0x1e8>
   1a6f4:	e16f3f19 	clz	r3, r9
   1a6f8:	e1a032a3 	lsr	r3, r3, #5
   1a6fc:	e3530000 	cmp	r3, #0
   1a700:	0a00000f 	beq	1a744 <TargetDebug::procDebuggerLine(char*, char*, int)+0x268>
   1a704:	ebffdb95 	bl	11560 <McManager::getDescriptorTable()>
   1a708:	e1a02006 	mov	r2, r6
   1a70c:	e5901000 	ldr	r1, [r0]
   1a710:	e1a00005 	mov	r0, r5
   1a714:	eb0047db 	bl	2c688 <strlcat>
   1a718:	eaffffa2 	b	1a5a8 <TargetDebug::procDebuggerLine(char*, char*, int)+0xcc>
   1a71c:	e5db0000 	ldrb	r0, [fp]
   1a720:	ebffc343 	bl	b434 <rdisspace>
   1a724:	e3500000 	cmp	r0, #0
   1a728:	e1a0900b 	mov	r9, fp
   1a72c:	e28bb001 	add	fp, fp, #1
   1a730:	1afffff9 	bne	1a71c <TargetDebug::procDebuggerLine(char*, char*, int)+0x240>
   1a734:	e5d93000 	ldrb	r3, [r9]
   1a738:	e16f3f13 	clz	r3, r3
   1a73c:	e1a032a3 	lsr	r3, r3, #5
   1a740:	eaffffed 	b	1a6fc <TargetDebug::procDebuggerLine(char*, char*, int)+0x220>
   1a744:	e5d40000 	ldrb	r0, [r4]
   1a748:	e1a0b004 	mov	fp, r4
   1a74c:	e3500020 	cmp	r0, #32
   1a750:	1a000002 	bne	1a760 <TargetDebug::procDebuggerLine(char*, char*, int)+0x284>
   1a754:	e5fb0001 	ldrb	r0, [fp, #1]!
   1a758:	e3500020 	cmp	r0, #32
   1a75c:	0afffffc 	beq	1a754 <TargetDebug::procDebuggerLine(char*, char*, int)+0x278>
   1a760:	e59f9d70 	ldr	r9, [pc, #3440]	; 1b4d8 <TargetDebug::procDebuggerLine(char*, char*, int)+0xffc>
   1a764:	ea000008 	b	1a78c <TargetDebug::procDebuggerLine(char*, char*, int)+0x2b0>
   1a768:	e35a0000 	cmp	sl, #0
   1a76c:	0a000014 	beq	1a7c4 <TargetDebug::procDebuggerLine(char*, char*, int)+0x2e8>
   1a770:	ebffc342 	bl	b480 <rdtolower>
   1a774:	e1a08000 	mov	r8, r0
   1a778:	e1a0000a 	mov	r0, sl
   1a77c:	ebffc33f 	bl	b480 <rdtolower>
   1a780:	e1580000 	cmp	r8, r0
   1a784:	1a000018 	bne	1a7ec <TargetDebug::procDebuggerLine(char*, char*, int)+0x310>
   1a788:	e5fb0001 	ldrb	r0, [fp, #1]!
   1a78c:	e3500000 	cmp	r0, #0
   1a790:	e5f9a001 	ldrb	sl, [r9, #1]!
   1a794:	1afffff3 	bne	1a768 <TargetDebug::procDebuggerLine(char*, char*, int)+0x28c>
   1a798:	e16f3f1a 	clz	r3, sl
   1a79c:	e1a032a3 	lsr	r3, r3, #5
   1a7a0:	e3530000 	cmp	r3, #0
   1a7a4:	0a000010 	beq	1a7ec <TargetDebug::procDebuggerLine(char*, char*, int)+0x310>
   1a7a8:	e1a02006 	mov	r2, r6
   1a7ac:	e59f1d04 	ldr	r1, [pc, #3332]	; 1b4b8 <TargetDebug::procDebuggerLine(char*, char*, int)+0xfdc>
   1a7b0:	e1a00005 	mov	r0, r5
   1a7b4:	eb0047b3 	bl	2c688 <strlcat>
   1a7b8:	e3a03001 	mov	r3, #1
   1a7bc:	e5c7304c 	strb	r3, [r7, #76]	; 0x4c
   1a7c0:	eaffff78 	b	1a5a8 <TargetDebug::procDebuggerLine(char*, char*, int)+0xcc>
   1a7c4:	e5db0000 	ldrb	r0, [fp]
   1a7c8:	ebffc319 	bl	b434 <rdisspace>
   1a7cc:	e3500000 	cmp	r0, #0
   1a7d0:	e1a0a00b 	mov	sl, fp
   1a7d4:	e28bb001 	add	fp, fp, #1
   1a7d8:	1afffff9 	bne	1a7c4 <TargetDebug::procDebuggerLine(char*, char*, int)+0x2e8>
   1a7dc:	e5da3000 	ldrb	r3, [sl]
   1a7e0:	e16f3f13 	clz	r3, r3
   1a7e4:	e1a032a3 	lsr	r3, r3, #5
   1a7e8:	eaffffec 	b	1a7a0 <TargetDebug::procDebuggerLine(char*, char*, int)+0x2c4>
   1a7ec:	e5d40000 	ldrb	r0, [r4]
   1a7f0:	e1a0b004 	mov	fp, r4
   1a7f4:	e3500020 	cmp	r0, #32
   1a7f8:	1a000002 	bne	1a808 <TargetDebug::procDebuggerLine(char*, char*, int)+0x32c>
   1a7fc:	e5fb0001 	ldrb	r0, [fp, #1]!
   1a800:	e3500020 	cmp	r0, #32
   1a804:	0afffffc 	beq	1a7fc <TargetDebug::procDebuggerLine(char*, char*, int)+0x320>
   1a808:	e59f2ccc 	ldr	r2, [pc, #3276]	; 1b4dc <TargetDebug::procDebuggerLine(char*, char*, int)+0x1000>
   1a80c:	ea00000c 	b	1a844 <TargetDebug::procDebuggerLine(char*, char*, int)+0x368>
   1a810:	e3530000 	cmp	r3, #0
   1a814:	0a000022 	beq	1a8a4 <TargetDebug::procDebuggerLine(char*, char*, int)+0x3c8>
   1a818:	e58d3028 	str	r3, [sp, #40]	; 0x28
   1a81c:	e58d202c 	str	r2, [sp, #44]	; 0x2c
   1a820:	ebffc316 	bl	b480 <rdtolower>
   1a824:	e59d3028 	ldr	r3, [sp, #40]	; 0x28
   1a828:	e1a09000 	mov	r9, r0
   1a82c:	e1a00003 	mov	r0, r3
   1a830:	ebffc312 	bl	b480 <rdtolower>
   1a834:	e1590000 	cmp	r9, r0
   1a838:	1a000024 	bne	1a8d0 <TargetDebug::procDebuggerLine(char*, char*, int)+0x3f4>
   1a83c:	e5fb0001 	ldrb	r0, [fp, #1]!
   1a840:	e59d202c 	ldr	r2, [sp, #44]	; 0x2c
   1a844:	e3500000 	cmp	r0, #0
   1a848:	e5f23001 	ldrb	r3, [r2, #1]!
   1a84c:	1affffef 	bne	1a810 <TargetDebug::procDebuggerLine(char*, char*, int)+0x334>
   1a850:	e16f3f13 	clz	r3, r3
   1a854:	e1a032a3 	lsr	r3, r3, #5
   1a858:	e3530000 	cmp	r3, #0
   1a85c:	0a00001b 	beq	1a8d0 <TargetDebug::procDebuggerLine(char*, char*, int)+0x3f4>
   1a860:	e59f0d6c 	ldr	r0, [pc, #3436]	; 1b5d4 <TargetDebug::procDebuggerLine(char*, char*, int)+0x10f8>
   1a864:	e59f2c74 	ldr	r2, [pc, #3188]	; 1b4e0 <TargetDebug::procDebuggerLine(char*, char*, int)+0x1004>
   1a868:	e3a01005 	mov	r1, #5
   1a86c:	ebffbbd0 	bl	97b4 <LogWrite>
   1a870:	e5970000 	ldr	r0, [r7]
   1a874:	e3500000 	cmp	r0, #0
   1a878:	0a000004 	beq	1a890 <TargetDebug::procDebuggerLine(char*, char*, int)+0x3b4>
   1a87c:	e5903000 	ldr	r3, [r0]
   1a880:	e59f2c5c 	ldr	r2, [pc, #3164]	; 1b4e4 <TargetDebug::procDebuggerLine(char*, char*, int)+0x1008>
   1a884:	e5933014 	ldr	r3, [r3, #20]
   1a888:	e1530002 	cmp	r3, r2
   1a88c:	1a0000ff 	bne	1ac90 <TargetDebug::procDebuggerLine(char*, char*, int)+0x7b4>
   1a890:	e1a02006 	mov	r2, r6
   1a894:	e59f1c1c 	ldr	r1, [pc, #3100]	; 1b4b8 <TargetDebug::procDebuggerLine(char*, char*, int)+0xfdc>
   1a898:	e1a00005 	mov	r0, r5
   1a89c:	eb004779 	bl	2c688 <strlcat>
   1a8a0:	eaffff40 	b	1a5a8 <TargetDebug::procDebuggerLine(char*, char*, int)+0xcc>
   1a8a4:	e5db0000 	ldrb	r0, [fp]
   1a8a8:	e58db028 	str	fp, [sp, #40]	; 0x28
   1a8ac:	ebffc2e0 	bl	b434 <rdisspace>
   1a8b0:	e3500000 	cmp	r0, #0
   1a8b4:	e28bb001 	add	fp, fp, #1
   1a8b8:	e59d3028 	ldr	r3, [sp, #40]	; 0x28
   1a8bc:	1afffff8 	bne	1a8a4 <TargetDebug::procDebuggerLine(char*, char*, int)+0x3c8>
   1a8c0:	e5d33000 	ldrb	r3, [r3]
   1a8c4:	e16f3f13 	clz	r3, r3
   1a8c8:	e1a032a3 	lsr	r3, r3, #5
   1a8cc:	eaffffe1 	b	1a858 <TargetDebug::procDebuggerLine(char*, char*, int)+0x37c>
   1a8d0:	e5d40000 	ldrb	r0, [r4]
   1a8d4:	e1a0b004 	mov	fp, r4
   1a8d8:	e3500020 	cmp	r0, #32
   1a8dc:	1a000002 	bne	1a8ec <TargetDebug::procDebuggerLine(char*, char*, int)+0x410>
   1a8e0:	e5fb0001 	ldrb	r0, [fp, #1]!
   1a8e4:	e3500020 	cmp	r0, #32
   1a8e8:	0afffffc 	beq	1a8e0 <TargetDebug::procDebuggerLine(char*, char*, int)+0x404>
   1a8ec:	e59f2bf4 	ldr	r2, [pc, #3060]	; 1b4e8 <TargetDebug::procDebuggerLine(char*, char*, int)+0x100c>
   1a8f0:	ea00000c 	b	1a928 <TargetDebug::procDebuggerLine(char*, char*, int)+0x44c>
   1a8f4:	e3530000 	cmp	r3, #0
   1a8f8:	0a000022 	beq	1a988 <TargetDebug::procDebuggerLine(char*, char*, int)+0x4ac>
   1a8fc:	e58d3028 	str	r3, [sp, #40]	; 0x28
   1a900:	e58d202c 	str	r2, [sp, #44]	; 0x2c
   1a904:	ebffc2dd 	bl	b480 <rdtolower>
   1a908:	e59d3028 	ldr	r3, [sp, #40]	; 0x28
   1a90c:	e1a09000 	mov	r9, r0
   1a910:	e1a00003 	mov	r0, r3
   1a914:	ebffc2d9 	bl	b480 <rdtolower>
   1a918:	e1590000 	cmp	r9, r0
   1a91c:	1a000024 	bne	1a9b4 <TargetDebug::procDebuggerLine(char*, char*, int)+0x4d8>
   1a920:	e5fb0001 	ldrb	r0, [fp, #1]!
   1a924:	e59d202c 	ldr	r2, [sp, #44]	; 0x2c
   1a928:	e3500000 	cmp	r0, #0
   1a92c:	e5f23001 	ldrb	r3, [r2, #1]!
   1a930:	1affffef 	bne	1a8f4 <TargetDebug::procDebuggerLine(char*, char*, int)+0x418>
   1a934:	e16f3f13 	clz	r3, r3
   1a938:	e1a032a3 	lsr	r3, r3, #5
   1a93c:	e3530000 	cmp	r3, #0
   1a940:	0a00001b 	beq	1a9b4 <TargetDebug::procDebuggerLine(char*, char*, int)+0x4d8>
   1a944:	e59f4c88 	ldr	r4, [pc, #3208]	; 1b5d4 <TargetDebug::procDebuggerLine(char*, char*, int)+0x10f8>
   1a948:	e59f2b9c 	ldr	r2, [pc, #2972]	; 1b4ec <TargetDebug::procDebuggerLine(char*, char*, int)+0x1010>
   1a94c:	e1a00004 	mov	r0, r4
   1a950:	e3a01005 	mov	r1, #5
   1a954:	ebffbb96 	bl	97b4 <LogWrite>
   1a958:	ebffdf12 	bl	125a8 <McManager::targetPause()>
   1a95c:	e2508000 	subs	r8, r0, #0
   1a960:	0a00008e 	beq	1aba0 <TargetDebug::procDebuggerLine(char*, char*, int)+0x6c4>
   1a964:	e3580003 	cmp	r8, #3
   1a968:	90844108 	addls	r4, r4, r8, lsl #2
   1a96c:	9594300c 	ldrls	r3, [r4, #12]
   1a970:	859f3c50 	ldrhi	r3, [pc, #3152]	; 1b5c8 <TargetDebug::procDebuggerLine(char*, char*, int)+0x10ec>
   1a974:	e59f2b74 	ldr	r2, [pc, #2932]	; 1b4f0 <TargetDebug::procDebuggerLine(char*, char*, int)+0x1014>
   1a978:	e3a01004 	mov	r1, #4
   1a97c:	e59f0c50 	ldr	r0, [pc, #3152]	; 1b5d4 <TargetDebug::procDebuggerLine(char*, char*, int)+0x10f8>
   1a980:	ebffbb8b 	bl	97b4 <LogWrite>
   1a984:	eaffffc1 	b	1a890 <TargetDebug::procDebuggerLine(char*, char*, int)+0x3b4>
   1a988:	e5db0000 	ldrb	r0, [fp]
   1a98c:	e58db028 	str	fp, [sp, #40]	; 0x28
   1a990:	ebffc2a7 	bl	b434 <rdisspace>
   1a994:	e3500000 	cmp	r0, #0
   1a998:	e28bb001 	add	fp, fp, #1
   1a99c:	e59d3028 	ldr	r3, [sp, #40]	; 0x28
   1a9a0:	1afffff8 	bne	1a988 <TargetDebug::procDebuggerLine(char*, char*, int)+0x4ac>
   1a9a4:	e5d33000 	ldrb	r3, [r3]
   1a9a8:	e16f3f13 	clz	r3, r3
   1a9ac:	e1a032a3 	lsr	r3, r3, #5
   1a9b0:	eaffffe1 	b	1a93c <TargetDebug::procDebuggerLine(char*, char*, int)+0x460>
   1a9b4:	e5d40000 	ldrb	r0, [r4]
   1a9b8:	e1a0b004 	mov	fp, r4
   1a9bc:	e3500020 	cmp	r0, #32
   1a9c0:	1a000002 	bne	1a9d0 <TargetDebug::procDebuggerLine(char*, char*, int)+0x4f4>
   1a9c4:	e5fb0001 	ldrb	r0, [fp, #1]!
   1a9c8:	e3500020 	cmp	r0, #32
   1a9cc:	0afffffc 	beq	1a9c4 <TargetDebug::procDebuggerLine(char*, char*, int)+0x4e8>
   1a9d0:	e59f2b1c 	ldr	r2, [pc, #2844]	; 1b4f4 <TargetDebug::procDebuggerLine(char*, char*, int)+0x1018>
   1a9d4:	ea00000c 	b	1aa0c <TargetDebug::procDebuggerLine(char*, char*, int)+0x530>
   1a9d8:	e3530000 	cmp	r3, #0
   1a9dc:	0a000025 	beq	1aa78 <TargetDebug::procDebuggerLine(char*, char*, int)+0x59c>
   1a9e0:	e58d3028 	str	r3, [sp, #40]	; 0x28
   1a9e4:	e58d202c 	str	r2, [sp, #44]	; 0x2c
   1a9e8:	ebffc2a4 	bl	b480 <rdtolower>
   1a9ec:	e59d3028 	ldr	r3, [sp, #40]	; 0x28
   1a9f0:	e1a09000 	mov	r9, r0
   1a9f4:	e1a00003 	mov	r0, r3
   1a9f8:	ebffc2a0 	bl	b480 <rdtolower>
   1a9fc:	e1590000 	cmp	r9, r0
   1aa00:	1a000027 	bne	1aaa4 <TargetDebug::procDebuggerLine(char*, char*, int)+0x5c8>
   1aa04:	e5fb0001 	ldrb	r0, [fp, #1]!
   1aa08:	e59d202c 	ldr	r2, [sp, #44]	; 0x2c
   1aa0c:	e3500000 	cmp	r0, #0
   1aa10:	e5f23001 	ldrb	r3, [r2, #1]!
   1aa14:	1affffef 	bne	1a9d8 <TargetDebug::procDebuggerLine(char*, char*, int)+0x4fc>
   1aa18:	e16f3f13 	clz	r3, r3
   1aa1c:	e1a032a3 	lsr	r3, r3, #5
   1aa20:	e3530000 	cmp	r3, #0
   1aa24:	0a00001e 	beq	1aaa4 <TargetDebug::procDebuggerLine(char*, char*, int)+0x5c8>
   1aa28:	e59f4ba4 	ldr	r4, [pc, #2980]	; 1b5d4 <TargetDebug::procDebuggerLine(char*, char*, int)+0x10f8>
   1aa2c:	e59f2ac4 	ldr	r2, [pc, #2756]	; 1b4f8 <TargetDebug::procDebuggerLine(char*, char*, int)+0x101c>
   1aa30:	e1a00004 	mov	r0, r4
   1aa34:	e3a01005 	mov	r1, #5
   1aa38:	ebffbb5d 	bl	97b4 <LogWrite>
   1aa3c:	ebfff988 	bl	19064 <BusAccess::waitRestoreDefaults()>
   1aa40:	ebffded9 	bl	125ac <McManager::targetRelease()>
   1aa44:	e3a03000 	mov	r3, #0
   1aa48:	e3500000 	cmp	r0, #0
   1aa4c:	e5c7304d 	strb	r3, [r7, #77]	; 0x4d
   1aa50:	0affff8e 	beq	1a890 <TargetDebug::procDebuggerLine(char*, char*, int)+0x3b4>
   1aa54:	e3500003 	cmp	r0, #3
   1aa58:	90844100 	addls	r4, r4, r0, lsl #2
   1aa5c:	9594300c 	ldrls	r3, [r4, #12]
   1aa60:	859f3b60 	ldrhi	r3, [pc, #2912]	; 1b5c8 <TargetDebug::procDebuggerLine(char*, char*, int)+0x10ec>
   1aa64:	e59f2a90 	ldr	r2, [pc, #2704]	; 1b4fc <TargetDebug::procDebuggerLine(char*, char*, int)+0x1020>
   1aa68:	e3a01004 	mov	r1, #4
   1aa6c:	e59f0b60 	ldr	r0, [pc, #2912]	; 1b5d4 <TargetDebug::procDebuggerLine(char*, char*, int)+0x10f8>
   1aa70:	ebffbb4f 	bl	97b4 <LogWrite>
   1aa74:	eaffff85 	b	1a890 <TargetDebug::procDebuggerLine(char*, char*, int)+0x3b4>
   1aa78:	e5db0000 	ldrb	r0, [fp]
   1aa7c:	e58db028 	str	fp, [sp, #40]	; 0x28
   1aa80:	ebffc26b 	bl	b434 <rdisspace>
   1aa84:	e3500000 	cmp	r0, #0
   1aa88:	e28bb001 	add	fp, fp, #1
   1aa8c:	e59d3028 	ldr	r3, [sp, #40]	; 0x28
   1aa90:	1afffff8 	bne	1aa78 <TargetDebug::procDebuggerLine(char*, char*, int)+0x59c>
   1aa94:	e5d33000 	ldrb	r3, [r3]
   1aa98:	e16f3f13 	clz	r3, r3
   1aa9c:	e1a032a3 	lsr	r3, r3, #5
   1aaa0:	eaffffde 	b	1aa20 <TargetDebug::procDebuggerLine(char*, char*, int)+0x544>
   1aaa4:	e5d40000 	ldrb	r0, [r4]
   1aaa8:	e1a0b004 	mov	fp, r4
   1aaac:	e3500020 	cmp	r0, #32
   1aab0:	1a000002 	bne	1aac0 <TargetDebug::procDebuggerLine(char*, char*, int)+0x5e4>
   1aab4:	e5fb0001 	ldrb	r0, [fp, #1]!
   1aab8:	e3500020 	cmp	r0, #32
   1aabc:	0afffffc 	beq	1aab4 <TargetDebug::procDebuggerLine(char*, char*, int)+0x5d8>
   1aac0:	e59f2a38 	ldr	r2, [pc, #2616]	; 1b500 <TargetDebug::procDebuggerLine(char*, char*, int)+0x1024>
   1aac4:	ea00000c 	b	1aafc <TargetDebug::procDebuggerLine(char*, char*, int)+0x620>
   1aac8:	e3530000 	cmp	r3, #0
   1aacc:	0a000010 	beq	1ab14 <TargetDebug::procDebuggerLine(char*, char*, int)+0x638>
   1aad0:	e58d202c 	str	r2, [sp, #44]	; 0x2c
   1aad4:	e58d3028 	str	r3, [sp, #40]	; 0x28
   1aad8:	ebffc268 	bl	b480 <rdtolower>
   1aadc:	e59d3028 	ldr	r3, [sp, #40]	; 0x28
   1aae0:	e1a09000 	mov	r9, r0
   1aae4:	e1a00003 	mov	r0, r3
   1aae8:	ebffc264 	bl	b480 <rdtolower>
   1aaec:	e1590000 	cmp	r9, r0
   1aaf0:	1a000030 	bne	1abb8 <TargetDebug::procDebuggerLine(char*, char*, int)+0x6dc>
   1aaf4:	e5fb0001 	ldrb	r0, [fp, #1]!
   1aaf8:	e59d202c 	ldr	r2, [sp, #44]	; 0x2c
   1aafc:	e3500000 	cmp	r0, #0
   1ab00:	e5f23001 	ldrb	r3, [r2, #1]!
   1ab04:	1affffef 	bne	1aac8 <TargetDebug::procDebuggerLine(char*, char*, int)+0x5ec>
   1ab08:	e16f3f13 	clz	r3, r3
   1ab0c:	e1a032a3 	lsr	r3, r3, #5
   1ab10:	ea000009 	b	1ab3c <TargetDebug::procDebuggerLine(char*, char*, int)+0x660>
   1ab14:	e5db0000 	ldrb	r0, [fp]
   1ab18:	e58db028 	str	fp, [sp, #40]	; 0x28
   1ab1c:	ebffc244 	bl	b434 <rdisspace>
   1ab20:	e3500000 	cmp	r0, #0
   1ab24:	e28bb001 	add	fp, fp, #1
   1ab28:	e59d3028 	ldr	r3, [sp, #40]	; 0x28
   1ab2c:	1afffff8 	bne	1ab14 <TargetDebug::procDebuggerLine(char*, char*, int)+0x638>
   1ab30:	e5d33000 	ldrb	r3, [r3]
   1ab34:	e16f3f13 	clz	r3, r3
   1ab38:	e1a032a3 	lsr	r3, r3, #5
   1ab3c:	e3530000 	cmp	r3, #0
   1ab40:	0a00001c 	beq	1abb8 <TargetDebug::procDebuggerLine(char*, char*, int)+0x6dc>
   1ab44:	ebfff946 	bl	19064 <BusAccess::waitRestoreDefaults()>
   1ab48:	ebffde97 	bl	125ac <McManager::targetRelease()>
   1ab4c:	e3a03000 	mov	r3, #0
   1ab50:	e3500000 	cmp	r0, #0
   1ab54:	13500003 	cmpne	r0, #3
   1ab58:	e5c7304d 	strb	r3, [r7, #77]	; 0x4d
   1ab5c:	0a000008 	beq	1ab84 <TargetDebug::procDebuggerLine(char*, char*, int)+0x6a8>
   1ab60:	e3500003 	cmp	r0, #3
   1ab64:	959f3a68 	ldrls	r3, [pc, #2664]	; 1b5d4 <TargetDebug::procDebuggerLine(char*, char*, int)+0x10f8>
   1ab68:	859f3a58 	ldrhi	r3, [pc, #2648]	; 1b5c8 <TargetDebug::procDebuggerLine(char*, char*, int)+0x10ec>
   1ab6c:	90833100 	addls	r3, r3, r0, lsl #2
   1ab70:	9593300c 	ldrls	r3, [r3, #12]
   1ab74:	e59f2988 	ldr	r2, [pc, #2440]	; 1b504 <TargetDebug::procDebuggerLine(char*, char*, int)+0x1028>
   1ab78:	e3a01004 	mov	r1, #4
   1ab7c:	e59f0a50 	ldr	r0, [pc, #2640]	; 1b5d4 <TargetDebug::procDebuggerLine(char*, char*, int)+0x10f8>
   1ab80:	ebffbb0b 	bl	97b4 <LogWrite>
   1ab84:	e3a03000 	mov	r3, #0
   1ab88:	e1a02006 	mov	r2, r6
   1ab8c:	e5c7304c 	strb	r3, [r7, #76]	; 0x4c
   1ab90:	e59f1920 	ldr	r1, [pc, #2336]	; 1b4b8 <TargetDebug::procDebuggerLine(char*, char*, int)+0xfdc>
   1ab94:	e1a00005 	mov	r0, r5
   1ab98:	eb0046ba 	bl	2c688 <strlcat>
   1ab9c:	eafffe81 	b	1a5a8 <TargetDebug::procDebuggerLine(char*, char*, int)+0xcc>
   1aba0:	e3a00001 	mov	r0, #1
   1aba4:	ebfff91b 	bl	19018 <BusAccess::waitOnInstruction(bool)>
   1aba8:	e59f0958 	ldr	r0, [pc, #2392]	; 1b508 <TargetDebug::procDebuggerLine(char*, char*, int)+0x102c>
   1abac:	ebfff8b5 	bl	18e88 <BusAccess::clockSetFreqHz(unsigned long)>
   1abb0:	e5c7804f 	strb	r8, [r7, #79]	; 0x4f
   1abb4:	eaffff35 	b	1a890 <TargetDebug::procDebuggerLine(char*, char*, int)+0x3b4>
   1abb8:	e5d40000 	ldrb	r0, [r4]
   1abbc:	e1a03004 	mov	r3, r4
   1abc0:	e3500020 	cmp	r0, #32
   1abc4:	1a000002 	bne	1abd4 <TargetDebug::procDebuggerLine(char*, char*, int)+0x6f8>
   1abc8:	e5f30001 	ldrb	r0, [r3, #1]!
   1abcc:	e3500020 	cmp	r0, #32
   1abd0:	0afffffc 	beq	1abc8 <TargetDebug::procDebuggerLine(char*, char*, int)+0x6ec>
   1abd4:	e59f2930 	ldr	r2, [pc, #2352]	; 1b50c <TargetDebug::procDebuggerLine(char*, char*, int)+0x1030>
   1abd8:	ea00000b 	b	1ac0c <TargetDebug::procDebuggerLine(char*, char*, int)+0x730>
   1abdc:	e35b0000 	cmp	fp, #0
   1abe0:	0a00000f 	beq	1ac24 <TargetDebug::procDebuggerLine(char*, char*, int)+0x748>
   1abe4:	e1cd22f8 	strd	r2, [sp, #40]	; 0x28
   1abe8:	ebffc224 	bl	b480 <rdtolower>
   1abec:	e1a09000 	mov	r9, r0
   1abf0:	e1a0000b 	mov	r0, fp
   1abf4:	ebffc221 	bl	b480 <rdtolower>
   1abf8:	e1590000 	cmp	r9, r0
   1abfc:	1a000026 	bne	1ac9c <TargetDebug::procDebuggerLine(char*, char*, int)+0x7c0>
   1ac00:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
   1ac04:	e59d2028 	ldr	r2, [sp, #40]	; 0x28
   1ac08:	e5f30001 	ldrb	r0, [r3, #1]!
   1ac0c:	e3500000 	cmp	r0, #0
   1ac10:	e5f2b001 	ldrb	fp, [r2, #1]!
   1ac14:	1afffff0 	bne	1abdc <TargetDebug::procDebuggerLine(char*, char*, int)+0x700>
   1ac18:	e16fbf1b 	clz	fp, fp
   1ac1c:	e1a0b2ab 	lsr	fp, fp, #5
   1ac20:	ea00000a 	b	1ac50 <TargetDebug::procDebuggerLine(char*, char*, int)+0x774>
   1ac24:	e5d30000 	ldrb	r0, [r3]
   1ac28:	e1a0b003 	mov	fp, r3
   1ac2c:	e58d3028 	str	r3, [sp, #40]	; 0x28
   1ac30:	ebffc1ff 	bl	b434 <rdisspace>
   1ac34:	e59d3028 	ldr	r3, [sp, #40]	; 0x28
   1ac38:	e3500000 	cmp	r0, #0
   1ac3c:	e2833001 	add	r3, r3, #1
   1ac40:	1afffff7 	bne	1ac24 <TargetDebug::procDebuggerLine(char*, char*, int)+0x748>
   1ac44:	e5dbb000 	ldrb	fp, [fp]
   1ac48:	e16fbf1b 	clz	fp, fp
   1ac4c:	e1a0b2ab 	lsr	fp, fp, #5
   1ac50:	e35b0000 	cmp	fp, #0
   1ac54:	0a000010 	beq	1ac9c <TargetDebug::procDebuggerLine(char*, char*, int)+0x7c0>
   1ac58:	e59d301c 	ldr	r3, [sp, #28]
   1ac5c:	e59f28ac 	ldr	r2, [pc, #2220]	; 1b510 <TargetDebug::procDebuggerLine(char*, char*, int)+0x1034>
   1ac60:	e3a01005 	mov	r1, #5
   1ac64:	e59f0968 	ldr	r0, [pc, #2408]	; 1b5d4 <TargetDebug::procDebuggerLine(char*, char*, int)+0x10f8>
   1ac68:	ebffbad1 	bl	97b4 <LogWrite>
   1ac6c:	e3a02001 	mov	r2, #1
   1ac70:	e1a01002 	mov	r1, r2
   1ac74:	e1a00002 	mov	r0, r2
   1ac78:	ebffde4f 	bl	125bc <McManager::handleTargetProgram(bool, bool, bool)>
   1ac7c:	e1a02006 	mov	r2, r6
   1ac80:	e59f1830 	ldr	r1, [pc, #2096]	; 1b4b8 <TargetDebug::procDebuggerLine(char*, char*, int)+0xfdc>
   1ac84:	e1a00005 	mov	r0, r5
   1ac88:	eb00467e 	bl	2c688 <strlcat>
   1ac8c:	eafffe45 	b	1a5a8 <TargetDebug::procDebuggerLine(char*, char*, int)+0xcc>
   1ac90:	e3a01000 	mov	r1, #0
   1ac94:	e12fff33 	blx	r3
   1ac98:	eafffefc 	b	1a890 <TargetDebug::procDebuggerLine(char*, char*, int)+0x3b4>
   1ac9c:	e5d43000 	ldrb	r3, [r4]
   1aca0:	e3530020 	cmp	r3, #32
   1aca4:	e1a03004 	mov	r3, r4
   1aca8:	1a000002 	bne	1acb8 <TargetDebug::procDebuggerLine(char*, char*, int)+0x7dc>
   1acac:	e5f32001 	ldrb	r2, [r3, #1]!
   1acb0:	e3520020 	cmp	r2, #32
   1acb4:	0afffffc 	beq	1acac <TargetDebug::procDebuggerLine(char*, char*, int)+0x7d0>
   1acb8:	e59f1854 	ldr	r1, [pc, #2132]	; 1b514 <TargetDebug::procDebuggerLine(char*, char*, int)+0x1038>
   1acbc:	ea00000a 	b	1acec <TargetDebug::procDebuggerLine(char*, char*, int)+0x810>
   1acc0:	e35b0000 	cmp	fp, #0
   1acc4:	0a000011 	beq	1ad10 <TargetDebug::procDebuggerLine(char*, char*, int)+0x834>
   1acc8:	e58d1028 	str	r1, [sp, #40]	; 0x28
   1accc:	ebffc1eb 	bl	b480 <rdtolower>
   1acd0:	e1a0a000 	mov	sl, r0
   1acd4:	e1a0000b 	mov	r0, fp
   1acd8:	ebffc1e8 	bl	b480 <rdtolower>
   1acdc:	e15a0000 	cmp	sl, r0
   1ace0:	e1a03009 	mov	r3, r9
   1ace4:	e59d1028 	ldr	r1, [sp, #40]	; 0x28
   1ace8:	1a000013 	bne	1ad3c <TargetDebug::procDebuggerLine(char*, char*, int)+0x860>
   1acec:	e1a09003 	mov	r9, r3
   1acf0:	e4d90001 	ldrb	r0, [r9], #1
   1acf4:	e5f1b001 	ldrb	fp, [r1, #1]!
   1acf8:	e3500000 	cmp	r0, #0
   1acfc:	1affffef 	bne	1acc0 <TargetDebug::procDebuggerLine(char*, char*, int)+0x7e4>
   1ad00:	e16f3f1b 	clz	r3, fp
   1ad04:	e1a032a3 	lsr	r3, r3, #5
   1ad08:	ea000009 	b	1ad34 <TargetDebug::procDebuggerLine(char*, char*, int)+0x858>
   1ad0c:	e2899001 	add	r9, r9, #1
   1ad10:	e5d30000 	ldrb	r0, [r3]
   1ad14:	e1a0b003 	mov	fp, r3
   1ad18:	ebffc1c5 	bl	b434 <rdisspace>
   1ad1c:	e3500000 	cmp	r0, #0
   1ad20:	e1a03009 	mov	r3, r9
   1ad24:	1afffff8 	bne	1ad0c <TargetDebug::procDebuggerLine(char*, char*, int)+0x830>
   1ad28:	e5db3000 	ldrb	r3, [fp]
   1ad2c:	e16f3f13 	clz	r3, r3
   1ad30:	e1a032a3 	lsr	r3, r3, #5
   1ad34:	e3530000 	cmp	r3, #0
   1ad38:	1afffed4 	bne	1a890 <TargetDebug::procDebuggerLine(char*, char*, int)+0x3b4>
   1ad3c:	e59f27d4 	ldr	r2, [pc, #2004]	; 1b518 <TargetDebug::procDebuggerLine(char*, char*, int)+0x103c>
   1ad40:	e1a01004 	mov	r1, r4
   1ad44:	e1a00007 	mov	r0, r7
   1ad48:	ebfffd6e 	bl	1a308 <TargetDebug::commandMatch(char const*, char const*)>
   1ad4c:	e3500000 	cmp	r0, #0
   1ad50:	0a00000f 	beq	1ad94 <TargetDebug::procDebuggerLine(char*, char*, int)+0x8b8>
   1ad54:	e59d401c 	ldr	r4, [sp, #28]
   1ad58:	e59f27bc 	ldr	r2, [pc, #1980]	; 1b51c <TargetDebug::procDebuggerLine(char*, char*, int)+0x1040>
   1ad5c:	e1a03004 	mov	r3, r4
   1ad60:	e3a01005 	mov	r1, #5
   1ad64:	e59f0868 	ldr	r0, [pc, #2152]	; 1b5d4 <TargetDebug::procDebuggerLine(char*, char*, int)+0x10f8>
   1ad68:	ebffba91 	bl	97b4 <LogWrite>
   1ad6c:	e1a00004 	mov	r0, r4
   1ad70:	e3a0200a 	mov	r2, #10
   1ad74:	e3a01000 	mov	r1, #0
   1ad78:	eb0049c8 	bl	2d4a0 <strtol>
   1ad7c:	e2400001 	sub	r0, r0, #1
   1ad80:	e3500063 	cmp	r0, #99	; 0x63
   1ad84:	8afffec1 	bhi	1a890 <TargetDebug::procDebuggerLine(char*, char*, int)+0x3b4>
   1ad88:	e3a01001 	mov	r1, #1
   1ad8c:	ebfffc9e 	bl	1a00c <TargetDebug::enableBreakpoint(int, bool) [clone .part.0]>
   1ad90:	eafffebe 	b	1a890 <TargetDebug::procDebuggerLine(char*, char*, int)+0x3b4>
   1ad94:	e59f2784 	ldr	r2, [pc, #1924]	; 1b520 <TargetDebug::procDebuggerLine(char*, char*, int)+0x1044>
   1ad98:	e1a01004 	mov	r1, r4
   1ad9c:	e1a00007 	mov	r0, r7
   1ada0:	ebfffd58 	bl	1a308 <TargetDebug::commandMatch(char const*, char const*)>
   1ada4:	e250b000 	subs	fp, r0, #0
   1ada8:	0a000007 	beq	1adcc <TargetDebug::procDebuggerLine(char*, char*, int)+0x8f0>
   1adac:	e3a00001 	mov	r0, #1
   1adb0:	e59f376c 	ldr	r3, [pc, #1900]	; 1b524 <TargetDebug::procDebuggerLine(char*, char*, int)+0x1048>
   1adb4:	e1a02006 	mov	r2, r6
   1adb8:	e5c30000 	strb	r0, [r3]
   1adbc:	e59f16f4 	ldr	r1, [pc, #1780]	; 1b4b8 <TargetDebug::procDebuggerLine(char*, char*, int)+0xfdc>
   1adc0:	e1a00005 	mov	r0, r5
   1adc4:	eb00462f 	bl	2c688 <strlcat>
   1adc8:	eafffdf6 	b	1a5a8 <TargetDebug::procDebuggerLine(char*, char*, int)+0xcc>
   1adcc:	e59f2754 	ldr	r2, [pc, #1876]	; 1b528 <TargetDebug::procDebuggerLine(char*, char*, int)+0x104c>
   1add0:	e1a01004 	mov	r1, r4
   1add4:	e1a00007 	mov	r0, r7
   1add8:	ebfffd4a 	bl	1a308 <TargetDebug::commandMatch(char const*, char const*)>
   1addc:	e2503000 	subs	r3, r0, #0
   1ade0:	0a00000f 	beq	1ae24 <TargetDebug::procDebuggerLine(char*, char*, int)+0x948>
   1ade4:	e59d401c 	ldr	r4, [sp, #28]
   1ade8:	e59f273c 	ldr	r2, [pc, #1852]	; 1b52c <TargetDebug::procDebuggerLine(char*, char*, int)+0x1050>
   1adec:	e1a03004 	mov	r3, r4
   1adf0:	e3a01005 	mov	r1, #5
   1adf4:	e59f07d8 	ldr	r0, [pc, #2008]	; 1b5d4 <TargetDebug::procDebuggerLine(char*, char*, int)+0x10f8>
   1adf8:	ebffba6d 	bl	97b4 <LogWrite>
   1adfc:	e1a00004 	mov	r0, r4
   1ae00:	e3a0200a 	mov	r2, #10
   1ae04:	e1a0100b 	mov	r1, fp
   1ae08:	eb0049a4 	bl	2d4a0 <strtol>
   1ae0c:	e2400001 	sub	r0, r0, #1
   1ae10:	e3500063 	cmp	r0, #99	; 0x63
   1ae14:	8afffe9d 	bhi	1a890 <TargetDebug::procDebuggerLine(char*, char*, int)+0x3b4>
   1ae18:	e1a0100b 	mov	r1, fp
   1ae1c:	ebfffc7a 	bl	1a00c <TargetDebug::enableBreakpoint(int, bool) [clone .part.0]>
   1ae20:	eafffe9a 	b	1a890 <TargetDebug::procDebuggerLine(char*, char*, int)+0x3b4>
   1ae24:	e59f2704 	ldr	r2, [pc, #1796]	; 1b530 <TargetDebug::procDebuggerLine(char*, char*, int)+0x1054>
   1ae28:	e1a01004 	mov	r1, r4
   1ae2c:	e1a00007 	mov	r0, r7
   1ae30:	e58d3028 	str	r3, [sp, #40]	; 0x28
   1ae34:	ebfffd33 	bl	1a308 <TargetDebug::commandMatch(char const*, char const*)>
   1ae38:	e250b000 	subs	fp, r0, #0
   1ae3c:	0a000007 	beq	1ae60 <TargetDebug::procDebuggerLine(char*, char*, int)+0x984>
   1ae40:	e59f06dc 	ldr	r0, [pc, #1756]	; 1b524 <TargetDebug::procDebuggerLine(char*, char*, int)+0x1048>
   1ae44:	e59d3028 	ldr	r3, [sp, #40]	; 0x28
   1ae48:	e1a02006 	mov	r2, r6
   1ae4c:	e5c03000 	strb	r3, [r0]
   1ae50:	e59f1660 	ldr	r1, [pc, #1632]	; 1b4b8 <TargetDebug::procDebuggerLine(char*, char*, int)+0xfdc>
   1ae54:	e1a00005 	mov	r0, r5
   1ae58:	eb00460a 	bl	2c688 <strlcat>
   1ae5c:	eafffdd1 	b	1a5a8 <TargetDebug::procDebuggerLine(char*, char*, int)+0xcc>
   1ae60:	e59f26cc 	ldr	r2, [pc, #1740]	; 1b534 <TargetDebug::procDebuggerLine(char*, char*, int)+0x1058>
   1ae64:	e1a01004 	mov	r1, r4
   1ae68:	e1a00007 	mov	r0, r7
   1ae6c:	ebfffd25 	bl	1a308 <TargetDebug::commandMatch(char const*, char const*)>
   1ae70:	e2508000 	subs	r8, r0, #0
   1ae74:	0a00001f 	beq	1aef8 <TargetDebug::procDebuggerLine(char*, char*, int)+0xa1c>
   1ae78:	e59d4020 	ldr	r4, [sp, #32]
   1ae7c:	e59d701c 	ldr	r7, [sp, #28]
   1ae80:	e58d4000 	str	r4, [sp]
   1ae84:	e1a03007 	mov	r3, r7
   1ae88:	e59f26a8 	ldr	r2, [pc, #1704]	; 1b538 <TargetDebug::procDebuggerLine(char*, char*, int)+0x105c>
   1ae8c:	e3a01005 	mov	r1, #5
   1ae90:	e59f073c 	ldr	r0, [pc, #1852]	; 1b5d4 <TargetDebug::procDebuggerLine(char*, char*, int)+0x10f8>
   1ae94:	ebffba46 	bl	97b4 <LogWrite>
   1ae98:	e3a0200a 	mov	r2, #10
   1ae9c:	e1a00007 	mov	r0, r7
   1aea0:	e1a0100b 	mov	r1, fp
   1aea4:	eb00497d 	bl	2d4a0 <strtol>
   1aea8:	e1a02004 	mov	r2, r4
   1aeac:	e5d43000 	ldrb	r3, [r4]
   1aeb0:	e2404001 	sub	r4, r0, #1
   1aeb4:	e3530050 	cmp	r3, #80	; 0x50
   1aeb8:	15d22002 	ldrbne	r2, [r2, #2]
   1aebc:	1a000004 	bne	1aed4 <TargetDebug::procDebuggerLine(char*, char*, int)+0x9f8>
   1aec0:	e59d2020 	ldr	r2, [sp, #32]
   1aec4:	e5d21001 	ldrb	r1, [r2, #1]
   1aec8:	e5d22002 	ldrb	r2, [r2, #2]
   1aecc:	e3510043 	cmp	r1, #67	; 0x43
   1aed0:	0a000032 	beq	1afa0 <TargetDebug::procDebuggerLine(char*, char*, int)+0xac4>
   1aed4:	e58d2004 	str	r2, [sp, #4]
   1aed8:	e59d2020 	ldr	r2, [sp, #32]
   1aedc:	e3a01004 	mov	r1, #4
   1aee0:	e5d22001 	ldrb	r2, [r2, #1]
   1aee4:	e59f06e8 	ldr	r0, [pc, #1768]	; 1b5d4 <TargetDebug::procDebuggerLine(char*, char*, int)+0x10f8>
   1aee8:	e58d2000 	str	r2, [sp]
   1aeec:	e59f2648 	ldr	r2, [pc, #1608]	; 1b53c <TargetDebug::procDebuggerLine(char*, char*, int)+0x1060>
   1aef0:	ebffba2f 	bl	97b4 <LogWrite>
   1aef4:	eafffdab 	b	1a5a8 <TargetDebug::procDebuggerLine(char*, char*, int)+0xcc>
   1aef8:	e59f2640 	ldr	r2, [pc, #1600]	; 1b540 <TargetDebug::procDebuggerLine(char*, char*, int)+0x1064>
   1aefc:	e1a01004 	mov	r1, r4
   1af00:	e1a00007 	mov	r0, r7
   1af04:	ebfffcff 	bl	1a308 <TargetDebug::commandMatch(char const*, char const*)>
   1af08:	e250b000 	subs	fp, r0, #0
   1af0c:	0a000035 	beq	1afe8 <TargetDebug::procDebuggerLine(char*, char*, int)+0xb0c>
   1af10:	e59d4020 	ldr	r4, [sp, #32]
   1af14:	e59d3024 	ldr	r3, [sp, #36]	; 0x24
   1af18:	e59d901c 	ldr	r9, [sp, #28]
   1af1c:	e58d3004 	str	r3, [sp, #4]
   1af20:	e58d4000 	str	r4, [sp]
   1af24:	e1a03009 	mov	r3, r9
   1af28:	e59f2614 	ldr	r2, [pc, #1556]	; 1b544 <TargetDebug::procDebuggerLine(char*, char*, int)+0x1068>
   1af2c:	e3a01005 	mov	r1, #5
   1af30:	e59f069c 	ldr	r0, [pc, #1692]	; 1b5d4 <TargetDebug::procDebuggerLine(char*, char*, int)+0x10f8>
   1af34:	ebffba1e 	bl	97b4 <LogWrite>
   1af38:	e1a01008 	mov	r1, r8
   1af3c:	e3a0200a 	mov	r2, #10
   1af40:	e1a00009 	mov	r0, r9
   1af44:	eb004955 	bl	2d4a0 <strtol>
   1af48:	e1a01004 	mov	r1, r4
   1af4c:	e59f25f4 	ldr	r2, [pc, #1524]	; 1b548 <TargetDebug::procDebuggerLine(char*, char*, int)+0x106c>
   1af50:	e2404001 	sub	r4, r0, #1
   1af54:	e1a00007 	mov	r0, r7
   1af58:	ebfffcea 	bl	1a308 <TargetDebug::commandMatch(char const*, char const*)>
   1af5c:	e3500000 	cmp	r0, #0
   1af60:	0a00001b 	beq	1afd4 <TargetDebug::procDebuggerLine(char*, char*, int)+0xaf8>
   1af64:	e59d2024 	ldr	r2, [sp, #36]	; 0x24
   1af68:	e3540063 	cmp	r4, #99	; 0x63
   1af6c:	83a03000 	movhi	r3, #0
   1af70:	93a03001 	movls	r3, #1
   1af74:	e3520000 	cmp	r2, #0
   1af78:	03a03000 	moveq	r3, #0
   1af7c:	e3530000 	cmp	r3, #0
   1af80:	0afffd88 	beq	1a5a8 <TargetDebug::procDebuggerLine(char*, char*, int)+0xcc>
   1af84:	e3a0006c 	mov	r0, #108	; 0x6c
   1af88:	e59f35bc 	ldr	r3, [pc, #1468]	; 1b54c <TargetDebug::procDebuggerLine(char*, char*, int)+0x1070>
   1af8c:	e1a01002 	mov	r1, r2
   1af90:	e0203490 	mla	r0, r0, r4, r3
   1af94:	e3a02064 	mov	r2, #100	; 0x64
   1af98:	eb0045ea 	bl	2c748 <strlcpy>
   1af9c:	eafffd81 	b	1a5a8 <TargetDebug::procDebuggerLine(char*, char*, int)+0xcc>
   1afa0:	e352003d 	cmp	r2, #61	; 0x3d
   1afa4:	1affffca 	bne	1aed4 <TargetDebug::procDebuggerLine(char*, char*, int)+0x9f8>
   1afa8:	e59d3020 	ldr	r3, [sp, #32]
   1afac:	e1a0100b 	mov	r1, fp
   1afb0:	e2830003 	add	r0, r3, #3
   1afb4:	e3a02010 	mov	r2, #16
   1afb8:	eb004938 	bl	2d4a0 <strtol>
   1afbc:	e3540063 	cmp	r4, #99	; 0x63
   1afc0:	93a0206c 	movls	r2, #108	; 0x6c
   1afc4:	959f3584 	ldrls	r3, [pc, #1412]	; 1b550 <TargetDebug::procDebuggerLine(char*, char*, int)+0x1074>
   1afc8:	90243492 	mlals	r4, r2, r4, r3
   1afcc:	95840068 	strls	r0, [r4, #104]	; 0x68
   1afd0:	eafffd74 	b	1a5a8 <TargetDebug::procDebuggerLine(char*, char*, int)+0xcc>
   1afd4:	e59f2578 	ldr	r2, [pc, #1400]	; 1b554 <TargetDebug::procDebuggerLine(char*, char*, int)+0x1078>
   1afd8:	e3a01004 	mov	r1, #4
   1afdc:	e59f05f0 	ldr	r0, [pc, #1520]	; 1b5d4 <TargetDebug::procDebuggerLine(char*, char*, int)+0x10f8>
   1afe0:	ebffb9f3 	bl	97b4 <LogWrite>
   1afe4:	eafffd6f 	b	1a5a8 <TargetDebug::procDebuggerLine(char*, char*, int)+0xcc>
   1afe8:	e59f2568 	ldr	r2, [pc, #1384]	; 1b558 <TargetDebug::procDebuggerLine(char*, char*, int)+0x107c>
   1afec:	e1a01004 	mov	r1, r4
   1aff0:	e1a00007 	mov	r0, r7
   1aff4:	ebfffcc3 	bl	1a308 <TargetDebug::commandMatch(char const*, char const*)>
   1aff8:	e3500000 	cmp	r0, #0
   1affc:	0a00000e 	beq	1b03c <TargetDebug::procDebuggerLine(char*, char*, int)+0xb60>
   1b000:	e1a0100b 	mov	r1, fp
   1b004:	e3a0200a 	mov	r2, #10
   1b008:	e59d001c 	ldr	r0, [sp, #28]
   1b00c:	eb004923 	bl	2d4a0 <strtol>
   1b010:	e1a04000 	mov	r4, r0
   1b014:	ebfff983 	bl	19628 <RAMEmulator::getMemBuffer()>
   1b018:	e3a0c001 	mov	ip, #1
   1b01c:	e1a02004 	mov	r2, r4
   1b020:	e58db004 	str	fp, [sp, #4]
   1b024:	e58db000 	str	fp, [sp]
   1b028:	e1a0100b 	mov	r1, fp
   1b02c:	e58dc008 	str	ip, [sp, #8]
   1b030:	e1a03005 	mov	r3, r5
   1b034:	ebffd1dd 	bl	f7b0 <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)>
   1b038:	eafffd5a 	b	1a5a8 <TargetDebug::procDebuggerLine(char*, char*, int)+0xcc>
   1b03c:	e59f2518 	ldr	r2, [pc, #1304]	; 1b55c <TargetDebug::procDebuggerLine(char*, char*, int)+0x1080>
   1b040:	e1a01004 	mov	r1, r4
   1b044:	e1a00007 	mov	r0, r7
   1b048:	ebfffcae 	bl	1a308 <TargetDebug::commandMatch(char const*, char const*)>
   1b04c:	e3500000 	cmp	r0, #0
   1b050:	0a000032 	beq	1b120 <TargetDebug::procDebuggerLine(char*, char*, int)+0xc44>
   1b054:	e597e020 	ldr	lr, [r7, #32]
   1b058:	e597c01c 	ldr	ip, [r7, #28]
   1b05c:	e5970010 	ldr	r0, [r7, #16]
   1b060:	e597100c 	ldr	r1, [r7, #12]
   1b064:	e5972018 	ldr	r2, [r7, #24]
   1b068:	e5973014 	ldr	r3, [r7, #20]
   1b06c:	e58de014 	str	lr, [sp, #20]
   1b070:	e58dc010 	str	ip, [sp, #16]
   1b074:	e58d000c 	str	r0, [sp, #12]
   1b078:	e58d1008 	str	r1, [sp, #8]
   1b07c:	e58d2004 	str	r2, [sp, #4]
   1b080:	e58d3000 	str	r3, [sp]
   1b084:	e1c720d4 	ldrd	r2, [r7, #4]
   1b088:	e28d0034 	add	r0, sp, #52	; 0x34
   1b08c:	e59f14cc 	ldr	r1, [pc, #1228]	; 1b560 <TargetDebug::procDebuggerLine(char*, char*, int)+0x1084>
   1b090:	ebffba47 	bl	99b4 <ee_sprintf>
   1b094:	e1a02006 	mov	r2, r6
   1b098:	e28d1034 	add	r1, sp, #52	; 0x34
   1b09c:	e1a00005 	mov	r0, r5
   1b0a0:	eb0045a8 	bl	2c748 <strlcpy>
   1b0a4:	e597c03c 	ldr	ip, [r7, #60]	; 0x3c
   1b0a8:	e5971038 	ldr	r1, [r7, #56]	; 0x38
   1b0ac:	e5972028 	ldr	r2, [r7, #40]	; 0x28
   1b0b0:	e5973024 	ldr	r3, [r7, #36]	; 0x24
   1b0b4:	e58dc00c 	str	ip, [sp, #12]
   1b0b8:	e58d1008 	str	r1, [sp, #8]
   1b0bc:	e58d2004 	str	r2, [sp, #4]
   1b0c0:	e58d3000 	str	r3, [sp]
   1b0c4:	e597302c 	ldr	r3, [r7, #44]	; 0x2c
   1b0c8:	e5972030 	ldr	r2, [r7, #48]	; 0x30
   1b0cc:	e28d0034 	add	r0, sp, #52	; 0x34
   1b0d0:	e59f148c 	ldr	r1, [pc, #1164]	; 1b564 <TargetDebug::procDebuggerLine(char*, char*, int)+0x1088>
   1b0d4:	ebffba36 	bl	99b4 <ee_sprintf>
   1b0d8:	e1a02006 	mov	r2, r6
   1b0dc:	e28d1034 	add	r1, sp, #52	; 0x34
   1b0e0:	e1a00005 	mov	r0, r5
   1b0e4:	eb004567 	bl	2c688 <strlcat>
   1b0e8:	e5972048 	ldr	r2, [r7, #72]	; 0x48
   1b0ec:	e5973044 	ldr	r3, [r7, #68]	; 0x44
   1b0f0:	e58d2004 	str	r2, [sp, #4]
   1b0f4:	e58d3000 	str	r3, [sp]
   1b0f8:	e5972034 	ldr	r2, [r7, #52]	; 0x34
   1b0fc:	e28d0034 	add	r0, sp, #52	; 0x34
   1b100:	e5973040 	ldr	r3, [r7, #64]	; 0x40
   1b104:	e59f145c 	ldr	r1, [pc, #1116]	; 1b568 <TargetDebug::procDebuggerLine(char*, char*, int)+0x108c>
   1b108:	ebffba29 	bl	99b4 <ee_sprintf>
   1b10c:	e1a02006 	mov	r2, r6
   1b110:	e28d1034 	add	r1, sp, #52	; 0x34
   1b114:	e1a00005 	mov	r0, r5
   1b118:	eb00455a 	bl	2c688 <strlcat>
   1b11c:	eafffd21 	b	1a5a8 <TargetDebug::procDebuggerLine(char*, char*, int)+0xcc>
   1b120:	e59f2444 	ldr	r2, [pc, #1092]	; 1b56c <TargetDebug::procDebuggerLine(char*, char*, int)+0x1090>
   1b124:	e1a01004 	mov	r1, r4
   1b128:	e1a00007 	mov	r0, r7
   1b12c:	ebfffc75 	bl	1a308 <TargetDebug::commandMatch(char const*, char const*)>
   1b130:	e3500000 	cmp	r0, #0
   1b134:	0a000023 	beq	1b1c8 <TargetDebug::procDebuggerLine(char*, char*, int)+0xcec>
   1b138:	e59d001c 	ldr	r0, [sp, #28]
   1b13c:	eb004596 	bl	2c79c <strlen>
   1b140:	e3500005 	cmp	r0, #5
   1b144:	93a04000 	movls	r4, #0
   1b148:	8a000029 	bhi	1b1f4 <TargetDebug::procDebuggerLine(char*, char*, int)+0xd18>
   1b14c:	e3a0200a 	mov	r2, #10
   1b150:	e3a01000 	mov	r1, #0
   1b154:	e59d001c 	ldr	r0, [sp, #28]
   1b158:	eb0048d0 	bl	2d4a0 <strtol>
   1b15c:	e3a0200a 	mov	r2, #10
   1b160:	e0804004 	add	r4, r0, r4
   1b164:	e3a01000 	mov	r1, #0
   1b168:	e59d0020 	ldr	r0, [sp, #32]
   1b16c:	eb0048cb 	bl	2d4a0 <strtol>
   1b170:	e3540000 	cmp	r4, #0
   1b174:	e1a09000 	mov	r9, r0
   1b178:	bafffd0a 	blt	1a5a8 <TargetDebug::procDebuggerLine(char*, char*, int)+0xcc>
   1b17c:	ebfff92c 	bl	19634 <RAMEmulator::getMemBufferLen()>
   1b180:	e1500004 	cmp	r0, r4
   1b184:	bafffd07 	blt	1a5a8 <TargetDebug::procDebuggerLine(char*, char*, int)+0xcc>
   1b188:	e3a07000 	mov	r7, #0
   1b18c:	e59f83dc 	ldr	r8, [pc, #988]	; 1b570 <TargetDebug::procDebuggerLine(char*, char*, int)+0x1094>
   1b190:	e1570009 	cmp	r7, r9
   1b194:	e0870004 	add	r0, r7, r4
   1b198:	aafffd02 	bge	1a5a8 <TargetDebug::procDebuggerLine(char*, char*, int)+0xcc>
   1b19c:	ebfff8d2 	bl	194ec <RAMEmulator::getMemoryByte(unsigned long)>
   1b1a0:	e1a01008 	mov	r1, r8
   1b1a4:	e1a02000 	mov	r2, r0
   1b1a8:	e28d0034 	add	r0, sp, #52	; 0x34
   1b1ac:	ebffba00 	bl	99b4 <ee_sprintf>
   1b1b0:	e1a02006 	mov	r2, r6
   1b1b4:	e28d1034 	add	r1, sp, #52	; 0x34
   1b1b8:	e1a00005 	mov	r0, r5
   1b1bc:	e2877001 	add	r7, r7, #1
   1b1c0:	eb004530 	bl	2c688 <strlcat>
   1b1c4:	eafffff1 	b	1b190 <TargetDebug::procDebuggerLine(char*, char*, int)+0xcb4>
   1b1c8:	e59f23a4 	ldr	r2, [pc, #932]	; 1b574 <TargetDebug::procDebuggerLine(char*, char*, int)+0x1098>
   1b1cc:	e1a01004 	mov	r1, r4
   1b1d0:	e1a00007 	mov	r0, r7
   1b1d4:	ebfffc4b 	bl	1a308 <TargetDebug::commandMatch(char const*, char const*)>
   1b1d8:	e3500000 	cmp	r0, #0
   1b1dc:	0a00001c 	beq	1b254 <TargetDebug::procDebuggerLine(char*, char*, int)+0xd78>
   1b1e0:	e1a02006 	mov	r2, r6
   1b1e4:	e59f138c 	ldr	r1, [pc, #908]	; 1b578 <TargetDebug::procDebuggerLine(char*, char*, int)+0x109c>
   1b1e8:	e1a00005 	mov	r0, r5
   1b1ec:	eb004525 	bl	2c688 <strlcat>
   1b1f0:	eafffcec 	b	1a5a8 <TargetDebug::procDebuggerLine(char*, char*, int)+0xcc>
   1b1f4:	e3a03000 	mov	r3, #0
   1b1f8:	e28d4034 	add	r4, sp, #52	; 0x34
   1b1fc:	e58d3034 	str	r3, [sp, #52]	; 0x34
   1b200:	e1a02003 	mov	r2, r3
   1b204:	e5843004 	str	r3, [r4, #4]
   1b208:	e1c430b8 	strh	r3, [r4, #8]
   1b20c:	e59d301c 	ldr	r3, [sp, #28]
   1b210:	e2833004 	add	r3, r3, #4
   1b214:	e5f31001 	ldrb	r1, [r3, #1]!
   1b218:	e3510000 	cmp	r1, #0
   1b21c:	e7c41002 	strb	r1, [r4, r2]
   1b220:	e2822001 	add	r2, r2, #1
   1b224:	0a000001 	beq	1b230 <TargetDebug::procDebuggerLine(char*, char*, int)+0xd54>
   1b228:	e352000a 	cmp	r2, #10
   1b22c:	1afffff8 	bne	1b214 <TargetDebug::procDebuggerLine(char*, char*, int)+0xd38>
   1b230:	e1a00004 	mov	r0, r4
   1b234:	e3a0200a 	mov	r2, #10
   1b238:	e3a01000 	mov	r1, #0
   1b23c:	eb004897 	bl	2d4a0 <strtol>
   1b240:	e3a03000 	mov	r3, #0
   1b244:	e59d201c 	ldr	r2, [sp, #28]
   1b248:	e1a04000 	mov	r4, r0
   1b24c:	e5c23005 	strb	r3, [r2, #5]
   1b250:	eaffffbd 	b	1b14c <TargetDebug::procDebuggerLine(char*, char*, int)+0xc70>
   1b254:	e59f2320 	ldr	r2, [pc, #800]	; 1b57c <TargetDebug::procDebuggerLine(char*, char*, int)+0x10a0>
   1b258:	e1a01004 	mov	r1, r4
   1b25c:	e1a00007 	mov	r0, r7
   1b260:	ebfffc28 	bl	1a308 <TargetDebug::commandMatch(char const*, char const*)>
   1b264:	e3500000 	cmp	r0, #0
   1b268:	0a000004 	beq	1b280 <TargetDebug::procDebuggerLine(char*, char*, int)+0xda4>
   1b26c:	e1a02006 	mov	r2, r6
   1b270:	e59f1308 	ldr	r1, [pc, #776]	; 1b580 <TargetDebug::procDebuggerLine(char*, char*, int)+0x10a4>
   1b274:	e1a00005 	mov	r0, r5
   1b278:	eb004502 	bl	2c688 <strlcat>
   1b27c:	eafffcc9 	b	1a5a8 <TargetDebug::procDebuggerLine(char*, char*, int)+0xcc>
   1b280:	e59f22fc 	ldr	r2, [pc, #764]	; 1b584 <TargetDebug::procDebuggerLine(char*, char*, int)+0x10a8>
   1b284:	e1a01004 	mov	r1, r4
   1b288:	e1a00007 	mov	r0, r7
   1b28c:	ebfffc1d 	bl	1a308 <TargetDebug::commandMatch(char const*, char const*)>
   1b290:	e3500000 	cmp	r0, #0
   1b294:	0a000004 	beq	1b2ac <TargetDebug::procDebuggerLine(char*, char*, int)+0xdd0>
   1b298:	e1a02006 	mov	r2, r6
   1b29c:	e59f12e4 	ldr	r1, [pc, #740]	; 1b588 <TargetDebug::procDebuggerLine(char*, char*, int)+0x10ac>
   1b2a0:	e1a00005 	mov	r0, r5
   1b2a4:	eb0044f7 	bl	2c688 <strlcat>
   1b2a8:	eafffcbe 	b	1a5a8 <TargetDebug::procDebuggerLine(char*, char*, int)+0xcc>
   1b2ac:	e59f22d8 	ldr	r2, [pc, #728]	; 1b58c <TargetDebug::procDebuggerLine(char*, char*, int)+0x10b0>
   1b2b0:	e1a01004 	mov	r1, r4
   1b2b4:	e1a00007 	mov	r0, r7
   1b2b8:	ebfffc12 	bl	1a308 <TargetDebug::commandMatch(char const*, char const*)>
   1b2bc:	e2509000 	subs	r9, r0, #0
   1b2c0:	0a000004 	beq	1b2d8 <TargetDebug::procDebuggerLine(char*, char*, int)+0xdfc>
   1b2c4:	e1a02006 	mov	r2, r6
   1b2c8:	e59f12c0 	ldr	r1, [pc, #704]	; 1b590 <TargetDebug::procDebuggerLine(char*, char*, int)+0x10b4>
   1b2cc:	e1a00005 	mov	r0, r5
   1b2d0:	eb0044ec 	bl	2c688 <strlcat>
   1b2d4:	eafffcb3 	b	1a5a8 <TargetDebug::procDebuggerLine(char*, char*, int)+0xcc>
   1b2d8:	e59f22b4 	ldr	r2, [pc, #692]	; 1b594 <TargetDebug::procDebuggerLine(char*, char*, int)+0x10b8>
   1b2dc:	e1a01004 	mov	r1, r4
   1b2e0:	e1a00007 	mov	r0, r7
   1b2e4:	ebfffc07 	bl	1a308 <TargetDebug::commandMatch(char const*, char const*)>
   1b2e8:	e250a000 	subs	sl, r0, #0
   1b2ec:	0a000019 	beq	1b358 <TargetDebug::procDebuggerLine(char*, char*, int)+0xe7c>
   1b2f0:	e3a0200a 	mov	r2, #10
   1b2f4:	e1a01009 	mov	r1, r9
   1b2f8:	e59d001c 	ldr	r0, [sp, #28]
   1b2fc:	e5977008 	ldr	r7, [r7, #8]
   1b300:	eb004866 	bl	2d4a0 <strtol>
   1b304:	e59f328c 	ldr	r3, [pc, #652]	; 1b598 <TargetDebug::procDebuggerLine(char*, char*, int)+0x10bc>
   1b308:	e2402001 	sub	r2, r0, #1
   1b30c:	e1520003 	cmp	r2, r3
   1b310:	8afffca4 	bhi	1a5a8 <TargetDebug::procDebuggerLine(char*, char*, int)+0xcc>
   1b314:	e59f9280 	ldr	r9, [pc, #640]	; 1b59c <TargetDebug::procDebuggerLine(char*, char*, int)+0x10c0>
   1b318:	e0878080 	add	r8, r7, r0, lsl #1
   1b31c:	e28d4034 	add	r4, sp, #52	; 0x34
   1b320:	e1a00007 	mov	r0, r7
   1b324:	ebfff878 	bl	1950c <RAMEmulator::getMemoryWord(unsigned long)>
   1b328:	e1a01009 	mov	r1, r9
   1b32c:	e1a02000 	mov	r2, r0
   1b330:	e1a00004 	mov	r0, r4
   1b334:	ebffb99e 	bl	99b4 <ee_sprintf>
   1b338:	e2877002 	add	r7, r7, #2
   1b33c:	e1a02006 	mov	r2, r6
   1b340:	e1a01004 	mov	r1, r4
   1b344:	e1a00005 	mov	r0, r5
   1b348:	eb0044ce 	bl	2c688 <strlcat>
   1b34c:	e1580007 	cmp	r8, r7
   1b350:	1afffff2 	bne	1b320 <TargetDebug::procDebuggerLine(char*, char*, int)+0xe44>
   1b354:	eafffc93 	b	1a5a8 <TargetDebug::procDebuggerLine(char*, char*, int)+0xcc>
   1b358:	e59f2240 	ldr	r2, [pc, #576]	; 1b5a0 <TargetDebug::procDebuggerLine(char*, char*, int)+0x10c4>
   1b35c:	e1a01004 	mov	r1, r4
   1b360:	e1a00007 	mov	r0, r7
   1b364:	ebfffbe7 	bl	1a308 <TargetDebug::commandMatch(char const*, char const*)>
   1b368:	e2509000 	subs	r9, r0, #0
   1b36c:	0a000011 	beq	1b3b8 <TargetDebug::procDebuggerLine(char*, char*, int)+0xedc>
   1b370:	ebffdc8d 	bl	125ac <McManager::targetRelease()>
   1b374:	e3500000 	cmp	r0, #0
   1b378:	e5c7a04d 	strb	sl, [r7, #77]	; 0x4d
   1b37c:	0a000008 	beq	1b3a4 <TargetDebug::procDebuggerLine(char*, char*, int)+0xec8>
   1b380:	e3500003 	cmp	r0, #3
   1b384:	959f3248 	ldrls	r3, [pc, #584]	; 1b5d4 <TargetDebug::procDebuggerLine(char*, char*, int)+0x10f8>
   1b388:	859f3238 	ldrhi	r3, [pc, #568]	; 1b5c8 <TargetDebug::procDebuggerLine(char*, char*, int)+0x10ec>
   1b38c:	90833100 	addls	r3, r3, r0, lsl #2
   1b390:	9593300c 	ldrls	r3, [r3, #12]
   1b394:	e59f2208 	ldr	r2, [pc, #520]	; 1b5a4 <TargetDebug::procDebuggerLine(char*, char*, int)+0x10c8>
   1b398:	e3a01004 	mov	r1, #4
   1b39c:	e59f0230 	ldr	r0, [pc, #560]	; 1b5d4 <TargetDebug::procDebuggerLine(char*, char*, int)+0x10f8>
   1b3a0:	ebffb903 	bl	97b4 <LogWrite>
   1b3a4:	e1a02006 	mov	r2, r6
   1b3a8:	e1a00005 	mov	r0, r5
   1b3ac:	e59f11f4 	ldr	r1, [pc, #500]	; 1b5a8 <TargetDebug::procDebuggerLine(char*, char*, int)+0x10cc>
   1b3b0:	eb0044b4 	bl	2c688 <strlcat>
   1b3b4:	eafffc83 	b	1a5c8 <TargetDebug::procDebuggerLine(char*, char*, int)+0xec>
   1b3b8:	e59f21ec 	ldr	r2, [pc, #492]	; 1b5ac <TargetDebug::procDebuggerLine(char*, char*, int)+0x10d0>
   1b3bc:	e1a01004 	mov	r1, r4
   1b3c0:	e1a00007 	mov	r0, r7
   1b3c4:	ebfffbcf 	bl	1a308 <TargetDebug::commandMatch(char const*, char const*)>
   1b3c8:	e2508000 	subs	r8, r0, #0
   1b3cc:	0a000011 	beq	1b418 <TargetDebug::procDebuggerLine(char*, char*, int)+0xf3c>
   1b3d0:	e3a04001 	mov	r4, #1
   1b3d4:	ebfff893 	bl	19628 <RAMEmulator::getMemBuffer()>
   1b3d8:	e58d4008 	str	r4, [sp, #8]
   1b3dc:	e58d9004 	str	r9, [sp, #4]
   1b3e0:	e58d9000 	str	r9, [sp]
   1b3e4:	e1a01009 	mov	r1, r9
   1b3e8:	e1a03005 	mov	r3, r5
   1b3ec:	e5972004 	ldr	r2, [r7, #4]
   1b3f0:	ebffd0ee 	bl	f7b0 <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)>
   1b3f4:	ebffdc6d 	bl	125b0 <McManager::targetStep()>
   1b3f8:	e3500000 	cmp	r0, #0
   1b3fc:	1a00008a 	bne	1b62c <TargetDebug::procDebuggerLine(char*, char*, int)+0x1150>
   1b400:	e5c74058 	strb	r4, [r7, #88]	; 0x58
   1b404:	e5c70059 	strb	r0, [r7, #89]	; 0x59
   1b408:	e587005c 	str	r0, [r7, #92]	; 0x5c
   1b40c:	e5870060 	str	r0, [r7, #96]	; 0x60
   1b410:	e5c7404d 	strb	r4, [r7, #77]	; 0x4d
   1b414:	eafffc63 	b	1a5a8 <TargetDebug::procDebuggerLine(char*, char*, int)+0xcc>
   1b418:	e59f2190 	ldr	r2, [pc, #400]	; 1b5b0 <TargetDebug::procDebuggerLine(char*, char*, int)+0x10d4>
   1b41c:	e1a01004 	mov	r1, r4
   1b420:	e1a00007 	mov	r0, r7
   1b424:	ebfffbb7 	bl	1a308 <TargetDebug::commandMatch(char const*, char const*)>
   1b428:	e3500000 	cmp	r0, #0
   1b42c:	0a00006a 	beq	1b5dc <TargetDebug::procDebuggerLine(char*, char*, int)+0x1100>
   1b430:	e3a04001 	mov	r4, #1
   1b434:	ebfff87b 	bl	19628 <RAMEmulator::getMemBuffer()>
   1b438:	e58d4008 	str	r4, [sp, #8]
   1b43c:	e58d8004 	str	r8, [sp, #4]
   1b440:	e58d8000 	str	r8, [sp]
   1b444:	e1a03005 	mov	r3, r5
   1b448:	e5972004 	ldr	r2, [r7, #4]
   1b44c:	e1a01008 	mov	r1, r8
   1b450:	ebffd0d6 	bl	f7b0 <disasmZ80(unsigned char*, unsigned long, unsigned long, char*, int, int, int)>
   1b454:	e5972004 	ldr	r2, [r7, #4]
   1b458:	e59f3154 	ldr	r3, [pc, #340]	; 1b5b4 <TargetDebug::procDebuggerLine(char*, char*, int)+0x10d8>
   1b45c:	e0822000 	add	r2, r2, r0
   1b460:	e58321a0 	str	r2, [r3, #416]	; 0x1a0
   1b464:	e5c34195 	strb	r4, [r3, #405]	; 0x195
   1b468:	e5c38196 	strb	r8, [r3, #406]	; 0x196
   1b46c:	ebffdc4e 	bl	125ac <McManager::targetRelease()>
   1b470:	e3500000 	cmp	r0, #0
   1b474:	e5c7804d 	strb	r8, [r7, #77]	; 0x4d
   1b478:	0a000008 	beq	1b4a0 <TargetDebug::procDebuggerLine(char*, char*, int)+0xfc4>
   1b47c:	e3500003 	cmp	r0, #3
   1b480:	959f314c 	ldrls	r3, [pc, #332]	; 1b5d4 <TargetDebug::procDebuggerLine(char*, char*, int)+0x10f8>
   1b484:	859f313c 	ldrhi	r3, [pc, #316]	; 1b5c8 <TargetDebug::procDebuggerLine(char*, char*, int)+0x10ec>
   1b488:	90833100 	addls	r3, r3, r0, lsl #2
   1b48c:	9593300c 	ldrls	r3, [r3, #12]
   1b490:	e59f2120 	ldr	r2, [pc, #288]	; 1b5b8 <TargetDebug::procDebuggerLine(char*, char*, int)+0x10dc>
   1b494:	e3a01004 	mov	r1, #4
   1b498:	e59f0134 	ldr	r0, [pc, #308]	; 1b5d4 <TargetDebug::procDebuggerLine(char*, char*, int)+0x10f8>
   1b49c:	ebffb8c4 	bl	97b4 <LogWrite>
   1b4a0:	e1a02006 	mov	r2, r6
   1b4a4:	e1a00005 	mov	r0, r5
   1b4a8:	e59f110c 	ldr	r1, [pc, #268]	; 1b5bc <TargetDebug::procDebuggerLine(char*, char*, int)+0x10e0>
   1b4ac:	eb0044a5 	bl	2c748 <strlcpy>
   1b4b0:	eafffc44 	b	1a5c8 <TargetDebug::procDebuggerLine(char*, char*, int)+0xec>
   1b4b4:	000304ec 	.word	0x000304ec
   1b4b8:	00030310 	.word	0x00030310
   1b4bc:	0002fd9b 	.word	0x0002fd9b
   1b4c0:	0002fda4 	.word	0x0002fda4
   1b4c4:	0002fd64 	.word	0x0002fd64
   1b4c8:	0002fd90 	.word	0x0002fd90
   1b4cc:	0002fdb3 	.word	0x0002fdb3
   1b4d0:	0002fdc0 	.word	0x0002fdc0
   1b4d4:	0002fdc7 	.word	0x0002fdc7
   1b4d8:	0002fddb 	.word	0x0002fddb
   1b4dc:	0002fdef 	.word	0x0002fdef
   1b4e0:	0002fe00 	.word	0x0002fe00
   1b4e4:	000114c0 	.word	0x000114c0
   1b4e8:	0002fe0f 	.word	0x0002fe0f
   1b4ec:	0002fe10 	.word	0x0002fe10
   1b4f0:	0002fe20 	.word	0x0002fe20
   1b4f4:	0002fe43 	.word	0x0002fe43
   1b4f8:	0002fe44 	.word	0x0002fe44
   1b4fc:	0002fe54 	.word	0x0002fe54
   1b500:	0002fe7f 	.word	0x0002fe7f
   1b504:	0002fe88 	.word	0x0002fe88
   1b508:	0007a120 	.word	0x0007a120
   1b50c:	0002feab 	.word	0x0002feab
   1b510:	0002feb8 	.word	0x0002feb8
   1b514:	0002fec7 	.word	0x0002fec7
   1b518:	0002fee0 	.word	0x0002fee0
   1b51c:	0002fef4 	.word	0x0002fef4
   1b520:	0002ff0c 	.word	0x0002ff0c
   1b524:	00042320 	.word	0x00042320
   1b528:	0002ff20 	.word	0x0002ff20
   1b52c:	0002ff34 	.word	0x0002ff34
   1b530:	0002ff4c 	.word	0x0002ff4c
   1b534:	0002ff60 	.word	0x0002ff60
   1b538:	0002ff70 	.word	0x0002ff70
   1b53c:	0002ff88 	.word	0x0002ff88
   1b540:	0002ffc0 	.word	0x0002ffc0
   1b544:	0002ffd8 	.word	0x0002ffd8
   1b548:	0002fff8 	.word	0x0002fff8
   1b54c:	0006aed1 	.word	0x0006aed1
   1b550:	0006aed0 	.word	0x0006aed0
   1b554:	00030000 	.word	0x00030000
   1b558:	00030020 	.word	0x00030020
   1b55c:	0003002c 	.word	0x0003002c
   1b560:	0002efb4 	.word	0x0002efb4
   1b564:	0002eff4 	.word	0x0002eff4
   1b568:	0002f028 	.word	0x0002f028
   1b56c:	0003003c 	.word	0x0003003c
   1b570:	0002f668 	.word	0x0002f668
   1b574:	00030058 	.word	0x00030058
   1b578:	00030048 	.word	0x00030048
   1b57c:	0003007c 	.word	0x0003007c
   1b580:	0003006c 	.word	0x0003006c
   1b584:	000300a0 	.word	0x000300a0
   1b588:	00030090 	.word	0x00030090
   1b58c:	000300c8 	.word	0x000300c8
   1b590:	000300b8 	.word	0x000300b8
   1b594:	000300dc 	.word	0x000300dc
   1b598:	000001fe 	.word	0x000001fe
   1b59c:	000300f0 	.word	0x000300f0
   1b5a0:	000300f8 	.word	0x000300f8
   1b5a4:	000300fc 	.word	0x000300fc
   1b5a8:	0003011c 	.word	0x0003011c
   1b5ac:	00030170 	.word	0x00030170
   1b5b0:	00030194 	.word	0x00030194
   1b5b4:	0006ad2c 	.word	0x0006ad2c
   1b5b8:	000301a4 	.word	0x000301a4
   1b5bc:	0002f898 	.word	0x0002f898
   1b5c0:	00030310 	.word	0x00030310
   1b5c4:	0003017c 	.word	0x0003017c
   1b5c8:	0002fd88 	.word	0x0002fd88
   1b5cc:	000301cc 	.word	0x000301cc
   1b5d0:	000301f4 	.word	0x000301f4
   1b5d4:	0002fd04 	.word	0x0002fd04
   1b5d8:	00030208 	.word	0x00030208
   1b5dc:	e51f2024 	ldr	r2, [pc, #-36]	; 1b5c0 <TargetDebug::procDebuggerLine(char*, char*, int)+0x10e4>
   1b5e0:	e1a01004 	mov	r1, r4
   1b5e4:	e1a00007 	mov	r0, r7
   1b5e8:	ebfffb46 	bl	1a308 <TargetDebug::commandMatch(char const*, char const*)>
   1b5ec:	e3500000 	cmp	r0, #0
   1b5f0:	0a000021 	beq	1b67c <TargetDebug::procDebuggerLine(char*, char*, int)+0x11a0>
   1b5f4:	e5d7304c 	ldrb	r3, [r7, #76]	; 0x4c
   1b5f8:	e3530000 	cmp	r3, #0
   1b5fc:	0afffca3 	beq	1a890 <TargetDebug::procDebuggerLine(char*, char*, int)+0x3b4>
   1b600:	ebffdbe8 	bl	125a8 <McManager::targetPause()>
   1b604:	e3500000 	cmp	r0, #0
   1b608:	1a000011 	bne	1b654 <TargetDebug::procDebuggerLine(char*, char*, int)+0x1178>
   1b60c:	e3a03000 	mov	r3, #0
   1b610:	e3a02001 	mov	r2, #1
   1b614:	e5c73059 	strb	r3, [r7, #89]	; 0x59
   1b618:	e5c72058 	strb	r2, [r7, #88]	; 0x58
   1b61c:	e5c7204d 	strb	r2, [r7, #77]	; 0x4d
   1b620:	e587305c 	str	r3, [r7, #92]	; 0x5c
   1b624:	e5873060 	str	r3, [r7, #96]	; 0x60
   1b628:	eafffc98 	b	1a890 <TargetDebug::procDebuggerLine(char*, char*, int)+0x3b4>
   1b62c:	e3500003 	cmp	r0, #3
   1b630:	951f3064 	ldrls	r3, [pc, #-100]	; 1b5d4 <TargetDebug::procDebuggerLine(char*, char*, int)+0x10f8>
   1b634:	851f3074 	ldrhi	r3, [pc, #-116]	; 1b5c8 <TargetDebug::procDebuggerLine(char*, char*, int)+0x10ec>
   1b638:	90830100 	addls	r0, r3, r0, lsl #2
   1b63c:	9590300c 	ldrls	r3, [r0, #12]
   1b640:	e51f2084 	ldr	r2, [pc, #-132]	; 1b5c4 <TargetDebug::procDebuggerLine(char*, char*, int)+0x10e8>
   1b644:	e3a01004 	mov	r1, #4
   1b648:	e51f007c 	ldr	r0, [pc, #-124]	; 1b5d4 <TargetDebug::procDebuggerLine(char*, char*, int)+0x10f8>
   1b64c:	ebffb858 	bl	97b4 <LogWrite>
   1b650:	eafffbd4 	b	1a5a8 <TargetDebug::procDebuggerLine(char*, char*, int)+0xcc>
   1b654:	e3500003 	cmp	r0, #3
   1b658:	951f308c 	ldrls	r3, [pc, #-140]	; 1b5d4 <TargetDebug::procDebuggerLine(char*, char*, int)+0x10f8>
   1b65c:	851f309c 	ldrhi	r3, [pc, #-156]	; 1b5c8 <TargetDebug::procDebuggerLine(char*, char*, int)+0x10ec>
   1b660:	90833100 	addls	r3, r3, r0, lsl #2
   1b664:	9593300c 	ldrls	r3, [r3, #12]
   1b668:	e51f20a4 	ldr	r2, [pc, #-164]	; 1b5cc <TargetDebug::procDebuggerLine(char*, char*, int)+0x10f0>
   1b66c:	e3a01004 	mov	r1, #4
   1b670:	e51f00a4 	ldr	r0, [pc, #-164]	; 1b5d4 <TargetDebug::procDebuggerLine(char*, char*, int)+0x10f8>
   1b674:	ebffb84e 	bl	97b4 <LogWrite>
   1b678:	eafffc84 	b	1a890 <TargetDebug::procDebuggerLine(char*, char*, int)+0x3b4>
   1b67c:	e1a03004 	mov	r3, r4
   1b680:	e51f20b8 	ldr	r2, [pc, #-184]	; 1b5d0 <TargetDebug::procDebuggerLine(char*, char*, int)+0x10f4>
   1b684:	e3a01004 	mov	r1, #4
   1b688:	e51f00bc 	ldr	r0, [pc, #-188]	; 1b5d4 <TargetDebug::procDebuggerLine(char*, char*, int)+0x10f8>
   1b68c:	ebffb848 	bl	97b4 <LogWrite>
   1b690:	e1a02006 	mov	r2, r6
   1b694:	e51f10c4 	ldr	r1, [pc, #-196]	; 1b5d8 <TargetDebug::procDebuggerLine(char*, char*, int)+0x10fc>
   1b698:	e1a00005 	mov	r0, r5
   1b69c:	eb0043f9 	bl	2c688 <strlcat>
   1b6a0:	eafffbc0 	b	1a5a8 <TargetDebug::procDebuggerLine(char*, char*, int)+0xcc>

0001b6a4 <TargetDebug::debuggerCommand(char*, char*, int)>:
   1b6a4:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   1b6a8:	e3a08000 	mov	r8, #0
   1b6ac:	e5c28000 	strb	r8, [r2]
   1b6b0:	e1a05002 	mov	r5, r2
   1b6b4:	e5d12000 	ldrb	r2, [r1]
   1b6b8:	e1520008 	cmp	r2, r8
   1b6bc:	0a000012 	beq	1b70c <TargetDebug::debuggerCommand(char*, char*, int)+0x68>
   1b6c0:	e1a06000 	mov	r6, r0
   1b6c4:	e1a07003 	mov	r7, r3
   1b6c8:	e352000a 	cmp	r2, #10
   1b6cc:	e1a04001 	mov	r4, r1
   1b6d0:	1a000002 	bne	1b6e0 <TargetDebug::debuggerCommand(char*, char*, int)+0x3c>
   1b6d4:	ea00000e 	b	1b714 <TargetDebug::debuggerCommand(char*, char*, int)+0x70>
   1b6d8:	e353000a 	cmp	r3, #10
   1b6dc:	0a00000c 	beq	1b714 <TargetDebug::debuggerCommand(char*, char*, int)+0x70>
   1b6e0:	e5f43001 	ldrb	r3, [r4, #1]!
   1b6e4:	e3530000 	cmp	r3, #0
   1b6e8:	1afffffa 	bne	1b6d8 <TargetDebug::debuggerCommand(char*, char*, int)+0x34>
   1b6ec:	e1a02005 	mov	r2, r5
   1b6f0:	e1a03007 	mov	r3, r7
   1b6f4:	e1a00006 	mov	r0, r6
   1b6f8:	ebfffb77 	bl	1a4dc <TargetDebug::procDebuggerLine(char*, char*, int)>
   1b6fc:	e5d42000 	ldrb	r2, [r4]
   1b700:	e1a01004 	mov	r1, r4
   1b704:	e3520000 	cmp	r2, #0
   1b708:	1affffee 	bne	1b6c8 <TargetDebug::debuggerCommand(char*, char*, int)+0x24>
   1b70c:	e3a00001 	mov	r0, #1
   1b710:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   1b714:	e4c48001 	strb	r8, [r4], #1
   1b718:	eafffff3 	b	1b6ec <TargetDebug::debuggerCommand(char*, char*, int)+0x48>

0001b71c <TargetDebug::handleRegisterGet(unsigned long, unsigned long, unsigned long, unsigned long&)>:
   1b71c:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
   1b720:	e2133002 	ands	r3, r3, #2
   1b724:	e59dc004 	ldr	ip, [sp, #4]
   1b728:	0a000020 	beq	1b7b0 <TargetDebug::handleRegisterGet(unsigned long, unsigned long, unsigned long, unsigned long&)+0x94>
   1b72c:	e3a03901 	mov	r3, #16384	; 0x4000
   1b730:	e58c3000 	str	r3, [ip]
   1b734:	e590c060 	ldr	ip, [r0, #96]	; 0x60
   1b738:	e24c3001 	sub	r3, ip, #1
   1b73c:	e3530019 	cmp	r3, #25
   1b740:	979ff103 	ldrls	pc, [pc, r3, lsl #2]
   1b744:	ea000023 	b	1b7d8 <TargetDebug::handleRegisterGet(unsigned long, unsigned long, unsigned long, unsigned long&)+0xbc>
   1b748:	0001b8d0 	.word	0x0001b8d0
   1b74c:	0001b7d8 	.word	0x0001b7d8
   1b750:	0001b7d8 	.word	0x0001b7d8
   1b754:	0001b8b4 	.word	0x0001b8b4
   1b758:	0001b7d8 	.word	0x0001b7d8
   1b75c:	0001b7d8 	.word	0x0001b7d8
   1b760:	0001b8ac 	.word	0x0001b8ac
   1b764:	0001b7d8 	.word	0x0001b7d8
   1b768:	0001b7d8 	.word	0x0001b7d8
   1b76c:	0001b8a4 	.word	0x0001b8a4
   1b770:	0001b89c 	.word	0x0001b89c
   1b774:	0001b7d8 	.word	0x0001b7d8
   1b778:	0001b894 	.word	0x0001b894
   1b77c:	0001b88c 	.word	0x0001b88c
   1b780:	0001b884 	.word	0x0001b884
   1b784:	0001b7d8 	.word	0x0001b7d8
   1b788:	0001b7d8 	.word	0x0001b7d8
   1b78c:	0001b850 	.word	0x0001b850
   1b790:	0001b7d8 	.word	0x0001b7d8
   1b794:	0001b7d8 	.word	0x0001b7d8
   1b798:	0001b7d8 	.word	0x0001b7d8
   1b79c:	0001b81c 	.word	0x0001b81c
   1b7a0:	0001b7d8 	.word	0x0001b7d8
   1b7a4:	0001b7d8 	.word	0x0001b7d8
   1b7a8:	0001b7d8 	.word	0x0001b7d8
   1b7ac:	0001b7e8 	.word	0x0001b7e8
   1b7b0:	e5901060 	ldr	r1, [r0, #96]	; 0x60
   1b7b4:	e59f2164 	ldr	r2, [pc, #356]	; 1b920 <TargetDebug::handleRegisterGet(unsigned long, unsigned long, unsigned long, unsigned long&)+0x204>
   1b7b8:	e281e001 	add	lr, r1, #1
   1b7bc:	e0822001 	add	r2, r2, r1
   1b7c0:	e5d22004 	ldrb	r2, [r2, #4]
   1b7c4:	e580e060 	str	lr, [r0, #96]	; 0x60
   1b7c8:	e3822901 	orr	r2, r2, #16384	; 0x4000
   1b7cc:	e58c2000 	str	r2, [ip]
   1b7d0:	e590c060 	ldr	ip, [r0, #96]	; 0x60
   1b7d4:	e580305c 	str	r3, [r0, #92]	; 0x5c
   1b7d8:	e35c0023 	cmp	ip, #35	; 0x23
   1b7dc:	83a03003 	movhi	r3, #3
   1b7e0:	85c03058 	strbhi	r3, [r0, #88]	; 0x58
   1b7e4:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
   1b7e8:	e590105c 	ldr	r1, [r0, #92]	; 0x5c
   1b7ec:	e5903020 	ldr	r3, [r0, #32]
   1b7f0:	e3510000 	cmp	r1, #0
   1b7f4:	03a01001 	moveq	r1, #1
   1b7f8:	16ef2072 	uxtbne	r2, r2
   1b7fc:	06ef3073 	uxtbeq	r3, r3
   1b800:	12033cff 	andne	r3, r3, #65280	; 0xff00
   1b804:	01832402 	orreq	r2, r3, r2, lsl #8
   1b808:	11832002 	orrne	r2, r3, r2
   1b80c:	05802020 	streq	r2, [r0, #32]
   1b810:	0580105c 	streq	r1, [r0, #92]	; 0x5c
   1b814:	15802020 	strne	r2, [r0, #32]
   1b818:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
   1b81c:	e590105c 	ldr	r1, [r0, #92]	; 0x5c
   1b820:	e590301c 	ldr	r3, [r0, #28]
   1b824:	e3510000 	cmp	r1, #0
   1b828:	03a01001 	moveq	r1, #1
   1b82c:	12033cff 	andne	r3, r3, #65280	; 0xff00
   1b830:	06ef3073 	uxtbeq	r3, r3
   1b834:	16ef2072 	uxtbne	r2, r2
   1b838:	01832402 	orreq	r2, r3, r2, lsl #8
   1b83c:	11833002 	orrne	r3, r3, r2
   1b840:	0580201c 	streq	r2, [r0, #28]
   1b844:	0580105c 	streq	r1, [r0, #92]	; 0x5c
   1b848:	1580301c 	strne	r3, [r0, #28]
   1b84c:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
   1b850:	e590105c 	ldr	r1, [r0, #92]	; 0x5c
   1b854:	e5903030 	ldr	r3, [r0, #48]	; 0x30
   1b858:	e3510000 	cmp	r1, #0
   1b85c:	03a01001 	moveq	r1, #1
   1b860:	12033cff 	andne	r3, r3, #65280	; 0xff00
   1b864:	06ef3073 	uxtbeq	r3, r3
   1b868:	16ef2072 	uxtbne	r2, r2
   1b86c:	01832402 	orreq	r2, r3, r2, lsl #8
   1b870:	11833002 	orrne	r3, r3, r2
   1b874:	05802030 	streq	r2, [r0, #48]	; 0x30
   1b878:	0580105c 	streq	r1, [r0, #92]	; 0x5c
   1b87c:	15803030 	strne	r3, [r0, #48]	; 0x30
   1b880:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
   1b884:	e580102c 	str	r1, [r0, #44]	; 0x2c
   1b888:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
   1b88c:	e5801028 	str	r1, [r0, #40]	; 0x28
   1b890:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
   1b894:	e5801024 	str	r1, [r0, #36]	; 0x24
   1b898:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
   1b89c:	e5801014 	str	r1, [r0, #20]
   1b8a0:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
   1b8a4:	e5801010 	str	r1, [r0, #16]
   1b8a8:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
   1b8ac:	e5802038 	str	r2, [r0, #56]	; 0x38
   1b8b0:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
   1b8b4:	e59f3064 	ldr	r3, [pc, #100]	; 1b920 <TargetDebug::handleRegisterGet(unsigned long, unsigned long, unsigned long, unsigned long&)+0x204>
   1b8b8:	e242c005 	sub	ip, r2, #5
   1b8bc:	e2422003 	sub	r2, r2, #3
   1b8c0:	e580100c 	str	r1, [r0, #12]
   1b8c4:	e5c3c020 	strb	ip, [r3, #32]
   1b8c8:	e580203c 	str	r2, [r0, #60]	; 0x3c
   1b8cc:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
   1b8d0:	e590305c 	ldr	r3, [r0, #92]	; 0x5c
   1b8d4:	e6efc072 	uxtb	ip, r2
   1b8d8:	e3530000 	cmp	r3, #0
   1b8dc:	1a000008 	bne	1b904 <TargetDebug::handleRegisterGet(unsigned long, unsigned long, unsigned long, unsigned long&)+0x1e8>
   1b8e0:	e3a0e001 	mov	lr, #1
   1b8e4:	e59f3034 	ldr	r3, [pc, #52]	; 1b920 <TargetDebug::handleRegisterGet(unsigned long, unsigned long, unsigned long, unsigned long&)+0x204>
   1b8e8:	e081100e 	add	r1, r1, lr
   1b8ec:	e1a02402 	lsl	r2, r2, #8
   1b8f0:	e5801008 	str	r1, [r0, #8]
   1b8f4:	e5802018 	str	r2, [r0, #24]
   1b8f8:	e580e05c 	str	lr, [r0, #92]	; 0x5c
   1b8fc:	e5c3c025 	strb	ip, [r3, #37]	; 0x25
   1b900:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
   1b904:	e5903018 	ldr	r3, [r0, #24]
   1b908:	e59f2010 	ldr	r2, [pc, #16]	; 1b920 <TargetDebug::handleRegisterGet(unsigned long, unsigned long, unsigned long, unsigned long&)+0x204>
   1b90c:	e2033cff 	and	r3, r3, #65280	; 0xff00
   1b910:	e183300c 	orr	r3, r3, ip
   1b914:	e5803018 	str	r3, [r0, #24]
   1b918:	e5c2c024 	strb	ip, [r2, #36]	; 0x24
   1b91c:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
   1b920:	00042320 	.word	0x00042320

0001b924 <TargetDebug::handleRegisterSet(unsigned long&)>:
   1b924:	e92d4070 	push	{r4, r5, r6, lr}
   1b928:	e5903060 	ldr	r3, [r0, #96]	; 0x60
   1b92c:	e1a04000 	mov	r4, r0
   1b930:	e3530000 	cmp	r3, #0
   1b934:	e1a05001 	mov	r5, r1
   1b938:	0a00000b 	beq	1b96c <TargetDebug::handleRegisterSet(unsigned long&)+0x48>
   1b93c:	e2832001 	add	r2, r3, #1
   1b940:	e5842060 	str	r2, [r4, #96]	; 0x60
   1b944:	e0843003 	add	r3, r4, r3
   1b948:	e5d33064 	ldrb	r3, [r3, #100]	; 0x64
   1b94c:	e3833901 	orr	r3, r3, #16384	; 0x4000
   1b950:	e5853000 	str	r3, [r5]
   1b954:	e59430c8 	ldr	r3, [r4, #200]	; 0xc8
   1b958:	e5942060 	ldr	r2, [r4, #96]	; 0x60
   1b95c:	e1520003 	cmp	r2, r3
   1b960:	23a03003 	movcs	r3, #3
   1b964:	25c43058 	strbcs	r3, [r4, #88]	; 0x58
   1b968:	e8bd8070 	pop	{r4, r5, r6, pc}
   1b96c:	e3a02064 	mov	r2, #100	; 0x64
   1b970:	e0801002 	add	r1, r0, r2
   1b974:	e2800004 	add	r0, r0, #4
   1b978:	ebfff8dc 	bl	19cf0 <TargetCPUZ80::getInjectToSetRegs(Z80Registers&, unsigned char*, unsigned long)>
   1b97c:	e3500000 	cmp	r0, #0
   1b980:	e58400c8 	str	r0, [r4, #200]	; 0xc8
   1b984:	15943060 	ldrne	r3, [r4, #96]	; 0x60
   1b988:	1affffeb 	bne	1b93c <TargetDebug::handleRegisterSet(unsigned long&)+0x18>
   1b98c:	e5c40058 	strb	r0, [r4, #88]	; 0x58
   1b990:	e8bd8070 	pop	{r4, r5, r6, pc}

0001b994 <TargetDebug::isPrefixInstruction(unsigned long)>:
   1b994:	e35100dd 	cmp	r1, #221	; 0xdd
   1b998:	0a000008 	beq	1b9c0 <TargetDebug::isPrefixInstruction(unsigned long)+0x2c>
   1b99c:	9a000005 	bls	1b9b8 <TargetDebug::isPrefixInstruction(unsigned long)+0x24>
   1b9a0:	e35100ed 	cmp	r1, #237	; 0xed
   1b9a4:	0a000005 	beq	1b9c0 <TargetDebug::isPrefixInstruction(unsigned long)+0x2c>
   1b9a8:	e35100fd 	cmp	r1, #253	; 0xfd
   1b9ac:	0a000003 	beq	1b9c0 <TargetDebug::isPrefixInstruction(unsigned long)+0x2c>
   1b9b0:	e3a00000 	mov	r0, #0
   1b9b4:	e12fff1e 	bx	lr
   1b9b8:	e35100cb 	cmp	r1, #203	; 0xcb
   1b9bc:	1afffffb 	bne	1b9b0 <TargetDebug::isPrefixInstruction(unsigned long)+0x1c>
   1b9c0:	e3a00001 	mov	r0, #1
   1b9c4:	e12fff1e 	bx	lr

0001b9c8 <TargetDebug::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long, McDescriptorTable&)>:
   1b9c8:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b9cc:	e1a04000 	mov	r4, r0
   1b9d0:	e2800a01 	add	r0, r0, #4096	; 0x1000
   1b9d4:	e5d00a38 	ldrb	r0, [r0, #2616]	; 0xa38
   1b9d8:	e24dd00c 	sub	sp, sp, #12
   1b9dc:	e3500000 	cmp	r0, #0
   1b9e0:	e1a09001 	mov	r9, r1
   1b9e4:	e1a08002 	mov	r8, r2
   1b9e8:	e1a05003 	mov	r5, r3
   1b9ec:	1a000073 	bne	1bbc0 <TargetDebug::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long, McDescriptorTable&)+0x1f8>
   1b9f0:	e3150004 	tst	r5, #4
   1b9f4:	0a000026 	beq	1ba94 <TargetDebug::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long, McDescriptorTable&)+0xcc>
   1b9f8:	e2157010 	ands	r7, r5, #16
   1b9fc:	05c4704e 	strbeq	r7, [r4, #78]	; 0x4e
   1ba00:	05c4704f 	strbeq	r7, [r4, #79]	; 0x4f
   1ba04:	0a00000e 	beq	1ba44 <TargetDebug::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long, McDescriptorTable&)+0x7c>
   1ba08:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
   1ba0c:	e5d4204e 	ldrb	r2, [r4, #78]	; 0x4e
   1ba10:	e3130902 	tst	r3, #32768	; 0x8000
   1ba14:	16ef3078 	uxtbne	r3, r8
   1ba18:	06ef3073 	uxtbeq	r3, r3
   1ba1c:	e35300dd 	cmp	r3, #221	; 0xdd
   1ba20:	e5c4204f 	strb	r2, [r4, #79]	; 0x4f
   1ba24:	0a00007c 	beq	1bc1c <TargetDebug::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long, McDescriptorTable&)+0x254>
   1ba28:	9a000079 	bls	1bc14 <TargetDebug::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long, McDescriptorTable&)+0x24c>
   1ba2c:	e35300ed 	cmp	r3, #237	; 0xed
   1ba30:	0a000079 	beq	1bc1c <TargetDebug::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long, McDescriptorTable&)+0x254>
   1ba34:	e35300fd 	cmp	r3, #253	; 0xfd
   1ba38:	0a000077 	beq	1bc1c <TargetDebug::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long, McDescriptorTable&)+0x254>
   1ba3c:	e3a03000 	mov	r3, #0
   1ba40:	e5c4304e 	strb	r3, [r4, #78]	; 0x4e
   1ba44:	e5d46058 	ldrb	r6, [r4, #88]	; 0x58
   1ba48:	e3560003 	cmp	r6, #3
   1ba4c:	0a000060 	beq	1bbd4 <TargetDebug::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long, McDescriptorTable&)+0x20c>
   1ba50:	e59f338c 	ldr	r3, [pc, #908]	; 1bde4 <TargetDebug::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long, McDescriptorTable&)+0x41c>
   1ba54:	e59fa38c 	ldr	sl, [pc, #908]	; 1bde8 <TargetDebug::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long, McDescriptorTable&)+0x420>
   1ba58:	e5d33000 	ldrb	r3, [r3]
   1ba5c:	e3530000 	cmp	r3, #0
   1ba60:	0a000029 	beq	1bb0c <TargetDebug::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long, McDescriptorTable&)+0x144>
   1ba64:	e59a3000 	ldr	r3, [sl]
   1ba68:	e3530000 	cmp	r3, #0
   1ba6c:	da000026 	ble	1bb0c <TargetDebug::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long, McDescriptorTable&)+0x144>
   1ba70:	e3560000 	cmp	r6, #0
   1ba74:	1a000037 	bne	1bb58 <TargetDebug::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long, McDescriptorTable&)+0x190>
   1ba78:	e5d4304d 	ldrb	r3, [r4, #77]	; 0x4d
   1ba7c:	e2233001 	eor	r3, r3, #1
   1ba80:	e3570000 	cmp	r7, #0
   1ba84:	03a03000 	moveq	r3, #0
   1ba88:	12033001 	andne	r3, r3, #1
   1ba8c:	e3530000 	cmp	r3, #0
   1ba90:	1a000002 	bne	1baa0 <TargetDebug::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long, McDescriptorTable&)+0xd8>
   1ba94:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
   1ba98:	e28dd00c 	add	sp, sp, #12
   1ba9c:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1baa0:	ebfff0b0 	bl	17d68 <BusAccess::isUnderControl()>
   1baa4:	e3500000 	cmp	r0, #0
   1baa8:	1a000016 	bne	1bb08 <TargetDebug::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long, McDescriptorTable&)+0x140>
   1baac:	e59a2000 	ldr	r2, [sl]
   1bab0:	e3520000 	cmp	r2, #0
   1bab4:	da000013 	ble	1bb08 <TargetDebug::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long, McDescriptorTable&)+0x140>
   1bab8:	e59ab004 	ldr	fp, [sl, #4]
   1babc:	e59f1328 	ldr	r1, [pc, #808]	; 1bdec <TargetDebug::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long, McDescriptorTable&)+0x424>
   1bac0:	e08b308b 	add	r3, fp, fp, lsl #1
   1bac4:	e0833183 	add	r3, r3, r3, lsl #3
   1bac8:	e0813103 	add	r3, r1, r3, lsl #2
   1bacc:	e5933068 	ldr	r3, [r3, #104]	; 0x68
   1bad0:	e1590003 	cmp	r9, r3
   1bad4:	128a0008 	addne	r0, sl, #8
   1bad8:	1a000007 	bne	1bafc <TargetDebug::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long, McDescriptorTable&)+0x134>
   1badc:	ea0000a3 	b	1bd70 <TargetDebug::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long, McDescriptorTable&)+0x3a8>
   1bae0:	e490b004 	ldr	fp, [r0], #4
   1bae4:	e08b308b 	add	r3, fp, fp, lsl #1
   1bae8:	e0833183 	add	r3, r3, r3, lsl #3
   1baec:	e0813103 	add	r3, r1, r3, lsl #2
   1baf0:	e5933068 	ldr	r3, [r3, #104]	; 0x68
   1baf4:	e1530009 	cmp	r3, r9
   1baf8:	0a00009c 	beq	1bd70 <TargetDebug::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long, McDescriptorTable&)+0x3a8>
   1bafc:	e2866001 	add	r6, r6, #1
   1bb00:	e1560002 	cmp	r6, r2
   1bb04:	1afffff5 	bne	1bae0 <TargetDebug::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long, McDescriptorTable&)+0x118>
   1bb08:	e5d46058 	ldrb	r6, [r4, #88]	; 0x58
   1bb0c:	e5da3195 	ldrb	r3, [sl, #405]	; 0x195
   1bb10:	e3530000 	cmp	r3, #0
   1bb14:	0a00000f 	beq	1bb58 <TargetDebug::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long, McDescriptorTable&)+0x190>
   1bb18:	e3560000 	cmp	r6, #0
   1bb1c:	1a00000d 	bne	1bb58 <TargetDebug::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long, McDescriptorTable&)+0x190>
   1bb20:	e5d4304d 	ldrb	r3, [r4, #77]	; 0x4d
   1bb24:	e2233001 	eor	r3, r3, #1
   1bb28:	e3570000 	cmp	r7, #0
   1bb2c:	03a03000 	moveq	r3, #0
   1bb30:	12033001 	andne	r3, r3, #1
   1bb34:	e3530000 	cmp	r3, #0
   1bb38:	0affffd5 	beq	1ba94 <TargetDebug::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long, McDescriptorTable&)+0xcc>
   1bb3c:	ebfff089 	bl	17d68 <BusAccess::isUnderControl()>
   1bb40:	e3500000 	cmp	r0, #0
   1bb44:	1a000002 	bne	1bb54 <TargetDebug::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long, McDescriptorTable&)+0x18c>
   1bb48:	e59a31a0 	ldr	r3, [sl, #416]	; 0x1a0
   1bb4c:	e1530009 	cmp	r3, r9
   1bb50:	0a000095 	beq	1bdac <TargetDebug::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long, McDescriptorTable&)+0x3e4>
   1bb54:	e5d46058 	ldrb	r6, [r4, #88]	; 0x58
   1bb58:	e2463001 	sub	r3, r6, #1
   1bb5c:	e3530001 	cmp	r3, #1
   1bb60:	8affffcb 	bhi	1ba94 <TargetDebug::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long, McDescriptorTable&)+0xcc>
   1bb64:	e5d43059 	ldrb	r3, [r4, #89]	; 0x59
   1bb68:	e3530000 	cmp	r3, #0
   1bb6c:	1a000033 	bne	1bc40 <TargetDebug::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long, McDescriptorTable&)+0x278>
   1bb70:	e5d4204f 	ldrb	r2, [r4, #79]	; 0x4f
   1bb74:	e2223001 	eor	r3, r2, #1
   1bb78:	e3570000 	cmp	r7, #0
   1bb7c:	03a07000 	moveq	r7, #0
   1bb80:	12037001 	andne	r7, r3, #1
   1bb84:	e3570000 	cmp	r7, #0
   1bb88:	1a00005c 	bne	1bd00 <TargetDebug::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long, McDescriptorTable&)+0x338>
   1bb8c:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
   1bb90:	e3100902 	tst	r0, #32768	; 0x8000
   1bb94:	16ef8078 	uxtbne	r8, r8
   1bb98:	06ef8070 	uxtbeq	r8, r0
   1bb9c:	e35800dd 	cmp	r8, #221	; 0xdd
   1bba0:	0a00005b 	beq	1bd14 <TargetDebug::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long, McDescriptorTable&)+0x34c>
   1bba4:	9a000058 	bls	1bd0c <TargetDebug::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long, McDescriptorTable&)+0x344>
   1bba8:	e35800ed 	cmp	r8, #237	; 0xed
   1bbac:	0a000058 	beq	1bd14 <TargetDebug::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long, McDescriptorTable&)+0x34c>
   1bbb0:	e35800fd 	cmp	r8, #253	; 0xfd
   1bbb4:	0a000056 	beq	1bd14 <TargetDebug::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long, McDescriptorTable&)+0x34c>
   1bbb8:	e5c4704f 	strb	r7, [r4, #79]	; 0x4f
   1bbbc:	eaffffb5 	b	1ba98 <TargetDebug::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long, McDescriptorTable&)+0xd0>
   1bbc0:	e59dc030 	ldr	ip, [sp, #48]	; 0x30
   1bbc4:	e28400cc 	add	r0, r4, #204	; 0xcc
   1bbc8:	e58dc000 	str	ip, [sp]
   1bbcc:	ebfff6f9 	bl	197b8 <StepTester::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long)>
   1bbd0:	eaffff86 	b	1b9f0 <TargetDebug::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long, McDescriptorTable&)+0x28>
   1bbd4:	e3a06000 	mov	r6, #0
   1bbd8:	e1a00006 	mov	r0, r6
   1bbdc:	ebffd589 	bl	11208 <HwManager::pageOutForInjection(bool)>
   1bbe0:	e5d43051 	ldrb	r3, [r4, #81]	; 0x51
   1bbe4:	e5c46058 	strb	r6, [r4, #88]	; 0x58
   1bbe8:	e1530006 	cmp	r3, r6
   1bbec:	1a00004e 	bne	1bd2c <TargetDebug::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long, McDescriptorTable&)+0x364>
   1bbf0:	e3a03000 	mov	r3, #0
   1bbf4:	e1570003 	cmp	r7, r3
   1bbf8:	e5c43059 	strb	r3, [r4, #89]	; 0x59
   1bbfc:	0a000046 	beq	1bd1c <TargetDebug::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long, McDescriptorTable&)+0x354>
   1bc00:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
   1bc04:	e5d46058 	ldrb	r6, [r4, #88]	; 0x58
   1bc08:	e3833a02 	orr	r3, r3, #8192	; 0x2000
   1bc0c:	e58d3030 	str	r3, [sp, #48]	; 0x30
   1bc10:	eaffff8e 	b	1ba50 <TargetDebug::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long, McDescriptorTable&)+0x88>
   1bc14:	e35300cb 	cmp	r3, #203	; 0xcb
   1bc18:	1affff87 	bne	1ba3c <TargetDebug::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long, McDescriptorTable&)+0x74>
   1bc1c:	e3a03001 	mov	r3, #1
   1bc20:	eaffff86 	b	1ba40 <TargetDebug::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long, McDescriptorTable&)+0x78>
   1bc24:	e584605c 	str	r6, [r4, #92]	; 0x5c
   1bc28:	e5846060 	str	r6, [r4, #96]	; 0x60
   1bc2c:	e5849004 	str	r9, [r4, #4]
   1bc30:	e5ca6195 	strb	r6, [sl, #405]	; 0x195
   1bc34:	e5c43058 	strb	r3, [r4, #88]	; 0x58
   1bc38:	e5c4304d 	strb	r3, [r4, #77]	; 0x4d
   1bc3c:	e5ca3196 	strb	r3, [sl, #406]	; 0x196
   1bc40:	e3a00001 	mov	r0, #1
   1bc44:	e5c40059 	strb	r0, [r4, #89]	; 0x59
   1bc48:	ebffd56e 	bl	11208 <HwManager::pageOutForInjection(bool)>
   1bc4c:	e5d43058 	ldrb	r3, [r4, #88]	; 0x58
   1bc50:	e3530001 	cmp	r3, #1
   1bc54:	0a00001e 	beq	1bcd4 <TargetDebug::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long, McDescriptorTable&)+0x30c>
   1bc58:	e5943060 	ldr	r3, [r4, #96]	; 0x60
   1bc5c:	e3530000 	cmp	r3, #0
   1bc60:	159400c8 	ldrne	r0, [r4, #200]	; 0xc8
   1bc64:	0a000036 	beq	1bd44 <TargetDebug::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long, McDescriptorTable&)+0x37c>
   1bc68:	e2832001 	add	r2, r3, #1
   1bc6c:	e5842060 	str	r2, [r4, #96]	; 0x60
   1bc70:	e0843003 	add	r3, r4, r3
   1bc74:	e5d33064 	ldrb	r3, [r3, #100]	; 0x64
   1bc78:	e1520000 	cmp	r2, r0
   1bc7c:	e3833901 	orr	r3, r3, #16384	; 0x4000
   1bc80:	e58d3030 	str	r3, [sp, #48]	; 0x30
   1bc84:	23a03003 	movcs	r3, #3
   1bc88:	25c43058 	strbcs	r3, [r4, #88]	; 0x58
   1bc8c:	3a000017 	bcc	1bcf0 <TargetDebug::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long, McDescriptorTable&)+0x328>
   1bc90:	e59d3034 	ldr	r3, [sp, #52]	; 0x34
   1bc94:	e5d3303a 	ldrb	r3, [r3, #58]	; 0x3a
   1bc98:	e3530000 	cmp	r3, #0
   1bc9c:	0a000007 	beq	1bcc0 <TargetDebug::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long, McDescriptorTable&)+0x2f8>
   1bca0:	e59d3034 	ldr	r3, [sp, #52]	; 0x34
   1bca4:	e593303c 	ldr	r3, [r3, #60]	; 0x3c
   1bca8:	e3530000 	cmp	r3, #0
   1bcac:	1a000003 	bne	1bcc0 <TargetDebug::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long, McDescriptorTable&)+0x2f8>
   1bcb0:	e59d3034 	ldr	r3, [sp, #52]	; 0x34
   1bcb4:	e5933040 	ldr	r3, [r3, #64]	; 0x40
   1bcb8:	e3530801 	cmp	r3, #65536	; 0x10000
   1bcbc:	0affff74 	beq	1ba94 <TargetDebug::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long, McDescriptorTable&)+0xcc>
   1bcc0:	ebfff02c 	bl	17d78 <BusAccess::controlRequest()>
   1bcc4:	e3a03001 	mov	r3, #1
   1bcc8:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
   1bccc:	e5c43050 	strb	r3, [r4, #80]	; 0x50
   1bcd0:	eaffff70 	b	1ba98 <TargetDebug::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long, McDescriptorTable&)+0xd0>
   1bcd4:	e28d0030 	add	r0, sp, #48	; 0x30
   1bcd8:	e58d0000 	str	r0, [sp]
   1bcdc:	e1a03005 	mov	r3, r5
   1bce0:	e1a02008 	mov	r2, r8
   1bce4:	e1a01009 	mov	r1, r9
   1bce8:	e1a00004 	mov	r0, r4
   1bcec:	ebfffe8a 	bl	1b71c <TargetDebug::handleRegisterGet(unsigned long, unsigned long, unsigned long, unsigned long&)>
   1bcf0:	e5d43058 	ldrb	r3, [r4, #88]	; 0x58
   1bcf4:	e3530003 	cmp	r3, #3
   1bcf8:	1affff65 	bne	1ba94 <TargetDebug::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long, McDescriptorTable&)+0xcc>
   1bcfc:	eaffffe3 	b	1bc90 <TargetDebug::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long, McDescriptorTable&)+0x2c8>
   1bd00:	e3560001 	cmp	r6, #1
   1bd04:	05849004 	streq	r9, [r4, #4]
   1bd08:	eaffffcc 	b	1bc40 <TargetDebug::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long, McDescriptorTable&)+0x278>
   1bd0c:	e35800cb 	cmp	r8, #203	; 0xcb
   1bd10:	1affffa8 	bne	1bbb8 <TargetDebug::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long, McDescriptorTable&)+0x1f0>
   1bd14:	e1a07002 	mov	r7, r2
   1bd18:	eaffffa6 	b	1bbb8 <TargetDebug::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long, McDescriptorTable&)+0x1f0>
   1bd1c:	e3a00001 	mov	r0, #1
   1bd20:	ebfff5c9 	bl	1944c <BusAccess::isrAssert(int)>
   1bd24:	e5d46058 	ldrb	r6, [r4, #88]	; 0x58
   1bd28:	eaffff48 	b	1ba50 <TargetDebug::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long, McDescriptorTable&)+0x88>
   1bd2c:	e5d40052 	ldrb	r0, [r4, #82]	; 0x52
   1bd30:	ebfff4b8 	bl	19018 <BusAccess::waitOnInstruction(bool)>
   1bd34:	e5940054 	ldr	r0, [r4, #84]	; 0x54
   1bd38:	ebfff452 	bl	18e88 <BusAccess::clockSetFreqHz(unsigned long)>
   1bd3c:	e5c46051 	strb	r6, [r4, #81]	; 0x51
   1bd40:	eaffffaa 	b	1bbf0 <TargetDebug::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long, McDescriptorTable&)+0x228>
   1bd44:	e3a02064 	mov	r2, #100	; 0x64
   1bd48:	e2840004 	add	r0, r4, #4
   1bd4c:	e0841002 	add	r1, r4, r2
   1bd50:	ebfff7e6 	bl	19cf0 <TargetCPUZ80::getInjectToSetRegs(Z80Registers&, unsigned char*, unsigned long)>
   1bd54:	e3500000 	cmp	r0, #0
   1bd58:	e58400c8 	str	r0, [r4, #200]	; 0xc8
   1bd5c:	15943060 	ldrne	r3, [r4, #96]	; 0x60
   1bd60:	1affffc0 	bne	1bc68 <TargetDebug::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long, McDescriptorTable&)+0x2a0>
   1bd64:	e5c40058 	strb	r0, [r4, #88]	; 0x58
   1bd68:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
   1bd6c:	eaffff49 	b	1ba98 <TargetDebug::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long, McDescriptorTable&)+0xd0>
   1bd70:	ebffda0c 	bl	125a8 <McManager::targetPause()>
   1bd74:	e3500000 	cmp	r0, #0
   1bd78:	03a03001 	moveq	r3, #1
   1bd7c:	01a06003 	moveq	r6, r3
   1bd80:	05c43058 	strbeq	r3, [r4, #88]	; 0x58
   1bd84:	e3a03001 	mov	r3, #1
   1bd88:	15d46058 	ldrbne	r6, [r4, #88]	; 0x58
   1bd8c:	0584005c 	streq	r0, [r4, #92]	; 0x5c
   1bd90:	05840060 	streq	r0, [r4, #96]	; 0x60
   1bd94:	e5849004 	str	r9, [r4, #4]
   1bd98:	e58ab198 	str	fp, [sl, #408]	; 0x198
   1bd9c:	e5c43059 	strb	r3, [r4, #89]	; 0x59
   1bda0:	e5c4304d 	strb	r3, [r4, #77]	; 0x4d
   1bda4:	e5ca3194 	strb	r3, [sl, #404]	; 0x194
   1bda8:	eaffff57 	b	1bb0c <TargetDebug::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long, McDescriptorTable&)+0x144>
   1bdac:	ebffd9fd 	bl	125a8 <McManager::targetPause()>
   1bdb0:	e3500000 	cmp	r0, #0
   1bdb4:	e3a03001 	mov	r3, #1
   1bdb8:	0affff99 	beq	1bc24 <TargetDebug::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long, McDescriptorTable&)+0x25c>
   1bdbc:	e5d42058 	ldrb	r2, [r4, #88]	; 0x58
   1bdc0:	e5849004 	str	r9, [r4, #4]
   1bdc4:	e2422001 	sub	r2, r2, #1
   1bdc8:	e1520003 	cmp	r2, r3
   1bdcc:	e5ca6195 	strb	r6, [sl, #405]	; 0x195
   1bdd0:	e5c43059 	strb	r3, [r4, #89]	; 0x59
   1bdd4:	e5c4304d 	strb	r3, [r4, #77]	; 0x4d
   1bdd8:	e5ca3196 	strb	r3, [sl, #406]	; 0x196
   1bddc:	8affff2c 	bhi	1ba94 <TargetDebug::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long, McDescriptorTable&)+0xcc>
   1bde0:	eaffff96 	b	1bc40 <TargetDebug::handleInterrupt(unsigned long, unsigned long, unsigned long, unsigned long, McDescriptorTable&)+0x278>
   1bde4:	00042320 	.word	0x00042320
   1bde8:	0006ad2c 	.word	0x0006ad2c
   1bdec:	0006aed0 	.word	0x0006aed0

0001bdf0 <_GLOBAL__sub_I___targetDebug>:
   1bdf0:	e92d4010 	push	{r4, lr}
   1bdf4:	e59f002c 	ldr	r0, [pc, #44]	; 1be28 <_GLOBAL__sub_I___targetDebug+0x38>
   1bdf8:	ebfff89b 	bl	1a06c <TargetDebug::TargetDebug()>
   1bdfc:	e3a02000 	mov	r2, #0
   1be00:	e59f3024 	ldr	r3, [pc, #36]	; 1be2c <_GLOBAL__sub_I___targetDebug+0x3c>
   1be04:	e2831c2a 	add	r1, r3, #10752	; 0x2a00
   1be08:	e2811030 	add	r1, r1, #48	; 0x30
   1be0c:	e5c32000 	strb	r2, [r3]
   1be10:	e5c32001 	strb	r2, [r3, #1]
   1be14:	e5832068 	str	r2, [r3, #104]	; 0x68
   1be18:	e283306c 	add	r3, r3, #108	; 0x6c
   1be1c:	e1530001 	cmp	r3, r1
   1be20:	1afffff9 	bne	1be0c <_GLOBAL__sub_I___targetDebug+0x1c>
   1be24:	e8bd8010 	pop	{r4, pc}
   1be28:	0006d900 	.word	0x0006d900
   1be2c:	0006aed0 	.word	0x0006aed0

0001be30 <TargetState::clear()>:
   1be30:	e3a03000 	mov	r3, #0
   1be34:	e59f2030 	ldr	r2, [pc, #48]	; 1be6c <TargetState::clear()+0x3c>
   1be38:	e1a01003 	mov	r1, r3
   1be3c:	e5c23000 	strb	r3, [r2]
   1be40:	e5823004 	str	r3, [r2, #4]
   1be44:	e2823008 	add	r3, r2, #8
   1be48:	e28220a8 	add	r2, r2, #168	; 0xa8
   1be4c:	e5831004 	str	r1, [r3, #4]
   1be50:	e2833008 	add	r3, r3, #8
   1be54:	e1530002 	cmp	r3, r2
   1be58:	1afffffb 	bne	1be4c <TargetState::clear()+0x1c>
   1be5c:	e3a02801 	mov	r2, #65536	; 0x10000
   1be60:	e3a01000 	mov	r1, #0
   1be64:	e59f0004 	ldr	r0, [pc, #4]	; 1be70 <TargetState::clear()+0x40>
   1be68:	ea0040bb 	b	2c15c <memset>
   1be6c:	0006f33c 	.word	0x0006f33c
   1be70:	0006f42c 	.word	0x0006f42c

0001be74 <TargetState::addMemoryBlock(unsigned long, unsigned char const*, unsigned long)>:
   1be74:	e92d4070 	push	{r4, r5, r6, lr}
   1be78:	e59f60d0 	ldr	r6, [pc, #208]	; 1bf50 <TargetState::addMemoryBlock(unsigned long, unsigned char const*, unsigned long)+0xdc>
   1be7c:	e5965004 	ldr	r5, [r6, #4]
   1be80:	e3550000 	cmp	r5, #0
   1be84:	da000012 	ble	1bed4 <TargetState::addMemoryBlock(unsigned long, unsigned char const*, unsigned long)+0x60>
   1be88:	e596400c 	ldr	r4, [r6, #12]
   1be8c:	e5963008 	ldr	r3, [r6, #8]
   1be90:	e0843003 	add	r3, r4, r3
   1be94:	e1500003 	cmp	r0, r3
   1be98:	13a0e000 	movne	lr, #0
   1be9c:	12863008 	addne	r3, r6, #8
   1bea0:	1a000006 	bne	1bec0 <TargetState::addMemoryBlock(unsigned long, unsigned char const*, unsigned long)+0x4c>
   1bea4:	ea00001d 	b	1bf20 <TargetState::addMemoryBlock(unsigned long, unsigned char const*, unsigned long)+0xac>
   1bea8:	e593400c 	ldr	r4, [r3, #12]
   1beac:	e593c008 	ldr	ip, [r3, #8]
   1beb0:	e2833008 	add	r3, r3, #8
   1beb4:	e084c00c 	add	ip, r4, ip
   1beb8:	e15c0000 	cmp	ip, r0
   1bebc:	0a000018 	beq	1bf24 <TargetState::addMemoryBlock(unsigned long, unsigned char const*, unsigned long)+0xb0>
   1bec0:	e28ee001 	add	lr, lr, #1
   1bec4:	e15e0005 	cmp	lr, r5
   1bec8:	1afffff6 	bne	1bea8 <TargetState::addMemoryBlock(unsigned long, unsigned char const*, unsigned long)+0x34>
   1becc:	e35e0013 	cmp	lr, #19
   1bed0:	ca000019 	bgt	1bf3c <TargetState::addMemoryBlock(unsigned long, unsigned char const*, unsigned long)+0xc8>
   1bed4:	e0863185 	add	r3, r6, r5, lsl #3
   1bed8:	e3520000 	cmp	r2, #0
   1bedc:	e2855001 	add	r5, r5, #1
   1bee0:	e5830008 	str	r0, [r3, #8]
   1bee4:	e583200c 	str	r2, [r3, #12]
   1bee8:	e5865004 	str	r5, [r6, #4]
   1beec:	08bd8070 	popeq	{r4, r5, r6, pc}
   1bef0:	e1a03000 	mov	r3, r0
   1bef4:	e59fc058 	ldr	ip, [pc, #88]	; 1bf54 <TargetState::addMemoryBlock(unsigned long, unsigned char const*, unsigned long)+0xe0>
   1bef8:	e59fe058 	ldr	lr, [pc, #88]	; 1bf58 <TargetState::addMemoryBlock(unsigned long, unsigned char const*, unsigned long)+0xe4>
   1befc:	e0802002 	add	r2, r0, r2
   1bf00:	e0411000 	sub	r1, r1, r0
   1bf04:	e153000c 	cmp	r3, ip
   1bf08:	97d10003 	ldrbls	r0, [r1, r3]
   1bf0c:	97c3000e 	strbls	r0, [r3, lr]
   1bf10:	e2833001 	add	r3, r3, #1
   1bf14:	e1520003 	cmp	r2, r3
   1bf18:	1afffff9 	bne	1bf04 <TargetState::addMemoryBlock(unsigned long, unsigned char const*, unsigned long)+0x90>
   1bf1c:	e8bd8070 	pop	{r4, r5, r6, pc}
   1bf20:	e3a0e000 	mov	lr, #0
   1bf24:	e086e18e 	add	lr, r6, lr, lsl #3
   1bf28:	e0844002 	add	r4, r4, r2
   1bf2c:	e3520000 	cmp	r2, #0
   1bf30:	e58e400c 	str	r4, [lr, #12]
   1bf34:	1affffed 	bne	1bef0 <TargetState::addMemoryBlock(unsigned long, unsigned char const*, unsigned long)+0x7c>
   1bf38:	e8bd8070 	pop	{r4, r5, r6, pc}
   1bf3c:	e59f2018 	ldr	r2, [pc, #24]	; 1bf5c <TargetState::addMemoryBlock(unsigned long, unsigned char const*, unsigned long)+0xe8>
   1bf40:	e3a01004 	mov	r1, #4
   1bf44:	e8bd4070 	pop	{r4, r5, r6, lr}
   1bf48:	e59f0010 	ldr	r0, [pc, #16]	; 1bf60 <TargetState::addMemoryBlock(unsigned long, unsigned char const*, unsigned long)+0xec>
   1bf4c:	eaffb618 	b	97b4 <LogWrite>
   1bf50:	0006f33c 	.word	0x0006f33c
   1bf54:	0000ffff 	.word	0x0000ffff
   1bf58:	0006f42c 	.word	0x0006f42c
   1bf5c:	00030254 	.word	0x00030254
   1bf60:	00030248 	.word	0x00030248

0001bf64 <TargetState::numMemoryBlocks()>:
   1bf64:	e59f3004 	ldr	r3, [pc, #4]	; 1bf70 <TargetState::numMemoryBlocks()+0xc>
   1bf68:	e5930004 	ldr	r0, [r3, #4]
   1bf6c:	e12fff1e 	bx	lr
   1bf70:	0006f33c 	.word	0x0006f33c

0001bf74 <TargetState::getMemoryBlock(int)>:
   1bf74:	e59f3004 	ldr	r3, [pc, #4]	; 1bf80 <TargetState::getMemoryBlock(int)+0xc>
   1bf78:	e0830180 	add	r0, r3, r0, lsl #3
   1bf7c:	e12fff1e 	bx	lr
   1bf80:	0006f344 	.word	0x0006f344

0001bf84 <TargetState::getMemoryImagePtr()>:
   1bf84:	e59f0000 	ldr	r0, [pc]	; 1bf8c <TargetState::getMemoryImagePtr()+0x8>
   1bf88:	e12fff1e 	bx	lr
   1bf8c:	0006f42c 	.word	0x0006f42c

0001bf90 <TargetState::setTargetRegisters(Z80Registers const&)>:
   1bf90:	e92d4030 	push	{r4, r5, lr}
   1bf94:	e1a04000 	mov	r4, r0
   1bf98:	e59f503c 	ldr	r5, [pc, #60]	; 1bfdc <TargetState::setTargetRegisters(Z80Registers const&)+0x4c>
   1bf9c:	e24dd00c 	sub	sp, sp, #12
   1bfa0:	e1a01000 	mov	r1, r0
   1bfa4:	e3a02048 	mov	r2, #72	; 0x48
   1bfa8:	e28500a8 	add	r0, r5, #168	; 0xa8
   1bfac:	eb004026 	bl	2c04c <memcpy>
   1bfb0:	e3a0c001 	mov	ip, #1
   1bfb4:	e5942004 	ldr	r2, [r4, #4]
   1bfb8:	e5943000 	ldr	r3, [r4]
   1bfbc:	e3a01005 	mov	r1, #5
   1bfc0:	e58d2000 	str	r2, [sp]
   1bfc4:	e59f0014 	ldr	r0, [pc, #20]	; 1bfe0 <TargetState::setTargetRegisters(Z80Registers const&)+0x50>
   1bfc8:	e59f2014 	ldr	r2, [pc, #20]	; 1bfe4 <TargetState::setTargetRegisters(Z80Registers const&)+0x54>
   1bfcc:	e5c5c000 	strb	ip, [r5]
   1bfd0:	ebffb5f7 	bl	97b4 <LogWrite>
   1bfd4:	e28dd00c 	add	sp, sp, #12
   1bfd8:	e8bd8030 	pop	{r4, r5, pc}
   1bfdc:	0006f33c 	.word	0x0006f33c
   1bfe0:	00030248 	.word	0x00030248
   1bfe4:	00030274 	.word	0x00030274

0001bfe8 <TargetState::areRegistersValid()>:
   1bfe8:	e59f3004 	ldr	r3, [pc, #4]	; 1bff4 <TargetState::areRegistersValid()+0xc>
   1bfec:	e5d30000 	ldrb	r0, [r3]
   1bff0:	e12fff1e 	bx	lr
   1bff4:	0006f33c 	.word	0x0006f33c

0001bff8 <TargetState::getTargetRegs(Z80Registers&)>:
   1bff8:	e92d4010 	push	{r4, lr}
   1bffc:	e3a02048 	mov	r2, #72	; 0x48
   1c000:	e59f1018 	ldr	r1, [pc, #24]	; 1c020 <TargetState::getTargetRegs(Z80Registers&)+0x28>
   1c004:	eb004010 	bl	2c04c <memcpy>
   1c008:	e8bd4010 	pop	{r4, lr}
   1c00c:	e5903000 	ldr	r3, [r0]
   1c010:	e59f200c 	ldr	r2, [pc, #12]	; 1c024 <TargetState::getTargetRegs(Z80Registers&)+0x2c>
   1c014:	e3a01005 	mov	r1, #5
   1c018:	e59f0008 	ldr	r0, [pc, #8]	; 1c028 <TargetState::getTargetRegs(Z80Registers&)+0x30>
   1c01c:	eaffb5e4 	b	97b4 <LogWrite>
   1c020:	0006f3e4 	.word	0x0006f3e4
   1c024:	00030294 	.word	0x00030294
   1c028:	00030248 	.word	0x00030248

0001c02c <TargetState::handleExecAddr(unsigned long)>:
   1c02c:	e1a03000 	mov	r3, r0
   1c030:	e59f2008 	ldr	r2, [pc, #8]	; 1c040 <TargetState::handleExecAddr(unsigned long)+0x14>
   1c034:	e3a01005 	mov	r1, #5
   1c038:	e59f0004 	ldr	r0, [pc, #4]	; 1c044 <TargetState::handleExecAddr(unsigned long)+0x18>
   1c03c:	eaffb5dc 	b	97b4 <LogWrite>
   1c040:	000302ac 	.word	0x000302ac
   1c044:	00030248 	.word	0x00030248

0001c048 <_GLOBAL__sub_I__ZN11TargetState19_pTargetMemoryImageE>:
   1c048:	e3a02000 	mov	r2, #0
   1c04c:	e59f3048 	ldr	r3, [pc, #72]	; 1c09c <_GLOBAL__sub_I__ZN11TargetState19_pTargetMemoryImageE+0x54>
   1c050:	e58320c4 	str	r2, [r3, #196]	; 0xc4
   1c054:	e58320c0 	str	r2, [r3, #192]	; 0xc0
   1c058:	e58320bc 	str	r2, [r3, #188]	; 0xbc
   1c05c:	e58320b8 	str	r2, [r3, #184]	; 0xb8
   1c060:	e58320b4 	str	r2, [r3, #180]	; 0xb4
   1c064:	e58320b0 	str	r2, [r3, #176]	; 0xb0
   1c068:	e58320ac 	str	r2, [r3, #172]	; 0xac
   1c06c:	e58320a8 	str	r2, [r3, #168]	; 0xa8
   1c070:	e58320d8 	str	r2, [r3, #216]	; 0xd8
   1c074:	e58320d4 	str	r2, [r3, #212]	; 0xd4
   1c078:	e58320d0 	str	r2, [r3, #208]	; 0xd0
   1c07c:	e58320cc 	str	r2, [r3, #204]	; 0xcc
   1c080:	e58320c8 	str	r2, [r3, #200]	; 0xc8
   1c084:	e58320ec 	str	r2, [r3, #236]	; 0xec
   1c088:	e58320e8 	str	r2, [r3, #232]	; 0xe8
   1c08c:	e58320e4 	str	r2, [r3, #228]	; 0xe4
   1c090:	e58320e0 	str	r2, [r3, #224]	; 0xe0
   1c094:	e58320dc 	str	r2, [r3, #220]	; 0xdc
   1c098:	e12fff1e 	bx	lr
   1c09c:	0006f33c 	.word	0x0006f33c

0001c0a0 <handlePutToSerialForCmdHandler(unsigned char const*, int)>:
   1c0a0:	e92d4070 	push	{r4, r5, r6, lr}
   1c0a4:	e2515000 	subs	r5, r1, #0
   1c0a8:	d8bd8070 	pople	{r4, r5, r6, pc}
   1c0ac:	e2404001 	sub	r4, r0, #1
   1c0b0:	e59f6018 	ldr	r6, [pc, #24]	; 1c0d0 <handlePutToSerialForCmdHandler(unsigned char const*, int)+0x30>
   1c0b4:	e0845005 	add	r5, r4, r5
   1c0b8:	e5f41001 	ldrb	r1, [r4, #1]!
   1c0bc:	e1a00006 	mov	r0, r6
   1c0c0:	ebffe8c9 	bl	163ec <UartMaxi::write(unsigned int)>
   1c0c4:	e1550004 	cmp	r5, r4
   1c0c8:	1afffffa 	bne	1c0b8 <handlePutToSerialForCmdHandler(unsigned char const*, int)+0x18>
   1c0cc:	e8bd8070 	pop	{r4, r5, r6, pc}
   1c0d0:	0007f42c 	.word	0x0007f42c

0001c0d4 <termWriteString(char const*)>:
   1c0d4:	e1a01000 	mov	r1, r0
   1c0d8:	e59f0000 	ldr	r0, [pc]	; 1c0e0 <termWriteString(char const*)+0xc>
   1c0dc:	eaffe70c 	b	15d14 <Display::termWrite(char const*)>
   1c0e0:	0007f450 	.word	0x0007f450

0001c0e4 <_keypress_raw_handler(unsigned char, unsigned char const*)>:
   1c0e4:	e92d4070 	push	{r4, r5, r6, lr}
   1c0e8:	e5d13000 	ldrb	r3, [r1]
   1c0ec:	e59f4114 	ldr	r4, [pc, #276]	; 1c208 <_keypress_raw_handler(unsigned char, unsigned char const*)+0x124>
   1c0f0:	e353003b 	cmp	r3, #59	; 0x3b
   1c0f4:	e5d43025 	ldrb	r3, [r4, #37]	; 0x25
   1c0f8:	0a000021 	beq	1c184 <_keypress_raw_handler(unsigned char, unsigned char const*)+0xa0>
   1c0fc:	e3530000 	cmp	r3, #0
   1c100:	0a000014 	beq	1c158 <_keypress_raw_handler(unsigned char, unsigned char const*)+0x74>
   1c104:	e5943028 	ldr	r3, [r4, #40]	; 0x28
   1c108:	e3530063 	cmp	r3, #99	; 0x63
   1c10c:	c8bd8070 	popgt	{r4, r5, r6, pc}
   1c110:	ebffde7c 	bl	13b08 <McTerminal::convertRawToAscii(unsigned char, unsigned char const*)>
   1c114:	e2505000 	subs	r5, r0, #0
   1c118:	08bd8070 	popeq	{r4, r5, r6, pc}
   1c11c:	e3550008 	cmp	r5, #8
   1c120:	0a00002d 	beq	1c1dc <_keypress_raw_handler(unsigned char, unsigned char const*)+0xf8>
   1c124:	e355000d 	cmp	r5, #13
   1c128:	0a00001c 	beq	1c1a0 <_keypress_raw_handler(unsigned char, unsigned char const*)+0xbc>
   1c12c:	e2453020 	sub	r3, r5, #32
   1c130:	e353005e 	cmp	r3, #94	; 0x5e
   1c134:	95943028 	ldrls	r3, [r4, #40]	; 0x28
   1c138:	92832001 	addls	r2, r3, #1
   1c13c:	90843003 	addls	r3, r4, r3
   1c140:	95842028 	strls	r2, [r4, #40]	; 0x28
   1c144:	95c3502c 	strbls	r5, [r3, #44]	; 0x2c
   1c148:	e1a01005 	mov	r1, r5
   1c14c:	e8bd4070 	pop	{r4, r5, r6, lr}
   1c150:	e59f00b4 	ldr	r0, [pc, #180]	; 1c20c <_keypress_raw_handler(unsigned char, unsigned char const*)+0x128>
   1c154:	eaffe6f0 	b	15d1c <Display::termWrite(int)>
   1c158:	e1a05001 	mov	r5, r1
   1c15c:	e1a06000 	mov	r6, r0
   1c160:	ebffd4fa 	bl	11550 <McManager::getMachine()>
   1c164:	e2503000 	subs	r3, r0, #0
   1c168:	08bd8070 	popeq	{r4, r5, r6, pc}
   1c16c:	e5933000 	ldr	r3, [r3]
   1c170:	e1a02005 	mov	r2, r5
   1c174:	e1a01006 	mov	r1, r6
   1c178:	e8bd4070 	pop	{r4, r5, r6, lr}
   1c17c:	e5933018 	ldr	r3, [r3, #24]
   1c180:	e12fff13 	bx	r3
   1c184:	e3530000 	cmp	r3, #0
   1c188:	1a000001 	bne	1c194 <_keypress_raw_handler(unsigned char, unsigned char const*)+0xb0>
   1c18c:	e59f007c 	ldr	r0, [pc, #124]	; 1c210 <_keypress_raw_handler(unsigned char, unsigned char const*)+0x12c>
   1c190:	ebffb616 	bl	99f0 <ee_printf>
   1c194:	e3a03001 	mov	r3, #1
   1c198:	e5c43025 	strb	r3, [r4, #37]	; 0x25
   1c19c:	e8bd8070 	pop	{r4, r5, r6, pc}
   1c1a0:	e3a02000 	mov	r2, #0
   1c1a4:	e5943028 	ldr	r3, [r4, #40]	; 0x28
   1c1a8:	e5c42025 	strb	r2, [r4, #37]	; 0x25
   1c1ac:	e1530002 	cmp	r3, r2
   1c1b0:	e0843003 	add	r3, r4, r3
   1c1b4:	e5c3202c 	strb	r2, [r3, #44]	; 0x2c
   1c1b8:	da000004 	ble	1c1d0 <_keypress_raw_handler(unsigned char, unsigned char const*)+0xec>
   1c1bc:	e284002c 	add	r0, r4, #44	; 0x2c
   1c1c0:	ebffc9c1 	bl	e8cc <CommandHandler::sendAPIReq(char const*)>
   1c1c4:	e284102c 	add	r1, r4, #44	; 0x2c
   1c1c8:	e59f0044 	ldr	r0, [pc, #68]	; 1c214 <_keypress_raw_handler(unsigned char, unsigned char const*)+0x130>
   1c1cc:	ebffb607 	bl	99f0 <ee_printf>
   1c1d0:	e3a03000 	mov	r3, #0
   1c1d4:	e5843028 	str	r3, [r4, #40]	; 0x28
   1c1d8:	eaffffda 	b	1c148 <_keypress_raw_handler(unsigned char, unsigned char const*)+0x64>
   1c1dc:	e5943028 	ldr	r3, [r4, #40]	; 0x28
   1c1e0:	e3a01008 	mov	r1, #8
   1c1e4:	e3530000 	cmp	r3, #0
   1c1e8:	c2433001 	subgt	r3, r3, #1
   1c1ec:	e59f0018 	ldr	r0, [pc, #24]	; 1c20c <_keypress_raw_handler(unsigned char, unsigned char const*)+0x128>
   1c1f0:	c5843028 	strgt	r3, [r4, #40]	; 0x28
   1c1f4:	ebffe6c8 	bl	15d1c <Display::termWrite(int)>
   1c1f8:	e3a01020 	mov	r1, #32
   1c1fc:	e59f0008 	ldr	r0, [pc, #8]	; 1c20c <_keypress_raw_handler(unsigned char, unsigned char const*)+0x128>
   1c200:	ebffe6c5 	bl	15d1c <Display::termWrite(int)>
   1c204:	eaffffcf 	b	1c148 <_keypress_raw_handler(unsigned char, unsigned char const*)+0x64>
   1c208:	0007f42c 	.word	0x0007f42c
   1c20c:	0007f450 	.word	0x0007f450
   1c210:	000302c0 	.word	0x000302c0
   1c214:	00030314 	.word	0x00030314

0001c218 <uartWriteString(char const*)>:
   1c218:	e5d01000 	ldrb	r1, [r0]
   1c21c:	e3510000 	cmp	r1, #0
   1c220:	012fff1e 	bxeq	lr
   1c224:	e92d4070 	push	{r4, r5, r6, lr}
   1c228:	e1a04000 	mov	r4, r0
   1c22c:	e59f5014 	ldr	r5, [pc, #20]	; 1c248 <uartWriteString(char const*)+0x30>
   1c230:	e1a00005 	mov	r0, r5
   1c234:	ebffe86c 	bl	163ec <UartMaxi::write(unsigned int)>
   1c238:	e5f41001 	ldrb	r1, [r4, #1]!
   1c23c:	e3510000 	cmp	r1, #0
   1c240:	1afffffa 	bne	1c230 <uartWriteString(char const*)+0x18>
   1c244:	e8bd8070 	pop	{r4, r5, r6, pc}
   1c248:	0007f42c 	.word	0x0007f42c

0001c24c <serviceGetFromSerial()>:
   1c24c:	e3a01000 	mov	r1, #0
   1c250:	e59f3068 	ldr	r3, [pc, #104]	; 1c2c0 <serviceGetFromSerial()+0x74>
   1c254:	e92d4030 	push	{r4, r5, lr}
   1c258:	e5d32010 	ldrb	r2, [r3, #16]
   1c25c:	e5c31010 	strb	r1, [r3, #16]
   1c260:	e2421001 	sub	r1, r2, #1
   1c264:	e3510003 	cmp	r1, #3
   1c268:	90833102 	addls	r3, r3, r2, lsl #2
   1c26c:	95932094 	ldrls	r2, [r3, #148]	; 0x94
   1c270:	e24dd00c 	sub	sp, sp, #12
   1c274:	92822001 	addls	r2, r2, #1
   1c278:	95832094 	strls	r2, [r3, #148]	; 0x94
   1c27c:	e59f4040 	ldr	r4, [pc, #64]	; 1c2c4 <serviceGetFromSerial()+0x78>
   1c280:	e59f5038 	ldr	r5, [pc, #56]	; 1c2c0 <serviceGetFromSerial()+0x74>
   1c284:	ea000007 	b	1c2a8 <serviceGetFromSerial()+0x5c>
   1c288:	e1a00005 	mov	r0, r5
   1c28c:	ebffe951 	bl	167d8 <UartMaxi::read()>
   1c290:	e3a01001 	mov	r1, #1
   1c294:	e5cd0004 	strb	r0, [sp, #4]
   1c298:	e28d0004 	add	r0, sp, #4
   1c29c:	ebffc6c7 	bl	ddc0 <CommandHandler::handleSerialReceivedChars(unsigned char const*, int)>
   1c2a0:	e2544001 	subs	r4, r4, #1
   1c2a4:	0a000003 	beq	1c2b8 <serviceGetFromSerial()+0x6c>
   1c2a8:	e1a00005 	mov	r0, r5
   1c2ac:	ebffe95e 	bl	1682c <UartMaxi::poll()>
   1c2b0:	e3500000 	cmp	r0, #0
   1c2b4:	1afffff3 	bne	1c288 <serviceGetFromSerial()+0x3c>
   1c2b8:	e28dd00c 	add	sp, sp, #12
   1c2bc:	e8bd8030 	pop	{r4, r5, pc}
   1c2c0:	0007f42c 	.word	0x0007f42c
   1c2c4:	00002710 	.word	0x00002710

0001c2c8 <setMachineOptions>:
   1c2c8:	eaffd625 	b	11b64 <McManager::setMachineOpts(char const*)>

0001c2cc <main>:
   1c2cc:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c2d0:	e24dd0a4 	sub	sp, sp, #164	; 0xa4
   1c2d4:	ebffbcb8 	bl	b5bc <timers_init>
   1c2d8:	e3a02e4b 	mov	r2, #1200	; 0x4b0
   1c2dc:	e3a01d1e 	mov	r1, #1920	; 0x780
   1c2e0:	e59f0700 	ldr	r0, [pc, #1792]	; 1c9e8 <main+0x71c>
   1c2e4:	ebffe640 	bl	15bec <Display::init(int, int)>
   1c2e8:	e3a00004 	mov	r0, #4
   1c2ec:	ebffb5ac 	bl	99a4 <LogSetLevel>
   1c2f0:	e59f06f4 	ldr	r0, [pc, #1780]	; 1c9ec <main+0x720>
   1c2f4:	ebffb02d 	bl	83b0 <LogSetOutFn>
   1c2f8:	e59f46f0 	ldr	r4, [pc, #1776]	; 1c9f0 <main+0x724>
   1c2fc:	e59fc6f0 	ldr	ip, [pc, #1776]	; 1c9f4 <main+0x728>
   1c300:	e59fe6f0 	ldr	lr, [pc, #1776]	; 1c9f8 <main+0x72c>
   1c304:	e59f36f0 	ldr	r3, [pc, #1776]	; 1c9fc <main+0x730>
   1c308:	e59f26f0 	ldr	r2, [pc, #1776]	; 1ca00 <main+0x734>
   1c30c:	e59f16f0 	ldr	r1, [pc, #1776]	; 1ca04 <main+0x738>
   1c310:	e59f06f0 	ldr	r0, [pc, #1776]	; 1ca08 <main+0x73c>
   1c314:	e59f56f0 	ldr	r5, [pc, #1776]	; 1ca0c <main+0x740>
   1c318:	e58ce000 	str	lr, [ip]
   1c31c:	e5832000 	str	r2, [r3]
   1c320:	e5845000 	str	r5, [r4]
   1c324:	e5810000 	str	r0, [r1]
   1c328:	ebfffec0 	bl	1be30 <TargetState::clear()>
   1c32c:	e59f16b4 	ldr	r1, [pc, #1716]	; 1c9e8 <main+0x71c>
   1c330:	e59f06d8 	ldr	r0, [pc, #1752]	; 1ca10 <main+0x744>
   1c334:	ebffd342 	bl	11044 <HwManager::init(CommandHandler*, Display*)>
   1c338:	e3a0000c 	mov	r0, #12
   1c33c:	ebffe6a0 	bl	15dc4 <operator new(unsigned int)>
   1c340:	ebffd2e0 	bl	10ec8 <Hw512KRamRom::Hw512KRamRom()>
   1c344:	e59f169c 	ldr	r1, [pc, #1692]	; 1c9e8 <main+0x71c>
   1c348:	e59f06c0 	ldr	r0, [pc, #1728]	; 1ca10 <main+0x744>
   1c34c:	ebffd470 	bl	11514 <McManager::init(CommandHandler*, Display*)>
   1c350:	e59f06bc 	ldr	r0, [pc, #1724]	; 1ca14 <main+0x748>
   1c354:	ebffe69a 	bl	15dc4 <operator new(unsigned int)>
   1c358:	ebffddcd 	bl	13a94 <McTerminal::McTerminal()>
   1c35c:	e59f06b4 	ldr	r0, [pc, #1716]	; 1ca18 <main+0x74c>
   1c360:	ebffe697 	bl	15dc4 <operator new(unsigned int)>
   1c364:	e1a04000 	mov	r4, r0
   1c368:	ebffd44a 	bl	11498 <McBase::McBase()>
   1c36c:	e1a00004 	mov	r0, r4
   1c370:	e3a05000 	mov	r5, #0
   1c374:	e3a06001 	mov	r6, #1
   1c378:	e59f369c 	ldr	r3, [pc, #1692]	; 1ca1c <main+0x750>
   1c37c:	e1a01005 	mov	r1, r5
   1c380:	e4803400 	str	r3, [r0], #1024	; 0x400
   1c384:	e3a02c01 	mov	r2, #256	; 0x100
   1c388:	e2800005 	add	r0, r0, #5
   1c38c:	eb003f72 	bl	2c15c <memset>
   1c390:	e5c46505 	strb	r6, [r4, #1285]	; 0x505
   1c394:	e5c45404 	strb	r5, [r4, #1028]	; 0x404
   1c398:	e59f0680 	ldr	r0, [pc, #1664]	; 1ca20 <main+0x754>
   1c39c:	ebffe688 	bl	15dc4 <operator new(unsigned int)>
   1c3a0:	e1a07000 	mov	r7, r0
   1c3a4:	ebffd43b 	bl	11498 <McBase::McBase()>
   1c3a8:	e59f2674 	ldr	r2, [pc, #1652]	; 1ca24 <main+0x758>
   1c3ac:	e2873901 	add	r3, r7, #16384	; 0x4000
   1c3b0:	e5872000 	str	r2, [r7]
   1c3b4:	e59f066c 	ldr	r0, [pc, #1644]	; 1ca28 <main+0x75c>
   1c3b8:	e5c35004 	strb	r5, [r3, #4]
   1c3bc:	e59f4668 	ldr	r4, [pc, #1640]	; 1ca2c <main+0x760>
   1c3c0:	ebffe67f 	bl	15dc4 <operator new(unsigned int)>
   1c3c4:	ebffe4ae 	bl	15684 <McZXSpectrum::McZXSpectrum()>
   1c3c8:	e5947000 	ldr	r7, [r4]
   1c3cc:	ebffd45b 	bl	11540 <McManager::getNumMachines()>
   1c3d0:	e59f2658 	ldr	r2, [pc, #1624]	; 1ca30 <main+0x764>
   1c3d4:	e1a03000 	mov	r3, r0
   1c3d8:	e3a01002 	mov	r1, #2
   1c3dc:	e1a00007 	mov	r0, r7
   1c3e0:	ebffb4f3 	bl	97b4 <LogWrite>
   1c3e4:	ebffedac 	bl	17a9c <BusAccess::init()>
   1c3e8:	e1a02006 	mov	r2, r6
   1c3ec:	e1a01005 	mov	r1, r5
   1c3f0:	e1a00006 	mov	r0, r6
   1c3f4:	ebffd4f8 	bl	117dc <McManager::setMachineIdx(int, int, bool)>
   1c3f8:	ebffd454 	bl	11550 <McManager::getMachine()>
   1c3fc:	e1500005 	cmp	r0, r5
   1c400:	1a000003 	bne	1c414 <main+0x148>
   1c404:	e59f2628 	ldr	r2, [pc, #1576]	; 1ca34 <main+0x768>
   1c408:	e3a01002 	mov	r1, #2
   1c40c:	e5940000 	ldr	r0, [r4]
   1c410:	ebffb4e7 	bl	97b4 <LogWrite>
   1c414:	eb0001c7 	bl	1cb38 <USPiInitialize>
   1c418:	e3500000 	cmp	r0, #0
   1c41c:	0a00016c 	beq	1c9d4 <main+0x708>
   1c420:	eb00025f 	bl	1cda4 <USPiKeyboardAvailable>
   1c424:	e3500000 	cmp	r0, #0
   1c428:	0a00014f 	beq	1c96c <main+0x6a0>
   1c42c:	e59f0604 	ldr	r0, [pc, #1540]	; 1ca38 <main+0x76c>
   1c430:	eb0002c7 	bl	1cf54 <USPiKeyboardRegisterKeyStatusHandlerRaw>
   1c434:	e5940000 	ldr	r0, [r4]
   1c438:	e59f25fc 	ldr	r2, [pc, #1532]	; 1ca3c <main+0x770>
   1c43c:	e3a01005 	mov	r1, #5
   1c440:	ebffb4db 	bl	97b4 <LogWrite>
   1c444:	e3a03ffa 	mov	r3, #1000	; 0x3e8
   1c448:	e59f25f0 	ldr	r2, [pc, #1520]	; 1ca40 <main+0x774>
   1c44c:	e59f15f0 	ldr	r1, [pc, #1520]	; 1ca44 <main+0x778>
   1c450:	e59f05f0 	ldr	r0, [pc, #1520]	; 1ca48 <main+0x77c>
   1c454:	ebffe70a 	bl	16084 <UartMaxi::setup(unsigned int, int, int)>
   1c458:	e3500000 	cmp	r0, #0
   1c45c:	1a000005 	bne	1c478 <main+0x1ac>
   1c460:	e59f05e4 	ldr	r0, [pc, #1508]	; 1ca4c <main+0x780>
   1c464:	e59f25e4 	ldr	r2, [pc, #1508]	; 1ca50 <main+0x784>
   1c468:	e3a01004 	mov	r1, #4
   1c46c:	ebffb4d0 	bl	97b4 <LogWrite>
   1c470:	e59f05dc 	ldr	r0, [pc, #1500]	; 1ca54 <main+0x788>
   1c474:	ebffead6 	bl	16fd4 <microsDelay>
   1c478:	e3a0100a 	mov	r1, #10
   1c47c:	e59f0564 	ldr	r0, [pc, #1380]	; 1c9e8 <main+0x71c>
   1c480:	ebffe627 	bl	15d24 <Display::termColour(int)>
   1c484:	e59f05cc 	ldr	r0, [pc, #1484]	; 1ca58 <main+0x78c>
   1c488:	ebffb558 	bl	99f0 <ee_printf>
   1c48c:	e3a0100f 	mov	r1, #15
   1c490:	e59f0550 	ldr	r0, [pc, #1360]	; 1c9e8 <main+0x71c>
   1c494:	ebffe622 	bl	15d24 <Display::termColour(int)>
   1c498:	e3a0b000 	mov	fp, #0
   1c49c:	e58db010 	str	fp, [sp, #16]
   1c4a0:	ebffeac7 	bl	16fc4 <micros>
   1c4a4:	e1a08000 	mov	r8, r0
   1c4a8:	e59f9598 	ldr	r9, [pc, #1432]	; 1ca48 <main+0x77c>
   1c4ac:	e59fa55c 	ldr	sl, [pc, #1372]	; 1ca10 <main+0x744>
   1c4b0:	e58db014 	str	fp, [sp, #20]
   1c4b4:	e58db00c 	str	fp, [sp, #12]
   1c4b8:	e2896024 	add	r6, r9, #36	; 0x24
   1c4bc:	e28d406c 	add	r4, sp, #108	; 0x6c
   1c4c0:	ebffd426 	bl	11560 <McManager::getDescriptorTable()>
   1c4c4:	e5901008 	ldr	r1, [r0, #8]
   1c4c8:	e59f058c 	ldr	r0, [pc, #1420]	; 1ca5c <main+0x790>
   1c4cc:	eb0045e9 	bl	2dc78 <__divsi3>
   1c4d0:	e1a05000 	mov	r5, r0
   1c4d4:	ebffeaba 	bl	16fc4 <micros>
   1c4d8:	e1a02005 	mov	r2, r5
   1c4dc:	e59d100c 	ldr	r1, [sp, #12]
   1c4e0:	ebffeacc 	bl	17018 <isTimeout>
   1c4e4:	e3500000 	cmp	r0, #0
   1c4e8:	1a000032 	bne	1c5b8 <main+0x2ec>
   1c4ec:	ebffeab4 	bl	16fc4 <micros>
   1c4f0:	e59f2568 	ldr	r2, [pc, #1384]	; 1ca60 <main+0x794>
   1c4f4:	e1a01008 	mov	r1, r8
   1c4f8:	ebffeac6 	bl	17018 <isTimeout>
   1c4fc:	e3500000 	cmp	r0, #0
   1c500:	1a000038 	bne	1c5e8 <main+0x31c>
   1c504:	ebffeaae 	bl	16fc4 <micros>
   1c508:	e59f2554 	ldr	r2, [pc, #1364]	; 1ca64 <main+0x798>
   1c50c:	e59d1010 	ldr	r1, [sp, #16]
   1c510:	ebffeac0 	bl	17018 <isTimeout>
   1c514:	e3500000 	cmp	r0, #0
   1c518:	1a000021 	bne	1c5a4 <main+0x2d8>
   1c51c:	e3a02000 	mov	r2, #0
   1c520:	e5d93010 	ldrb	r3, [r9, #16]
   1c524:	e5c92010 	strb	r2, [r9, #16]
   1c528:	e2432001 	sub	r2, r3, #1
   1c52c:	e3520003 	cmp	r2, #3
   1c530:	90893103 	addls	r3, r9, r3, lsl #2
   1c534:	95932094 	ldrls	r2, [r3, #148]	; 0x94
   1c538:	e59f5528 	ldr	r5, [pc, #1320]	; 1ca68 <main+0x79c>
   1c53c:	92822001 	addls	r2, r2, #1
   1c540:	95832094 	strls	r2, [r3, #148]	; 0x94
   1c544:	e59f74fc 	ldr	r7, [pc, #1276]	; 1ca48 <main+0x77c>
   1c548:	ea000007 	b	1c56c <main+0x2a0>
   1c54c:	e1a00007 	mov	r0, r7
   1c550:	ebffe8a0 	bl	167d8 <UartMaxi::read()>
   1c554:	e3a01001 	mov	r1, #1
   1c558:	e5cd006c 	strb	r0, [sp, #108]	; 0x6c
   1c55c:	e1a00004 	mov	r0, r4
   1c560:	ebffc616 	bl	ddc0 <CommandHandler::handleSerialReceivedChars(unsigned char const*, int)>
   1c564:	e2555001 	subs	r5, r5, #1
   1c568:	0a000003 	beq	1c57c <main+0x2b0>
   1c56c:	e1a00007 	mov	r0, r7
   1c570:	ebffe8ad 	bl	1682c <UartMaxi::poll()>
   1c574:	e3500000 	cmp	r0, #0
   1c578:	1afffff3 	bne	1c54c <main+0x280>
   1c57c:	e1a0000a 	mov	r0, sl
   1c580:	ebffc98a 	bl	ebb0 <CommandHandler::service()>
   1c584:	ebffbc33 	bl	b658 <timer_poll>
   1c588:	ebfff369 	bl	19334 <BusAccess::service()>
   1c58c:	ebffd2b0 	bl	11054 <HwManager::service()>
   1c590:	ebfff6f3 	bl	1a164 <TargetDebug::get()>
   1c594:	e3500000 	cmp	r0, #0
   1c598:	0affffc8 	beq	1c4c0 <main+0x1f4>
   1c59c:	ebfff77e 	bl	1a39c <TargetDebug::service()>
   1c5a0:	eaffffc6 	b	1c4c0 <main+0x1f4>
   1c5a4:	e1a0000a 	mov	r0, sl
   1c5a8:	ebffc8e7 	bl	e94c <CommandHandler::sendRegularStatusUpdate()>
   1c5ac:	ebffea84 	bl	16fc4 <micros>
   1c5b0:	e58d0010 	str	r0, [sp, #16]
   1c5b4:	eaffffd8 	b	1c51c <main+0x250>
   1c5b8:	ebffea81 	bl	16fc4 <micros>
   1c5bc:	ebffea80 	bl	16fc4 <micros>
   1c5c0:	e58d000c 	str	r0, [sp, #12]
   1c5c4:	ebffd3e1 	bl	11550 <McManager::getMachine()>
   1c5c8:	e2503000 	subs	r3, r0, #0
   1c5cc:	0a000002 	beq	1c5dc <main+0x310>
   1c5d0:	e5933000 	ldr	r3, [r3]
   1c5d4:	e5933010 	ldr	r3, [r3, #16]
   1c5d8:	e12fff33 	blx	r3
   1c5dc:	ebffea78 	bl	16fc4 <micros>
   1c5e0:	e28bb001 	add	fp, fp, #1
   1c5e4:	eaffffc0 	b	1c4ec <main+0x220>
   1c5e8:	e3a0100b 	mov	r1, #11
   1c5ec:	e1a00006 	mov	r0, r6
   1c5f0:	ebffe5cb 	bl	15d24 <Display::termColour(int)>
   1c5f4:	e1a00006 	mov	r0, r6
   1c5f8:	ebffe5cb 	bl	15d2c <Display::termGetWidth()>
   1c5fc:	e59f3468 	ldr	r3, [pc, #1128]	; 1ca6c <main+0x7a0>
   1c600:	e2402028 	sub	r2, r0, #40	; 0x28
   1c604:	e3a01001 	mov	r1, #1
   1c608:	e58d3000 	str	r3, [sp]
   1c60c:	e1a00006 	mov	r0, r6
   1c610:	e3a03000 	mov	r3, #0
   1c614:	ebffe5b9 	bl	15d00 <Display::windowWrite(int, int, int, unsigned char const*)>
   1c618:	e1a00006 	mov	r0, r6
   1c61c:	ebffe5c2 	bl	15d2c <Display::termGetWidth()>
   1c620:	e3a03001 	mov	r3, #1
   1c624:	e59f1444 	ldr	r1, [pc, #1092]	; 1ca70 <main+0x7a4>
   1c628:	e2402028 	sub	r2, r0, #40	; 0x28
   1c62c:	e58d1000 	str	r1, [sp]
   1c630:	e1a00006 	mov	r0, r6
   1c634:	e1a01003 	mov	r1, r3
   1c638:	ebffe5b0 	bl	15d00 <Display::windowWrite(int, int, int, unsigned char const*)>
   1c63c:	e1a00006 	mov	r0, r6
   1c640:	ebffe5b9 	bl	15d2c <Display::termGetWidth()>
   1c644:	e59f3428 	ldr	r3, [pc, #1064]	; 1ca74 <main+0x7a8>
   1c648:	e2402028 	sub	r2, r0, #40	; 0x28
   1c64c:	e3a01001 	mov	r1, #1
   1c650:	e58d3000 	str	r3, [sp]
   1c654:	e1a00006 	mov	r0, r6
   1c658:	e3a03002 	mov	r3, #2
   1c65c:	ebffe5a7 	bl	15d00 <Display::windowWrite(int, int, int, unsigned char const*)>
   1c660:	e1a00006 	mov	r0, r6
   1c664:	ebffe5b0 	bl	15d2c <Display::termGetWidth()>
   1c668:	e59f3408 	ldr	r3, [pc, #1032]	; 1ca78 <main+0x7ac>
   1c66c:	e2402028 	sub	r2, r0, #40	; 0x28
   1c670:	e58d3000 	str	r3, [sp]
   1c674:	e3a01001 	mov	r1, #1
   1c678:	e3a03003 	mov	r3, #3
   1c67c:	e1a00006 	mov	r0, r6
   1c680:	ebffe59e 	bl	15d00 <Display::windowWrite(int, int, int, unsigned char const*)>
   1c684:	e3a0c000 	mov	ip, #0
   1c688:	e28d3028 	add	r3, sp, #40	; 0x28
   1c68c:	e58d3004 	str	r3, [sp, #4]
   1c690:	e28d3024 	add	r3, sp, #36	; 0x24
   1c694:	e58d3000 	str	r3, [sp]
   1c698:	e28d201c 	add	r2, sp, #28
   1c69c:	e28d3020 	add	r3, sp, #32
   1c6a0:	e28d101b 	add	r1, sp, #27
   1c6a4:	e1a0000a 	mov	r0, sl
   1c6a8:	e5cdc01b 	strb	ip, [sp, #27]
   1c6ac:	e58dc01c 	str	ip, [sp, #28]
   1c6b0:	e58dc020 	str	ip, [sp, #32]
   1c6b4:	e58dc024 	str	ip, [sp, #36]	; 0x24
   1c6b8:	e58dc028 	str	ip, [sp, #40]	; 0x28
   1c6bc:	ebffc8d8 	bl	ea24 <CommandHandler::getStatusResponse(bool*, char**, char**, char**, char**)>
   1c6c0:	e3a02032 	mov	r2, #50	; 0x32
   1c6c4:	e59f13b0 	ldr	r1, [pc, #944]	; 1ca7c <main+0x7b0>
   1c6c8:	e1a00004 	mov	r0, r4
   1c6cc:	eb00401d 	bl	2c748 <strlcpy>
   1c6d0:	e59d1028 	ldr	r1, [sp, #40]	; 0x28
   1c6d4:	e3a02032 	mov	r2, #50	; 0x32
   1c6d8:	e5d13000 	ldrb	r3, [r1]
   1c6dc:	e1a00004 	mov	r0, r4
   1c6e0:	e3530000 	cmp	r3, #0
   1c6e4:	059f1394 	ldreq	r1, [pc, #916]	; 1ca80 <main+0x7b4>
   1c6e8:	eb003fe6 	bl	2c688 <strlcat>
   1c6ec:	e1a00006 	mov	r0, r6
   1c6f0:	ebffe58d 	bl	15d2c <Display::termGetWidth()>
   1c6f4:	e1a05000 	mov	r5, r0
   1c6f8:	e1a00004 	mov	r0, r4
   1c6fc:	eb004026 	bl	2c79c <strlen>
   1c700:	e0452000 	sub	r2, r5, r0
   1c704:	e2422001 	sub	r2, r2, #1
   1c708:	e3a03004 	mov	r3, #4
   1c70c:	e58d4000 	str	r4, [sp]
   1c710:	e3a01001 	mov	r1, #1
   1c714:	e1a00006 	mov	r0, r6
   1c718:	ebffe578 	bl	15d00 <Display::windowWrite(int, int, int, unsigned char const*)>
   1c71c:	e3a02000 	mov	r2, #0
   1c720:	e59d3020 	ldr	r3, [sp, #32]
   1c724:	e5cd206c 	strb	r2, [sp, #108]	; 0x6c
   1c728:	e5d33000 	ldrb	r3, [r3]
   1c72c:	e3a02032 	mov	r2, #50	; 0x32
   1c730:	e3530043 	cmp	r3, #67	; 0x43
   1c734:	1a00007e 	bne	1c934 <main+0x668>
   1c738:	e59f1344 	ldr	r1, [pc, #836]	; 1ca84 <main+0x7b8>
   1c73c:	e1a00004 	mov	r0, r4
   1c740:	eb004000 	bl	2c748 <strlcpy>
   1c744:	e5dd301b 	ldrb	r3, [sp, #27]
   1c748:	e3530000 	cmp	r3, #0
   1c74c:	1a000081 	bne	1c958 <main+0x68c>
   1c750:	e1a00006 	mov	r0, r6
   1c754:	ebffe574 	bl	15d2c <Display::termGetWidth()>
   1c758:	e1a05000 	mov	r5, r0
   1c75c:	e1a00004 	mov	r0, r4
   1c760:	eb00400d 	bl	2c79c <strlen>
   1c764:	e0452000 	sub	r2, r5, r0
   1c768:	e2422001 	sub	r2, r2, #1
   1c76c:	e3a03005 	mov	r3, #5
   1c770:	e3a01001 	mov	r1, #1
   1c774:	e1a00006 	mov	r0, r6
   1c778:	e58d4000 	str	r4, [sp]
   1c77c:	ebffe55f 	bl	15d00 <Display::windowWrite(int, int, int, unsigned char const*)>
   1c780:	e3a03000 	mov	r3, #0
   1c784:	e59f12fc 	ldr	r1, [pc, #764]	; 1ca88 <main+0x7bc>
   1c788:	e3a02032 	mov	r2, #50	; 0x32
   1c78c:	e1a00004 	mov	r0, r4
   1c790:	e5cd306c 	strb	r3, [sp, #108]	; 0x6c
   1c794:	eb003feb 	bl	2c748 <strlcpy>
   1c798:	ebffd785 	bl	125b4 <McManager::targetIsPaused()>
   1c79c:	e3500000 	cmp	r0, #0
   1c7a0:	159f12e4 	ldrne	r1, [pc, #740]	; 1ca8c <main+0x7c0>
   1c7a4:	059f12e4 	ldreq	r1, [pc, #740]	; 1ca90 <main+0x7c4>
   1c7a8:	e3a02032 	mov	r2, #50	; 0x32
   1c7ac:	e1a00004 	mov	r0, r4
   1c7b0:	eb003fb4 	bl	2c688 <strlcat>
   1c7b4:	ebffd77f 	bl	125b8 <McManager::targetBusUnderPiControl()>
   1c7b8:	e3500000 	cmp	r0, #0
   1c7bc:	1a000060 	bne	1c944 <main+0x678>
   1c7c0:	e1a00006 	mov	r0, r6
   1c7c4:	ebffe558 	bl	15d2c <Display::termGetWidth()>
   1c7c8:	e1a05000 	mov	r5, r0
   1c7cc:	e1a00004 	mov	r0, r4
   1c7d0:	eb003ff1 	bl	2c79c <strlen>
   1c7d4:	e0452000 	sub	r2, r5, r0
   1c7d8:	e2422001 	sub	r2, r2, #1
   1c7dc:	e3a03006 	mov	r3, #6
   1c7e0:	e3a01001 	mov	r1, #1
   1c7e4:	e1a00006 	mov	r0, r6
   1c7e8:	e58d4000 	str	r4, [sp]
   1c7ec:	ebffe543 	bl	15d00 <Display::windowWrite(int, int, int, unsigned char const*)>
   1c7f0:	e59f329c 	ldr	r3, [pc, #668]	; 1ca94 <main+0x7c8>
   1c7f4:	e3a02025 	mov	r2, #37	; 0x25
   1c7f8:	e3a01000 	mov	r1, #0
   1c7fc:	e28d0044 	add	r0, sp, #68	; 0x44
   1c800:	e58d3040 	str	r3, [sp, #64]	; 0x40
   1c804:	eb003e54 	bl	2c15c <memset>
   1c808:	e59d8014 	ldr	r8, [sp, #20]
   1c80c:	e59f3284 	ldr	r3, [pc, #644]	; 1ca98 <main+0x7cc>
   1c810:	e3580000 	cmp	r8, #0
   1c814:	e59f1280 	ldr	r1, [pc, #640]	; 1ca9c <main+0x7d0>
   1c818:	e3a02028 	mov	r2, #40	; 0x28
   1c81c:	01a01003 	moveq	r1, r3
   1c820:	e28d0040 	add	r0, sp, #64	; 0x40
   1c824:	eb003fc7 	bl	2c748 <strlcpy>
   1c828:	e1a0b0cb 	asr	fp, fp, #1
   1c82c:	e3a02028 	mov	r2, #40	; 0x28
   1c830:	e59f1268 	ldr	r1, [pc, #616]	; 1caa0 <main+0x7d4>
   1c834:	e28d0040 	add	r0, sp, #64	; 0x40
   1c838:	eb003f92 	bl	2c688 <strlcat>
   1c83c:	e3a0300a 	mov	r3, #10
   1c840:	e3a02028 	mov	r2, #40	; 0x28
   1c844:	e28d102c 	add	r1, sp, #44	; 0x2c
   1c848:	e1a0000b 	mov	r0, fp
   1c84c:	ebffbb29 	bl	b4f8 <rditoa>
   1c850:	e3a02028 	mov	r2, #40	; 0x28
   1c854:	e28d102c 	add	r1, sp, #44	; 0x2c
   1c858:	e28d0040 	add	r0, sp, #64	; 0x40
   1c85c:	eb003f89 	bl	2c688 <strlcat>
   1c860:	e3a02028 	mov	r2, #40	; 0x28
   1c864:	e59f1238 	ldr	r1, [pc, #568]	; 1caa4 <main+0x7d8>
   1c868:	e28d0040 	add	r0, sp, #64	; 0x40
   1c86c:	eb003f85 	bl	2c688 <strlcat>
   1c870:	e1a00006 	mov	r0, r6
   1c874:	ebffe52c 	bl	15d2c <Display::termGetWidth()>
   1c878:	e1a05000 	mov	r5, r0
   1c87c:	e28d0040 	add	r0, sp, #64	; 0x40
   1c880:	eb003fc5 	bl	2c79c <strlen>
   1c884:	e3a07008 	mov	r7, #8
   1c888:	e0452000 	sub	r2, r5, r0
   1c88c:	e3a05000 	mov	r5, #0
   1c890:	e28d3040 	add	r3, sp, #64	; 0x40
   1c894:	e58d3000 	str	r3, [sp]
   1c898:	e2422001 	sub	r2, r2, #1
   1c89c:	e3a03007 	mov	r3, #7
   1c8a0:	e3a01001 	mov	r1, #1
   1c8a4:	e1a00006 	mov	r0, r6
   1c8a8:	ebffe514 	bl	15d00 <Display::windowWrite(int, int, int, unsigned char const*)>
   1c8ac:	e2283001 	eor	r3, r8, #1
   1c8b0:	e58d3014 	str	r3, [sp, #20]
   1c8b4:	e1a00005 	mov	r0, r5
   1c8b8:	ebfff2eb 	bl	1946c <BusAccess::isrAssertGetCount(int)>
   1c8bc:	e2503000 	subs	r3, r0, #0
   1c8c0:	e287b001 	add	fp, r7, #1
   1c8c4:	da000010 	ble	1c90c <main+0x640>
   1c8c8:	e1a02005 	mov	r2, r5
   1c8cc:	e59f11d4 	ldr	r1, [pc, #468]	; 1caa8 <main+0x7dc>
   1c8d0:	e1a00004 	mov	r0, r4
   1c8d4:	ebffb436 	bl	99b4 <ee_sprintf>
   1c8d8:	e1a00006 	mov	r0, r6
   1c8dc:	ebffe512 	bl	15d2c <Display::termGetWidth()>
   1c8e0:	e1a08000 	mov	r8, r0
   1c8e4:	e1a00004 	mov	r0, r4
   1c8e8:	eb003fab 	bl	2c79c <strlen>
   1c8ec:	e0482000 	sub	r2, r8, r0
   1c8f0:	e1a03007 	mov	r3, r7
   1c8f4:	e2422001 	sub	r2, r2, #1
   1c8f8:	e58d4000 	str	r4, [sp]
   1c8fc:	e3a01001 	mov	r1, #1
   1c900:	e1a00006 	mov	r0, r6
   1c904:	e1a0700b 	mov	r7, fp
   1c908:	ebffe4fc 	bl	15d00 <Display::windowWrite(int, int, int, unsigned char const*)>
   1c90c:	e2855001 	add	r5, r5, #1
   1c910:	e3550008 	cmp	r5, #8
   1c914:	1affffe6 	bne	1c8b4 <main+0x5e8>
   1c918:	ebffe9a9 	bl	16fc4 <micros>
   1c91c:	e3a0100f 	mov	r1, #15
   1c920:	e1a08000 	mov	r8, r0
   1c924:	e1a00006 	mov	r0, r6
   1c928:	ebffe4fd 	bl	15d24 <Display::termColour(int)>
   1c92c:	e3a0b000 	mov	fp, #0
   1c930:	eafffef3 	b	1c504 <main+0x238>
   1c934:	e59f1170 	ldr	r1, [pc, #368]	; 1caac <main+0x7e0>
   1c938:	e1a00004 	mov	r0, r4
   1c93c:	eb003f81 	bl	2c748 <strlcpy>
   1c940:	eaffff82 	b	1c750 <main+0x484>
   1c944:	e3a02032 	mov	r2, #50	; 0x32
   1c948:	e59f1160 	ldr	r1, [pc, #352]	; 1cab0 <main+0x7e4>
   1c94c:	e1a00004 	mov	r0, r4
   1c950:	eb003f4c 	bl	2c688 <strlcat>
   1c954:	eaffff99 	b	1c7c0 <main+0x4f4>
   1c958:	e3a02032 	mov	r2, #50	; 0x32
   1c95c:	e59d101c 	ldr	r1, [sp, #28]
   1c960:	e1a00004 	mov	r0, r4
   1c964:	eb003f47 	bl	2c688 <strlcat>
   1c968:	eaffff78 	b	1c750 <main+0x484>
   1c96c:	e5940000 	ldr	r0, [r4]
   1c970:	e59f213c 	ldr	r2, [pc, #316]	; 1cab4 <main+0x7e8>
   1c974:	e3a01002 	mov	r1, #2
   1c978:	ebffb38d 	bl	97b4 <LogWrite>
   1c97c:	e3a03ffa 	mov	r3, #1000	; 0x3e8
   1c980:	e59f20b8 	ldr	r2, [pc, #184]	; 1ca40 <main+0x774>
   1c984:	e59f10b8 	ldr	r1, [pc, #184]	; 1ca44 <main+0x778>
   1c988:	e59f00b8 	ldr	r0, [pc, #184]	; 1ca48 <main+0x77c>
   1c98c:	ebffe5bc 	bl	16084 <UartMaxi::setup(unsigned int, int, int)>
   1c990:	e3500000 	cmp	r0, #0
   1c994:	1a000005 	bne	1c9b0 <main+0x6e4>
   1c998:	e59f00ac 	ldr	r0, [pc, #172]	; 1ca4c <main+0x780>
   1c99c:	e59f20ac 	ldr	r2, [pc, #172]	; 1ca50 <main+0x784>
   1c9a0:	e3a01004 	mov	r1, #4
   1c9a4:	ebffb382 	bl	97b4 <LogWrite>
   1c9a8:	e59f00a4 	ldr	r0, [pc, #164]	; 1ca54 <main+0x788>
   1c9ac:	ebffe988 	bl	16fd4 <microsDelay>
   1c9b0:	e3a01009 	mov	r1, #9
   1c9b4:	e59f002c 	ldr	r0, [pc, #44]	; 1c9e8 <main+0x71c>
   1c9b8:	ebffe4d9 	bl	15d24 <Display::termColour(int)>
   1c9bc:	e59f00f4 	ldr	r0, [pc, #244]	; 1cab8 <main+0x7ec>
   1c9c0:	ebffb40a 	bl	99f0 <ee_printf>
   1c9c4:	e3a0100f 	mov	r1, #15
   1c9c8:	e59f0018 	ldr	r0, [pc, #24]	; 1c9e8 <main+0x71c>
   1c9cc:	ebffe4d4 	bl	15d24 <Display::termColour(int)>
   1c9d0:	eafffeb0 	b	1c498 <main+0x1cc>
   1c9d4:	e5940000 	ldr	r0, [r4]
   1c9d8:	e59f20dc 	ldr	r2, [pc, #220]	; 1cabc <main+0x7f0>
   1c9dc:	e3a01002 	mov	r1, #2
   1c9e0:	ebffb373 	bl	97b4 <LogWrite>
   1c9e4:	eaffffe4 	b	1c97c <main+0x6b0>
   1c9e8:	0007f450 	.word	0x0007f450
   1c9ec:	0001c0d4 	.word	0x0001c0d4
   1c9f0:	00043448 	.word	0x00043448
   1c9f4:	00042df4 	.word	0x00042df4
   1c9f8:	0001c0a0 	.word	0x0001c0a0
   1c9fc:	00043444 	.word	0x00043444
   1ca00:	00012638 	.word	0x00012638
   1ca04:	00043440 	.word	0x00043440
   1ca08:	00015d30 	.word	0x00015d30
   1ca0c:	00012674 	.word	0x00012674
   1ca10:	0007f4d4 	.word	0x0007f4d4
   1ca14:	00002f08 	.word	0x00002f08
   1ca18:	00000508 	.word	0x00000508
   1ca1c:	0002f2a4 	.word	0x0002f2a4
   1ca20:	00004008 	.word	0x00004008
   1ca24:	0002f1f8 	.word	0x0002f1f8
   1ca28:	00001b08 	.word	0x00001b08
   1ca2c:	00042348 	.word	0x00042348
   1ca30:	00030340 	.word	0x00030340
   1ca34:	00030358 	.word	0x00030358
   1ca38:	0001c0e4 	.word	0x0001c0e4
   1ca3c:	0003037c 	.word	0x0003037c
   1ca40:	000186a0 	.word	0x000186a0
   1ca44:	0007a120 	.word	0x0007a120
   1ca48:	0007f42c 	.word	0x0007f42c
   1ca4c:	000303d4 	.word	0x000303d4
   1ca50:	000303bc 	.word	0x000303bc
   1ca54:	004c4b40 	.word	0x004c4b40
   1ca58:	000303dc 	.word	0x000303dc
   1ca5c:	000f4240 	.word	0x000f4240
   1ca60:	001e8480 	.word	0x001e8480
   1ca64:	002dc6c0 	.word	0x002dc6c0
   1ca68:	00002710 	.word	0x00002710
   1ca6c:	00030424 	.word	0x00030424
   1ca70:	0003044c 	.word	0x0003044c
   1ca74:	00030474 	.word	0x00030474
   1ca78:	0003049c 	.word	0x0003049c
   1ca7c:	000304c4 	.word	0x000304c4
   1ca80:	000304d4 	.word	0x000304d4
   1ca84:	000304e4 	.word	0x000304e4
   1ca88:	00030504 	.word	0x00030504
   1ca8c:	00030510 	.word	0x00030510
   1ca90:	00030518 	.word	0x00030518
   1ca94:	00002020 	.word	0x00002020
   1ca98:	00030338 	.word	0x00030338
   1ca9c:	00030330 	.word	0x00030330
   1caa0:	00030534 	.word	0x00030534
   1caa4:	00030540 	.word	0x00030540
   1caa8:	00030544 	.word	0x00030544
   1caac:	000304f0 	.word	0x000304f0
   1cab0:	00030528 	.word	0x00030528
   1cab4:	0003038c 	.word	0x0003038c
   1cab8:	0003040c 	.word	0x0003040c
   1cabc:	000303a0 	.word	0x000303a0

0001cac0 <_GLOBAL__sub_I_FromMain>:
   1cac0:	e92d4070 	push	{r4, r5, r6, lr}
   1cac4:	e59f5054 	ldr	r5, [pc, #84]	; 1cb20 <_GLOBAL__sub_I_FromMain+0x60>
   1cac8:	e59f4054 	ldr	r4, [pc, #84]	; 1cb24 <_GLOBAL__sub_I_FromMain+0x64>
   1cacc:	e2856024 	add	r6, r5, #36	; 0x24
   1cad0:	e1a00006 	mov	r0, r6
   1cad4:	ebffe442 	bl	15be4 <Display::Display()>
   1cad8:	e1a02004 	mov	r2, r4
   1cadc:	e59f1044 	ldr	r1, [pc, #68]	; 1cb28 <_GLOBAL__sub_I_FromMain+0x68>
   1cae0:	e1a00006 	mov	r0, r6
   1cae4:	ebffe96f 	bl	170a8 <__aeabi_atexit>
   1cae8:	e59f603c 	ldr	r6, [pc, #60]	; 1cb2c <_GLOBAL__sub_I_FromMain+0x6c>
   1caec:	e1a00005 	mov	r0, r5
   1caf0:	ebffe541 	bl	15ffc <UartMaxi::UartMaxi()>
   1caf4:	e1a02004 	mov	r2, r4
   1caf8:	e59f1030 	ldr	r1, [pc, #48]	; 1cb30 <_GLOBAL__sub_I_FromMain+0x70>
   1cafc:	e1a00005 	mov	r0, r5
   1cb00:	ebffe968 	bl	170a8 <__aeabi_atexit>
   1cb04:	e1a00006 	mov	r0, r6
   1cb08:	ebffc48d 	bl	dd44 <CommandHandler::CommandHandler()>
   1cb0c:	e1a02004 	mov	r2, r4
   1cb10:	e1a00006 	mov	r0, r6
   1cb14:	e8bd4070 	pop	{r4, r5, r6, lr}
   1cb18:	e59f1014 	ldr	r1, [pc, #20]	; 1cb34 <_GLOBAL__sub_I_FromMain+0x74>
   1cb1c:	eaffe961 	b	170a8 <__aeabi_atexit>
   1cb20:	0007f42c 	.word	0x0007f42c
   1cb24:	0005accc 	.word	0x0005accc
   1cb28:	00015be8 	.word	0x00015be8
   1cb2c:	0007f4d4 	.word	0x0007f4d4
   1cb30:	00016028 	.word	0x00016028
   1cb34:	0000ddbc 	.word	0x0000ddbc

0001cb38 <USPiInitialize>:
   1cb38:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   1cb3c:	e59f5220 	ldr	r5, [pc, #544]	; 1cd64 <USPiInitialize+0x22c>
   1cb40:	e24dd010 	sub	sp, sp, #16
   1cb44:	e59f221c 	ldr	r2, [pc, #540]	; 1cd68 <USPiInitialize+0x230>
   1cb48:	e3a01004 	mov	r1, #4
   1cb4c:	e59f0218 	ldr	r0, [pc, #536]	; 1cd6c <USPiInitialize+0x234>
   1cb50:	ebffb317 	bl	97b4 <LogWrite>
   1cb54:	e5953000 	ldr	r3, [r5]
   1cb58:	e3530000 	cmp	r3, #0
   1cb5c:	0a000003 	beq	1cb70 <USPiInitialize+0x38>
   1cb60:	e3a02024 	mov	r2, #36	; 0x24
   1cb64:	e59f1204 	ldr	r1, [pc, #516]	; 1cd70 <USPiInitialize+0x238>
   1cb68:	e59f0204 	ldr	r0, [pc, #516]	; 1cd74 <USPiInitialize+0x23c>
   1cb6c:	ebffeb2b 	bl	17820 <uspi_assertion_failed>
   1cb70:	e59f0200 	ldr	r0, [pc, #512]	; 1cd78 <USPiInitialize+0x240>
   1cb74:	ebffeb02 	bl	17784 <malloc>
   1cb78:	e3500000 	cmp	r0, #0
   1cb7c:	e5850000 	str	r0, [r5]
   1cb80:	0a000071 	beq	1cd4c <USPiInitialize+0x214>
   1cb84:	e3a04000 	mov	r4, #0
   1cb88:	eb001c3e 	bl	23c88 <DeviceNameService>
   1cb8c:	e5950000 	ldr	r0, [r5]
   1cb90:	e2800004 	add	r0, r0, #4
   1cb94:	eb0003a9 	bl	1da40 <DWHCIDevice>
   1cb98:	e5950000 	ldr	r0, [r5]
   1cb9c:	e58047b0 	str	r4, [r0, #1968]	; 0x7b0
   1cba0:	e58047b4 	str	r4, [r0, #1972]	; 0x7b4
   1cba4:	e2800004 	add	r0, r0, #4
   1cba8:	eb000bd4 	bl	1fb00 <DWHCIDeviceInitialize>
   1cbac:	e2506000 	subs	r6, r0, #0
   1cbb0:	0a000056 	beq	1cd10 <USPiInitialize+0x1d8>
   1cbb4:	eb001cf1 	bl	23f80 <DeviceNameServiceGet>
   1cbb8:	e1a02004 	mov	r2, r4
   1cbbc:	e59f11b8 	ldr	r1, [pc, #440]	; 1cd7c <USPiInitialize+0x244>
   1cbc0:	e5956000 	ldr	r6, [r5]
   1cbc4:	eb001cb2 	bl	23e94 <DeviceNameServiceGetDevice>
   1cbc8:	e5860798 	str	r0, [r6, #1944]	; 0x798
   1cbcc:	eb001ceb 	bl	23f80 <DeviceNameServiceGet>
   1cbd0:	e1a02004 	mov	r2, r4
   1cbd4:	e59f11a4 	ldr	r1, [pc, #420]	; 1cd80 <USPiInitialize+0x248>
   1cbd8:	e5956000 	ldr	r6, [r5]
   1cbdc:	eb001cac 	bl	23e94 <DeviceNameServiceGetDevice>
   1cbe0:	e586079c 	str	r0, [r6, #1948]	; 0x79c
   1cbe4:	eb001ce5 	bl	23f80 <DeviceNameServiceGet>
   1cbe8:	e1a02004 	mov	r2, r4
   1cbec:	e59f1190 	ldr	r1, [pc, #400]	; 1cd84 <USPiInitialize+0x24c>
   1cbf0:	e5956000 	ldr	r6, [r5]
   1cbf4:	eb001ca6 	bl	23e94 <DeviceNameServiceGetDevice>
   1cbf8:	e59f8188 	ldr	r8, [pc, #392]	; 1cd88 <USPiInitialize+0x250>
   1cbfc:	e58607c8 	str	r0, [r6, #1992]	; 0x7c8
   1cc00:	e2846001 	add	r6, r4, #1
   1cc04:	e28d0004 	add	r0, sp, #4
   1cc08:	eb00272a 	bl	268b8 <String>
   1cc0c:	e1a02006 	mov	r2, r6
   1cc10:	e1a01008 	mov	r1, r8
   1cc14:	e28d0004 	add	r0, sp, #4
   1cc18:	eb0029e7 	bl	273bc <StringFormat>
   1cc1c:	eb001cd7 	bl	23f80 <DeviceNameServiceGet>
   1cc20:	e1a07000 	mov	r7, r0
   1cc24:	e28d0004 	add	r0, sp, #4
   1cc28:	eb002755 	bl	26984 <StringGet>
   1cc2c:	e3a02001 	mov	r2, #1
   1cc30:	e1a01000 	mov	r1, r0
   1cc34:	e1a00007 	mov	r0, r7
   1cc38:	e5957000 	ldr	r7, [r5]
   1cc3c:	eb001c94 	bl	23e94 <DeviceNameServiceGetDevice>
   1cc40:	e2843f7a 	add	r3, r4, #488	; 0x1e8
   1cc44:	e7870103 	str	r0, [r7, r3, lsl #2]
   1cc48:	e28d0004 	add	r0, sp, #4
   1cc4c:	eb00273b 	bl	26940 <_String>
   1cc50:	e3560004 	cmp	r6, #4
   1cc54:	e1a04006 	mov	r4, r6
   1cc58:	1affffe8 	bne	1cc00 <USPiInitialize+0xc8>
   1cc5c:	eb001cc7 	bl	23f80 <DeviceNameServiceGet>
   1cc60:	e3a02000 	mov	r2, #0
   1cc64:	e59f1120 	ldr	r1, [pc, #288]	; 1cd8c <USPiInitialize+0x254>
   1cc68:	e5954000 	ldr	r4, [r5]
   1cc6c:	eb001c88 	bl	23e94 <DeviceNameServiceGetDevice>
   1cc70:	e58407b0 	str	r0, [r4, #1968]	; 0x7b0
   1cc74:	eb001cc1 	bl	23f80 <DeviceNameServiceGet>
   1cc78:	e3a02000 	mov	r2, #0
   1cc7c:	e59f110c 	ldr	r1, [pc, #268]	; 1cd90 <USPiInitialize+0x258>
   1cc80:	e5956000 	ldr	r6, [r5]
   1cc84:	eb001c82 	bl	23e94 <DeviceNameServiceGetDevice>
   1cc88:	e3a04000 	mov	r4, #0
   1cc8c:	e59f8100 	ldr	r8, [pc, #256]	; 1cd94 <USPiInitialize+0x25c>
   1cc90:	e58607b4 	str	r0, [r6, #1972]	; 0x7b4
   1cc94:	e2846001 	add	r6, r4, #1
   1cc98:	e28d0004 	add	r0, sp, #4
   1cc9c:	eb002705 	bl	268b8 <String>
   1cca0:	e1a02006 	mov	r2, r6
   1cca4:	e1a01008 	mov	r1, r8
   1cca8:	e28d0004 	add	r0, sp, #4
   1ccac:	eb0029c2 	bl	273bc <StringFormat>
   1ccb0:	eb001cb2 	bl	23f80 <DeviceNameServiceGet>
   1ccb4:	e1a07000 	mov	r7, r0
   1ccb8:	e28d0004 	add	r0, sp, #4
   1ccbc:	eb002730 	bl	26984 <StringGet>
   1ccc0:	e3a02000 	mov	r2, #0
   1ccc4:	e1a01000 	mov	r1, r0
   1ccc8:	e1a00007 	mov	r0, r7
   1cccc:	e5957000 	ldr	r7, [r5]
   1ccd0:	eb001c6f 	bl	23e94 <DeviceNameServiceGetDevice>
   1ccd4:	e2843f7b 	add	r3, r4, #492	; 0x1ec
   1ccd8:	e2833002 	add	r3, r3, #2
   1ccdc:	e7870103 	str	r0, [r7, r3, lsl #2]
   1cce0:	e28d0004 	add	r0, sp, #4
   1cce4:	eb002715 	bl	26940 <_String>
   1cce8:	e3560004 	cmp	r6, #4
   1ccec:	e1a04006 	mov	r4, r6
   1ccf0:	1affffe7 	bne	1cc94 <USPiInitialize+0x15c>
   1ccf4:	e1a01006 	mov	r1, r6
   1ccf8:	e59f2098 	ldr	r2, [pc, #152]	; 1cd98 <USPiInitialize+0x260>
   1ccfc:	e59f0068 	ldr	r0, [pc, #104]	; 1cd6c <USPiInitialize+0x234>
   1cd00:	ebffb2ab 	bl	97b4 <LogWrite>
   1cd04:	e3a00001 	mov	r0, #1
   1cd08:	e28dd010 	add	sp, sp, #16
   1cd0c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   1cd10:	e59f2084 	ldr	r2, [pc, #132]	; 1cd9c <USPiInitialize+0x264>
   1cd14:	e3a01001 	mov	r1, #1
   1cd18:	e59f004c 	ldr	r0, [pc, #76]	; 1cd6c <USPiInitialize+0x234>
   1cd1c:	ebffb2a4 	bl	97b4 <LogWrite>
   1cd20:	e5950000 	ldr	r0, [r5]
   1cd24:	e2800004 	add	r0, r0, #4
   1cd28:	eb000357 	bl	1da8c <_DWHCIDevice>
   1cd2c:	e5950000 	ldr	r0, [r5]
   1cd30:	eb001bec 	bl	23ce8 <_DeviceNameService>
   1cd34:	e5950000 	ldr	r0, [r5]
   1cd38:	ebffea92 	bl	17788 <free>
   1cd3c:	e1a00006 	mov	r0, r6
   1cd40:	e5856000 	str	r6, [r5]
   1cd44:	e28dd010 	add	sp, sp, #16
   1cd48:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   1cd4c:	e59f004c 	ldr	r0, [pc, #76]	; 1cda0 <USPiInitialize+0x268>
   1cd50:	e3a02026 	mov	r2, #38	; 0x26
   1cd54:	e59f1014 	ldr	r1, [pc, #20]	; 1cd70 <USPiInitialize+0x238>
   1cd58:	ebffeab0 	bl	17820 <uspi_assertion_failed>
   1cd5c:	e5950000 	ldr	r0, [r5]
   1cd60:	eaffff87 	b	1cb84 <USPiInitialize+0x4c>
   1cd64:	00080afc 	.word	0x00080afc
   1cd68:	00030568 	.word	0x00030568
   1cd6c:	00030560 	.word	0x00030560
   1cd70:	00030588 	.word	0x00030588
   1cd74:	00030598 	.word	0x00030598
   1cd78:	000007cc 	.word	0x000007cc
   1cd7c:	000305e8 	.word	0x000305e8
   1cd80:	000305f0 	.word	0x000305f0
   1cd84:	000305f8 	.word	0x000305f8
   1cd88:	00030600 	.word	0x00030600
   1cd8c:	00030608 	.word	0x00030608
   1cd90:	00030610 	.word	0x00030610
   1cd94:	00030618 	.word	0x00030618
   1cd98:	00030620 	.word	0x00030620
   1cd9c:	000305b8 	.word	0x000305b8
   1cda0:	000305a8 	.word	0x000305a8

0001cda4 <USPiKeyboardAvailable>:
   1cda4:	e92d4010 	push	{r4, lr}
   1cda8:	e59f4030 	ldr	r4, [pc, #48]	; 1cde0 <USPiKeyboardAvailable+0x3c>
   1cdac:	e5943000 	ldr	r3, [r4]
   1cdb0:	e3530000 	cmp	r3, #0
   1cdb4:	0a000003 	beq	1cdc8 <USPiKeyboardAvailable+0x24>
   1cdb8:	e5930798 	ldr	r0, [r3, #1944]	; 0x798
   1cdbc:	e2900000 	adds	r0, r0, #0
   1cdc0:	13a00001 	movne	r0, #1
   1cdc4:	e8bd8010 	pop	{r4, pc}
   1cdc8:	e3a02062 	mov	r2, #98	; 0x62
   1cdcc:	e59f1010 	ldr	r1, [pc, #16]	; 1cde4 <USPiKeyboardAvailable+0x40>
   1cdd0:	e59f0010 	ldr	r0, [pc, #16]	; 1cde8 <USPiKeyboardAvailable+0x44>
   1cdd4:	ebffea91 	bl	17820 <uspi_assertion_failed>
   1cdd8:	e5943000 	ldr	r3, [r4]
   1cddc:	eafffff5 	b	1cdb8 <USPiKeyboardAvailable+0x14>
   1cde0:	00080afc 	.word	0x00080afc
   1cde4:	00030588 	.word	0x00030588
   1cde8:	000305a8 	.word	0x000305a8

0001cdec <USPiKeyboardRegisterKeyPressedHandler>:
   1cdec:	e92d4070 	push	{r4, r5, r6, lr}
   1cdf0:	e59f4060 	ldr	r4, [pc, #96]	; 1ce58 <USPiKeyboardRegisterKeyPressedHandler+0x6c>
   1cdf4:	e1a05000 	mov	r5, r0
   1cdf8:	e5943000 	ldr	r3, [r4]
   1cdfc:	e3530000 	cmp	r3, #0
   1ce00:	0a00000e 	beq	1ce40 <USPiKeyboardRegisterKeyPressedHandler+0x54>
   1ce04:	e5930798 	ldr	r0, [r3, #1944]	; 0x798
   1ce08:	e3500000 	cmp	r0, #0
   1ce0c:	0a000002 	beq	1ce1c <USPiKeyboardRegisterKeyPressedHandler+0x30>
   1ce10:	e1a01005 	mov	r1, r5
   1ce14:	e8bd4070 	pop	{r4, r5, r6, lr}
   1ce18:	ea003008 	b	28e40 <USBKeyboardDeviceRegisterKeyPressedHandler>
   1ce1c:	e59f1038 	ldr	r1, [pc, #56]	; 1ce5c <USPiKeyboardRegisterKeyPressedHandler+0x70>
   1ce20:	e59f0038 	ldr	r0, [pc, #56]	; 1ce60 <USPiKeyboardRegisterKeyPressedHandler+0x74>
   1ce24:	e3a02069 	mov	r2, #105	; 0x69
   1ce28:	ebffea7c 	bl	17820 <uspi_assertion_failed>
   1ce2c:	e5943000 	ldr	r3, [r4]
   1ce30:	e1a01005 	mov	r1, r5
   1ce34:	e8bd4070 	pop	{r4, r5, r6, lr}
   1ce38:	e5930798 	ldr	r0, [r3, #1944]	; 0x798
   1ce3c:	ea002fff 	b	28e40 <USBKeyboardDeviceRegisterKeyPressedHandler>
   1ce40:	e3a02068 	mov	r2, #104	; 0x68
   1ce44:	e59f1010 	ldr	r1, [pc, #16]	; 1ce5c <USPiKeyboardRegisterKeyPressedHandler+0x70>
   1ce48:	e59f0014 	ldr	r0, [pc, #20]	; 1ce64 <USPiKeyboardRegisterKeyPressedHandler+0x78>
   1ce4c:	ebffea73 	bl	17820 <uspi_assertion_failed>
   1ce50:	e5943000 	ldr	r3, [r4]
   1ce54:	eaffffea 	b	1ce04 <USPiKeyboardRegisterKeyPressedHandler+0x18>
   1ce58:	00080afc 	.word	0x00080afc
   1ce5c:	00030588 	.word	0x00030588
   1ce60:	00030648 	.word	0x00030648
   1ce64:	000305a8 	.word	0x000305a8

0001ce68 <USPiKeyboardRegisterShutdownHandler>:
   1ce68:	e92d4070 	push	{r4, r5, r6, lr}
   1ce6c:	e59f4060 	ldr	r4, [pc, #96]	; 1ced4 <USPiKeyboardRegisterShutdownHandler+0x6c>
   1ce70:	e1a05000 	mov	r5, r0
   1ce74:	e5943000 	ldr	r3, [r4]
   1ce78:	e3530000 	cmp	r3, #0
   1ce7c:	0a00000e 	beq	1cebc <USPiKeyboardRegisterShutdownHandler+0x54>
   1ce80:	e5930798 	ldr	r0, [r3, #1944]	; 0x798
   1ce84:	e3500000 	cmp	r0, #0
   1ce88:	0a000002 	beq	1ce98 <USPiKeyboardRegisterShutdownHandler+0x30>
   1ce8c:	e1a01005 	mov	r1, r5
   1ce90:	e8bd4070 	pop	{r4, r5, r6, lr}
   1ce94:	ea003015 	b	28ef0 <USBKeyboardDeviceRegisterShutdownHandler>
   1ce98:	e59f1038 	ldr	r1, [pc, #56]	; 1ced8 <USPiKeyboardRegisterShutdownHandler+0x70>
   1ce9c:	e59f0038 	ldr	r0, [pc, #56]	; 1cedc <USPiKeyboardRegisterShutdownHandler+0x74>
   1cea0:	e3a02070 	mov	r2, #112	; 0x70
   1cea4:	ebffea5d 	bl	17820 <uspi_assertion_failed>
   1cea8:	e5943000 	ldr	r3, [r4]
   1ceac:	e1a01005 	mov	r1, r5
   1ceb0:	e8bd4070 	pop	{r4, r5, r6, lr}
   1ceb4:	e5930798 	ldr	r0, [r3, #1944]	; 0x798
   1ceb8:	ea00300c 	b	28ef0 <USBKeyboardDeviceRegisterShutdownHandler>
   1cebc:	e3a0206f 	mov	r2, #111	; 0x6f
   1cec0:	e59f1010 	ldr	r1, [pc, #16]	; 1ced8 <USPiKeyboardRegisterShutdownHandler+0x70>
   1cec4:	e59f0014 	ldr	r0, [pc, #20]	; 1cee0 <USPiKeyboardRegisterShutdownHandler+0x78>
   1cec8:	ebffea54 	bl	17820 <uspi_assertion_failed>
   1cecc:	e5943000 	ldr	r3, [r4]
   1ced0:	eaffffea 	b	1ce80 <USPiKeyboardRegisterShutdownHandler+0x18>
   1ced4:	00080afc 	.word	0x00080afc
   1ced8:	00030588 	.word	0x00030588
   1cedc:	00030648 	.word	0x00030648
   1cee0:	000305a8 	.word	0x000305a8

0001cee4 <USPiKeyboardUpdateLEDs>:
   1cee4:	e92d4010 	push	{r4, lr}
   1cee8:	e59f4054 	ldr	r4, [pc, #84]	; 1cf44 <USPiKeyboardUpdateLEDs+0x60>
   1ceec:	e5943000 	ldr	r3, [r4]
   1cef0:	e3530000 	cmp	r3, #0
   1cef4:	0a00000c 	beq	1cf2c <USPiKeyboardUpdateLEDs+0x48>
   1cef8:	e5930798 	ldr	r0, [r3, #1944]	; 0x798
   1cefc:	e3500000 	cmp	r0, #0
   1cf00:	0a000001 	beq	1cf0c <USPiKeyboardUpdateLEDs+0x28>
   1cf04:	e8bd4010 	pop	{r4, lr}
   1cf08:	ea0030dc 	b	29280 <USBKeyboardDeviceUpdateLEDs>
   1cf0c:	e59f0034 	ldr	r0, [pc, #52]	; 1cf48 <USPiKeyboardUpdateLEDs+0x64>
   1cf10:	e3a02077 	mov	r2, #119	; 0x77
   1cf14:	e59f1030 	ldr	r1, [pc, #48]	; 1cf4c <USPiKeyboardUpdateLEDs+0x68>
   1cf18:	ebffea40 	bl	17820 <uspi_assertion_failed>
   1cf1c:	e5943000 	ldr	r3, [r4]
   1cf20:	e8bd4010 	pop	{r4, lr}
   1cf24:	e5930798 	ldr	r0, [r3, #1944]	; 0x798
   1cf28:	ea0030d4 	b	29280 <USBKeyboardDeviceUpdateLEDs>
   1cf2c:	e3a02076 	mov	r2, #118	; 0x76
   1cf30:	e59f1014 	ldr	r1, [pc, #20]	; 1cf4c <USPiKeyboardUpdateLEDs+0x68>
   1cf34:	e59f0014 	ldr	r0, [pc, #20]	; 1cf50 <USPiKeyboardUpdateLEDs+0x6c>
   1cf38:	ebffea38 	bl	17820 <uspi_assertion_failed>
   1cf3c:	e5943000 	ldr	r3, [r4]
   1cf40:	eaffffec 	b	1cef8 <USPiKeyboardUpdateLEDs+0x14>
   1cf44:	00080afc 	.word	0x00080afc
   1cf48:	00030648 	.word	0x00030648
   1cf4c:	00030588 	.word	0x00030588
   1cf50:	000305a8 	.word	0x000305a8

0001cf54 <USPiKeyboardRegisterKeyStatusHandlerRaw>:
   1cf54:	e92d4070 	push	{r4, r5, r6, lr}
   1cf58:	e59f4060 	ldr	r4, [pc, #96]	; 1cfc0 <USPiKeyboardRegisterKeyStatusHandlerRaw+0x6c>
   1cf5c:	e1a05000 	mov	r5, r0
   1cf60:	e5943000 	ldr	r3, [r4]
   1cf64:	e3530000 	cmp	r3, #0
   1cf68:	0a00000e 	beq	1cfa8 <USPiKeyboardRegisterKeyStatusHandlerRaw+0x54>
   1cf6c:	e5930798 	ldr	r0, [r3, #1944]	; 0x798
   1cf70:	e3500000 	cmp	r0, #0
   1cf74:	0a000002 	beq	1cf84 <USPiKeyboardRegisterKeyStatusHandlerRaw+0x30>
   1cf78:	e1a01005 	mov	r1, r5
   1cf7c:	e8bd4070 	pop	{r4, r5, r6, lr}
   1cf80:	ea002ff0 	b	28f48 <USBKeyboardDeviceRegisterKeyStatusHandlerRaw>
   1cf84:	e59f1038 	ldr	r1, [pc, #56]	; 1cfc4 <USPiKeyboardRegisterKeyStatusHandlerRaw+0x70>
   1cf88:	e59f0038 	ldr	r0, [pc, #56]	; 1cfc8 <USPiKeyboardRegisterKeyStatusHandlerRaw+0x74>
   1cf8c:	e3a0207e 	mov	r2, #126	; 0x7e
   1cf90:	ebffea22 	bl	17820 <uspi_assertion_failed>
   1cf94:	e5943000 	ldr	r3, [r4]
   1cf98:	e1a01005 	mov	r1, r5
   1cf9c:	e8bd4070 	pop	{r4, r5, r6, lr}
   1cfa0:	e5930798 	ldr	r0, [r3, #1944]	; 0x798
   1cfa4:	ea002fe7 	b	28f48 <USBKeyboardDeviceRegisterKeyStatusHandlerRaw>
   1cfa8:	e3a0207d 	mov	r2, #125	; 0x7d
   1cfac:	e59f1010 	ldr	r1, [pc, #16]	; 1cfc4 <USPiKeyboardRegisterKeyStatusHandlerRaw+0x70>
   1cfb0:	e59f0014 	ldr	r0, [pc, #20]	; 1cfcc <USPiKeyboardRegisterKeyStatusHandlerRaw+0x78>
   1cfb4:	ebffea19 	bl	17820 <uspi_assertion_failed>
   1cfb8:	e5943000 	ldr	r3, [r4]
   1cfbc:	eaffffea 	b	1cf6c <USPiKeyboardRegisterKeyStatusHandlerRaw+0x18>
   1cfc0:	00080afc 	.word	0x00080afc
   1cfc4:	00030588 	.word	0x00030588
   1cfc8:	00030648 	.word	0x00030648
   1cfcc:	000305a8 	.word	0x000305a8

0001cfd0 <USPiKeyboardSetLEDs>:
   1cfd0:	e92d4070 	push	{r4, r5, r6, lr}
   1cfd4:	e59f4060 	ldr	r4, [pc, #96]	; 1d03c <USPiKeyboardSetLEDs+0x6c>
   1cfd8:	e1a05000 	mov	r5, r0
   1cfdc:	e5943000 	ldr	r3, [r4]
   1cfe0:	e3530000 	cmp	r3, #0
   1cfe4:	0a00000e 	beq	1d024 <USPiKeyboardSetLEDs+0x54>
   1cfe8:	e5930798 	ldr	r0, [r3, #1944]	; 0x798
   1cfec:	e3500000 	cmp	r0, #0
   1cff0:	0a000002 	beq	1d000 <USPiKeyboardSetLEDs+0x30>
   1cff4:	e1a01005 	mov	r1, r5
   1cff8:	e8bd4070 	pop	{r4, r5, r6, lr}
   1cffc:	ea002fe7 	b	28fa0 <USBKeyboardDeviceSetLEDs>
   1d000:	e59f1038 	ldr	r1, [pc, #56]	; 1d040 <USPiKeyboardSetLEDs+0x70>
   1d004:	e59f0038 	ldr	r0, [pc, #56]	; 1d044 <USPiKeyboardSetLEDs+0x74>
   1d008:	e3a02085 	mov	r2, #133	; 0x85
   1d00c:	ebffea03 	bl	17820 <uspi_assertion_failed>
   1d010:	e5943000 	ldr	r3, [r4]
   1d014:	e1a01005 	mov	r1, r5
   1d018:	e8bd4070 	pop	{r4, r5, r6, lr}
   1d01c:	e5930798 	ldr	r0, [r3, #1944]	; 0x798
   1d020:	ea002fde 	b	28fa0 <USBKeyboardDeviceSetLEDs>
   1d024:	e3a02084 	mov	r2, #132	; 0x84
   1d028:	e59f1010 	ldr	r1, [pc, #16]	; 1d040 <USPiKeyboardSetLEDs+0x70>
   1d02c:	e59f0014 	ldr	r0, [pc, #20]	; 1d048 <USPiKeyboardSetLEDs+0x78>
   1d030:	ebffe9fa 	bl	17820 <uspi_assertion_failed>
   1d034:	e5943000 	ldr	r3, [r4]
   1d038:	eaffffea 	b	1cfe8 <USPiKeyboardSetLEDs+0x18>
   1d03c:	00080afc 	.word	0x00080afc
   1d040:	00030588 	.word	0x00030588
   1d044:	00030648 	.word	0x00030648
   1d048:	000305a8 	.word	0x000305a8

0001d04c <USPiMouseAvailable>:
   1d04c:	e92d4010 	push	{r4, lr}
   1d050:	e59f4030 	ldr	r4, [pc, #48]	; 1d088 <USPiMouseAvailable+0x3c>
   1d054:	e5943000 	ldr	r3, [r4]
   1d058:	e3530000 	cmp	r3, #0
   1d05c:	0a000003 	beq	1d070 <USPiMouseAvailable+0x24>
   1d060:	e593079c 	ldr	r0, [r3, #1948]	; 0x79c
   1d064:	e2900000 	adds	r0, r0, #0
   1d068:	13a00001 	movne	r0, #1
   1d06c:	e8bd8010 	pop	{r4, pc}
   1d070:	e3a0208b 	mov	r2, #139	; 0x8b
   1d074:	e59f1010 	ldr	r1, [pc, #16]	; 1d08c <USPiMouseAvailable+0x40>
   1d078:	e59f0010 	ldr	r0, [pc, #16]	; 1d090 <USPiMouseAvailable+0x44>
   1d07c:	ebffe9e7 	bl	17820 <uspi_assertion_failed>
   1d080:	e5943000 	ldr	r3, [r4]
   1d084:	eafffff5 	b	1d060 <USPiMouseAvailable+0x14>
   1d088:	00080afc 	.word	0x00080afc
   1d08c:	00030588 	.word	0x00030588
   1d090:	000305a8 	.word	0x000305a8

0001d094 <USPiMouseRegisterStatusHandler>:
   1d094:	e92d4070 	push	{r4, r5, r6, lr}
   1d098:	e59f4060 	ldr	r4, [pc, #96]	; 1d100 <USPiMouseRegisterStatusHandler+0x6c>
   1d09c:	e1a05000 	mov	r5, r0
   1d0a0:	e5943000 	ldr	r3, [r4]
   1d0a4:	e3530000 	cmp	r3, #0
   1d0a8:	0a00000e 	beq	1d0e8 <USPiMouseRegisterStatusHandler+0x54>
   1d0ac:	e593079c 	ldr	r0, [r3, #1948]	; 0x79c
   1d0b0:	e3500000 	cmp	r0, #0
   1d0b4:	0a000002 	beq	1d0c4 <USPiMouseRegisterStatusHandler+0x30>
   1d0b8:	e1a01005 	mov	r1, r5
   1d0bc:	e8bd4070 	pop	{r4, r5, r6, lr}
   1d0c0:	ea003292 	b	29b10 <USBMouseDeviceRegisterStatusHandler>
   1d0c4:	e59f1038 	ldr	r1, [pc, #56]	; 1d104 <USPiMouseRegisterStatusHandler+0x70>
   1d0c8:	e59f0038 	ldr	r0, [pc, #56]	; 1d108 <USPiMouseRegisterStatusHandler+0x74>
   1d0cc:	e3a02092 	mov	r2, #146	; 0x92
   1d0d0:	ebffe9d2 	bl	17820 <uspi_assertion_failed>
   1d0d4:	e5943000 	ldr	r3, [r4]
   1d0d8:	e1a01005 	mov	r1, r5
   1d0dc:	e8bd4070 	pop	{r4, r5, r6, lr}
   1d0e0:	e593079c 	ldr	r0, [r3, #1948]	; 0x79c
   1d0e4:	ea003289 	b	29b10 <USBMouseDeviceRegisterStatusHandler>
   1d0e8:	e3a02091 	mov	r2, #145	; 0x91
   1d0ec:	e59f1010 	ldr	r1, [pc, #16]	; 1d104 <USPiMouseRegisterStatusHandler+0x70>
   1d0f0:	e59f0014 	ldr	r0, [pc, #20]	; 1d10c <USPiMouseRegisterStatusHandler+0x78>
   1d0f4:	ebffe9c9 	bl	17820 <uspi_assertion_failed>
   1d0f8:	e5943000 	ldr	r3, [r4]
   1d0fc:	eaffffea 	b	1d0ac <USPiMouseRegisterStatusHandler+0x18>
   1d100:	00080afc 	.word	0x00080afc
   1d104:	00030588 	.word	0x00030588
   1d108:	00030660 	.word	0x00030660
   1d10c:	000305a8 	.word	0x000305a8

0001d110 <USPiMassStorageDeviceAvailable>:
   1d110:	e92d4010 	push	{r4, lr}
   1d114:	e59f4044 	ldr	r4, [pc, #68]	; 1d160 <USPiMassStorageDeviceAvailable+0x50>
   1d118:	e5943000 	ldr	r3, [r4]
   1d11c:	e3530000 	cmp	r3, #0
   1d120:	0a000008 	beq	1d148 <USPiMassStorageDeviceAvailable+0x38>
   1d124:	e3a00000 	mov	r0, #0
   1d128:	e2833e7a 	add	r3, r3, #1952	; 0x7a0
   1d12c:	e4932004 	ldr	r2, [r3], #4
   1d130:	e3520000 	cmp	r2, #0
   1d134:	08bd8010 	popeq	{r4, pc}
   1d138:	e2800001 	add	r0, r0, #1
   1d13c:	e3500004 	cmp	r0, #4
   1d140:	1afffff9 	bne	1d12c <USPiMassStorageDeviceAvailable+0x1c>
   1d144:	e8bd8010 	pop	{r4, pc}
   1d148:	e3a02098 	mov	r2, #152	; 0x98
   1d14c:	e59f1010 	ldr	r1, [pc, #16]	; 1d164 <USPiMassStorageDeviceAvailable+0x54>
   1d150:	e59f0010 	ldr	r0, [pc, #16]	; 1d168 <USPiMassStorageDeviceAvailable+0x58>
   1d154:	ebffe9b1 	bl	17820 <uspi_assertion_failed>
   1d158:	e5943000 	ldr	r3, [r4]
   1d15c:	eafffff0 	b	1d124 <USPiMassStorageDeviceAvailable+0x14>
   1d160:	00080afc 	.word	0x00080afc
   1d164:	00030588 	.word	0x00030588
   1d168:	000305a8 	.word	0x000305a8

0001d16c <USPiMassStorageDeviceRead>:
   1d16c:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1d170:	e59f5084 	ldr	r5, [pc, #132]	; 1d1fc <USPiMassStorageDeviceRead+0x90>
   1d174:	e1a07001 	mov	r7, r1
   1d178:	e5951000 	ldr	r1, [r5]
   1d17c:	e1a06000 	mov	r6, r0
   1d180:	e3510000 	cmp	r1, #0
   1d184:	e1a08002 	mov	r8, r2
   1d188:	e1a09003 	mov	r9, r3
   1d18c:	e59d4020 	ldr	r4, [sp, #32]
   1d190:	0a000012 	beq	1d1e0 <USPiMassStorageDeviceRead+0x74>
   1d194:	e3540003 	cmp	r4, #3
   1d198:	8a000015 	bhi	1d1f4 <USPiMassStorageDeviceRead+0x88>
   1d19c:	e5953000 	ldr	r3, [r5]
   1d1a0:	e2844f7a 	add	r4, r4, #488	; 0x1e8
   1d1a4:	e7930104 	ldr	r0, [r3, r4, lsl #2]
   1d1a8:	e3500000 	cmp	r0, #0
   1d1ac:	0a000010 	beq	1d1f4 <USPiMassStorageDeviceRead+0x88>
   1d1b0:	e1a02006 	mov	r2, r6
   1d1b4:	e1a03007 	mov	r3, r7
   1d1b8:	eb00297f 	bl	277bc <USBBulkOnlyMassStorageDeviceSeek>
   1d1bc:	e1510007 	cmp	r1, r7
   1d1c0:	01500006 	cmpeq	r0, r6
   1d1c4:	1a00000a 	bne	1d1f4 <USPiMassStorageDeviceRead+0x88>
   1d1c8:	e5953000 	ldr	r3, [r5]
   1d1cc:	e1a02009 	mov	r2, r9
   1d1d0:	e7930104 	ldr	r0, [r3, r4, lsl #2]
   1d1d4:	e1a01008 	mov	r1, r8
   1d1d8:	e8bd47f0 	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   1d1dc:	ea002c4b 	b	28310 <USBBulkOnlyMassStorageDeviceRead>
   1d1e0:	e3a020a8 	mov	r2, #168	; 0xa8
   1d1e4:	e59f1014 	ldr	r1, [pc, #20]	; 1d200 <USPiMassStorageDeviceRead+0x94>
   1d1e8:	e59f0014 	ldr	r0, [pc, #20]	; 1d204 <USPiMassStorageDeviceRead+0x98>
   1d1ec:	ebffe98b 	bl	17820 <uspi_assertion_failed>
   1d1f0:	eaffffe7 	b	1d194 <USPiMassStorageDeviceRead+0x28>
   1d1f4:	e3e00000 	mvn	r0, #0
   1d1f8:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1d1fc:	00080afc 	.word	0x00080afc
   1d200:	00030588 	.word	0x00030588
   1d204:	000305a8 	.word	0x000305a8

0001d208 <USPiMassStorageDeviceWrite>:
   1d208:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1d20c:	e59f5084 	ldr	r5, [pc, #132]	; 1d298 <USPiMassStorageDeviceWrite+0x90>
   1d210:	e1a07001 	mov	r7, r1
   1d214:	e5951000 	ldr	r1, [r5]
   1d218:	e1a06000 	mov	r6, r0
   1d21c:	e3510000 	cmp	r1, #0
   1d220:	e1a08002 	mov	r8, r2
   1d224:	e1a09003 	mov	r9, r3
   1d228:	e59d4020 	ldr	r4, [sp, #32]
   1d22c:	0a000012 	beq	1d27c <USPiMassStorageDeviceWrite+0x74>
   1d230:	e3540003 	cmp	r4, #3
   1d234:	8a000015 	bhi	1d290 <USPiMassStorageDeviceWrite+0x88>
   1d238:	e5953000 	ldr	r3, [r5]
   1d23c:	e2844f7a 	add	r4, r4, #488	; 0x1e8
   1d240:	e7930104 	ldr	r0, [r3, r4, lsl #2]
   1d244:	e3500000 	cmp	r0, #0
   1d248:	0a000010 	beq	1d290 <USPiMassStorageDeviceWrite+0x88>
   1d24c:	e1a02006 	mov	r2, r6
   1d250:	e1a03007 	mov	r3, r7
   1d254:	eb002958 	bl	277bc <USBBulkOnlyMassStorageDeviceSeek>
   1d258:	e1510007 	cmp	r1, r7
   1d25c:	01500006 	cmpeq	r0, r6
   1d260:	1a00000a 	bne	1d290 <USPiMassStorageDeviceWrite+0x88>
   1d264:	e5953000 	ldr	r3, [r5]
   1d268:	e1a02009 	mov	r2, r9
   1d26c:	e7930104 	ldr	r0, [r3, r4, lsl #2]
   1d270:	e1a01008 	mov	r1, r8
   1d274:	e8bd47f0 	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   1d278:	ea002c47 	b	2839c <USBBulkOnlyMassStorageDeviceWrite>
   1d27c:	e3a020ba 	mov	r2, #186	; 0xba
   1d280:	e59f1014 	ldr	r1, [pc, #20]	; 1d29c <USPiMassStorageDeviceWrite+0x94>
   1d284:	e59f0014 	ldr	r0, [pc, #20]	; 1d2a0 <USPiMassStorageDeviceWrite+0x98>
   1d288:	ebffe964 	bl	17820 <uspi_assertion_failed>
   1d28c:	eaffffe7 	b	1d230 <USPiMassStorageDeviceWrite+0x28>
   1d290:	e3e00000 	mvn	r0, #0
   1d294:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1d298:	00080afc 	.word	0x00080afc
   1d29c:	00030588 	.word	0x00030588
   1d2a0:	000305a8 	.word	0x000305a8

0001d2a4 <USPiMassStorageDeviceGetCapacity>:
   1d2a4:	e92d4070 	push	{r4, r5, r6, lr}
   1d2a8:	e59f504c 	ldr	r5, [pc, #76]	; 1d2fc <USPiMassStorageDeviceGetCapacity+0x58>
   1d2ac:	e1a04000 	mov	r4, r0
   1d2b0:	e5953000 	ldr	r3, [r5]
   1d2b4:	e3530000 	cmp	r3, #0
   1d2b8:	0a00000a 	beq	1d2e8 <USPiMassStorageDeviceGetCapacity+0x44>
   1d2bc:	e3540003 	cmp	r4, #3
   1d2c0:	8a000006 	bhi	1d2e0 <USPiMassStorageDeviceGetCapacity+0x3c>
   1d2c4:	e5953000 	ldr	r3, [r5]
   1d2c8:	e2844f7a 	add	r4, r4, #488	; 0x1e8
   1d2cc:	e7930104 	ldr	r0, [r3, r4, lsl #2]
   1d2d0:	e3500000 	cmp	r0, #0
   1d2d4:	0a000001 	beq	1d2e0 <USPiMassStorageDeviceGetCapacity+0x3c>
   1d2d8:	e8bd4070 	pop	{r4, r5, r6, lr}
   1d2dc:	ea002947 	b	27800 <USBBulkOnlyMassStorageDeviceGetCapacity>
   1d2e0:	e3a00000 	mov	r0, #0
   1d2e4:	e8bd8070 	pop	{r4, r5, r6, pc}
   1d2e8:	e3a020cc 	mov	r2, #204	; 0xcc
   1d2ec:	e59f100c 	ldr	r1, [pc, #12]	; 1d300 <USPiMassStorageDeviceGetCapacity+0x5c>
   1d2f0:	e59f000c 	ldr	r0, [pc, #12]	; 1d304 <USPiMassStorageDeviceGetCapacity+0x60>
   1d2f4:	ebffe949 	bl	17820 <uspi_assertion_failed>
   1d2f8:	eaffffef 	b	1d2bc <USPiMassStorageDeviceGetCapacity+0x18>
   1d2fc:	00080afc 	.word	0x00080afc
   1d300:	00030588 	.word	0x00030588
   1d304:	000305a8 	.word	0x000305a8

0001d308 <USPiEthernetAvailable>:
   1d308:	e92d4010 	push	{r4, lr}
   1d30c:	e59f4044 	ldr	r4, [pc, #68]	; 1d358 <USPiEthernetAvailable+0x50>
   1d310:	e5943000 	ldr	r3, [r4]
   1d314:	e3530000 	cmp	r3, #0
   1d318:	0a000008 	beq	1d340 <USPiEthernetAvailable+0x38>
   1d31c:	e59327b0 	ldr	r2, [r3, #1968]	; 0x7b0
   1d320:	e3520000 	cmp	r2, #0
   1d324:	0a000001 	beq	1d330 <USPiEthernetAvailable+0x28>
   1d328:	e3a00001 	mov	r0, #1
   1d32c:	e8bd8010 	pop	{r4, pc}
   1d330:	e59307b4 	ldr	r0, [r3, #1972]	; 0x7b4
   1d334:	e2900000 	adds	r0, r0, #0
   1d338:	13a00001 	movne	r0, #1
   1d33c:	e8bd8010 	pop	{r4, pc}
   1d340:	e3a020d9 	mov	r2, #217	; 0xd9
   1d344:	e59f1010 	ldr	r1, [pc, #16]	; 1d35c <USPiEthernetAvailable+0x54>
   1d348:	e59f0010 	ldr	r0, [pc, #16]	; 1d360 <USPiEthernetAvailable+0x58>
   1d34c:	ebffe933 	bl	17820 <uspi_assertion_failed>
   1d350:	e5943000 	ldr	r3, [r4]
   1d354:	eafffff0 	b	1d31c <USPiEthernetAvailable+0x14>
   1d358:	00080afc 	.word	0x00080afc
   1d35c:	00030588 	.word	0x00030588
   1d360:	000305a8 	.word	0x000305a8

0001d364 <USPiGetMACAddress>:
   1d364:	e92d4070 	push	{r4, r5, r6, lr}
   1d368:	e59f50a8 	ldr	r5, [pc, #168]	; 1d418 <USPiGetMACAddress+0xb4>
   1d36c:	e1a04000 	mov	r4, r0
   1d370:	e5953000 	ldr	r3, [r5]
   1d374:	e3530000 	cmp	r3, #0
   1d378:	0a000019 	beq	1d3e4 <USPiGetMACAddress+0x80>
   1d37c:	e59307b4 	ldr	r0, [r3, #1972]	; 0x7b4
   1d380:	e3500000 	cmp	r0, #0
   1d384:	0a000007 	beq	1d3a8 <USPiGetMACAddress+0x44>
   1d388:	eb0021c1 	bl	25a94 <LAN7800DeviceGetMACAddress>
   1d38c:	e3540000 	cmp	r4, #0
   1d390:	e1a05000 	mov	r5, r0
   1d394:	0a00000a 	beq	1d3c4 <USPiGetMACAddress+0x60>
   1d398:	e1a01004 	mov	r1, r4
   1d39c:	e1a00005 	mov	r0, r5
   1d3a0:	e8bd4070 	pop	{r4, r5, r6, lr}
   1d3a4:	ea001b8a 	b	241d4 <MACAddressCopyTo>
   1d3a8:	e59307b0 	ldr	r0, [r3, #1968]	; 0x7b0
   1d3ac:	e3500000 	cmp	r0, #0
   1d3b0:	0a000011 	beq	1d3fc <USPiGetMACAddress+0x98>
   1d3b4:	eb001e69 	bl	24d60 <SMSC951xDeviceGetMACAddress>
   1d3b8:	e3540000 	cmp	r4, #0
   1d3bc:	e1a05000 	mov	r5, r0
   1d3c0:	1afffff4 	bne	1d398 <USPiGetMACAddress+0x34>
   1d3c4:	e59f1050 	ldr	r1, [pc, #80]	; 1d41c <USPiGetMACAddress+0xb8>
   1d3c8:	e59f0050 	ldr	r0, [pc, #80]	; 1d420 <USPiGetMACAddress+0xbc>
   1d3cc:	e3a020ec 	mov	r2, #236	; 0xec
   1d3d0:	ebffe912 	bl	17820 <uspi_assertion_failed>
   1d3d4:	e1a01004 	mov	r1, r4
   1d3d8:	e1a00005 	mov	r0, r5
   1d3dc:	e8bd4070 	pop	{r4, r5, r6, lr}
   1d3e0:	ea001b7b 	b	241d4 <MACAddressCopyTo>
   1d3e4:	e3a020df 	mov	r2, #223	; 0xdf
   1d3e8:	e59f102c 	ldr	r1, [pc, #44]	; 1d41c <USPiGetMACAddress+0xb8>
   1d3ec:	e59f0030 	ldr	r0, [pc, #48]	; 1d424 <USPiGetMACAddress+0xc0>
   1d3f0:	ebffe90a 	bl	17820 <uspi_assertion_failed>
   1d3f4:	e5953000 	ldr	r3, [r5]
   1d3f8:	eaffffdf 	b	1d37c <USPiGetMACAddress+0x18>
   1d3fc:	e59f0024 	ldr	r0, [pc, #36]	; 1d428 <USPiGetMACAddress+0xc4>
   1d400:	e3a020e8 	mov	r2, #232	; 0xe8
   1d404:	e59f1010 	ldr	r1, [pc, #16]	; 1d41c <USPiGetMACAddress+0xb8>
   1d408:	ebffe904 	bl	17820 <uspi_assertion_failed>
   1d40c:	e5953000 	ldr	r3, [r5]
   1d410:	e59307b0 	ldr	r0, [r3, #1968]	; 0x7b0
   1d414:	eaffffe6 	b	1d3b4 <USPiGetMACAddress+0x50>
   1d418:	00080afc 	.word	0x00080afc
   1d41c:	00030588 	.word	0x00030588
   1d420:	0003227c 	.word	0x0003227c
   1d424:	000305a8 	.word	0x000305a8
   1d428:	0003067c 	.word	0x0003067c

0001d42c <USPiEthernetIsLinkUp>:
   1d42c:	e92d4010 	push	{r4, lr}
   1d430:	e59f4074 	ldr	r4, [pc, #116]	; 1d4ac <USPiEthernetIsLinkUp+0x80>
   1d434:	e5943000 	ldr	r3, [r4]
   1d438:	e3530000 	cmp	r3, #0
   1d43c:	0a000014 	beq	1d494 <USPiEthernetIsLinkUp+0x68>
   1d440:	e59307b4 	ldr	r0, [r3, #1972]	; 0x7b4
   1d444:	e3500000 	cmp	r0, #0
   1d448:	1a000006 	bne	1d468 <USPiEthernetIsLinkUp+0x3c>
   1d44c:	e59307b0 	ldr	r0, [r3, #1968]	; 0x7b0
   1d450:	e3500000 	cmp	r0, #0
   1d454:	0a000007 	beq	1d478 <USPiEthernetIsLinkUp+0x4c>
   1d458:	eb00209d 	bl	256d4 <SMSC951xDeviceIsLinkUp>
   1d45c:	e2900000 	adds	r0, r0, #0
   1d460:	13a00001 	movne	r0, #1
   1d464:	e8bd8010 	pop	{r4, pc}
   1d468:	eb002384 	bl	26280 <LAN7800DeviceIsLinkUp>
   1d46c:	e2900000 	adds	r0, r0, #0
   1d470:	13a00001 	movne	r0, #1
   1d474:	e8bd8010 	pop	{r4, pc}
   1d478:	e59f0030 	ldr	r0, [pc, #48]	; 1d4b0 <USPiEthernetIsLinkUp+0x84>
   1d47c:	e3a020f9 	mov	r2, #249	; 0xf9
   1d480:	e59f102c 	ldr	r1, [pc, #44]	; 1d4b4 <USPiEthernetIsLinkUp+0x88>
   1d484:	ebffe8e5 	bl	17820 <uspi_assertion_failed>
   1d488:	e5943000 	ldr	r3, [r4]
   1d48c:	e59307b0 	ldr	r0, [r3, #1968]	; 0x7b0
   1d490:	eafffff0 	b	1d458 <USPiEthernetIsLinkUp+0x2c>
   1d494:	e3a020f2 	mov	r2, #242	; 0xf2
   1d498:	e59f1014 	ldr	r1, [pc, #20]	; 1d4b4 <USPiEthernetIsLinkUp+0x88>
   1d49c:	e59f0014 	ldr	r0, [pc, #20]	; 1d4b8 <USPiEthernetIsLinkUp+0x8c>
   1d4a0:	ebffe8de 	bl	17820 <uspi_assertion_failed>
   1d4a4:	e5943000 	ldr	r3, [r4]
   1d4a8:	eaffffe4 	b	1d440 <USPiEthernetIsLinkUp+0x14>
   1d4ac:	00080afc 	.word	0x00080afc
   1d4b0:	0003067c 	.word	0x0003067c
   1d4b4:	00030588 	.word	0x00030588
   1d4b8:	000305a8 	.word	0x000305a8

0001d4bc <USPiSendFrame>:
   1d4bc:	e92d4070 	push	{r4, r5, r6, lr}
   1d4c0:	e59f408c 	ldr	r4, [pc, #140]	; 1d554 <USPiSendFrame+0x98>
   1d4c4:	e1a05000 	mov	r5, r0
   1d4c8:	e5943000 	ldr	r3, [r4]
   1d4cc:	e1a06001 	mov	r6, r1
   1d4d0:	e3530000 	cmp	r3, #0
   1d4d4:	0a000018 	beq	1d53c <USPiSendFrame+0x80>
   1d4d8:	e59307b4 	ldr	r0, [r3, #1972]	; 0x7b4
   1d4dc:	e3500000 	cmp	r0, #0
   1d4e0:	1a000008 	bne	1d508 <USPiSendFrame+0x4c>
   1d4e4:	e59307b0 	ldr	r0, [r3, #1968]	; 0x7b0
   1d4e8:	e3500000 	cmp	r0, #0
   1d4ec:	0a00000b 	beq	1d520 <USPiSendFrame+0x64>
   1d4f0:	e1a02006 	mov	r2, r6
   1d4f4:	e1a01005 	mov	r1, r5
   1d4f8:	eb001e26 	bl	24d98 <SMSC951xDeviceSendFrame>
   1d4fc:	e2900000 	adds	r0, r0, #0
   1d500:	13a00001 	movne	r0, #1
   1d504:	e8bd8070 	pop	{r4, r5, r6, pc}
   1d508:	e1a02006 	mov	r2, r6
   1d50c:	e1a01005 	mov	r1, r5
   1d510:	eb00216d 	bl	25acc <LAN7800DeviceSendFrame>
   1d514:	e2900000 	adds	r0, r0, #0
   1d518:	13a00001 	movne	r0, #1
   1d51c:	e8bd8070 	pop	{r4, r5, r6, pc}
   1d520:	e59f0030 	ldr	r0, [pc, #48]	; 1d558 <USPiSendFrame+0x9c>
   1d524:	e59f2030 	ldr	r2, [pc, #48]	; 1d55c <USPiSendFrame+0xa0>
   1d528:	e59f1030 	ldr	r1, [pc, #48]	; 1d560 <USPiSendFrame+0xa4>
   1d52c:	ebffe8bb 	bl	17820 <uspi_assertion_failed>
   1d530:	e5943000 	ldr	r3, [r4]
   1d534:	e59307b0 	ldr	r0, [r3, #1968]	; 0x7b0
   1d538:	eaffffec 	b	1d4f0 <USPiSendFrame+0x34>
   1d53c:	e3a020ff 	mov	r2, #255	; 0xff
   1d540:	e59f1018 	ldr	r1, [pc, #24]	; 1d560 <USPiSendFrame+0xa4>
   1d544:	e59f0018 	ldr	r0, [pc, #24]	; 1d564 <USPiSendFrame+0xa8>
   1d548:	ebffe8b4 	bl	17820 <uspi_assertion_failed>
   1d54c:	e5943000 	ldr	r3, [r4]
   1d550:	eaffffe0 	b	1d4d8 <USPiSendFrame+0x1c>
   1d554:	00080afc 	.word	0x00080afc
   1d558:	0003067c 	.word	0x0003067c
   1d55c:	00000106 	.word	0x00000106
   1d560:	00030588 	.word	0x00030588
   1d564:	000305a8 	.word	0x000305a8

0001d568 <USPiReceiveFrame>:
   1d568:	e92d4070 	push	{r4, r5, r6, lr}
   1d56c:	e59f408c 	ldr	r4, [pc, #140]	; 1d600 <USPiReceiveFrame+0x98>
   1d570:	e1a05000 	mov	r5, r0
   1d574:	e5943000 	ldr	r3, [r4]
   1d578:	e1a06001 	mov	r6, r1
   1d57c:	e3530000 	cmp	r3, #0
   1d580:	0a000018 	beq	1d5e8 <USPiReceiveFrame+0x80>
   1d584:	e59307b4 	ldr	r0, [r3, #1972]	; 0x7b4
   1d588:	e3500000 	cmp	r0, #0
   1d58c:	1a000008 	bne	1d5b4 <USPiReceiveFrame+0x4c>
   1d590:	e59307b0 	ldr	r0, [r3, #1968]	; 0x7b0
   1d594:	e3500000 	cmp	r0, #0
   1d598:	0a00000b 	beq	1d5cc <USPiReceiveFrame+0x64>
   1d59c:	e1a02006 	mov	r2, r6
   1d5a0:	e1a01005 	mov	r1, r5
   1d5a4:	eb001e3b 	bl	24e98 <SMSC951xDeviceReceiveFrame>
   1d5a8:	e2900000 	adds	r0, r0, #0
   1d5ac:	13a00001 	movne	r0, #1
   1d5b0:	e8bd8070 	pop	{r4, r5, r6, pc}
   1d5b4:	e1a02006 	mov	r2, r6
   1d5b8:	e1a01005 	mov	r1, r5
   1d5bc:	eb002184 	bl	25bd4 <LAN7800DeviceReceiveFrame>
   1d5c0:	e2900000 	adds	r0, r0, #0
   1d5c4:	13a00001 	movne	r0, #1
   1d5c8:	e8bd8070 	pop	{r4, r5, r6, pc}
   1d5cc:	e59f0030 	ldr	r0, [pc, #48]	; 1d604 <USPiReceiveFrame+0x9c>
   1d5d0:	e59f2030 	ldr	r2, [pc, #48]	; 1d608 <USPiReceiveFrame+0xa0>
   1d5d4:	e59f1030 	ldr	r1, [pc, #48]	; 1d60c <USPiReceiveFrame+0xa4>
   1d5d8:	ebffe890 	bl	17820 <uspi_assertion_failed>
   1d5dc:	e5943000 	ldr	r3, [r4]
   1d5e0:	e59307b0 	ldr	r0, [r3, #1968]	; 0x7b0
   1d5e4:	eaffffec 	b	1d59c <USPiReceiveFrame+0x34>
   1d5e8:	e3a02f43 	mov	r2, #268	; 0x10c
   1d5ec:	e59f1018 	ldr	r1, [pc, #24]	; 1d60c <USPiReceiveFrame+0xa4>
   1d5f0:	e59f0018 	ldr	r0, [pc, #24]	; 1d610 <USPiReceiveFrame+0xa8>
   1d5f4:	ebffe889 	bl	17820 <uspi_assertion_failed>
   1d5f8:	e5943000 	ldr	r3, [r4]
   1d5fc:	eaffffe0 	b	1d584 <USPiReceiveFrame+0x1c>
   1d600:	00080afc 	.word	0x00080afc
   1d604:	0003067c 	.word	0x0003067c
   1d608:	00000113 	.word	0x00000113
   1d60c:	00030588 	.word	0x00030588
   1d610:	000305a8 	.word	0x000305a8

0001d614 <USPiGamePadAvailable>:
   1d614:	e92d4010 	push	{r4, lr}
   1d618:	e59f4048 	ldr	r4, [pc, #72]	; 1d668 <USPiGamePadAvailable+0x54>
   1d61c:	e5943000 	ldr	r3, [r4]
   1d620:	e3530000 	cmp	r3, #0
   1d624:	0a000009 	beq	1d650 <USPiGamePadAvailable+0x3c>
   1d628:	e3a00000 	mov	r0, #0
   1d62c:	e2833e7b 	add	r3, r3, #1968	; 0x7b0
   1d630:	e2833008 	add	r3, r3, #8
   1d634:	e4932004 	ldr	r2, [r3], #4
   1d638:	e3520000 	cmp	r2, #0
   1d63c:	08bd8010 	popeq	{r4, pc}
   1d640:	e2800001 	add	r0, r0, #1
   1d644:	e3500004 	cmp	r0, #4
   1d648:	1afffff9 	bne	1d634 <USPiGamePadAvailable+0x20>
   1d64c:	e8bd8010 	pop	{r4, pc}
   1d650:	e59f2014 	ldr	r2, [pc, #20]	; 1d66c <USPiGamePadAvailable+0x58>
   1d654:	e59f1014 	ldr	r1, [pc, #20]	; 1d670 <USPiGamePadAvailable+0x5c>
   1d658:	e59f0014 	ldr	r0, [pc, #20]	; 1d674 <USPiGamePadAvailable+0x60>
   1d65c:	ebffe86f 	bl	17820 <uspi_assertion_failed>
   1d660:	e5943000 	ldr	r3, [r4]
   1d664:	eaffffef 	b	1d628 <USPiGamePadAvailable+0x14>
   1d668:	00080afc 	.word	0x00080afc
   1d66c:	00000119 	.word	0x00000119
   1d670:	00030588 	.word	0x00030588
   1d674:	000305a8 	.word	0x000305a8

0001d678 <USPiGamePadRegisterStatusHandler>:
   1d678:	e92d4070 	push	{r4, r5, r6, lr}
   1d67c:	e59f5058 	ldr	r5, [pc, #88]	; 1d6dc <USPiGamePadRegisterStatusHandler+0x64>
   1d680:	e1a06000 	mov	r6, r0
   1d684:	e5952000 	ldr	r2, [r5]
   1d688:	e3520000 	cmp	r2, #0
   1d68c:	0a00000c 	beq	1d6c4 <USPiGamePadRegisterStatusHandler+0x4c>
   1d690:	e3a04000 	mov	r4, #0
   1d694:	e2843f7b 	add	r3, r4, #492	; 0x1ec
   1d698:	e2833002 	add	r3, r3, #2
   1d69c:	e7920103 	ldr	r0, [r2, r3, lsl #2]
   1d6a0:	e2844001 	add	r4, r4, #1
   1d6a4:	e3500000 	cmp	r0, #0
   1d6a8:	0a000001 	beq	1d6b4 <USPiGamePadRegisterStatusHandler+0x3c>
   1d6ac:	e1a01006 	mov	r1, r6
   1d6b0:	eb0034cf 	bl	2a9f4 <USBGamePadDeviceRegisterStatusHandler>
   1d6b4:	e3540004 	cmp	r4, #4
   1d6b8:	08bd8070 	popeq	{r4, r5, r6, pc}
   1d6bc:	e5952000 	ldr	r2, [r5]
   1d6c0:	eafffff3 	b	1d694 <USPiGamePadRegisterStatusHandler+0x1c>
   1d6c4:	e59f2014 	ldr	r2, [pc, #20]	; 1d6e0 <USPiGamePadRegisterStatusHandler+0x68>
   1d6c8:	e59f1014 	ldr	r1, [pc, #20]	; 1d6e4 <USPiGamePadRegisterStatusHandler+0x6c>
   1d6cc:	e59f0014 	ldr	r0, [pc, #20]	; 1d6e8 <USPiGamePadRegisterStatusHandler+0x70>
   1d6d0:	ebffe852 	bl	17820 <uspi_assertion_failed>
   1d6d4:	e5952000 	ldr	r2, [r5]
   1d6d8:	eaffffec 	b	1d690 <USPiGamePadRegisterStatusHandler+0x18>
   1d6dc:	00080afc 	.word	0x00080afc
   1d6e0:	00000129 	.word	0x00000129
   1d6e4:	00030588 	.word	0x00030588
   1d6e8:	000305a8 	.word	0x000305a8

0001d6ec <USPiGamePadGetStatus>:
   1d6ec:	e92d4070 	push	{r4, r5, r6, lr}
   1d6f0:	e59f505c 	ldr	r5, [pc, #92]	; 1d754 <USPiGamePadGetStatus+0x68>
   1d6f4:	e1a04000 	mov	r4, r0
   1d6f8:	e5953000 	ldr	r3, [r5]
   1d6fc:	e3530000 	cmp	r3, #0
   1d700:	0a00000c 	beq	1d738 <USPiGamePadGetStatus+0x4c>
   1d704:	e3540003 	cmp	r4, #3
   1d708:	8a00000f 	bhi	1d74c <USPiGamePadGetStatus+0x60>
   1d70c:	e2844f7b 	add	r4, r4, #492	; 0x1ec
   1d710:	e5953000 	ldr	r3, [r5]
   1d714:	e2844002 	add	r4, r4, #2
   1d718:	e7930104 	ldr	r0, [r3, r4, lsl #2]
   1d71c:	e3500000 	cmp	r0, #0
   1d720:	08bd8070 	popeq	{r4, r5, r6, pc}
   1d724:	eb0034ca 	bl	2aa54 <USBGamePadDeviceGetReport>
   1d728:	e5953000 	ldr	r3, [r5]
   1d72c:	e7930104 	ldr	r0, [r3, r4, lsl #2]
   1d730:	e280001c 	add	r0, r0, #28
   1d734:	e8bd8070 	pop	{r4, r5, r6, pc}
   1d738:	e59f2018 	ldr	r2, [pc, #24]	; 1d758 <USPiGamePadGetStatus+0x6c>
   1d73c:	e59f1018 	ldr	r1, [pc, #24]	; 1d75c <USPiGamePadGetStatus+0x70>
   1d740:	e59f0018 	ldr	r0, [pc, #24]	; 1d760 <USPiGamePadGetStatus+0x74>
   1d744:	ebffe835 	bl	17820 <uspi_assertion_failed>
   1d748:	eaffffed 	b	1d704 <USPiGamePadGetStatus+0x18>
   1d74c:	e3a00000 	mov	r0, #0
   1d750:	e8bd8070 	pop	{r4, r5, r6, pc}
   1d754:	00080afc 	.word	0x00080afc
   1d758:	00000137 	.word	0x00000137
   1d75c:	00030588 	.word	0x00030588
   1d760:	000305a8 	.word	0x000305a8

0001d764 <USPiMIDIAvailable>:
   1d764:	e92d4010 	push	{r4, lr}
   1d768:	e59f4030 	ldr	r4, [pc, #48]	; 1d7a0 <USPiMIDIAvailable+0x3c>
   1d76c:	e5943000 	ldr	r3, [r4]
   1d770:	e3530000 	cmp	r3, #0
   1d774:	0a000003 	beq	1d788 <USPiMIDIAvailable+0x24>
   1d778:	e59307c8 	ldr	r0, [r3, #1992]	; 0x7c8
   1d77c:	e2900000 	adds	r0, r0, #0
   1d780:	13a00001 	movne	r0, #1
   1d784:	e8bd8010 	pop	{r4, pc}
   1d788:	e59f2014 	ldr	r2, [pc, #20]	; 1d7a4 <USPiMIDIAvailable+0x40>
   1d78c:	e59f1014 	ldr	r1, [pc, #20]	; 1d7a8 <USPiMIDIAvailable+0x44>
   1d790:	e59f0014 	ldr	r0, [pc, #20]	; 1d7ac <USPiMIDIAvailable+0x48>
   1d794:	ebffe821 	bl	17820 <uspi_assertion_failed>
   1d798:	e5943000 	ldr	r3, [r4]
   1d79c:	eafffff5 	b	1d778 <USPiMIDIAvailable+0x14>
   1d7a0:	00080afc 	.word	0x00080afc
   1d7a4:	00000146 	.word	0x00000146
   1d7a8:	00030588 	.word	0x00030588
   1d7ac:	000305a8 	.word	0x000305a8

0001d7b0 <USPiMIDIRegisterPacketHandler>:
   1d7b0:	e92d4070 	push	{r4, r5, r6, lr}
   1d7b4:	e59f4060 	ldr	r4, [pc, #96]	; 1d81c <USPiMIDIRegisterPacketHandler+0x6c>
   1d7b8:	e1a05000 	mov	r5, r0
   1d7bc:	e5943000 	ldr	r3, [r4]
   1d7c0:	e3530000 	cmp	r3, #0
   1d7c4:	0a00000e 	beq	1d804 <USPiMIDIRegisterPacketHandler+0x54>
   1d7c8:	e59307c8 	ldr	r0, [r3, #1992]	; 0x7c8
   1d7cc:	e3500000 	cmp	r0, #0
   1d7d0:	0a000002 	beq	1d7e0 <USPiMIDIRegisterPacketHandler+0x30>
   1d7d4:	e1a01005 	mov	r1, r5
   1d7d8:	e8bd4070 	pop	{r4, r5, r6, lr}
   1d7dc:	ea003802 	b	2b7ec <USBMIDIDeviceRegisterPacketHandler>
   1d7e0:	e59f1038 	ldr	r1, [pc, #56]	; 1d820 <USPiMIDIRegisterPacketHandler+0x70>
   1d7e4:	e59f0038 	ldr	r0, [pc, #56]	; 1d824 <USPiMIDIRegisterPacketHandler+0x74>
   1d7e8:	e59f2038 	ldr	r2, [pc, #56]	; 1d828 <USPiMIDIRegisterPacketHandler+0x78>
   1d7ec:	ebffe80b 	bl	17820 <uspi_assertion_failed>
   1d7f0:	e5943000 	ldr	r3, [r4]
   1d7f4:	e1a01005 	mov	r1, r5
   1d7f8:	e8bd4070 	pop	{r4, r5, r6, lr}
   1d7fc:	e59307c8 	ldr	r0, [r3, #1992]	; 0x7c8
   1d800:	ea0037f9 	b	2b7ec <USBMIDIDeviceRegisterPacketHandler>
   1d804:	e3a02f53 	mov	r2, #332	; 0x14c
   1d808:	e59f1010 	ldr	r1, [pc, #16]	; 1d820 <USPiMIDIRegisterPacketHandler+0x70>
   1d80c:	e59f0018 	ldr	r0, [pc, #24]	; 1d82c <USPiMIDIRegisterPacketHandler+0x7c>
   1d810:	ebffe802 	bl	17820 <uspi_assertion_failed>
   1d814:	e5943000 	ldr	r3, [r4]
   1d818:	eaffffea 	b	1d7c8 <USPiMIDIRegisterPacketHandler+0x18>
   1d81c:	00080afc 	.word	0x00080afc
   1d820:	00030588 	.word	0x00030588
   1d824:	00030694 	.word	0x00030694
   1d828:	0000014d 	.word	0x0000014d
   1d82c:	000305a8 	.word	0x000305a8

0001d830 <USPiDeviceGetInformation>:
   1d830:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   1d834:	e59f71a8 	ldr	r7, [pc, #424]	; 1d9e4 <USPiDeviceGetInformation+0x1b4>
   1d838:	e1a04000 	mov	r4, r0
   1d83c:	e5973000 	ldr	r3, [r7]
   1d840:	e1a06001 	mov	r6, r1
   1d844:	e3530000 	cmp	r3, #0
   1d848:	e1a05002 	mov	r5, r2
   1d84c:	0a000050 	beq	1d994 <USPiDeviceGetInformation+0x164>
   1d850:	e2440001 	sub	r0, r4, #1
   1d854:	e3500005 	cmp	r0, #5
   1d858:	979ff100 	ldrls	pc, [pc, r0, lsl #2]
   1d85c:	ea000005 	b	1d878 <USPiDeviceGetInformation+0x48>
   1d860:	0001d918 	.word	0x0001d918
   1d864:	0001d92c 	.word	0x0001d92c
   1d868:	0001d940 	.word	0x0001d940
   1d86c:	0001d958 	.word	0x0001d958
   1d870:	0001d978 	.word	0x0001d978
   1d874:	0001d884 	.word	0x0001d884
   1d878:	e3a03000 	mov	r3, #0
   1d87c:	e1a00003 	mov	r0, r3
   1d880:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   1d884:	e3560000 	cmp	r6, #0
   1d888:	1afffffa 	bne	1d878 <USPiDeviceGetInformation+0x48>
   1d88c:	e5973000 	ldr	r3, [r7]
   1d890:	e59307c8 	ldr	r0, [r3, #1992]	; 0x7c8
   1d894:	e3500000 	cmp	r0, #0
   1d898:	01a03000 	moveq	r3, r0
   1d89c:	0afffff6 	beq	1d87c <USPiDeviceGetInformation+0x4c>
   1d8a0:	eb001b91 	bl	246ec <USBFunctionGetDevice>
   1d8a4:	e2506000 	subs	r6, r0, #0
   1d8a8:	0a00003e 	beq	1d9a8 <USPiDeviceGetInformation+0x178>
   1d8ac:	e1a00006 	mov	r0, r6
   1d8b0:	eb00103c 	bl	219a8 <USBDeviceGetDeviceDescriptor>
   1d8b4:	e2504000 	subs	r4, r0, #0
   1d8b8:	0a000044 	beq	1d9d0 <USPiDeviceGetInformation+0x1a0>
   1d8bc:	e3550000 	cmp	r5, #0
   1d8c0:	0a00003d 	beq	1d9bc <USPiDeviceGetInformation+0x18c>
   1d8c4:	e5d42009 	ldrb	r2, [r4, #9]
   1d8c8:	e5d43008 	ldrb	r3, [r4, #8]
   1d8cc:	e2860020 	add	r0, r6, #32
   1d8d0:	e1833402 	orr	r3, r3, r2, lsl #8
   1d8d4:	e1c530b0 	strh	r3, [r5]
   1d8d8:	e5d4200b 	ldrb	r2, [r4, #11]
   1d8dc:	e5d4300a 	ldrb	r3, [r4, #10]
   1d8e0:	e1833402 	orr	r3, r3, r2, lsl #8
   1d8e4:	e1c530b2 	strh	r3, [r5, #2]
   1d8e8:	e5d4200d 	ldrb	r2, [r4, #13]
   1d8ec:	e5d4300c 	ldrb	r3, [r4, #12]
   1d8f0:	e1833402 	orr	r3, r3, r2, lsl #8
   1d8f4:	e1c530b4 	strh	r3, [r5, #4]
   1d8f8:	eb0035de 	bl	2b078 <USBStringGet>
   1d8fc:	e5850008 	str	r0, [r5, #8]
   1d900:	e286002c 	add	r0, r6, #44	; 0x2c
   1d904:	eb0035db 	bl	2b078 <USBStringGet>
   1d908:	e3a03001 	mov	r3, #1
   1d90c:	e585000c 	str	r0, [r5, #12]
   1d910:	e1a00003 	mov	r0, r3
   1d914:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   1d918:	e3560000 	cmp	r6, #0
   1d91c:	1affffd5 	bne	1d878 <USPiDeviceGetInformation+0x48>
   1d920:	e5973000 	ldr	r3, [r7]
   1d924:	e5930798 	ldr	r0, [r3, #1944]	; 0x798
   1d928:	eaffffd9 	b	1d894 <USPiDeviceGetInformation+0x64>
   1d92c:	e3560000 	cmp	r6, #0
   1d930:	1affffd0 	bne	1d878 <USPiDeviceGetInformation+0x48>
   1d934:	e5973000 	ldr	r3, [r7]
   1d938:	e593079c 	ldr	r0, [r3, #1948]	; 0x79c
   1d93c:	eaffffd4 	b	1d894 <USPiDeviceGetInformation+0x64>
   1d940:	e3560003 	cmp	r6, #3
   1d944:	8affffcb 	bhi	1d878 <USPiDeviceGetInformation+0x48>
   1d948:	e5973000 	ldr	r3, [r7]
   1d94c:	e2866f7a 	add	r6, r6, #488	; 0x1e8
   1d950:	e7930106 	ldr	r0, [r3, r6, lsl #2]
   1d954:	eaffffce 	b	1d894 <USPiDeviceGetInformation+0x64>
   1d958:	e3560000 	cmp	r6, #0
   1d95c:	1affffc5 	bne	1d878 <USPiDeviceGetInformation+0x48>
   1d960:	e5973000 	ldr	r3, [r7]
   1d964:	e59307b4 	ldr	r0, [r3, #1972]	; 0x7b4
   1d968:	e3500000 	cmp	r0, #0
   1d96c:	059307b0 	ldreq	r0, [r3, #1968]	; 0x7b0
   1d970:	1affffca 	bne	1d8a0 <USPiDeviceGetInformation+0x70>
   1d974:	eaffffc6 	b	1d894 <USPiDeviceGetInformation+0x64>
   1d978:	e3560003 	cmp	r6, #3
   1d97c:	8affffbd 	bhi	1d878 <USPiDeviceGetInformation+0x48>
   1d980:	e2866f7b 	add	r6, r6, #492	; 0x1ec
   1d984:	e5973000 	ldr	r3, [r7]
   1d988:	e2866002 	add	r6, r6, #2
   1d98c:	e7930106 	ldr	r0, [r3, r6, lsl #2]
   1d990:	eaffffbf 	b	1d894 <USPiDeviceGetInformation+0x64>
   1d994:	e59f204c 	ldr	r2, [pc, #76]	; 1d9e8 <USPiDeviceGetInformation+0x1b8>
   1d998:	e59f104c 	ldr	r1, [pc, #76]	; 1d9ec <USPiDeviceGetInformation+0x1bc>
   1d99c:	e59f004c 	ldr	r0, [pc, #76]	; 1d9f0 <USPiDeviceGetInformation+0x1c0>
   1d9a0:	ebffe79e 	bl	17820 <uspi_assertion_failed>
   1d9a4:	eaffffa9 	b	1d850 <USPiDeviceGetInformation+0x20>
   1d9a8:	e3a02f65 	mov	r2, #404	; 0x194
   1d9ac:	e59f1038 	ldr	r1, [pc, #56]	; 1d9ec <USPiDeviceGetInformation+0x1bc>
   1d9b0:	e59f003c 	ldr	r0, [pc, #60]	; 1d9f4 <USPiDeviceGetInformation+0x1c4>
   1d9b4:	ebffe799 	bl	17820 <uspi_assertion_failed>
   1d9b8:	eaffffbb 	b	1d8ac <USPiDeviceGetInformation+0x7c>
   1d9bc:	e59f2034 	ldr	r2, [pc, #52]	; 1d9f8 <USPiDeviceGetInformation+0x1c8>
   1d9c0:	e59f1024 	ldr	r1, [pc, #36]	; 1d9ec <USPiDeviceGetInformation+0x1bc>
   1d9c4:	e59f0030 	ldr	r0, [pc, #48]	; 1d9fc <USPiDeviceGetInformation+0x1cc>
   1d9c8:	ebffe794 	bl	17820 <uspi_assertion_failed>
   1d9cc:	eaffffbc 	b	1d8c4 <USPiDeviceGetInformation+0x94>
   1d9d0:	e59f2028 	ldr	r2, [pc, #40]	; 1da00 <USPiDeviceGetInformation+0x1d0>
   1d9d4:	e59f1010 	ldr	r1, [pc, #16]	; 1d9ec <USPiDeviceGetInformation+0x1bc>
   1d9d8:	e59f0024 	ldr	r0, [pc, #36]	; 1da04 <USPiDeviceGetInformation+0x1d4>
   1d9dc:	ebffe78f 	bl	17820 <uspi_assertion_failed>
   1d9e0:	eaffffb5 	b	1d8bc <USPiDeviceGetInformation+0x8c>
   1d9e4:	00080afc 	.word	0x00080afc
   1d9e8:	00000153 	.word	0x00000153
   1d9ec:	00030588 	.word	0x00030588
   1d9f0:	000305a8 	.word	0x000305a8
   1d9f4:	000306ac 	.word	0x000306ac
   1d9f8:	00000199 	.word	0x00000199
   1d9fc:	000306c8 	.word	0x000306c8
   1da00:	00000197 	.word	0x00000197
   1da04:	000306bc 	.word	0x000306bc

0001da08 <DWHCIDeviceCompletionRoutine>:
   1da08:	e92d4010 	push	{r4, lr}
   1da0c:	e2524000 	subs	r4, r2, #0
   1da10:	0a000002 	beq	1da20 <DWHCIDeviceCompletionRoutine+0x18>
   1da14:	e3a03000 	mov	r3, #0
   1da18:	e5843788 	str	r3, [r4, #1928]	; 0x788
   1da1c:	e8bd8010 	pop	{r4, pc}
   1da20:	e59f200c 	ldr	r2, [pc, #12]	; 1da34 <DWHCIDeviceCompletionRoutine+0x2c>
   1da24:	e59f100c 	ldr	r1, [pc, #12]	; 1da38 <DWHCIDeviceCompletionRoutine+0x30>
   1da28:	e59f000c 	ldr	r0, [pc, #12]	; 1da3c <DWHCIDeviceCompletionRoutine+0x34>
   1da2c:	ebffe77b 	bl	17820 <uspi_assertion_failed>
   1da30:	eafffff7 	b	1da14 <DWHCIDeviceCompletionRoutine+0xc>
   1da34:	000002da 	.word	0x000002da
   1da38:	000306e0 	.word	0x000306e0
   1da3c:	000306f0 	.word	0x000306f0

0001da40 <DWHCIDevice>:
   1da40:	e92d4010 	push	{r4, lr}
   1da44:	e2504000 	subs	r4, r0, #0
   1da48:	0a000008 	beq	1da70 <DWHCIDevice+0x30>
   1da4c:	e3a03000 	mov	r3, #0
   1da50:	e2840d1e 	add	r0, r4, #1920	; 0x780
   1da54:	e5843004 	str	r3, [r4, #4]
   1da58:	e5843000 	str	r3, [r4]
   1da5c:	e5843788 	str	r3, [r4, #1928]	; 0x788
   1da60:	e1a01004 	mov	r1, r4
   1da64:	e8bd4010 	pop	{r4, lr}
   1da68:	e280000c 	add	r0, r0, #12
   1da6c:	ea002e18 	b	292d4 <DWHCIRootPort>
   1da70:	e3a0205f 	mov	r2, #95	; 0x5f
   1da74:	e59f1008 	ldr	r1, [pc, #8]	; 1da84 <DWHCIDevice+0x44>
   1da78:	e59f0008 	ldr	r0, [pc, #8]	; 1da88 <DWHCIDevice+0x48>
   1da7c:	ebffe767 	bl	17820 <uspi_assertion_failed>
   1da80:	eafffff1 	b	1da4c <DWHCIDevice+0xc>
   1da84:	000306e0 	.word	0x000306e0
   1da88:	000306f0 	.word	0x000306f0

0001da8c <_DWHCIDevice>:
   1da8c:	e2800d1e 	add	r0, r0, #1920	; 0x780
   1da90:	e280000c 	add	r0, r0, #12
   1da94:	ea002e24 	b	2932c <_DWHCIRootPort>

0001da98 <DWHCIDeviceEnableGlobalInterrupts>:
   1da98:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
   1da9c:	e3500000 	cmp	r0, #0
   1daa0:	e24dd014 	sub	sp, sp, #20
   1daa4:	0a00000d 	beq	1dae0 <DWHCIDeviceEnableGlobalInterrupts+0x48>
   1daa8:	e28d0004 	add	r0, sp, #4
   1daac:	e59f1040 	ldr	r1, [pc, #64]	; 1daf4 <DWHCIDeviceEnableGlobalInterrupts+0x5c>
   1dab0:	eb00098b 	bl	200e4 <DWHCIRegister>
   1dab4:	e28d0004 	add	r0, sp, #4
   1dab8:	eb0009b5 	bl	20194 <DWHCIRegisterRead>
   1dabc:	e3a01001 	mov	r1, #1
   1dac0:	e28d0004 	add	r0, sp, #4
   1dac4:	eb000a2a 	bl	20374 <DWHCIRegisterOr>
   1dac8:	e28d0004 	add	r0, sp, #4
   1dacc:	eb0009c0 	bl	201d4 <DWHCIRegisterWrite>
   1dad0:	e28d0004 	add	r0, sp, #4
   1dad4:	eb0009a1 	bl	20160 <_DWHCIRegister>
   1dad8:	e28dd014 	add	sp, sp, #20
   1dadc:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
   1dae0:	e59f2010 	ldr	r2, [pc, #16]	; 1daf8 <DWHCIDeviceEnableGlobalInterrupts+0x60>
   1dae4:	e59f1010 	ldr	r1, [pc, #16]	; 1dafc <DWHCIDeviceEnableGlobalInterrupts+0x64>
   1dae8:	e59f0010 	ldr	r0, [pc, #16]	; 1db00 <DWHCIDeviceEnableGlobalInterrupts+0x68>
   1daec:	ebffe74b 	bl	17820 <uspi_assertion_failed>
   1daf0:	eaffffec 	b	1daa8 <DWHCIDeviceEnableGlobalInterrupts+0x10>
   1daf4:	20980008 	.word	0x20980008
   1daf8:	0000023f 	.word	0x0000023f
   1dafc:	000306e0 	.word	0x000306e0
   1db00:	000306f0 	.word	0x000306f0

0001db04 <DWHCIDeviceEnableCommonInterrupts>:
   1db04:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
   1db08:	e3500000 	cmp	r0, #0
   1db0c:	e24dd014 	sub	sp, sp, #20
   1db10:	0a00000a 	beq	1db40 <DWHCIDeviceEnableCommonInterrupts+0x3c>
   1db14:	e59f1038 	ldr	r1, [pc, #56]	; 1db54 <DWHCIDeviceEnableCommonInterrupts+0x50>
   1db18:	e28d0004 	add	r0, sp, #4
   1db1c:	eb000970 	bl	200e4 <DWHCIRegister>
   1db20:	e28d0004 	add	r0, sp, #4
   1db24:	eb000a78 	bl	2050c <DWHCIRegisterSetAll>
   1db28:	e28d0004 	add	r0, sp, #4
   1db2c:	eb0009a8 	bl	201d4 <DWHCIRegisterWrite>
   1db30:	e28d0004 	add	r0, sp, #4
   1db34:	eb000989 	bl	20160 <_DWHCIRegister>
   1db38:	e28dd014 	add	sp, sp, #20
   1db3c:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
   1db40:	e3a02f93 	mov	r2, #588	; 0x24c
   1db44:	e59f100c 	ldr	r1, [pc, #12]	; 1db58 <DWHCIDeviceEnableCommonInterrupts+0x54>
   1db48:	e59f000c 	ldr	r0, [pc, #12]	; 1db5c <DWHCIDeviceEnableCommonInterrupts+0x58>
   1db4c:	ebffe733 	bl	17820 <uspi_assertion_failed>
   1db50:	eaffffef 	b	1db14 <DWHCIDeviceEnableCommonInterrupts+0x10>
   1db54:	20980014 	.word	0x20980014
   1db58:	000306e0 	.word	0x000306e0
   1db5c:	000306f0 	.word	0x000306f0

0001db60 <DWHCIDeviceEnableHostInterrupts>:
   1db60:	e92d4010 	push	{r4, lr}
   1db64:	e2504000 	subs	r4, r0, #0
   1db68:	e24dd010 	sub	sp, sp, #16
   1db6c:	0a000012 	beq	1dbbc <DWHCIDeviceEnableHostInterrupts+0x5c>
   1db70:	e3a02000 	mov	r2, #0
   1db74:	e59f1054 	ldr	r1, [pc, #84]	; 1dbd0 <DWHCIDeviceEnableHostInterrupts+0x70>
   1db78:	e28d0004 	add	r0, sp, #4
   1db7c:	eb000966 	bl	2011c <DWHCIRegister2>
   1db80:	e28d0004 	add	r0, sp, #4
   1db84:	eb000992 	bl	201d4 <DWHCIRegisterWrite>
   1db88:	e1a00004 	mov	r0, r4
   1db8c:	ebffffdc 	bl	1db04 <DWHCIDeviceEnableCommonInterrupts>
   1db90:	e28d0004 	add	r0, sp, #4
   1db94:	eb00097e 	bl	20194 <DWHCIRegisterRead>
   1db98:	e3a01402 	mov	r1, #33554432	; 0x2000000
   1db9c:	e28d0004 	add	r0, sp, #4
   1dba0:	eb0009f3 	bl	20374 <DWHCIRegisterOr>
   1dba4:	e28d0004 	add	r0, sp, #4
   1dba8:	eb000989 	bl	201d4 <DWHCIRegisterWrite>
   1dbac:	e28d0004 	add	r0, sp, #4
   1dbb0:	eb00096a 	bl	20160 <_DWHCIRegister>
   1dbb4:	e28dd010 	add	sp, sp, #16
   1dbb8:	e8bd8010 	pop	{r4, pc}
   1dbbc:	e3a02f99 	mov	r2, #612	; 0x264
   1dbc0:	e59f100c 	ldr	r1, [pc, #12]	; 1dbd4 <DWHCIDeviceEnableHostInterrupts+0x74>
   1dbc4:	e59f000c 	ldr	r0, [pc, #12]	; 1dbd8 <DWHCIDeviceEnableHostInterrupts+0x78>
   1dbc8:	ebffe714 	bl	17820 <uspi_assertion_failed>
   1dbcc:	eaffffe7 	b	1db70 <DWHCIDeviceEnableHostInterrupts+0x10>
   1dbd0:	20980018 	.word	0x20980018
   1dbd4:	000306e0 	.word	0x000306e0
   1dbd8:	000306f0 	.word	0x000306f0

0001dbdc <DWHCIDeviceEnableChannelInterrupt>:
   1dbdc:	e92d4010 	push	{r4, lr}
   1dbe0:	e3500000 	cmp	r0, #0
   1dbe4:	e24dd010 	sub	sp, sp, #16
   1dbe8:	e1a04001 	mov	r4, r1
   1dbec:	0a000010 	beq	1dc34 <DWHCIDeviceEnableChannelInterrupt+0x58>
   1dbf0:	e28d0004 	add	r0, sp, #4
   1dbf4:	e59f104c 	ldr	r1, [pc, #76]	; 1dc48 <DWHCIDeviceEnableChannelInterrupt+0x6c>
   1dbf8:	eb000939 	bl	200e4 <DWHCIRegister>
   1dbfc:	eb0033b3 	bl	2aad0 <uspi_EnterCritical>
   1dc00:	e28d0004 	add	r0, sp, #4
   1dc04:	eb000962 	bl	20194 <DWHCIRegisterRead>
   1dc08:	e3a01001 	mov	r1, #1
   1dc0c:	e28d0004 	add	r0, sp, #4
   1dc10:	e1a01411 	lsl	r1, r1, r4
   1dc14:	eb0009d6 	bl	20374 <DWHCIRegisterOr>
   1dc18:	e28d0004 	add	r0, sp, #4
   1dc1c:	eb00096c 	bl	201d4 <DWHCIRegisterWrite>
   1dc20:	eb0033b9 	bl	2ab0c <uspi_LeaveCritical>
   1dc24:	e28d0004 	add	r0, sp, #4
   1dc28:	eb00094c 	bl	20160 <_DWHCIRegister>
   1dc2c:	e28dd010 	add	sp, sp, #16
   1dc30:	e8bd8010 	pop	{r4, pc}
   1dc34:	e3a02f9e 	mov	r2, #632	; 0x278
   1dc38:	e59f100c 	ldr	r1, [pc, #12]	; 1dc4c <DWHCIDeviceEnableChannelInterrupt+0x70>
   1dc3c:	e59f000c 	ldr	r0, [pc, #12]	; 1dc50 <DWHCIDeviceEnableChannelInterrupt+0x74>
   1dc40:	ebffe6f6 	bl	17820 <uspi_assertion_failed>
   1dc44:	eaffffe9 	b	1dbf0 <DWHCIDeviceEnableChannelInterrupt+0x14>
   1dc48:	20980418 	.word	0x20980418
   1dc4c:	000306e0 	.word	0x000306e0
   1dc50:	000306f0 	.word	0x000306f0

0001dc54 <DWHCIDeviceDisableChannelInterrupt>:
   1dc54:	e92d4010 	push	{r4, lr}
   1dc58:	e3500000 	cmp	r0, #0
   1dc5c:	e24dd010 	sub	sp, sp, #16
   1dc60:	e1a04001 	mov	r4, r1
   1dc64:	0a000010 	beq	1dcac <DWHCIDeviceDisableChannelInterrupt+0x58>
   1dc68:	e28d0004 	add	r0, sp, #4
   1dc6c:	e59f104c 	ldr	r1, [pc, #76]	; 1dcc0 <DWHCIDeviceDisableChannelInterrupt+0x6c>
   1dc70:	eb00091b 	bl	200e4 <DWHCIRegister>
   1dc74:	eb003395 	bl	2aad0 <uspi_EnterCritical>
   1dc78:	e28d0004 	add	r0, sp, #4
   1dc7c:	eb000944 	bl	20194 <DWHCIRegisterRead>
   1dc80:	e3a01001 	mov	r1, #1
   1dc84:	e28d0004 	add	r0, sp, #4
   1dc88:	e1e01411 	mvn	r1, r1, lsl r4
   1dc8c:	eb0009a1 	bl	20318 <DWHCIRegisterAnd>
   1dc90:	e28d0004 	add	r0, sp, #4
   1dc94:	eb00094e 	bl	201d4 <DWHCIRegisterWrite>
   1dc98:	eb00339b 	bl	2ab0c <uspi_LeaveCritical>
   1dc9c:	e28d0004 	add	r0, sp, #4
   1dca0:	eb00092e 	bl	20160 <_DWHCIRegister>
   1dca4:	e28dd010 	add	sp, sp, #16
   1dca8:	e8bd8010 	pop	{r4, pc}
   1dcac:	e59f2010 	ldr	r2, [pc, #16]	; 1dcc4 <DWHCIDeviceDisableChannelInterrupt+0x70>
   1dcb0:	e59f1010 	ldr	r1, [pc, #16]	; 1dcc8 <DWHCIDeviceDisableChannelInterrupt+0x74>
   1dcb4:	e59f0010 	ldr	r0, [pc, #16]	; 1dccc <DWHCIDeviceDisableChannelInterrupt+0x78>
   1dcb8:	ebffe6d8 	bl	17820 <uspi_assertion_failed>
   1dcbc:	eaffffe9 	b	1dc68 <DWHCIDeviceDisableChannelInterrupt+0x14>
   1dcc0:	20980418 	.word	0x20980418
   1dcc4:	0000028a 	.word	0x0000028a
   1dcc8:	000306e0 	.word	0x000306e0
   1dccc:	000306f0 	.word	0x000306f0

0001dcd0 <DWHCIDeviceStartChannel>:
   1dcd0:	e92d4070 	push	{r4, r5, r6, lr}
   1dcd4:	e2506000 	subs	r6, r0, #0
   1dcd8:	e24dd048 	sub	sp, sp, #72	; 0x48
   1dcdc:	e1a04001 	mov	r4, r1
   1dce0:	0a0000e0 	beq	1e068 <DWHCIDeviceStartChannel+0x398>
   1dce4:	e3540000 	cmp	r4, #0
   1dce8:	0a0000d9 	beq	1e054 <DWHCIDeviceStartChannel+0x384>
   1dcec:	e1a00004 	mov	r0, r4
   1dcf0:	eb000af6 	bl	208d0 <DWHCITransferStageDataGetChannelNumber>
   1dcf4:	e5963000 	ldr	r3, [r6]
   1dcf8:	e1a05000 	mov	r5, r0
   1dcfc:	e1530000 	cmp	r3, r0
   1dd00:	9a0000ce 	bls	1e040 <DWHCIDeviceStartChannel+0x370>
   1dd04:	e1a00004 	mov	r0, r4
   1dd08:	e3a01001 	mov	r1, #1
   1dd0c:	eb000ad2 	bl	2085c <DWHCITransferStageDataSetSubState>
   1dd10:	e59f1374 	ldr	r1, [pc, #884]	; 1e08c <DWHCIDeviceStartChannel+0x3bc>
   1dd14:	e1a05285 	lsl	r5, r5, #5
   1dd18:	e0851001 	add	r1, r5, r1
   1dd1c:	e1a0000d 	mov	r0, sp
   1dd20:	eb0008ef 	bl	200e4 <DWHCIRegister>
   1dd24:	e1a0000d 	mov	r0, sp
   1dd28:	eb0009f7 	bl	2050c <DWHCIRegisterSetAll>
   1dd2c:	e1a0000d 	mov	r0, sp
   1dd30:	eb000927 	bl	201d4 <DWHCIRegisterWrite>
   1dd34:	e59f1354 	ldr	r1, [pc, #852]	; 1e090 <DWHCIDeviceStartChannel+0x3c0>
   1dd38:	e3a02000 	mov	r2, #0
   1dd3c:	e0851001 	add	r1, r5, r1
   1dd40:	e28d000c 	add	r0, sp, #12
   1dd44:	eb0008f4 	bl	2011c <DWHCIRegister2>
   1dd48:	e1a00004 	mov	r0, r4
   1dd4c:	eb000c78 	bl	20f34 <DWHCITransferStageDataGetBytesToTransfer>
   1dd50:	e3c014ff 	bic	r1, r0, #-16777216	; 0xff000000
   1dd54:	e3c1173e 	bic	r1, r1, #16252928	; 0xf80000
   1dd58:	e28d000c 	add	r0, sp, #12
   1dd5c:	eb000984 	bl	20374 <DWHCIRegisterOr>
   1dd60:	e1a00004 	mov	r0, r4
   1dd64:	eb000c80 	bl	20f6c <DWHCITransferStageDataGetPacketsToTransfer>
   1dd68:	e59f1324 	ldr	r1, [pc, #804]	; 1e094 <DWHCIDeviceStartChannel+0x3c4>
   1dd6c:	e0011980 	and	r1, r1, r0, lsl #19
   1dd70:	e28d000c 	add	r0, sp, #12
   1dd74:	eb00097e 	bl	20374 <DWHCIRegisterOr>
   1dd78:	e1a00004 	mov	r0, r4
   1dd7c:	eb000c12 	bl	20dcc <DWHCITransferStageDataGetPID>
   1dd80:	e1a01e80 	lsl	r1, r0, #29
   1dd84:	e28d000c 	add	r0, sp, #12
   1dd88:	eb000979 	bl	20374 <DWHCIRegisterOr>
   1dd8c:	e28d000c 	add	r0, sp, #12
   1dd90:	eb00090f 	bl	201d4 <DWHCIRegisterWrite>
   1dd94:	e1a00004 	mov	r0, r4
   1dd98:	eb000c50 	bl	20ee0 <DWHCITransferStageDataGetDMAAddress>
   1dd9c:	e59f12f4 	ldr	r1, [pc, #756]	; 1e098 <DWHCIDeviceStartChannel+0x3c8>
   1dda0:	e3c02103 	bic	r2, r0, #-1073741824	; 0xc0000000
   1dda4:	e3822101 	orr	r2, r2, #1073741824	; 0x40000000
   1dda8:	e0851001 	add	r1, r5, r1
   1ddac:	e28d0018 	add	r0, sp, #24
   1ddb0:	eb0008d9 	bl	2011c <DWHCIRegister2>
   1ddb4:	e28d0018 	add	r0, sp, #24
   1ddb8:	eb000905 	bl	201d4 <DWHCIRegisterWrite>
   1ddbc:	e1a00004 	mov	r0, r4
   1ddc0:	eb000c46 	bl	20ee0 <DWHCITransferStageDataGetDMAAddress>
   1ddc4:	e1a06000 	mov	r6, r0
   1ddc8:	e1a00004 	mov	r0, r4
   1ddcc:	eb000c58 	bl	20f34 <DWHCITransferStageDataGetBytesToTransfer>
   1ddd0:	e1a01000 	mov	r1, r0
   1ddd4:	e1a00006 	mov	r0, r6
   1ddd8:	eb003364 	bl	2ab70 <uspi_CleanAndInvalidateDataCacheRange>
   1dddc:	e3a02000 	mov	r2, #0
   1dde0:	ee072fba 	mcr	15, 0, r2, cr7, cr10, {5}
   1dde4:	e59f12b0 	ldr	r1, [pc, #688]	; 1e09c <DWHCIDeviceStartChannel+0x3cc>
   1dde8:	e28d0024 	add	r0, sp, #36	; 0x24
   1ddec:	e0851001 	add	r1, r5, r1
   1ddf0:	eb0008c9 	bl	2011c <DWHCIRegister2>
   1ddf4:	e1a00004 	mov	r0, r4
   1ddf8:	eb000c69 	bl	20fa4 <DWHCITransferStageDataIsSplit>
   1ddfc:	e3500000 	cmp	r0, #0
   1de00:	1a000077 	bne	1dfe4 <DWHCIDeviceStartChannel+0x314>
   1de04:	e28d0024 	add	r0, sp, #36	; 0x24
   1de08:	eb0008f1 	bl	201d4 <DWHCIRegisterWrite>
   1de0c:	e59f128c 	ldr	r1, [pc, #652]	; 1e0a0 <DWHCIDeviceStartChannel+0x3d0>
   1de10:	e28d0030 	add	r0, sp, #48	; 0x30
   1de14:	e0851001 	add	r1, r5, r1
   1de18:	eb0008b1 	bl	200e4 <DWHCIRegister>
   1de1c:	e28d0030 	add	r0, sp, #48	; 0x30
   1de20:	eb0008db 	bl	20194 <DWHCIRegisterRead>
   1de24:	e59f1278 	ldr	r1, [pc, #632]	; 1e0a4 <DWHCIDeviceStartChannel+0x3d4>
   1de28:	e28d0030 	add	r0, sp, #48	; 0x30
   1de2c:	eb000939 	bl	20318 <DWHCIRegisterAnd>
   1de30:	e1a00004 	mov	r0, r4
   1de34:	eb000bc9 	bl	20d60 <DWHCITransferStageDataGetMaxPacketSize>
   1de38:	e1a01a80 	lsl	r1, r0, #21
   1de3c:	e1a01aa1 	lsr	r1, r1, #21
   1de40:	e28d0030 	add	r0, sp, #48	; 0x30
   1de44:	eb00094a 	bl	20374 <DWHCIRegisterOr>
   1de48:	e28d0030 	add	r0, sp, #48	; 0x30
   1de4c:	e3e01603 	mvn	r1, #3145728	; 0x300000
   1de50:	eb000930 	bl	20318 <DWHCIRegisterAnd>
   1de54:	e28d0030 	add	r0, sp, #48	; 0x30
   1de58:	e3a01601 	mov	r1, #1048576	; 0x100000
   1de5c:	eb000944 	bl	20374 <DWHCIRegisterOr>
   1de60:	e1a00004 	mov	r0, r4
   1de64:	eb000c01 	bl	20e70 <DWHCITransferStageDataIsDirectionIn>
   1de68:	e3500000 	cmp	r0, #0
   1de6c:	0a000054 	beq	1dfc4 <DWHCIDeviceStartChannel+0x2f4>
   1de70:	e3a01902 	mov	r1, #32768	; 0x8000
   1de74:	e28d0030 	add	r0, sp, #48	; 0x30
   1de78:	eb00093d 	bl	20374 <DWHCIRegisterOr>
   1de7c:	e1a00004 	mov	r0, r4
   1de80:	eb000bc4 	bl	20d98 <DWHCITransferStageDataGetSpeed>
   1de84:	e3500000 	cmp	r0, #0
   1de88:	1a000049 	bne	1dfb4 <DWHCIDeviceStartChannel+0x2e4>
   1de8c:	e3a01802 	mov	r1, #131072	; 0x20000
   1de90:	e28d0030 	add	r0, sp, #48	; 0x30
   1de94:	eb000936 	bl	20374 <DWHCIRegisterOr>
   1de98:	e3e0157f 	mvn	r1, #532676608	; 0x1fc00000
   1de9c:	e28d0030 	add	r0, sp, #48	; 0x30
   1dea0:	eb00091c 	bl	20318 <DWHCIRegisterAnd>
   1dea4:	e1a00004 	mov	r0, r4
   1dea8:	eb000b55 	bl	20c04 <DWHCITransferStageDataGetDeviceAddress>
   1deac:	e1a01b00 	lsl	r1, r0, #22
   1deb0:	e28d0030 	add	r0, sp, #48	; 0x30
   1deb4:	eb00092e 	bl	20374 <DWHCIRegisterOr>
   1deb8:	e3e01703 	mvn	r1, #786432	; 0xc0000
   1debc:	e28d0030 	add	r0, sp, #48	; 0x30
   1dec0:	eb000914 	bl	20318 <DWHCIRegisterAnd>
   1dec4:	e1a00004 	mov	r0, r4
   1dec8:	eb000b64 	bl	20c60 <DWHCITransferStageDataGetEndpointType>
   1decc:	e1a01900 	lsl	r1, r0, #18
   1ded0:	e28d0030 	add	r0, sp, #48	; 0x30
   1ded4:	eb000926 	bl	20374 <DWHCIRegisterOr>
   1ded8:	e3e01b1e 	mvn	r1, #30720	; 0x7800
   1dedc:	e28d0030 	add	r0, sp, #48	; 0x30
   1dee0:	eb00090c 	bl	20318 <DWHCIRegisterAnd>
   1dee4:	e1a00004 	mov	r0, r4
   1dee8:	eb000b84 	bl	20d00 <DWHCITransferStageDataGetEndpointNumber>
   1deec:	e1a01580 	lsl	r1, r0, #11
   1def0:	e28d0030 	add	r0, sp, #48	; 0x30
   1def4:	eb00091e 	bl	20374 <DWHCIRegisterOr>
   1def8:	e1a00004 	mov	r0, r4
   1defc:	eb000cf7 	bl	212e0 <DWHCITransferStageDataGetFrameScheduler>
   1df00:	e2506000 	subs	r6, r0, #0
   1df04:	0a000009 	beq	1df30 <DWHCIDeviceStartChannel+0x260>
   1df08:	e5963010 	ldr	r3, [r6, #16]
   1df0c:	e12fff33 	blx	r3
   1df10:	e5963014 	ldr	r3, [r6, #20]
   1df14:	e1a00006 	mov	r0, r6
   1df18:	e12fff33 	blx	r3
   1df1c:	e3500000 	cmp	r0, #0
   1df20:	1a00002b 	bne	1dfd4 <DWHCIDeviceStartChannel+0x304>
   1df24:	e3e01202 	mvn	r1, #536870912	; 0x20000000
   1df28:	e28d0030 	add	r0, sp, #48	; 0x30
   1df2c:	eb0008f9 	bl	20318 <DWHCIRegisterAnd>
   1df30:	e59f1170 	ldr	r1, [pc, #368]	; 1e0a8 <DWHCIDeviceStartChannel+0x3d8>
   1df34:	e28d003c 	add	r0, sp, #60	; 0x3c
   1df38:	e0851001 	add	r1, r5, r1
   1df3c:	eb000868 	bl	200e4 <DWHCIRegister>
   1df40:	e1a00004 	mov	r0, r4
   1df44:	eb000c85 	bl	21160 <DWHCITransferStageDataGetStatusMask>
   1df48:	e1a01000 	mov	r1, r0
   1df4c:	e28d003c 	add	r0, sp, #60	; 0x3c
   1df50:	eb0008c9 	bl	2027c <DWHCIRegisterSet>
   1df54:	e28d003c 	add	r0, sp, #60	; 0x3c
   1df58:	eb00089d 	bl	201d4 <DWHCIRegisterWrite>
   1df5c:	e28d0030 	add	r0, sp, #48	; 0x30
   1df60:	e3a01102 	mov	r1, #-2147483648	; 0x80000000
   1df64:	eb000902 	bl	20374 <DWHCIRegisterOr>
   1df68:	e3e01101 	mvn	r1, #1073741824	; 0x40000000
   1df6c:	e28d0030 	add	r0, sp, #48	; 0x30
   1df70:	eb0008e8 	bl	20318 <DWHCIRegisterAnd>
   1df74:	e28d0030 	add	r0, sp, #48	; 0x30
   1df78:	eb000895 	bl	201d4 <DWHCIRegisterWrite>
   1df7c:	e28d003c 	add	r0, sp, #60	; 0x3c
   1df80:	eb000876 	bl	20160 <_DWHCIRegister>
   1df84:	e28d0030 	add	r0, sp, #48	; 0x30
   1df88:	eb000874 	bl	20160 <_DWHCIRegister>
   1df8c:	e28d0024 	add	r0, sp, #36	; 0x24
   1df90:	eb000872 	bl	20160 <_DWHCIRegister>
   1df94:	e28d0018 	add	r0, sp, #24
   1df98:	eb000870 	bl	20160 <_DWHCIRegister>
   1df9c:	e28d000c 	add	r0, sp, #12
   1dfa0:	eb00086e 	bl	20160 <_DWHCIRegister>
   1dfa4:	e1a0000d 	mov	r0, sp
   1dfa8:	eb00086c 	bl	20160 <_DWHCIRegister>
   1dfac:	e28dd048 	add	sp, sp, #72	; 0x48
   1dfb0:	e8bd8070 	pop	{r4, r5, r6, pc}
   1dfb4:	e3e01802 	mvn	r1, #131072	; 0x20000
   1dfb8:	e28d0030 	add	r0, sp, #48	; 0x30
   1dfbc:	eb0008d5 	bl	20318 <DWHCIRegisterAnd>
   1dfc0:	eaffffb4 	b	1de98 <DWHCIDeviceStartChannel+0x1c8>
   1dfc4:	e3e01902 	mvn	r1, #32768	; 0x8000
   1dfc8:	e28d0030 	add	r0, sp, #48	; 0x30
   1dfcc:	eb0008d1 	bl	20318 <DWHCIRegisterAnd>
   1dfd0:	eaffffa9 	b	1de7c <DWHCIDeviceStartChannel+0x1ac>
   1dfd4:	e3a01202 	mov	r1, #536870912	; 0x20000000
   1dfd8:	e28d0030 	add	r0, sp, #48	; 0x30
   1dfdc:	eb0008e4 	bl	20374 <DWHCIRegisterOr>
   1dfe0:	eaffffd2 	b	1df30 <DWHCIDeviceStartChannel+0x260>
   1dfe4:	e1a00004 	mov	r0, r4
   1dfe8:	eb000c35 	bl	210c4 <DWHCITransferStageDataGetHubPortAddress>
   1dfec:	e1a01000 	mov	r1, r0
   1dff0:	e28d0024 	add	r0, sp, #36	; 0x24
   1dff4:	eb0008de 	bl	20374 <DWHCIRegisterOr>
   1dff8:	e1a00004 	mov	r0, r4
   1dffc:	eb000c0c 	bl	21034 <DWHCITransferStageDataGetHubAddress>
   1e000:	e1a01380 	lsl	r1, r0, #7
   1e004:	e28d0024 	add	r0, sp, #36	; 0x24
   1e008:	eb0008d9 	bl	20374 <DWHCIRegisterOr>
   1e00c:	e1a00004 	mov	r0, r4
   1e010:	eb000c50 	bl	21158 <DWHCITransferStageDataGetSplitPosition>
   1e014:	e1a01700 	lsl	r1, r0, #14
   1e018:	e28d0024 	add	r0, sp, #36	; 0x24
   1e01c:	eb0008d4 	bl	20374 <DWHCIRegisterOr>
   1e020:	e1a00004 	mov	r0, r4
   1e024:	eb000bec 	bl	20fdc <DWHCITransferStageDataIsSplitComplete>
   1e028:	e3500000 	cmp	r0, #0
   1e02c:	1a000012 	bne	1e07c <DWHCIDeviceStartChannel+0x3ac>
   1e030:	e3a01102 	mov	r1, #-2147483648	; 0x80000000
   1e034:	e28d0024 	add	r0, sp, #36	; 0x24
   1e038:	eb0008cd 	bl	20374 <DWHCIRegisterOr>
   1e03c:	eaffff70 	b	1de04 <DWHCIDeviceStartChannel+0x134>
   1e040:	e59f2064 	ldr	r2, [pc, #100]	; 1e0ac <DWHCIDeviceStartChannel+0x3dc>
   1e044:	e59f1064 	ldr	r1, [pc, #100]	; 1e0b0 <DWHCIDeviceStartChannel+0x3e0>
   1e048:	e59f0064 	ldr	r0, [pc, #100]	; 1e0b4 <DWHCIDeviceStartChannel+0x3e4>
   1e04c:	ebffe5f3 	bl	17820 <uspi_assertion_failed>
   1e050:	eaffff2b 	b	1dd04 <DWHCIDeviceStartChannel+0x34>
   1e054:	e59f205c 	ldr	r2, [pc, #92]	; 1e0b8 <DWHCIDeviceStartChannel+0x3e8>
   1e058:	e59f1050 	ldr	r1, [pc, #80]	; 1e0b0 <DWHCIDeviceStartChannel+0x3e0>
   1e05c:	e59f0058 	ldr	r0, [pc, #88]	; 1e0bc <DWHCIDeviceStartChannel+0x3ec>
   1e060:	ebffe5ee 	bl	17820 <uspi_assertion_failed>
   1e064:	eaffff20 	b	1dcec <DWHCIDeviceStartChannel+0x1c>
   1e068:	e59f2050 	ldr	r2, [pc, #80]	; 1e0c0 <DWHCIDeviceStartChannel+0x3f0>
   1e06c:	e59f103c 	ldr	r1, [pc, #60]	; 1e0b0 <DWHCIDeviceStartChannel+0x3e0>
   1e070:	e59f004c 	ldr	r0, [pc, #76]	; 1e0c4 <DWHCIDeviceStartChannel+0x3f4>
   1e074:	ebffe5e9 	bl	17820 <uspi_assertion_failed>
   1e078:	eaffff19 	b	1dce4 <DWHCIDeviceStartChannel+0x14>
   1e07c:	e3a01801 	mov	r1, #65536	; 0x10000
   1e080:	e28d0024 	add	r0, sp, #36	; 0x24
   1e084:	eb0008ba 	bl	20374 <DWHCIRegisterOr>
   1e088:	eaffffe8 	b	1e030 <DWHCIDeviceStartChannel+0x360>
   1e08c:	20980508 	.word	0x20980508
   1e090:	20980510 	.word	0x20980510
   1e094:	1ff80000 	.word	0x1ff80000
   1e098:	20980514 	.word	0x20980514
   1e09c:	20980504 	.word	0x20980504
   1e0a0:	20980500 	.word	0x20980500
   1e0a4:	fffff800 	.word	0xfffff800
   1e0a8:	2098050c 	.word	0x2098050c
   1e0ac:	00000337 	.word	0x00000337
   1e0b0:	000306e0 	.word	0x000306e0
   1e0b4:	0003070c 	.word	0x0003070c
   1e0b8:	00000335 	.word	0x00000335
   1e0bc:	000306fc 	.word	0x000306fc
   1e0c0:	00000333 	.word	0x00000333
   1e0c4:	000306f0 	.word	0x000306f0

0001e0c8 <DWHCIDeviceStartTransaction>:
   1e0c8:	e92d4070 	push	{r4, r5, r6, lr}
   1e0cc:	e2506000 	subs	r6, r0, #0
   1e0d0:	e24dd018 	sub	sp, sp, #24
   1e0d4:	e1a05001 	mov	r5, r1
   1e0d8:	0a00003e 	beq	1e1d8 <DWHCIDeviceStartTransaction+0x110>
   1e0dc:	e3550000 	cmp	r5, #0
   1e0e0:	0a000037 	beq	1e1c4 <DWHCIDeviceStartTransaction+0xfc>
   1e0e4:	e1a00005 	mov	r0, r5
   1e0e8:	eb0009f8 	bl	208d0 <DWHCITransferStageDataGetChannelNumber>
   1e0ec:	e5963000 	ldr	r3, [r6]
   1e0f0:	e1a04000 	mov	r4, r0
   1e0f4:	e1530000 	cmp	r3, r0
   1e0f8:	9a00002c 	bls	1e1b0 <DWHCIDeviceStartTransaction+0xe8>
   1e0fc:	e59f10e8 	ldr	r1, [pc, #232]	; 1e1ec <DWHCIDeviceStartTransaction+0x124>
   1e100:	e1a0000d 	mov	r0, sp
   1e104:	e0841001 	add	r1, r4, r1
   1e108:	e1a04281 	lsl	r4, r1, #5
   1e10c:	e1a01004 	mov	r1, r4
   1e110:	eb0007f3 	bl	200e4 <DWHCIRegister>
   1e114:	e1a0000d 	mov	r0, sp
   1e118:	eb00081d 	bl	20194 <DWHCIRegisterRead>
   1e11c:	e1a0000d 	mov	r0, sp
   1e120:	e3a01102 	mov	r1, #-2147483648	; 0x80000000
   1e124:	eb000863 	bl	202b8 <DWHCIRegisterIsSet>
   1e128:	e3500000 	cmp	r0, #0
   1e12c:	1a000006 	bne	1e14c <DWHCIDeviceStartTransaction+0x84>
   1e130:	e1a01005 	mov	r1, r5
   1e134:	e1a00006 	mov	r0, r6
   1e138:	ebfffee4 	bl	1dcd0 <DWHCIDeviceStartChannel>
   1e13c:	e1a0000d 	mov	r0, sp
   1e140:	eb000806 	bl	20160 <_DWHCIRegister>
   1e144:	e28dd018 	add	sp, sp, #24
   1e148:	e8bd8070 	pop	{r4, r5, r6, pc}
   1e14c:	e1a00005 	mov	r0, r5
   1e150:	e3a01000 	mov	r1, #0
   1e154:	eb0009c0 	bl	2085c <DWHCITransferStageDataSetSubState>
   1e158:	e1a0000d 	mov	r0, sp
   1e15c:	e3e01102 	mvn	r1, #-2147483648	; 0x80000000
   1e160:	eb00086c 	bl	20318 <DWHCIRegisterAnd>
   1e164:	e3a01101 	mov	r1, #1073741824	; 0x40000000
   1e168:	e1a0000d 	mov	r0, sp
   1e16c:	eb000880 	bl	20374 <DWHCIRegisterOr>
   1e170:	e1a0000d 	mov	r0, sp
   1e174:	eb000816 	bl	201d4 <DWHCIRegisterWrite>
   1e178:	e284100c 	add	r1, r4, #12
   1e17c:	e28d000c 	add	r0, sp, #12
   1e180:	eb0007d7 	bl	200e4 <DWHCIRegister>
   1e184:	e3a01002 	mov	r1, #2
   1e188:	e28d000c 	add	r0, sp, #12
   1e18c:	eb00083a 	bl	2027c <DWHCIRegisterSet>
   1e190:	e28d000c 	add	r0, sp, #12
   1e194:	eb00080e 	bl	201d4 <DWHCIRegisterWrite>
   1e198:	e28d000c 	add	r0, sp, #12
   1e19c:	eb0007ef 	bl	20160 <_DWHCIRegister>
   1e1a0:	e1a0000d 	mov	r0, sp
   1e1a4:	eb0007ed 	bl	20160 <_DWHCIRegister>
   1e1a8:	e28dd018 	add	sp, sp, #24
   1e1ac:	e8bd8070 	pop	{r4, r5, r6, pc}
   1e1b0:	e3a02fc5 	mov	r2, #788	; 0x314
   1e1b4:	e59f1034 	ldr	r1, [pc, #52]	; 1e1f0 <DWHCIDeviceStartTransaction+0x128>
   1e1b8:	e59f0034 	ldr	r0, [pc, #52]	; 1e1f4 <DWHCIDeviceStartTransaction+0x12c>
   1e1bc:	ebffe597 	bl	17820 <uspi_assertion_failed>
   1e1c0:	eaffffcd 	b	1e0fc <DWHCIDeviceStartTransaction+0x34>
   1e1c4:	e59f202c 	ldr	r2, [pc, #44]	; 1e1f8 <DWHCIDeviceStartTransaction+0x130>
   1e1c8:	e59f1020 	ldr	r1, [pc, #32]	; 1e1f0 <DWHCIDeviceStartTransaction+0x128>
   1e1cc:	e59f0028 	ldr	r0, [pc, #40]	; 1e1fc <DWHCIDeviceStartTransaction+0x134>
   1e1d0:	ebffe592 	bl	17820 <uspi_assertion_failed>
   1e1d4:	eaffffc2 	b	1e0e4 <DWHCIDeviceStartTransaction+0x1c>
   1e1d8:	e3a02e31 	mov	r2, #784	; 0x310
   1e1dc:	e59f100c 	ldr	r1, [pc, #12]	; 1e1f0 <DWHCIDeviceStartTransaction+0x128>
   1e1e0:	e59f0018 	ldr	r0, [pc, #24]	; 1e200 <DWHCIDeviceStartTransaction+0x138>
   1e1e4:	ebffe58d 	bl	17820 <uspi_assertion_failed>
   1e1e8:	eaffffbb 	b	1e0dc <DWHCIDeviceStartTransaction+0x14>
   1e1ec:	0104c028 	.word	0x0104c028
   1e1f0:	000306e0 	.word	0x000306e0
   1e1f4:	0003070c 	.word	0x0003070c
   1e1f8:	00000312 	.word	0x00000312
   1e1fc:	000306fc 	.word	0x000306fc
   1e200:	000306f0 	.word	0x000306f0

0001e204 <DWHCIDeviceTimerHandler>:
   1e204:	e92d4070 	push	{r4, r5, r6, lr}
   1e208:	e2525000 	subs	r5, r2, #0
   1e20c:	e1a04001 	mov	r4, r1
   1e210:	0a00002c 	beq	1e2c8 <DWHCIDeviceTimerHandler+0xc4>
   1e214:	e3540000 	cmp	r4, #0
   1e218:	0a000030 	beq	1e2e0 <DWHCIDeviceTimerHandler+0xdc>
   1e21c:	e3a03000 	mov	r3, #0
   1e220:	ee073fba 	mcr	15, 0, r3, cr7, cr10, {5}
   1e224:	e1540003 	cmp	r4, r3
   1e228:	0a000034 	beq	1e300 <DWHCIDeviceTimerHandler+0xfc>
   1e22c:	e1a00004 	mov	r0, r4
   1e230:	eb00097c 	bl	20828 <DWHCITransferStageDataGetState>
   1e234:	e3500003 	cmp	r0, #3
   1e238:	0a000003 	beq	1e24c <DWHCIDeviceTimerHandler+0x48>
   1e23c:	e59f20d0 	ldr	r2, [pc, #208]	; 1e314 <DWHCIDeviceTimerHandler+0x110>
   1e240:	e59f10d0 	ldr	r1, [pc, #208]	; 1e318 <DWHCIDeviceTimerHandler+0x114>
   1e244:	e59f00d0 	ldr	r0, [pc, #208]	; 1e31c <DWHCIDeviceTimerHandler+0x118>
   1e248:	ebffe574 	bl	17820 <uspi_assertion_failed>
   1e24c:	e1a00004 	mov	r0, r4
   1e250:	eb000b53 	bl	20fa4 <DWHCITransferStageDataIsSplit>
   1e254:	e2501000 	subs	r1, r0, #0
   1e258:	0a000012 	beq	1e2a8 <DWHCIDeviceTimerHandler+0xa4>
   1e25c:	e3a01001 	mov	r1, #1
   1e260:	e1a00004 	mov	r0, r4
   1e264:	eb000961 	bl	207f0 <DWHCITransferStageDataSetState>
   1e268:	e3a01000 	mov	r1, #0
   1e26c:	e1a00004 	mov	r0, r4
   1e270:	eb000949 	bl	2079c <DWHCITransferStageDataSetSplitComplete>
   1e274:	e1a00004 	mov	r0, r4
   1e278:	eb000c18 	bl	212e0 <DWHCITransferStageDataGetFrameScheduler>
   1e27c:	e2506000 	subs	r6, r0, #0
   1e280:	0a00000b 	beq	1e2b4 <DWHCIDeviceTimerHandler+0xb0>
   1e284:	e5963004 	ldr	r3, [r6, #4]
   1e288:	e1a00006 	mov	r0, r6
   1e28c:	e12fff33 	blx	r3
   1e290:	e1a01004 	mov	r1, r4
   1e294:	e1a00005 	mov	r0, r5
   1e298:	ebffff8a 	bl	1e0c8 <DWHCIDeviceStartTransaction>
   1e29c:	e3a03000 	mov	r3, #0
   1e2a0:	ee073fba 	mcr	15, 0, r3, cr7, cr10, {5}
   1e2a4:	e8bd8070 	pop	{r4, r5, r6, pc}
   1e2a8:	e1a00004 	mov	r0, r4
   1e2ac:	eb00094f 	bl	207f0 <DWHCITransferStageDataSetState>
   1e2b0:	eafffff6 	b	1e290 <DWHCIDeviceTimerHandler+0x8c>
   1e2b4:	e59f2064 	ldr	r2, [pc, #100]	; 1e320 <DWHCIDeviceTimerHandler+0x11c>
   1e2b8:	e59f1058 	ldr	r1, [pc, #88]	; 1e318 <DWHCIDeviceTimerHandler+0x114>
   1e2bc:	e59f0060 	ldr	r0, [pc, #96]	; 1e324 <DWHCIDeviceTimerHandler+0x120>
   1e2c0:	ebffe556 	bl	17820 <uspi_assertion_failed>
   1e2c4:	eaffffee 	b	1e284 <DWHCIDeviceTimerHandler+0x80>
   1e2c8:	e59f2058 	ldr	r2, [pc, #88]	; 1e328 <DWHCIDeviceTimerHandler+0x124>
   1e2cc:	e59f1044 	ldr	r1, [pc, #68]	; 1e318 <DWHCIDeviceTimerHandler+0x114>
   1e2d0:	e59f0054 	ldr	r0, [pc, #84]	; 1e32c <DWHCIDeviceTimerHandler+0x128>
   1e2d4:	ebffe551 	bl	17820 <uspi_assertion_failed>
   1e2d8:	e3540000 	cmp	r4, #0
   1e2dc:	1affffce 	bne	1e21c <DWHCIDeviceTimerHandler+0x18>
   1e2e0:	e3a02d13 	mov	r2, #1216	; 0x4c0
   1e2e4:	e59f102c 	ldr	r1, [pc, #44]	; 1e318 <DWHCIDeviceTimerHandler+0x114>
   1e2e8:	e59f0040 	ldr	r0, [pc, #64]	; 1e330 <DWHCIDeviceTimerHandler+0x12c>
   1e2ec:	ebffe54b 	bl	17820 <uspi_assertion_failed>
   1e2f0:	e3a03000 	mov	r3, #0
   1e2f4:	ee073fba 	mcr	15, 0, r3, cr7, cr10, {5}
   1e2f8:	e1540003 	cmp	r4, r3
   1e2fc:	1affffca 	bne	1e22c <DWHCIDeviceTimerHandler+0x28>
   1e300:	e59f202c 	ldr	r2, [pc, #44]	; 1e334 <DWHCIDeviceTimerHandler+0x130>
   1e304:	e59f100c 	ldr	r1, [pc, #12]	; 1e318 <DWHCIDeviceTimerHandler+0x114>
   1e308:	e59f0020 	ldr	r0, [pc, #32]	; 1e330 <DWHCIDeviceTimerHandler+0x12c>
   1e30c:	ebffe543 	bl	17820 <uspi_assertion_failed>
   1e310:	eaffffc5 	b	1e22c <DWHCIDeviceTimerHandler+0x28>
   1e314:	000004c5 	.word	0x000004c5
   1e318:	000306e0 	.word	0x000306e0
   1e31c:	0003072c 	.word	0x0003072c
   1e320:	000004ce 	.word	0x000004ce
   1e324:	00030774 	.word	0x00030774
   1e328:	000004bd 	.word	0x000004bd
   1e32c:	000306f0 	.word	0x000306f0
   1e330:	000306fc 	.word	0x000306fc
   1e334:	000004c4 	.word	0x000004c4

0001e338 <DWHCIDeviceAllocateChannel>:
   1e338:	e92d4070 	push	{r4, r5, r6, lr}
   1e33c:	e2505000 	subs	r5, r0, #0
   1e340:	0a00001b 	beq	1e3b4 <DWHCIDeviceAllocateChannel+0x7c>
   1e344:	eb0031e1 	bl	2aad0 <uspi_EnterCritical>
   1e348:	e5951000 	ldr	r1, [r5]
   1e34c:	e3510000 	cmp	r1, #0
   1e350:	0a00000b 	beq	1e384 <DWHCIDeviceAllocateChannel+0x4c>
   1e354:	e5953004 	ldr	r3, [r5, #4]
   1e358:	e2133001 	ands	r3, r3, #1
   1e35c:	0a00000c 	beq	1e394 <DWHCIDeviceAllocateChannel+0x5c>
   1e360:	e3a04000 	mov	r4, #0
   1e364:	ea000002 	b	1e374 <DWHCIDeviceAllocateChannel+0x3c>
   1e368:	e5952004 	ldr	r2, [r5, #4]
   1e36c:	e1120003 	tst	r2, r3
   1e370:	0a000009 	beq	1e39c <DWHCIDeviceAllocateChannel+0x64>
   1e374:	e2844001 	add	r4, r4, #1
   1e378:	e1540001 	cmp	r4, r1
   1e37c:	e1a03083 	lsl	r3, r3, #1
   1e380:	1afffff8 	bne	1e368 <DWHCIDeviceAllocateChannel+0x30>
   1e384:	e3a04010 	mov	r4, #16
   1e388:	eb0031df 	bl	2ab0c <uspi_LeaveCritical>
   1e38c:	e1a00004 	mov	r0, r4
   1e390:	e8bd8070 	pop	{r4, r5, r6, pc}
   1e394:	e1a04003 	mov	r4, r3
   1e398:	e3a03001 	mov	r3, #1
   1e39c:	e5952004 	ldr	r2, [r5, #4]
   1e3a0:	e1823003 	orr	r3, r2, r3
   1e3a4:	e5853004 	str	r3, [r5, #4]
   1e3a8:	eb0031d7 	bl	2ab0c <uspi_LeaveCritical>
   1e3ac:	e1a00004 	mov	r0, r4
   1e3b0:	e8bd8070 	pop	{r4, r5, r6, pc}
   1e3b4:	e59f200c 	ldr	r2, [pc, #12]	; 1e3c8 <DWHCIDeviceAllocateChannel+0x90>
   1e3b8:	e59f100c 	ldr	r1, [pc, #12]	; 1e3cc <DWHCIDeviceAllocateChannel+0x94>
   1e3bc:	e59f000c 	ldr	r0, [pc, #12]	; 1e3d0 <DWHCIDeviceAllocateChannel+0x98>
   1e3c0:	ebffe516 	bl	17820 <uspi_assertion_failed>
   1e3c4:	eaffffde 	b	1e344 <DWHCIDeviceAllocateChannel+0xc>
   1e3c8:	000004dd 	.word	0x000004dd
   1e3cc:	000306e0 	.word	0x000306e0
   1e3d0:	000306f0 	.word	0x000306f0

0001e3d4 <DWHCIDeviceFreeChannel>:
   1e3d4:	e92d4070 	push	{r4, r5, r6, lr}
   1e3d8:	e2504000 	subs	r4, r0, #0
   1e3dc:	e1a06001 	mov	r6, r1
   1e3e0:	0a000016 	beq	1e440 <DWHCIDeviceFreeChannel+0x6c>
   1e3e4:	e5943000 	ldr	r3, [r4]
   1e3e8:	e1530006 	cmp	r3, r6
   1e3ec:	9a00000e 	bls	1e42c <DWHCIDeviceFreeChannel+0x58>
   1e3f0:	e3a05001 	mov	r5, #1
   1e3f4:	eb0031b5 	bl	2aad0 <uspi_EnterCritical>
   1e3f8:	e5943004 	ldr	r3, [r4, #4]
   1e3fc:	e1a05615 	lsl	r5, r5, r6
   1e400:	e1130005 	tst	r3, r5
   1e404:	1a000003 	bne	1e418 <DWHCIDeviceFreeChannel+0x44>
   1e408:	e59f2044 	ldr	r2, [pc, #68]	; 1e454 <DWHCIDeviceFreeChannel+0x80>
   1e40c:	e59f1044 	ldr	r1, [pc, #68]	; 1e458 <DWHCIDeviceFreeChannel+0x84>
   1e410:	e59f0044 	ldr	r0, [pc, #68]	; 1e45c <DWHCIDeviceFreeChannel+0x88>
   1e414:	ebffe501 	bl	17820 <uspi_assertion_failed>
   1e418:	e5943004 	ldr	r3, [r4, #4]
   1e41c:	e1c35005 	bic	r5, r3, r5
   1e420:	e5845004 	str	r5, [r4, #4]
   1e424:	e8bd4070 	pop	{r4, r5, r6, lr}
   1e428:	ea0031b7 	b	2ab0c <uspi_LeaveCritical>
   1e42c:	e59f202c 	ldr	r2, [pc, #44]	; 1e460 <DWHCIDeviceFreeChannel+0x8c>
   1e430:	e59f1020 	ldr	r1, [pc, #32]	; 1e458 <DWHCIDeviceFreeChannel+0x84>
   1e434:	e59f0028 	ldr	r0, [pc, #40]	; 1e464 <DWHCIDeviceFreeChannel+0x90>
   1e438:	ebffe4f8 	bl	17820 <uspi_assertion_failed>
   1e43c:	eaffffeb 	b	1e3f0 <DWHCIDeviceFreeChannel+0x1c>
   1e440:	e59f2020 	ldr	r2, [pc, #32]	; 1e468 <DWHCIDeviceFreeChannel+0x94>
   1e444:	e59f100c 	ldr	r1, [pc, #12]	; 1e458 <DWHCIDeviceFreeChannel+0x84>
   1e448:	e59f001c 	ldr	r0, [pc, #28]	; 1e46c <DWHCIDeviceFreeChannel+0x98>
   1e44c:	ebffe4f3 	bl	17820 <uspi_assertion_failed>
   1e450:	eaffffe3 	b	1e3e4 <DWHCIDeviceFreeChannel+0x10>
   1e454:	000004fe 	.word	0x000004fe
   1e458:	000306e0 	.word	0x000306e0
   1e45c:	0003078c 	.word	0x0003078c
   1e460:	000004f9 	.word	0x000004f9
   1e464:	0003070c 	.word	0x0003070c
   1e468:	000004f7 	.word	0x000004f7
   1e46c:	000306f0 	.word	0x000306f0

0001e470 <DWHCIDeviceTransferStageAsync>:
   1e470:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
   1e474:	e2504000 	subs	r4, r0, #0
   1e478:	e24dd00c 	sub	sp, sp, #12
   1e47c:	e1a07001 	mov	r7, r1
   1e480:	e1a08002 	mov	r8, r2
   1e484:	e1a09003 	mov	r9, r3
   1e488:	0a000035 	beq	1e564 <DWHCIDeviceTransferStageAsync+0xf4>
   1e48c:	e3570000 	cmp	r7, #0
   1e490:	0a000039 	beq	1e57c <DWHCIDeviceTransferStageAsync+0x10c>
   1e494:	e1a00004 	mov	r0, r4
   1e498:	ebffffa6 	bl	1e338 <DWHCIDeviceAllocateChannel>
   1e49c:	e5943000 	ldr	r3, [r4]
   1e4a0:	e1a05000 	mov	r5, r0
   1e4a4:	e1530000 	cmp	r3, r0
   1e4a8:	93a07000 	movls	r7, #0
   1e4ac:	8a000002 	bhi	1e4bc <DWHCIDeviceTransferStageAsync+0x4c>
   1e4b0:	e1a00007 	mov	r0, r7
   1e4b4:	e28dd00c 	add	sp, sp, #12
   1e4b8:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
   1e4bc:	e0606200 	rsb	r6, r0, r0, lsl #4
   1e4c0:	e0846186 	add	r6, r4, r6, lsl #3
   1e4c4:	e2866008 	add	r6, r6, #8
   1e4c8:	e1a03008 	mov	r3, r8
   1e4cc:	e1a02007 	mov	r2, r7
   1e4d0:	e1a00006 	mov	r0, r6
   1e4d4:	e1a01005 	mov	r1, r5
   1e4d8:	e58d9000 	str	r9, [sp]
   1e4dc:	eb000923 	bl	20970 <DWHCITransferStageData>
   1e4e0:	e1a01005 	mov	r1, r5
   1e4e4:	e1a00004 	mov	r0, r4
   1e4e8:	ebfffdbb 	bl	1dbdc <DWHCIDeviceEnableChannelInterrupt>
   1e4ec:	e1a00006 	mov	r0, r6
   1e4f0:	eb000aab 	bl	20fa4 <DWHCITransferStageDataIsSplit>
   1e4f4:	e2501000 	subs	r1, r0, #0
   1e4f8:	e1a00006 	mov	r0, r6
   1e4fc:	0a000016 	beq	1e55c <DWHCIDeviceTransferStageAsync+0xec>
   1e500:	eb0008f0 	bl	208c8 <DWHCITransferStageDataBeginSplitCycle>
   1e504:	e2507000 	subs	r7, r0, #0
   1e508:	0a000020 	beq	1e590 <DWHCIDeviceTransferStageAsync+0x120>
   1e50c:	e3a01001 	mov	r1, #1
   1e510:	e1a00006 	mov	r0, r6
   1e514:	eb0008b5 	bl	207f0 <DWHCITransferStageDataSetState>
   1e518:	e3a01000 	mov	r1, #0
   1e51c:	e1a00006 	mov	r0, r6
   1e520:	eb00089d 	bl	2079c <DWHCITransferStageDataSetSplitComplete>
   1e524:	e1a00006 	mov	r0, r6
   1e528:	eb000b6c 	bl	212e0 <DWHCITransferStageDataGetFrameScheduler>
   1e52c:	e2505000 	subs	r5, r0, #0
   1e530:	0a00001f 	beq	1e5b4 <DWHCIDeviceTransferStageAsync+0x144>
   1e534:	e5953004 	ldr	r3, [r5, #4]
   1e538:	e1a00005 	mov	r0, r5
   1e53c:	e12fff33 	blx	r3
   1e540:	e3a07001 	mov	r7, #1
   1e544:	e1a00004 	mov	r0, r4
   1e548:	e1a01006 	mov	r1, r6
   1e54c:	ebfffedd 	bl	1e0c8 <DWHCIDeviceStartTransaction>
   1e550:	e1a00007 	mov	r0, r7
   1e554:	e28dd00c 	add	sp, sp, #12
   1e558:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
   1e55c:	eb0008a3 	bl	207f0 <DWHCITransferStageDataSetState>
   1e560:	eafffff6 	b	1e540 <DWHCIDeviceTransferStageAsync+0xd0>
   1e564:	e59f205c 	ldr	r2, [pc, #92]	; 1e5c8 <DWHCIDeviceTransferStageAsync+0x158>
   1e568:	e59f105c 	ldr	r1, [pc, #92]	; 1e5cc <DWHCIDeviceTransferStageAsync+0x15c>
   1e56c:	e59f005c 	ldr	r0, [pc, #92]	; 1e5d0 <DWHCIDeviceTransferStageAsync+0x160>
   1e570:	ebffe4aa 	bl	17820 <uspi_assertion_failed>
   1e574:	e3570000 	cmp	r7, #0
   1e578:	1affffc5 	bne	1e494 <DWHCIDeviceTransferStageAsync+0x24>
   1e57c:	e59f2050 	ldr	r2, [pc, #80]	; 1e5d4 <DWHCIDeviceTransferStageAsync+0x164>
   1e580:	e59f1044 	ldr	r1, [pc, #68]	; 1e5cc <DWHCIDeviceTransferStageAsync+0x15c>
   1e584:	e59f004c 	ldr	r0, [pc, #76]	; 1e5d8 <DWHCIDeviceTransferStageAsync+0x168>
   1e588:	ebffe4a4 	bl	17820 <uspi_assertion_failed>
   1e58c:	eaffffc0 	b	1e494 <DWHCIDeviceTransferStageAsync+0x24>
   1e590:	e1a01005 	mov	r1, r5
   1e594:	e1a00004 	mov	r0, r4
   1e598:	ebfffdad 	bl	1dc54 <DWHCIDeviceDisableChannelInterrupt>
   1e59c:	e1a00006 	mov	r0, r6
   1e5a0:	eb000809 	bl	205cc <_DWHCITransferStageData>
   1e5a4:	e1a01005 	mov	r1, r5
   1e5a8:	e1a00004 	mov	r0, r4
   1e5ac:	ebffff88 	bl	1e3d4 <DWHCIDeviceFreeChannel>
   1e5b0:	eaffffbe 	b	1e4b0 <DWHCIDeviceTransferStageAsync+0x40>
   1e5b4:	e59f2020 	ldr	r2, [pc, #32]	; 1e5dc <DWHCIDeviceTransferStageAsync+0x16c>
   1e5b8:	e59f100c 	ldr	r1, [pc, #12]	; 1e5cc <DWHCIDeviceTransferStageAsync+0x15c>
   1e5bc:	e59f001c 	ldr	r0, [pc, #28]	; 1e5e0 <DWHCIDeviceTransferStageAsync+0x170>
   1e5c0:	ebffe496 	bl	17820 <uspi_assertion_failed>
   1e5c4:	eaffffda 	b	1e534 <DWHCIDeviceTransferStageAsync+0xc4>
   1e5c8:	000002e1 	.word	0x000002e1
   1e5cc:	000306e0 	.word	0x000306e0
   1e5d0:	000306f0 	.word	0x000306f0
   1e5d4:	000002e2 	.word	0x000002e2
   1e5d8:	000307b8 	.word	0x000307b8
   1e5dc:	00000305 	.word	0x00000305
   1e5e0:	00030774 	.word	0x00030774

0001e5e4 <DWHCIDeviceSubmitAsyncRequest>:
   1e5e4:	e92d4070 	push	{r4, r5, r6, lr}
   1e5e8:	e2505000 	subs	r5, r0, #0
   1e5ec:	e1a04001 	mov	r4, r1
   1e5f0:	0a00002d 	beq	1e6ac <DWHCIDeviceSubmitAsyncRequest+0xc8>
   1e5f4:	e3a03000 	mov	r3, #0
   1e5f8:	ee073fba 	mcr	15, 0, r3, cr7, cr10, {5}
   1e5fc:	e1540003 	cmp	r4, r3
   1e600:	0a000024 	beq	1e698 <DWHCIDeviceSubmitAsyncRequest+0xb4>
   1e604:	e1a00004 	mov	r0, r4
   1e608:	eb001244 	bl	22f20 <USBRequestGetEndpoint>
   1e60c:	eb001152 	bl	22b5c <USBEndpointGetType>
   1e610:	e3500001 	cmp	r0, #1
   1e614:	1a000015 	bne	1e670 <DWHCIDeviceSubmitAsyncRequest+0x8c>
   1e618:	e1a00004 	mov	r0, r4
   1e61c:	eb0012c5 	bl	23138 <USBRequestGetBufLen>
   1e620:	e3500000 	cmp	r0, #0
   1e624:	1a000003 	bne	1e638 <DWHCIDeviceSubmitAsyncRequest+0x54>
   1e628:	e59f2090 	ldr	r2, [pc, #144]	; 1e6c0 <DWHCIDeviceSubmitAsyncRequest+0xdc>
   1e62c:	e59f1090 	ldr	r1, [pc, #144]	; 1e6c4 <DWHCIDeviceSubmitAsyncRequest+0xe0>
   1e630:	e59f0090 	ldr	r0, [pc, #144]	; 1e6c8 <DWHCIDeviceSubmitAsyncRequest+0xe4>
   1e634:	ebffe479 	bl	17820 <uspi_assertion_failed>
   1e638:	e3a01000 	mov	r1, #0
   1e63c:	e1a00004 	mov	r0, r4
   1e640:	eb00124a 	bl	22f70 <USBRequestSetStatus>
   1e644:	e1a00004 	mov	r0, r4
   1e648:	eb001234 	bl	22f20 <USBRequestGetEndpoint>
   1e64c:	eb00114f 	bl	22b90 <USBEndpointIsDirectionIn>
   1e650:	e1a01004 	mov	r1, r4
   1e654:	e1a02000 	mov	r2, r0
   1e658:	e3a03000 	mov	r3, #0
   1e65c:	e1a00005 	mov	r0, r5
   1e660:	ebffff82 	bl	1e470 <DWHCIDeviceTransferStageAsync>
   1e664:	e3a03000 	mov	r3, #0
   1e668:	ee073fba 	mcr	15, 0, r3, cr7, cr10, {5}
   1e66c:	e8bd8070 	pop	{r4, r5, r6, pc}
   1e670:	e1a00004 	mov	r0, r4
   1e674:	eb001229 	bl	22f20 <USBRequestGetEndpoint>
   1e678:	eb001137 	bl	22b5c <USBEndpointGetType>
   1e67c:	e3500002 	cmp	r0, #2
   1e680:	0affffe4 	beq	1e618 <DWHCIDeviceSubmitAsyncRequest+0x34>
   1e684:	e3a02f56 	mov	r2, #344	; 0x158
   1e688:	e59f1034 	ldr	r1, [pc, #52]	; 1e6c4 <DWHCIDeviceSubmitAsyncRequest+0xe0>
   1e68c:	e59f0038 	ldr	r0, [pc, #56]	; 1e6cc <DWHCIDeviceSubmitAsyncRequest+0xe8>
   1e690:	ebffe462 	bl	17820 <uspi_assertion_failed>
   1e694:	eaffffdf 	b	1e618 <DWHCIDeviceSubmitAsyncRequest+0x34>
   1e698:	e59f2030 	ldr	r2, [pc, #48]	; 1e6d0 <DWHCIDeviceSubmitAsyncRequest+0xec>
   1e69c:	e59f1020 	ldr	r1, [pc, #32]	; 1e6c4 <DWHCIDeviceSubmitAsyncRequest+0xe0>
   1e6a0:	e59f002c 	ldr	r0, [pc, #44]	; 1e6d4 <DWHCIDeviceSubmitAsyncRequest+0xf0>
   1e6a4:	ebffe45d 	bl	17820 <uspi_assertion_failed>
   1e6a8:	eaffffd5 	b	1e604 <DWHCIDeviceSubmitAsyncRequest+0x20>
   1e6ac:	e59f2024 	ldr	r2, [pc, #36]	; 1e6d8 <DWHCIDeviceSubmitAsyncRequest+0xf4>
   1e6b0:	e59f100c 	ldr	r1, [pc, #12]	; 1e6c4 <DWHCIDeviceSubmitAsyncRequest+0xe0>
   1e6b4:	e59f0020 	ldr	r0, [pc, #32]	; 1e6dc <DWHCIDeviceSubmitAsyncRequest+0xf8>
   1e6b8:	ebffe458 	bl	17820 <uspi_assertion_failed>
   1e6bc:	eaffffcc 	b	1e5f4 <DWHCIDeviceSubmitAsyncRequest+0x10>
   1e6c0:	00000159 	.word	0x00000159
   1e6c4:	000306e0 	.word	0x000306e0
   1e6c8:	00030858 	.word	0x00030858
   1e6cc:	000307c4 	.word	0x000307c4
   1e6d0:	00000156 	.word	0x00000156
   1e6d4:	000307b8 	.word	0x000307b8
   1e6d8:	00000152 	.word	0x00000152
   1e6dc:	000306f0 	.word	0x000306f0

0001e6e0 <DWHCIDeviceTransferStage>:
   1e6e0:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   1e6e4:	e2504000 	subs	r4, r0, #0
   1e6e8:	e1a05001 	mov	r5, r1
   1e6ec:	e1a06002 	mov	r6, r2
   1e6f0:	e1a07003 	mov	r7, r3
   1e6f4:	0a000024 	beq	1e78c <DWHCIDeviceTransferStage+0xac>
   1e6f8:	e3550000 	cmp	r5, #0
   1e6fc:	0a00001d 	beq	1e778 <DWHCIDeviceTransferStage+0x98>
   1e700:	e1a03004 	mov	r3, r4
   1e704:	e3a02000 	mov	r2, #0
   1e708:	e59f1090 	ldr	r1, [pc, #144]	; 1e7a0 <DWHCIDeviceTransferStage+0xc0>
   1e70c:	e1a00005 	mov	r0, r5
   1e710:	eb001295 	bl	2316c <USBRequestSetCompletionRoutine>
   1e714:	e5943788 	ldr	r3, [r4, #1928]	; 0x788
   1e718:	e3530000 	cmp	r3, #0
   1e71c:	1a000010 	bne	1e764 <DWHCIDeviceTransferStage+0x84>
   1e720:	e3a01001 	mov	r1, #1
   1e724:	e1a03007 	mov	r3, r7
   1e728:	e5841788 	str	r1, [r4, #1928]	; 0x788
   1e72c:	e1a02006 	mov	r2, r6
   1e730:	e1a01005 	mov	r1, r5
   1e734:	e1a00004 	mov	r0, r4
   1e738:	ebffff4c 	bl	1e470 <DWHCIDeviceTransferStageAsync>
   1e73c:	e2503000 	subs	r3, r0, #0
   1e740:	0a000005 	beq	1e75c <DWHCIDeviceTransferStage+0x7c>
   1e744:	e5943788 	ldr	r3, [r4, #1928]	; 0x788
   1e748:	e3530000 	cmp	r3, #0
   1e74c:	1afffffc 	bne	1e744 <DWHCIDeviceTransferStage+0x64>
   1e750:	e1a00005 	mov	r0, r5
   1e754:	e8bd41f0 	pop	{r4, r5, r6, r7, r8, lr}
   1e758:	ea001220 	b	22fe0 <USBRequestGetStatus>
   1e75c:	e5843788 	str	r3, [r4, #1928]	; 0x788
   1e760:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   1e764:	e59f2038 	ldr	r2, [pc, #56]	; 1e7a4 <DWHCIDeviceTransferStage+0xc4>
   1e768:	e59f1038 	ldr	r1, [pc, #56]	; 1e7a8 <DWHCIDeviceTransferStage+0xc8>
   1e76c:	e59f0038 	ldr	r0, [pc, #56]	; 1e7ac <DWHCIDeviceTransferStage+0xcc>
   1e770:	ebffe42a 	bl	17820 <uspi_assertion_failed>
   1e774:	eaffffe9 	b	1e720 <DWHCIDeviceTransferStage+0x40>
   1e778:	e59f2030 	ldr	r2, [pc, #48]	; 1e7b0 <DWHCIDeviceTransferStage+0xd0>
   1e77c:	e59f1024 	ldr	r1, [pc, #36]	; 1e7a8 <DWHCIDeviceTransferStage+0xc8>
   1e780:	e59f002c 	ldr	r0, [pc, #44]	; 1e7b4 <DWHCIDeviceTransferStage+0xd4>
   1e784:	ebffe425 	bl	17820 <uspi_assertion_failed>
   1e788:	eaffffdc 	b	1e700 <DWHCIDeviceTransferStage+0x20>
   1e78c:	e3a02d0b 	mov	r2, #704	; 0x2c0
   1e790:	e59f1010 	ldr	r1, [pc, #16]	; 1e7a8 <DWHCIDeviceTransferStage+0xc8>
   1e794:	e59f001c 	ldr	r0, [pc, #28]	; 1e7b8 <DWHCIDeviceTransferStage+0xd8>
   1e798:	ebffe420 	bl	17820 <uspi_assertion_failed>
   1e79c:	eaffffd5 	b	1e6f8 <DWHCIDeviceTransferStage+0x18>
   1e7a0:	0001da08 	.word	0x0001da08
   1e7a4:	000002c5 	.word	0x000002c5
   1e7a8:	000306e0 	.word	0x000306e0
   1e7ac:	00030878 	.word	0x00030878
   1e7b0:	000002c2 	.word	0x000002c2
   1e7b4:	000307b8 	.word	0x000307b8
   1e7b8:	000306f0 	.word	0x000306f0

0001e7bc <DWHCIDeviceSubmitBlockingRequest>:
   1e7bc:	e92d4070 	push	{r4, r5, r6, lr}
   1e7c0:	e2505000 	subs	r5, r0, #0
   1e7c4:	e1a04001 	mov	r4, r1
   1e7c8:	0a000080 	beq	1e9d0 <DWHCIDeviceSubmitBlockingRequest+0x214>
   1e7cc:	e3a03000 	mov	r3, #0
   1e7d0:	ee073fba 	mcr	15, 0, r3, cr7, cr10, {5}
   1e7d4:	e1540003 	cmp	r4, r3
   1e7d8:	0a000077 	beq	1e9bc <DWHCIDeviceSubmitBlockingRequest+0x200>
   1e7dc:	e3a01000 	mov	r1, #0
   1e7e0:	e1a00004 	mov	r0, r4
   1e7e4:	eb0011e1 	bl	22f70 <USBRequestSetStatus>
   1e7e8:	e1a00004 	mov	r0, r4
   1e7ec:	eb0011cb 	bl	22f20 <USBRequestGetEndpoint>
   1e7f0:	eb0010d9 	bl	22b5c <USBEndpointGetType>
   1e7f4:	e3500000 	cmp	r0, #0
   1e7f8:	e1a00004 	mov	r0, r4
   1e7fc:	1a00001a 	bne	1e86c <DWHCIDeviceSubmitBlockingRequest+0xb0>
   1e800:	eb001217 	bl	23064 <USBRequestGetSetupData>
   1e804:	e2506000 	subs	r6, r0, #0
   1e808:	0a000066 	beq	1e9a8 <DWHCIDeviceSubmitBlockingRequest+0x1ec>
   1e80c:	e1d630d0 	ldrsb	r3, [r6]
   1e810:	e1a00004 	mov	r0, r4
   1e814:	e3530000 	cmp	r3, #0
   1e818:	ba000035 	blt	1e8f4 <DWHCIDeviceSubmitBlockingRequest+0x138>
   1e81c:	eb001245 	bl	23138 <USBRequestGetBufLen>
   1e820:	e2503000 	subs	r3, r0, #0
   1e824:	1a000050 	bne	1e96c <DWHCIDeviceSubmitBlockingRequest+0x1b0>
   1e828:	e1a02003 	mov	r2, r3
   1e82c:	e1a01004 	mov	r1, r4
   1e830:	e1a00005 	mov	r0, r5
   1e834:	ebffffa9 	bl	1e6e0 <DWHCIDeviceTransferStage>
   1e838:	e3500000 	cmp	r0, #0
   1e83c:	0a00001c 	beq	1e8b4 <DWHCIDeviceSubmitBlockingRequest+0xf8>
   1e840:	e3a03001 	mov	r3, #1
   1e844:	e1a01004 	mov	r1, r4
   1e848:	e1a00005 	mov	r0, r5
   1e84c:	e1a02003 	mov	r2, r3
   1e850:	ebffffa2 	bl	1e6e0 <DWHCIDeviceTransferStage>
   1e854:	e3500000 	cmp	r0, #0
   1e858:	0a000015 	beq	1e8b4 <DWHCIDeviceSubmitBlockingRequest+0xf8>
   1e85c:	e3a03000 	mov	r3, #0
   1e860:	ee073fba 	mcr	15, 0, r3, cr7, cr10, {5}
   1e864:	e3a00001 	mov	r0, #1
   1e868:	e8bd8070 	pop	{r4, r5, r6, pc}
   1e86c:	eb0011ab 	bl	22f20 <USBRequestGetEndpoint>
   1e870:	eb0010b9 	bl	22b5c <USBEndpointGetType>
   1e874:	e3500001 	cmp	r0, #1
   1e878:	1a00000f 	bne	1e8bc <DWHCIDeviceSubmitBlockingRequest+0x100>
   1e87c:	e1a00004 	mov	r0, r4
   1e880:	eb00122c 	bl	23138 <USBRequestGetBufLen>
   1e884:	e3500000 	cmp	r0, #0
   1e888:	0a000032 	beq	1e958 <DWHCIDeviceSubmitBlockingRequest+0x19c>
   1e88c:	e1a00004 	mov	r0, r4
   1e890:	eb0011a2 	bl	22f20 <USBRequestGetEndpoint>
   1e894:	eb0010bd 	bl	22b90 <USBEndpointIsDirectionIn>
   1e898:	e1a01004 	mov	r1, r4
   1e89c:	e1a02000 	mov	r2, r0
   1e8a0:	e3a03000 	mov	r3, #0
   1e8a4:	e1a00005 	mov	r0, r5
   1e8a8:	ebffff8c 	bl	1e6e0 <DWHCIDeviceTransferStage>
   1e8ac:	e3500000 	cmp	r0, #0
   1e8b0:	1affffe9 	bne	1e85c <DWHCIDeviceSubmitBlockingRequest+0xa0>
   1e8b4:	e3a00000 	mov	r0, #0
   1e8b8:	e8bd8070 	pop	{r4, r5, r6, pc}
   1e8bc:	e1a00004 	mov	r0, r4
   1e8c0:	eb001196 	bl	22f20 <USBRequestGetEndpoint>
   1e8c4:	eb0010a4 	bl	22b5c <USBEndpointGetType>
   1e8c8:	e3500002 	cmp	r0, #2
   1e8cc:	0affffea 	beq	1e87c <DWHCIDeviceSubmitBlockingRequest+0xc0>
   1e8d0:	e59f2120 	ldr	r2, [pc, #288]	; 1e9f8 <DWHCIDeviceSubmitBlockingRequest+0x23c>
   1e8d4:	e59f1120 	ldr	r1, [pc, #288]	; 1e9fc <DWHCIDeviceSubmitBlockingRequest+0x240>
   1e8d8:	e59f0120 	ldr	r0, [pc, #288]	; 1ea00 <DWHCIDeviceSubmitBlockingRequest+0x244>
   1e8dc:	ebffe3cf 	bl	17820 <uspi_assertion_failed>
   1e8e0:	e1a00004 	mov	r0, r4
   1e8e4:	eb001213 	bl	23138 <USBRequestGetBufLen>
   1e8e8:	e3500000 	cmp	r0, #0
   1e8ec:	1affffe6 	bne	1e88c <DWHCIDeviceSubmitBlockingRequest+0xd0>
   1e8f0:	ea000018 	b	1e958 <DWHCIDeviceSubmitBlockingRequest+0x19c>
   1e8f4:	eb00120f 	bl	23138 <USBRequestGetBufLen>
   1e8f8:	e3500000 	cmp	r0, #0
   1e8fc:	0a000038 	beq	1e9e4 <DWHCIDeviceSubmitBlockingRequest+0x228>
   1e900:	e3a03000 	mov	r3, #0
   1e904:	e1a01004 	mov	r1, r4
   1e908:	e1a02003 	mov	r2, r3
   1e90c:	e1a00005 	mov	r0, r5
   1e910:	ebffff72 	bl	1e6e0 <DWHCIDeviceTransferStage>
   1e914:	e3500000 	cmp	r0, #0
   1e918:	0affffe5 	beq	1e8b4 <DWHCIDeviceSubmitBlockingRequest+0xf8>
   1e91c:	e3a03000 	mov	r3, #0
   1e920:	e3a02001 	mov	r2, #1
   1e924:	e1a01004 	mov	r1, r4
   1e928:	e1a00005 	mov	r0, r5
   1e92c:	ebffff6b 	bl	1e6e0 <DWHCIDeviceTransferStage>
   1e930:	e3500000 	cmp	r0, #0
   1e934:	0affffde 	beq	1e8b4 <DWHCIDeviceSubmitBlockingRequest+0xf8>
   1e938:	e1a01004 	mov	r1, r4
   1e93c:	e1a00005 	mov	r0, r5
   1e940:	e3a03001 	mov	r3, #1
   1e944:	e3a02000 	mov	r2, #0
   1e948:	ebffff64 	bl	1e6e0 <DWHCIDeviceTransferStage>
   1e94c:	e3500000 	cmp	r0, #0
   1e950:	1affffc1 	bne	1e85c <DWHCIDeviceSubmitBlockingRequest+0xa0>
   1e954:	eaffffd6 	b	1e8b4 <DWHCIDeviceSubmitBlockingRequest+0xf8>
   1e958:	e59f20a4 	ldr	r2, [pc, #164]	; 1ea04 <DWHCIDeviceSubmitBlockingRequest+0x248>
   1e95c:	e59f1098 	ldr	r1, [pc, #152]	; 1e9fc <DWHCIDeviceSubmitBlockingRequest+0x240>
   1e960:	e59f00a0 	ldr	r0, [pc, #160]	; 1ea08 <DWHCIDeviceSubmitBlockingRequest+0x24c>
   1e964:	ebffe3ad 	bl	17820 <uspi_assertion_failed>
   1e968:	eaffffc7 	b	1e88c <DWHCIDeviceSubmitBlockingRequest+0xd0>
   1e96c:	e3a03000 	mov	r3, #0
   1e970:	e1a01004 	mov	r1, r4
   1e974:	e1a02003 	mov	r2, r3
   1e978:	e1a00005 	mov	r0, r5
   1e97c:	ebffff57 	bl	1e6e0 <DWHCIDeviceTransferStage>
   1e980:	e3500000 	cmp	r0, #0
   1e984:	0affffca 	beq	1e8b4 <DWHCIDeviceSubmitBlockingRequest+0xf8>
   1e988:	e3a03000 	mov	r3, #0
   1e98c:	e1a01004 	mov	r1, r4
   1e990:	e1a02003 	mov	r2, r3
   1e994:	e1a00005 	mov	r0, r5
   1e998:	ebffff50 	bl	1e6e0 <DWHCIDeviceTransferStage>
   1e99c:	e3500000 	cmp	r0, #0
   1e9a0:	0affffc3 	beq	1e8b4 <DWHCIDeviceSubmitBlockingRequest+0xf8>
   1e9a4:	eaffffa5 	b	1e840 <DWHCIDeviceSubmitBlockingRequest+0x84>
   1e9a8:	e59f205c 	ldr	r2, [pc, #92]	; 1ea0c <DWHCIDeviceSubmitBlockingRequest+0x250>
   1e9ac:	e59f1048 	ldr	r1, [pc, #72]	; 1e9fc <DWHCIDeviceSubmitBlockingRequest+0x240>
   1e9b0:	e59f0058 	ldr	r0, [pc, #88]	; 1ea10 <DWHCIDeviceSubmitBlockingRequest+0x254>
   1e9b4:	ebffe399 	bl	17820 <uspi_assertion_failed>
   1e9b8:	eaffff93 	b	1e80c <DWHCIDeviceSubmitBlockingRequest+0x50>
   1e9bc:	e59f2050 	ldr	r2, [pc, #80]	; 1ea14 <DWHCIDeviceSubmitBlockingRequest+0x258>
   1e9c0:	e59f1034 	ldr	r1, [pc, #52]	; 1e9fc <DWHCIDeviceSubmitBlockingRequest+0x240>
   1e9c4:	e59f004c 	ldr	r0, [pc, #76]	; 1ea18 <DWHCIDeviceSubmitBlockingRequest+0x25c>
   1e9c8:	ebffe394 	bl	17820 <uspi_assertion_failed>
   1e9cc:	eaffff82 	b	1e7dc <DWHCIDeviceSubmitBlockingRequest+0x20>
   1e9d0:	e59f2044 	ldr	r2, [pc, #68]	; 1ea1c <DWHCIDeviceSubmitBlockingRequest+0x260>
   1e9d4:	e59f1020 	ldr	r1, [pc, #32]	; 1e9fc <DWHCIDeviceSubmitBlockingRequest+0x240>
   1e9d8:	e59f0040 	ldr	r0, [pc, #64]	; 1ea20 <DWHCIDeviceSubmitBlockingRequest+0x264>
   1e9dc:	ebffe38f 	bl	17820 <uspi_assertion_failed>
   1e9e0:	eaffff79 	b	1e7cc <DWHCIDeviceSubmitBlockingRequest+0x10>
   1e9e4:	e59f2038 	ldr	r2, [pc, #56]	; 1ea24 <DWHCIDeviceSubmitBlockingRequest+0x268>
   1e9e8:	e59f100c 	ldr	r1, [pc, #12]	; 1e9fc <DWHCIDeviceSubmitBlockingRequest+0x240>
   1e9ec:	e59f0014 	ldr	r0, [pc, #20]	; 1ea08 <DWHCIDeviceSubmitBlockingRequest+0x24c>
   1e9f0:	ebffe38a 	bl	17820 <uspi_assertion_failed>
   1e9f4:	eaffffc1 	b	1e900 <DWHCIDeviceSubmitBlockingRequest+0x144>
   1e9f8:	00000142 	.word	0x00000142
   1e9fc:	000306e0 	.word	0x000306e0
   1ea00:	000307c4 	.word	0x000307c4
   1ea04:	00000143 	.word	0x00000143
   1ea08:	00030858 	.word	0x00030858
   1ea0c:	0000011d 	.word	0x0000011d
   1ea10:	0003088c 	.word	0x0003088c
   1ea14:	00000117 	.word	0x00000117
   1ea18:	000307b8 	.word	0x000307b8
   1ea1c:	00000113 	.word	0x00000113
   1ea20:	000306f0 	.word	0x000306f0
   1ea24:	00000121 	.word	0x00000121

0001ea28 <DWHCIDeviceControlMessage>:
   1ea28:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1ea2c:	e2505000 	subs	r5, r0, #0
   1ea30:	e24dd038 	sub	sp, sp, #56	; 0x38
   1ea34:	e1a0a001 	mov	sl, r1
   1ea38:	e1a09002 	mov	r9, r2
   1ea3c:	e1a08003 	mov	r8, r3
   1ea40:	e1dd75b8 	ldrh	r7, [sp, #88]	; 0x58
   1ea44:	e1dd65bc 	ldrh	r6, [sp, #92]	; 0x5c
   1ea48:	e1dd46b4 	ldrh	r4, [sp, #100]	; 0x64
   1ea4c:	0a000018 	beq	1eab4 <DWHCIDeviceControlMessage+0x8c>
   1ea50:	e28d300c 	add	r3, sp, #12
   1ea54:	e1a0100a 	mov	r1, sl
   1ea58:	e58d3000 	str	r3, [sp]
   1ea5c:	e28d0014 	add	r0, sp, #20
   1ea60:	e1a03004 	mov	r3, r4
   1ea64:	e59d2060 	ldr	r2, [sp, #96]	; 0x60
   1ea68:	e5cd900c 	strb	r9, [sp, #12]
   1ea6c:	e5cd800d 	strb	r8, [sp, #13]
   1ea70:	e1cd70be 	strh	r7, [sp, #14]
   1ea74:	e1cd61b0 	strh	r6, [sp, #16]
   1ea78:	e1cd41b2 	strh	r4, [sp, #18]
   1ea7c:	eb0010e7 	bl	22e20 <USBRequest>
   1ea80:	e28d1014 	add	r1, sp, #20
   1ea84:	e1a00005 	mov	r0, r5
   1ea88:	ebffff4b 	bl	1e7bc <DWHCIDeviceSubmitBlockingRequest>
   1ea8c:	e3500000 	cmp	r0, #0
   1ea90:	0a00000c 	beq	1eac8 <DWHCIDeviceControlMessage+0xa0>
   1ea94:	e28d0014 	add	r0, sp, #20
   1ea98:	eb00115d 	bl	23014 <USBRequestGetResultLength>
   1ea9c:	e1a04000 	mov	r4, r0
   1eaa0:	e28d0014 	add	r0, sp, #20
   1eaa4:	eb00110d 	bl	22ee0 <_USBRequest>
   1eaa8:	e1a00004 	mov	r0, r4
   1eaac:	e28dd038 	add	sp, sp, #56	; 0x38
   1eab0:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1eab4:	e3a020e5 	mov	r2, #229	; 0xe5
   1eab8:	e59f1010 	ldr	r1, [pc, #16]	; 1ead0 <DWHCIDeviceControlMessage+0xa8>
   1eabc:	e59f0010 	ldr	r0, [pc, #16]	; 1ead4 <DWHCIDeviceControlMessage+0xac>
   1eac0:	ebffe356 	bl	17820 <uspi_assertion_failed>
   1eac4:	eaffffe1 	b	1ea50 <DWHCIDeviceControlMessage+0x28>
   1eac8:	e3e04000 	mvn	r4, #0
   1eacc:	eafffff3 	b	1eaa0 <DWHCIDeviceControlMessage+0x78>
   1ead0:	000306e0 	.word	0x000306e0
   1ead4:	000306f0 	.word	0x000306f0

0001ead8 <DWHCIDeviceGetDescriptor>:
   1ead8:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   1eadc:	e2504000 	subs	r4, r0, #0
   1eae0:	e24dd018 	sub	sp, sp, #24
   1eae4:	e1a05001 	mov	r5, r1
   1eae8:	e1a08002 	mov	r8, r2
   1eaec:	e59d7030 	ldr	r7, [sp, #48]	; 0x30
   1eaf0:	e5dd6038 	ldrb	r6, [sp, #56]	; 0x38
   1eaf4:	0a00000e 	beq	1eb34 <DWHCIDeviceGetDescriptor+0x5c>
   1eaf8:	e3a0e000 	mov	lr, #0
   1eafc:	e59d2034 	ldr	r2, [sp, #52]	; 0x34
   1eb00:	e1833408 	orr	r3, r3, r8, lsl #8
   1eb04:	e6ffc072 	uxth	ip, r2
   1eb08:	e58d3000 	str	r3, [sp]
   1eb0c:	e58d7008 	str	r7, [sp, #8]
   1eb10:	e1a02006 	mov	r2, r6
   1eb14:	e1a01005 	mov	r1, r5
   1eb18:	e1a00004 	mov	r0, r4
   1eb1c:	e58de004 	str	lr, [sp, #4]
   1eb20:	e58dc00c 	str	ip, [sp, #12]
   1eb24:	e3a03006 	mov	r3, #6
   1eb28:	ebffffbe 	bl	1ea28 <DWHCIDeviceControlMessage>
   1eb2c:	e28dd018 	add	sp, sp, #24
   1eb30:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   1eb34:	e3a020bd 	mov	r2, #189	; 0xbd
   1eb38:	e59f1010 	ldr	r1, [pc, #16]	; 1eb50 <DWHCIDeviceGetDescriptor+0x78>
   1eb3c:	e59f0010 	ldr	r0, [pc, #16]	; 1eb54 <DWHCIDeviceGetDescriptor+0x7c>
   1eb40:	e58d3014 	str	r3, [sp, #20]
   1eb44:	ebffe335 	bl	17820 <uspi_assertion_failed>
   1eb48:	e59d3014 	ldr	r3, [sp, #20]
   1eb4c:	eaffffe9 	b	1eaf8 <DWHCIDeviceGetDescriptor+0x20>
   1eb50:	000306e0 	.word	0x000306e0
   1eb54:	000306f0 	.word	0x000306f0

0001eb58 <DWHCIDeviceSetAddress>:
   1eb58:	e92d40f0 	push	{r4, r5, r6, r7, lr}
   1eb5c:	e2505000 	subs	r5, r0, #0
   1eb60:	e24dd014 	sub	sp, sp, #20
   1eb64:	e1a06001 	mov	r6, r1
   1eb68:	e1a07002 	mov	r7, r2
   1eb6c:	0a000011 	beq	1ebb8 <DWHCIDeviceSetAddress+0x60>
   1eb70:	e3a04000 	mov	r4, #0
   1eb74:	e58d7000 	str	r7, [sp]
   1eb78:	e1a01006 	mov	r1, r6
   1eb7c:	e1a00005 	mov	r0, r5
   1eb80:	e58d400c 	str	r4, [sp, #12]
   1eb84:	e58d4008 	str	r4, [sp, #8]
   1eb88:	e58d4004 	str	r4, [sp, #4]
   1eb8c:	e1a02004 	mov	r2, r4
   1eb90:	e3a03005 	mov	r3, #5
   1eb94:	ebffffa3 	bl	1ea28 <DWHCIDeviceControlMessage>
   1eb98:	e1500004 	cmp	r0, r4
   1eb9c:	b1a00004 	movlt	r0, r4
   1eba0:	ba000002 	blt	1ebb0 <DWHCIDeviceSetAddress+0x58>
   1eba4:	e3a00032 	mov	r0, #50	; 0x32
   1eba8:	ebffe2fe 	bl	177a8 <MsDelay>
   1ebac:	e3a00001 	mov	r0, #1
   1ebb0:	e28dd014 	add	sp, sp, #20
   1ebb4:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
   1ebb8:	e3a020c7 	mov	r2, #199	; 0xc7
   1ebbc:	e59f1008 	ldr	r1, [pc, #8]	; 1ebcc <DWHCIDeviceSetAddress+0x74>
   1ebc0:	e59f0008 	ldr	r0, [pc, #8]	; 1ebd0 <DWHCIDeviceSetAddress+0x78>
   1ebc4:	ebffe315 	bl	17820 <uspi_assertion_failed>
   1ebc8:	eaffffe8 	b	1eb70 <DWHCIDeviceSetAddress+0x18>
   1ebcc:	000306e0 	.word	0x000306e0
   1ebd0:	000306f0 	.word	0x000306f0

0001ebd4 <DWHCIDeviceSetConfiguration>:
   1ebd4:	e92d40f0 	push	{r4, r5, r6, r7, lr}
   1ebd8:	e2505000 	subs	r5, r0, #0
   1ebdc:	e24dd014 	sub	sp, sp, #20
   1ebe0:	e1a06001 	mov	r6, r1
   1ebe4:	e1a07002 	mov	r7, r2
   1ebe8:	0a000011 	beq	1ec34 <DWHCIDeviceSetConfiguration+0x60>
   1ebec:	e3a04000 	mov	r4, #0
   1ebf0:	e58d7000 	str	r7, [sp]
   1ebf4:	e1a01006 	mov	r1, r6
   1ebf8:	e1a00005 	mov	r0, r5
   1ebfc:	e58d400c 	str	r4, [sp, #12]
   1ec00:	e58d4008 	str	r4, [sp, #8]
   1ec04:	e58d4004 	str	r4, [sp, #4]
   1ec08:	e1a02004 	mov	r2, r4
   1ec0c:	e3a03009 	mov	r3, #9
   1ec10:	ebffff84 	bl	1ea28 <DWHCIDeviceControlMessage>
   1ec14:	e1500004 	cmp	r0, r4
   1ec18:	b1a00004 	movlt	r0, r4
   1ec1c:	ba000002 	blt	1ec2c <DWHCIDeviceSetConfiguration+0x58>
   1ec20:	e3a00032 	mov	r0, #50	; 0x32
   1ec24:	ebffe2df 	bl	177a8 <MsDelay>
   1ec28:	e3a00001 	mov	r0, #1
   1ec2c:	e28dd014 	add	sp, sp, #20
   1ec30:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
   1ec34:	e3a020d5 	mov	r2, #213	; 0xd5
   1ec38:	e59f1008 	ldr	r1, [pc, #8]	; 1ec48 <DWHCIDeviceSetConfiguration+0x74>
   1ec3c:	e59f0008 	ldr	r0, [pc, #8]	; 1ec4c <DWHCIDeviceSetConfiguration+0x78>
   1ec40:	ebffe2f6 	bl	17820 <uspi_assertion_failed>
   1ec44:	eaffffe8 	b	1ebec <DWHCIDeviceSetConfiguration+0x18>
   1ec48:	000306e0 	.word	0x000306e0
   1ec4c:	000306f0 	.word	0x000306f0

0001ec50 <DWHCIDeviceTransfer>:
   1ec50:	e92d4070 	push	{r4, r5, r6, lr}
   1ec54:	e2504000 	subs	r4, r0, #0
   1ec58:	e24dd038 	sub	sp, sp, #56	; 0x38
   1ec5c:	e1a05001 	mov	r5, r1
   1ec60:	e1a06002 	mov	r6, r2
   1ec64:	0a000012 	beq	1ecb4 <DWHCIDeviceTransfer+0x64>
   1ec68:	e3a00000 	mov	r0, #0
   1ec6c:	e1a02006 	mov	r2, r6
   1ec70:	e1a01005 	mov	r1, r5
   1ec74:	e58d0000 	str	r0, [sp]
   1ec78:	e28d0014 	add	r0, sp, #20
   1ec7c:	eb001067 	bl	22e20 <USBRequest>
   1ec80:	e28d1014 	add	r1, sp, #20
   1ec84:	e1a00004 	mov	r0, r4
   1ec88:	ebfffecb 	bl	1e7bc <DWHCIDeviceSubmitBlockingRequest>
   1ec8c:	e3500000 	cmp	r0, #0
   1ec90:	0a00000e 	beq	1ecd0 <DWHCIDeviceTransfer+0x80>
   1ec94:	e28d0014 	add	r0, sp, #20
   1ec98:	eb0010dd 	bl	23014 <USBRequestGetResultLength>
   1ec9c:	e1a04000 	mov	r4, r0
   1eca0:	e28d0014 	add	r0, sp, #20
   1eca4:	eb00108d 	bl	22ee0 <_USBRequest>
   1eca8:	e1a00004 	mov	r0, r4
   1ecac:	e28dd038 	add	sp, sp, #56	; 0x38
   1ecb0:	e8bd8070 	pop	{r4, r5, r6, pc}
   1ecb4:	e3a02c01 	mov	r2, #256	; 0x100
   1ecb8:	e59f1018 	ldr	r1, [pc, #24]	; 1ecd8 <DWHCIDeviceTransfer+0x88>
   1ecbc:	e59f0018 	ldr	r0, [pc, #24]	; 1ecdc <DWHCIDeviceTransfer+0x8c>
   1ecc0:	e58d300c 	str	r3, [sp, #12]
   1ecc4:	ebffe2d5 	bl	17820 <uspi_assertion_failed>
   1ecc8:	e59d300c 	ldr	r3, [sp, #12]
   1eccc:	eaffffe5 	b	1ec68 <DWHCIDeviceTransfer+0x18>
   1ecd0:	e3e04000 	mvn	r4, #0
   1ecd4:	eafffff1 	b	1eca0 <DWHCIDeviceTransfer+0x50>
   1ecd8:	000306e0 	.word	0x000306e0
   1ecdc:	000306f0 	.word	0x000306f0

0001ece0 <DWHCIDeviceChannelInterruptHandler>:
   1ece0:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1ece4:	e2506000 	subs	r6, r0, #0
   1ece8:	e24dd018 	sub	sp, sp, #24
   1ecec:	e1a05001 	mov	r5, r1
   1ecf0:	0a00008f 	beq	1ef34 <DWHCIDeviceChannelInterruptHandler+0x254>
   1ecf4:	e0654205 	rsb	r4, r5, r5, lsl #4
   1ecf8:	e0864184 	add	r4, r6, r4, lsl #3
   1ecfc:	e2844008 	add	r4, r4, #8
   1ed00:	e1a00004 	mov	r0, r4
   1ed04:	eb000975 	bl	212e0 <DWHCITransferStageDataGetFrameScheduler>
   1ed08:	e1a07000 	mov	r7, r0
   1ed0c:	e1a00004 	mov	r0, r4
   1ed10:	eb00095d 	bl	2128c <DWHCITransferStageDataGetURB>
   1ed14:	e2509000 	subs	r9, r0, #0
   1ed18:	0a000080 	beq	1ef20 <DWHCIDeviceChannelInterruptHandler+0x240>
   1ed1c:	e1a00004 	mov	r0, r4
   1ed20:	eb0006db 	bl	20894 <DWHCITransferStageDataGetSubState>
   1ed24:	e3500000 	cmp	r0, #0
   1ed28:	0a000067 	beq	1eecc <DWHCIDeviceChannelInterruptHandler+0x1ec>
   1ed2c:	e3500001 	cmp	r0, #1
   1ed30:	0a000034 	beq	1ee08 <DWHCIDeviceChannelInterruptHandler+0x128>
   1ed34:	e59f23c4 	ldr	r2, [pc, #964]	; 1f100 <DWHCIDeviceChannelInterruptHandler+0x420>
   1ed38:	e59f13c4 	ldr	r1, [pc, #964]	; 1f104 <DWHCIDeviceChannelInterruptHandler+0x424>
   1ed3c:	e59f03c4 	ldr	r0, [pc, #964]	; 1f108 <DWHCIDeviceChannelInterruptHandler+0x428>
   1ed40:	ebffe2b6 	bl	17820 <uspi_assertion_failed>
   1ed44:	e1a00004 	mov	r0, r4
   1ed48:	eb0006b6 	bl	20828 <DWHCITransferStageDataGetState>
   1ed4c:	e3500001 	cmp	r0, #1
   1ed50:	e1a08000 	mov	r8, r0
   1ed54:	0a000096 	beq	1efb4 <DWHCIDeviceChannelInterruptHandler+0x2d4>
   1ed58:	3a00007a 	bcc	1ef48 <DWHCIDeviceChannelInterruptHandler+0x268>
   1ed5c:	e3500002 	cmp	r0, #2
   1ed60:	1a00005e 	bne	1eee0 <DWHCIDeviceChannelInterruptHandler+0x200>
   1ed64:	e1a00004 	mov	r0, r4
   1ed68:	eb000914 	bl	211c0 <DWHCITransferStageDataGetTransactionStatus>
   1ed6c:	e59f2398 	ldr	r2, [pc, #920]	; 1f10c <DWHCIDeviceChannelInterruptHandler+0x42c>
   1ed70:	e0022000 	and	r2, r2, r0
   1ed74:	e3520000 	cmp	r2, #0
   1ed78:	1a0000d2 	bne	1f0c8 <DWHCIDeviceChannelInterruptHandler+0x3e8>
   1ed7c:	e1a01000 	mov	r1, r0
   1ed80:	e597300c 	ldr	r3, [r7, #12]
   1ed84:	e1a00007 	mov	r0, r7
   1ed88:	e12fff33 	blx	r3
   1ed8c:	e5973008 	ldr	r3, [r7, #8]
   1ed90:	e1a00007 	mov	r0, r7
   1ed94:	e12fff33 	blx	r3
   1ed98:	e3500000 	cmp	r0, #0
   1ed9c:	1a000014 	bne	1edf4 <DWHCIDeviceChannelInterruptHandler+0x114>
   1eda0:	e1a00004 	mov	r0, r4
   1eda4:	eb00091a 	bl	21214 <DWHCITransferStageDataIsStageComplete>
   1eda8:	e3500000 	cmp	r0, #0
   1edac:	1a000091 	bne	1eff8 <DWHCIDeviceChannelInterruptHandler+0x318>
   1edb0:	e1a00004 	mov	r0, r4
   1edb4:	eb0006c3 	bl	208c8 <DWHCITransferStageDataBeginSplitCycle>
   1edb8:	e2501000 	subs	r1, r0, #0
   1edbc:	0a00006e 	beq	1ef7c <DWHCIDeviceChannelInterruptHandler+0x29c>
   1edc0:	e1a00004 	mov	r0, r4
   1edc4:	eb0006ce 	bl	20904 <DWHCITransferStageDataIsPeriodic>
   1edc8:	e2505000 	subs	r5, r0, #0
   1edcc:	1a00009d 	bne	1f048 <DWHCIDeviceChannelInterruptHandler+0x368>
   1edd0:	e3a01001 	mov	r1, #1
   1edd4:	e1a00004 	mov	r0, r4
   1edd8:	eb000684 	bl	207f0 <DWHCITransferStageDataSetState>
   1eddc:	e1a00004 	mov	r0, r4
   1ede0:	e1a01005 	mov	r1, r5
   1ede4:	eb00066c 	bl	2079c <DWHCITransferStageDataSetSplitComplete>
   1ede8:	e5973004 	ldr	r3, [r7, #4]
   1edec:	e1a00007 	mov	r0, r7
   1edf0:	e12fff33 	blx	r3
   1edf4:	e1a01004 	mov	r1, r4
   1edf8:	e1a00006 	mov	r0, r6
   1edfc:	ebfffcb1 	bl	1e0c8 <DWHCIDeviceStartTransaction>
   1ee00:	e28dd018 	add	sp, sp, #24
   1ee04:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1ee08:	e1a00004 	mov	r0, r4
   1ee0c:	eb000833 	bl	20ee0 <DWHCITransferStageDataGetDMAAddress>
   1ee10:	e1a08000 	mov	r8, r0
   1ee14:	e1a00004 	mov	r0, r4
   1ee18:	eb000845 	bl	20f34 <DWHCITransferStageDataGetBytesToTransfer>
   1ee1c:	e1a01000 	mov	r1, r0
   1ee20:	e1a00008 	mov	r0, r8
   1ee24:	eb002f51 	bl	2ab70 <uspi_CleanAndInvalidateDataCacheRange>
   1ee28:	e3a03000 	mov	r3, #0
   1ee2c:	ee073fba 	mcr	15, 0, r3, cr7, cr10, {5}
   1ee30:	e59f12d8 	ldr	r1, [pc, #728]	; 1f110 <DWHCIDeviceChannelInterruptHandler+0x430>
   1ee34:	e1a08285 	lsl	r8, r5, #5
   1ee38:	e0881001 	add	r1, r8, r1
   1ee3c:	e1a0000d 	mov	r0, sp
   1ee40:	eb0004a7 	bl	200e4 <DWHCIRegister>
   1ee44:	e1a0000d 	mov	r0, sp
   1ee48:	eb0004d1 	bl	20194 <DWHCIRegisterRead>
   1ee4c:	e59f12c0 	ldr	r1, [pc, #704]	; 1f114 <DWHCIDeviceChannelInterruptHandler+0x434>
   1ee50:	e28d000c 	add	r0, sp, #12
   1ee54:	e0881001 	add	r1, r8, r1
   1ee58:	eb0004a1 	bl	200e4 <DWHCIRegister>
   1ee5c:	e28d000c 	add	r0, sp, #12
   1ee60:	eb0004cb 	bl	20194 <DWHCIRegisterRead>
   1ee64:	e3500002 	cmp	r0, #2
   1ee68:	0affffe1 	beq	1edf4 <DWHCIDeviceChannelInterruptHandler+0x114>
   1ee6c:	e1a00004 	mov	r0, r4
   1ee70:	eb0006a3 	bl	20904 <DWHCITransferStageDataIsPeriodic>
   1ee74:	e3500000 	cmp	r0, #0
   1ee78:	1a00001e 	bne	1eef8 <DWHCIDeviceChannelInterruptHandler+0x218>
   1ee7c:	e28d000c 	add	r0, sp, #12
   1ee80:	eb0004c3 	bl	20194 <DWHCIRegisterRead>
   1ee84:	e1a0a000 	mov	sl, r0
   1ee88:	e1a0000d 	mov	r0, sp
   1ee8c:	eb0004e6 	bl	2022c <DWHCIRegisterGet>
   1ee90:	e1a08000 	mov	r8, r0
   1ee94:	e1a0000d 	mov	r0, sp
   1ee98:	eb0004e3 	bl	2022c <DWHCIRegisterGet>
   1ee9c:	e59f2274 	ldr	r2, [pc, #628]	; 1f118 <DWHCIDeviceChannelInterruptHandler+0x438>
   1eea0:	e3c034ff 	bic	r3, r0, #-16777216	; 0xff000000
   1eea4:	e3c3373e 	bic	r3, r3, #16252928	; 0xf80000
   1eea8:	e1a0100a 	mov	r1, sl
   1eeac:	e00229a8 	and	r2, r2, r8, lsr #19
   1eeb0:	e1a00004 	mov	r0, r4
   1eeb4:	eb0005da 	bl	20624 <DWHCITransferStageDataTransactionComplete>
   1eeb8:	e28d000c 	add	r0, sp, #12
   1eebc:	eb0004a7 	bl	20160 <_DWHCIRegister>
   1eec0:	e1a0000d 	mov	r0, sp
   1eec4:	eb0004a5 	bl	20160 <_DWHCIRegister>
   1eec8:	eaffff9d 	b	1ed44 <DWHCIDeviceChannelInterruptHandler+0x64>
   1eecc:	e1a01004 	mov	r1, r4
   1eed0:	e1a00006 	mov	r0, r6
   1eed4:	ebfffb7d 	bl	1dcd0 <DWHCIDeviceStartChannel>
   1eed8:	e28dd018 	add	sp, sp, #24
   1eedc:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1eee0:	e59f2234 	ldr	r2, [pc, #564]	; 1f11c <DWHCIDeviceChannelInterruptHandler+0x43c>
   1eee4:	e59f1218 	ldr	r1, [pc, #536]	; 1f104 <DWHCIDeviceChannelInterruptHandler+0x424>
   1eee8:	e59f0218 	ldr	r0, [pc, #536]	; 1f108 <DWHCIDeviceChannelInterruptHandler+0x428>
   1eeec:	ebffe24b 	bl	17820 <uspi_assertion_failed>
   1eef0:	e28dd018 	add	sp, sp, #24
   1eef4:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1eef8:	e1a0000d 	mov	r0, sp
   1eefc:	eb0004ca 	bl	2022c <DWHCIRegisterGet>
   1ef00:	e2200206 	eor	r0, r0, #1610612736	; 0x60000000
   1ef04:	e3100206 	tst	r0, #1610612736	; 0x60000000
   1ef08:	1affffdb 	bne	1ee7c <DWHCIDeviceChannelInterruptHandler+0x19c>
   1ef0c:	e59f220c 	ldr	r2, [pc, #524]	; 1f120 <DWHCIDeviceChannelInterruptHandler+0x440>
   1ef10:	e59f11ec 	ldr	r1, [pc, #492]	; 1f104 <DWHCIDeviceChannelInterruptHandler+0x424>
   1ef14:	e59f0208 	ldr	r0, [pc, #520]	; 1f124 <DWHCIDeviceChannelInterruptHandler+0x444>
   1ef18:	ebffe240 	bl	17820 <uspi_assertion_failed>
   1ef1c:	eaffffd6 	b	1ee7c <DWHCIDeviceChannelInterruptHandler+0x19c>
   1ef20:	e59f2200 	ldr	r2, [pc, #512]	; 1f128 <DWHCIDeviceChannelInterruptHandler+0x448>
   1ef24:	e59f11d8 	ldr	r1, [pc, #472]	; 1f104 <DWHCIDeviceChannelInterruptHandler+0x424>
   1ef28:	e59f01fc 	ldr	r0, [pc, #508]	; 1f12c <DWHCIDeviceChannelInterruptHandler+0x44c>
   1ef2c:	ebffe23b 	bl	17820 <uspi_assertion_failed>
   1ef30:	eaffff79 	b	1ed1c <DWHCIDeviceChannelInterruptHandler+0x3c>
   1ef34:	e59f21f4 	ldr	r2, [pc, #500]	; 1f130 <DWHCIDeviceChannelInterruptHandler+0x450>
   1ef38:	e59f11c4 	ldr	r1, [pc, #452]	; 1f104 <DWHCIDeviceChannelInterruptHandler+0x424>
   1ef3c:	e59f01f0 	ldr	r0, [pc, #496]	; 1f134 <DWHCIDeviceChannelInterruptHandler+0x454>
   1ef40:	ebffe236 	bl	17820 <uspi_assertion_failed>
   1ef44:	eaffff6a 	b	1ecf4 <DWHCIDeviceChannelInterruptHandler+0x14>
   1ef48:	e1a00004 	mov	r0, r4
   1ef4c:	eb00089b 	bl	211c0 <DWHCITransferStageDataGetTransactionStatus>
   1ef50:	e59f21b4 	ldr	r2, [pc, #436]	; 1f10c <DWHCIDeviceChannelInterruptHandler+0x42c>
   1ef54:	e0022000 	and	r2, r2, r0
   1ef58:	e3520000 	cmp	r2, #0
   1ef5c:	1a00004a 	bne	1f08c <DWHCIDeviceChannelInterruptHandler+0x3ac>
   1ef60:	e3100050 	tst	r0, #80	; 0x50
   1ef64:	1a000033 	bne	1f038 <DWHCIDeviceChannelInterruptHandler+0x358>
   1ef68:	e1a00004 	mov	r0, r4
   1ef6c:	eb0007cd 	bl	20ea8 <DWHCITransferStageDataIsStatusStage>
   1ef70:	e3500000 	cmp	r0, #0
   1ef74:	0a00004d 	beq	1f0b0 <DWHCIDeviceChannelInterruptHandler+0x3d0>
   1ef78:	e3a01001 	mov	r1, #1
   1ef7c:	e1a00009 	mov	r0, r9
   1ef80:	eb000ffa 	bl	22f70 <USBRequestSetStatus>
   1ef84:	e1a01005 	mov	r1, r5
   1ef88:	e1a00006 	mov	r0, r6
   1ef8c:	ebfffb30 	bl	1dc54 <DWHCIDeviceDisableChannelInterrupt>
   1ef90:	e1a00004 	mov	r0, r4
   1ef94:	eb00058c 	bl	205cc <_DWHCITransferStageData>
   1ef98:	e1a01005 	mov	r1, r5
   1ef9c:	e1a00006 	mov	r0, r6
   1efa0:	ebfffd0b 	bl	1e3d4 <DWHCIDeviceFreeChannel>
   1efa4:	e1a00009 	mov	r0, r9
   1efa8:	eb00108c 	bl	231e0 <USBRequestCallCompletionRoutine>
   1efac:	e28dd018 	add	sp, sp, #24
   1efb0:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1efb4:	e1a00004 	mov	r0, r4
   1efb8:	eb000880 	bl	211c0 <DWHCITransferStageDataGetTransactionStatus>
   1efbc:	e59f2174 	ldr	r2, [pc, #372]	; 1f138 <DWHCIDeviceChannelInterruptHandler+0x458>
   1efc0:	e0022000 	and	r2, r2, r0
   1efc4:	e3520000 	cmp	r2, #0
   1efc8:	1a000045 	bne	1f0e4 <DWHCIDeviceChannelInterruptHandler+0x404>
   1efcc:	e1a01000 	mov	r1, r0
   1efd0:	e597300c 	ldr	r3, [r7, #12]
   1efd4:	e1a00007 	mov	r0, r7
   1efd8:	e12fff33 	blx	r3
   1efdc:	e1a00004 	mov	r0, r4
   1efe0:	e3a01002 	mov	r1, #2
   1efe4:	eb000601 	bl	207f0 <DWHCITransferStageDataSetState>
   1efe8:	e1a01008 	mov	r1, r8
   1efec:	e1a00004 	mov	r0, r4
   1eff0:	eb0005e9 	bl	2079c <DWHCITransferStageDataSetSplitComplete>
   1eff4:	eaffff64 	b	1ed8c <DWHCIDeviceChannelInterruptHandler+0xac>
   1eff8:	e1a01005 	mov	r1, r5
   1effc:	e1a00006 	mov	r0, r6
   1f000:	ebfffb13 	bl	1dc54 <DWHCIDeviceDisableChannelInterrupt>
   1f004:	e1a00004 	mov	r0, r4
   1f008:	eb0007a6 	bl	20ea8 <DWHCITransferStageDataIsStatusStage>
   1f00c:	e3500000 	cmp	r0, #0
   1f010:	1a000004 	bne	1f028 <DWHCIDeviceChannelInterruptHandler+0x348>
   1f014:	e1a00004 	mov	r0, r4
   1f018:	eb00088c 	bl	21250 <DWHCITransferStageDataGetResultLen>
   1f01c:	e1a01000 	mov	r1, r0
   1f020:	e1a00009 	mov	r0, r9
   1f024:	eb000fdf 	bl	22fa8 <USBRequestSetResultLen>
   1f028:	e3a01001 	mov	r1, #1
   1f02c:	e1a00009 	mov	r0, r9
   1f030:	eb000fce 	bl	22f70 <USBRequestSetStatus>
   1f034:	eaffffd5 	b	1ef90 <DWHCIDeviceChannelInterruptHandler+0x2b0>
   1f038:	e1a00004 	mov	r0, r4
   1f03c:	eb000630 	bl	20904 <DWHCITransferStageDataIsPeriodic>
   1f040:	e3500000 	cmp	r0, #0
   1f044:	0affffc7 	beq	1ef68 <DWHCIDeviceChannelInterruptHandler+0x288>
   1f048:	e3a01003 	mov	r1, #3
   1f04c:	e1a00004 	mov	r0, r4
   1f050:	eb0005e6 	bl	207f0 <DWHCITransferStageDataSetState>
   1f054:	e1a00009 	mov	r0, r9
   1f058:	eb000fb0 	bl	22f20 <USBRequestGetEndpoint>
   1f05c:	eb000ef3 	bl	22c30 <USBEndpointGetInterval>
   1f060:	e0800100 	add	r0, r0, r0, lsl #2
   1f064:	e59f30d0 	ldr	r3, [pc, #208]	; 1f13c <DWHCIDeviceChannelInterruptHandler+0x45c>
   1f068:	e0800100 	add	r0, r0, r0, lsl #2
   1f06c:	e1a00100 	lsl	r0, r0, #2
   1f070:	e0810390 	umull	r0, r1, r0, r3
   1f074:	e1a02004 	mov	r2, r4
   1f078:	e1a03006 	mov	r3, r6
   1f07c:	e1a00321 	lsr	r0, r1, #6
   1f080:	e59f10b8 	ldr	r1, [pc, #184]	; 1f140 <DWHCIDeviceChannelInterruptHandler+0x460>
   1f084:	ebffe1cc 	bl	177bc <StartKernelTimer>
   1f088:	eaffff92 	b	1eed8 <DWHCIDeviceChannelInterruptHandler+0x1f8>
   1f08c:	e1a03000 	mov	r3, r0
   1f090:	e59f20ac 	ldr	r2, [pc, #172]	; 1f144 <DWHCIDeviceChannelInterruptHandler+0x464>
   1f094:	e3a01001 	mov	r1, #1
   1f098:	e59f00a8 	ldr	r0, [pc, #168]	; 1f148 <DWHCIDeviceChannelInterruptHandler+0x468>
   1f09c:	ebffa9c4 	bl	97b4 <LogWrite>
   1f0a0:	e3a01000 	mov	r1, #0
   1f0a4:	e1a00009 	mov	r0, r9
   1f0a8:	eb000fb0 	bl	22f70 <USBRequestSetStatus>
   1f0ac:	eaffffb4 	b	1ef84 <DWHCIDeviceChannelInterruptHandler+0x2a4>
   1f0b0:	e1a00004 	mov	r0, r4
   1f0b4:	eb000865 	bl	21250 <DWHCITransferStageDataGetResultLen>
   1f0b8:	e1a01000 	mov	r1, r0
   1f0bc:	e1a00009 	mov	r0, r9
   1f0c0:	eb000fb8 	bl	22fa8 <USBRequestSetResultLen>
   1f0c4:	eaffffab 	b	1ef78 <DWHCIDeviceChannelInterruptHandler+0x298>
   1f0c8:	e1a03000 	mov	r3, r0
   1f0cc:	e3a01001 	mov	r1, #1
   1f0d0:	e59f206c 	ldr	r2, [pc, #108]	; 1f144 <DWHCIDeviceChannelInterruptHandler+0x464>
   1f0d4:	e59f006c 	ldr	r0, [pc, #108]	; 1f148 <DWHCIDeviceChannelInterruptHandler+0x468>
   1f0d8:	ebffa9b5 	bl	97b4 <LogWrite>
   1f0dc:	e3a01000 	mov	r1, #0
   1f0e0:	eaffffa5 	b	1ef7c <DWHCIDeviceChannelInterruptHandler+0x29c>
   1f0e4:	e1a03000 	mov	r3, r0
   1f0e8:	e1a01008 	mov	r1, r8
   1f0ec:	e59f2050 	ldr	r2, [pc, #80]	; 1f144 <DWHCIDeviceChannelInterruptHandler+0x464>
   1f0f0:	e59f0050 	ldr	r0, [pc, #80]	; 1f148 <DWHCIDeviceChannelInterruptHandler+0x468>
   1f0f4:	ebffa9ae 	bl	97b4 <LogWrite>
   1f0f8:	e3a01000 	mov	r1, #0
   1f0fc:	eaffff9e 	b	1ef7c <DWHCIDeviceChannelInterruptHandler+0x29c>
   1f100:	000003da 	.word	0x000003da
   1f104:	000306e0 	.word	0x000306e0
   1f108:	00030678 	.word	0x00030678
   1f10c:	0000078c 	.word	0x0000078c
   1f110:	20980510 	.word	0x20980510
   1f114:	20980508 	.word	0x20980508
   1f118:	000003ff 	.word	0x000003ff
   1f11c:	00000478 	.word	0x00000478
   1f120:	000003cf 	.word	0x000003cf
   1f124:	00030898 	.word	0x00030898
   1f128:	000003b2 	.word	0x000003b2
   1f12c:	000307b8 	.word	0x000307b8
   1f130:	000003ad 	.word	0x000003ad
   1f134:	000306f0 	.word	0x000306f0
   1f138:	000007dc 	.word	0x000007dc
   1f13c:	10624dd3 	.word	0x10624dd3
   1f140:	0001e204 	.word	0x0001e204
   1f144:	00030930 	.word	0x00030930
   1f148:	000306d4 	.word	0x000306d4

0001f14c <DWHCIDeviceInterruptHandler>:
   1f14c:	e92d40f0 	push	{r4, r5, r6, r7, lr}
   1f150:	e2506000 	subs	r6, r0, #0
   1f154:	e24dd02c 	sub	sp, sp, #44	; 0x2c
   1f158:	0a000037 	beq	1f23c <DWHCIDeviceInterruptHandler+0xf0>
   1f15c:	e3a04000 	mov	r4, #0
   1f160:	ee074fba 	mcr	15, 0, r4, cr7, cr10, {5}
   1f164:	e59f10e4 	ldr	r1, [pc, #228]	; 1f250 <DWHCIDeviceInterruptHandler+0x104>
   1f168:	e28d0004 	add	r0, sp, #4
   1f16c:	eb0003dc 	bl	200e4 <DWHCIRegister>
   1f170:	e28d0004 	add	r0, sp, #4
   1f174:	eb000406 	bl	20194 <DWHCIRegisterRead>
   1f178:	e28d0004 	add	r0, sp, #4
   1f17c:	eb00042a 	bl	2022c <DWHCIRegisterGet>
   1f180:	e3100402 	tst	r0, #33554432	; 0x2000000
   1f184:	1a000007 	bne	1f1a8 <DWHCIDeviceInterruptHandler+0x5c>
   1f188:	e28d0004 	add	r0, sp, #4
   1f18c:	eb000410 	bl	201d4 <DWHCIRegisterWrite>
   1f190:	e3a03000 	mov	r3, #0
   1f194:	ee073fba 	mcr	15, 0, r3, cr7, cr10, {5}
   1f198:	e28d0004 	add	r0, sp, #4
   1f19c:	eb0003ef 	bl	20160 <_DWHCIRegister>
   1f1a0:	e28dd02c 	add	sp, sp, #44	; 0x2c
   1f1a4:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
   1f1a8:	e59f10a4 	ldr	r1, [pc, #164]	; 1f254 <DWHCIDeviceInterruptHandler+0x108>
   1f1ac:	e28d0010 	add	r0, sp, #16
   1f1b0:	eb0003cb 	bl	200e4 <DWHCIRegister>
   1f1b4:	e28d0010 	add	r0, sp, #16
   1f1b8:	eb0003f5 	bl	20194 <DWHCIRegisterRead>
   1f1bc:	e28d0010 	add	r0, sp, #16
   1f1c0:	eb000403 	bl	201d4 <DWHCIRegisterWrite>
   1f1c4:	e5963000 	ldr	r3, [r6]
   1f1c8:	e1530004 	cmp	r3, r4
   1f1cc:	0a000017 	beq	1f230 <DWHCIDeviceInterruptHandler+0xe4>
   1f1d0:	e3a05001 	mov	r5, #1
   1f1d4:	e59f707c 	ldr	r7, [pc, #124]	; 1f258 <DWHCIDeviceInterruptHandler+0x10c>
   1f1d8:	ea000004 	b	1f1f0 <DWHCIDeviceInterruptHandler+0xa4>
   1f1dc:	e5963000 	ldr	r3, [r6]
   1f1e0:	e2844001 	add	r4, r4, #1
   1f1e4:	e1530004 	cmp	r3, r4
   1f1e8:	e1a05085 	lsl	r5, r5, #1
   1f1ec:	9a00000f 	bls	1f230 <DWHCIDeviceInterruptHandler+0xe4>
   1f1f0:	e28d0010 	add	r0, sp, #16
   1f1f4:	eb00040c 	bl	2022c <DWHCIRegisterGet>
   1f1f8:	e1100005 	tst	r0, r5
   1f1fc:	0afffff6 	beq	1f1dc <DWHCIDeviceInterruptHandler+0x90>
   1f200:	e3a02000 	mov	r2, #0
   1f204:	e0871284 	add	r1, r7, r4, lsl #5
   1f208:	e28d001c 	add	r0, sp, #28
   1f20c:	eb0003c2 	bl	2011c <DWHCIRegister2>
   1f210:	e28d001c 	add	r0, sp, #28
   1f214:	eb0003ee 	bl	201d4 <DWHCIRegisterWrite>
   1f218:	e1a00006 	mov	r0, r6
   1f21c:	e1a01004 	mov	r1, r4
   1f220:	ebfffeae 	bl	1ece0 <DWHCIDeviceChannelInterruptHandler>
   1f224:	e28d001c 	add	r0, sp, #28
   1f228:	eb0003cc 	bl	20160 <_DWHCIRegister>
   1f22c:	eaffffea 	b	1f1dc <DWHCIDeviceInterruptHandler+0x90>
   1f230:	e28d0010 	add	r0, sp, #16
   1f234:	eb0003c9 	bl	20160 <_DWHCIRegister>
   1f238:	eaffffd2 	b	1f188 <DWHCIDeviceInterruptHandler+0x3c>
   1f23c:	e3a02d12 	mov	r2, #1152	; 0x480
   1f240:	e59f1014 	ldr	r1, [pc, #20]	; 1f25c <DWHCIDeviceInterruptHandler+0x110>
   1f244:	e59f0014 	ldr	r0, [pc, #20]	; 1f260 <DWHCIDeviceInterruptHandler+0x114>
   1f248:	ebffe174 	bl	17820 <uspi_assertion_failed>
   1f24c:	eaffffc2 	b	1f15c <DWHCIDeviceInterruptHandler+0x10>
   1f250:	20980014 	.word	0x20980014
   1f254:	20980414 	.word	0x20980414
   1f258:	2098050c 	.word	0x2098050c
   1f25c:	000306e0 	.word	0x000306e0
   1f260:	000306f0 	.word	0x000306f0

0001f264 <DWHCIDeviceWaitForBit>:
   1f264:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   1f268:	e3500000 	cmp	r0, #0
   1f26c:	e1a05001 	mov	r5, r1
   1f270:	e1a06002 	mov	r6, r2
   1f274:	e1a07003 	mov	r7, r3
   1f278:	e59d4018 	ldr	r4, [sp, #24]
   1f27c:	0a000024 	beq	1f314 <DWHCIDeviceWaitForBit+0xb0>
   1f280:	e3550000 	cmp	r5, #0
   1f284:	0a00001d 	beq	1f300 <DWHCIDeviceWaitForBit+0x9c>
   1f288:	e3560000 	cmp	r6, #0
   1f28c:	0a000016 	beq	1f2ec <DWHCIDeviceWaitForBit+0x88>
   1f290:	e3540000 	cmp	r4, #0
   1f294:	0a00000f 	beq	1f2d8 <DWHCIDeviceWaitForBit+0x74>
   1f298:	e1a00005 	mov	r0, r5
   1f29c:	eb0003bc 	bl	20194 <DWHCIRegisterRead>
   1f2a0:	e1100006 	tst	r0, r6
   1f2a4:	116f3f17 	clzne	r3, r7
   1f2a8:	11a032a3 	lsrne	r3, r3, #5
   1f2ac:	1a000001 	bne	1f2b8 <DWHCIDeviceWaitForBit+0x54>
   1f2b0:	e2973000 	adds	r3, r7, #0
   1f2b4:	13a03001 	movne	r3, #1
   1f2b8:	e3530000 	cmp	r3, #0
   1f2bc:	e3a00001 	mov	r0, #1
   1f2c0:	08bd81f0 	popeq	{r4, r5, r6, r7, r8, pc}
   1f2c4:	ebffe137 	bl	177a8 <MsDelay>
   1f2c8:	e2544001 	subs	r4, r4, #1
   1f2cc:	1afffff1 	bne	1f298 <DWHCIDeviceWaitForBit+0x34>
   1f2d0:	e1a00004 	mov	r0, r4
   1f2d4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   1f2d8:	e59f2048 	ldr	r2, [pc, #72]	; 1f328 <DWHCIDeviceWaitForBit+0xc4>
   1f2dc:	e59f1048 	ldr	r1, [pc, #72]	; 1f32c <DWHCIDeviceWaitForBit+0xc8>
   1f2e0:	e59f0048 	ldr	r0, [pc, #72]	; 1f330 <DWHCIDeviceWaitForBit+0xcc>
   1f2e4:	ebffe14d 	bl	17820 <uspi_assertion_failed>
   1f2e8:	eaffffea 	b	1f298 <DWHCIDeviceWaitForBit+0x34>
   1f2ec:	e59f2040 	ldr	r2, [pc, #64]	; 1f334 <DWHCIDeviceWaitForBit+0xd0>
   1f2f0:	e59f1034 	ldr	r1, [pc, #52]	; 1f32c <DWHCIDeviceWaitForBit+0xc8>
   1f2f4:	e59f003c 	ldr	r0, [pc, #60]	; 1f338 <DWHCIDeviceWaitForBit+0xd4>
   1f2f8:	ebffe148 	bl	17820 <uspi_assertion_failed>
   1f2fc:	eaffffe3 	b	1f290 <DWHCIDeviceWaitForBit+0x2c>
   1f300:	e59f2034 	ldr	r2, [pc, #52]	; 1f33c <DWHCIDeviceWaitForBit+0xd8>
   1f304:	e59f1020 	ldr	r1, [pc, #32]	; 1f32c <DWHCIDeviceWaitForBit+0xc8>
   1f308:	e59f0030 	ldr	r0, [pc, #48]	; 1f340 <DWHCIDeviceWaitForBit+0xdc>
   1f30c:	ebffe143 	bl	17820 <uspi_assertion_failed>
   1f310:	eaffffdc 	b	1f288 <DWHCIDeviceWaitForBit+0x24>
   1f314:	e59f2028 	ldr	r2, [pc, #40]	; 1f344 <DWHCIDeviceWaitForBit+0xe0>
   1f318:	e59f100c 	ldr	r1, [pc, #12]	; 1f32c <DWHCIDeviceWaitForBit+0xc8>
   1f31c:	e59f0024 	ldr	r0, [pc, #36]	; 1f348 <DWHCIDeviceWaitForBit+0xe4>
   1f320:	ebffe13e 	bl	17820 <uspi_assertion_failed>
   1f324:	eaffffd5 	b	1f280 <DWHCIDeviceWaitForBit+0x1c>
   1f328:	0000050a 	.word	0x0000050a
   1f32c:	000306e0 	.word	0x000306e0
   1f330:	00030970 	.word	0x00030970
   1f334:	00000509 	.word	0x00000509
   1f338:	00030964 	.word	0x00030964
   1f33c:	00000508 	.word	0x00000508
   1f340:	00030954 	.word	0x00030954
   1f344:	00000506 	.word	0x00000506
   1f348:	000306f0 	.word	0x000306f0

0001f34c <DWHCIDeviceEnableRootPort>:
   1f34c:	e92d4030 	push	{r4, r5, lr}
   1f350:	e2504000 	subs	r4, r0, #0
   1f354:	e24dd01c 	sub	sp, sp, #28
   1f358:	0a000030 	beq	1f420 <DWHCIDeviceEnableRootPort+0xd4>
   1f35c:	e28d000c 	add	r0, sp, #12
   1f360:	e59f10cc 	ldr	r1, [pc, #204]	; 1f434 <DWHCIDeviceEnableRootPort+0xe8>
   1f364:	eb00035e 	bl	200e4 <DWHCIRegister>
   1f368:	e3a05014 	mov	r5, #20
   1f36c:	e3a03001 	mov	r3, #1
   1f370:	e1a00004 	mov	r0, r4
   1f374:	e28d100c 	add	r1, sp, #12
   1f378:	e58d5000 	str	r5, [sp]
   1f37c:	e1a02003 	mov	r2, r3
   1f380:	ebffffb7 	bl	1f264 <DWHCIDeviceWaitForBit>
   1f384:	e2504000 	subs	r4, r0, #0
   1f388:	0a00001f 	beq	1f40c <DWHCIDeviceEnableRootPort+0xc0>
   1f38c:	e3a04001 	mov	r4, #1
   1f390:	e3a00064 	mov	r0, #100	; 0x64
   1f394:	ebffe103 	bl	177a8 <MsDelay>
   1f398:	e28d000c 	add	r0, sp, #12
   1f39c:	eb00037c 	bl	20194 <DWHCIRegisterRead>
   1f3a0:	e28d000c 	add	r0, sp, #12
   1f3a4:	e3e0102e 	mvn	r1, #46	; 0x2e
   1f3a8:	eb0003da 	bl	20318 <DWHCIRegisterAnd>
   1f3ac:	e3a01c01 	mov	r1, #256	; 0x100
   1f3b0:	e28d000c 	add	r0, sp, #12
   1f3b4:	eb0003ee 	bl	20374 <DWHCIRegisterOr>
   1f3b8:	e28d000c 	add	r0, sp, #12
   1f3bc:	eb000384 	bl	201d4 <DWHCIRegisterWrite>
   1f3c0:	e3a00032 	mov	r0, #50	; 0x32
   1f3c4:	ebffe0f7 	bl	177a8 <MsDelay>
   1f3c8:	e28d000c 	add	r0, sp, #12
   1f3cc:	eb000370 	bl	20194 <DWHCIRegisterRead>
   1f3d0:	e28d000c 	add	r0, sp, #12
   1f3d4:	e3e0102e 	mvn	r1, #46	; 0x2e
   1f3d8:	eb0003ce 	bl	20318 <DWHCIRegisterAnd>
   1f3dc:	e3e01c01 	mvn	r1, #256	; 0x100
   1f3e0:	e28d000c 	add	r0, sp, #12
   1f3e4:	eb0003cb 	bl	20318 <DWHCIRegisterAnd>
   1f3e8:	e28d000c 	add	r0, sp, #12
   1f3ec:	eb000378 	bl	201d4 <DWHCIRegisterWrite>
   1f3f0:	e1a00005 	mov	r0, r5
   1f3f4:	ebffe0eb 	bl	177a8 <MsDelay>
   1f3f8:	e28d000c 	add	r0, sp, #12
   1f3fc:	eb000357 	bl	20160 <_DWHCIRegister>
   1f400:	e1a00004 	mov	r0, r4
   1f404:	e28dd01c 	add	sp, sp, #28
   1f408:	e8bd8030 	pop	{r4, r5, pc}
   1f40c:	e28d000c 	add	r0, sp, #12
   1f410:	eb000352 	bl	20160 <_DWHCIRegister>
   1f414:	e1a00004 	mov	r0, r4
   1f418:	e28dd01c 	add	sp, sp, #28
   1f41c:	e8bd8030 	pop	{r4, r5, pc}
   1f420:	e59f2010 	ldr	r2, [pc, #16]	; 1f438 <DWHCIDeviceEnableRootPort+0xec>
   1f424:	e59f1010 	ldr	r1, [pc, #16]	; 1f43c <DWHCIDeviceEnableRootPort+0xf0>
   1f428:	e59f0010 	ldr	r0, [pc, #16]	; 1f440 <DWHCIDeviceEnableRootPort+0xf4>
   1f42c:	ebffe0fb 	bl	17820 <uspi_assertion_failed>
   1f430:	eaffffc9 	b	1f35c <DWHCIDeviceEnableRootPort+0x10>
   1f434:	20980440 	.word	0x20980440
   1f438:	000001fb 	.word	0x000001fb
   1f43c:	000306e0 	.word	0x000306e0
   1f440:	000306f0 	.word	0x000306f0

0001f444 <DWHCIDeviceReset>:
   1f444:	e92d4030 	push	{r4, r5, lr}
   1f448:	e2504000 	subs	r4, r0, #0
   1f44c:	e24dd01c 	sub	sp, sp, #28
   1f450:	0a000026 	beq	1f4f0 <DWHCIDeviceReset+0xac>
   1f454:	e3a05064 	mov	r5, #100	; 0x64
   1f458:	e28d000c 	add	r0, sp, #12
   1f45c:	e3a02000 	mov	r2, #0
   1f460:	e59f109c 	ldr	r1, [pc, #156]	; 1f504 <DWHCIDeviceReset+0xc0>
   1f464:	eb00032c 	bl	2011c <DWHCIRegister2>
   1f468:	e28d100c 	add	r1, sp, #12
   1f46c:	e58d5000 	str	r5, [sp]
   1f470:	e3a03001 	mov	r3, #1
   1f474:	e3a02102 	mov	r2, #-2147483648	; 0x80000000
   1f478:	e1a00004 	mov	r0, r4
   1f47c:	ebffff78 	bl	1f264 <DWHCIDeviceWaitForBit>
   1f480:	e3500000 	cmp	r0, #0
   1f484:	0a000014 	beq	1f4dc <DWHCIDeviceReset+0x98>
   1f488:	e3a01001 	mov	r1, #1
   1f48c:	e28d000c 	add	r0, sp, #12
   1f490:	eb0003b7 	bl	20374 <DWHCIRegisterOr>
   1f494:	e28d000c 	add	r0, sp, #12
   1f498:	eb00034d 	bl	201d4 <DWHCIRegisterWrite>
   1f49c:	e3a0300a 	mov	r3, #10
   1f4a0:	e1a00004 	mov	r0, r4
   1f4a4:	e58d3000 	str	r3, [sp]
   1f4a8:	e3a02001 	mov	r2, #1
   1f4ac:	e3a03000 	mov	r3, #0
   1f4b0:	e28d100c 	add	r1, sp, #12
   1f4b4:	ebffff6a 	bl	1f264 <DWHCIDeviceWaitForBit>
   1f4b8:	e3500000 	cmp	r0, #0
   1f4bc:	0a000006 	beq	1f4dc <DWHCIDeviceReset+0x98>
   1f4c0:	e1a00005 	mov	r0, r5
   1f4c4:	ebffe0b7 	bl	177a8 <MsDelay>
   1f4c8:	e28d000c 	add	r0, sp, #12
   1f4cc:	eb000323 	bl	20160 <_DWHCIRegister>
   1f4d0:	e3a00001 	mov	r0, #1
   1f4d4:	e28dd01c 	add	sp, sp, #28
   1f4d8:	e8bd8030 	pop	{r4, r5, pc}
   1f4dc:	e28d000c 	add	r0, sp, #12
   1f4e0:	eb00031e 	bl	20160 <_DWHCIRegister>
   1f4e4:	e3a00000 	mov	r0, #0
   1f4e8:	e28dd01c 	add	sp, sp, #28
   1f4ec:	e8bd8030 	pop	{r4, r5, pc}
   1f4f0:	e59f2010 	ldr	r2, [pc, #16]	; 1f508 <DWHCIDeviceReset+0xc4>
   1f4f4:	e59f1010 	ldr	r1, [pc, #16]	; 1f50c <DWHCIDeviceReset+0xc8>
   1f4f8:	e59f0010 	ldr	r0, [pc, #16]	; 1f510 <DWHCIDeviceReset+0xcc>
   1f4fc:	ebffe0c7 	bl	17820 <uspi_assertion_failed>
   1f500:	eaffffd3 	b	1f454 <DWHCIDeviceReset+0x10>
   1f504:	20980010 	.word	0x20980010
   1f508:	0000021e 	.word	0x0000021e
   1f50c:	000306e0 	.word	0x000306e0
   1f510:	000306f0 	.word	0x000306f0

0001f514 <DWHCIDeviceInitCore>:
   1f514:	e92d4030 	push	{r4, r5, lr}
   1f518:	e2504000 	subs	r4, r0, #0
   1f51c:	e24dd02c 	sub	sp, sp, #44	; 0x2c
   1f520:	0a00008a 	beq	1f750 <DWHCIDeviceInitCore+0x23c>
   1f524:	e59f1238 	ldr	r1, [pc, #568]	; 1f764 <DWHCIDeviceInitCore+0x250>
   1f528:	e28d0004 	add	r0, sp, #4
   1f52c:	eb0002ec 	bl	200e4 <DWHCIRegister>
   1f530:	e28d0004 	add	r0, sp, #4
   1f534:	eb000316 	bl	20194 <DWHCIRegisterRead>
   1f538:	e28d0004 	add	r0, sp, #4
   1f53c:	e3e01601 	mvn	r1, #1048576	; 0x100000
   1f540:	eb000374 	bl	20318 <DWHCIRegisterAnd>
   1f544:	e3e01501 	mvn	r1, #4194304	; 0x400000
   1f548:	e28d0004 	add	r0, sp, #4
   1f54c:	eb000371 	bl	20318 <DWHCIRegisterAnd>
   1f550:	e28d0004 	add	r0, sp, #4
   1f554:	eb00031e 	bl	201d4 <DWHCIRegisterWrite>
   1f558:	e1a00004 	mov	r0, r4
   1f55c:	ebffffb8 	bl	1f444 <DWHCIDeviceReset>
   1f560:	e2505000 	subs	r5, r0, #0
   1f564:	0a00005b 	beq	1f6d8 <DWHCIDeviceInitCore+0x1c4>
   1f568:	e28d0004 	add	r0, sp, #4
   1f56c:	eb000308 	bl	20194 <DWHCIRegisterRead>
   1f570:	e3e01010 	mvn	r1, #16
   1f574:	e28d0004 	add	r0, sp, #4
   1f578:	eb000366 	bl	20318 <DWHCIRegisterAnd>
   1f57c:	e3e01008 	mvn	r1, #8
   1f580:	e28d0004 	add	r0, sp, #4
   1f584:	eb000363 	bl	20318 <DWHCIRegisterAnd>
   1f588:	e28d0004 	add	r0, sp, #4
   1f58c:	eb000310 	bl	201d4 <DWHCIRegisterWrite>
   1f590:	e59f11d0 	ldr	r1, [pc, #464]	; 1f768 <DWHCIDeviceInitCore+0x254>
   1f594:	e28d0010 	add	r0, sp, #16
   1f598:	eb0002d1 	bl	200e4 <DWHCIRegister>
   1f59c:	e28d0010 	add	r0, sp, #16
   1f5a0:	eb0002fb 	bl	20194 <DWHCIRegisterRead>
   1f5a4:	e28d0010 	add	r0, sp, #16
   1f5a8:	eb00031f 	bl	2022c <DWHCIRegisterGet>
   1f5ac:	e1a001a0 	lsr	r0, r0, #3
   1f5b0:	e2000003 	and	r0, r0, #3
   1f5b4:	e3500002 	cmp	r0, #2
   1f5b8:	1a000041 	bne	1f6c4 <DWHCIDeviceInitCore+0x1b0>
   1f5bc:	e28d0004 	add	r0, sp, #4
   1f5c0:	eb0002f3 	bl	20194 <DWHCIRegisterRead>
   1f5c4:	e28d0010 	add	r0, sp, #16
   1f5c8:	eb000317 	bl	2022c <DWHCIRegisterGet>
   1f5cc:	e1a00320 	lsr	r0, r0, #6
   1f5d0:	e2000003 	and	r0, r0, #3
   1f5d4:	e3500002 	cmp	r0, #2
   1f5d8:	0a000045 	beq	1f6f4 <DWHCIDeviceInitCore+0x1e0>
   1f5dc:	e3e01802 	mvn	r1, #131072	; 0x20000
   1f5e0:	e28d0004 	add	r0, sp, #4
   1f5e4:	eb00034b 	bl	20318 <DWHCIRegisterAnd>
   1f5e8:	e3e01702 	mvn	r1, #524288	; 0x80000
   1f5ec:	e28d0004 	add	r0, sp, #4
   1f5f0:	eb000348 	bl	20318 <DWHCIRegisterAnd>
   1f5f4:	e28d0004 	add	r0, sp, #4
   1f5f8:	eb0002f5 	bl	201d4 <DWHCIRegisterWrite>
   1f5fc:	e5943000 	ldr	r3, [r4]
   1f600:	e3530000 	cmp	r3, #0
   1f604:	1a00004c 	bne	1f73c <DWHCIDeviceInitCore+0x228>
   1f608:	e28d0010 	add	r0, sp, #16
   1f60c:	eb000306 	bl	2022c <DWHCIRegisterGet>
   1f610:	e1a00720 	lsr	r0, r0, #14
   1f614:	e200000f 	and	r0, r0, #15
   1f618:	e2403003 	sub	r3, r0, #3
   1f61c:	e353000c 	cmp	r3, #12
   1f620:	e2800001 	add	r0, r0, #1
   1f624:	e5840000 	str	r0, [r4]
   1f628:	8a00003e 	bhi	1f728 <DWHCIDeviceInitCore+0x214>
   1f62c:	e3a05001 	mov	r5, #1
   1f630:	e28d001c 	add	r0, sp, #28
   1f634:	e59f1130 	ldr	r1, [pc, #304]	; 1f76c <DWHCIDeviceInitCore+0x258>
   1f638:	eb0002a9 	bl	200e4 <DWHCIRegister>
   1f63c:	e28d001c 	add	r0, sp, #28
   1f640:	eb0002d3 	bl	20194 <DWHCIRegisterRead>
   1f644:	e28d001c 	add	r0, sp, #28
   1f648:	e3a01020 	mov	r1, #32
   1f64c:	eb000348 	bl	20374 <DWHCIRegisterOr>
   1f650:	e28d001c 	add	r0, sp, #28
   1f654:	e3a01010 	mov	r1, #16
   1f658:	eb000345 	bl	20374 <DWHCIRegisterOr>
   1f65c:	e3e01006 	mvn	r1, #6
   1f660:	e28d001c 	add	r0, sp, #28
   1f664:	eb00032b 	bl	20318 <DWHCIRegisterAnd>
   1f668:	e28d001c 	add	r0, sp, #28
   1f66c:	eb0002d8 	bl	201d4 <DWHCIRegisterWrite>
   1f670:	e28d0004 	add	r0, sp, #4
   1f674:	eb0002c6 	bl	20194 <DWHCIRegisterRead>
   1f678:	e28d0004 	add	r0, sp, #4
   1f67c:	e3e01c02 	mvn	r1, #512	; 0x200
   1f680:	eb000324 	bl	20318 <DWHCIRegisterAnd>
   1f684:	e3e01c01 	mvn	r1, #256	; 0x100
   1f688:	e28d0004 	add	r0, sp, #4
   1f68c:	eb000321 	bl	20318 <DWHCIRegisterAnd>
   1f690:	e28d0004 	add	r0, sp, #4
   1f694:	eb0002ce 	bl	201d4 <DWHCIRegisterWrite>
   1f698:	e1a00004 	mov	r0, r4
   1f69c:	ebfff918 	bl	1db04 <DWHCIDeviceEnableCommonInterrupts>
   1f6a0:	e28d001c 	add	r0, sp, #28
   1f6a4:	eb0002ad 	bl	20160 <_DWHCIRegister>
   1f6a8:	e28d0010 	add	r0, sp, #16
   1f6ac:	eb0002ab 	bl	20160 <_DWHCIRegister>
   1f6b0:	e28d0004 	add	r0, sp, #4
   1f6b4:	eb0002a9 	bl	20160 <_DWHCIRegister>
   1f6b8:	e1a00005 	mov	r0, r5
   1f6bc:	e28dd02c 	add	sp, sp, #44	; 0x2c
   1f6c0:	e8bd8030 	pop	{r4, r5, pc}
   1f6c4:	e59f20a4 	ldr	r2, [pc, #164]	; 1f770 <DWHCIDeviceInitCore+0x25c>
   1f6c8:	e59f10a4 	ldr	r1, [pc, #164]	; 1f774 <DWHCIDeviceInitCore+0x260>
   1f6cc:	e59f00a4 	ldr	r0, [pc, #164]	; 1f778 <DWHCIDeviceInitCore+0x264>
   1f6d0:	ebffe052 	bl	17820 <uspi_assertion_failed>
   1f6d4:	eaffffb8 	b	1f5bc <DWHCIDeviceInitCore+0xa8>
   1f6d8:	e59f209c 	ldr	r2, [pc, #156]	; 1f77c <DWHCIDeviceInitCore+0x268>
   1f6dc:	e3a01001 	mov	r1, #1
   1f6e0:	e59f0098 	ldr	r0, [pc, #152]	; 1f780 <DWHCIDeviceInitCore+0x26c>
   1f6e4:	ebffa832 	bl	97b4 <LogWrite>
   1f6e8:	e1a00005 	mov	r0, r5
   1f6ec:	e28dd02c 	add	sp, sp, #44	; 0x2c
   1f6f0:	e8bd8030 	pop	{r4, r5, pc}
   1f6f4:	e28d0010 	add	r0, sp, #16
   1f6f8:	eb0002cb 	bl	2022c <DWHCIRegisterGet>
   1f6fc:	e1a00420 	lsr	r0, r0, #8
   1f700:	e2000003 	and	r0, r0, #3
   1f704:	e3500001 	cmp	r0, #1
   1f708:	1affffb3 	bne	1f5dc <DWHCIDeviceInitCore+0xc8>
   1f70c:	e28d0004 	add	r0, sp, #4
   1f710:	e3a01802 	mov	r1, #131072	; 0x20000
   1f714:	eb000316 	bl	20374 <DWHCIRegisterOr>
   1f718:	e3a01702 	mov	r1, #524288	; 0x80000
   1f71c:	e28d0004 	add	r0, sp, #4
   1f720:	eb000313 	bl	20374 <DWHCIRegisterOr>
   1f724:	eaffffb2 	b	1f5f4 <DWHCIDeviceInitCore+0xe0>
   1f728:	e3a02e19 	mov	r2, #400	; 0x190
   1f72c:	e59f1040 	ldr	r1, [pc, #64]	; 1f774 <DWHCIDeviceInitCore+0x260>
   1f730:	e59f004c 	ldr	r0, [pc, #76]	; 1f784 <DWHCIDeviceInitCore+0x270>
   1f734:	ebffe039 	bl	17820 <uspi_assertion_failed>
   1f738:	eaffffbb 	b	1f62c <DWHCIDeviceInitCore+0x118>
   1f73c:	e59f2044 	ldr	r2, [pc, #68]	; 1f788 <DWHCIDeviceInitCore+0x274>
   1f740:	e59f102c 	ldr	r1, [pc, #44]	; 1f774 <DWHCIDeviceInitCore+0x260>
   1f744:	e59f0040 	ldr	r0, [pc, #64]	; 1f78c <DWHCIDeviceInitCore+0x278>
   1f748:	ebffe034 	bl	17820 <uspi_assertion_failed>
   1f74c:	eaffffad 	b	1f608 <DWHCIDeviceInitCore+0xf4>
   1f750:	e59f2038 	ldr	r2, [pc, #56]	; 1f790 <DWHCIDeviceInitCore+0x27c>
   1f754:	e59f1018 	ldr	r1, [pc, #24]	; 1f774 <DWHCIDeviceInitCore+0x260>
   1f758:	e59f0034 	ldr	r0, [pc, #52]	; 1f794 <DWHCIDeviceInitCore+0x280>
   1f75c:	ebffe02f 	bl	17820 <uspi_assertion_failed>
   1f760:	eaffff6f 	b	1f524 <DWHCIDeviceInitCore+0x10>
   1f764:	2098000c 	.word	0x2098000c
   1f768:	20980048 	.word	0x20980048
   1f76c:	20980008 	.word	0x20980008
   1f770:	0000017e 	.word	0x0000017e
   1f774:	000306e0 	.word	0x000306e0
   1f778:	00030990 	.word	0x00030990
   1f77c:	00030980 	.word	0x00030980
   1f780:	000306d4 	.word	0x000306d4
   1f784:	000309f0 	.word	0x000309f0
   1f788:	0000018e 	.word	0x0000018e
   1f78c:	000309d8 	.word	0x000309d8
   1f790:	00000166 	.word	0x00000166
   1f794:	000306f0 	.word	0x000306f0

0001f798 <DWHCIDeviceFlushTxFIFO>:
   1f798:	e92d4030 	push	{r4, r5, lr}
   1f79c:	e2504000 	subs	r4, r0, #0
   1f7a0:	e24dd01c 	sub	sp, sp, #28
   1f7a4:	e1a05001 	mov	r5, r1
   1f7a8:	0a00001d 	beq	1f824 <DWHCIDeviceFlushTxFIFO+0x8c>
   1f7ac:	e3a02000 	mov	r2, #0
   1f7b0:	e28d000c 	add	r0, sp, #12
   1f7b4:	e59f107c 	ldr	r1, [pc, #124]	; 1f838 <DWHCIDeviceFlushTxFIFO+0xa0>
   1f7b8:	eb000257 	bl	2011c <DWHCIRegister2>
   1f7bc:	e28d000c 	add	r0, sp, #12
   1f7c0:	e3a01020 	mov	r1, #32
   1f7c4:	eb0002ea 	bl	20374 <DWHCIRegisterOr>
   1f7c8:	e28d000c 	add	r0, sp, #12
   1f7cc:	e3e01d1f 	mvn	r1, #1984	; 0x7c0
   1f7d0:	eb0002d0 	bl	20318 <DWHCIRegisterAnd>
   1f7d4:	e1a01305 	lsl	r1, r5, #6
   1f7d8:	e28d000c 	add	r0, sp, #12
   1f7dc:	eb0002e4 	bl	20374 <DWHCIRegisterOr>
   1f7e0:	e28d000c 	add	r0, sp, #12
   1f7e4:	eb00027a 	bl	201d4 <DWHCIRegisterWrite>
   1f7e8:	e3a0300a 	mov	r3, #10
   1f7ec:	e1a00004 	mov	r0, r4
   1f7f0:	e58d3000 	str	r3, [sp]
   1f7f4:	e28d100c 	add	r1, sp, #12
   1f7f8:	e3a03000 	mov	r3, #0
   1f7fc:	e3a02020 	mov	r2, #32
   1f800:	ebfffe97 	bl	1f264 <DWHCIDeviceWaitForBit>
   1f804:	e3500000 	cmp	r0, #0
   1f808:	0a000001 	beq	1f814 <DWHCIDeviceFlushTxFIFO+0x7c>
   1f80c:	e3a00001 	mov	r0, #1
   1f810:	ebffdfe8 	bl	177b8 <usDelay>
   1f814:	e28d000c 	add	r0, sp, #12
   1f818:	eb000250 	bl	20160 <_DWHCIRegister>
   1f81c:	e28dd01c 	add	sp, sp, #28
   1f820:	e8bd8030 	pop	{r4, r5, pc}
   1f824:	e3a02fa7 	mov	r2, #668	; 0x29c
   1f828:	e59f100c 	ldr	r1, [pc, #12]	; 1f83c <DWHCIDeviceFlushTxFIFO+0xa4>
   1f82c:	e59f000c 	ldr	r0, [pc, #12]	; 1f840 <DWHCIDeviceFlushTxFIFO+0xa8>
   1f830:	ebffdffa 	bl	17820 <uspi_assertion_failed>
   1f834:	eaffffdc 	b	1f7ac <DWHCIDeviceFlushTxFIFO+0x14>
   1f838:	20980010 	.word	0x20980010
   1f83c:	000306e0 	.word	0x000306e0
   1f840:	000306f0 	.word	0x000306f0

0001f844 <DWHCIDeviceFlushRxFIFO>:
   1f844:	e92d4010 	push	{r4, lr}
   1f848:	e2504000 	subs	r4, r0, #0
   1f84c:	e24dd018 	sub	sp, sp, #24
   1f850:	0a000017 	beq	1f8b4 <DWHCIDeviceFlushRxFIFO+0x70>
   1f854:	e3a02000 	mov	r2, #0
   1f858:	e28d000c 	add	r0, sp, #12
   1f85c:	e59f1064 	ldr	r1, [pc, #100]	; 1f8c8 <DWHCIDeviceFlushRxFIFO+0x84>
   1f860:	eb00022d 	bl	2011c <DWHCIRegister2>
   1f864:	e3a01010 	mov	r1, #16
   1f868:	e28d000c 	add	r0, sp, #12
   1f86c:	eb0002c0 	bl	20374 <DWHCIRegisterOr>
   1f870:	e28d000c 	add	r0, sp, #12
   1f874:	eb000256 	bl	201d4 <DWHCIRegisterWrite>
   1f878:	e3a0300a 	mov	r3, #10
   1f87c:	e1a00004 	mov	r0, r4
   1f880:	e58d3000 	str	r3, [sp]
   1f884:	e28d100c 	add	r1, sp, #12
   1f888:	e3a03000 	mov	r3, #0
   1f88c:	e3a02010 	mov	r2, #16
   1f890:	ebfffe73 	bl	1f264 <DWHCIDeviceWaitForBit>
   1f894:	e3500000 	cmp	r0, #0
   1f898:	0a000001 	beq	1f8a4 <DWHCIDeviceFlushRxFIFO+0x60>
   1f89c:	e3a00001 	mov	r0, #1
   1f8a0:	ebffdfc4 	bl	177b8 <usDelay>
   1f8a4:	e28d000c 	add	r0, sp, #12
   1f8a8:	eb00022c 	bl	20160 <_DWHCIRegister>
   1f8ac:	e28dd018 	add	sp, sp, #24
   1f8b0:	e8bd8010 	pop	{r4, pc}
   1f8b4:	e59f2010 	ldr	r2, [pc, #16]	; 1f8cc <DWHCIDeviceFlushRxFIFO+0x88>
   1f8b8:	e59f1010 	ldr	r1, [pc, #16]	; 1f8d0 <DWHCIDeviceFlushRxFIFO+0x8c>
   1f8bc:	e59f0010 	ldr	r0, [pc, #16]	; 1f8d4 <DWHCIDeviceFlushRxFIFO+0x90>
   1f8c0:	ebffdfd6 	bl	17820 <uspi_assertion_failed>
   1f8c4:	eaffffe2 	b	1f854 <DWHCIDeviceFlushRxFIFO+0x10>
   1f8c8:	20980010 	.word	0x20980010
   1f8cc:	000002af 	.word	0x000002af
   1f8d0:	000306e0 	.word	0x000306e0
   1f8d4:	000306f0 	.word	0x000306f0

0001f8d8 <DWHCIDeviceInitHost>:
   1f8d8:	e92d4030 	push	{r4, r5, lr}
   1f8dc:	e2504000 	subs	r4, r0, #0
   1f8e0:	e24dd064 	sub	sp, sp, #100	; 0x64
   1f8e4:	0a000075 	beq	1fac0 <DWHCIDeviceInitHost+0x1e8>
   1f8e8:	e3a02000 	mov	r2, #0
   1f8ec:	e59f11e0 	ldr	r1, [pc, #480]	; 1fad4 <DWHCIDeviceInitHost+0x1fc>
   1f8f0:	e1a0000d 	mov	r0, sp
   1f8f4:	eb000208 	bl	2011c <DWHCIRegister2>
   1f8f8:	e1a0000d 	mov	r0, sp
   1f8fc:	eb000234 	bl	201d4 <DWHCIRegisterWrite>
   1f900:	e59f11d0 	ldr	r1, [pc, #464]	; 1fad8 <DWHCIDeviceInitHost+0x200>
   1f904:	e28d000c 	add	r0, sp, #12
   1f908:	eb0001f5 	bl	200e4 <DWHCIRegister>
   1f90c:	e28d000c 	add	r0, sp, #12
   1f910:	eb00021f 	bl	20194 <DWHCIRegisterRead>
   1f914:	e28d000c 	add	r0, sp, #12
   1f918:	e3e01003 	mvn	r1, #3
   1f91c:	eb00027d 	bl	20318 <DWHCIRegisterAnd>
   1f920:	e28d0018 	add	r0, sp, #24
   1f924:	e59f11b0 	ldr	r1, [pc, #432]	; 1fadc <DWHCIDeviceInitHost+0x204>
   1f928:	eb0001ed 	bl	200e4 <DWHCIRegister>
   1f92c:	e28d0024 	add	r0, sp, #36	; 0x24
   1f930:	e59f11a8 	ldr	r1, [pc, #424]	; 1fae0 <DWHCIDeviceInitHost+0x208>
   1f934:	eb0001ea 	bl	200e4 <DWHCIRegister>
   1f938:	e28d0018 	add	r0, sp, #24
   1f93c:	eb000214 	bl	20194 <DWHCIRegisterRead>
   1f940:	e1a00320 	lsr	r0, r0, #6
   1f944:	e2000003 	and	r0, r0, #3
   1f948:	e3500002 	cmp	r0, #2
   1f94c:	0a00004d 	beq	1fa88 <DWHCIDeviceInitHost+0x1b0>
   1f950:	e3a01000 	mov	r1, #0
   1f954:	e28d000c 	add	r0, sp, #12
   1f958:	eb000285 	bl	20374 <DWHCIRegisterOr>
   1f95c:	e28d000c 	add	r0, sp, #12
   1f960:	eb00021b 	bl	201d4 <DWHCIRegisterWrite>
   1f964:	e3a02b01 	mov	r2, #1024	; 0x400
   1f968:	e59f1174 	ldr	r1, [pc, #372]	; 1fae4 <DWHCIDeviceInitHost+0x20c>
   1f96c:	e28d0030 	add	r0, sp, #48	; 0x30
   1f970:	eb0001e9 	bl	2011c <DWHCIRegister2>
   1f974:	e28d0030 	add	r0, sp, #48	; 0x30
   1f978:	eb000215 	bl	201d4 <DWHCIRegisterWrite>
   1f97c:	e3a02000 	mov	r2, #0
   1f980:	e28d003c 	add	r0, sp, #60	; 0x3c
   1f984:	e59f115c 	ldr	r1, [pc, #348]	; 1fae8 <DWHCIDeviceInitHost+0x210>
   1f988:	eb0001e3 	bl	2011c <DWHCIRegister2>
   1f98c:	e28d003c 	add	r0, sp, #60	; 0x3c
   1f990:	e3a01b01 	mov	r1, #1024	; 0x400
   1f994:	eb000276 	bl	20374 <DWHCIRegisterOr>
   1f998:	e3a01301 	mov	r1, #67108864	; 0x4000000
   1f99c:	e28d003c 	add	r0, sp, #60	; 0x3c
   1f9a0:	eb000273 	bl	20374 <DWHCIRegisterOr>
   1f9a4:	e28d003c 	add	r0, sp, #60	; 0x3c
   1f9a8:	eb000209 	bl	201d4 <DWHCIRegisterWrite>
   1f9ac:	e3a02000 	mov	r2, #0
   1f9b0:	e28d0048 	add	r0, sp, #72	; 0x48
   1f9b4:	e59f1130 	ldr	r1, [pc, #304]	; 1faec <DWHCIDeviceInitHost+0x214>
   1f9b8:	eb0001d7 	bl	2011c <DWHCIRegister2>
   1f9bc:	e28d0048 	add	r0, sp, #72	; 0x48
   1f9c0:	e3a01b02 	mov	r1, #2048	; 0x800
   1f9c4:	eb00026a 	bl	20374 <DWHCIRegisterOr>
   1f9c8:	e3a01301 	mov	r1, #67108864	; 0x4000000
   1f9cc:	e28d0048 	add	r0, sp, #72	; 0x48
   1f9d0:	eb000267 	bl	20374 <DWHCIRegisterOr>
   1f9d4:	e28d0048 	add	r0, sp, #72	; 0x48
   1f9d8:	eb0001fd 	bl	201d4 <DWHCIRegisterWrite>
   1f9dc:	e3a01010 	mov	r1, #16
   1f9e0:	e1a00004 	mov	r0, r4
   1f9e4:	ebffff6b 	bl	1f798 <DWHCIDeviceFlushTxFIFO>
   1f9e8:	e1a00004 	mov	r0, r4
   1f9ec:	ebffff94 	bl	1f844 <DWHCIDeviceFlushRxFIFO>
   1f9f0:	e59f10f8 	ldr	r1, [pc, #248]	; 1faf0 <DWHCIDeviceInitHost+0x218>
   1f9f4:	e28d0054 	add	r0, sp, #84	; 0x54
   1f9f8:	eb0001b9 	bl	200e4 <DWHCIRegister>
   1f9fc:	e28d0054 	add	r0, sp, #84	; 0x54
   1fa00:	eb0001e3 	bl	20194 <DWHCIRegisterRead>
   1fa04:	e28d0054 	add	r0, sp, #84	; 0x54
   1fa08:	e3e0102e 	mvn	r1, #46	; 0x2e
   1fa0c:	eb000241 	bl	20318 <DWHCIRegisterAnd>
   1fa10:	e28d0054 	add	r0, sp, #84	; 0x54
   1fa14:	eb000204 	bl	2022c <DWHCIRegisterGet>
   1fa18:	e3100a01 	tst	r0, #4096	; 0x1000
   1fa1c:	1a000004 	bne	1fa34 <DWHCIDeviceInitHost+0x15c>
   1fa20:	e28d0054 	add	r0, sp, #84	; 0x54
   1fa24:	e3a01a01 	mov	r1, #4096	; 0x1000
   1fa28:	eb000251 	bl	20374 <DWHCIRegisterOr>
   1fa2c:	e28d0054 	add	r0, sp, #84	; 0x54
   1fa30:	eb0001e7 	bl	201d4 <DWHCIRegisterWrite>
   1fa34:	e1a00004 	mov	r0, r4
   1fa38:	ebfff848 	bl	1db60 <DWHCIDeviceEnableHostInterrupts>
   1fa3c:	e28d0054 	add	r0, sp, #84	; 0x54
   1fa40:	eb0001c6 	bl	20160 <_DWHCIRegister>
   1fa44:	e28d0048 	add	r0, sp, #72	; 0x48
   1fa48:	eb0001c4 	bl	20160 <_DWHCIRegister>
   1fa4c:	e28d003c 	add	r0, sp, #60	; 0x3c
   1fa50:	eb0001c2 	bl	20160 <_DWHCIRegister>
   1fa54:	e28d0030 	add	r0, sp, #48	; 0x30
   1fa58:	eb0001c0 	bl	20160 <_DWHCIRegister>
   1fa5c:	e28d0024 	add	r0, sp, #36	; 0x24
   1fa60:	eb0001be 	bl	20160 <_DWHCIRegister>
   1fa64:	e28d0018 	add	r0, sp, #24
   1fa68:	eb0001bc 	bl	20160 <_DWHCIRegister>
   1fa6c:	e28d000c 	add	r0, sp, #12
   1fa70:	eb0001ba 	bl	20160 <_DWHCIRegister>
   1fa74:	e1a0000d 	mov	r0, sp
   1fa78:	eb0001b8 	bl	20160 <_DWHCIRegister>
   1fa7c:	e3a00001 	mov	r0, #1
   1fa80:	e28dd064 	add	sp, sp, #100	; 0x64
   1fa84:	e8bd8030 	pop	{r4, r5, pc}
   1fa88:	e28d0018 	add	r0, sp, #24
   1fa8c:	eb0001e6 	bl	2022c <DWHCIRegisterGet>
   1fa90:	e1a00420 	lsr	r0, r0, #8
   1fa94:	e2005003 	and	r5, r0, #3
   1fa98:	e3550001 	cmp	r5, #1
   1fa9c:	1affffab 	bne	1f950 <DWHCIDeviceInitHost+0x78>
   1faa0:	e28d0024 	add	r0, sp, #36	; 0x24
   1faa4:	eb0001ba 	bl	20194 <DWHCIRegisterRead>
   1faa8:	e3100802 	tst	r0, #131072	; 0x20000
   1faac:	0affffa7 	beq	1f950 <DWHCIDeviceInitHost+0x78>
   1fab0:	e1a01005 	mov	r1, r5
   1fab4:	e28d000c 	add	r0, sp, #12
   1fab8:	eb00022d 	bl	20374 <DWHCIRegisterOr>
   1fabc:	eaffffa6 	b	1f95c <DWHCIDeviceInitHost+0x84>
   1fac0:	e59f202c 	ldr	r2, [pc, #44]	; 1faf4 <DWHCIDeviceInitHost+0x21c>
   1fac4:	e59f102c 	ldr	r1, [pc, #44]	; 1faf8 <DWHCIDeviceInitHost+0x220>
   1fac8:	e59f002c 	ldr	r0, [pc, #44]	; 1fafc <DWHCIDeviceInitHost+0x224>
   1facc:	ebffdf53 	bl	17820 <uspi_assertion_failed>
   1fad0:	eaffff84 	b	1f8e8 <DWHCIDeviceInitHost+0x10>
   1fad4:	20980e00 	.word	0x20980e00
   1fad8:	20980400 	.word	0x20980400
   1fadc:	20980048 	.word	0x20980048
   1fae0:	2098000c 	.word	0x2098000c
   1fae4:	20980024 	.word	0x20980024
   1fae8:	20980028 	.word	0x20980028
   1faec:	20980100 	.word	0x20980100
   1faf0:	20980440 	.word	0x20980440
   1faf4:	000001ad 	.word	0x000001ad
   1faf8:	000306e0 	.word	0x000306e0
   1fafc:	000306f0 	.word	0x000306f0

0001fb00 <DWHCIDeviceInitialize>:
   1fb00:	e92d4070 	push	{r4, r5, r6, lr}
   1fb04:	e2506000 	subs	r6, r0, #0
   1fb08:	e24dd018 	sub	sp, sp, #24
   1fb0c:	0a00004d 	beq	1fc48 <DWHCIDeviceInitialize+0x148>
   1fb10:	e3a05000 	mov	r5, #0
   1fb14:	ee075fba 	mcr	15, 0, r5, cr7, cr10, {5}
   1fb18:	e59f1190 	ldr	r1, [pc, #400]	; 1fcb0 <DWHCIDeviceInitialize+0x1b0>
   1fb1c:	e1a0000d 	mov	r0, sp
   1fb20:	eb00016f 	bl	200e4 <DWHCIRegister>
   1fb24:	e1a0000d 	mov	r0, sp
   1fb28:	eb000199 	bl	20194 <DWHCIRegisterRead>
   1fb2c:	e59f3180 	ldr	r3, [pc, #384]	; 1fcb4 <DWHCIDeviceInitialize+0x1b4>
   1fb30:	e1500003 	cmp	r0, r3
   1fb34:	0a00000c 	beq	1fb6c <DWHCIDeviceInitialize+0x6c>
   1fb38:	e1a0000d 	mov	r0, sp
   1fb3c:	eb0001ba 	bl	2022c <DWHCIRegisterGet>
   1fb40:	e59f2170 	ldr	r2, [pc, #368]	; 1fcb8 <DWHCIDeviceInitialize+0x1b8>
   1fb44:	e1a03000 	mov	r3, r0
   1fb48:	e3a01001 	mov	r1, #1
   1fb4c:	e59f0168 	ldr	r0, [pc, #360]	; 1fcbc <DWHCIDeviceInitialize+0x1bc>
   1fb50:	ebffa717 	bl	97b4 <LogWrite>
   1fb54:	e1a0000d 	mov	r0, sp
   1fb58:	e1a04005 	mov	r4, r5
   1fb5c:	eb00017f 	bl	20160 <_DWHCIRegister>
   1fb60:	e1a00004 	mov	r0, r4
   1fb64:	e28dd018 	add	sp, sp, #24
   1fb68:	e8bd8070 	pop	{r4, r5, r6, pc}
   1fb6c:	e3a00003 	mov	r0, #3
   1fb70:	ebffdf18 	bl	177d8 <SetPowerStateOn>
   1fb74:	e2504000 	subs	r4, r0, #0
   1fb78:	0a000037 	beq	1fc5c <DWHCIDeviceInitialize+0x15c>
   1fb7c:	e59f113c 	ldr	r1, [pc, #316]	; 1fcc0 <DWHCIDeviceInitialize+0x1c0>
   1fb80:	e28d000c 	add	r0, sp, #12
   1fb84:	eb000156 	bl	200e4 <DWHCIRegister>
   1fb88:	e28d000c 	add	r0, sp, #12
   1fb8c:	eb000180 	bl	20194 <DWHCIRegisterRead>
   1fb90:	e3e01001 	mvn	r1, #1
   1fb94:	e28d000c 	add	r0, sp, #12
   1fb98:	eb0001de 	bl	20318 <DWHCIRegisterAnd>
   1fb9c:	e28d000c 	add	r0, sp, #12
   1fba0:	eb00018b 	bl	201d4 <DWHCIRegisterWrite>
   1fba4:	e1a02006 	mov	r2, r6
   1fba8:	e59f1114 	ldr	r1, [pc, #276]	; 1fcc4 <DWHCIDeviceInitialize+0x1c4>
   1fbac:	e3a00009 	mov	r0, #9
   1fbb0:	ebffdf06 	bl	177d0 <ConnectInterrupt>
   1fbb4:	e1a00006 	mov	r0, r6
   1fbb8:	ebfffe55 	bl	1f514 <DWHCIDeviceInitCore>
   1fbbc:	e2504000 	subs	r4, r0, #0
   1fbc0:	0a000015 	beq	1fc1c <DWHCIDeviceInitialize+0x11c>
   1fbc4:	e1a00006 	mov	r0, r6
   1fbc8:	ebfff7b2 	bl	1da98 <DWHCIDeviceEnableGlobalInterrupts>
   1fbcc:	e1a00006 	mov	r0, r6
   1fbd0:	ebffff40 	bl	1f8d8 <DWHCIDeviceInitHost>
   1fbd4:	e2504000 	subs	r4, r0, #0
   1fbd8:	0a000028 	beq	1fc80 <DWHCIDeviceInitialize+0x180>
   1fbdc:	e1a00006 	mov	r0, r6
   1fbe0:	ebfffdd9 	bl	1f34c <DWHCIDeviceEnableRootPort>
   1fbe4:	e3500000 	cmp	r0, #0
   1fbe8:	0a000026 	beq	1fc88 <DWHCIDeviceInitialize+0x188>
   1fbec:	e2860d1e 	add	r0, r6, #1920	; 0x780
   1fbf0:	e280000c 	add	r0, r0, #12
   1fbf4:	eb0025e1 	bl	29380 <DWHCIRootPortInitialize>
   1fbf8:	e3500000 	cmp	r0, #0
   1fbfc:	0a000026 	beq	1fc9c <DWHCIDeviceInitialize+0x19c>
   1fc00:	ee075fba 	mcr	15, 0, r5, cr7, cr10, {5}
   1fc04:	e28d000c 	add	r0, sp, #12
   1fc08:	eb000154 	bl	20160 <_DWHCIRegister>
   1fc0c:	e1a0000d 	mov	r0, sp
   1fc10:	eb000152 	bl	20160 <_DWHCIRegister>
   1fc14:	e3a04001 	mov	r4, #1
   1fc18:	eaffffd0 	b	1fb60 <DWHCIDeviceInitialize+0x60>
   1fc1c:	e59f20a4 	ldr	r2, [pc, #164]	; 1fcc8 <DWHCIDeviceInitialize+0x1c8>
   1fc20:	e3a01001 	mov	r1, #1
   1fc24:	e59f0090 	ldr	r0, [pc, #144]	; 1fcbc <DWHCIDeviceInitialize+0x1bc>
   1fc28:	ebffa6e1 	bl	97b4 <LogWrite>
   1fc2c:	e28d000c 	add	r0, sp, #12
   1fc30:	eb00014a 	bl	20160 <_DWHCIRegister>
   1fc34:	e1a0000d 	mov	r0, sp
   1fc38:	eb000148 	bl	20160 <_DWHCIRegister>
   1fc3c:	e1a00004 	mov	r0, r4
   1fc40:	e28dd018 	add	sp, sp, #24
   1fc44:	e8bd8070 	pop	{r4, r5, r6, pc}
   1fc48:	e3a0206e 	mov	r2, #110	; 0x6e
   1fc4c:	e59f1078 	ldr	r1, [pc, #120]	; 1fccc <DWHCIDeviceInitialize+0x1cc>
   1fc50:	e59f0078 	ldr	r0, [pc, #120]	; 1fcd0 <DWHCIDeviceInitialize+0x1d0>
   1fc54:	ebffdef1 	bl	17820 <uspi_assertion_failed>
   1fc58:	eaffffac 	b	1fb10 <DWHCIDeviceInitialize+0x10>
   1fc5c:	e59f2070 	ldr	r2, [pc, #112]	; 1fcd4 <DWHCIDeviceInitialize+0x1d4>
   1fc60:	e3a01001 	mov	r1, #1
   1fc64:	e59f0050 	ldr	r0, [pc, #80]	; 1fcbc <DWHCIDeviceInitialize+0x1bc>
   1fc68:	ebffa6d1 	bl	97b4 <LogWrite>
   1fc6c:	e1a0000d 	mov	r0, sp
   1fc70:	eb00013a 	bl	20160 <_DWHCIRegister>
   1fc74:	e1a00004 	mov	r0, r4
   1fc78:	e28dd018 	add	sp, sp, #24
   1fc7c:	e8bd8070 	pop	{r4, r5, r6, pc}
   1fc80:	e59f2050 	ldr	r2, [pc, #80]	; 1fcd8 <DWHCIDeviceInitialize+0x1d8>
   1fc84:	eaffffe5 	b	1fc20 <DWHCIDeviceInitialize+0x120>
   1fc88:	e59f204c 	ldr	r2, [pc, #76]	; 1fcdc <DWHCIDeviceInitialize+0x1dc>
   1fc8c:	e3a01002 	mov	r1, #2
   1fc90:	e59f0024 	ldr	r0, [pc, #36]	; 1fcbc <DWHCIDeviceInitialize+0x1bc>
   1fc94:	ebffa6c6 	bl	97b4 <LogWrite>
   1fc98:	eaffffd9 	b	1fc04 <DWHCIDeviceInitialize+0x104>
   1fc9c:	e59f203c 	ldr	r2, [pc, #60]	; 1fce0 <DWHCIDeviceInitialize+0x1e0>
   1fca0:	e3a01002 	mov	r1, #2
   1fca4:	e59f0010 	ldr	r0, [pc, #16]	; 1fcbc <DWHCIDeviceInitialize+0x1bc>
   1fca8:	ebffa6c1 	bl	97b4 <LogWrite>
   1fcac:	eaffffd4 	b	1fc04 <DWHCIDeviceInitialize+0x104>
   1fcb0:	20980040 	.word	0x20980040
   1fcb4:	4f54280a 	.word	0x4f54280a
   1fcb8:	00030a34 	.word	0x00030a34
   1fcbc:	000306d4 	.word	0x000306d4
   1fcc0:	20980008 	.word	0x20980008
   1fcc4:	0001f14c 	.word	0x0001f14c
   1fcc8:	00030a5c 	.word	0x00030a5c
   1fccc:	000306e0 	.word	0x000306e0
   1fcd0:	000306f0 	.word	0x000306f0
   1fcd4:	00030a4c 	.word	0x00030a4c
   1fcd8:	00030a74 	.word	0x00030a74
   1fcdc:	00030a8c 	.word	0x00030a8c
   1fce0:	00030ab0 	.word	0x00030ab0

0001fce4 <DWHCIDeviceGetPortSpeed>:
   1fce4:	e92d4010 	push	{r4, lr}
   1fce8:	e3500000 	cmp	r0, #0
   1fcec:	e24dd010 	sub	sp, sp, #16
   1fcf0:	0a000010 	beq	1fd38 <DWHCIDeviceGetPortSpeed+0x54>
   1fcf4:	e59f1050 	ldr	r1, [pc, #80]	; 1fd4c <DWHCIDeviceGetPortSpeed+0x68>
   1fcf8:	e28d0004 	add	r0, sp, #4
   1fcfc:	eb0000f8 	bl	200e4 <DWHCIRegister>
   1fd00:	e28d0004 	add	r0, sp, #4
   1fd04:	eb000122 	bl	20194 <DWHCIRegisterRead>
   1fd08:	e1a008a0 	lsr	r0, r0, #17
   1fd0c:	e2000003 	and	r0, r0, #3
   1fd10:	e3500003 	cmp	r0, #3
   1fd14:	01a04000 	moveq	r4, r0
   1fd18:	159f3030 	ldrne	r3, [pc, #48]	; 1fd50 <DWHCIDeviceGetPortSpeed+0x6c>
   1fd1c:	10830000 	addne	r0, r3, r0
   1fd20:	15d04008 	ldrbne	r4, [r0, #8]
   1fd24:	e28d0004 	add	r0, sp, #4
   1fd28:	eb00010c 	bl	20160 <_DWHCIRegister>
   1fd2c:	e1a00004 	mov	r0, r4
   1fd30:	e28dd010 	add	sp, sp, #16
   1fd34:	e8bd8010 	pop	{r4, pc}
   1fd38:	e59f2014 	ldr	r2, [pc, #20]	; 1fd54 <DWHCIDeviceGetPortSpeed+0x70>
   1fd3c:	e59f1014 	ldr	r1, [pc, #20]	; 1fd58 <DWHCIDeviceGetPortSpeed+0x74>
   1fd40:	e59f0014 	ldr	r0, [pc, #20]	; 1fd5c <DWHCIDeviceGetPortSpeed+0x78>
   1fd44:	ebffdeb5 	bl	17820 <uspi_assertion_failed>
   1fd48:	eaffffe9 	b	1fcf4 <DWHCIDeviceGetPortSpeed+0x10>
   1fd4c:	20980440 	.word	0x20980440
   1fd50:	000306d4 	.word	0x000306d4
   1fd54:	0000051f 	.word	0x0000051f
   1fd58:	000306e0 	.word	0x000306e0
   1fd5c:	000306f0 	.word	0x000306f0

0001fd60 <DWHCIDeviceOvercurrentDetected>:
   1fd60:	e92d4010 	push	{r4, lr}
   1fd64:	e3500000 	cmp	r0, #0
   1fd68:	e24dd010 	sub	sp, sp, #16
   1fd6c:	0a00000f 	beq	1fdb0 <DWHCIDeviceOvercurrentDetected+0x50>
   1fd70:	e28d0004 	add	r0, sp, #4
   1fd74:	e59f1048 	ldr	r1, [pc, #72]	; 1fdc4 <DWHCIDeviceOvercurrentDetected+0x64>
   1fd78:	eb0000d9 	bl	200e4 <DWHCIRegister>
   1fd7c:	e28d0004 	add	r0, sp, #4
   1fd80:	eb000103 	bl	20194 <DWHCIRegisterRead>
   1fd84:	e2104010 	ands	r4, r0, #16
   1fd88:	e28d0004 	add	r0, sp, #4
   1fd8c:	1a000003 	bne	1fda0 <DWHCIDeviceOvercurrentDetected+0x40>
   1fd90:	eb0000f2 	bl	20160 <_DWHCIRegister>
   1fd94:	e1a00004 	mov	r0, r4
   1fd98:	e28dd010 	add	sp, sp, #16
   1fd9c:	e8bd8010 	pop	{r4, pc}
   1fda0:	eb0000ee 	bl	20160 <_DWHCIRegister>
   1fda4:	e3a00001 	mov	r0, #1
   1fda8:	e28dd010 	add	sp, sp, #16
   1fdac:	e8bd8010 	pop	{r4, pc}
   1fdb0:	e59f2010 	ldr	r2, [pc, #16]	; 1fdc8 <DWHCIDeviceOvercurrentDetected+0x68>
   1fdb4:	e59f1010 	ldr	r1, [pc, #16]	; 1fdcc <DWHCIDeviceOvercurrentDetected+0x6c>
   1fdb8:	e59f0010 	ldr	r0, [pc, #16]	; 1fdd0 <DWHCIDeviceOvercurrentDetected+0x70>
   1fdbc:	ebffde97 	bl	17820 <uspi_assertion_failed>
   1fdc0:	eaffffea 	b	1fd70 <DWHCIDeviceOvercurrentDetected+0x10>
   1fdc4:	20980440 	.word	0x20980440
   1fdc8:	0000053f 	.word	0x0000053f
   1fdcc:	000306e0 	.word	0x000306e0
   1fdd0:	000306f0 	.word	0x000306f0

0001fdd4 <DWHCIDeviceDisableRootPort>:
   1fdd4:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
   1fdd8:	e3500000 	cmp	r0, #0
   1fddc:	e24dd014 	sub	sp, sp, #20
   1fde0:	0a00000d 	beq	1fe1c <DWHCIDeviceDisableRootPort+0x48>
   1fde4:	e28d0004 	add	r0, sp, #4
   1fde8:	e59f1040 	ldr	r1, [pc, #64]	; 1fe30 <DWHCIDeviceDisableRootPort+0x5c>
   1fdec:	eb0000bc 	bl	200e4 <DWHCIRegister>
   1fdf0:	e28d0004 	add	r0, sp, #4
   1fdf4:	eb0000e6 	bl	20194 <DWHCIRegisterRead>
   1fdf8:	e3e01a01 	mvn	r1, #4096	; 0x1000
   1fdfc:	e28d0004 	add	r0, sp, #4
   1fe00:	eb000144 	bl	20318 <DWHCIRegisterAnd>
   1fe04:	e28d0004 	add	r0, sp, #4
   1fe08:	eb0000f1 	bl	201d4 <DWHCIRegisterWrite>
   1fe0c:	e28d0004 	add	r0, sp, #4
   1fe10:	eb0000d2 	bl	20160 <_DWHCIRegister>
   1fe14:	e28dd014 	add	sp, sp, #20
   1fe18:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
   1fe1c:	e59f2010 	ldr	r2, [pc, #16]	; 1fe34 <DWHCIDeviceDisableRootPort+0x60>
   1fe20:	e59f1010 	ldr	r1, [pc, #16]	; 1fe38 <DWHCIDeviceDisableRootPort+0x64>
   1fe24:	e59f0010 	ldr	r0, [pc, #16]	; 1fe3c <DWHCIDeviceDisableRootPort+0x68>
   1fe28:	ebffde7c 	bl	17820 <uspi_assertion_failed>
   1fe2c:	eaffffec 	b	1fde4 <DWHCIDeviceDisableRootPort+0x10>
   1fe30:	20980440 	.word	0x20980440
   1fe34:	00000552 	.word	0x00000552
   1fe38:	000306e0 	.word	0x000306e0
   1fe3c:	000306f0 	.word	0x000306f0

0001fe40 <DWHCIDeviceDumpRegister>:
   1fe40:	e92d4030 	push	{r4, r5, lr}
   1fe44:	e3500000 	cmp	r0, #0
   1fe48:	e24dd01c 	sub	sp, sp, #28
   1fe4c:	e1a04001 	mov	r4, r1
   1fe50:	e1a05002 	mov	r5, r2
   1fe54:	0a000010 	beq	1fe9c <DWHCIDeviceDumpRegister+0x5c>
   1fe58:	e1a01005 	mov	r1, r5
   1fe5c:	e28d000c 	add	r0, sp, #12
   1fe60:	eb00009f 	bl	200e4 <DWHCIRegister>
   1fe64:	e3a03000 	mov	r3, #0
   1fe68:	ee073fba 	mcr	15, 0, r3, cr7, cr10, {5}
   1fe6c:	e28d000c 	add	r0, sp, #12
   1fe70:	eb0000c7 	bl	20194 <DWHCIRegisterRead>
   1fe74:	e59f2034 	ldr	r2, [pc, #52]	; 1feb0 <DWHCIDeviceDumpRegister+0x70>
   1fe78:	e1a03000 	mov	r3, r0
   1fe7c:	e3a01004 	mov	r1, #4
   1fe80:	e58d4000 	str	r4, [sp]
   1fe84:	e59f0028 	ldr	r0, [pc, #40]	; 1feb4 <DWHCIDeviceDumpRegister+0x74>
   1fe88:	ebffa649 	bl	97b4 <LogWrite>
   1fe8c:	e28d000c 	add	r0, sp, #12
   1fe90:	eb0000b2 	bl	20160 <_DWHCIRegister>
   1fe94:	e28dd01c 	add	sp, sp, #28
   1fe98:	e8bd8030 	pop	{r4, r5, pc}
   1fe9c:	e59f2014 	ldr	r2, [pc, #20]	; 1feb8 <DWHCIDeviceDumpRegister+0x78>
   1fea0:	e59f1014 	ldr	r1, [pc, #20]	; 1febc <DWHCIDeviceDumpRegister+0x7c>
   1fea4:	e59f0014 	ldr	r0, [pc, #20]	; 1fec0 <DWHCIDeviceDumpRegister+0x80>
   1fea8:	ebffde5c 	bl	17820 <uspi_assertion_failed>
   1feac:	eaffffe9 	b	1fe58 <DWHCIDeviceDumpRegister+0x18>
   1feb0:	00030acc 	.word	0x00030acc
   1feb4:	000306d4 	.word	0x000306d4
   1feb8:	00000562 	.word	0x00000562
   1febc:	000306e0 	.word	0x000306e0
   1fec0:	000306f0 	.word	0x000306f0

0001fec4 <DWHCIDeviceDumpStatus>:
   1fec4:	e92d4070 	push	{r4, r5, r6, lr}
   1fec8:	e2504000 	subs	r4, r0, #0
   1fecc:	e1a06001 	mov	r6, r1
   1fed0:	0a000057 	beq	20034 <DWHCIDeviceDumpStatus+0x170>
   1fed4:	e1a00004 	mov	r0, r4
   1fed8:	e59f2168 	ldr	r2, [pc, #360]	; 20048 <DWHCIDeviceDumpStatus+0x184>
   1fedc:	e59f1168 	ldr	r1, [pc, #360]	; 2004c <DWHCIDeviceDumpStatus+0x188>
   1fee0:	ebffffd6 	bl	1fe40 <DWHCIDeviceDumpRegister>
   1fee4:	e1a00004 	mov	r0, r4
   1fee8:	e59f2160 	ldr	r2, [pc, #352]	; 20050 <DWHCIDeviceDumpStatus+0x18c>
   1feec:	e59f1160 	ldr	r1, [pc, #352]	; 20054 <DWHCIDeviceDumpStatus+0x190>
   1fef0:	ebffffd2 	bl	1fe40 <DWHCIDeviceDumpRegister>
   1fef4:	e1a00004 	mov	r0, r4
   1fef8:	e59f2158 	ldr	r2, [pc, #344]	; 20058 <DWHCIDeviceDumpStatus+0x194>
   1fefc:	e59f1158 	ldr	r1, [pc, #344]	; 2005c <DWHCIDeviceDumpStatus+0x198>
   1ff00:	ebffffce 	bl	1fe40 <DWHCIDeviceDumpRegister>
   1ff04:	e1a00004 	mov	r0, r4
   1ff08:	e59f2150 	ldr	r2, [pc, #336]	; 20060 <DWHCIDeviceDumpStatus+0x19c>
   1ff0c:	e59f1150 	ldr	r1, [pc, #336]	; 20064 <DWHCIDeviceDumpStatus+0x1a0>
   1ff10:	ebffffca 	bl	1fe40 <DWHCIDeviceDumpRegister>
   1ff14:	e1a00004 	mov	r0, r4
   1ff18:	e59f2148 	ldr	r2, [pc, #328]	; 20068 <DWHCIDeviceDumpStatus+0x1a4>
   1ff1c:	e59f1148 	ldr	r1, [pc, #328]	; 2006c <DWHCIDeviceDumpStatus+0x1a8>
   1ff20:	ebffffc6 	bl	1fe40 <DWHCIDeviceDumpRegister>
   1ff24:	e1a00004 	mov	r0, r4
   1ff28:	e59f2140 	ldr	r2, [pc, #320]	; 20070 <DWHCIDeviceDumpStatus+0x1ac>
   1ff2c:	e59f1140 	ldr	r1, [pc, #320]	; 20074 <DWHCIDeviceDumpStatus+0x1b0>
   1ff30:	ebffffc2 	bl	1fe40 <DWHCIDeviceDumpRegister>
   1ff34:	e1a00004 	mov	r0, r4
   1ff38:	e59f2138 	ldr	r2, [pc, #312]	; 20078 <DWHCIDeviceDumpStatus+0x1b4>
   1ff3c:	e59f1138 	ldr	r1, [pc, #312]	; 2007c <DWHCIDeviceDumpStatus+0x1b8>
   1ff40:	ebffffbe 	bl	1fe40 <DWHCIDeviceDumpRegister>
   1ff44:	e1a00004 	mov	r0, r4
   1ff48:	e59f2130 	ldr	r2, [pc, #304]	; 20080 <DWHCIDeviceDumpStatus+0x1bc>
   1ff4c:	e59f1130 	ldr	r1, [pc, #304]	; 20084 <DWHCIDeviceDumpStatus+0x1c0>
   1ff50:	ebffffba 	bl	1fe40 <DWHCIDeviceDumpRegister>
   1ff54:	e1a00004 	mov	r0, r4
   1ff58:	e59f2128 	ldr	r2, [pc, #296]	; 20088 <DWHCIDeviceDumpStatus+0x1c4>
   1ff5c:	e59f1128 	ldr	r1, [pc, #296]	; 2008c <DWHCIDeviceDumpStatus+0x1c8>
   1ff60:	ebffffb6 	bl	1fe40 <DWHCIDeviceDumpRegister>
   1ff64:	e1a00004 	mov	r0, r4
   1ff68:	e59f2120 	ldr	r2, [pc, #288]	; 20090 <DWHCIDeviceDumpStatus+0x1cc>
   1ff6c:	e59f1120 	ldr	r1, [pc, #288]	; 20094 <DWHCIDeviceDumpStatus+0x1d0>
   1ff70:	ebffffb2 	bl	1fe40 <DWHCIDeviceDumpRegister>
   1ff74:	e1a00004 	mov	r0, r4
   1ff78:	e59f2118 	ldr	r2, [pc, #280]	; 20098 <DWHCIDeviceDumpStatus+0x1d4>
   1ff7c:	e59f1118 	ldr	r1, [pc, #280]	; 2009c <DWHCIDeviceDumpStatus+0x1d8>
   1ff80:	ebffffae 	bl	1fe40 <DWHCIDeviceDumpRegister>
   1ff84:	e59f5114 	ldr	r5, [pc, #276]	; 200a0 <DWHCIDeviceDumpStatus+0x1dc>
   1ff88:	e1a00004 	mov	r0, r4
   1ff8c:	e59f2110 	ldr	r2, [pc, #272]	; 200a4 <DWHCIDeviceDumpStatus+0x1e0>
   1ff90:	e59f1110 	ldr	r1, [pc, #272]	; 200a8 <DWHCIDeviceDumpStatus+0x1e4>
   1ff94:	ebffffa9 	bl	1fe40 <DWHCIDeviceDumpRegister>
   1ff98:	e1a00004 	mov	r0, r4
   1ff9c:	e59f2108 	ldr	r2, [pc, #264]	; 200ac <DWHCIDeviceDumpStatus+0x1e8>
   1ffa0:	e59f1108 	ldr	r1, [pc, #264]	; 200b0 <DWHCIDeviceDumpStatus+0x1ec>
   1ffa4:	ebffffa5 	bl	1fe40 <DWHCIDeviceDumpRegister>
   1ffa8:	e0865005 	add	r5, r6, r5
   1ffac:	e1a00004 	mov	r0, r4
   1ffb0:	e59f20fc 	ldr	r2, [pc, #252]	; 200b4 <DWHCIDeviceDumpStatus+0x1f0>
   1ffb4:	e59f10fc 	ldr	r1, [pc, #252]	; 200b8 <DWHCIDeviceDumpStatus+0x1f4>
   1ffb8:	e1a05285 	lsl	r5, r5, #5
   1ffbc:	ebffff9f 	bl	1fe40 <DWHCIDeviceDumpRegister>
   1ffc0:	e1a00004 	mov	r0, r4
   1ffc4:	e59f20f0 	ldr	r2, [pc, #240]	; 200bc <DWHCIDeviceDumpStatus+0x1f8>
   1ffc8:	e59f10f0 	ldr	r1, [pc, #240]	; 200c0 <DWHCIDeviceDumpStatus+0x1fc>
   1ffcc:	ebffff9b 	bl	1fe40 <DWHCIDeviceDumpRegister>
   1ffd0:	e1a02005 	mov	r2, r5
   1ffd4:	e1a00004 	mov	r0, r4
   1ffd8:	e59f10e4 	ldr	r1, [pc, #228]	; 200c4 <DWHCIDeviceDumpStatus+0x200>
   1ffdc:	ebffff97 	bl	1fe40 <DWHCIDeviceDumpRegister>
   1ffe0:	e2852004 	add	r2, r5, #4
   1ffe4:	e1a00004 	mov	r0, r4
   1ffe8:	e59f10d8 	ldr	r1, [pc, #216]	; 200c8 <DWHCIDeviceDumpStatus+0x204>
   1ffec:	ebffff93 	bl	1fe40 <DWHCIDeviceDumpRegister>
   1fff0:	e2852008 	add	r2, r5, #8
   1fff4:	e1a00004 	mov	r0, r4
   1fff8:	e59f10cc 	ldr	r1, [pc, #204]	; 200cc <DWHCIDeviceDumpStatus+0x208>
   1fffc:	ebffff8f 	bl	1fe40 <DWHCIDeviceDumpRegister>
   20000:	e285200c 	add	r2, r5, #12
   20004:	e1a00004 	mov	r0, r4
   20008:	e59f10c0 	ldr	r1, [pc, #192]	; 200d0 <DWHCIDeviceDumpStatus+0x20c>
   2000c:	ebffff8b 	bl	1fe40 <DWHCIDeviceDumpRegister>
   20010:	e2852010 	add	r2, r5, #16
   20014:	e1a00004 	mov	r0, r4
   20018:	e59f10b4 	ldr	r1, [pc, #180]	; 200d4 <DWHCIDeviceDumpStatus+0x210>
   2001c:	ebffff87 	bl	1fe40 <DWHCIDeviceDumpRegister>
   20020:	e2852014 	add	r2, r5, #20
   20024:	e1a00004 	mov	r0, r4
   20028:	e8bd4070 	pop	{r4, r5, r6, lr}
   2002c:	e59f10a4 	ldr	r1, [pc, #164]	; 200d8 <DWHCIDeviceDumpStatus+0x214>
   20030:	eaffff82 	b	1fe40 <DWHCIDeviceDumpRegister>
   20034:	e3a02e57 	mov	r2, #1392	; 0x570
   20038:	e59f109c 	ldr	r1, [pc, #156]	; 200dc <DWHCIDeviceDumpStatus+0x218>
   2003c:	e59f009c 	ldr	r0, [pc, #156]	; 200e0 <DWHCIDeviceDumpStatus+0x21c>
   20040:	ebffddf6 	bl	17820 <uspi_assertion_failed>
   20044:	eaffffa2 	b	1fed4 <DWHCIDeviceDumpStatus+0x10>
   20048:	20980000 	.word	0x20980000
   2004c:	00030ad8 	.word	0x00030ad8
   20050:	20980008 	.word	0x20980008
   20054:	00030ae4 	.word	0x00030ae4
   20058:	2098000c 	.word	0x2098000c
   2005c:	00030aec 	.word	0x00030aec
   20060:	20980010 	.word	0x20980010
   20064:	00030af4 	.word	0x00030af4
   20068:	20980014 	.word	0x20980014
   2006c:	00030afc 	.word	0x00030afc
   20070:	20980018 	.word	0x20980018
   20074:	00030b08 	.word	0x00030b08
   20078:	20980024 	.word	0x20980024
   2007c:	00030b14 	.word	0x00030b14
   20080:	20980028 	.word	0x20980028
   20084:	00030b20 	.word	0x00030b20
   20088:	2098002c 	.word	0x2098002c
   2008c:	00030b34 	.word	0x00030b34
   20090:	20980100 	.word	0x20980100
   20094:	00030b44 	.word	0x00030b44
   20098:	20980400 	.word	0x20980400
   2009c:	00030b5c 	.word	0x00030b5c
   200a0:	0104c028 	.word	0x0104c028
   200a4:	20980410 	.word	0x20980410
   200a8:	00030b68 	.word	0x00030b68
   200ac:	20980414 	.word	0x20980414
   200b0:	00030b80 	.word	0x00030b80
   200b4:	20980418 	.word	0x20980418
   200b8:	00030b94 	.word	0x00030b94
   200bc:	20980440 	.word	0x20980440
   200c0:	00030bac 	.word	0x00030bac
   200c4:	00030bb8 	.word	0x00030bb8
   200c8:	00030bd0 	.word	0x00030bd0
   200cc:	00030be8 	.word	0x00030be8
   200d0:	00030bfc 	.word	0x00030bfc
   200d4:	00030c14 	.word	0x00030c14
   200d8:	00030c2c 	.word	0x00030c2c
   200dc:	000306e0 	.word	0x000306e0
   200e0:	000306f0 	.word	0x000306f0

000200e4 <DWHCIRegister>:
   200e4:	e92d4070 	push	{r4, r5, r6, lr}
   200e8:	e2504000 	subs	r4, r0, #0
   200ec:	e1a05001 	mov	r5, r1
   200f0:	0a000002 	beq	20100 <DWHCIRegister+0x1c>
   200f4:	e3a03000 	mov	r3, #0
   200f8:	e8840028 	stm	r4, {r3, r5}
   200fc:	e8bd8070 	pop	{r4, r5, r6, pc}
   20100:	e3a0201a 	mov	r2, #26
   20104:	e59f1008 	ldr	r1, [pc, #8]	; 20114 <DWHCIRegister+0x30>
   20108:	e59f0008 	ldr	r0, [pc, #8]	; 20118 <DWHCIRegister+0x34>
   2010c:	ebffddc3 	bl	17820 <uspi_assertion_failed>
   20110:	eafffff7 	b	200f4 <DWHCIRegister+0x10>
   20114:	00030c44 	.word	0x00030c44
   20118:	000306f0 	.word	0x000306f0

0002011c <DWHCIRegister2>:
   2011c:	e92d4070 	push	{r4, r5, r6, lr}
   20120:	e2504000 	subs	r4, r0, #0
   20124:	e1a06001 	mov	r6, r1
   20128:	e1a05002 	mov	r5, r2
   2012c:	0a000004 	beq	20144 <DWHCIRegister2+0x28>
   20130:	e3a03001 	mov	r3, #1
   20134:	e5846004 	str	r6, [r4, #4]
   20138:	e5845008 	str	r5, [r4, #8]
   2013c:	e5843000 	str	r3, [r4]
   20140:	e8bd8070 	pop	{r4, r5, r6, pc}
   20144:	e3a02021 	mov	r2, #33	; 0x21
   20148:	e59f1008 	ldr	r1, [pc, #8]	; 20158 <DWHCIRegister2+0x3c>
   2014c:	e59f0008 	ldr	r0, [pc, #8]	; 2015c <DWHCIRegister2+0x40>
   20150:	ebffddb2 	bl	17820 <uspi_assertion_failed>
   20154:	eafffff5 	b	20130 <DWHCIRegister2+0x14>
   20158:	00030c44 	.word	0x00030c44
   2015c:	000306f0 	.word	0x000306f0

00020160 <_DWHCIRegister>:
   20160:	e92d4010 	push	{r4, lr}
   20164:	e2504000 	subs	r4, r0, #0
   20168:	0a000002 	beq	20178 <_DWHCIRegister+0x18>
   2016c:	e3a03000 	mov	r3, #0
   20170:	e5843000 	str	r3, [r4]
   20174:	e8bd8010 	pop	{r4, pc}
   20178:	e3a02029 	mov	r2, #41	; 0x29
   2017c:	e59f1008 	ldr	r1, [pc, #8]	; 2018c <_DWHCIRegister+0x2c>
   20180:	e59f0008 	ldr	r0, [pc, #8]	; 20190 <_DWHCIRegister+0x30>
   20184:	ebffdda5 	bl	17820 <uspi_assertion_failed>
   20188:	eafffff7 	b	2016c <_DWHCIRegister+0xc>
   2018c:	00030c44 	.word	0x00030c44
   20190:	000306f0 	.word	0x000306f0

00020194 <DWHCIRegisterRead>:
   20194:	e92d4010 	push	{r4, lr}
   20198:	e2504000 	subs	r4, r0, #0
   2019c:	0a000005 	beq	201b8 <DWHCIRegisterRead+0x24>
   201a0:	e3a03001 	mov	r3, #1
   201a4:	e5942004 	ldr	r2, [r4, #4]
   201a8:	e5920000 	ldr	r0, [r2]
   201ac:	e5843000 	str	r3, [r4]
   201b0:	e5840008 	str	r0, [r4, #8]
   201b4:	e8bd8010 	pop	{r4, pc}
   201b8:	e3a0202f 	mov	r2, #47	; 0x2f
   201bc:	e59f1008 	ldr	r1, [pc, #8]	; 201cc <DWHCIRegisterRead+0x38>
   201c0:	e59f0008 	ldr	r0, [pc, #8]	; 201d0 <DWHCIRegisterRead+0x3c>
   201c4:	ebffdd95 	bl	17820 <uspi_assertion_failed>
   201c8:	eafffff4 	b	201a0 <DWHCIRegisterRead+0xc>
   201cc:	00030c44 	.word	0x00030c44
   201d0:	000306f0 	.word	0x000306f0

000201d4 <DWHCIRegisterWrite>:
   201d4:	e92d4010 	push	{r4, lr}
   201d8:	e2504000 	subs	r4, r0, #0
   201dc:	0a00000a 	beq	2020c <DWHCIRegisterWrite+0x38>
   201e0:	e5943000 	ldr	r3, [r4]
   201e4:	e3530000 	cmp	r3, #0
   201e8:	1a000003 	bne	201fc <DWHCIRegisterWrite+0x28>
   201ec:	e3a02039 	mov	r2, #57	; 0x39
   201f0:	e59f1028 	ldr	r1, [pc, #40]	; 20220 <DWHCIRegisterWrite+0x4c>
   201f4:	e59f0028 	ldr	r0, [pc, #40]	; 20224 <DWHCIRegisterWrite+0x50>
   201f8:	ebffdd88 	bl	17820 <uspi_assertion_failed>
   201fc:	e5943004 	ldr	r3, [r4, #4]
   20200:	e5942008 	ldr	r2, [r4, #8]
   20204:	e5832000 	str	r2, [r3]
   20208:	e8bd8010 	pop	{r4, pc}
   2020c:	e3a02038 	mov	r2, #56	; 0x38
   20210:	e59f1008 	ldr	r1, [pc, #8]	; 20220 <DWHCIRegisterWrite+0x4c>
   20214:	e59f000c 	ldr	r0, [pc, #12]	; 20228 <DWHCIRegisterWrite+0x54>
   20218:	ebffdd80 	bl	17820 <uspi_assertion_failed>
   2021c:	eaffffef 	b	201e0 <DWHCIRegisterWrite+0xc>
   20220:	00030c44 	.word	0x00030c44
   20224:	00030c54 	.word	0x00030c54
   20228:	000306f0 	.word	0x000306f0

0002022c <DWHCIRegisterGet>:
   2022c:	e92d4010 	push	{r4, lr}
   20230:	e2504000 	subs	r4, r0, #0
   20234:	0a000008 	beq	2025c <DWHCIRegisterGet+0x30>
   20238:	e5943000 	ldr	r3, [r4]
   2023c:	e3530000 	cmp	r3, #0
   20240:	1a000003 	bne	20254 <DWHCIRegisterGet+0x28>
   20244:	e3a02040 	mov	r2, #64	; 0x40
   20248:	e59f1020 	ldr	r1, [pc, #32]	; 20270 <DWHCIRegisterGet+0x44>
   2024c:	e59f0020 	ldr	r0, [pc, #32]	; 20274 <DWHCIRegisterGet+0x48>
   20250:	ebffdd72 	bl	17820 <uspi_assertion_failed>
   20254:	e5940008 	ldr	r0, [r4, #8]
   20258:	e8bd8010 	pop	{r4, pc}
   2025c:	e3a0203f 	mov	r2, #63	; 0x3f
   20260:	e59f1008 	ldr	r1, [pc, #8]	; 20270 <DWHCIRegisterGet+0x44>
   20264:	e59f000c 	ldr	r0, [pc, #12]	; 20278 <DWHCIRegisterGet+0x4c>
   20268:	ebffdd6c 	bl	17820 <uspi_assertion_failed>
   2026c:	eafffff1 	b	20238 <DWHCIRegisterGet+0xc>
   20270:	00030c44 	.word	0x00030c44
   20274:	00030c54 	.word	0x00030c54
   20278:	000306f0 	.word	0x000306f0

0002027c <DWHCIRegisterSet>:
   2027c:	e92d4070 	push	{r4, r5, r6, lr}
   20280:	e2504000 	subs	r4, r0, #0
   20284:	e1a05001 	mov	r5, r1
   20288:	0a000003 	beq	2029c <DWHCIRegisterSet+0x20>
   2028c:	e3a03001 	mov	r3, #1
   20290:	e5845008 	str	r5, [r4, #8]
   20294:	e5843000 	str	r3, [r4]
   20298:	e8bd8070 	pop	{r4, r5, r6, pc}
   2029c:	e3a02046 	mov	r2, #70	; 0x46
   202a0:	e59f1008 	ldr	r1, [pc, #8]	; 202b0 <DWHCIRegisterSet+0x34>
   202a4:	e59f0008 	ldr	r0, [pc, #8]	; 202b4 <DWHCIRegisterSet+0x38>
   202a8:	ebffdd5c 	bl	17820 <uspi_assertion_failed>
   202ac:	eafffff6 	b	2028c <DWHCIRegisterSet+0x10>
   202b0:	00030c44 	.word	0x00030c44
   202b4:	000306f0 	.word	0x000306f0

000202b8 <DWHCIRegisterIsSet>:
   202b8:	e92d4070 	push	{r4, r5, r6, lr}
   202bc:	e2504000 	subs	r4, r0, #0
   202c0:	e1a05001 	mov	r5, r1
   202c4:	0a00000b 	beq	202f8 <DWHCIRegisterIsSet+0x40>
   202c8:	e5943000 	ldr	r3, [r4]
   202cc:	e3530000 	cmp	r3, #0
   202d0:	1a000003 	bne	202e4 <DWHCIRegisterIsSet+0x2c>
   202d4:	e3a0204e 	mov	r2, #78	; 0x4e
   202d8:	e59f102c 	ldr	r1, [pc, #44]	; 2030c <DWHCIRegisterIsSet+0x54>
   202dc:	e59f002c 	ldr	r0, [pc, #44]	; 20310 <DWHCIRegisterIsSet+0x58>
   202e0:	ebffdd4e 	bl	17820 <uspi_assertion_failed>
   202e4:	e5943008 	ldr	r3, [r4, #8]
   202e8:	e1150003 	tst	r5, r3
   202ec:	13a00001 	movne	r0, #1
   202f0:	03a00000 	moveq	r0, #0
   202f4:	e8bd8070 	pop	{r4, r5, r6, pc}
   202f8:	e3a0204d 	mov	r2, #77	; 0x4d
   202fc:	e59f1008 	ldr	r1, [pc, #8]	; 2030c <DWHCIRegisterIsSet+0x54>
   20300:	e59f000c 	ldr	r0, [pc, #12]	; 20314 <DWHCIRegisterIsSet+0x5c>
   20304:	ebffdd45 	bl	17820 <uspi_assertion_failed>
   20308:	eaffffee 	b	202c8 <DWHCIRegisterIsSet+0x10>
   2030c:	00030c44 	.word	0x00030c44
   20310:	00030c54 	.word	0x00030c54
   20314:	000306f0 	.word	0x000306f0

00020318 <DWHCIRegisterAnd>:
   20318:	e92d4070 	push	{r4, r5, r6, lr}
   2031c:	e2504000 	subs	r4, r0, #0
   20320:	e1a05001 	mov	r5, r1
   20324:	0a00000a 	beq	20354 <DWHCIRegisterAnd+0x3c>
   20328:	e5943000 	ldr	r3, [r4]
   2032c:	e3530000 	cmp	r3, #0
   20330:	1a000003 	bne	20344 <DWHCIRegisterAnd+0x2c>
   20334:	e3a02055 	mov	r2, #85	; 0x55
   20338:	e59f1028 	ldr	r1, [pc, #40]	; 20368 <DWHCIRegisterAnd+0x50>
   2033c:	e59f0028 	ldr	r0, [pc, #40]	; 2036c <DWHCIRegisterAnd+0x54>
   20340:	ebffdd36 	bl	17820 <uspi_assertion_failed>
   20344:	e5941008 	ldr	r1, [r4, #8]
   20348:	e0011005 	and	r1, r1, r5
   2034c:	e5841008 	str	r1, [r4, #8]
   20350:	e8bd8070 	pop	{r4, r5, r6, pc}
   20354:	e3a02054 	mov	r2, #84	; 0x54
   20358:	e59f1008 	ldr	r1, [pc, #8]	; 20368 <DWHCIRegisterAnd+0x50>
   2035c:	e59f000c 	ldr	r0, [pc, #12]	; 20370 <DWHCIRegisterAnd+0x58>
   20360:	ebffdd2e 	bl	17820 <uspi_assertion_failed>
   20364:	eaffffef 	b	20328 <DWHCIRegisterAnd+0x10>
   20368:	00030c44 	.word	0x00030c44
   2036c:	00030c54 	.word	0x00030c54
   20370:	000306f0 	.word	0x000306f0

00020374 <DWHCIRegisterOr>:
   20374:	e92d4070 	push	{r4, r5, r6, lr}
   20378:	e2504000 	subs	r4, r0, #0
   2037c:	e1a05001 	mov	r5, r1
   20380:	0a00000a 	beq	203b0 <DWHCIRegisterOr+0x3c>
   20384:	e5943000 	ldr	r3, [r4]
   20388:	e3530000 	cmp	r3, #0
   2038c:	1a000003 	bne	203a0 <DWHCIRegisterOr+0x2c>
   20390:	e3a0205c 	mov	r2, #92	; 0x5c
   20394:	e59f1028 	ldr	r1, [pc, #40]	; 203c4 <DWHCIRegisterOr+0x50>
   20398:	e59f0028 	ldr	r0, [pc, #40]	; 203c8 <DWHCIRegisterOr+0x54>
   2039c:	ebffdd1f 	bl	17820 <uspi_assertion_failed>
   203a0:	e5941008 	ldr	r1, [r4, #8]
   203a4:	e1811005 	orr	r1, r1, r5
   203a8:	e5841008 	str	r1, [r4, #8]
   203ac:	e8bd8070 	pop	{r4, r5, r6, pc}
   203b0:	e3a0205b 	mov	r2, #91	; 0x5b
   203b4:	e59f1008 	ldr	r1, [pc, #8]	; 203c4 <DWHCIRegisterOr+0x50>
   203b8:	e59f000c 	ldr	r0, [pc, #12]	; 203cc <DWHCIRegisterOr+0x58>
   203bc:	ebffdd17 	bl	17820 <uspi_assertion_failed>
   203c0:	eaffffef 	b	20384 <DWHCIRegisterOr+0x10>
   203c4:	00030c44 	.word	0x00030c44
   203c8:	00030c54 	.word	0x00030c54
   203cc:	000306f0 	.word	0x000306f0

000203d0 <DWHCIRegisterClearBit>:
   203d0:	e92d4070 	push	{r4, r5, r6, lr}
   203d4:	e2504000 	subs	r4, r0, #0
   203d8:	e1a05001 	mov	r5, r1
   203dc:	0a000012 	beq	2042c <DWHCIRegisterClearBit+0x5c>
   203e0:	e5943000 	ldr	r3, [r4]
   203e4:	e3530000 	cmp	r3, #0
   203e8:	0a00000a 	beq	20418 <DWHCIRegisterClearBit+0x48>
   203ec:	e355001f 	cmp	r5, #31
   203f0:	9a000003 	bls	20404 <DWHCIRegisterClearBit+0x34>
   203f4:	e3a02064 	mov	r2, #100	; 0x64
   203f8:	e59f1040 	ldr	r1, [pc, #64]	; 20440 <DWHCIRegisterClearBit+0x70>
   203fc:	e59f0040 	ldr	r0, [pc, #64]	; 20444 <DWHCIRegisterClearBit+0x74>
   20400:	ebffdd06 	bl	17820 <uspi_assertion_failed>
   20404:	e3a03001 	mov	r3, #1
   20408:	e5941008 	ldr	r1, [r4, #8]
   2040c:	e1c11513 	bic	r1, r1, r3, lsl r5
   20410:	e5841008 	str	r1, [r4, #8]
   20414:	e8bd8070 	pop	{r4, r5, r6, pc}
   20418:	e3a02063 	mov	r2, #99	; 0x63
   2041c:	e59f101c 	ldr	r1, [pc, #28]	; 20440 <DWHCIRegisterClearBit+0x70>
   20420:	e59f0020 	ldr	r0, [pc, #32]	; 20448 <DWHCIRegisterClearBit+0x78>
   20424:	ebffdcfd 	bl	17820 <uspi_assertion_failed>
   20428:	eaffffef 	b	203ec <DWHCIRegisterClearBit+0x1c>
   2042c:	e3a02062 	mov	r2, #98	; 0x62
   20430:	e59f1008 	ldr	r1, [pc, #8]	; 20440 <DWHCIRegisterClearBit+0x70>
   20434:	e59f0010 	ldr	r0, [pc, #16]	; 2044c <DWHCIRegisterClearBit+0x7c>
   20438:	ebffdcf8 	bl	17820 <uspi_assertion_failed>
   2043c:	eaffffe7 	b	203e0 <DWHCIRegisterClearBit+0x10>
   20440:	00030c44 	.word	0x00030c44
   20444:	00030c64 	.word	0x00030c64
   20448:	00030c54 	.word	0x00030c54
   2044c:	000306f0 	.word	0x000306f0

00020450 <DWHCIRegisterSetBit>:
   20450:	e92d4070 	push	{r4, r5, r6, lr}
   20454:	e2504000 	subs	r4, r0, #0
   20458:	e1a05001 	mov	r5, r1
   2045c:	0a000012 	beq	204ac <DWHCIRegisterSetBit+0x5c>
   20460:	e5943000 	ldr	r3, [r4]
   20464:	e3530000 	cmp	r3, #0
   20468:	0a00000a 	beq	20498 <DWHCIRegisterSetBit+0x48>
   2046c:	e355001f 	cmp	r5, #31
   20470:	9a000003 	bls	20484 <DWHCIRegisterSetBit+0x34>
   20474:	e3a0206c 	mov	r2, #108	; 0x6c
   20478:	e59f1040 	ldr	r1, [pc, #64]	; 204c0 <DWHCIRegisterSetBit+0x70>
   2047c:	e59f0040 	ldr	r0, [pc, #64]	; 204c4 <DWHCIRegisterSetBit+0x74>
   20480:	ebffdce6 	bl	17820 <uspi_assertion_failed>
   20484:	e3a03001 	mov	r3, #1
   20488:	e5941008 	ldr	r1, [r4, #8]
   2048c:	e1811513 	orr	r1, r1, r3, lsl r5
   20490:	e5841008 	str	r1, [r4, #8]
   20494:	e8bd8070 	pop	{r4, r5, r6, pc}
   20498:	e3a0206b 	mov	r2, #107	; 0x6b
   2049c:	e59f101c 	ldr	r1, [pc, #28]	; 204c0 <DWHCIRegisterSetBit+0x70>
   204a0:	e59f0020 	ldr	r0, [pc, #32]	; 204c8 <DWHCIRegisterSetBit+0x78>
   204a4:	ebffdcdd 	bl	17820 <uspi_assertion_failed>
   204a8:	eaffffef 	b	2046c <DWHCIRegisterSetBit+0x1c>
   204ac:	e3a0206a 	mov	r2, #106	; 0x6a
   204b0:	e59f1008 	ldr	r1, [pc, #8]	; 204c0 <DWHCIRegisterSetBit+0x70>
   204b4:	e59f0010 	ldr	r0, [pc, #16]	; 204cc <DWHCIRegisterSetBit+0x7c>
   204b8:	ebffdcd8 	bl	17820 <uspi_assertion_failed>
   204bc:	eaffffe7 	b	20460 <DWHCIRegisterSetBit+0x10>
   204c0:	00030c44 	.word	0x00030c44
   204c4:	00030c64 	.word	0x00030c64
   204c8:	00030c54 	.word	0x00030c54
   204cc:	000306f0 	.word	0x000306f0

000204d0 <DWHCIRegisterClearAll>:
   204d0:	e92d4010 	push	{r4, lr}
   204d4:	e2504000 	subs	r4, r0, #0
   204d8:	0a000004 	beq	204f0 <DWHCIRegisterClearAll+0x20>
   204dc:	e3a02000 	mov	r2, #0
   204e0:	e3a03001 	mov	r3, #1
   204e4:	e5842008 	str	r2, [r4, #8]
   204e8:	e5843000 	str	r3, [r4]
   204ec:	e8bd8010 	pop	{r4, pc}
   204f0:	e3a02072 	mov	r2, #114	; 0x72
   204f4:	e59f1008 	ldr	r1, [pc, #8]	; 20504 <DWHCIRegisterClearAll+0x34>
   204f8:	e59f0008 	ldr	r0, [pc, #8]	; 20508 <DWHCIRegisterClearAll+0x38>
   204fc:	ebffdcc7 	bl	17820 <uspi_assertion_failed>
   20500:	eafffff5 	b	204dc <DWHCIRegisterClearAll+0xc>
   20504:	00030c44 	.word	0x00030c44
   20508:	000306f0 	.word	0x000306f0

0002050c <DWHCIRegisterSetAll>:
   2050c:	e92d4010 	push	{r4, lr}
   20510:	e2504000 	subs	r4, r0, #0
   20514:	0a000004 	beq	2052c <DWHCIRegisterSetAll+0x20>
   20518:	e3e02000 	mvn	r2, #0
   2051c:	e3a03001 	mov	r3, #1
   20520:	e5842008 	str	r2, [r4, #8]
   20524:	e5843000 	str	r3, [r4]
   20528:	e8bd8010 	pop	{r4, pc}
   2052c:	e3a02079 	mov	r2, #121	; 0x79
   20530:	e59f1008 	ldr	r1, [pc, #8]	; 20540 <DWHCIRegisterSetAll+0x34>
   20534:	e59f0008 	ldr	r0, [pc, #8]	; 20544 <DWHCIRegisterSetAll+0x38>
   20538:	ebffdcb8 	bl	17820 <uspi_assertion_failed>
   2053c:	eafffff5 	b	20518 <DWHCIRegisterSetAll+0xc>
   20540:	00030c44 	.word	0x00030c44
   20544:	000306f0 	.word	0x000306f0

00020548 <DWHCIRegisterDump>:
   20548:	e92d4010 	push	{r4, lr}
   2054c:	e2504000 	subs	r4, r0, #0
   20550:	e24dd008 	sub	sp, sp, #8
   20554:	0a000012 	beq	205a4 <DWHCIRegisterDump+0x5c>
   20558:	e1c420d0 	ldrd	r2, [r4]
   2055c:	e1a03a03 	lsl	r3, r3, #20
   20560:	e3520000 	cmp	r2, #0
   20564:	e1a03a23 	lsr	r3, r3, #20
   20568:	1a000005 	bne	20584 <DWHCIRegisterDump+0x3c>
   2056c:	e3a01004 	mov	r1, #4
   20570:	e59f2040 	ldr	r2, [pc, #64]	; 205b8 <DWHCIRegisterDump+0x70>
   20574:	e59f0040 	ldr	r0, [pc, #64]	; 205bc <DWHCIRegisterDump+0x74>
   20578:	e28dd008 	add	sp, sp, #8
   2057c:	e8bd4010 	pop	{r4, lr}
   20580:	eaffa48b 	b	97b4 <LogWrite>
   20584:	e5942008 	ldr	r2, [r4, #8]
   20588:	e3a01004 	mov	r1, #4
   2058c:	e58d2000 	str	r2, [sp]
   20590:	e59f0024 	ldr	r0, [pc, #36]	; 205bc <DWHCIRegisterDump+0x74>
   20594:	e59f2024 	ldr	r2, [pc, #36]	; 205c0 <DWHCIRegisterDump+0x78>
   20598:	ebffa485 	bl	97b4 <LogWrite>
   2059c:	e28dd008 	add	sp, sp, #8
   205a0:	e8bd8010 	pop	{r4, pc}
   205a4:	e3a02082 	mov	r2, #130	; 0x82
   205a8:	e59f1014 	ldr	r1, [pc, #20]	; 205c4 <DWHCIRegisterDump+0x7c>
   205ac:	e59f0014 	ldr	r0, [pc, #20]	; 205c8 <DWHCIRegisterDump+0x80>
   205b0:	ebffdc9a 	bl	17820 <uspi_assertion_failed>
   205b4:	eaffffe7 	b	20558 <DWHCIRegisterDump+0x10>
   205b8:	00030cac 	.word	0x00030cac
   205bc:	00030ca4 	.word	0x00030ca4
   205c0:	00030c88 	.word	0x00030c88
   205c4:	00030c44 	.word	0x00030c44
   205c8:	000306f0 	.word	0x000306f0

000205cc <_DWHCITransferStageData>:
   205cc:	e92d4010 	push	{r4, lr}
   205d0:	e2504000 	subs	r4, r0, #0
   205d4:	0a00000b 	beq	20608 <_DWHCITransferStageData+0x3c>
   205d8:	e5943050 	ldr	r3, [r4, #80]	; 0x50
   205dc:	e3530000 	cmp	r3, #0
   205e0:	0a000002 	beq	205f0 <_DWHCITransferStageData+0x24>
   205e4:	e5943054 	ldr	r3, [r4, #84]	; 0x54
   205e8:	e2840054 	add	r0, r4, #84	; 0x54
   205ec:	e12fff33 	blx	r3
   205f0:	e3a03000 	mov	r3, #0
   205f4:	e584304c 	str	r3, [r4, #76]	; 0x4c
   205f8:	e584301c 	str	r3, [r4, #28]
   205fc:	e5843018 	str	r3, [r4, #24]
   20600:	e5843004 	str	r3, [r4, #4]
   20604:	e8bd8010 	pop	{r4, pc}
   20608:	e3a02080 	mov	r2, #128	; 0x80
   2060c:	e59f1008 	ldr	r1, [pc, #8]	; 2061c <_DWHCITransferStageData+0x50>
   20610:	e59f0008 	ldr	r0, [pc, #8]	; 20620 <_DWHCITransferStageData+0x54>
   20614:	ebffdc81 	bl	17820 <uspi_assertion_failed>
   20618:	eaffffee 	b	205d8 <_DWHCITransferStageData+0xc>
   2061c:	00030ccc 	.word	0x00030ccc
   20620:	000306f0 	.word	0x000306f0

00020624 <DWHCITransferStageDataTransactionComplete>:
   20624:	e92d4070 	push	{r4, r5, r6, lr}
   20628:	e2504000 	subs	r4, r0, #0
   2062c:	e24dd008 	sub	sp, sp, #8
   20630:	e1a06001 	mov	r6, r1
   20634:	e1a05002 	mov	r5, r2
   20638:	0a000043 	beq	2074c <DWHCITransferStageDataTransactionComplete+0x128>
   2063c:	e59f2144 	ldr	r2, [pc, #324]	; 20788 <DWHCITransferStageDataTransactionComplete+0x164>
   20640:	e5846044 	str	r6, [r4, #68]	; 0x44
   20644:	e0022006 	and	r2, r2, r6
   20648:	e3520000 	cmp	r2, #0
   2064c:	1a00001e 	bne	206cc <DWHCITransferStageDataTransactionComplete+0xa8>
   20650:	e5941010 	ldr	r1, [r4, #16]
   20654:	e5942034 	ldr	r2, [r4, #52]	; 0x34
   20658:	e594c030 	ldr	ip, [r4, #48]	; 0x30
   2065c:	e3510000 	cmp	r1, #0
   20660:	e0425005 	sub	r5, r2, r5
   20664:	e04c3003 	sub	r3, ip, r3
   20668:	e5941038 	ldr	r1, [r4, #56]	; 0x38
   2066c:	e594204c 	ldr	r2, [r4, #76]	; 0x4c
   20670:	1a000017 	bne	206d4 <DWHCITransferStageDataTransactionComplete+0xb0>
   20674:	e0831001 	add	r1, r3, r1
   20678:	e0823003 	add	r3, r2, r3
   2067c:	e5841038 	str	r1, [r4, #56]	; 0x38
   20680:	e584304c 	str	r3, [r4, #76]	; 0x4c
   20684:	e594200c 	ldr	r2, [r4, #12]
   20688:	e1a01005 	mov	r1, r5
   2068c:	e594001c 	ldr	r0, [r4, #28]
   20690:	eb000995 	bl	22cec <USBEndpointSkipPID>
   20694:	e594302c 	ldr	r3, [r4, #44]	; 0x2c
   20698:	e1530005 	cmp	r3, r5
   2069c:	3a00001c 	bcc	20714 <DWHCITransferStageDataTransactionComplete+0xf0>
   206a0:	e5941028 	ldr	r1, [r4, #40]	; 0x28
   206a4:	e5942038 	ldr	r2, [r4, #56]	; 0x38
   206a8:	e5940030 	ldr	r0, [r4, #48]	; 0x30
   206ac:	e0435005 	sub	r5, r3, r5
   206b0:	e0413002 	sub	r3, r1, r2
   206b4:	e1530000 	cmp	r3, r0
   206b8:	e584502c 	str	r5, [r4, #44]	; 0x2c
   206bc:	2a000002 	bcs	206cc <DWHCITransferStageDataTransactionComplete+0xa8>
   206c0:	e1510002 	cmp	r1, r2
   206c4:	3a000018 	bcc	2072c <DWHCITransferStageDataTransactionComplete+0x108>
   206c8:	e5843030 	str	r3, [r4, #48]	; 0x30
   206cc:	e28dd008 	add	sp, sp, #8
   206d0:	e8bd8070 	pop	{r4, r5, r6, pc}
   206d4:	e16f0f13 	clz	r0, r3
   206d8:	e594e014 	ldr	lr, [r4, #20]
   206dc:	e1a002a0 	lsr	r0, r0, #5
   206e0:	e35e0000 	cmp	lr, #0
   206e4:	03a00000 	moveq	r0, #0
   206e8:	e3500000 	cmp	r0, #0
   206ec:	1a00001d 	bne	20768 <DWHCITransferStageDataTransactionComplete+0x144>
   206f0:	e0831001 	add	r1, r3, r1
   206f4:	e35e0000 	cmp	lr, #0
   206f8:	e0823003 	add	r3, r2, r3
   206fc:	e5841038 	str	r1, [r4, #56]	; 0x38
   20700:	e584304c 	str	r3, [r4, #76]	; 0x4c
   20704:	1affffde 	bne	20684 <DWHCITransferStageDataTransactionComplete+0x60>
   20708:	e594302c 	ldr	r3, [r4, #44]	; 0x2c
   2070c:	e1530005 	cmp	r3, r5
   20710:	2affffe2 	bcs	206a0 <DWHCITransferStageDataTransactionComplete+0x7c>
   20714:	e3a020b9 	mov	r2, #185	; 0xb9
   20718:	e59f106c 	ldr	r1, [pc, #108]	; 2078c <DWHCITransferStageDataTransactionComplete+0x168>
   2071c:	e59f006c 	ldr	r0, [pc, #108]	; 20790 <DWHCITransferStageDataTransactionComplete+0x16c>
   20720:	ebffdc3e 	bl	17820 <uspi_assertion_failed>
   20724:	e594302c 	ldr	r3, [r4, #44]	; 0x2c
   20728:	eaffffdc 	b	206a0 <DWHCITransferStageDataTransactionComplete+0x7c>
   2072c:	e3a020bf 	mov	r2, #191	; 0xbf
   20730:	e59f1054 	ldr	r1, [pc, #84]	; 2078c <DWHCITransferStageDataTransactionComplete+0x168>
   20734:	e59f0058 	ldr	r0, [pc, #88]	; 20794 <DWHCITransferStageDataTransactionComplete+0x170>
   20738:	ebffdc38 	bl	17820 <uspi_assertion_failed>
   2073c:	e5943028 	ldr	r3, [r4, #40]	; 0x28
   20740:	e5942038 	ldr	r2, [r4, #56]	; 0x38
   20744:	e0433002 	sub	r3, r3, r2
   20748:	eaffffde 	b	206c8 <DWHCITransferStageDataTransactionComplete+0xa4>
   2074c:	e3a02090 	mov	r2, #144	; 0x90
   20750:	e59f1034 	ldr	r1, [pc, #52]	; 2078c <DWHCITransferStageDataTransactionComplete+0x168>
   20754:	e59f003c 	ldr	r0, [pc, #60]	; 20798 <DWHCITransferStageDataTransactionComplete+0x174>
   20758:	e58d3004 	str	r3, [sp, #4]
   2075c:	ebffdc2f 	bl	17820 <uspi_assertion_failed>
   20760:	e59d3004 	ldr	r3, [sp, #4]
   20764:	eaffffb4 	b	2063c <DWHCITransferStageDataTransactionComplete+0x18>
   20768:	e35c0000 	cmp	ip, #0
   2076c:	15943024 	ldrne	r3, [r4, #36]	; 0x24
   20770:	10030593 	mulne	r3, r3, r5
   20774:	10811003 	addne	r1, r1, r3
   20778:	10822003 	addne	r2, r2, r3
   2077c:	e5841038 	str	r1, [r4, #56]	; 0x38
   20780:	e584204c 	str	r2, [r4, #76]	; 0x4c
   20784:	eaffffbe 	b	20684 <DWHCITransferStageDataTransactionComplete+0x60>
   20788:	000007dc 	.word	0x000007dc
   2078c:	00030ccc 	.word	0x00030ccc
   20790:	00030ce4 	.word	0x00030ce4
   20794:	00030d0c 	.word	0x00030d0c
   20798:	000306f0 	.word	0x000306f0

0002079c <DWHCITransferStageDataSetSplitComplete>:
   2079c:	e92d4070 	push	{r4, r5, r6, lr}
   207a0:	e2504000 	subs	r4, r0, #0
   207a4:	e1a05001 	mov	r5, r1
   207a8:	0a000008 	beq	207d0 <DWHCITransferStageDataSetSplitComplete+0x34>
   207ac:	e5943010 	ldr	r3, [r4, #16]
   207b0:	e3530000 	cmp	r3, #0
   207b4:	1a000003 	bne	207c8 <DWHCITransferStageDataSetSplitComplete+0x2c>
   207b8:	e3a020c7 	mov	r2, #199	; 0xc7
   207bc:	e59f1020 	ldr	r1, [pc, #32]	; 207e4 <DWHCITransferStageDataSetSplitComplete+0x48>
   207c0:	e59f0020 	ldr	r0, [pc, #32]	; 207e8 <DWHCITransferStageDataSetSplitComplete+0x4c>
   207c4:	ebffdc15 	bl	17820 <uspi_assertion_failed>
   207c8:	e5845014 	str	r5, [r4, #20]
   207cc:	e8bd8070 	pop	{r4, r5, r6, pc}
   207d0:	e3a020c6 	mov	r2, #198	; 0xc6
   207d4:	e59f1008 	ldr	r1, [pc, #8]	; 207e4 <DWHCITransferStageDataSetSplitComplete+0x48>
   207d8:	e59f000c 	ldr	r0, [pc, #12]	; 207ec <DWHCITransferStageDataSetSplitComplete+0x50>
   207dc:	ebffdc0f 	bl	17820 <uspi_assertion_failed>
   207e0:	eafffff1 	b	207ac <DWHCITransferStageDataSetSplitComplete+0x10>
   207e4:	00030ccc 	.word	0x00030ccc
   207e8:	00030d48 	.word	0x00030d48
   207ec:	000306f0 	.word	0x000306f0

000207f0 <DWHCITransferStageDataSetState>:
   207f0:	e92d4070 	push	{r4, r5, r6, lr}
   207f4:	e2504000 	subs	r4, r0, #0
   207f8:	e1a05001 	mov	r5, r1
   207fc:	0a000001 	beq	20808 <DWHCITransferStageDataSetState+0x18>
   20800:	e584503c 	str	r5, [r4, #60]	; 0x3c
   20804:	e8bd8070 	pop	{r4, r5, r6, pc}
   20808:	e3a020ce 	mov	r2, #206	; 0xce
   2080c:	e59f100c 	ldr	r1, [pc, #12]	; 20820 <DWHCITransferStageDataSetState+0x30>
   20810:	e59f000c 	ldr	r0, [pc, #12]	; 20824 <DWHCITransferStageDataSetState+0x34>
   20814:	ebffdc01 	bl	17820 <uspi_assertion_failed>
   20818:	e584503c 	str	r5, [r4, #60]	; 0x3c
   2081c:	e8bd8070 	pop	{r4, r5, r6, pc}
   20820:	00030ccc 	.word	0x00030ccc
   20824:	000306f0 	.word	0x000306f0

00020828 <DWHCITransferStageDataGetState>:
   20828:	e92d4010 	push	{r4, lr}
   2082c:	e2504000 	subs	r4, r0, #0
   20830:	0a000001 	beq	2083c <DWHCITransferStageDataGetState+0x14>
   20834:	e594003c 	ldr	r0, [r4, #60]	; 0x3c
   20838:	e8bd8010 	pop	{r4, pc}
   2083c:	e3a020d4 	mov	r2, #212	; 0xd4
   20840:	e59f100c 	ldr	r1, [pc, #12]	; 20854 <DWHCITransferStageDataGetState+0x2c>
   20844:	e59f000c 	ldr	r0, [pc, #12]	; 20858 <DWHCITransferStageDataGetState+0x30>
   20848:	ebffdbf4 	bl	17820 <uspi_assertion_failed>
   2084c:	e594003c 	ldr	r0, [r4, #60]	; 0x3c
   20850:	e8bd8010 	pop	{r4, pc}
   20854:	00030ccc 	.word	0x00030ccc
   20858:	000306f0 	.word	0x000306f0

0002085c <DWHCITransferStageDataSetSubState>:
   2085c:	e92d4070 	push	{r4, r5, r6, lr}
   20860:	e2504000 	subs	r4, r0, #0
   20864:	e1a05001 	mov	r5, r1
   20868:	0a000001 	beq	20874 <DWHCITransferStageDataSetSubState+0x18>
   2086c:	e5845040 	str	r5, [r4, #64]	; 0x40
   20870:	e8bd8070 	pop	{r4, r5, r6, pc}
   20874:	e3a020da 	mov	r2, #218	; 0xda
   20878:	e59f100c 	ldr	r1, [pc, #12]	; 2088c <DWHCITransferStageDataSetSubState+0x30>
   2087c:	e59f000c 	ldr	r0, [pc, #12]	; 20890 <DWHCITransferStageDataSetSubState+0x34>
   20880:	ebffdbe6 	bl	17820 <uspi_assertion_failed>
   20884:	e5845040 	str	r5, [r4, #64]	; 0x40
   20888:	e8bd8070 	pop	{r4, r5, r6, pc}
   2088c:	00030ccc 	.word	0x00030ccc
   20890:	000306f0 	.word	0x000306f0

00020894 <DWHCITransferStageDataGetSubState>:
   20894:	e92d4010 	push	{r4, lr}
   20898:	e2504000 	subs	r4, r0, #0
   2089c:	0a000001 	beq	208a8 <DWHCITransferStageDataGetSubState+0x14>
   208a0:	e5940040 	ldr	r0, [r4, #64]	; 0x40
   208a4:	e8bd8010 	pop	{r4, pc}
   208a8:	e3a020e0 	mov	r2, #224	; 0xe0
   208ac:	e59f100c 	ldr	r1, [pc, #12]	; 208c0 <DWHCITransferStageDataGetSubState+0x2c>
   208b0:	e59f000c 	ldr	r0, [pc, #12]	; 208c4 <DWHCITransferStageDataGetSubState+0x30>
   208b4:	ebffdbd9 	bl	17820 <uspi_assertion_failed>
   208b8:	e5940040 	ldr	r0, [r4, #64]	; 0x40
   208bc:	e8bd8010 	pop	{r4, pc}
   208c0:	00030ccc 	.word	0x00030ccc
   208c4:	000306f0 	.word	0x000306f0

000208c8 <DWHCITransferStageDataBeginSplitCycle>:
   208c8:	e3a00001 	mov	r0, #1
   208cc:	e12fff1e 	bx	lr

000208d0 <DWHCITransferStageDataGetChannelNumber>:
   208d0:	e92d4010 	push	{r4, lr}
   208d4:	e2504000 	subs	r4, r0, #0
   208d8:	0a000001 	beq	208e4 <DWHCITransferStageDataGetChannelNumber+0x14>
   208dc:	e5940000 	ldr	r0, [r4]
   208e0:	e8bd8010 	pop	{r4, pc}
   208e4:	e3a020eb 	mov	r2, #235	; 0xeb
   208e8:	e59f100c 	ldr	r1, [pc, #12]	; 208fc <DWHCITransferStageDataGetChannelNumber+0x2c>
   208ec:	e59f000c 	ldr	r0, [pc, #12]	; 20900 <DWHCITransferStageDataGetChannelNumber+0x30>
   208f0:	ebffdbca 	bl	17820 <uspi_assertion_failed>
   208f4:	e5940000 	ldr	r0, [r4]
   208f8:	e8bd8010 	pop	{r4, pc}
   208fc:	00030ccc 	.word	0x00030ccc
   20900:	000306f0 	.word	0x000306f0

00020904 <DWHCITransferStageDataIsPeriodic>:
   20904:	e92d4010 	push	{r4, lr}
   20908:	e2504000 	subs	r4, r0, #0
   2090c:	0a00000f 	beq	20950 <DWHCITransferStageDataIsPeriodic+0x4c>
   20910:	e594001c 	ldr	r0, [r4, #28]
   20914:	e3500000 	cmp	r0, #0
   20918:	0a000006 	beq	20938 <DWHCITransferStageDataIsPeriodic+0x34>
   2091c:	eb00088e 	bl	22b5c <USBEndpointGetType>
   20920:	e2400002 	sub	r0, r0, #2
   20924:	e6ef0070 	uxtb	r0, r0
   20928:	e3500001 	cmp	r0, #1
   2092c:	83a00000 	movhi	r0, #0
   20930:	93a00001 	movls	r0, #1
   20934:	e8bd8010 	pop	{r4, pc}
   20938:	e59f0024 	ldr	r0, [pc, #36]	; 20964 <DWHCITransferStageDataIsPeriodic+0x60>
   2093c:	e3a020f2 	mov	r2, #242	; 0xf2
   20940:	e59f1020 	ldr	r1, [pc, #32]	; 20968 <DWHCITransferStageDataIsPeriodic+0x64>
   20944:	ebffdbb5 	bl	17820 <uspi_assertion_failed>
   20948:	e594001c 	ldr	r0, [r4, #28]
   2094c:	eafffff2 	b	2091c <DWHCITransferStageDataIsPeriodic+0x18>
   20950:	e3a020f1 	mov	r2, #241	; 0xf1
   20954:	e59f100c 	ldr	r1, [pc, #12]	; 20968 <DWHCITransferStageDataIsPeriodic+0x64>
   20958:	e59f000c 	ldr	r0, [pc, #12]	; 2096c <DWHCITransferStageDataIsPeriodic+0x68>
   2095c:	ebffdbaf 	bl	17820 <uspi_assertion_failed>
   20960:	eaffffea 	b	20910 <DWHCITransferStageDataIsPeriodic+0xc>
   20964:	00030d64 	.word	0x00030d64
   20968:	00030ccc 	.word	0x00030ccc
   2096c:	000306f0 	.word	0x000306f0

00020970 <DWHCITransferStageData>:
   20970:	e92d40f0 	push	{r4, r5, r6, r7, lr}
   20974:	e2504000 	subs	r4, r0, #0
   20978:	e24dd00c 	sub	sp, sp, #12
   2097c:	e1a07001 	mov	r7, r1
   20980:	e1a05002 	mov	r5, r2
   20984:	e59d6020 	ldr	r6, [sp, #32]
   20988:	0a000077 	beq	20b6c <DWHCITransferStageData+0x1fc>
   2098c:	e3a02000 	mov	r2, #0
   20990:	e1550002 	cmp	r5, r2
   20994:	e5847000 	str	r7, [r4]
   20998:	e5845004 	str	r5, [r4, #4]
   2099c:	e5843008 	str	r3, [r4, #8]
   209a0:	e584600c 	str	r6, [r4, #12]
   209a4:	e5842014 	str	r2, [r4, #20]
   209a8:	e5842038 	str	r2, [r4, #56]	; 0x38
   209ac:	e584203c 	str	r2, [r4, #60]	; 0x3c
   209b0:	e5842040 	str	r2, [r4, #64]	; 0x40
   209b4:	e5842044 	str	r2, [r4, #68]	; 0x44
   209b8:	e5842050 	str	r2, [r4, #80]	; 0x50
   209bc:	0a000071 	beq	20b88 <DWHCITransferStageData+0x218>
   209c0:	e1a00005 	mov	r0, r5
   209c4:	eb000955 	bl	22f20 <USBRequestGetEndpoint>
   209c8:	e3500000 	cmp	r0, #0
   209cc:	e584001c 	str	r0, [r4, #28]
   209d0:	0a000071 	beq	20b9c <DWHCITransferStageData+0x22c>
   209d4:	eb00083f 	bl	22ad8 <USBEndpointGetDevice>
   209d8:	e3500000 	cmp	r0, #0
   209dc:	e5840018 	str	r0, [r4, #24]
   209e0:	0a000076 	beq	20bc0 <DWHCITransferStageData+0x250>
   209e4:	eb00038d 	bl	21820 <USBDeviceGetSpeed>
   209e8:	e5c40020 	strb	r0, [r4, #32]
   209ec:	e594001c 	ldr	r0, [r4, #28]
   209f0:	eb000881 	bl	22bfc <USBEndpointGetMaxPacketSize>
   209f4:	e5840024 	str	r0, [r4, #36]	; 0x24
   209f8:	e5940018 	ldr	r0, [r4, #24]
   209fc:	eb0003a2 	bl	2188c <USBDeviceGetHubAddress>
   20a00:	e3500000 	cmp	r0, #0
   20a04:	0a000002 	beq	20a14 <DWHCITransferStageData+0xa4>
   20a08:	e5d40020 	ldrb	r0, [r4, #32]
   20a0c:	e2500002 	subs	r0, r0, #2
   20a10:	13a00001 	movne	r0, #1
   20a14:	e3560000 	cmp	r6, #0
   20a18:	e5840010 	str	r0, [r4, #16]
   20a1c:	0a00002a 	beq	20acc <DWHCITransferStageData+0x15c>
   20a20:	e3a01000 	mov	r1, #0
   20a24:	e3a02001 	mov	r2, #1
   20a28:	e2843048 	add	r3, r4, #72	; 0x48
   20a2c:	e5841028 	str	r1, [r4, #40]	; 0x28
   20a30:	e5841030 	str	r1, [r4, #48]	; 0x30
   20a34:	e584202c 	str	r2, [r4, #44]	; 0x2c
   20a38:	e5842034 	str	r2, [r4, #52]	; 0x34
   20a3c:	e584304c 	str	r3, [r4, #76]	; 0x4c
   20a40:	e3130003 	tst	r3, #3
   20a44:	1a00001b 	bne	20ab8 <DWHCITransferStageData+0x148>
   20a48:	e5943010 	ldr	r3, [r4, #16]
   20a4c:	e3530000 	cmp	r3, #0
   20a50:	0a000009 	beq	20a7c <DWHCITransferStageData+0x10c>
   20a54:	e1a00004 	mov	r0, r4
   20a58:	ebffffa9 	bl	20904 <DWHCITransferStageDataIsPeriodic>
   20a5c:	e3500000 	cmp	r0, #0
   20a60:	e2840054 	add	r0, r4, #84	; 0x54
   20a64:	1a000011 	bne	20ab0 <DWHCITransferStageData+0x140>
   20a68:	eb001efb 	bl	2865c <DWHCIFrameSchedulerNonPeriodic>
   20a6c:	e3a03001 	mov	r3, #1
   20a70:	e5843050 	str	r3, [r4, #80]	; 0x50
   20a74:	e28dd00c 	add	sp, sp, #12
   20a78:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
   20a7c:	e5940018 	ldr	r0, [r4, #24]
   20a80:	eb000381 	bl	2188c <USBDeviceGetHubAddress>
   20a84:	e3500000 	cmp	r0, #0
   20a88:	1afffff9 	bne	20a74 <DWHCITransferStageData+0x104>
   20a8c:	e5d43020 	ldrb	r3, [r4, #32]
   20a90:	e3530002 	cmp	r3, #2
   20a94:	0afffff6 	beq	20a74 <DWHCITransferStageData+0x104>
   20a98:	e1a00004 	mov	r0, r4
   20a9c:	ebffff98 	bl	20904 <DWHCITransferStageDataIsPeriodic>
   20aa0:	e1a01000 	mov	r1, r0
   20aa4:	e2840054 	add	r0, r4, #84	; 0x54
   20aa8:	eb002474 	bl	29c80 <DWHCIFrameSchedulerNoSplit>
   20aac:	eaffffee 	b	20a6c <DWHCITransferStageData+0xfc>
   20ab0:	eb001fcc 	bl	289e8 <DWHCIFrameSchedulerPeriodic>
   20ab4:	eaffffec 	b	20a6c <DWHCITransferStageData+0xfc>
   20ab8:	e3a02062 	mov	r2, #98	; 0x62
   20abc:	e59f1124 	ldr	r1, [pc, #292]	; 20be8 <DWHCITransferStageData+0x278>
   20ac0:	e59f0124 	ldr	r0, [pc, #292]	; 20bec <DWHCITransferStageData+0x27c>
   20ac4:	ebffdb55 	bl	17820 <uspi_assertion_failed>
   20ac8:	eaffffde 	b	20a48 <DWHCITransferStageData+0xd8>
   20acc:	e1a01006 	mov	r1, r6
   20ad0:	e594001c 	ldr	r0, [r4, #28]
   20ad4:	eb000869 	bl	22c80 <USBEndpointGetNextPID>
   20ad8:	e3500000 	cmp	r0, #0
   20adc:	e1a00005 	mov	r0, r5
   20ae0:	0a00001c 	beq	20b58 <DWHCITransferStageData+0x1e8>
   20ae4:	eb00097c 	bl	230dc <USBRequestGetBuffer>
   20ae8:	e584004c 	str	r0, [r4, #76]	; 0x4c
   20aec:	e1a00005 	mov	r0, r5
   20af0:	eb000990 	bl	23138 <USBRequestGetBufLen>
   20af4:	e1a05000 	mov	r5, r0
   20af8:	e5840028 	str	r0, [r4, #40]	; 0x28
   20afc:	e5946024 	ldr	r6, [r4, #36]	; 0x24
   20b00:	e2460001 	sub	r0, r6, #1
   20b04:	e0800005 	add	r0, r0, r5
   20b08:	e1a01006 	mov	r1, r6
   20b0c:	eb003414 	bl	2db64 <__udivsi3>
   20b10:	e5943010 	ldr	r3, [r4, #16]
   20b14:	e584002c 	str	r0, [r4, #44]	; 0x2c
   20b18:	e3530000 	cmp	r3, #0
   20b1c:	0a00002d 	beq	20bd8 <DWHCITransferStageData+0x268>
   20b20:	e3a03001 	mov	r3, #1
   20b24:	e1560005 	cmp	r6, r5
   20b28:	31a05006 	movcc	r5, r6
   20b2c:	e5843034 	str	r3, [r4, #52]	; 0x34
   20b30:	e594304c 	ldr	r3, [r4, #76]	; 0x4c
   20b34:	e5845030 	str	r5, [r4, #48]	; 0x30
   20b38:	e3530000 	cmp	r3, #0
   20b3c:	1affffbf 	bne	20a40 <DWHCITransferStageData+0xd0>
   20b40:	e3a02061 	mov	r2, #97	; 0x61
   20b44:	e59f109c 	ldr	r1, [pc, #156]	; 20be8 <DWHCITransferStageData+0x278>
   20b48:	e59f00a0 	ldr	r0, [pc, #160]	; 20bf0 <DWHCITransferStageData+0x280>
   20b4c:	ebffdb33 	bl	17820 <uspi_assertion_failed>
   20b50:	e594304c 	ldr	r3, [r4, #76]	; 0x4c
   20b54:	eaffffb9 	b	20a40 <DWHCITransferStageData+0xd0>
   20b58:	eb000941 	bl	23064 <USBRequestGetSetupData>
   20b5c:	e3a05008 	mov	r5, #8
   20b60:	e584004c 	str	r0, [r4, #76]	; 0x4c
   20b64:	e5845028 	str	r5, [r4, #40]	; 0x28
   20b68:	eaffffe3 	b	20afc <DWHCITransferStageData+0x18c>
   20b6c:	e3a0201b 	mov	r2, #27
   20b70:	e59f1070 	ldr	r1, [pc, #112]	; 20be8 <DWHCITransferStageData+0x278>
   20b74:	e59f0078 	ldr	r0, [pc, #120]	; 20bf4 <DWHCITransferStageData+0x284>
   20b78:	e58d3004 	str	r3, [sp, #4]
   20b7c:	ebffdb27 	bl	17820 <uspi_assertion_failed>
   20b80:	e59d3004 	ldr	r3, [sp, #4]
   20b84:	eaffff80 	b	2098c <DWHCITransferStageData+0x1c>
   20b88:	e3a02028 	mov	r2, #40	; 0x28
   20b8c:	e59f1054 	ldr	r1, [pc, #84]	; 20be8 <DWHCITransferStageData+0x278>
   20b90:	e59f0060 	ldr	r0, [pc, #96]	; 20bf8 <DWHCITransferStageData+0x288>
   20b94:	ebffdb21 	bl	17820 <uspi_assertion_failed>
   20b98:	eaffff88 	b	209c0 <DWHCITransferStageData+0x50>
   20b9c:	e3a0202b 	mov	r2, #43	; 0x2b
   20ba0:	e59f1040 	ldr	r1, [pc, #64]	; 20be8 <DWHCITransferStageData+0x278>
   20ba4:	e59f0050 	ldr	r0, [pc, #80]	; 20bfc <DWHCITransferStageData+0x28c>
   20ba8:	ebffdb1c 	bl	17820 <uspi_assertion_failed>
   20bac:	e594001c 	ldr	r0, [r4, #28]
   20bb0:	eb0007c8 	bl	22ad8 <USBEndpointGetDevice>
   20bb4:	e3500000 	cmp	r0, #0
   20bb8:	e5840018 	str	r0, [r4, #24]
   20bbc:	1affff88 	bne	209e4 <DWHCITransferStageData+0x74>
   20bc0:	e59f0038 	ldr	r0, [pc, #56]	; 20c00 <DWHCITransferStageData+0x290>
   20bc4:	e3a0202d 	mov	r2, #45	; 0x2d
   20bc8:	e59f1018 	ldr	r1, [pc, #24]	; 20be8 <DWHCITransferStageData+0x278>
   20bcc:	ebffdb13 	bl	17820 <uspi_assertion_failed>
   20bd0:	e5940018 	ldr	r0, [r4, #24]
   20bd4:	eaffff82 	b	209e4 <DWHCITransferStageData+0x74>
   20bd8:	e5845030 	str	r5, [r4, #48]	; 0x30
   20bdc:	e5840034 	str	r0, [r4, #52]	; 0x34
   20be0:	e594304c 	ldr	r3, [r4, #76]	; 0x4c
   20be4:	eaffffd3 	b	20b38 <DWHCITransferStageData+0x1c8>
   20be8:	00030ccc 	.word	0x00030ccc
   20bec:	00030dc8 	.word	0x00030dc8
   20bf0:	00030da8 	.word	0x00030da8
   20bf4:	000306f0 	.word	0x000306f0
   20bf8:	00030d7c 	.word	0x00030d7c
   20bfc:	00030d64 	.word	0x00030d64
   20c00:	00030d90 	.word	0x00030d90

00020c04 <DWHCITransferStageDataGetDeviceAddress>:
   20c04:	e92d4010 	push	{r4, lr}
   20c08:	e2504000 	subs	r4, r0, #0
   20c0c:	0a00000b 	beq	20c40 <DWHCITransferStageDataGetDeviceAddress+0x3c>
   20c10:	e5940018 	ldr	r0, [r4, #24]
   20c14:	e3500000 	cmp	r0, #0
   20c18:	0a000001 	beq	20c24 <DWHCITransferStageDataGetDeviceAddress+0x20>
   20c1c:	e8bd4010 	pop	{r4, lr}
   20c20:	ea0002f1 	b	217ec <USBDeviceGetAddress>
   20c24:	e59f0028 	ldr	r0, [pc, #40]	; 20c54 <DWHCITransferStageDataGetDeviceAddress+0x50>
   20c28:	e3a020fc 	mov	r2, #252	; 0xfc
   20c2c:	e59f1024 	ldr	r1, [pc, #36]	; 20c58 <DWHCITransferStageDataGetDeviceAddress+0x54>
   20c30:	ebffdafa 	bl	17820 <uspi_assertion_failed>
   20c34:	e5940018 	ldr	r0, [r4, #24]
   20c38:	e8bd4010 	pop	{r4, lr}
   20c3c:	ea0002ea 	b	217ec <USBDeviceGetAddress>
   20c40:	e3a020fb 	mov	r2, #251	; 0xfb
   20c44:	e59f100c 	ldr	r1, [pc, #12]	; 20c58 <DWHCITransferStageDataGetDeviceAddress+0x54>
   20c48:	e59f000c 	ldr	r0, [pc, #12]	; 20c5c <DWHCITransferStageDataGetDeviceAddress+0x58>
   20c4c:	ebffdaf3 	bl	17820 <uspi_assertion_failed>
   20c50:	eaffffee 	b	20c10 <DWHCITransferStageDataGetDeviceAddress+0xc>
   20c54:	00030d90 	.word	0x00030d90
   20c58:	00030ccc 	.word	0x00030ccc
   20c5c:	000306f0 	.word	0x000306f0

00020c60 <DWHCITransferStageDataGetEndpointType>:
   20c60:	e92d4010 	push	{r4, lr}
   20c64:	e2504000 	subs	r4, r0, #0
   20c68:	0a000018 	beq	20cd0 <DWHCITransferStageDataGetEndpointType+0x70>
   20c6c:	e594001c 	ldr	r0, [r4, #28]
   20c70:	e3500000 	cmp	r0, #0
   20c74:	0a00000f 	beq	20cb8 <DWHCITransferStageDataGetEndpointType+0x58>
   20c78:	eb0007b7 	bl	22b5c <USBEndpointGetType>
   20c7c:	e3500001 	cmp	r0, #1
   20c80:	0a00000a 	beq	20cb0 <DWHCITransferStageDataGetEndpointType+0x50>
   20c84:	3a000007 	bcc	20ca8 <DWHCITransferStageDataGetEndpointType+0x48>
   20c88:	e3500002 	cmp	r0, #2
   20c8c:	1a000001 	bne	20c98 <DWHCITransferStageDataGetEndpointType+0x38>
   20c90:	e3a00003 	mov	r0, #3
   20c94:	e8bd8010 	pop	{r4, pc}
   20c98:	e59f2044 	ldr	r2, [pc, #68]	; 20ce4 <DWHCITransferStageDataGetEndpointType+0x84>
   20c9c:	e59f1044 	ldr	r1, [pc, #68]	; 20ce8 <DWHCITransferStageDataGetEndpointType+0x88>
   20ca0:	e59f0044 	ldr	r0, [pc, #68]	; 20cec <DWHCITransferStageDataGetEndpointType+0x8c>
   20ca4:	ebffdadd 	bl	17820 <uspi_assertion_failed>
   20ca8:	e3a00000 	mov	r0, #0
   20cac:	e8bd8010 	pop	{r4, pc}
   20cb0:	e3a00002 	mov	r0, #2
   20cb4:	e8bd8010 	pop	{r4, pc}
   20cb8:	e59f0030 	ldr	r0, [pc, #48]	; 20cf0 <DWHCITransferStageDataGetEndpointType+0x90>
   20cbc:	e59f2030 	ldr	r2, [pc, #48]	; 20cf4 <DWHCITransferStageDataGetEndpointType+0x94>
   20cc0:	e59f1020 	ldr	r1, [pc, #32]	; 20ce8 <DWHCITransferStageDataGetEndpointType+0x88>
   20cc4:	ebffdad5 	bl	17820 <uspi_assertion_failed>
   20cc8:	e594001c 	ldr	r0, [r4, #28]
   20ccc:	eaffffe9 	b	20c78 <DWHCITransferStageDataGetEndpointType+0x18>
   20cd0:	e59f2020 	ldr	r2, [pc, #32]	; 20cf8 <DWHCITransferStageDataGetEndpointType+0x98>
   20cd4:	e59f100c 	ldr	r1, [pc, #12]	; 20ce8 <DWHCITransferStageDataGetEndpointType+0x88>
   20cd8:	e59f001c 	ldr	r0, [pc, #28]	; 20cfc <DWHCITransferStageDataGetEndpointType+0x9c>
   20cdc:	ebffdacf 	bl	17820 <uspi_assertion_failed>
   20ce0:	eaffffe1 	b	20c6c <DWHCITransferStageDataGetEndpointType+0xc>
   20ce4:	00000116 	.word	0x00000116
   20ce8:	00030ccc 	.word	0x00030ccc
   20cec:	00030678 	.word	0x00030678
   20cf0:	00030d64 	.word	0x00030d64
   20cf4:	00000103 	.word	0x00000103
   20cf8:	00000102 	.word	0x00000102
   20cfc:	000306f0 	.word	0x000306f0

00020d00 <DWHCITransferStageDataGetEndpointNumber>:
   20d00:	e92d4010 	push	{r4, lr}
   20d04:	e2504000 	subs	r4, r0, #0
   20d08:	0a00000b 	beq	20d3c <DWHCITransferStageDataGetEndpointNumber+0x3c>
   20d0c:	e594001c 	ldr	r0, [r4, #28]
   20d10:	e3500000 	cmp	r0, #0
   20d14:	0a000001 	beq	20d20 <DWHCITransferStageDataGetEndpointNumber+0x20>
   20d18:	e8bd4010 	pop	{r4, lr}
   20d1c:	ea000781 	b	22b28 <USBEndpointGetNumber>
   20d20:	e59f0028 	ldr	r0, [pc, #40]	; 20d50 <DWHCITransferStageDataGetEndpointNumber+0x50>
   20d24:	e3a02e12 	mov	r2, #288	; 0x120
   20d28:	e59f1024 	ldr	r1, [pc, #36]	; 20d54 <DWHCITransferStageDataGetEndpointNumber+0x54>
   20d2c:	ebffdabb 	bl	17820 <uspi_assertion_failed>
   20d30:	e594001c 	ldr	r0, [r4, #28]
   20d34:	e8bd4010 	pop	{r4, lr}
   20d38:	ea00077a 	b	22b28 <USBEndpointGetNumber>
   20d3c:	e59f2014 	ldr	r2, [pc, #20]	; 20d58 <DWHCITransferStageDataGetEndpointNumber+0x58>
   20d40:	e59f100c 	ldr	r1, [pc, #12]	; 20d54 <DWHCITransferStageDataGetEndpointNumber+0x54>
   20d44:	e59f0010 	ldr	r0, [pc, #16]	; 20d5c <DWHCITransferStageDataGetEndpointNumber+0x5c>
   20d48:	ebffdab4 	bl	17820 <uspi_assertion_failed>
   20d4c:	eaffffee 	b	20d0c <DWHCITransferStageDataGetEndpointNumber+0xc>
   20d50:	00030d64 	.word	0x00030d64
   20d54:	00030ccc 	.word	0x00030ccc
   20d58:	0000011f 	.word	0x0000011f
   20d5c:	000306f0 	.word	0x000306f0

00020d60 <DWHCITransferStageDataGetMaxPacketSize>:
   20d60:	e92d4010 	push	{r4, lr}
   20d64:	e2504000 	subs	r4, r0, #0
   20d68:	0a000001 	beq	20d74 <DWHCITransferStageDataGetMaxPacketSize+0x14>
   20d6c:	e5940024 	ldr	r0, [r4, #36]	; 0x24
   20d70:	e8bd8010 	pop	{r4, pc}
   20d74:	e59f2010 	ldr	r2, [pc, #16]	; 20d8c <DWHCITransferStageDataGetMaxPacketSize+0x2c>
   20d78:	e59f1010 	ldr	r1, [pc, #16]	; 20d90 <DWHCITransferStageDataGetMaxPacketSize+0x30>
   20d7c:	e59f0010 	ldr	r0, [pc, #16]	; 20d94 <DWHCITransferStageDataGetMaxPacketSize+0x34>
   20d80:	ebffdaa6 	bl	17820 <uspi_assertion_failed>
   20d84:	e5940024 	ldr	r0, [r4, #36]	; 0x24
   20d88:	e8bd8010 	pop	{r4, pc}
   20d8c:	00000126 	.word	0x00000126
   20d90:	00030ccc 	.word	0x00030ccc
   20d94:	000306f0 	.word	0x000306f0

00020d98 <DWHCITransferStageDataGetSpeed>:
   20d98:	e92d4010 	push	{r4, lr}
   20d9c:	e2504000 	subs	r4, r0, #0
   20da0:	0a000001 	beq	20dac <DWHCITransferStageDataGetSpeed+0x14>
   20da4:	e5d40020 	ldrb	r0, [r4, #32]
   20da8:	e8bd8010 	pop	{r4, pc}
   20dac:	e3a02f4b 	mov	r2, #300	; 0x12c
   20db0:	e59f100c 	ldr	r1, [pc, #12]	; 20dc4 <DWHCITransferStageDataGetSpeed+0x2c>
   20db4:	e59f000c 	ldr	r0, [pc, #12]	; 20dc8 <DWHCITransferStageDataGetSpeed+0x30>
   20db8:	ebffda98 	bl	17820 <uspi_assertion_failed>
   20dbc:	e5d40020 	ldrb	r0, [r4, #32]
   20dc0:	e8bd8010 	pop	{r4, pc}
   20dc4:	00030ccc 	.word	0x00030ccc
   20dc8:	000306f0 	.word	0x000306f0

00020dcc <DWHCITransferStageDataGetPID>:
   20dcc:	e92d4010 	push	{r4, lr}
   20dd0:	e2504000 	subs	r4, r0, #0
   20dd4:	0a000019 	beq	20e40 <DWHCITransferStageDataGetPID+0x74>
   20dd8:	e594001c 	ldr	r0, [r4, #28]
   20ddc:	e3500000 	cmp	r0, #0
   20de0:	0a000010 	beq	20e28 <DWHCITransferStageDataGetPID+0x5c>
   20de4:	e594100c 	ldr	r1, [r4, #12]
   20de8:	eb0007a4 	bl	22c80 <USBEndpointGetNextPID>
   20dec:	e3500001 	cmp	r0, #1
   20df0:	0a00000a 	beq	20e20 <DWHCITransferStageDataGetPID+0x54>
   20df4:	3a000007 	bcc	20e18 <DWHCITransferStageDataGetPID+0x4c>
   20df8:	e3500002 	cmp	r0, #2
   20dfc:	08bd8010 	popeq	{r4, pc}
   20e00:	e59f204c 	ldr	r2, [pc, #76]	; 20e54 <DWHCITransferStageDataGetPID+0x88>
   20e04:	e59f104c 	ldr	r1, [pc, #76]	; 20e58 <DWHCITransferStageDataGetPID+0x8c>
   20e08:	e59f004c 	ldr	r0, [pc, #76]	; 20e5c <DWHCITransferStageDataGetPID+0x90>
   20e0c:	ebffda83 	bl	17820 <uspi_assertion_failed>
   20e10:	e3a00000 	mov	r0, #0
   20e14:	e8bd8010 	pop	{r4, pc}
   20e18:	e3a00003 	mov	r0, #3
   20e1c:	e8bd8010 	pop	{r4, pc}
   20e20:	e3a00000 	mov	r0, #0
   20e24:	e8bd8010 	pop	{r4, pc}
   20e28:	e59f0030 	ldr	r0, [pc, #48]	; 20e60 <DWHCITransferStageDataGetPID+0x94>
   20e2c:	e59f2030 	ldr	r2, [pc, #48]	; 20e64 <DWHCITransferStageDataGetPID+0x98>
   20e30:	e59f1020 	ldr	r1, [pc, #32]	; 20e58 <DWHCITransferStageDataGetPID+0x8c>
   20e34:	ebffda79 	bl	17820 <uspi_assertion_failed>
   20e38:	e594001c 	ldr	r0, [r4, #28]
   20e3c:	eaffffe8 	b	20de4 <DWHCITransferStageDataGetPID+0x18>
   20e40:	e59f2020 	ldr	r2, [pc, #32]	; 20e68 <DWHCITransferStageDataGetPID+0x9c>
   20e44:	e59f100c 	ldr	r1, [pc, #12]	; 20e58 <DWHCITransferStageDataGetPID+0x8c>
   20e48:	e59f001c 	ldr	r0, [pc, #28]	; 20e6c <DWHCITransferStageDataGetPID+0xa0>
   20e4c:	ebffda73 	bl	17820 <uspi_assertion_failed>
   20e50:	eaffffe0 	b	20dd8 <DWHCITransferStageDataGetPID+0xc>
   20e54:	00000146 	.word	0x00000146
   20e58:	00030ccc 	.word	0x00030ccc
   20e5c:	00030678 	.word	0x00030678
   20e60:	00030d64 	.word	0x00030d64
   20e64:	00000133 	.word	0x00000133
   20e68:	00000132 	.word	0x00000132
   20e6c:	000306f0 	.word	0x000306f0

00020e70 <DWHCITransferStageDataIsDirectionIn>:
   20e70:	e92d4010 	push	{r4, lr}
   20e74:	e2504000 	subs	r4, r0, #0
   20e78:	0a000001 	beq	20e84 <DWHCITransferStageDataIsDirectionIn+0x14>
   20e7c:	e5940008 	ldr	r0, [r4, #8]
   20e80:	e8bd8010 	pop	{r4, pc}
   20e84:	e59f2010 	ldr	r2, [pc, #16]	; 20e9c <DWHCITransferStageDataIsDirectionIn+0x2c>
   20e88:	e59f1010 	ldr	r1, [pc, #16]	; 20ea0 <DWHCITransferStageDataIsDirectionIn+0x30>
   20e8c:	e59f0010 	ldr	r0, [pc, #16]	; 20ea4 <DWHCITransferStageDataIsDirectionIn+0x34>
   20e90:	ebffda62 	bl	17820 <uspi_assertion_failed>
   20e94:	e5940008 	ldr	r0, [r4, #8]
   20e98:	e8bd8010 	pop	{r4, pc}
   20e9c:	0000014f 	.word	0x0000014f
   20ea0:	00030ccc 	.word	0x00030ccc
   20ea4:	000306f0 	.word	0x000306f0

00020ea8 <DWHCITransferStageDataIsStatusStage>:
   20ea8:	e92d4010 	push	{r4, lr}
   20eac:	e2504000 	subs	r4, r0, #0
   20eb0:	0a000001 	beq	20ebc <DWHCITransferStageDataIsStatusStage+0x14>
   20eb4:	e594000c 	ldr	r0, [r4, #12]
   20eb8:	e8bd8010 	pop	{r4, pc}
   20ebc:	e59f2010 	ldr	r2, [pc, #16]	; 20ed4 <DWHCITransferStageDataIsStatusStage+0x2c>
   20ec0:	e59f1010 	ldr	r1, [pc, #16]	; 20ed8 <DWHCITransferStageDataIsStatusStage+0x30>
   20ec4:	e59f0010 	ldr	r0, [pc, #16]	; 20edc <DWHCITransferStageDataIsStatusStage+0x34>
   20ec8:	ebffda54 	bl	17820 <uspi_assertion_failed>
   20ecc:	e594000c 	ldr	r0, [r4, #12]
   20ed0:	e8bd8010 	pop	{r4, pc}
   20ed4:	00000155 	.word	0x00000155
   20ed8:	00030ccc 	.word	0x00030ccc
   20edc:	000306f0 	.word	0x000306f0

00020ee0 <DWHCITransferStageDataGetDMAAddress>:
   20ee0:	e92d4010 	push	{r4, lr}
   20ee4:	e2504000 	subs	r4, r0, #0
   20ee8:	0a000008 	beq	20f10 <DWHCITransferStageDataGetDMAAddress+0x30>
   20eec:	e594004c 	ldr	r0, [r4, #76]	; 0x4c
   20ef0:	e3500000 	cmp	r0, #0
   20ef4:	18bd8010 	popne	{r4, pc}
   20ef8:	e3a02f57 	mov	r2, #348	; 0x15c
   20efc:	e59f1020 	ldr	r1, [pc, #32]	; 20f24 <DWHCITransferStageDataGetDMAAddress+0x44>
   20f00:	e59f0020 	ldr	r0, [pc, #32]	; 20f28 <DWHCITransferStageDataGetDMAAddress+0x48>
   20f04:	ebffda45 	bl	17820 <uspi_assertion_failed>
   20f08:	e594004c 	ldr	r0, [r4, #76]	; 0x4c
   20f0c:	e8bd8010 	pop	{r4, pc}
   20f10:	e59f2014 	ldr	r2, [pc, #20]	; 20f2c <DWHCITransferStageDataGetDMAAddress+0x4c>
   20f14:	e59f1008 	ldr	r1, [pc, #8]	; 20f24 <DWHCITransferStageDataGetDMAAddress+0x44>
   20f18:	e59f0010 	ldr	r0, [pc, #16]	; 20f30 <DWHCITransferStageDataGetDMAAddress+0x50>
   20f1c:	ebffda3f 	bl	17820 <uspi_assertion_failed>
   20f20:	eafffff1 	b	20eec <DWHCITransferStageDataGetDMAAddress+0xc>
   20f24:	00030ccc 	.word	0x00030ccc
   20f28:	00030da8 	.word	0x00030da8
   20f2c:	0000015b 	.word	0x0000015b
   20f30:	000306f0 	.word	0x000306f0

00020f34 <DWHCITransferStageDataGetBytesToTransfer>:
   20f34:	e92d4010 	push	{r4, lr}
   20f38:	e2504000 	subs	r4, r0, #0
   20f3c:	0a000001 	beq	20f48 <DWHCITransferStageDataGetBytesToTransfer+0x14>
   20f40:	e5940030 	ldr	r0, [r4, #48]	; 0x30
   20f44:	e8bd8010 	pop	{r4, pc}
   20f48:	e59f2010 	ldr	r2, [pc, #16]	; 20f60 <DWHCITransferStageDataGetBytesToTransfer+0x2c>
   20f4c:	e59f1010 	ldr	r1, [pc, #16]	; 20f64 <DWHCITransferStageDataGetBytesToTransfer+0x30>
   20f50:	e59f0010 	ldr	r0, [pc, #16]	; 20f68 <DWHCITransferStageDataGetBytesToTransfer+0x34>
   20f54:	ebffda31 	bl	17820 <uspi_assertion_failed>
   20f58:	e5940030 	ldr	r0, [r4, #48]	; 0x30
   20f5c:	e8bd8010 	pop	{r4, pc}
   20f60:	00000163 	.word	0x00000163
   20f64:	00030ccc 	.word	0x00030ccc
   20f68:	000306f0 	.word	0x000306f0

00020f6c <DWHCITransferStageDataGetPacketsToTransfer>:
   20f6c:	e92d4010 	push	{r4, lr}
   20f70:	e2504000 	subs	r4, r0, #0
   20f74:	0a000001 	beq	20f80 <DWHCITransferStageDataGetPacketsToTransfer+0x14>
   20f78:	e5940034 	ldr	r0, [r4, #52]	; 0x34
   20f7c:	e8bd8010 	pop	{r4, pc}
   20f80:	e59f2010 	ldr	r2, [pc, #16]	; 20f98 <DWHCITransferStageDataGetPacketsToTransfer+0x2c>
   20f84:	e59f1010 	ldr	r1, [pc, #16]	; 20f9c <DWHCITransferStageDataGetPacketsToTransfer+0x30>
   20f88:	e59f0010 	ldr	r0, [pc, #16]	; 20fa0 <DWHCITransferStageDataGetPacketsToTransfer+0x34>
   20f8c:	ebffda23 	bl	17820 <uspi_assertion_failed>
   20f90:	e5940034 	ldr	r0, [r4, #52]	; 0x34
   20f94:	e8bd8010 	pop	{r4, pc}
   20f98:	00000169 	.word	0x00000169
   20f9c:	00030ccc 	.word	0x00030ccc
   20fa0:	000306f0 	.word	0x000306f0

00020fa4 <DWHCITransferStageDataIsSplit>:
   20fa4:	e92d4010 	push	{r4, lr}
   20fa8:	e2504000 	subs	r4, r0, #0
   20fac:	0a000001 	beq	20fb8 <DWHCITransferStageDataIsSplit+0x14>
   20fb0:	e5940010 	ldr	r0, [r4, #16]
   20fb4:	e8bd8010 	pop	{r4, pc}
   20fb8:	e59f2010 	ldr	r2, [pc, #16]	; 20fd0 <DWHCITransferStageDataIsSplit+0x2c>
   20fbc:	e59f1010 	ldr	r1, [pc, #16]	; 20fd4 <DWHCITransferStageDataIsSplit+0x30>
   20fc0:	e59f0010 	ldr	r0, [pc, #16]	; 20fd8 <DWHCITransferStageDataIsSplit+0x34>
   20fc4:	ebffda15 	bl	17820 <uspi_assertion_failed>
   20fc8:	e5940010 	ldr	r0, [r4, #16]
   20fcc:	e8bd8010 	pop	{r4, pc}
   20fd0:	0000016f 	.word	0x0000016f
   20fd4:	00030ccc 	.word	0x00030ccc
   20fd8:	000306f0 	.word	0x000306f0

00020fdc <DWHCITransferStageDataIsSplitComplete>:
   20fdc:	e92d4010 	push	{r4, lr}
   20fe0:	e2504000 	subs	r4, r0, #0
   20fe4:	0a000008 	beq	2100c <DWHCITransferStageDataIsSplitComplete+0x30>
   20fe8:	e5943010 	ldr	r3, [r4, #16]
   20fec:	e3530000 	cmp	r3, #0
   20ff0:	1a000003 	bne	21004 <DWHCITransferStageDataIsSplitComplete+0x28>
   20ff4:	e59f2024 	ldr	r2, [pc, #36]	; 21020 <DWHCITransferStageDataIsSplitComplete+0x44>
   20ff8:	e59f1024 	ldr	r1, [pc, #36]	; 21024 <DWHCITransferStageDataIsSplitComplete+0x48>
   20ffc:	e59f0024 	ldr	r0, [pc, #36]	; 21028 <DWHCITransferStageDataIsSplitComplete+0x4c>
   21000:	ebffda06 	bl	17820 <uspi_assertion_failed>
   21004:	e5940014 	ldr	r0, [r4, #20]
   21008:	e8bd8010 	pop	{r4, pc}
   2100c:	e59f2018 	ldr	r2, [pc, #24]	; 2102c <DWHCITransferStageDataIsSplitComplete+0x50>
   21010:	e59f100c 	ldr	r1, [pc, #12]	; 21024 <DWHCITransferStageDataIsSplitComplete+0x48>
   21014:	e59f0014 	ldr	r0, [pc, #20]	; 21030 <DWHCITransferStageDataIsSplitComplete+0x54>
   21018:	ebffda00 	bl	17820 <uspi_assertion_failed>
   2101c:	eafffff1 	b	20fe8 <DWHCITransferStageDataIsSplitComplete+0xc>
   21020:	00000176 	.word	0x00000176
   21024:	00030ccc 	.word	0x00030ccc
   21028:	00030d48 	.word	0x00030d48
   2102c:	00000175 	.word	0x00000175
   21030:	000306f0 	.word	0x000306f0

00021034 <DWHCITransferStageDataGetHubAddress>:
   21034:	e92d4010 	push	{r4, lr}
   21038:	e2504000 	subs	r4, r0, #0
   2103c:	0a000015 	beq	21098 <DWHCITransferStageDataGetHubAddress+0x64>
   21040:	e5943010 	ldr	r3, [r4, #16]
   21044:	e3530000 	cmp	r3, #0
   21048:	0a000004 	beq	21060 <DWHCITransferStageDataGetHubAddress+0x2c>
   2104c:	e5940018 	ldr	r0, [r4, #24]
   21050:	e3500000 	cmp	r0, #0
   21054:	0a000008 	beq	2107c <DWHCITransferStageDataGetHubAddress+0x48>
   21058:	e8bd4010 	pop	{r4, lr}
   2105c:	ea00020a 	b	2188c <USBDeviceGetHubAddress>
   21060:	e59f0044 	ldr	r0, [pc, #68]	; 210ac <DWHCITransferStageDataGetHubAddress+0x78>
   21064:	e59f2044 	ldr	r2, [pc, #68]	; 210b0 <DWHCITransferStageDataGetHubAddress+0x7c>
   21068:	e59f1044 	ldr	r1, [pc, #68]	; 210b4 <DWHCITransferStageDataGetHubAddress+0x80>
   2106c:	ebffd9eb 	bl	17820 <uspi_assertion_failed>
   21070:	e5940018 	ldr	r0, [r4, #24]
   21074:	e3500000 	cmp	r0, #0
   21078:	1afffff6 	bne	21058 <DWHCITransferStageDataGetHubAddress+0x24>
   2107c:	e59f0034 	ldr	r0, [pc, #52]	; 210b8 <DWHCITransferStageDataGetHubAddress+0x84>
   21080:	e3a02d06 	mov	r2, #384	; 0x180
   21084:	e59f1028 	ldr	r1, [pc, #40]	; 210b4 <DWHCITransferStageDataGetHubAddress+0x80>
   21088:	ebffd9e4 	bl	17820 <uspi_assertion_failed>
   2108c:	e5940018 	ldr	r0, [r4, #24]
   21090:	e8bd4010 	pop	{r4, lr}
   21094:	ea0001fc 	b	2188c <USBDeviceGetHubAddress>
   21098:	e59f201c 	ldr	r2, [pc, #28]	; 210bc <DWHCITransferStageDataGetHubAddress+0x88>
   2109c:	e59f1010 	ldr	r1, [pc, #16]	; 210b4 <DWHCITransferStageDataGetHubAddress+0x80>
   210a0:	e59f0018 	ldr	r0, [pc, #24]	; 210c0 <DWHCITransferStageDataGetHubAddress+0x8c>
   210a4:	ebffd9dd 	bl	17820 <uspi_assertion_failed>
   210a8:	eaffffe4 	b	21040 <DWHCITransferStageDataGetHubAddress+0xc>
   210ac:	00030d48 	.word	0x00030d48
   210b0:	0000017e 	.word	0x0000017e
   210b4:	00030ccc 	.word	0x00030ccc
   210b8:	00030d90 	.word	0x00030d90
   210bc:	0000017d 	.word	0x0000017d
   210c0:	000306f0 	.word	0x000306f0

000210c4 <DWHCITransferStageDataGetHubPortAddress>:
   210c4:	e92d4010 	push	{r4, lr}
   210c8:	e2504000 	subs	r4, r0, #0
   210cc:	0a000015 	beq	21128 <DWHCITransferStageDataGetHubPortAddress+0x64>
   210d0:	e5943010 	ldr	r3, [r4, #16]
   210d4:	e3530000 	cmp	r3, #0
   210d8:	0a000004 	beq	210f0 <DWHCITransferStageDataGetHubPortAddress+0x2c>
   210dc:	e5940018 	ldr	r0, [r4, #24]
   210e0:	e3500000 	cmp	r0, #0
   210e4:	0a000008 	beq	2110c <DWHCITransferStageDataGetHubPortAddress+0x48>
   210e8:	e8bd4010 	pop	{r4, lr}
   210ec:	ea0001f4 	b	218c4 <USBDeviceGetHubPortNumber>
   210f0:	e59f0044 	ldr	r0, [pc, #68]	; 2113c <DWHCITransferStageDataGetHubPortAddress+0x78>
   210f4:	e59f2044 	ldr	r2, [pc, #68]	; 21140 <DWHCITransferStageDataGetHubPortAddress+0x7c>
   210f8:	e59f1044 	ldr	r1, [pc, #68]	; 21144 <DWHCITransferStageDataGetHubPortAddress+0x80>
   210fc:	ebffd9c7 	bl	17820 <uspi_assertion_failed>
   21100:	e5940018 	ldr	r0, [r4, #24]
   21104:	e3500000 	cmp	r0, #0
   21108:	1afffff6 	bne	210e8 <DWHCITransferStageDataGetHubPortAddress+0x24>
   2110c:	e59f0034 	ldr	r0, [pc, #52]	; 21148 <DWHCITransferStageDataGetHubPortAddress+0x84>
   21110:	e59f2034 	ldr	r2, [pc, #52]	; 2114c <DWHCITransferStageDataGetHubPortAddress+0x88>
   21114:	e59f1028 	ldr	r1, [pc, #40]	; 21144 <DWHCITransferStageDataGetHubPortAddress+0x80>
   21118:	ebffd9c0 	bl	17820 <uspi_assertion_failed>
   2111c:	e5940018 	ldr	r0, [r4, #24]
   21120:	e8bd4010 	pop	{r4, lr}
   21124:	ea0001e6 	b	218c4 <USBDeviceGetHubPortNumber>
   21128:	e59f2020 	ldr	r2, [pc, #32]	; 21150 <DWHCITransferStageDataGetHubPortAddress+0x8c>
   2112c:	e59f1010 	ldr	r1, [pc, #16]	; 21144 <DWHCITransferStageDataGetHubPortAddress+0x80>
   21130:	e59f001c 	ldr	r0, [pc, #28]	; 21154 <DWHCITransferStageDataGetHubPortAddress+0x90>
   21134:	ebffd9b9 	bl	17820 <uspi_assertion_failed>
   21138:	eaffffe4 	b	210d0 <DWHCITransferStageDataGetHubPortAddress+0xc>
   2113c:	00030d48 	.word	0x00030d48
   21140:	00000187 	.word	0x00000187
   21144:	00030ccc 	.word	0x00030ccc
   21148:	00030d90 	.word	0x00030d90
   2114c:	00000189 	.word	0x00000189
   21150:	00000186 	.word	0x00000186
   21154:	000306f0 	.word	0x000306f0

00021158 <DWHCITransferStageDataGetSplitPosition>:
   21158:	e3a00003 	mov	r0, #3
   2115c:	e12fff1e 	bx	lr

00021160 <DWHCITransferStageDataGetStatusMask>:
   21160:	e92d4010 	push	{r4, lr}
   21164:	e2504000 	subs	r4, r0, #0
   21168:	0a00000a 	beq	21198 <DWHCITransferStageDataGetStatusMask+0x38>
   2116c:	e5943010 	ldr	r3, [r4, #16]
   21170:	e3530000 	cmp	r3, #0
   21174:	0a000001 	beq	21180 <DWHCITransferStageDataGetStatusMask+0x20>
   21178:	e59f002c 	ldr	r0, [pc, #44]	; 211ac <DWHCITransferStageDataGetStatusMask+0x4c>
   2117c:	e8bd8010 	pop	{r4, pc}
   21180:	e1a00004 	mov	r0, r4
   21184:	ebfffdde 	bl	20904 <DWHCITransferStageDataIsPeriodic>
   21188:	e3500000 	cmp	r0, #0
   2118c:	1afffff9 	bne	21178 <DWHCITransferStageDataGetStatusMask+0x18>
   21190:	e59f0018 	ldr	r0, [pc, #24]	; 211b0 <DWHCITransferStageDataGetStatusMask+0x50>
   21194:	e8bd8010 	pop	{r4, pc}
   21198:	e59f2014 	ldr	r2, [pc, #20]	; 211b4 <DWHCITransferStageDataGetStatusMask+0x54>
   2119c:	e59f1014 	ldr	r1, [pc, #20]	; 211b8 <DWHCITransferStageDataGetStatusMask+0x58>
   211a0:	e59f0014 	ldr	r0, [pc, #20]	; 211bc <DWHCITransferStageDataGetStatusMask+0x5c>
   211a4:	ebffd99d 	bl	17820 <uspi_assertion_failed>
   211a8:	eaffffef 	b	2116c <DWHCITransferStageDataGetStatusMask+0xc>
   211ac:	000007ff 	.word	0x000007ff
   211b0:	0000078f 	.word	0x0000078f
   211b4:	00000195 	.word	0x00000195
   211b8:	00030ccc 	.word	0x00030ccc
   211bc:	000306f0 	.word	0x000306f0

000211c0 <DWHCITransferStageDataGetTransactionStatus>:
   211c0:	e92d4010 	push	{r4, lr}
   211c4:	e2504000 	subs	r4, r0, #0
   211c8:	0a000008 	beq	211f0 <DWHCITransferStageDataGetTransactionStatus+0x30>
   211cc:	e5940044 	ldr	r0, [r4, #68]	; 0x44
   211d0:	e3500000 	cmp	r0, #0
   211d4:	18bd8010 	popne	{r4, pc}
   211d8:	e3a02f6a 	mov	r2, #424	; 0x1a8
   211dc:	e59f1020 	ldr	r1, [pc, #32]	; 21204 <DWHCITransferStageDataGetTransactionStatus+0x44>
   211e0:	e59f0020 	ldr	r0, [pc, #32]	; 21208 <DWHCITransferStageDataGetTransactionStatus+0x48>
   211e4:	ebffd98d 	bl	17820 <uspi_assertion_failed>
   211e8:	e5940044 	ldr	r0, [r4, #68]	; 0x44
   211ec:	e8bd8010 	pop	{r4, pc}
   211f0:	e59f2014 	ldr	r2, [pc, #20]	; 2120c <DWHCITransferStageDataGetTransactionStatus+0x4c>
   211f4:	e59f1008 	ldr	r1, [pc, #8]	; 21204 <DWHCITransferStageDataGetTransactionStatus+0x44>
   211f8:	e59f0010 	ldr	r0, [pc, #16]	; 21210 <DWHCITransferStageDataGetTransactionStatus+0x50>
   211fc:	ebffd987 	bl	17820 <uspi_assertion_failed>
   21200:	eafffff1 	b	211cc <DWHCITransferStageDataGetTransactionStatus+0xc>
   21204:	00030ccc 	.word	0x00030ccc
   21208:	00030df8 	.word	0x00030df8
   2120c:	000001a7 	.word	0x000001a7
   21210:	000306f0 	.word	0x000306f0

00021214 <DWHCITransferStageDataIsStageComplete>:
   21214:	e92d4010 	push	{r4, lr}
   21218:	e2504000 	subs	r4, r0, #0
   2121c:	0a000003 	beq	21230 <DWHCITransferStageDataIsStageComplete+0x1c>
   21220:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
   21224:	e16f0f10 	clz	r0, r0
   21228:	e1a002a0 	lsr	r0, r0, #5
   2122c:	e8bd8010 	pop	{r4, pc}
   21230:	e59f200c 	ldr	r2, [pc, #12]	; 21244 <DWHCITransferStageDataIsStageComplete+0x30>
   21234:	e59f100c 	ldr	r1, [pc, #12]	; 21248 <DWHCITransferStageDataIsStageComplete+0x34>
   21238:	e59f000c 	ldr	r0, [pc, #12]	; 2124c <DWHCITransferStageDataIsStageComplete+0x38>
   2123c:	ebffd977 	bl	17820 <uspi_assertion_failed>
   21240:	eafffff6 	b	21220 <DWHCITransferStageDataIsStageComplete+0xc>
   21244:	000001ae 	.word	0x000001ae
   21248:	00030ccc 	.word	0x00030ccc
   2124c:	000306f0 	.word	0x000306f0

00021250 <DWHCITransferStageDataGetResultLen>:
   21250:	e92d4010 	push	{r4, lr}
   21254:	e2504000 	subs	r4, r0, #0
   21258:	0a000004 	beq	21270 <DWHCITransferStageDataGetResultLen+0x20>
   2125c:	e5940038 	ldr	r0, [r4, #56]	; 0x38
   21260:	e5943028 	ldr	r3, [r4, #40]	; 0x28
   21264:	e1500003 	cmp	r0, r3
   21268:	21a00003 	movcs	r0, r3
   2126c:	e8bd8010 	pop	{r4, pc}
   21270:	e3a02f6d 	mov	r2, #436	; 0x1b4
   21274:	e59f1008 	ldr	r1, [pc, #8]	; 21284 <DWHCITransferStageDataGetResultLen+0x34>
   21278:	e59f0008 	ldr	r0, [pc, #8]	; 21288 <DWHCITransferStageDataGetResultLen+0x38>
   2127c:	ebffd967 	bl	17820 <uspi_assertion_failed>
   21280:	eafffff5 	b	2125c <DWHCITransferStageDataGetResultLen+0xc>
   21284:	00030ccc 	.word	0x00030ccc
   21288:	000306f0 	.word	0x000306f0

0002128c <DWHCITransferStageDataGetURB>:
   2128c:	e92d4010 	push	{r4, lr}
   21290:	e2504000 	subs	r4, r0, #0
   21294:	0a000008 	beq	212bc <DWHCITransferStageDataGetURB+0x30>
   21298:	e5940004 	ldr	r0, [r4, #4]
   2129c:	e3500000 	cmp	r0, #0
   212a0:	18bd8010 	popne	{r4, pc}
   212a4:	e3a02d07 	mov	r2, #448	; 0x1c0
   212a8:	e59f1020 	ldr	r1, [pc, #32]	; 212d0 <DWHCITransferStageDataGetURB+0x44>
   212ac:	e59f0020 	ldr	r0, [pc, #32]	; 212d4 <DWHCITransferStageDataGetURB+0x48>
   212b0:	ebffd95a 	bl	17820 <uspi_assertion_failed>
   212b4:	e5940004 	ldr	r0, [r4, #4]
   212b8:	e8bd8010 	pop	{r4, pc}
   212bc:	e59f2014 	ldr	r2, [pc, #20]	; 212d8 <DWHCITransferStageDataGetURB+0x4c>
   212c0:	e59f1008 	ldr	r1, [pc, #8]	; 212d0 <DWHCITransferStageDataGetURB+0x44>
   212c4:	e59f0010 	ldr	r0, [pc, #16]	; 212dc <DWHCITransferStageDataGetURB+0x50>
   212c8:	ebffd954 	bl	17820 <uspi_assertion_failed>
   212cc:	eafffff1 	b	21298 <DWHCITransferStageDataGetURB+0xc>
   212d0:	00030ccc 	.word	0x00030ccc
   212d4:	00030d7c 	.word	0x00030d7c
   212d8:	000001bf 	.word	0x000001bf
   212dc:	000306f0 	.word	0x000306f0

000212e0 <DWHCITransferStageDataGetFrameScheduler>:
   212e0:	e92d4010 	push	{r4, lr}
   212e4:	e2504000 	subs	r4, r0, #0
   212e8:	0a000003 	beq	212fc <DWHCITransferStageDataGetFrameScheduler+0x1c>
   212ec:	e5940050 	ldr	r0, [r4, #80]	; 0x50
   212f0:	e3500000 	cmp	r0, #0
   212f4:	12840054 	addne	r0, r4, #84	; 0x54
   212f8:	e8bd8010 	pop	{r4, pc}
   212fc:	e59f200c 	ldr	r2, [pc, #12]	; 21310 <DWHCITransferStageDataGetFrameScheduler+0x30>
   21300:	e59f100c 	ldr	r1, [pc, #12]	; 21314 <DWHCITransferStageDataGetFrameScheduler+0x34>
   21304:	e59f000c 	ldr	r0, [pc, #12]	; 21318 <DWHCITransferStageDataGetFrameScheduler+0x38>
   21308:	ebffd944 	bl	17820 <uspi_assertion_failed>
   2130c:	eafffff6 	b	212ec <DWHCITransferStageDataGetFrameScheduler+0xc>
   21310:	000001c6 	.word	0x000001c6
   21314:	00030ccc 	.word	0x00030ccc
   21318:	000306f0 	.word	0x000306f0

0002131c <USBDevice>:
   2131c:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   21320:	e2504000 	subs	r4, r0, #0
   21324:	e24dd008 	sub	sp, sp, #8
   21328:	e1a06001 	mov	r6, r1
   2132c:	e1a08002 	mov	r8, r2
   21330:	e5dd7020 	ldrb	r7, [sp, #32]
   21334:	e5dd5024 	ldrb	r5, [sp, #36]	; 0x24
   21338:	0a00002e 	beq	213f8 <USBDevice+0xdc>
   2133c:	e3a02000 	mov	r2, #0
   21340:	e1560002 	cmp	r6, r2
   21344:	e5846000 	str	r6, [r4]
   21348:	e5c48005 	strb	r8, [r4, #5]
   2134c:	e584300c 	str	r3, [r4, #12]
   21350:	e5c47010 	strb	r7, [r4, #16]
   21354:	e5c45011 	strb	r5, [r4, #17]
   21358:	e5c42004 	strb	r2, [r4, #4]
   2135c:	e5842008 	str	r2, [r4, #8]
   21360:	e5842014 	str	r2, [r4, #20]
   21364:	e5842018 	str	r2, [r4, #24]
   21368:	e584201c 	str	r2, [r4, #28]
   2136c:	0a000028 	beq	21414 <USBDevice+0xf8>
   21370:	e3a00018 	mov	r0, #24
   21374:	ebffd902 	bl	17784 <malloc>
   21378:	e3500000 	cmp	r0, #0
   2137c:	e5840008 	str	r0, [r4, #8]
   21380:	0a000016 	beq	213e0 <USBDevice+0xc4>
   21384:	e1a01004 	mov	r1, r4
   21388:	eb00050b 	bl	227bc <USBEndpoint>
   2138c:	e3550000 	cmp	r5, #0
   21390:	0a00000d 	beq	213cc <USBDevice+0xb0>
   21394:	e1a01004 	mov	r1, r4
   21398:	e2840020 	add	r0, r4, #32
   2139c:	eb0025ff 	bl	2aba0 <USBString>
   213a0:	e1a01004 	mov	r1, r4
   213a4:	e284002c 	add	r0, r4, #44	; 0x2c
   213a8:	eb0025fc 	bl	2aba0 <USBString>
   213ac:	e3a02000 	mov	r2, #0
   213b0:	e2843034 	add	r3, r4, #52	; 0x34
   213b4:	e284405c 	add	r4, r4, #92	; 0x5c
   213b8:	e5a32004 	str	r2, [r3, #4]!
   213bc:	e1530004 	cmp	r3, r4
   213c0:	1afffffc 	bne	213b8 <USBDevice+0x9c>
   213c4:	e28dd008 	add	sp, sp, #8
   213c8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   213cc:	e3a02043 	mov	r2, #67	; 0x43
   213d0:	e59f106c 	ldr	r1, [pc, #108]	; 21444 <USBDevice+0x128>
   213d4:	e59f006c 	ldr	r0, [pc, #108]	; 21448 <USBDevice+0x12c>
   213d8:	ebffd910 	bl	17820 <uspi_assertion_failed>
   213dc:	eaffffec 	b	21394 <USBDevice+0x78>
   213e0:	e59f0064 	ldr	r0, [pc, #100]	; 2144c <USBDevice+0x130>
   213e4:	e3a02040 	mov	r2, #64	; 0x40
   213e8:	e59f1054 	ldr	r1, [pc, #84]	; 21444 <USBDevice+0x128>
   213ec:	ebffd90b 	bl	17820 <uspi_assertion_failed>
   213f0:	e5940008 	ldr	r0, [r4, #8]
   213f4:	eaffffe2 	b	21384 <USBDevice+0x68>
   213f8:	e3a0202f 	mov	r2, #47	; 0x2f
   213fc:	e59f1040 	ldr	r1, [pc, #64]	; 21444 <USBDevice+0x128>
   21400:	e59f0048 	ldr	r0, [pc, #72]	; 21450 <USBDevice+0x134>
   21404:	e58d3004 	str	r3, [sp, #4]
   21408:	ebffd904 	bl	17820 <uspi_assertion_failed>
   2140c:	e59d3004 	ldr	r3, [sp, #4]
   21410:	eaffffc9 	b	2133c <USBDevice+0x20>
   21414:	e3a0203c 	mov	r2, #60	; 0x3c
   21418:	e59f1024 	ldr	r1, [pc, #36]	; 21444 <USBDevice+0x128>
   2141c:	e59f0030 	ldr	r0, [pc, #48]	; 21454 <USBDevice+0x138>
   21420:	ebffd8fe 	bl	17820 <uspi_assertion_failed>
   21424:	e5943008 	ldr	r3, [r4, #8]
   21428:	e3530000 	cmp	r3, #0
   2142c:	0affffcf 	beq	21370 <USBDevice+0x54>
   21430:	e3a0203e 	mov	r2, #62	; 0x3e
   21434:	e59f1008 	ldr	r1, [pc, #8]	; 21444 <USBDevice+0x128>
   21438:	e59f0018 	ldr	r0, [pc, #24]	; 21458 <USBDevice+0x13c>
   2143c:	ebffd8f7 	bl	17820 <uspi_assertion_failed>
   21440:	eaffffca 	b	21370 <USBDevice+0x54>
   21444:	00030e24 	.word	0x00030e24
   21448:	00030e7c 	.word	0x00030e7c
   2144c:	00030e60 	.word	0x00030e60
   21450:	000306f0 	.word	0x000306f0
   21454:	00030e30 	.word	0x00030e30
   21458:	00030e44 	.word	0x00030e44

0002145c <_USBDevice>:
   2145c:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   21460:	e2505000 	subs	r5, r0, #0
   21464:	0a00002f 	beq	21528 <_USBDevice+0xcc>
   21468:	e3a07000 	mov	r7, #0
   2146c:	e2854038 	add	r4, r5, #56	; 0x38
   21470:	e2856060 	add	r6, r5, #96	; 0x60
   21474:	e5940000 	ldr	r0, [r4]
   21478:	e3500000 	cmp	r0, #0
   2147c:	0a000003 	beq	21490 <_USBDevice+0x34>
   21480:	eb000c40 	bl	24588 <_USBFunction>
   21484:	e5940000 	ldr	r0, [r4]
   21488:	ebffd8be 	bl	17788 <free>
   2148c:	e5847000 	str	r7, [r4]
   21490:	e2844004 	add	r4, r4, #4
   21494:	e1540006 	cmp	r4, r6
   21498:	1afffff5 	bne	21474 <_USBDevice+0x18>
   2149c:	e595001c 	ldr	r0, [r5, #28]
   214a0:	e3500000 	cmp	r0, #0
   214a4:	0a000004 	beq	214bc <_USBDevice+0x60>
   214a8:	eb002960 	bl	2ba30 <_USBConfigurationParser>
   214ac:	e595001c 	ldr	r0, [r5, #28]
   214b0:	ebffd8b4 	bl	17788 <free>
   214b4:	e3a03000 	mov	r3, #0
   214b8:	e585301c 	str	r3, [r5, #28]
   214bc:	e5950018 	ldr	r0, [r5, #24]
   214c0:	e3500000 	cmp	r0, #0
   214c4:	0a000002 	beq	214d4 <_USBDevice+0x78>
   214c8:	ebffd8ae 	bl	17788 <free>
   214cc:	e3a03000 	mov	r3, #0
   214d0:	e5853018 	str	r3, [r5, #24]
   214d4:	e5950014 	ldr	r0, [r5, #20]
   214d8:	e3500000 	cmp	r0, #0
   214dc:	0a000002 	beq	214ec <_USBDevice+0x90>
   214e0:	ebffd8a8 	bl	17788 <free>
   214e4:	e3a03000 	mov	r3, #0
   214e8:	e5853014 	str	r3, [r5, #20]
   214ec:	e5950008 	ldr	r0, [r5, #8]
   214f0:	e3500000 	cmp	r0, #0
   214f4:	0a000004 	beq	2150c <_USBDevice+0xb0>
   214f8:	eb000569 	bl	22aa4 <_USBEndpoint>
   214fc:	e5950008 	ldr	r0, [r5, #8]
   21500:	ebffd8a0 	bl	17788 <free>
   21504:	e3a03000 	mov	r3, #0
   21508:	e5853008 	str	r3, [r5, #8]
   2150c:	e1a00005 	mov	r0, r5
   21510:	e3a03000 	mov	r3, #0
   21514:	e480302c 	str	r3, [r0], #44	; 0x2c
   21518:	eb00260d 	bl	2ad54 <_USBString>
   2151c:	e2850020 	add	r0, r5, #32
   21520:	e8bd41f0 	pop	{r4, r5, r6, r7, r8, lr}
   21524:	ea00260a 	b	2ad54 <_USBString>
   21528:	e3a02050 	mov	r2, #80	; 0x50
   2152c:	e59f1008 	ldr	r1, [pc, #8]	; 2153c <_USBDevice+0xe0>
   21530:	e59f0008 	ldr	r0, [pc, #8]	; 21540 <_USBDevice+0xe4>
   21534:	ebffd8b9 	bl	17820 <uspi_assertion_failed>
   21538:	eaffffca 	b	21468 <_USBDevice+0xc>
   2153c:	00030e24 	.word	0x00030e24
   21540:	000306f0 	.word	0x000306f0

00021544 <USBDeviceGetName>:
   21544:	e92d4070 	push	{r4, r5, r6, lr}
   21548:	e2506000 	subs	r6, r0, #0
   2154c:	e24dd008 	sub	sp, sp, #8
   21550:	e1a05001 	mov	r5, r1
   21554:	0a000031 	beq	21620 <USBDeviceGetName+0xdc>
   21558:	e3a0000c 	mov	r0, #12
   2155c:	ebffd888 	bl	17784 <malloc>
   21560:	e2504000 	subs	r4, r0, #0
   21564:	0a000035 	beq	21640 <USBDeviceGetName+0xfc>
   21568:	e1a00004 	mov	r0, r4
   2156c:	eb0014d1 	bl	268b8 <String>
   21570:	e3550000 	cmp	r5, #0
   21574:	0a00001a 	beq	215e4 <USBDeviceGetName+0xa0>
   21578:	e3550001 	cmp	r5, #1
   2157c:	0a000009 	beq	215a8 <USBDeviceGetName+0x64>
   21580:	e59f20fc 	ldr	r2, [pc, #252]	; 21684 <USBDeviceGetName+0x140>
   21584:	e59f10fc 	ldr	r1, [pc, #252]	; 21688 <USBDeviceGetName+0x144>
   21588:	e59f00fc 	ldr	r0, [pc, #252]	; 2168c <USBDeviceGetName+0x148>
   2158c:	ebffd8a3 	bl	17820 <uspi_assertion_failed>
   21590:	e59f10f8 	ldr	r1, [pc, #248]	; 21690 <USBDeviceGetName+0x14c>
   21594:	e1a00004 	mov	r0, r4
   21598:	eb001509 	bl	269c4 <StringSet>
   2159c:	e1a00004 	mov	r0, r4
   215a0:	e28dd008 	add	sp, sp, #8
   215a4:	e8bd8070 	pop	{r4, r5, r6, pc}
   215a8:	e5961014 	ldr	r1, [r6, #20]
   215ac:	e3510000 	cmp	r1, #0
   215b0:	0a00002d 	beq	2166c <USBDeviceGetName+0x128>
   215b4:	e5d12004 	ldrb	r2, [r1, #4]
   215b8:	e2423001 	sub	r3, r2, #1
   215bc:	e6ef3073 	uxtb	r3, r3
   215c0:	e35300fd 	cmp	r3, #253	; 0xfd
   215c4:	8afffff1 	bhi	21590 <USBDeviceGetName+0x4c>
   215c8:	e5d13005 	ldrb	r3, [r1, #5]
   215cc:	e5d11006 	ldrb	r1, [r1, #6]
   215d0:	e1a00004 	mov	r0, r4
   215d4:	e58d1000 	str	r1, [sp]
   215d8:	e59f10b4 	ldr	r1, [pc, #180]	; 21694 <USBDeviceGetName+0x150>
   215dc:	eb001776 	bl	273bc <StringFormat>
   215e0:	eaffffed 	b	2159c <USBDeviceGetName+0x58>
   215e4:	e5961014 	ldr	r1, [r6, #20]
   215e8:	e3510000 	cmp	r1, #0
   215ec:	0a000018 	beq	21654 <USBDeviceGetName+0x110>
   215f0:	e5d1000b 	ldrb	r0, [r1, #11]
   215f4:	e5d1300a 	ldrb	r3, [r1, #10]
   215f8:	e5d12008 	ldrb	r2, [r1, #8]
   215fc:	e5d11009 	ldrb	r1, [r1, #9]
   21600:	e1833400 	orr	r3, r3, r0, lsl #8
   21604:	e1822401 	orr	r2, r2, r1, lsl #8
   21608:	e1a00004 	mov	r0, r4
   2160c:	e59f1084 	ldr	r1, [pc, #132]	; 21698 <USBDeviceGetName+0x154>
   21610:	eb001769 	bl	273bc <StringFormat>
   21614:	e1a00004 	mov	r0, r4
   21618:	e28dd008 	add	sp, sp, #8
   2161c:	e8bd8070 	pop	{r4, r5, r6, pc}
   21620:	e59f2074 	ldr	r2, [pc, #116]	; 2169c <USBDeviceGetName+0x158>
   21624:	e59f105c 	ldr	r1, [pc, #92]	; 21688 <USBDeviceGetName+0x144>
   21628:	e59f0070 	ldr	r0, [pc, #112]	; 216a0 <USBDeviceGetName+0x15c>
   2162c:	ebffd87b 	bl	17820 <uspi_assertion_failed>
   21630:	e3a0000c 	mov	r0, #12
   21634:	ebffd852 	bl	17784 <malloc>
   21638:	e2504000 	subs	r4, r0, #0
   2163c:	1affffc9 	bne	21568 <USBDeviceGetName+0x24>
   21640:	e3a02f69 	mov	r2, #420	; 0x1a4
   21644:	e59f103c 	ldr	r1, [pc, #60]	; 21688 <USBDeviceGetName+0x144>
   21648:	e59f0054 	ldr	r0, [pc, #84]	; 216a4 <USBDeviceGetName+0x160>
   2164c:	ebffd873 	bl	17820 <uspi_assertion_failed>
   21650:	eaffffc4 	b	21568 <USBDeviceGetName+0x24>
   21654:	e59f102c 	ldr	r1, [pc, #44]	; 21688 <USBDeviceGetName+0x144>
   21658:	e59f2048 	ldr	r2, [pc, #72]	; 216a8 <USBDeviceGetName+0x164>
   2165c:	e59f0048 	ldr	r0, [pc, #72]	; 216ac <USBDeviceGetName+0x168>
   21660:	ebffd86e 	bl	17820 <uspi_assertion_failed>
   21664:	e5961014 	ldr	r1, [r6, #20]
   21668:	eaffffe0 	b	215f0 <USBDeviceGetName+0xac>
   2166c:	e59f1014 	ldr	r1, [pc, #20]	; 21688 <USBDeviceGetName+0x144>
   21670:	e59f2038 	ldr	r2, [pc, #56]	; 216b0 <USBDeviceGetName+0x16c>
   21674:	e59f0030 	ldr	r0, [pc, #48]	; 216ac <USBDeviceGetName+0x168>
   21678:	ebffd868 	bl	17820 <uspi_assertion_failed>
   2167c:	e5961014 	ldr	r1, [r6, #20]
   21680:	eaffffcb 	b	215b4 <USBDeviceGetName+0x70>
   21684:	000001be 	.word	0x000001be
   21688:	00030e24 	.word	0x00030e24
   2168c:	00030678 	.word	0x00030678
   21690:	0002fd88 	.word	0x0002fd88
   21694:	00030ecc 	.word	0x00030ecc
   21698:	00030ec0 	.word	0x00030ec0
   2169c:	000001a1 	.word	0x000001a1
   216a0:	000306f0 	.word	0x000306f0
   216a4:	00030e94 	.word	0x00030e94
   216a8:	000001aa 	.word	0x000001aa
   216ac:	00030ea4 	.word	0x00030ea4
   216b0:	000001b1 	.word	0x000001b1

000216b4 <USBDeviceGetNames>:
   216b4:	e92d4ff8 	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   216b8:	e2508000 	subs	r8, r0, #0
   216bc:	0a00003d 	beq	217b8 <USBDeviceGetNames+0x104>
   216c0:	e3a0000c 	mov	r0, #12
   216c4:	ebffd82e 	bl	17784 <malloc>
   216c8:	e2506000 	subs	r6, r0, #0
   216cc:	0a000034 	beq	217a4 <USBDeviceGetNames+0xf0>
   216d0:	e1a00006 	mov	r0, r6
   216d4:	eb001477 	bl	268b8 <String>
   216d8:	e3a05000 	mov	r5, #0
   216dc:	e59fb0e8 	ldr	fp, [pc, #232]	; 217cc <USBDeviceGetNames+0x118>
   216e0:	e59fa0e8 	ldr	sl, [pc, #232]	; 217d0 <USBDeviceGetNames+0x11c>
   216e4:	e59f90e8 	ldr	r9, [pc, #232]	; 217d4 <USBDeviceGetNames+0x120>
   216e8:	e59f70e8 	ldr	r7, [pc, #232]	; 217d8 <USBDeviceGetNames+0x124>
   216ec:	e1a01005 	mov	r1, r5
   216f0:	e1a00008 	mov	r0, r8
   216f4:	ebffff92 	bl	21544 <USBDeviceGetName>
   216f8:	e2504000 	subs	r4, r0, #0
   216fc:	0a000023 	beq	21790 <USBDeviceGetNames+0xdc>
   21700:	e1a01007 	mov	r1, r7
   21704:	e1a00004 	mov	r0, r4
   21708:	eb0014fc 	bl	26b00 <StringCompare>
   2170c:	e3500000 	cmp	r0, #0
   21710:	1a000010 	bne	21758 <USBDeviceGetNames+0xa4>
   21714:	e1a00004 	mov	r0, r4
   21718:	eb001488 	bl	26940 <_String>
   2171c:	e1a00004 	mov	r0, r4
   21720:	ebffd818 	bl	17788 <free>
   21724:	e3550001 	cmp	r5, #1
   21728:	1a000008 	bne	21750 <USBDeviceGetNames+0x9c>
   2172c:	e1a00006 	mov	r0, r6
   21730:	eb0014bc 	bl	26a28 <StringGetLength>
   21734:	e3500000 	cmp	r0, #0
   21738:	1a000002 	bne	21748 <USBDeviceGetNames+0x94>
   2173c:	e59f1094 	ldr	r1, [pc, #148]	; 217d8 <USBDeviceGetNames+0x124>
   21740:	e1a00006 	mov	r0, r6
   21744:	eb00149e 	bl	269c4 <StringSet>
   21748:	e1a00006 	mov	r0, r6
   2174c:	e8bd8ff8 	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21750:	e3a05001 	mov	r5, #1
   21754:	eaffffe4 	b	216ec <USBDeviceGetNames+0x38>
   21758:	e1a00006 	mov	r0, r6
   2175c:	eb0014b1 	bl	26a28 <StringGetLength>
   21760:	e3500000 	cmp	r0, #0
   21764:	1a000005 	bne	21780 <USBDeviceGetNames+0xcc>
   21768:	e1a00004 	mov	r0, r4
   2176c:	eb001484 	bl	26984 <StringGet>
   21770:	e1a01000 	mov	r1, r0
   21774:	e1a00006 	mov	r0, r6
   21778:	eb0014b9 	bl	26a64 <StringAppend>
   2177c:	eaffffe4 	b	21714 <USBDeviceGetNames+0x60>
   21780:	e59f1054 	ldr	r1, [pc, #84]	; 217dc <USBDeviceGetNames+0x128>
   21784:	e1a00006 	mov	r0, r6
   21788:	eb0014b5 	bl	26a64 <StringAppend>
   2178c:	eafffff5 	b	21768 <USBDeviceGetNames+0xb4>
   21790:	e1a0200b 	mov	r2, fp
   21794:	e1a0100a 	mov	r1, sl
   21798:	e1a00009 	mov	r0, r9
   2179c:	ebffd81f 	bl	17820 <uspi_assertion_failed>
   217a0:	eaffffd6 	b	21700 <USBDeviceGetNames+0x4c>
   217a4:	e3a02f73 	mov	r2, #460	; 0x1cc
   217a8:	e59f1020 	ldr	r1, [pc, #32]	; 217d0 <USBDeviceGetNames+0x11c>
   217ac:	e59f002c 	ldr	r0, [pc, #44]	; 217e0 <USBDeviceGetNames+0x12c>
   217b0:	ebffd81a 	bl	17820 <uspi_assertion_failed>
   217b4:	eaffffc5 	b	216d0 <USBDeviceGetNames+0x1c>
   217b8:	e59f2024 	ldr	r2, [pc, #36]	; 217e4 <USBDeviceGetNames+0x130>
   217bc:	e59f100c 	ldr	r1, [pc, #12]	; 217d0 <USBDeviceGetNames+0x11c>
   217c0:	e59f0020 	ldr	r0, [pc, #32]	; 217e8 <USBDeviceGetNames+0x134>
   217c4:	ebffd815 	bl	17820 <uspi_assertion_failed>
   217c8:	eaffffbc 	b	216c0 <USBDeviceGetNames+0xc>
   217cc:	000001d2 	.word	0x000001d2
   217d0:	00030e24 	.word	0x00030e24
   217d4:	000317e0 	.word	0x000317e0
   217d8:	0002fd88 	.word	0x0002fd88
   217dc:	00030ee8 	.word	0x00030ee8
   217e0:	00030ed8 	.word	0x00030ed8
   217e4:	000001c9 	.word	0x000001c9
   217e8:	000306f0 	.word	0x000306f0

000217ec <USBDeviceGetAddress>:
   217ec:	e92d4010 	push	{r4, lr}
   217f0:	e2504000 	subs	r4, r0, #0
   217f4:	0a000001 	beq	21800 <USBDeviceGetAddress+0x14>
   217f8:	e5d40004 	ldrb	r0, [r4, #4]
   217fc:	e8bd8010 	pop	{r4, pc}
   21800:	e3a02f7b 	mov	r2, #492	; 0x1ec
   21804:	e59f100c 	ldr	r1, [pc, #12]	; 21818 <USBDeviceGetAddress+0x2c>
   21808:	e59f000c 	ldr	r0, [pc, #12]	; 2181c <USBDeviceGetAddress+0x30>
   2180c:	ebffd803 	bl	17820 <uspi_assertion_failed>
   21810:	e5d40004 	ldrb	r0, [r4, #4]
   21814:	e8bd8010 	pop	{r4, pc}
   21818:	00030e24 	.word	0x00030e24
   2181c:	000306f0 	.word	0x000306f0

00021820 <USBDeviceGetSpeed>:
   21820:	e92d4010 	push	{r4, lr}
   21824:	e2504000 	subs	r4, r0, #0
   21828:	0a000001 	beq	21834 <USBDeviceGetSpeed+0x14>
   2182c:	e5d40005 	ldrb	r0, [r4, #5]
   21830:	e8bd8010 	pop	{r4, pc}
   21834:	e59f2010 	ldr	r2, [pc, #16]	; 2184c <USBDeviceGetSpeed+0x2c>
   21838:	e59f1010 	ldr	r1, [pc, #16]	; 21850 <USBDeviceGetSpeed+0x30>
   2183c:	e59f0010 	ldr	r0, [pc, #16]	; 21854 <USBDeviceGetSpeed+0x34>
   21840:	ebffd7f6 	bl	17820 <uspi_assertion_failed>
   21844:	e5d40005 	ldrb	r0, [r4, #5]
   21848:	e8bd8010 	pop	{r4, pc}
   2184c:	000001f2 	.word	0x000001f2
   21850:	00030e24 	.word	0x00030e24
   21854:	000306f0 	.word	0x000306f0

00021858 <USBDeviceIsSplit>:
   21858:	e92d4010 	push	{r4, lr}
   2185c:	e2504000 	subs	r4, r0, #0
   21860:	0a000001 	beq	2186c <USBDeviceIsSplit+0x14>
   21864:	e594000c 	ldr	r0, [r4, #12]
   21868:	e8bd8010 	pop	{r4, pc}
   2186c:	e3a02f7e 	mov	r2, #504	; 0x1f8
   21870:	e59f100c 	ldr	r1, [pc, #12]	; 21884 <USBDeviceIsSplit+0x2c>
   21874:	e59f000c 	ldr	r0, [pc, #12]	; 21888 <USBDeviceIsSplit+0x30>
   21878:	ebffd7e8 	bl	17820 <uspi_assertion_failed>
   2187c:	e594000c 	ldr	r0, [r4, #12]
   21880:	e8bd8010 	pop	{r4, pc}
   21884:	00030e24 	.word	0x00030e24
   21888:	000306f0 	.word	0x000306f0

0002188c <USBDeviceGetHubAddress>:
   2188c:	e92d4010 	push	{r4, lr}
   21890:	e2504000 	subs	r4, r0, #0
   21894:	0a000001 	beq	218a0 <USBDeviceGetHubAddress+0x14>
   21898:	e5d40010 	ldrb	r0, [r4, #16]
   2189c:	e8bd8010 	pop	{r4, pc}
   218a0:	e59f2010 	ldr	r2, [pc, #16]	; 218b8 <USBDeviceGetHubAddress+0x2c>
   218a4:	e59f1010 	ldr	r1, [pc, #16]	; 218bc <USBDeviceGetHubAddress+0x30>
   218a8:	e59f0010 	ldr	r0, [pc, #16]	; 218c0 <USBDeviceGetHubAddress+0x34>
   218ac:	ebffd7db 	bl	17820 <uspi_assertion_failed>
   218b0:	e5d40010 	ldrb	r0, [r4, #16]
   218b4:	e8bd8010 	pop	{r4, pc}
   218b8:	000001fe 	.word	0x000001fe
   218bc:	00030e24 	.word	0x00030e24
   218c0:	000306f0 	.word	0x000306f0

000218c4 <USBDeviceGetHubPortNumber>:
   218c4:	e92d4010 	push	{r4, lr}
   218c8:	e2504000 	subs	r4, r0, #0
   218cc:	0a000001 	beq	218d8 <USBDeviceGetHubPortNumber+0x14>
   218d0:	e5d40011 	ldrb	r0, [r4, #17]
   218d4:	e8bd8010 	pop	{r4, pc}
   218d8:	e3a02f81 	mov	r2, #516	; 0x204
   218dc:	e59f100c 	ldr	r1, [pc, #12]	; 218f0 <USBDeviceGetHubPortNumber+0x2c>
   218e0:	e59f000c 	ldr	r0, [pc, #12]	; 218f4 <USBDeviceGetHubPortNumber+0x30>
   218e4:	ebffd7cd 	bl	17820 <uspi_assertion_failed>
   218e8:	e5d40011 	ldrb	r0, [r4, #17]
   218ec:	e8bd8010 	pop	{r4, pc}
   218f0:	00030e24 	.word	0x00030e24
   218f4:	000306f0 	.word	0x000306f0

000218f8 <USBDeviceGetEndpoint0>:
   218f8:	e92d4010 	push	{r4, lr}
   218fc:	e2504000 	subs	r4, r0, #0
   21900:	0a000008 	beq	21928 <USBDeviceGetEndpoint0+0x30>
   21904:	e5940008 	ldr	r0, [r4, #8]
   21908:	e3500000 	cmp	r0, #0
   2190c:	18bd8010 	popne	{r4, pc}
   21910:	e59f2024 	ldr	r2, [pc, #36]	; 2193c <USBDeviceGetEndpoint0+0x44>
   21914:	e59f1024 	ldr	r1, [pc, #36]	; 21940 <USBDeviceGetEndpoint0+0x48>
   21918:	e59f0024 	ldr	r0, [pc, #36]	; 21944 <USBDeviceGetEndpoint0+0x4c>
   2191c:	ebffd7bf 	bl	17820 <uspi_assertion_failed>
   21920:	e5940008 	ldr	r0, [r4, #8]
   21924:	e8bd8010 	pop	{r4, pc}
   21928:	e59f2018 	ldr	r2, [pc, #24]	; 21948 <USBDeviceGetEndpoint0+0x50>
   2192c:	e59f100c 	ldr	r1, [pc, #12]	; 21940 <USBDeviceGetEndpoint0+0x48>
   21930:	e59f0014 	ldr	r0, [pc, #20]	; 2194c <USBDeviceGetEndpoint0+0x54>
   21934:	ebffd7b9 	bl	17820 <uspi_assertion_failed>
   21938:	eafffff1 	b	21904 <USBDeviceGetEndpoint0+0xc>
   2193c:	0000020b 	.word	0x0000020b
   21940:	00030e24 	.word	0x00030e24
   21944:	00030e60 	.word	0x00030e60
   21948:	0000020a 	.word	0x0000020a
   2194c:	000306f0 	.word	0x000306f0

00021950 <USBDeviceGetHost>:
   21950:	e92d4010 	push	{r4, lr}
   21954:	e2504000 	subs	r4, r0, #0
   21958:	0a000008 	beq	21980 <USBDeviceGetHost+0x30>
   2195c:	e5940000 	ldr	r0, [r4]
   21960:	e3500000 	cmp	r0, #0
   21964:	18bd8010 	popne	{r4, pc}
   21968:	e59f2024 	ldr	r2, [pc, #36]	; 21994 <USBDeviceGetHost+0x44>
   2196c:	e59f1024 	ldr	r1, [pc, #36]	; 21998 <USBDeviceGetHost+0x48>
   21970:	e59f0024 	ldr	r0, [pc, #36]	; 2199c <USBDeviceGetHost+0x4c>
   21974:	ebffd7a9 	bl	17820 <uspi_assertion_failed>
   21978:	e5940000 	ldr	r0, [r4]
   2197c:	e8bd8010 	pop	{r4, pc}
   21980:	e59f2018 	ldr	r2, [pc, #24]	; 219a0 <USBDeviceGetHost+0x50>
   21984:	e59f100c 	ldr	r1, [pc, #12]	; 21998 <USBDeviceGetHost+0x48>
   21988:	e59f0014 	ldr	r0, [pc, #20]	; 219a4 <USBDeviceGetHost+0x54>
   2198c:	ebffd7a3 	bl	17820 <uspi_assertion_failed>
   21990:	eafffff1 	b	2195c <USBDeviceGetHost+0xc>
   21994:	00000212 	.word	0x00000212
   21998:	00030e24 	.word	0x00030e24
   2199c:	00030e30 	.word	0x00030e30
   219a0:	00000211 	.word	0x00000211
   219a4:	000306f0 	.word	0x000306f0

000219a8 <USBDeviceGetDeviceDescriptor>:
   219a8:	e92d4010 	push	{r4, lr}
   219ac:	e2504000 	subs	r4, r0, #0
   219b0:	0a000008 	beq	219d8 <USBDeviceGetDeviceDescriptor+0x30>
   219b4:	e5940014 	ldr	r0, [r4, #20]
   219b8:	e3500000 	cmp	r0, #0
   219bc:	18bd8010 	popne	{r4, pc}
   219c0:	e59f2024 	ldr	r2, [pc, #36]	; 219ec <USBDeviceGetDeviceDescriptor+0x44>
   219c4:	e59f1024 	ldr	r1, [pc, #36]	; 219f0 <USBDeviceGetDeviceDescriptor+0x48>
   219c8:	e59f0024 	ldr	r0, [pc, #36]	; 219f4 <USBDeviceGetDeviceDescriptor+0x4c>
   219cc:	ebffd793 	bl	17820 <uspi_assertion_failed>
   219d0:	e5940014 	ldr	r0, [r4, #20]
   219d4:	e8bd8010 	pop	{r4, pc}
   219d8:	e3a02f86 	mov	r2, #536	; 0x218
   219dc:	e59f100c 	ldr	r1, [pc, #12]	; 219f0 <USBDeviceGetDeviceDescriptor+0x48>
   219e0:	e59f0010 	ldr	r0, [pc, #16]	; 219f8 <USBDeviceGetDeviceDescriptor+0x50>
   219e4:	ebffd78d 	bl	17820 <uspi_assertion_failed>
   219e8:	eafffff1 	b	219b4 <USBDeviceGetDeviceDescriptor+0xc>
   219ec:	00000219 	.word	0x00000219
   219f0:	00030e24 	.word	0x00030e24
   219f4:	00030ea4 	.word	0x00030ea4
   219f8:	000306f0 	.word	0x000306f0

000219fc <USBDeviceGetConfigurationDescriptor>:
   219fc:	e92d4010 	push	{r4, lr}
   21a00:	e2504000 	subs	r4, r0, #0
   21a04:	0a000008 	beq	21a2c <USBDeviceGetConfigurationDescriptor+0x30>
   21a08:	e5940018 	ldr	r0, [r4, #24]
   21a0c:	e3500000 	cmp	r0, #0
   21a10:	18bd8010 	popne	{r4, pc}
   21a14:	e3a02e22 	mov	r2, #544	; 0x220
   21a18:	e59f1020 	ldr	r1, [pc, #32]	; 21a40 <USBDeviceGetConfigurationDescriptor+0x44>
   21a1c:	e59f0020 	ldr	r0, [pc, #32]	; 21a44 <USBDeviceGetConfigurationDescriptor+0x48>
   21a20:	ebffd77e 	bl	17820 <uspi_assertion_failed>
   21a24:	e5940018 	ldr	r0, [r4, #24]
   21a28:	e8bd8010 	pop	{r4, pc}
   21a2c:	e59f2014 	ldr	r2, [pc, #20]	; 21a48 <USBDeviceGetConfigurationDescriptor+0x4c>
   21a30:	e59f1008 	ldr	r1, [pc, #8]	; 21a40 <USBDeviceGetConfigurationDescriptor+0x44>
   21a34:	e59f0010 	ldr	r0, [pc, #16]	; 21a4c <USBDeviceGetConfigurationDescriptor+0x50>
   21a38:	ebffd778 	bl	17820 <uspi_assertion_failed>
   21a3c:	eafffff1 	b	21a08 <USBDeviceGetConfigurationDescriptor+0xc>
   21a40:	00030e24 	.word	0x00030e24
   21a44:	00030eec 	.word	0x00030eec
   21a48:	0000021f 	.word	0x0000021f
   21a4c:	000306f0 	.word	0x000306f0

00021a50 <USBDeviceGetDescriptor>:
   21a50:	e92d4070 	push	{r4, r5, r6, lr}
   21a54:	e2504000 	subs	r4, r0, #0
   21a58:	e1a05001 	mov	r5, r1
   21a5c:	0a00000d 	beq	21a98 <USBDeviceGetDescriptor+0x48>
   21a60:	e594001c 	ldr	r0, [r4, #28]
   21a64:	e3500000 	cmp	r0, #0
   21a68:	0a000002 	beq	21a78 <USBDeviceGetDescriptor+0x28>
   21a6c:	e1a01005 	mov	r1, r5
   21a70:	e8bd4070 	pop	{r4, r5, r6, lr}
   21a74:	ea002807 	b	2ba98 <USBConfigurationParserGetDescriptor>
   21a78:	e59f102c 	ldr	r1, [pc, #44]	; 21aac <USBDeviceGetDescriptor+0x5c>
   21a7c:	e59f002c 	ldr	r0, [pc, #44]	; 21ab0 <USBDeviceGetDescriptor+0x60>
   21a80:	e59f202c 	ldr	r2, [pc, #44]	; 21ab4 <USBDeviceGetDescriptor+0x64>
   21a84:	ebffd765 	bl	17820 <uspi_assertion_failed>
   21a88:	e594001c 	ldr	r0, [r4, #28]
   21a8c:	e1a01005 	mov	r1, r5
   21a90:	e8bd4070 	pop	{r4, r5, r6, lr}
   21a94:	ea0027ff 	b	2ba98 <USBConfigurationParserGetDescriptor>
   21a98:	e59f2018 	ldr	r2, [pc, #24]	; 21ab8 <USBDeviceGetDescriptor+0x68>
   21a9c:	e59f1008 	ldr	r1, [pc, #8]	; 21aac <USBDeviceGetDescriptor+0x5c>
   21aa0:	e59f0014 	ldr	r0, [pc, #20]	; 21abc <USBDeviceGetDescriptor+0x6c>
   21aa4:	ebffd75d 	bl	17820 <uspi_assertion_failed>
   21aa8:	eaffffec 	b	21a60 <USBDeviceGetDescriptor+0x10>
   21aac:	00030e24 	.word	0x00030e24
   21ab0:	00030f08 	.word	0x00030f08
   21ab4:	00000227 	.word	0x00000227
   21ab8:	00000226 	.word	0x00000226
   21abc:	000306f0 	.word	0x000306f0

00021ac0 <USBDeviceConfigurationError>:
   21ac0:	e92d4070 	push	{r4, r5, r6, lr}
   21ac4:	e2504000 	subs	r4, r0, #0
   21ac8:	e1a05001 	mov	r5, r1
   21acc:	0a00000d 	beq	21b08 <USBDeviceConfigurationError+0x48>
   21ad0:	e594001c 	ldr	r0, [r4, #28]
   21ad4:	e3500000 	cmp	r0, #0
   21ad8:	0a000002 	beq	21ae8 <USBDeviceConfigurationError+0x28>
   21adc:	e1a01005 	mov	r1, r5
   21ae0:	e8bd4070 	pop	{r4, r5, r6, lr}
   21ae4:	ea00283e 	b	2bbe4 <USBConfigurationParserError>
   21ae8:	e59f102c 	ldr	r1, [pc, #44]	; 21b1c <USBDeviceConfigurationError+0x5c>
   21aec:	e59f002c 	ldr	r0, [pc, #44]	; 21b20 <USBDeviceConfigurationError+0x60>
   21af0:	e59f202c 	ldr	r2, [pc, #44]	; 21b24 <USBDeviceConfigurationError+0x64>
   21af4:	ebffd749 	bl	17820 <uspi_assertion_failed>
   21af8:	e594001c 	ldr	r0, [r4, #28]
   21afc:	e1a01005 	mov	r1, r5
   21b00:	e8bd4070 	pop	{r4, r5, r6, lr}
   21b04:	ea002836 	b	2bbe4 <USBConfigurationParserError>
   21b08:	e59f2018 	ldr	r2, [pc, #24]	; 21b28 <USBDeviceConfigurationError+0x68>
   21b0c:	e59f1008 	ldr	r1, [pc, #8]	; 21b1c <USBDeviceConfigurationError+0x5c>
   21b10:	e59f0014 	ldr	r0, [pc, #20]	; 21b2c <USBDeviceConfigurationError+0x6c>
   21b14:	ebffd741 	bl	17820 <uspi_assertion_failed>
   21b18:	eaffffec 	b	21ad0 <USBDeviceConfigurationError+0x10>
   21b1c:	00030e24 	.word	0x00030e24
   21b20:	00030f08 	.word	0x00030f08
   21b24:	0000022e 	.word	0x0000022e
   21b28:	0000022d 	.word	0x0000022d
   21b2c:	000306f0 	.word	0x000306f0

00021b30 <USBDeviceSetAddress>:
   21b30:	e92d4070 	push	{r4, r5, r6, lr}
   21b34:	e2505000 	subs	r5, r0, #0
   21b38:	e1a04001 	mov	r4, r1
   21b3c:	0a000009 	beq	21b68 <USBDeviceSetAddress+0x38>
   21b40:	e3140080 	tst	r4, #128	; 0x80
   21b44:	1a000001 	bne	21b50 <USBDeviceSetAddress+0x20>
   21b48:	e5c54004 	strb	r4, [r5, #4]
   21b4c:	e8bd8070 	pop	{r4, r5, r6, pc}
   21b50:	e59f2024 	ldr	r2, [pc, #36]	; 21b7c <USBDeviceSetAddress+0x4c>
   21b54:	e59f1024 	ldr	r1, [pc, #36]	; 21b80 <USBDeviceSetAddress+0x50>
   21b58:	e59f0024 	ldr	r0, [pc, #36]	; 21b84 <USBDeviceSetAddress+0x54>
   21b5c:	ebffd72f 	bl	17820 <uspi_assertion_failed>
   21b60:	e5c54004 	strb	r4, [r5, #4]
   21b64:	e8bd8070 	pop	{r4, r5, r6, pc}
   21b68:	e3a02f8d 	mov	r2, #564	; 0x234
   21b6c:	e59f100c 	ldr	r1, [pc, #12]	; 21b80 <USBDeviceSetAddress+0x50>
   21b70:	e59f0010 	ldr	r0, [pc, #16]	; 21b88 <USBDeviceSetAddress+0x58>
   21b74:	ebffd729 	bl	17820 <uspi_assertion_failed>
   21b78:	eafffff0 	b	21b40 <USBDeviceSetAddress+0x10>
   21b7c:	00000236 	.word	0x00000236
   21b80:	00030e24 	.word	0x00030e24
   21b84:	00030f24 	.word	0x00030f24
   21b88:	000306f0 	.word	0x000306f0

00021b8c <USBDeviceLogWrite>:
   21b8c:	e92d000c 	push	{r2, r3}
   21b90:	e92d4070 	push	{r4, r5, r6, lr}
   21b94:	e2505000 	subs	r5, r0, #0
   21b98:	e24dd028 	sub	sp, sp, #40	; 0x28
   21b9c:	e1a06001 	mov	r6, r1
   21ba0:	e59d4038 	ldr	r4, [sp, #56]	; 0x38
   21ba4:	0a000028 	beq	21c4c <USBDeviceLogWrite+0xc0>
   21ba8:	e3540000 	cmp	r4, #0
   21bac:	0a000021 	beq	21c38 <USBDeviceLogWrite+0xac>
   21bb0:	e28d0010 	add	r0, sp, #16
   21bb4:	eb00133f 	bl	268b8 <String>
   21bb8:	e5d52011 	ldrb	r2, [r5, #17]
   21bbc:	e5d53010 	ldrb	r3, [r5, #16]
   21bc0:	e28d0010 	add	r0, sp, #16
   21bc4:	e58d2000 	str	r2, [sp]
   21bc8:	e59f1090 	ldr	r1, [pc, #144]	; 21c60 <USBDeviceLogWrite+0xd4>
   21bcc:	e59f2090 	ldr	r2, [pc, #144]	; 21c64 <USBDeviceLogWrite+0xd8>
   21bd0:	eb0015f9 	bl	273bc <StringFormat>
   21bd4:	e28d303c 	add	r3, sp, #60	; 0x3c
   21bd8:	e28d001c 	add	r0, sp, #28
   21bdc:	e58d300c 	str	r3, [sp, #12]
   21be0:	eb001334 	bl	268b8 <String>
   21be4:	e1a01004 	mov	r1, r4
   21be8:	e59d200c 	ldr	r2, [sp, #12]
   21bec:	e28d001c 	add	r0, sp, #28
   21bf0:	eb001446 	bl	26d10 <StringFormatV>
   21bf4:	e28d0010 	add	r0, sp, #16
   21bf8:	eb001361 	bl	26984 <StringGet>
   21bfc:	e1a04000 	mov	r4, r0
   21c00:	e28d001c 	add	r0, sp, #28
   21c04:	eb00135e 	bl	26984 <StringGet>
   21c08:	e1a01006 	mov	r1, r6
   21c0c:	e1a02000 	mov	r2, r0
   21c10:	e1a00004 	mov	r0, r4
   21c14:	ebff9ee6 	bl	97b4 <LogWrite>
   21c18:	e28d001c 	add	r0, sp, #28
   21c1c:	eb001347 	bl	26940 <_String>
   21c20:	e28d0010 	add	r0, sp, #16
   21c24:	eb001345 	bl	26940 <_String>
   21c28:	e28dd028 	add	sp, sp, #40	; 0x28
   21c2c:	e8bd4070 	pop	{r4, r5, r6, lr}
   21c30:	e28dd008 	add	sp, sp, #8
   21c34:	e12fff1e 	bx	lr
   21c38:	e59f2028 	ldr	r2, [pc, #40]	; 21c68 <USBDeviceLogWrite+0xdc>
   21c3c:	e59f1028 	ldr	r1, [pc, #40]	; 21c6c <USBDeviceLogWrite+0xe0>
   21c40:	e59f0028 	ldr	r0, [pc, #40]	; 21c70 <USBDeviceLogWrite+0xe4>
   21c44:	ebffd6f5 	bl	17820 <uspi_assertion_failed>
   21c48:	eaffffd8 	b	21bb0 <USBDeviceLogWrite+0x24>
   21c4c:	e59f2020 	ldr	r2, [pc, #32]	; 21c74 <USBDeviceLogWrite+0xe8>
   21c50:	e59f1014 	ldr	r1, [pc, #20]	; 21c6c <USBDeviceLogWrite+0xe0>
   21c54:	e59f001c 	ldr	r0, [pc, #28]	; 21c78 <USBDeviceLogWrite+0xec>
   21c58:	ebffd6f0 	bl	17820 <uspi_assertion_failed>
   21c5c:	eaffffd1 	b	21ba8 <USBDeviceLogWrite+0x1c>
   21c60:	00030f54 	.word	0x00030f54
   21c64:	00030e1c 	.word	0x00030e1c
   21c68:	0000023f 	.word	0x0000023f
   21c6c:	00030e24 	.word	0x00030e24
   21c70:	00030f44 	.word	0x00030f44
   21c74:	0000023e 	.word	0x0000023e
   21c78:	000306f0 	.word	0x000306f0

00021c7c <USBDeviceInitialize>:
   21c7c:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21c80:	e2504000 	subs	r4, r0, #0
   21c84:	e24dd01c 	sub	sp, sp, #28
   21c88:	0a000036 	beq	21d68 <USBDeviceInitialize+0xec>
   21c8c:	e5943014 	ldr	r3, [r4, #20]
   21c90:	e3530000 	cmp	r3, #0
   21c94:	0a000003 	beq	21ca8 <USBDeviceInitialize+0x2c>
   21c98:	e3a02080 	mov	r2, #128	; 0x80
   21c9c:	e59f1658 	ldr	r1, [pc, #1624]	; 222fc <USBDeviceInitialize+0x680>
   21ca0:	e59f0658 	ldr	r0, [pc, #1624]	; 22300 <USBDeviceInitialize+0x684>
   21ca4:	ebffd6dd 	bl	17820 <uspi_assertion_failed>
   21ca8:	e3a00012 	mov	r0, #18
   21cac:	ebffd6b4 	bl	17784 <malloc>
   21cb0:	e3500000 	cmp	r0, #0
   21cb4:	e5840014 	str	r0, [r4, #20]
   21cb8:	0a00002f 	beq	21d7c <USBDeviceInitialize+0x100>
   21cbc:	e5943000 	ldr	r3, [r4]
   21cc0:	e3530000 	cmp	r3, #0
   21cc4:	0a000033 	beq	21d98 <USBDeviceInitialize+0x11c>
   21cc8:	e5941008 	ldr	r1, [r4, #8]
   21ccc:	e3510000 	cmp	r1, #0
   21cd0:	0a00001e 	beq	21d50 <USBDeviceInitialize+0xd4>
   21cd4:	e3a03008 	mov	r3, #8
   21cd8:	e3a05080 	mov	r5, #128	; 0x80
   21cdc:	e5940000 	ldr	r0, [r4]
   21ce0:	e98d0028 	stmib	sp, {r3, r5}
   21ce4:	e5943014 	ldr	r3, [r4, #20]
   21ce8:	e3a02001 	mov	r2, #1
   21cec:	e58d3000 	str	r3, [sp]
   21cf0:	e3a03000 	mov	r3, #0
   21cf4:	ebfff377 	bl	1ead8 <DWHCIDeviceGetDescriptor>
   21cf8:	e3500008 	cmp	r0, #8
   21cfc:	1a000011 	bne	21d48 <USBDeviceInitialize+0xcc>
   21d00:	e5943014 	ldr	r3, [r4, #20]
   21d04:	e5d36000 	ldrb	r6, [r3]
   21d08:	e3560012 	cmp	r6, #18
   21d0c:	1a000002 	bne	21d1c <USBDeviceInitialize+0xa0>
   21d10:	e5d37001 	ldrb	r7, [r3, #1]
   21d14:	e3570001 	cmp	r7, #1
   21d18:	0a000023 	beq	21dac <USBDeviceInitialize+0x130>
   21d1c:	e59f25e0 	ldr	r2, [pc, #1504]	; 22304 <USBDeviceInitialize+0x688>
   21d20:	e3a01001 	mov	r1, #1
   21d24:	e3a05000 	mov	r5, #0
   21d28:	e1a00004 	mov	r0, r4
   21d2c:	ebffff96 	bl	21b8c <USBDeviceLogWrite>
   21d30:	e5940014 	ldr	r0, [r4, #20]
   21d34:	ebffd693 	bl	17788 <free>
   21d38:	e5845014 	str	r5, [r4, #20]
   21d3c:	e1a00005 	mov	r0, r5
   21d40:	e28dd01c 	add	sp, sp, #28
   21d44:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21d48:	e59f25b8 	ldr	r2, [pc, #1464]	; 22308 <USBDeviceInitialize+0x68c>
   21d4c:	eafffff3 	b	21d20 <USBDeviceInitialize+0xa4>
   21d50:	e59f15a4 	ldr	r1, [pc, #1444]	; 222fc <USBDeviceInitialize+0x680>
   21d54:	e3a02085 	mov	r2, #133	; 0x85
   21d58:	e59f05ac 	ldr	r0, [pc, #1452]	; 2230c <USBDeviceInitialize+0x690>
   21d5c:	ebffd6af 	bl	17820 <uspi_assertion_failed>
   21d60:	e5941008 	ldr	r1, [r4, #8]
   21d64:	eaffffda 	b	21cd4 <USBDeviceInitialize+0x58>
   21d68:	e3a0207e 	mov	r2, #126	; 0x7e
   21d6c:	e59f1588 	ldr	r1, [pc, #1416]	; 222fc <USBDeviceInitialize+0x680>
   21d70:	e59f0598 	ldr	r0, [pc, #1432]	; 22310 <USBDeviceInitialize+0x694>
   21d74:	ebffd6a9 	bl	17820 <uspi_assertion_failed>
   21d78:	eaffffc3 	b	21c8c <USBDeviceInitialize+0x10>
   21d7c:	e3a02082 	mov	r2, #130	; 0x82
   21d80:	e59f1574 	ldr	r1, [pc, #1396]	; 222fc <USBDeviceInitialize+0x680>
   21d84:	e59f0588 	ldr	r0, [pc, #1416]	; 22314 <USBDeviceInitialize+0x698>
   21d88:	ebffd6a4 	bl	17820 <uspi_assertion_failed>
   21d8c:	e5943000 	ldr	r3, [r4]
   21d90:	e3530000 	cmp	r3, #0
   21d94:	1affffcb 	bne	21cc8 <USBDeviceInitialize+0x4c>
   21d98:	e3a02084 	mov	r2, #132	; 0x84
   21d9c:	e59f1558 	ldr	r1, [pc, #1368]	; 222fc <USBDeviceInitialize+0x680>
   21da0:	e59f0570 	ldr	r0, [pc, #1392]	; 22318 <USBDeviceInitialize+0x69c>
   21da4:	ebffd69d 	bl	17820 <uspi_assertion_failed>
   21da8:	eaffffc6 	b	21cc8 <USBDeviceInitialize+0x4c>
   21dac:	e5d31007 	ldrb	r1, [r3, #7]
   21db0:	e5940008 	ldr	r0, [r4, #8]
   21db4:	eb000382 	bl	22bc4 <USBEndpointSetMaxPacketSize>
   21db8:	e5941008 	ldr	r1, [r4, #8]
   21dbc:	e5940000 	ldr	r0, [r4]
   21dc0:	e58d5008 	str	r5, [sp, #8]
   21dc4:	e58d6004 	str	r6, [sp, #4]
   21dc8:	e5943014 	ldr	r3, [r4, #20]
   21dcc:	e1a02007 	mov	r2, r7
   21dd0:	e58d3000 	str	r3, [sp]
   21dd4:	e3a03000 	mov	r3, #0
   21dd8:	ebfff33e 	bl	1ead8 <DWHCIDeviceGetDescriptor>
   21ddc:	e3500012 	cmp	r0, #18
   21de0:	1a000050 	bne	21f28 <USBDeviceInitialize+0x2ac>
   21de4:	e59f3530 	ldr	r3, [pc, #1328]	; 2231c <USBDeviceInitialize+0x6a0>
   21de8:	e5d36000 	ldrb	r6, [r3]
   21dec:	e2862001 	add	r2, r6, #1
   21df0:	e3160080 	tst	r6, #128	; 0x80
   21df4:	e5c32000 	strb	r2, [r3]
   21df8:	1a00004d 	bne	21f34 <USBDeviceInitialize+0x2b8>
   21dfc:	e1a02006 	mov	r2, r6
   21e00:	e5941008 	ldr	r1, [r4, #8]
   21e04:	e5940000 	ldr	r0, [r4]
   21e08:	ebfff352 	bl	1eb58 <DWHCIDeviceSetAddress>
   21e0c:	e2505000 	subs	r5, r0, #0
   21e10:	0a00004d 	beq	21f4c <USBDeviceInitialize+0x2d0>
   21e14:	e1a01006 	mov	r1, r6
   21e18:	e1a00004 	mov	r0, r4
   21e1c:	ebffff43 	bl	21b30 <USBDeviceSetAddress>
   21e20:	e5943014 	ldr	r3, [r4, #20]
   21e24:	e5d3200e 	ldrb	r2, [r3, #14]
   21e28:	e3520000 	cmp	r2, #0
   21e2c:	1a000002 	bne	21e3c <USBDeviceInitialize+0x1c0>
   21e30:	e5d3300f 	ldrb	r3, [r3, #15]
   21e34:	e3530000 	cmp	r3, #0
   21e38:	0a000011 	beq	21e84 <USBDeviceInitialize+0x208>
   21e3c:	e2845020 	add	r5, r4, #32
   21e40:	e1a00005 	mov	r0, r5
   21e44:	eb00249a 	bl	2b0b4 <USBStringGetLanguageID>
   21e48:	e5943014 	ldr	r3, [r4, #20]
   21e4c:	e1a06000 	mov	r6, r0
   21e50:	e5d3100e 	ldrb	r1, [r3, #14]
   21e54:	e3510000 	cmp	r1, #0
   21e58:	0a000003 	beq	21e6c <USBDeviceInitialize+0x1f0>
   21e5c:	e1a00005 	mov	r0, r5
   21e60:	e1a02006 	mov	r2, r6
   21e64:	eb0023dd 	bl	2ade0 <USBStringGetFromDescriptor>
   21e68:	e5943014 	ldr	r3, [r4, #20]
   21e6c:	e5d3100f 	ldrb	r1, [r3, #15]
   21e70:	e3510000 	cmp	r1, #0
   21e74:	0a000002 	beq	21e84 <USBDeviceInitialize+0x208>
   21e78:	e1a02006 	mov	r2, r6
   21e7c:	e284002c 	add	r0, r4, #44	; 0x2c
   21e80:	eb0023d6 	bl	2ade0 <USBStringGetFromDescriptor>
   21e84:	e5943018 	ldr	r3, [r4, #24]
   21e88:	e3530000 	cmp	r3, #0
   21e8c:	0a000003 	beq	21ea0 <USBDeviceInitialize+0x224>
   21e90:	e3a020d6 	mov	r2, #214	; 0xd6
   21e94:	e59f1460 	ldr	r1, [pc, #1120]	; 222fc <USBDeviceInitialize+0x680>
   21e98:	e59f0480 	ldr	r0, [pc, #1152]	; 22320 <USBDeviceInitialize+0x6a4>
   21e9c:	ebffd65f 	bl	17820 <uspi_assertion_failed>
   21ea0:	e3a00009 	mov	r0, #9
   21ea4:	ebffd636 	bl	17784 <malloc>
   21ea8:	e3500000 	cmp	r0, #0
   21eac:	e1a03000 	mov	r3, r0
   21eb0:	e5840018 	str	r0, [r4, #24]
   21eb4:	0a00002c 	beq	21f6c <USBDeviceInitialize+0x2f0>
   21eb8:	e3a0c080 	mov	ip, #128	; 0x80
   21ebc:	e3a02009 	mov	r2, #9
   21ec0:	e5941008 	ldr	r1, [r4, #8]
   21ec4:	e5940000 	ldr	r0, [r4]
   21ec8:	e58d3000 	str	r3, [sp]
   21ecc:	e58d2004 	str	r2, [sp, #4]
   21ed0:	e58dc008 	str	ip, [sp, #8]
   21ed4:	e3a03000 	mov	r3, #0
   21ed8:	e3a02002 	mov	r2, #2
   21edc:	ebfff2fd 	bl	1ead8 <DWHCIDeviceGetDescriptor>
   21ee0:	e3500009 	cmp	r0, #9
   21ee4:	1a00001e 	bne	21f64 <USBDeviceInitialize+0x2e8>
   21ee8:	e5940018 	ldr	r0, [r4, #24]
   21eec:	e5d03000 	ldrb	r3, [r0]
   21ef0:	e3530009 	cmp	r3, #9
   21ef4:	1a000002 	bne	21f04 <USBDeviceInitialize+0x288>
   21ef8:	e5d03001 	ldrb	r3, [r0, #1]
   21efc:	e3530002 	cmp	r3, #2
   21f00:	0a00001f 	beq	21f84 <USBDeviceInitialize+0x308>
   21f04:	e59f2418 	ldr	r2, [pc, #1048]	; 22324 <USBDeviceInitialize+0x6a8>
   21f08:	e3a05000 	mov	r5, #0
   21f0c:	e3a01001 	mov	r1, #1
   21f10:	e1a00004 	mov	r0, r4
   21f14:	ebffff1c 	bl	21b8c <USBDeviceLogWrite>
   21f18:	e5940018 	ldr	r0, [r4, #24]
   21f1c:	ebffd619 	bl	17788 <free>
   21f20:	e5845018 	str	r5, [r4, #24]
   21f24:	eaffff84 	b	21d3c <USBDeviceInitialize+0xc0>
   21f28:	e1a01007 	mov	r1, r7
   21f2c:	e59f23f4 	ldr	r2, [pc, #1012]	; 22328 <USBDeviceInitialize+0x6ac>
   21f30:	eaffff7b 	b	21d24 <USBDeviceInitialize+0xa8>
   21f34:	e1a01007 	mov	r1, r7
   21f38:	e1a00004 	mov	r0, r4
   21f3c:	e59f23e8 	ldr	r2, [pc, #1000]	; 2232c <USBDeviceInitialize+0x6b0>
   21f40:	ebffff11 	bl	21b8c <USBDeviceLogWrite>
   21f44:	e3a05000 	mov	r5, #0
   21f48:	eaffff7b 	b	21d3c <USBDeviceInitialize+0xc0>
   21f4c:	e1a03006 	mov	r3, r6
   21f50:	e1a01007 	mov	r1, r7
   21f54:	e1a00004 	mov	r0, r4
   21f58:	e59f23d0 	ldr	r2, [pc, #976]	; 22330 <USBDeviceInitialize+0x6b4>
   21f5c:	ebffff0a 	bl	21b8c <USBDeviceLogWrite>
   21f60:	eaffff75 	b	21d3c <USBDeviceInitialize+0xc0>
   21f64:	e59f23c8 	ldr	r2, [pc, #968]	; 22334 <USBDeviceInitialize+0x6b8>
   21f68:	eaffffe6 	b	21f08 <USBDeviceInitialize+0x28c>
   21f6c:	e3a020d8 	mov	r2, #216	; 0xd8
   21f70:	e59f1384 	ldr	r1, [pc, #900]	; 222fc <USBDeviceInitialize+0x680>
   21f74:	e59f03bc 	ldr	r0, [pc, #956]	; 22338 <USBDeviceInitialize+0x6bc>
   21f78:	ebffd628 	bl	17820 <uspi_assertion_failed>
   21f7c:	e5943018 	ldr	r3, [r4, #24]
   21f80:	eaffffcc 	b	21eb8 <USBDeviceInitialize+0x23c>
   21f84:	e5d05002 	ldrb	r5, [r0, #2]
   21f88:	e5d03003 	ldrb	r3, [r0, #3]
   21f8c:	e1855403 	orr	r5, r5, r3, lsl #8
   21f90:	e3550c02 	cmp	r5, #512	; 0x200
   21f94:	8affffda 	bhi	21f04 <USBDeviceInitialize+0x288>
   21f98:	ebffd5fa 	bl	17788 <free>
   21f9c:	e1a00005 	mov	r0, r5
   21fa0:	ebffd5f7 	bl	17784 <malloc>
   21fa4:	e3500000 	cmp	r0, #0
   21fa8:	e5840018 	str	r0, [r4, #24]
   21fac:	0a0000c8 	beq	222d4 <USBDeviceInitialize+0x658>
   21fb0:	e3a03080 	mov	r3, #128	; 0x80
   21fb4:	e58d5004 	str	r5, [sp, #4]
   21fb8:	e58d3008 	str	r3, [sp, #8]
   21fbc:	e5942018 	ldr	r2, [r4, #24]
   21fc0:	e3a03000 	mov	r3, #0
   21fc4:	e58d2000 	str	r2, [sp]
   21fc8:	e5941008 	ldr	r1, [r4, #8]
   21fcc:	e3a02002 	mov	r2, #2
   21fd0:	e5940000 	ldr	r0, [r4]
   21fd4:	ebfff2bf 	bl	1ead8 <DWHCIDeviceGetDescriptor>
   21fd8:	e1500005 	cmp	r0, r5
   21fdc:	159f2358 	ldrne	r2, [pc, #856]	; 2233c <USBDeviceInitialize+0x6c0>
   21fe0:	1affffc8 	bne	21f08 <USBDeviceInitialize+0x28c>
   21fe4:	e594301c 	ldr	r3, [r4, #28]
   21fe8:	e3530000 	cmp	r3, #0
   21fec:	0a000003 	beq	22000 <USBDeviceInitialize+0x384>
   21ff0:	e59f2348 	ldr	r2, [pc, #840]	; 22340 <USBDeviceInitialize+0x6c4>
   21ff4:	e59f1300 	ldr	r1, [pc, #768]	; 222fc <USBDeviceInitialize+0x680>
   21ff8:	e59f0344 	ldr	r0, [pc, #836]	; 22344 <USBDeviceInitialize+0x6c8>
   21ffc:	ebffd607 	bl	17820 <uspi_assertion_failed>
   22000:	e3a0001c 	mov	r0, #28
   22004:	ebffd5de 	bl	17784 <malloc>
   22008:	e3500000 	cmp	r0, #0
   2200c:	e584001c 	str	r0, [r4, #28]
   22010:	1a000003 	bne	22024 <USBDeviceInitialize+0x3a8>
   22014:	e59f232c 	ldr	r2, [pc, #812]	; 22348 <USBDeviceInitialize+0x6cc>
   22018:	e59f12dc 	ldr	r1, [pc, #732]	; 222fc <USBDeviceInitialize+0x680>
   2201c:	e59f0328 	ldr	r0, [pc, #808]	; 2234c <USBDeviceInitialize+0x6d0>
   22020:	ebffd5fe 	bl	17820 <uspi_assertion_failed>
   22024:	e1a02005 	mov	r2, r5
   22028:	e5941018 	ldr	r1, [r4, #24]
   2202c:	e594001c 	ldr	r0, [r4, #28]
   22030:	eb002603 	bl	2b844 <USBConfigurationParser>
   22034:	e594001c 	ldr	r0, [r4, #28]
   22038:	eb002689 	bl	2ba64 <USBConfigurationParserIsValid>
   2203c:	e2505000 	subs	r5, r0, #0
   22040:	e1a00004 	mov	r0, r4
   22044:	0a00009f 	beq	222c8 <USBDeviceInitialize+0x64c>
   22048:	ebfffd99 	bl	216b4 <USBDeviceGetNames>
   2204c:	e2505000 	subs	r5, r0, #0
   22050:	0a0000a4 	beq	222e8 <USBDeviceInitialize+0x66c>
   22054:	e1a00005 	mov	r0, r5
   22058:	eb001249 	bl	26984 <StringGet>
   2205c:	e3a07000 	mov	r7, #0
   22060:	e1a03000 	mov	r3, r0
   22064:	e59f22e4 	ldr	r2, [pc, #740]	; 22350 <USBDeviceInitialize+0x6d4>
   22068:	e3a01003 	mov	r1, #3
   2206c:	e1a00004 	mov	r0, r4
   22070:	ebfffec5 	bl	21b8c <USBDeviceLogWrite>
   22074:	e1a00005 	mov	r0, r5
   22078:	eb001230 	bl	26940 <_String>
   2207c:	e1a00005 	mov	r0, r5
   22080:	ebffd5c0 	bl	17788 <free>
   22084:	e1a05007 	mov	r5, r7
   22088:	e59fb2c4 	ldr	fp, [pc, #708]	; 22354 <USBDeviceInitialize+0x6d8>
   2208c:	e59fa2c4 	ldr	sl, [pc, #708]	; 22358 <USBDeviceInitialize+0x6dc>
   22090:	e59f92c4 	ldr	r9, [pc, #708]	; 2235c <USBDeviceInitialize+0x6e0>
   22094:	e3a01004 	mov	r1, #4
   22098:	e594001c 	ldr	r0, [r4, #28]
   2209c:	eb00267d 	bl	2ba98 <USBConfigurationParserGetDescriptor>
   220a0:	e3500000 	cmp	r0, #0
   220a4:	0a00007f 	beq	222a8 <USBDeviceInitialize+0x62c>
   220a8:	e5d03002 	ldrb	r3, [r0, #2]
   220ac:	e1530007 	cmp	r3, r7
   220b0:	8a000006 	bhi	220d0 <USBDeviceInitialize+0x454>
   220b4:	0a000006 	beq	220d4 <USBDeviceInitialize+0x458>
   220b8:	e5d03003 	ldrb	r3, [r0, #3]
   220bc:	e59f229c 	ldr	r2, [pc, #668]	; 22360 <USBDeviceInitialize+0x6e4>
   220c0:	e3a01004 	mov	r1, #4
   220c4:	e1a00004 	mov	r0, r4
   220c8:	ebfffeaf 	bl	21b8c <USBDeviceLogWrite>
   220cc:	eafffff0 	b	22094 <USBDeviceInitialize+0x418>
   220d0:	e1a07003 	mov	r7, r3
   220d4:	e594301c 	ldr	r3, [r4, #28]
   220d8:	e3530000 	cmp	r3, #0
   220dc:	0a000062 	beq	2226c <USBDeviceInitialize+0x5f0>
   220e0:	e0846105 	add	r6, r4, r5, lsl #2
   220e4:	e5963038 	ldr	r3, [r6, #56]	; 0x38
   220e8:	e3530000 	cmp	r3, #0
   220ec:	0a000003 	beq	22100 <USBDeviceInitialize+0x484>
   220f0:	e59f226c 	ldr	r2, [pc, #620]	; 22364 <USBDeviceInitialize+0x6e8>
   220f4:	e59f1200 	ldr	r1, [pc, #512]	; 222fc <USBDeviceInitialize+0x680>
   220f8:	e59f0268 	ldr	r0, [pc, #616]	; 22368 <USBDeviceInitialize+0x6ec>
   220fc:	ebffd5c7 	bl	17820 <uspi_assertion_failed>
   22100:	e3a00010 	mov	r0, #16
   22104:	ebffd59e 	bl	17784 <malloc>
   22108:	e3500000 	cmp	r0, #0
   2210c:	e5860038 	str	r0, [r6, #56]	; 0x38
   22110:	0a00005a 	beq	22280 <USBDeviceInitialize+0x604>
   22114:	e594201c 	ldr	r2, [r4, #28]
   22118:	e1a01004 	mov	r1, r4
   2211c:	e5960038 	ldr	r0, [r6, #56]	; 0x38
   22120:	eb00089b 	bl	24394 <USBFunction>
   22124:	e3550000 	cmp	r5, #0
   22128:	1a00001a 	bne	22198 <USBDeviceInitialize+0x51c>
   2212c:	e1a01005 	mov	r1, r5
   22130:	e1a00004 	mov	r0, r4
   22134:	e5948038 	ldr	r8, [r4, #56]	; 0x38
   22138:	ebfffd01 	bl	21544 <USBDeviceGetName>
   2213c:	e1a01000 	mov	r1, r0
   22140:	e1a00008 	mov	r0, r8
   22144:	eb0000d7 	bl	224a8 <USBDeviceFactoryGetDevice>
   22148:	e2508000 	subs	r8, r0, #0
   2214c:	0a000008 	beq	22174 <USBDeviceInitialize+0x4f8>
   22150:	e3a05001 	mov	r5, #1
   22154:	e5940038 	ldr	r0, [r4, #56]	; 0x38
   22158:	eb00090a 	bl	24588 <_USBFunction>
   2215c:	e5940038 	ldr	r0, [r4, #56]	; 0x38
   22160:	ebffd588 	bl	17788 <free>
   22164:	e5848038 	str	r8, [r4, #56]	; 0x38
   22168:	e2877001 	add	r7, r7, #1
   2216c:	e6ef7077 	uxtb	r7, r7
   22170:	eaffffc7 	b	22094 <USBDeviceInitialize+0x418>
   22174:	e3a01001 	mov	r1, #1
   22178:	e1a00004 	mov	r0, r4
   2217c:	e5948038 	ldr	r8, [r4, #56]	; 0x38
   22180:	ebfffcef 	bl	21544 <USBDeviceGetName>
   22184:	e1a01000 	mov	r1, r0
   22188:	e1a00008 	mov	r0, r8
   2218c:	eb0000c5 	bl	224a8 <USBDeviceFactoryGetDevice>
   22190:	e2508000 	subs	r8, r0, #0
   22194:	1affffed 	bne	22150 <USBDeviceInitialize+0x4d4>
   22198:	e5960038 	ldr	r0, [r6, #56]	; 0x38
   2219c:	eb00090d 	bl	245d8 <USBFunctionGetInterfaceName>
   221a0:	e2508000 	subs	r8, r0, #0
   221a4:	0a00003a 	beq	22294 <USBDeviceInitialize+0x618>
   221a8:	e1a0100b 	mov	r1, fp
   221ac:	e1a00008 	mov	r0, r8
   221b0:	eb001252 	bl	26b00 <StringCompare>
   221b4:	e2503000 	subs	r3, r0, #0
   221b8:	0a00001b 	beq	2222c <USBDeviceInitialize+0x5b0>
   221bc:	e1a00008 	mov	r0, r8
   221c0:	eb0011ef 	bl	26984 <StringGet>
   221c4:	e1a02009 	mov	r2, r9
   221c8:	e1a03000 	mov	r3, r0
   221cc:	e3a01003 	mov	r1, #3
   221d0:	e1a00004 	mov	r0, r4
   221d4:	ebfffe6c 	bl	21b8c <USBDeviceLogWrite>
   221d8:	e1a01008 	mov	r1, r8
   221dc:	e5960038 	ldr	r0, [r6, #56]	; 0x38
   221e0:	eb0000b0 	bl	224a8 <USBDeviceFactoryGetDevice>
   221e4:	e1a08000 	mov	r8, r0
   221e8:	e5960038 	ldr	r0, [r6, #56]	; 0x38
   221ec:	eb0008e5 	bl	24588 <_USBFunction>
   221f0:	e5960038 	ldr	r0, [r6, #56]	; 0x38
   221f4:	ebffd563 	bl	17788 <free>
   221f8:	e3580000 	cmp	r8, #0
   221fc:	05868038 	streq	r8, [r6, #56]	; 0x38
   22200:	0a000014 	beq	22258 <USBDeviceInitialize+0x5dc>
   22204:	e2855001 	add	r5, r5, #1
   22208:	e355000a 	cmp	r5, #10
   2220c:	e5868038 	str	r8, [r6, #56]	; 0x38
   22210:	1affffd4 	bne	22168 <USBDeviceInitialize+0x4ec>
   22214:	e1a00004 	mov	r0, r4
   22218:	e59f214c 	ldr	r2, [pc, #332]	; 2236c <USBDeviceInitialize+0x6f0>
   2221c:	e3a01002 	mov	r1, #2
   22220:	ebfffe59 	bl	21b8c <USBDeviceLogWrite>
   22224:	e3a05001 	mov	r5, #1
   22228:	eafffec3 	b	21d3c <USBDeviceInitialize+0xc0>
   2222c:	e1a00008 	mov	r0, r8
   22230:	e58d3014 	str	r3, [sp, #20]
   22234:	eb0011c1 	bl	26940 <_String>
   22238:	e1a00008 	mov	r0, r8
   2223c:	ebffd551 	bl	17788 <free>
   22240:	e5960038 	ldr	r0, [r6, #56]	; 0x38
   22244:	eb0008cf 	bl	24588 <_USBFunction>
   22248:	e5960038 	ldr	r0, [r6, #56]	; 0x38
   2224c:	ebffd54d 	bl	17788 <free>
   22250:	e59d3014 	ldr	r3, [sp, #20]
   22254:	e5863038 	str	r3, [r6, #56]	; 0x38
   22258:	e1a0200a 	mov	r2, sl
   2225c:	e3a01002 	mov	r1, #2
   22260:	e1a00004 	mov	r0, r4
   22264:	ebfffe48 	bl	21b8c <USBDeviceLogWrite>
   22268:	eaffff89 	b	22094 <USBDeviceInitialize+0x418>
   2226c:	e3a02e13 	mov	r2, #304	; 0x130
   22270:	e59f1084 	ldr	r1, [pc, #132]	; 222fc <USBDeviceInitialize+0x680>
   22274:	e59f00d0 	ldr	r0, [pc, #208]	; 2234c <USBDeviceInitialize+0x6d0>
   22278:	ebffd568 	bl	17820 <uspi_assertion_failed>
   2227c:	eaffff97 	b	220e0 <USBDeviceInitialize+0x464>
   22280:	e59f20e8 	ldr	r2, [pc, #232]	; 22370 <USBDeviceInitialize+0x6f4>
   22284:	e59f1070 	ldr	r1, [pc, #112]	; 222fc <USBDeviceInitialize+0x680>
   22288:	e59f00e4 	ldr	r0, [pc, #228]	; 22374 <USBDeviceInitialize+0x6f8>
   2228c:	ebffd563 	bl	17820 <uspi_assertion_failed>
   22290:	eaffff9f 	b	22114 <USBDeviceInitialize+0x498>
   22294:	e3a02f51 	mov	r2, #324	; 0x144
   22298:	e59f105c 	ldr	r1, [pc, #92]	; 222fc <USBDeviceInitialize+0x680>
   2229c:	e59f00d4 	ldr	r0, [pc, #212]	; 22378 <USBDeviceInitialize+0x6fc>
   222a0:	ebffd55e 	bl	17820 <uspi_assertion_failed>
   222a4:	eaffffbf 	b	221a8 <USBDeviceInitialize+0x52c>
   222a8:	e3550000 	cmp	r5, #0
   222ac:	13a05001 	movne	r5, #1
   222b0:	1afffea1 	bne	21d3c <USBDeviceInitialize+0xc0>
   222b4:	e1a00004 	mov	r0, r4
   222b8:	e59f20bc 	ldr	r2, [pc, #188]	; 2237c <USBDeviceInitialize+0x700>
   222bc:	e3a01002 	mov	r1, #2
   222c0:	ebfffe31 	bl	21b8c <USBDeviceLogWrite>
   222c4:	eafffe9c 	b	21d3c <USBDeviceInitialize+0xc0>
   222c8:	e59f10b0 	ldr	r1, [pc, #176]	; 22380 <USBDeviceInitialize+0x704>
   222cc:	ebfffdfb 	bl	21ac0 <USBDeviceConfigurationError>
   222d0:	eafffe99 	b	21d3c <USBDeviceInitialize+0xc0>
   222d4:	e3a020f8 	mov	r2, #248	; 0xf8
   222d8:	e59f101c 	ldr	r1, [pc, #28]	; 222fc <USBDeviceInitialize+0x680>
   222dc:	e59f0054 	ldr	r0, [pc, #84]	; 22338 <USBDeviceInitialize+0x6bc>
   222e0:	ebffd54e 	bl	17820 <uspi_assertion_failed>
   222e4:	eaffff31 	b	21fb0 <USBDeviceInitialize+0x334>
   222e8:	e3a02f46 	mov	r2, #280	; 0x118
   222ec:	e59f1008 	ldr	r1, [pc, #8]	; 222fc <USBDeviceInitialize+0x680>
   222f0:	e59f008c 	ldr	r0, [pc, #140]	; 22384 <USBDeviceInitialize+0x708>
   222f4:	ebffd549 	bl	17820 <uspi_assertion_failed>
   222f8:	eaffff55 	b	22054 <USBDeviceInitialize+0x3d8>
   222fc:	00030e24 	.word	0x00030e24
   22300:	00030f5c 	.word	0x00030f5c
   22304:	00030fa0 	.word	0x00030fa0
   22308:	00030f78 	.word	0x00030f78
   2230c:	00030e60 	.word	0x00030e60
   22310:	000306f0 	.word	0x000306f0
   22314:	00030ea4 	.word	0x00030ea4
   22318:	00030e30 	.word	0x00030e30
   2231c:	0004234c 	.word	0x0004234c
   22320:	00031008 	.word	0x00031008
   22324:	00031050 	.word	0x00031050
   22328:	00030fbc 	.word	0x00030fbc
   2232c:	00030fdc 	.word	0x00030fdc
   22330:	00030ff0 	.word	0x00030ff0
   22334:	00031024 	.word	0x00031024
   22338:	00030eec 	.word	0x00030eec
   2233c:	00031074 	.word	0x00031074
   22340:	0000010b 	.word	0x0000010b
   22344:	00031098 	.word	0x00031098
   22348:	0000010d 	.word	0x0000010d
   2234c:	00030f08 	.word	0x00030f08
   22350:	000310c0 	.word	0x000310c0
   22354:	0002fd88 	.word	0x0002fd88
   22358:	0003114c 	.word	0x0003114c
   2235c:	00031138 	.word	0x00031138
   22360:	000310d0 	.word	0x000310d0
   22364:	00000131 	.word	0x00000131
   22368:	000310f0 	.word	0x000310f0
   2236c:	00031168 	.word	0x00031168
   22370:	00000133 	.word	0x00000133
   22374:	00031114 	.word	0x00031114
   22378:	000317e0 	.word	0x000317e0
   2237c:	00031188 	.word	0x00031188
   22380:	00030e1c 	.word	0x00030e1c
   22384:	000310b4 	.word	0x000310b4

00022388 <USBDeviceConfigure>:
   22388:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   2238c:	e2505000 	subs	r5, r0, #0
   22390:	0a00002a 	beq	22440 <USBDeviceConfigure+0xb8>
   22394:	e5953000 	ldr	r3, [r5]
   22398:	e3530000 	cmp	r3, #0
   2239c:	0a00002e 	beq	2245c <USBDeviceConfigure+0xd4>
   223a0:	e5953008 	ldr	r3, [r5, #8]
   223a4:	e3530000 	cmp	r3, #0
   223a8:	0a000032 	beq	22478 <USBDeviceConfigure+0xf0>
   223ac:	e5956018 	ldr	r6, [r5, #24]
   223b0:	e3560000 	cmp	r6, #0
   223b4:	0a00000e 	beq	223f4 <USBDeviceConfigure+0x6c>
   223b8:	e5d62005 	ldrb	r2, [r6, #5]
   223bc:	e5951008 	ldr	r1, [r5, #8]
   223c0:	e5950000 	ldr	r0, [r5]
   223c4:	ebfff202 	bl	1ebd4 <DWHCIDeviceSetConfiguration>
   223c8:	e2506000 	subs	r6, r0, #0
   223cc:	12854038 	addne	r4, r5, #56	; 0x38
   223d0:	13a06000 	movne	r6, #0
   223d4:	12855060 	addne	r5, r5, #96	; 0x60
   223d8:	1a00000f 	bne	2241c <USBDeviceConfigure+0x94>
   223dc:	e5953018 	ldr	r3, [r5, #24]
   223e0:	e1a00005 	mov	r0, r5
   223e4:	e5d33005 	ldrb	r3, [r3, #5]
   223e8:	e59f209c 	ldr	r2, [pc, #156]	; 2248c <USBDeviceConfigure+0x104>
   223ec:	e3a01001 	mov	r1, #1
   223f0:	ebfffde5 	bl	21b8c <USBDeviceLogWrite>
   223f4:	e1a00006 	mov	r0, r6
   223f8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   223fc:	e5940000 	ldr	r0, [r4]
   22400:	eb000860 	bl	24588 <_USBFunction>
   22404:	e5940000 	ldr	r0, [r4]
   22408:	ebffd4de 	bl	17788 <free>
   2240c:	e5847000 	str	r7, [r4]
   22410:	e2844004 	add	r4, r4, #4
   22414:	e1550004 	cmp	r5, r4
   22418:	0afffff5 	beq	223f4 <USBDeviceConfigure+0x6c>
   2241c:	e5940000 	ldr	r0, [r4]
   22420:	e3500000 	cmp	r0, #0
   22424:	0afffff9 	beq	22410 <USBDeviceConfigure+0x88>
   22428:	e5903000 	ldr	r3, [r0]
   2242c:	e12fff33 	blx	r3
   22430:	e2507000 	subs	r7, r0, #0
   22434:	13a06001 	movne	r6, #1
   22438:	1afffff4 	bne	22410 <USBDeviceConfigure+0x88>
   2243c:	eaffffee 	b	223fc <USBDeviceConfigure+0x74>
   22440:	e59f2048 	ldr	r2, [pc, #72]	; 22490 <USBDeviceConfigure+0x108>
   22444:	e59f1048 	ldr	r1, [pc, #72]	; 22494 <USBDeviceConfigure+0x10c>
   22448:	e59f0048 	ldr	r0, [pc, #72]	; 22498 <USBDeviceConfigure+0x110>
   2244c:	ebffd4f3 	bl	17820 <uspi_assertion_failed>
   22450:	e5953000 	ldr	r3, [r5]
   22454:	e3530000 	cmp	r3, #0
   22458:	1affffd0 	bne	223a0 <USBDeviceConfigure+0x18>
   2245c:	e59f2038 	ldr	r2, [pc, #56]	; 2249c <USBDeviceConfigure+0x114>
   22460:	e59f102c 	ldr	r1, [pc, #44]	; 22494 <USBDeviceConfigure+0x10c>
   22464:	e59f0034 	ldr	r0, [pc, #52]	; 224a0 <USBDeviceConfigure+0x118>
   22468:	ebffd4ec 	bl	17820 <uspi_assertion_failed>
   2246c:	e5953008 	ldr	r3, [r5, #8]
   22470:	e3530000 	cmp	r3, #0
   22474:	1affffcc 	bne	223ac <USBDeviceConfigure+0x24>
   22478:	e3a02f5e 	mov	r2, #376	; 0x178
   2247c:	e59f1010 	ldr	r1, [pc, #16]	; 22494 <USBDeviceConfigure+0x10c>
   22480:	e59f001c 	ldr	r0, [pc, #28]	; 224a4 <USBDeviceConfigure+0x11c>
   22484:	ebffd4e5 	bl	17820 <uspi_assertion_failed>
   22488:	eaffffc7 	b	223ac <USBDeviceConfigure+0x24>
   2248c:	000311ac 	.word	0x000311ac
   22490:	00000175 	.word	0x00000175
   22494:	00030e24 	.word	0x00030e24
   22498:	000306f0 	.word	0x000306f0
   2249c:	00000177 	.word	0x00000177
   224a0:	00030e30 	.word	0x00030e30
   224a4:	00030e60 	.word	0x00030e60

000224a8 <USBDeviceFactoryGetDevice>:
   224a8:	e92d4070 	push	{r4, r5, r6, lr}
   224ac:	e2506000 	subs	r6, r0, #0
   224b0:	e1a04001 	mov	r4, r1
   224b4:	0a00002e 	beq	22574 <USBDeviceFactoryGetDevice+0xcc>
   224b8:	e3540000 	cmp	r4, #0
   224bc:	0a000032 	beq	2258c <USBDeviceFactoryGetDevice+0xe4>
   224c0:	e59f12b4 	ldr	r1, [pc, #692]	; 2277c <USBDeviceFactoryGetDevice+0x2d4>
   224c4:	e1a00004 	mov	r0, r4
   224c8:	eb00118c 	bl	26b00 <StringCompare>
   224cc:	e3500000 	cmp	r0, #0
   224d0:	0a000004 	beq	224e8 <USBDeviceFactoryGetDevice+0x40>
   224d4:	e59f12a4 	ldr	r1, [pc, #676]	; 22780 <USBDeviceFactoryGetDevice+0x2d8>
   224d8:	e1a00004 	mov	r0, r4
   224dc:	eb001187 	bl	26b00 <StringCompare>
   224e0:	e3500000 	cmp	r0, #0
   224e4:	1a000015 	bne	22540 <USBDeviceFactoryGetDevice+0x98>
   224e8:	e3a00058 	mov	r0, #88	; 0x58
   224ec:	ebffd4a4 	bl	17784 <malloc>
   224f0:	e2505000 	subs	r5, r0, #0
   224f4:	0a000029 	beq	225a0 <USBDeviceFactoryGetDevice+0xf8>
   224f8:	e1a01006 	mov	r1, r6
   224fc:	e1a00005 	mov	r0, r5
   22500:	eb00034f 	bl	23244 <USBStandardHub>
   22504:	e3550000 	cmp	r5, #0
   22508:	0a000006 	beq	22528 <USBDeviceFactoryGetDevice+0x80>
   2250c:	e1a00004 	mov	r0, r4
   22510:	eb00111b 	bl	26984 <StringGet>
   22514:	e59f2268 	ldr	r2, [pc, #616]	; 22784 <USBDeviceFactoryGetDevice+0x2dc>
   22518:	e1a03000 	mov	r3, r0
   2251c:	e3a01003 	mov	r1, #3
   22520:	e59f0260 	ldr	r0, [pc, #608]	; 22788 <USBDeviceFactoryGetDevice+0x2e0>
   22524:	ebff9ca2 	bl	97b4 <LogWrite>
   22528:	e1a00004 	mov	r0, r4
   2252c:	eb001103 	bl	26940 <_String>
   22530:	e1a00004 	mov	r0, r4
   22534:	ebffd493 	bl	17788 <free>
   22538:	e1a00005 	mov	r0, r5
   2253c:	e8bd8070 	pop	{r4, r5, r6, pc}
   22540:	e59f1244 	ldr	r1, [pc, #580]	; 2278c <USBDeviceFactoryGetDevice+0x2e4>
   22544:	e1a00004 	mov	r0, r4
   22548:	eb00116c 	bl	26b00 <StringCompare>
   2254c:	e3500000 	cmp	r0, #0
   22550:	1a000017 	bne	225b4 <USBDeviceFactoryGetDevice+0x10c>
   22554:	e3a00028 	mov	r0, #40	; 0x28
   22558:	ebffd489 	bl	17784 <malloc>
   2255c:	e2505000 	subs	r5, r0, #0
   22560:	0a00003a 	beq	22650 <USBDeviceFactoryGetDevice+0x1a8>
   22564:	e1a01006 	mov	r1, r6
   22568:	e1a00005 	mov	r0, r5
   2256c:	eb00145b 	bl	276e0 <USBBulkOnlyMassStorageDevice>
   22570:	eaffffe3 	b	22504 <USBDeviceFactoryGetDevice+0x5c>
   22574:	e3a02024 	mov	r2, #36	; 0x24
   22578:	e59f1210 	ldr	r1, [pc, #528]	; 22790 <USBDeviceFactoryGetDevice+0x2e8>
   2257c:	e59f0210 	ldr	r0, [pc, #528]	; 22794 <USBDeviceFactoryGetDevice+0x2ec>
   22580:	ebffd4a6 	bl	17820 <uspi_assertion_failed>
   22584:	e3540000 	cmp	r4, #0
   22588:	1affffcc 	bne	224c0 <USBDeviceFactoryGetDevice+0x18>
   2258c:	e3a02025 	mov	r2, #37	; 0x25
   22590:	e59f11f8 	ldr	r1, [pc, #504]	; 22790 <USBDeviceFactoryGetDevice+0x2e8>
   22594:	e59f01fc 	ldr	r0, [pc, #508]	; 22798 <USBDeviceFactoryGetDevice+0x2f0>
   22598:	ebffd4a0 	bl	17820 <uspi_assertion_failed>
   2259c:	eaffffc7 	b	224c0 <USBDeviceFactoryGetDevice+0x18>
   225a0:	e3a0202d 	mov	r2, #45	; 0x2d
   225a4:	e59f11e4 	ldr	r1, [pc, #484]	; 22790 <USBDeviceFactoryGetDevice+0x2e8>
   225a8:	e59f01ec 	ldr	r0, [pc, #492]	; 2279c <USBDeviceFactoryGetDevice+0x2f4>
   225ac:	ebffd49b 	bl	17820 <uspi_assertion_failed>
   225b0:	eaffffd0 	b	224f8 <USBDeviceFactoryGetDevice+0x50>
   225b4:	e59f11e4 	ldr	r1, [pc, #484]	; 227a0 <USBDeviceFactoryGetDevice+0x2f8>
   225b8:	e1a00004 	mov	r0, r4
   225bc:	eb00114f 	bl	26b00 <StringCompare>
   225c0:	e3500000 	cmp	r0, #0
   225c4:	0a00000c 	beq	225fc <USBDeviceFactoryGetDevice+0x154>
   225c8:	e59f11d4 	ldr	r1, [pc, #468]	; 227a4 <USBDeviceFactoryGetDevice+0x2fc>
   225cc:	e1a00004 	mov	r0, r4
   225d0:	eb00114a 	bl	26b00 <StringCompare>
   225d4:	e3500000 	cmp	r0, #0
   225d8:	1a00000f 	bne	2261c <USBDeviceFactoryGetDevice+0x174>
   225dc:	e3a00048 	mov	r0, #72	; 0x48
   225e0:	ebffd467 	bl	17784 <malloc>
   225e4:	e2505000 	subs	r5, r0, #0
   225e8:	0a00003c 	beq	226e0 <USBDeviceFactoryGetDevice+0x238>
   225ec:	e1a01006 	mov	r1, r6
   225f0:	e1a00005 	mov	r0, r5
   225f4:	eb001d01 	bl	29a00 <USBMouseDevice>
   225f8:	eaffffc1 	b	22504 <USBDeviceFactoryGetDevice+0x5c>
   225fc:	e59f01a4 	ldr	r0, [pc, #420]	; 227a8 <USBDeviceFactoryGetDevice+0x300>
   22600:	ebffd45f 	bl	17784 <malloc>
   22604:	e2505000 	subs	r5, r0, #0
   22608:	0a000022 	beq	22698 <USBDeviceFactoryGetDevice+0x1f0>
   2260c:	e1a01006 	mov	r1, r6
   22610:	e1a00005 	mov	r0, r5
   22614:	eb0019c4 	bl	28d2c <USBKeyboardDevice>
   22618:	eaffffb9 	b	22504 <USBDeviceFactoryGetDevice+0x5c>
   2261c:	e59f1188 	ldr	r1, [pc, #392]	; 227ac <USBDeviceFactoryGetDevice+0x304>
   22620:	e1a00004 	mov	r0, r4
   22624:	eb001135 	bl	26b00 <StringCompare>
   22628:	e3500000 	cmp	r0, #0
   2262c:	1a00000c 	bne	22664 <USBDeviceFactoryGetDevice+0x1bc>
   22630:	e3a00028 	mov	r0, #40	; 0x28
   22634:	ebffd452 	bl	17784 <malloc>
   22638:	e2505000 	subs	r5, r0, #0
   2263c:	0a00003a 	beq	2272c <USBDeviceFactoryGetDevice+0x284>
   22640:	e1a01006 	mov	r1, r6
   22644:	e1a00005 	mov	r0, r5
   22648:	eb000981 	bl	24c54 <SMSC951xDevice>
   2264c:	eaffffac 	b	22504 <USBDeviceFactoryGetDevice+0x5c>
   22650:	e3a02034 	mov	r2, #52	; 0x34
   22654:	e59f1134 	ldr	r1, [pc, #308]	; 22790 <USBDeviceFactoryGetDevice+0x2e8>
   22658:	e59f013c 	ldr	r0, [pc, #316]	; 2279c <USBDeviceFactoryGetDevice+0x2f4>
   2265c:	ebffd46f 	bl	17820 <uspi_assertion_failed>
   22660:	eaffffbf 	b	22564 <USBDeviceFactoryGetDevice+0xbc>
   22664:	e59f1144 	ldr	r1, [pc, #324]	; 227b0 <USBDeviceFactoryGetDevice+0x308>
   22668:	e1a00004 	mov	r0, r4
   2266c:	eb001123 	bl	26b00 <StringCompare>
   22670:	e3500000 	cmp	r0, #0
   22674:	1a00000c 	bne	226ac <USBDeviceFactoryGetDevice+0x204>
   22678:	e3a00028 	mov	r0, #40	; 0x28
   2267c:	ebffd440 	bl	17784 <malloc>
   22680:	e2505000 	subs	r5, r0, #0
   22684:	0a00002d 	beq	22740 <USBDeviceFactoryGetDevice+0x298>
   22688:	e1a01006 	mov	r1, r6
   2268c:	e1a00005 	mov	r0, r5
   22690:	eb000cba 	bl	25980 <LAN7800Device>
   22694:	eaffff9a 	b	22504 <USBDeviceFactoryGetDevice+0x5c>
   22698:	e3a0203b 	mov	r2, #59	; 0x3b
   2269c:	e59f10ec 	ldr	r1, [pc, #236]	; 22790 <USBDeviceFactoryGetDevice+0x2e8>
   226a0:	e59f00f4 	ldr	r0, [pc, #244]	; 2279c <USBDeviceFactoryGetDevice+0x2f4>
   226a4:	ebffd45d 	bl	17820 <uspi_assertion_failed>
   226a8:	eaffffd7 	b	2260c <USBDeviceFactoryGetDevice+0x164>
   226ac:	e59f1100 	ldr	r1, [pc, #256]	; 227b4 <USBDeviceFactoryGetDevice+0x30c>
   226b0:	e1a00004 	mov	r0, r4
   226b4:	eb001111 	bl	26b00 <StringCompare>
   226b8:	e3500000 	cmp	r0, #0
   226bc:	1a00000c 	bne	226f4 <USBDeviceFactoryGetDevice+0x24c>
   226c0:	e3a000c4 	mov	r0, #196	; 0xc4
   226c4:	ebffd42e 	bl	17784 <malloc>
   226c8:	e2505000 	subs	r5, r0, #0
   226cc:	0a000020 	beq	22754 <USBDeviceFactoryGetDevice+0x2ac>
   226d0:	e1a01006 	mov	r1, r6
   226d4:	e1a00005 	mov	r0, r5
   226d8:	eb002066 	bl	2a878 <USBGamePadDevice>
   226dc:	eaffff88 	b	22504 <USBDeviceFactoryGetDevice+0x5c>
   226e0:	e3a02042 	mov	r2, #66	; 0x42
   226e4:	e59f10a4 	ldr	r1, [pc, #164]	; 22790 <USBDeviceFactoryGetDevice+0x2e8>
   226e8:	e59f00ac 	ldr	r0, [pc, #172]	; 2279c <USBDeviceFactoryGetDevice+0x2f4>
   226ec:	ebffd44b 	bl	17820 <uspi_assertion_failed>
   226f0:	eaffffbd 	b	225ec <USBDeviceFactoryGetDevice+0x144>
   226f4:	e59f10bc 	ldr	r1, [pc, #188]	; 227b8 <USBDeviceFactoryGetDevice+0x310>
   226f8:	e1a00004 	mov	r0, r4
   226fc:	eb0010ff 	bl	26b00 <StringCompare>
   22700:	e3500000 	cmp	r0, #0
   22704:	13a05000 	movne	r5, #0
   22708:	1affff86 	bne	22528 <USBDeviceFactoryGetDevice+0x80>
   2270c:	e3a00044 	mov	r0, #68	; 0x44
   22710:	ebffd41b 	bl	17784 <malloc>
   22714:	e2505000 	subs	r5, r0, #0
   22718:	0a000012 	beq	22768 <USBDeviceFactoryGetDevice+0x2c0>
   2271c:	e1a01006 	mov	r1, r6
   22720:	e1a00005 	mov	r0, r5
   22724:	eb0023ff 	bl	2b728 <USBMIDIDevice>
   22728:	eaffff75 	b	22504 <USBDeviceFactoryGetDevice+0x5c>
   2272c:	e3a02049 	mov	r2, #73	; 0x49
   22730:	e59f1058 	ldr	r1, [pc, #88]	; 22790 <USBDeviceFactoryGetDevice+0x2e8>
   22734:	e59f0060 	ldr	r0, [pc, #96]	; 2279c <USBDeviceFactoryGetDevice+0x2f4>
   22738:	ebffd438 	bl	17820 <uspi_assertion_failed>
   2273c:	eaffffbf 	b	22640 <USBDeviceFactoryGetDevice+0x198>
   22740:	e3a02050 	mov	r2, #80	; 0x50
   22744:	e59f1044 	ldr	r1, [pc, #68]	; 22790 <USBDeviceFactoryGetDevice+0x2e8>
   22748:	e59f004c 	ldr	r0, [pc, #76]	; 2279c <USBDeviceFactoryGetDevice+0x2f4>
   2274c:	ebffd433 	bl	17820 <uspi_assertion_failed>
   22750:	eaffffcc 	b	22688 <USBDeviceFactoryGetDevice+0x1e0>
   22754:	e3a02057 	mov	r2, #87	; 0x57
   22758:	e59f1030 	ldr	r1, [pc, #48]	; 22790 <USBDeviceFactoryGetDevice+0x2e8>
   2275c:	e59f0038 	ldr	r0, [pc, #56]	; 2279c <USBDeviceFactoryGetDevice+0x2f4>
   22760:	ebffd42e 	bl	17820 <uspi_assertion_failed>
   22764:	eaffffd9 	b	226d0 <USBDeviceFactoryGetDevice+0x228>
   22768:	e3a0205e 	mov	r2, #94	; 0x5e
   2276c:	e59f101c 	ldr	r1, [pc, #28]	; 22790 <USBDeviceFactoryGetDevice+0x2e8>
   22770:	e59f0024 	ldr	r0, [pc, #36]	; 2279c <USBDeviceFactoryGetDevice+0x2f4>
   22774:	ebffd429 	bl	17820 <uspi_assertion_failed>
   22778:	eaffffe7 	b	2271c <USBDeviceFactoryGetDevice+0x274>
   2277c:	000311f0 	.word	0x000311f0
   22780:	000311fc 	.word	0x000311fc
   22784:	0003126c 	.word	0x0003126c
   22788:	00031288 	.word	0x00031288
   2278c:	00031218 	.word	0x00031218
   22790:	000311cc 	.word	0x000311cc
   22794:	000311e0 	.word	0x000311e0
   22798:	000317e0 	.word	0x000317e0
   2279c:	00031208 	.word	0x00031208
   227a0:	00031224 	.word	0x00031224
   227a4:	00031230 	.word	0x00031230
   227a8:	00000464 	.word	0x00000464
   227ac:	0003123c 	.word	0x0003123c
   227b0:	00031248 	.word	0x00031248
   227b4:	00031254 	.word	0x00031254
   227b8:	00031260 	.word	0x00031260

000227bc <USBEndpoint>:
   227bc:	e92d4070 	push	{r4, r5, r6, lr}
   227c0:	e2504000 	subs	r4, r0, #0
   227c4:	e1a05001 	mov	r5, r1
   227c8:	0a000010 	beq	22810 <USBEndpoint+0x54>
   227cc:	e3a03000 	mov	r3, #0
   227d0:	e3a01008 	mov	r1, #8
   227d4:	e3a02001 	mov	r2, #1
   227d8:	e1550003 	cmp	r5, r3
   227dc:	e5845000 	str	r5, [r4]
   227e0:	e5c43004 	strb	r3, [r4, #4]
   227e4:	e5c43005 	strb	r3, [r4, #5]
   227e8:	e5843008 	str	r3, [r4, #8]
   227ec:	e5c43014 	strb	r3, [r4, #20]
   227f0:	e584100c 	str	r1, [r4, #12]
   227f4:	e5842010 	str	r2, [r4, #16]
   227f8:	18bd8070 	popne	{r4, r5, r6, pc}
   227fc:	e3a02022 	mov	r2, #34	; 0x22
   22800:	e8bd4070 	pop	{r4, r5, r6, lr}
   22804:	e59f1018 	ldr	r1, [pc, #24]	; 22824 <USBEndpoint+0x68>
   22808:	e59f0018 	ldr	r0, [pc, #24]	; 22828 <USBEndpoint+0x6c>
   2280c:	eaffd403 	b	17820 <uspi_assertion_failed>
   22810:	e3a02019 	mov	r2, #25
   22814:	e59f1008 	ldr	r1, [pc, #8]	; 22824 <USBEndpoint+0x68>
   22818:	e59f000c 	ldr	r0, [pc, #12]	; 2282c <USBEndpoint+0x70>
   2281c:	ebffd3ff 	bl	17820 <uspi_assertion_failed>
   22820:	eaffffe9 	b	227cc <USBEndpoint+0x10>
   22824:	00031290 	.word	0x00031290
   22828:	00030d90 	.word	0x00030d90
   2282c:	000306f0 	.word	0x000306f0

00022830 <USBEndpoint2>:
   22830:	e92d4070 	push	{r4, r5, r6, lr}
   22834:	e2505000 	subs	r5, r0, #0
   22838:	e1a06001 	mov	r6, r1
   2283c:	e1a04002 	mov	r4, r2
   22840:	0a00004b 	beq	22974 <USBEndpoint2+0x144>
   22844:	e3a03001 	mov	r3, #1
   22848:	e3560000 	cmp	r6, #0
   2284c:	e5856000 	str	r6, [r5]
   22850:	e5853010 	str	r3, [r5, #16]
   22854:	0a00004b 	beq	22988 <USBEndpoint2+0x158>
   22858:	e3540000 	cmp	r4, #0
   2285c:	0a00004f 	beq	229a0 <USBEndpoint2+0x170>
   22860:	e5d43000 	ldrb	r3, [r4]
   22864:	e2433007 	sub	r3, r3, #7
   22868:	e31300fd 	tst	r3, #253	; 0xfd
   2286c:	1a000034 	bne	22944 <USBEndpoint2+0x114>
   22870:	e5d43001 	ldrb	r3, [r4, #1]
   22874:	e3530005 	cmp	r3, #5
   22878:	0a000003 	beq	2288c <USBEndpoint2+0x5c>
   2287c:	e3a0202f 	mov	r2, #47	; 0x2f
   22880:	e59f115c 	ldr	r1, [pc, #348]	; 229e4 <USBEndpoint2+0x1b4>
   22884:	e59f015c 	ldr	r0, [pc, #348]	; 229e8 <USBEndpoint2+0x1b8>
   22888:	ebffd3e4 	bl	17820 <uspi_assertion_failed>
   2288c:	e5d43003 	ldrb	r3, [r4, #3]
   22890:	e2033003 	and	r3, r3, #3
   22894:	e3530002 	cmp	r3, #2
   22898:	0a00001c 	beq	22910 <USBEndpoint2+0xe0>
   2289c:	e3530003 	cmp	r3, #3
   228a0:	1a000015 	bne	228fc <USBEndpoint2+0xcc>
   228a4:	e3a03002 	mov	r3, #2
   228a8:	e3a06001 	mov	r6, #1
   228ac:	e5c53005 	strb	r3, [r5, #5]
   228b0:	e5c56014 	strb	r6, [r5, #20]
   228b4:	e5d43002 	ldrb	r3, [r4, #2]
   228b8:	e5950000 	ldr	r0, [r5]
   228bc:	e203200f 	and	r2, r3, #15
   228c0:	e1a033a3 	lsr	r3, r3, #7
   228c4:	e5c52004 	strb	r2, [r5, #4]
   228c8:	e5853008 	str	r3, [r5, #8]
   228cc:	e5d43004 	ldrb	r3, [r4, #4]
   228d0:	e5d42005 	ldrb	r2, [r4, #5]
   228d4:	e1833402 	orr	r3, r3, r2, lsl #8
   228d8:	e585300c 	str	r3, [r5, #12]
   228dc:	e5d44006 	ldrb	r4, [r4, #6]
   228e0:	e3540000 	cmp	r4, #0
   228e4:	0a00001b 	beq	22958 <USBEndpoint2+0x128>
   228e8:	ebfffbcc 	bl	21820 <USBDeviceGetSpeed>
   228ec:	e3500002 	cmp	r0, #2
   228f0:	0a00002f 	beq	229b4 <USBEndpoint2+0x184>
   228f4:	e5854010 	str	r4, [r5, #16]
   228f8:	e8bd8070 	pop	{r4, r5, r6, pc}
   228fc:	e3a0203e 	mov	r2, #62	; 0x3e
   22900:	e8bd4070 	pop	{r4, r5, r6, lr}
   22904:	e59f10d8 	ldr	r1, [pc, #216]	; 229e4 <USBEndpoint2+0x1b4>
   22908:	e59f00dc 	ldr	r0, [pc, #220]	; 229ec <USBEndpoint2+0x1bc>
   2290c:	eaffd3c3 	b	17820 <uspi_assertion_failed>
   22910:	e3a03001 	mov	r3, #1
   22914:	e5c53005 	strb	r3, [r5, #5]
   22918:	e5c53014 	strb	r3, [r5, #20]
   2291c:	e5d43002 	ldrb	r3, [r4, #2]
   22920:	e203200f 	and	r2, r3, #15
   22924:	e1a033a3 	lsr	r3, r3, #7
   22928:	e5c52004 	strb	r2, [r5, #4]
   2292c:	e5853008 	str	r3, [r5, #8]
   22930:	e5d43004 	ldrb	r3, [r4, #4]
   22934:	e5d42005 	ldrb	r2, [r4, #5]
   22938:	e1833402 	orr	r3, r3, r2, lsl #8
   2293c:	e585300c 	str	r3, [r5, #12]
   22940:	e8bd8070 	pop	{r4, r5, r6, pc}
   22944:	e3a0202e 	mov	r2, #46	; 0x2e
   22948:	e59f1094 	ldr	r1, [pc, #148]	; 229e4 <USBEndpoint2+0x1b4>
   2294c:	e59f009c 	ldr	r0, [pc, #156]	; 229f0 <USBEndpoint2+0x1c0>
   22950:	ebffd3b2 	bl	17820 <uspi_assertion_failed>
   22954:	eaffffc5 	b	22870 <USBEndpoint2+0x40>
   22958:	ebfffbb0 	bl	21820 <USBDeviceGetSpeed>
   2295c:	e3500002 	cmp	r0, #2
   22960:	11a04006 	movne	r4, r6
   22964:	1affffe2 	bne	228f4 <USBEndpoint2+0xc4>
   22968:	e3a03001 	mov	r3, #1
   2296c:	e5853010 	str	r3, [r5, #16]
   22970:	e8bd8070 	pop	{r4, r5, r6, pc}
   22974:	e3a02027 	mov	r2, #39	; 0x27
   22978:	e59f1064 	ldr	r1, [pc, #100]	; 229e4 <USBEndpoint2+0x1b4>
   2297c:	e59f0070 	ldr	r0, [pc, #112]	; 229f4 <USBEndpoint2+0x1c4>
   22980:	ebffd3a6 	bl	17820 <uspi_assertion_failed>
   22984:	eaffffae 	b	22844 <USBEndpoint2+0x14>
   22988:	e3a0202b 	mov	r2, #43	; 0x2b
   2298c:	e59f1050 	ldr	r1, [pc, #80]	; 229e4 <USBEndpoint2+0x1b4>
   22990:	e59f0060 	ldr	r0, [pc, #96]	; 229f8 <USBEndpoint2+0x1c8>
   22994:	ebffd3a1 	bl	17820 <uspi_assertion_failed>
   22998:	e3540000 	cmp	r4, #0
   2299c:	1affffaf 	bne	22860 <USBEndpoint2+0x30>
   229a0:	e3a0202d 	mov	r2, #45	; 0x2d
   229a4:	e59f1038 	ldr	r1, [pc, #56]	; 229e4 <USBEndpoint2+0x1b4>
   229a8:	e59f004c 	ldr	r0, [pc, #76]	; 229fc <USBEndpoint2+0x1cc>
   229ac:	ebffd39b 	bl	17820 <uspi_assertion_failed>
   229b0:	eaffffaa 	b	22860 <USBEndpoint2+0x30>
   229b4:	e3540010 	cmp	r4, #16
   229b8:	9a000002 	bls	229c8 <USBEndpoint2+0x198>
   229bc:	e3a03a01 	mov	r3, #4096	; 0x1000
   229c0:	e5853010 	str	r3, [r5, #16]
   229c4:	e8bd8070 	pop	{r4, r5, r6, pc}
   229c8:	e2443001 	sub	r3, r4, #1
   229cc:	e1a03316 	lsl	r3, r6, r3
   229d0:	e1a031a3 	lsr	r3, r3, #3
   229d4:	e3530000 	cmp	r3, #0
   229d8:	e5853010 	str	r3, [r5, #16]
   229dc:	0affffe1 	beq	22968 <USBEndpoint2+0x138>
   229e0:	e8bd8070 	pop	{r4, r5, r6, pc}
   229e4:	00031290 	.word	0x00031290
   229e8:	000312fc 	.word	0x000312fc
   229ec:	00030678 	.word	0x00030678
   229f0:	000312a0 	.word	0x000312a0
   229f4:	000306f0 	.word	0x000306f0
   229f8:	00030d90 	.word	0x00030d90
   229fc:	000306bc 	.word	0x000306bc

00022a00 <USBEndpointCopy>:
   22a00:	e92d4070 	push	{r4, r5, r6, lr}
   22a04:	e2504000 	subs	r4, r0, #0
   22a08:	e1a05001 	mov	r5, r1
   22a0c:	e1a06002 	mov	r6, r2
   22a10:	0a000014 	beq	22a68 <USBEndpointCopy+0x68>
   22a14:	e3550000 	cmp	r5, #0
   22a18:	0a000018 	beq	22a80 <USBEndpointCopy+0x80>
   22a1c:	e3560000 	cmp	r6, #0
   22a20:	e5846000 	str	r6, [r4]
   22a24:	0a00000a 	beq	22a54 <USBEndpointCopy+0x54>
   22a28:	e5d53004 	ldrb	r3, [r5, #4]
   22a2c:	e5c43004 	strb	r3, [r4, #4]
   22a30:	e5d5c005 	ldrb	ip, [r5, #5]
   22a34:	e5952010 	ldr	r2, [r5, #16]
   22a38:	e5d53014 	ldrb	r3, [r5, #20]
   22a3c:	e1c500d8 	ldrd	r0, [r5, #8]
   22a40:	e5c4c005 	strb	ip, [r4, #5]
   22a44:	e1c400f8 	strd	r0, [r4, #8]
   22a48:	e5842010 	str	r2, [r4, #16]
   22a4c:	e5c43014 	strb	r3, [r4, #20]
   22a50:	e8bd8070 	pop	{r4, r5, r6, pc}
   22a54:	e3a0206d 	mov	r2, #109	; 0x6d
   22a58:	e59f1034 	ldr	r1, [pc, #52]	; 22a94 <USBEndpointCopy+0x94>
   22a5c:	e59f0034 	ldr	r0, [pc, #52]	; 22a98 <USBEndpointCopy+0x98>
   22a60:	ebffd36e 	bl	17820 <uspi_assertion_failed>
   22a64:	eaffffef 	b	22a28 <USBEndpointCopy+0x28>
   22a68:	e3a02068 	mov	r2, #104	; 0x68
   22a6c:	e59f1020 	ldr	r1, [pc, #32]	; 22a94 <USBEndpointCopy+0x94>
   22a70:	e59f0024 	ldr	r0, [pc, #36]	; 22a9c <USBEndpointCopy+0x9c>
   22a74:	ebffd369 	bl	17820 <uspi_assertion_failed>
   22a78:	e3550000 	cmp	r5, #0
   22a7c:	1affffe6 	bne	22a1c <USBEndpointCopy+0x1c>
   22a80:	e3a0206a 	mov	r2, #106	; 0x6a
   22a84:	e59f1008 	ldr	r1, [pc, #8]	; 22a94 <USBEndpointCopy+0x94>
   22a88:	e59f0010 	ldr	r0, [pc, #16]	; 22aa0 <USBEndpointCopy+0xa0>
   22a8c:	ebffd363 	bl	17820 <uspi_assertion_failed>
   22a90:	eaffffe1 	b	22a1c <USBEndpointCopy+0x1c>
   22a94:	00031290 	.word	0x00031290
   22a98:	00030d90 	.word	0x00030d90
   22a9c:	000306f0 	.word	0x000306f0
   22aa0:	0003132c 	.word	0x0003132c

00022aa4 <_USBEndpoint>:
   22aa4:	e92d4010 	push	{r4, lr}
   22aa8:	e2504000 	subs	r4, r0, #0
   22aac:	0a000002 	beq	22abc <_USBEndpoint+0x18>
   22ab0:	e3a03000 	mov	r3, #0
   22ab4:	e5843000 	str	r3, [r4]
   22ab8:	e8bd8010 	pop	{r4, pc}
   22abc:	e3a02079 	mov	r2, #121	; 0x79
   22ac0:	e59f1008 	ldr	r1, [pc, #8]	; 22ad0 <_USBEndpoint+0x2c>
   22ac4:	e59f0008 	ldr	r0, [pc, #8]	; 22ad4 <_USBEndpoint+0x30>
   22ac8:	ebffd354 	bl	17820 <uspi_assertion_failed>
   22acc:	eafffff7 	b	22ab0 <_USBEndpoint+0xc>
   22ad0:	00031290 	.word	0x00031290
   22ad4:	000306f0 	.word	0x000306f0

00022ad8 <USBEndpointGetDevice>:
   22ad8:	e92d4010 	push	{r4, lr}
   22adc:	e2504000 	subs	r4, r0, #0
   22ae0:	0a000008 	beq	22b08 <USBEndpointGetDevice+0x30>
   22ae4:	e5940000 	ldr	r0, [r4]
   22ae8:	e3500000 	cmp	r0, #0
   22aec:	18bd8010 	popne	{r4, pc}
   22af0:	e3a02080 	mov	r2, #128	; 0x80
   22af4:	e59f1020 	ldr	r1, [pc, #32]	; 22b1c <USBEndpointGetDevice+0x44>
   22af8:	e59f0020 	ldr	r0, [pc, #32]	; 22b20 <USBEndpointGetDevice+0x48>
   22afc:	ebffd347 	bl	17820 <uspi_assertion_failed>
   22b00:	e5940000 	ldr	r0, [r4]
   22b04:	e8bd8010 	pop	{r4, pc}
   22b08:	e3a0207f 	mov	r2, #127	; 0x7f
   22b0c:	e59f1008 	ldr	r1, [pc, #8]	; 22b1c <USBEndpointGetDevice+0x44>
   22b10:	e59f000c 	ldr	r0, [pc, #12]	; 22b24 <USBEndpointGetDevice+0x4c>
   22b14:	ebffd341 	bl	17820 <uspi_assertion_failed>
   22b18:	eafffff1 	b	22ae4 <USBEndpointGetDevice+0xc>
   22b1c:	00031290 	.word	0x00031290
   22b20:	00030d90 	.word	0x00030d90
   22b24:	000306f0 	.word	0x000306f0

00022b28 <USBEndpointGetNumber>:
   22b28:	e92d4010 	push	{r4, lr}
   22b2c:	e2504000 	subs	r4, r0, #0
   22b30:	0a000001 	beq	22b3c <USBEndpointGetNumber+0x14>
   22b34:	e5d40004 	ldrb	r0, [r4, #4]
   22b38:	e8bd8010 	pop	{r4, pc}
   22b3c:	e3a02086 	mov	r2, #134	; 0x86
   22b40:	e59f100c 	ldr	r1, [pc, #12]	; 22b54 <USBEndpointGetNumber+0x2c>
   22b44:	e59f000c 	ldr	r0, [pc, #12]	; 22b58 <USBEndpointGetNumber+0x30>
   22b48:	ebffd334 	bl	17820 <uspi_assertion_failed>
   22b4c:	e5d40004 	ldrb	r0, [r4, #4]
   22b50:	e8bd8010 	pop	{r4, pc}
   22b54:	00031290 	.word	0x00031290
   22b58:	000306f0 	.word	0x000306f0

00022b5c <USBEndpointGetType>:
   22b5c:	e92d4010 	push	{r4, lr}
   22b60:	e2504000 	subs	r4, r0, #0
   22b64:	0a000001 	beq	22b70 <USBEndpointGetType+0x14>
   22b68:	e5d40005 	ldrb	r0, [r4, #5]
   22b6c:	e8bd8010 	pop	{r4, pc}
   22b70:	e3a0208c 	mov	r2, #140	; 0x8c
   22b74:	e59f100c 	ldr	r1, [pc, #12]	; 22b88 <USBEndpointGetType+0x2c>
   22b78:	e59f000c 	ldr	r0, [pc, #12]	; 22b8c <USBEndpointGetType+0x30>
   22b7c:	ebffd327 	bl	17820 <uspi_assertion_failed>
   22b80:	e5d40005 	ldrb	r0, [r4, #5]
   22b84:	e8bd8010 	pop	{r4, pc}
   22b88:	00031290 	.word	0x00031290
   22b8c:	000306f0 	.word	0x000306f0

00022b90 <USBEndpointIsDirectionIn>:
   22b90:	e92d4010 	push	{r4, lr}
   22b94:	e2504000 	subs	r4, r0, #0
   22b98:	0a000001 	beq	22ba4 <USBEndpointIsDirectionIn+0x14>
   22b9c:	e5940008 	ldr	r0, [r4, #8]
   22ba0:	e8bd8010 	pop	{r4, pc}
   22ba4:	e3a02092 	mov	r2, #146	; 0x92
   22ba8:	e59f100c 	ldr	r1, [pc, #12]	; 22bbc <USBEndpointIsDirectionIn+0x2c>
   22bac:	e59f000c 	ldr	r0, [pc, #12]	; 22bc0 <USBEndpointIsDirectionIn+0x30>
   22bb0:	ebffd31a 	bl	17820 <uspi_assertion_failed>
   22bb4:	e5940008 	ldr	r0, [r4, #8]
   22bb8:	e8bd8010 	pop	{r4, pc}
   22bbc:	00031290 	.word	0x00031290
   22bc0:	000306f0 	.word	0x000306f0

00022bc4 <USBEndpointSetMaxPacketSize>:
   22bc4:	e92d4070 	push	{r4, r5, r6, lr}
   22bc8:	e2504000 	subs	r4, r0, #0
   22bcc:	e1a05001 	mov	r5, r1
   22bd0:	0a000001 	beq	22bdc <USBEndpointSetMaxPacketSize+0x18>
   22bd4:	e584500c 	str	r5, [r4, #12]
   22bd8:	e8bd8070 	pop	{r4, r5, r6, pc}
   22bdc:	e3a02098 	mov	r2, #152	; 0x98
   22be0:	e59f100c 	ldr	r1, [pc, #12]	; 22bf4 <USBEndpointSetMaxPacketSize+0x30>
   22be4:	e59f000c 	ldr	r0, [pc, #12]	; 22bf8 <USBEndpointSetMaxPacketSize+0x34>
   22be8:	ebffd30c 	bl	17820 <uspi_assertion_failed>
   22bec:	e584500c 	str	r5, [r4, #12]
   22bf0:	e8bd8070 	pop	{r4, r5, r6, pc}
   22bf4:	00031290 	.word	0x00031290
   22bf8:	000306f0 	.word	0x000306f0

00022bfc <USBEndpointGetMaxPacketSize>:
   22bfc:	e92d4010 	push	{r4, lr}
   22c00:	e2504000 	subs	r4, r0, #0
   22c04:	0a000001 	beq	22c10 <USBEndpointGetMaxPacketSize+0x14>
   22c08:	e594000c 	ldr	r0, [r4, #12]
   22c0c:	e8bd8010 	pop	{r4, pc}
   22c10:	e3a0209e 	mov	r2, #158	; 0x9e
   22c14:	e59f100c 	ldr	r1, [pc, #12]	; 22c28 <USBEndpointGetMaxPacketSize+0x2c>
   22c18:	e59f000c 	ldr	r0, [pc, #12]	; 22c2c <USBEndpointGetMaxPacketSize+0x30>
   22c1c:	ebffd2ff 	bl	17820 <uspi_assertion_failed>
   22c20:	e594000c 	ldr	r0, [r4, #12]
   22c24:	e8bd8010 	pop	{r4, pc}
   22c28:	00031290 	.word	0x00031290
   22c2c:	000306f0 	.word	0x000306f0

00022c30 <USBEndpointGetInterval>:
   22c30:	e92d4010 	push	{r4, lr}
   22c34:	e2504000 	subs	r4, r0, #0
   22c38:	0a000008 	beq	22c60 <USBEndpointGetInterval+0x30>
   22c3c:	e5d43005 	ldrb	r3, [r4, #5]
   22c40:	e3530002 	cmp	r3, #2
   22c44:	0a000003 	beq	22c58 <USBEndpointGetInterval+0x28>
   22c48:	e3a020a5 	mov	r2, #165	; 0xa5
   22c4c:	e59f1020 	ldr	r1, [pc, #32]	; 22c74 <USBEndpointGetInterval+0x44>
   22c50:	e59f0020 	ldr	r0, [pc, #32]	; 22c78 <USBEndpointGetInterval+0x48>
   22c54:	ebffd2f1 	bl	17820 <uspi_assertion_failed>
   22c58:	e5940010 	ldr	r0, [r4, #16]
   22c5c:	e8bd8010 	pop	{r4, pc}
   22c60:	e3a020a4 	mov	r2, #164	; 0xa4
   22c64:	e59f1008 	ldr	r1, [pc, #8]	; 22c74 <USBEndpointGetInterval+0x44>
   22c68:	e59f000c 	ldr	r0, [pc, #12]	; 22c7c <USBEndpointGetInterval+0x4c>
   22c6c:	ebffd2eb 	bl	17820 <uspi_assertion_failed>
   22c70:	eafffff1 	b	22c3c <USBEndpointGetInterval+0xc>
   22c74:	00031290 	.word	0x00031290
   22c78:	0003133c 	.word	0x0003133c
   22c7c:	000306f0 	.word	0x000306f0

00022c80 <USBEndpointGetNextPID>:
   22c80:	e92d4070 	push	{r4, r5, r6, lr}
   22c84:	e2504000 	subs	r4, r0, #0
   22c88:	e1a05001 	mov	r5, r1
   22c8c:	0a00000e 	beq	22ccc <USBEndpointGetNextPID+0x4c>
   22c90:	e3550000 	cmp	r5, #0
   22c94:	0a000004 	beq	22cac <USBEndpointGetNextPID+0x2c>
   22c98:	e5d43005 	ldrb	r3, [r4, #5]
   22c9c:	e3530000 	cmp	r3, #0
   22ca0:	1a000003 	bne	22cb4 <USBEndpointGetNextPID+0x34>
   22ca4:	e3a00002 	mov	r0, #2
   22ca8:	e8bd8070 	pop	{r4, r5, r6, pc}
   22cac:	e5d40014 	ldrb	r0, [r4, #20]
   22cb0:	e8bd8070 	pop	{r4, r5, r6, pc}
   22cb4:	e3a020af 	mov	r2, #175	; 0xaf
   22cb8:	e59f1020 	ldr	r1, [pc, #32]	; 22ce0 <USBEndpointGetNextPID+0x60>
   22cbc:	e59f0020 	ldr	r0, [pc, #32]	; 22ce4 <USBEndpointGetNextPID+0x64>
   22cc0:	ebffd2d6 	bl	17820 <uspi_assertion_failed>
   22cc4:	e3a00002 	mov	r0, #2
   22cc8:	e8bd8070 	pop	{r4, r5, r6, pc}
   22ccc:	e3a020ac 	mov	r2, #172	; 0xac
   22cd0:	e59f1008 	ldr	r1, [pc, #8]	; 22ce0 <USBEndpointGetNextPID+0x60>
   22cd4:	e59f000c 	ldr	r0, [pc, #12]	; 22ce8 <USBEndpointGetNextPID+0x68>
   22cd8:	ebffd2d0 	bl	17820 <uspi_assertion_failed>
   22cdc:	eaffffeb 	b	22c90 <USBEndpointGetNextPID+0x10>
   22ce0:	00031290 	.word	0x00031290
   22ce4:	00031364 	.word	0x00031364
   22ce8:	000306f0 	.word	0x000306f0

00022cec <USBEndpointSkipPID>:
   22cec:	e92d4070 	push	{r4, r5, r6, lr}
   22cf0:	e2504000 	subs	r4, r0, #0
   22cf4:	e1a06001 	mov	r6, r1
   22cf8:	e1a05002 	mov	r5, r2
   22cfc:	0a000028 	beq	22da4 <USBEndpointSkipPID+0xb8>
   22d00:	e5d43005 	ldrb	r3, [r4, #5]
   22d04:	e3530002 	cmp	r3, #2
   22d08:	8a000011 	bhi	22d54 <USBEndpointSkipPID+0x68>
   22d0c:	e3550000 	cmp	r5, #0
   22d10:	1a000009 	bne	22d3c <USBEndpointSkipPID+0x50>
   22d14:	e5d43014 	ldrb	r3, [r4, #20]
   22d18:	e3530001 	cmp	r3, #1
   22d1c:	0a00001b 	beq	22d90 <USBEndpointSkipPID+0xa4>
   22d20:	3a00001c 	bcc	22d98 <USBEndpointSkipPID+0xac>
   22d24:	e3530002 	cmp	r3, #2
   22d28:	1a000013 	bne	22d7c <USBEndpointSkipPID+0x90>
   22d2c:	e3160001 	tst	r6, #1
   22d30:	13a03001 	movne	r3, #1
   22d34:	15c43014 	strbne	r3, [r4, #20]
   22d38:	e8bd8070 	pop	{r4, r5, r6, pc}
   22d3c:	e5d43005 	ldrb	r3, [r4, #5]
   22d40:	e3530000 	cmp	r3, #0
   22d44:	1a000007 	bne	22d68 <USBEndpointSkipPID+0x7c>
   22d48:	e3a03000 	mov	r3, #0
   22d4c:	e5c43014 	strb	r3, [r4, #20]
   22d50:	e8bd8070 	pop	{r4, r5, r6, pc}
   22d54:	e3a020bc 	mov	r2, #188	; 0xbc
   22d58:	e59f1058 	ldr	r1, [pc, #88]	; 22db8 <USBEndpointSkipPID+0xcc>
   22d5c:	e59f0058 	ldr	r0, [pc, #88]	; 22dbc <USBEndpointSkipPID+0xd0>
   22d60:	ebffd2ae 	bl	17820 <uspi_assertion_failed>
   22d64:	eaffffe8 	b	22d0c <USBEndpointSkipPID+0x20>
   22d68:	e3a020db 	mov	r2, #219	; 0xdb
   22d6c:	e59f1044 	ldr	r1, [pc, #68]	; 22db8 <USBEndpointSkipPID+0xcc>
   22d70:	e59f0048 	ldr	r0, [pc, #72]	; 22dc0 <USBEndpointSkipPID+0xd4>
   22d74:	ebffd2a9 	bl	17820 <uspi_assertion_failed>
   22d78:	eafffff2 	b	22d48 <USBEndpointSkipPID+0x5c>
   22d7c:	e3a020d5 	mov	r2, #213	; 0xd5
   22d80:	e8bd4070 	pop	{r4, r5, r6, lr}
   22d84:	e59f102c 	ldr	r1, [pc, #44]	; 22db8 <USBEndpointSkipPID+0xcc>
   22d88:	e59f0034 	ldr	r0, [pc, #52]	; 22dc4 <USBEndpointSkipPID+0xd8>
   22d8c:	eaffd2a3 	b	17820 <uspi_assertion_failed>
   22d90:	e3160001 	tst	r6, #1
   22d94:	08bd8070 	popeq	{r4, r5, r6, pc}
   22d98:	e3a03002 	mov	r3, #2
   22d9c:	e5c43014 	strb	r3, [r4, #20]
   22da0:	e8bd8070 	pop	{r4, r5, r6, pc}
   22da4:	e3a020b9 	mov	r2, #185	; 0xb9
   22da8:	e59f1008 	ldr	r1, [pc, #8]	; 22db8 <USBEndpointSkipPID+0xcc>
   22dac:	e59f0014 	ldr	r0, [pc, #20]	; 22dc8 <USBEndpointSkipPID+0xdc>
   22db0:	ebffd29a 	bl	17820 <uspi_assertion_failed>
   22db4:	eaffffd1 	b	22d00 <USBEndpointSkipPID+0x14>
   22db8:	00031290 	.word	0x00031290
   22dbc:	0003138c 	.word	0x0003138c
   22dc0:	00031364 	.word	0x00031364
   22dc4:	00030678 	.word	0x00030678
   22dc8:	000306f0 	.word	0x000306f0

00022dcc <USBEndpointResetPID>:
   22dcc:	e92d4010 	push	{r4, lr}
   22dd0:	e2504000 	subs	r4, r0, #0
   22dd4:	0a000009 	beq	22e00 <USBEndpointResetPID+0x34>
   22dd8:	e5d43005 	ldrb	r3, [r4, #5]
   22ddc:	e3530001 	cmp	r3, #1
   22de0:	0a000003 	beq	22df4 <USBEndpointResetPID+0x28>
   22de4:	e3a020e4 	mov	r2, #228	; 0xe4
   22de8:	e59f1024 	ldr	r1, [pc, #36]	; 22e14 <USBEndpointResetPID+0x48>
   22dec:	e59f0024 	ldr	r0, [pc, #36]	; 22e18 <USBEndpointResetPID+0x4c>
   22df0:	ebffd28a 	bl	17820 <uspi_assertion_failed>
   22df4:	e3a03001 	mov	r3, #1
   22df8:	e5c43014 	strb	r3, [r4, #20]
   22dfc:	e8bd8010 	pop	{r4, pc}
   22e00:	e3a020e3 	mov	r2, #227	; 0xe3
   22e04:	e59f1008 	ldr	r1, [pc, #8]	; 22e14 <USBEndpointResetPID+0x48>
   22e08:	e59f000c 	ldr	r0, [pc, #12]	; 22e1c <USBEndpointResetPID+0x50>
   22e0c:	ebffd283 	bl	17820 <uspi_assertion_failed>
   22e10:	eafffff0 	b	22dd8 <USBEndpointResetPID+0xc>
   22e14:	00031290 	.word	0x00031290
   22e18:	00031400 	.word	0x00031400
   22e1c:	000306f0 	.word	0x000306f0

00022e20 <USBRequest>:
   22e20:	e92d40f0 	push	{r4, r5, r6, r7, lr}
   22e24:	e2504000 	subs	r4, r0, #0
   22e28:	e24dd00c 	sub	sp, sp, #12
   22e2c:	e1a06001 	mov	r6, r1
   22e30:	e1a05002 	mov	r5, r2
   22e34:	e59d7020 	ldr	r7, [sp, #32]
   22e38:	0a000017 	beq	22e9c <USBRequest+0x7c>
   22e3c:	e3a02000 	mov	r2, #0
   22e40:	e1560002 	cmp	r6, r2
   22e44:	e1c460f0 	strd	r6, [r4]
   22e48:	e5845008 	str	r5, [r4, #8]
   22e4c:	e584300c 	str	r3, [r4, #12]
   22e50:	e5842010 	str	r2, [r4, #16]
   22e54:	e5842014 	str	r2, [r4, #20]
   22e58:	e5842018 	str	r2, [r4, #24]
   22e5c:	e584201c 	str	r2, [r4, #28]
   22e60:	e5842020 	str	r2, [r4, #32]
   22e64:	0a000013 	beq	22eb8 <USBRequest+0x98>
   22e68:	e3550000 	cmp	r5, #0
   22e6c:	0a000001 	beq	22e78 <USBRequest+0x58>
   22e70:	e28dd00c 	add	sp, sp, #12
   22e74:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
   22e78:	e594300c 	ldr	r3, [r4, #12]
   22e7c:	e3530000 	cmp	r3, #0
   22e80:	0afffffa 	beq	22e70 <USBRequest+0x50>
   22e84:	e3a02026 	mov	r2, #38	; 0x26
   22e88:	e59f1040 	ldr	r1, [pc, #64]	; 22ed0 <USBRequest+0xb0>
   22e8c:	e59f0040 	ldr	r0, [pc, #64]	; 22ed4 <USBRequest+0xb4>
   22e90:	e28dd00c 	add	sp, sp, #12
   22e94:	e8bd40f0 	pop	{r4, r5, r6, r7, lr}
   22e98:	eaffd260 	b	17820 <uspi_assertion_failed>
   22e9c:	e3a02019 	mov	r2, #25
   22ea0:	e59f1028 	ldr	r1, [pc, #40]	; 22ed0 <USBRequest+0xb0>
   22ea4:	e59f002c 	ldr	r0, [pc, #44]	; 22ed8 <USBRequest+0xb8>
   22ea8:	e58d3004 	str	r3, [sp, #4]
   22eac:	ebffd25b 	bl	17820 <uspi_assertion_failed>
   22eb0:	e59d3004 	ldr	r3, [sp, #4]
   22eb4:	eaffffe0 	b	22e3c <USBRequest+0x1c>
   22eb8:	e3a02025 	mov	r2, #37	; 0x25
   22ebc:	e59f100c 	ldr	r1, [pc, #12]	; 22ed0 <USBRequest+0xb0>
   22ec0:	e59f0014 	ldr	r0, [pc, #20]	; 22edc <USBRequest+0xbc>
   22ec4:	ebffd255 	bl	17820 <uspi_assertion_failed>
   22ec8:	e5945008 	ldr	r5, [r4, #8]
   22ecc:	eaffffe5 	b	22e68 <USBRequest+0x48>
   22ed0:	00031424 	.word	0x00031424
   22ed4:	00031434 	.word	0x00031434
   22ed8:	000306f0 	.word	0x000306f0
   22edc:	00030d64 	.word	0x00030d64

00022ee0 <_USBRequest>:
   22ee0:	e92d4010 	push	{r4, lr}
   22ee4:	e2504000 	subs	r4, r0, #0
   22ee8:	0a000005 	beq	22f04 <_USBRequest+0x24>
   22eec:	e3a03000 	mov	r3, #0
   22ef0:	e5843000 	str	r3, [r4]
   22ef4:	e5843004 	str	r3, [r4, #4]
   22ef8:	e5843008 	str	r3, [r4, #8]
   22efc:	e5843018 	str	r3, [r4, #24]
   22f00:	e8bd8010 	pop	{r4, pc}
   22f04:	e3a0202b 	mov	r2, #43	; 0x2b
   22f08:	e59f1008 	ldr	r1, [pc, #8]	; 22f18 <_USBRequest+0x38>
   22f0c:	e59f0008 	ldr	r0, [pc, #8]	; 22f1c <_USBRequest+0x3c>
   22f10:	ebffd242 	bl	17820 <uspi_assertion_failed>
   22f14:	eafffff4 	b	22eec <_USBRequest+0xc>
   22f18:	00031424 	.word	0x00031424
   22f1c:	000306f0 	.word	0x000306f0

00022f20 <USBRequestGetEndpoint>:
   22f20:	e92d4010 	push	{r4, lr}
   22f24:	e2504000 	subs	r4, r0, #0
   22f28:	0a000008 	beq	22f50 <USBRequestGetEndpoint+0x30>
   22f2c:	e5940000 	ldr	r0, [r4]
   22f30:	e3500000 	cmp	r0, #0
   22f34:	18bd8010 	popne	{r4, pc}
   22f38:	e3a02035 	mov	r2, #53	; 0x35
   22f3c:	e59f1020 	ldr	r1, [pc, #32]	; 22f64 <USBRequestGetEndpoint+0x44>
   22f40:	e59f0020 	ldr	r0, [pc, #32]	; 22f68 <USBRequestGetEndpoint+0x48>
   22f44:	ebffd235 	bl	17820 <uspi_assertion_failed>
   22f48:	e5940000 	ldr	r0, [r4]
   22f4c:	e8bd8010 	pop	{r4, pc}
   22f50:	e3a02034 	mov	r2, #52	; 0x34
   22f54:	e59f1008 	ldr	r1, [pc, #8]	; 22f64 <USBRequestGetEndpoint+0x44>
   22f58:	e59f000c 	ldr	r0, [pc, #12]	; 22f6c <USBRequestGetEndpoint+0x4c>
   22f5c:	ebffd22f 	bl	17820 <uspi_assertion_failed>
   22f60:	eafffff1 	b	22f2c <USBRequestGetEndpoint+0xc>
   22f64:	00031424 	.word	0x00031424
   22f68:	00030d64 	.word	0x00030d64
   22f6c:	000306f0 	.word	0x000306f0

00022f70 <USBRequestSetStatus>:
   22f70:	e92d4070 	push	{r4, r5, r6, lr}
   22f74:	e2504000 	subs	r4, r0, #0
   22f78:	e1a05001 	mov	r5, r1
   22f7c:	0a000001 	beq	22f88 <USBRequestSetStatus+0x18>
   22f80:	e5845010 	str	r5, [r4, #16]
   22f84:	e8bd8070 	pop	{r4, r5, r6, pc}
   22f88:	e3a0203b 	mov	r2, #59	; 0x3b
   22f8c:	e59f100c 	ldr	r1, [pc, #12]	; 22fa0 <USBRequestSetStatus+0x30>
   22f90:	e59f000c 	ldr	r0, [pc, #12]	; 22fa4 <USBRequestSetStatus+0x34>
   22f94:	ebffd221 	bl	17820 <uspi_assertion_failed>
   22f98:	e5845010 	str	r5, [r4, #16]
   22f9c:	e8bd8070 	pop	{r4, r5, r6, pc}
   22fa0:	00031424 	.word	0x00031424
   22fa4:	000306f0 	.word	0x000306f0

00022fa8 <USBRequestSetResultLen>:
   22fa8:	e92d4070 	push	{r4, r5, r6, lr}
   22fac:	e2504000 	subs	r4, r0, #0
   22fb0:	e1a05001 	mov	r5, r1
   22fb4:	0a000001 	beq	22fc0 <USBRequestSetResultLen+0x18>
   22fb8:	e5845014 	str	r5, [r4, #20]
   22fbc:	e8bd8070 	pop	{r4, r5, r6, pc}
   22fc0:	e3a02041 	mov	r2, #65	; 0x41
   22fc4:	e59f100c 	ldr	r1, [pc, #12]	; 22fd8 <USBRequestSetResultLen+0x30>
   22fc8:	e59f000c 	ldr	r0, [pc, #12]	; 22fdc <USBRequestSetResultLen+0x34>
   22fcc:	ebffd213 	bl	17820 <uspi_assertion_failed>
   22fd0:	e5845014 	str	r5, [r4, #20]
   22fd4:	e8bd8070 	pop	{r4, r5, r6, pc}
   22fd8:	00031424 	.word	0x00031424
   22fdc:	000306f0 	.word	0x000306f0

00022fe0 <USBRequestGetStatus>:
   22fe0:	e92d4010 	push	{r4, lr}
   22fe4:	e2504000 	subs	r4, r0, #0
   22fe8:	0a000001 	beq	22ff4 <USBRequestGetStatus+0x14>
   22fec:	e5940010 	ldr	r0, [r4, #16]
   22ff0:	e8bd8010 	pop	{r4, pc}
   22ff4:	e3a02047 	mov	r2, #71	; 0x47
   22ff8:	e59f100c 	ldr	r1, [pc, #12]	; 2300c <USBRequestGetStatus+0x2c>
   22ffc:	e59f000c 	ldr	r0, [pc, #12]	; 23010 <USBRequestGetStatus+0x30>
   23000:	ebffd206 	bl	17820 <uspi_assertion_failed>
   23004:	e5940010 	ldr	r0, [r4, #16]
   23008:	e8bd8010 	pop	{r4, pc}
   2300c:	00031424 	.word	0x00031424
   23010:	000306f0 	.word	0x000306f0

00023014 <USBRequestGetResultLength>:
   23014:	e92d4010 	push	{r4, lr}
   23018:	e2504000 	subs	r4, r0, #0
   2301c:	0a000008 	beq	23044 <USBRequestGetResultLength+0x30>
   23020:	e5943010 	ldr	r3, [r4, #16]
   23024:	e3530000 	cmp	r3, #0
   23028:	1a000003 	bne	2303c <USBRequestGetResultLength+0x28>
   2302c:	e3a0204e 	mov	r2, #78	; 0x4e
   23030:	e59f1020 	ldr	r1, [pc, #32]	; 23058 <USBRequestGetResultLength+0x44>
   23034:	e59f0020 	ldr	r0, [pc, #32]	; 2305c <USBRequestGetResultLength+0x48>
   23038:	ebffd1f8 	bl	17820 <uspi_assertion_failed>
   2303c:	e5940014 	ldr	r0, [r4, #20]
   23040:	e8bd8010 	pop	{r4, pc}
   23044:	e3a0204d 	mov	r2, #77	; 0x4d
   23048:	e59f1008 	ldr	r1, [pc, #8]	; 23058 <USBRequestGetResultLength+0x44>
   2304c:	e59f000c 	ldr	r0, [pc, #12]	; 23060 <USBRequestGetResultLength+0x4c>
   23050:	ebffd1f2 	bl	17820 <uspi_assertion_failed>
   23054:	eafffff1 	b	23020 <USBRequestGetResultLength+0xc>
   23058:	00031424 	.word	0x00031424
   2305c:	00031464 	.word	0x00031464
   23060:	000306f0 	.word	0x000306f0

00023064 <USBRequestGetSetupData>:
   23064:	e92d4010 	push	{r4, lr}
   23068:	e2504000 	subs	r4, r0, #0
   2306c:	0a000011 	beq	230b8 <USBRequestGetSetupData+0x54>
   23070:	e5940000 	ldr	r0, [r4]
   23074:	ebfffeb8 	bl	22b5c <USBEndpointGetType>
   23078:	e3500000 	cmp	r0, #0
   2307c:	1a000008 	bne	230a4 <USBRequestGetSetupData+0x40>
   23080:	e5940004 	ldr	r0, [r4, #4]
   23084:	e3500000 	cmp	r0, #0
   23088:	18bd8010 	popne	{r4, pc}
   2308c:	e3a02057 	mov	r2, #87	; 0x57
   23090:	e59f1034 	ldr	r1, [pc, #52]	; 230cc <USBRequestGetSetupData+0x68>
   23094:	e59f0034 	ldr	r0, [pc, #52]	; 230d0 <USBRequestGetSetupData+0x6c>
   23098:	ebffd1e0 	bl	17820 <uspi_assertion_failed>
   2309c:	e5940004 	ldr	r0, [r4, #4]
   230a0:	e8bd8010 	pop	{r4, pc}
   230a4:	e3a02056 	mov	r2, #86	; 0x56
   230a8:	e59f101c 	ldr	r1, [pc, #28]	; 230cc <USBRequestGetSetupData+0x68>
   230ac:	e59f0020 	ldr	r0, [pc, #32]	; 230d4 <USBRequestGetSetupData+0x70>
   230b0:	ebffd1da 	bl	17820 <uspi_assertion_failed>
   230b4:	eafffff1 	b	23080 <USBRequestGetSetupData+0x1c>
   230b8:	e3a02055 	mov	r2, #85	; 0x55
   230bc:	e59f1008 	ldr	r1, [pc, #8]	; 230cc <USBRequestGetSetupData+0x68>
   230c0:	e59f0010 	ldr	r0, [pc, #16]	; 230d8 <USBRequestGetSetupData+0x74>
   230c4:	ebffd1d5 	bl	17820 <uspi_assertion_failed>
   230c8:	eaffffe8 	b	23070 <USBRequestGetSetupData+0xc>
   230cc:	00031424 	.word	0x00031424
   230d0:	000314b8 	.word	0x000314b8
   230d4:	00031478 	.word	0x00031478
   230d8:	000306f0 	.word	0x000306f0

000230dc <USBRequestGetBuffer>:
   230dc:	e92d4010 	push	{r4, lr}
   230e0:	e2504000 	subs	r4, r0, #0
   230e4:	0a00000b 	beq	23118 <USBRequestGetBuffer+0x3c>
   230e8:	e5940008 	ldr	r0, [r4, #8]
   230ec:	e3500000 	cmp	r0, #0
   230f0:	18bd8010 	popne	{r4, pc}
   230f4:	e594300c 	ldr	r3, [r4, #12]
   230f8:	e3530000 	cmp	r3, #0
   230fc:	08bd8010 	popeq	{r4, pc}
   23100:	e3a02060 	mov	r2, #96	; 0x60
   23104:	e59f1020 	ldr	r1, [pc, #32]	; 2312c <USBRequestGetBuffer+0x50>
   23108:	e59f0020 	ldr	r0, [pc, #32]	; 23130 <USBRequestGetBuffer+0x54>
   2310c:	ebffd1c3 	bl	17820 <uspi_assertion_failed>
   23110:	e5940008 	ldr	r0, [r4, #8]
   23114:	e8bd8010 	pop	{r4, pc}
   23118:	e3a0205e 	mov	r2, #94	; 0x5e
   2311c:	e59f1008 	ldr	r1, [pc, #8]	; 2312c <USBRequestGetBuffer+0x50>
   23120:	e59f000c 	ldr	r0, [pc, #12]	; 23134 <USBRequestGetBuffer+0x58>
   23124:	ebffd1bd 	bl	17820 <uspi_assertion_failed>
   23128:	eaffffee 	b	230e8 <USBRequestGetBuffer+0xc>
   2312c:	00031424 	.word	0x00031424
   23130:	00031434 	.word	0x00031434
   23134:	000306f0 	.word	0x000306f0

00023138 <USBRequestGetBufLen>:
   23138:	e92d4010 	push	{r4, lr}
   2313c:	e2504000 	subs	r4, r0, #0
   23140:	0a000001 	beq	2314c <USBRequestGetBufLen+0x14>
   23144:	e594000c 	ldr	r0, [r4, #12]
   23148:	e8bd8010 	pop	{r4, pc}
   2314c:	e3a02067 	mov	r2, #103	; 0x67
   23150:	e59f100c 	ldr	r1, [pc, #12]	; 23164 <USBRequestGetBufLen+0x2c>
   23154:	e59f000c 	ldr	r0, [pc, #12]	; 23168 <USBRequestGetBufLen+0x30>
   23158:	ebffd1b0 	bl	17820 <uspi_assertion_failed>
   2315c:	e594000c 	ldr	r0, [r4, #12]
   23160:	e8bd8010 	pop	{r4, pc}
   23164:	00031424 	.word	0x00031424
   23168:	000306f0 	.word	0x000306f0

0002316c <USBRequestSetCompletionRoutine>:
   2316c:	e92d4070 	push	{r4, r5, r6, lr}
   23170:	e2504000 	subs	r4, r0, #0
   23174:	e24dd008 	sub	sp, sp, #8
   23178:	e1a05001 	mov	r5, r1
   2317c:	e1a06002 	mov	r6, r2
   23180:	0a00000c 	beq	231b8 <USBRequestSetCompletionRoutine+0x4c>
   23184:	e3550000 	cmp	r5, #0
   23188:	e5845018 	str	r5, [r4, #24]
   2318c:	e584601c 	str	r6, [r4, #28]
   23190:	e5843020 	str	r3, [r4, #32]
   23194:	0a000001 	beq	231a0 <USBRequestSetCompletionRoutine+0x34>
   23198:	e28dd008 	add	sp, sp, #8
   2319c:	e8bd8070 	pop	{r4, r5, r6, pc}
   231a0:	e3a02072 	mov	r2, #114	; 0x72
   231a4:	e59f1028 	ldr	r1, [pc, #40]	; 231d4 <USBRequestSetCompletionRoutine+0x68>
   231a8:	e59f0028 	ldr	r0, [pc, #40]	; 231d8 <USBRequestSetCompletionRoutine+0x6c>
   231ac:	e28dd008 	add	sp, sp, #8
   231b0:	e8bd4070 	pop	{r4, r5, r6, lr}
   231b4:	eaffd199 	b	17820 <uspi_assertion_failed>
   231b8:	e3a0206d 	mov	r2, #109	; 0x6d
   231bc:	e59f1010 	ldr	r1, [pc, #16]	; 231d4 <USBRequestSetCompletionRoutine+0x68>
   231c0:	e59f0014 	ldr	r0, [pc, #20]	; 231dc <USBRequestSetCompletionRoutine+0x70>
   231c4:	e58d3004 	str	r3, [sp, #4]
   231c8:	ebffd194 	bl	17820 <uspi_assertion_failed>
   231cc:	e59d3004 	ldr	r3, [sp, #4]
   231d0:	eaffffeb 	b	23184 <USBRequestSetCompletionRoutine+0x18>
   231d4:	00031424 	.word	0x00031424
   231d8:	000314d4 	.word	0x000314d4
   231dc:	000306f0 	.word	0x000306f0

000231e0 <USBRequestCallCompletionRoutine>:
   231e0:	e92d4010 	push	{r4, lr}
   231e4:	e2504000 	subs	r4, r0, #0
   231e8:	0a00000d 	beq	23224 <USBRequestCallCompletionRoutine+0x44>
   231ec:	e5943018 	ldr	r3, [r4, #24]
   231f0:	e3530000 	cmp	r3, #0
   231f4:	0a000004 	beq	2320c <USBRequestCallCompletionRoutine+0x2c>
   231f8:	e5942020 	ldr	r2, [r4, #32]
   231fc:	e594101c 	ldr	r1, [r4, #28]
   23200:	e1a00004 	mov	r0, r4
   23204:	e8bd4010 	pop	{r4, lr}
   23208:	e12fff13 	bx	r3
   2320c:	e3a02078 	mov	r2, #120	; 0x78
   23210:	e59f1020 	ldr	r1, [pc, #32]	; 23238 <USBRequestCallCompletionRoutine+0x58>
   23214:	e59f0020 	ldr	r0, [pc, #32]	; 2323c <USBRequestCallCompletionRoutine+0x5c>
   23218:	ebffd180 	bl	17820 <uspi_assertion_failed>
   2321c:	e5943018 	ldr	r3, [r4, #24]
   23220:	eafffff4 	b	231f8 <USBRequestCallCompletionRoutine+0x18>
   23224:	e3a02077 	mov	r2, #119	; 0x77
   23228:	e59f1008 	ldr	r1, [pc, #8]	; 23238 <USBRequestCallCompletionRoutine+0x58>
   2322c:	e59f000c 	ldr	r0, [pc, #12]	; 23240 <USBRequestCallCompletionRoutine+0x60>
   23230:	ebffd17a 	bl	17820 <uspi_assertion_failed>
   23234:	eaffffec 	b	231ec <USBRequestCallCompletionRoutine+0xc>
   23238:	00031424 	.word	0x00031424
   2323c:	000314d4 	.word	0x000314d4
   23240:	000306f0 	.word	0x000306f0

00023244 <USBStandardHub>:
   23244:	e92d4070 	push	{r4, r5, r6, lr}
   23248:	e2504000 	subs	r4, r0, #0
   2324c:	e1a05001 	mov	r5, r1
   23250:	0a000010 	beq	23298 <USBStandardHub+0x54>
   23254:	e1a01005 	mov	r1, r5
   23258:	e1a00004 	mov	r0, r4
   2325c:	eb000487 	bl	24480 <USBFunctionCopy>
   23260:	e3a00000 	mov	r0, #0
   23264:	e2843038 	add	r3, r4, #56	; 0x38
   23268:	e1a01003 	mov	r1, r3
   2326c:	e59fc038 	ldr	ip, [pc, #56]	; 232ac <USBStandardHub+0x68>
   23270:	e1a02000 	mov	r2, r0
   23274:	e5840010 	str	r0, [r4, #16]
   23278:	e5840014 	str	r0, [r4, #20]
   2327c:	e584c000 	str	ip, [r4]
   23280:	e2840018 	add	r0, r4, #24
   23284:	e4802004 	str	r2, [r0], #4
   23288:	e1500001 	cmp	r0, r1
   2328c:	e4832004 	str	r2, [r3], #4
   23290:	1afffffb 	bne	23284 <USBStandardHub+0x40>
   23294:	e8bd8070 	pop	{r4, r5, r6, pc}
   23298:	e3a02020 	mov	r2, #32
   2329c:	e59f100c 	ldr	r1, [pc, #12]	; 232b0 <USBStandardHub+0x6c>
   232a0:	e59f000c 	ldr	r0, [pc, #12]	; 232b4 <USBStandardHub+0x70>
   232a4:	ebffd15d 	bl	17820 <uspi_assertion_failed>
   232a8:	eaffffe9 	b	23254 <USBStandardHub+0x10>
   232ac:	00023a94 	.word	0x00023a94
   232b0:	00031500 	.word	0x00031500
   232b4:	000306f0 	.word	0x000306f0

000232b8 <_USBStandardHub>:
   232b8:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   232bc:	e2506000 	subs	r6, r0, #0
   232c0:	0a00001f 	beq	23344 <_USBStandardHub+0x8c>
   232c4:	e5963014 	ldr	r3, [r6, #20]
   232c8:	e3530000 	cmp	r3, #0
   232cc:	0a000012 	beq	2331c <_USBStandardHub+0x64>
   232d0:	e3a05000 	mov	r5, #0
   232d4:	e1a07005 	mov	r7, r5
   232d8:	e2864014 	add	r4, r6, #20
   232dc:	e5940024 	ldr	r0, [r4, #36]	; 0x24
   232e0:	e2855001 	add	r5, r5, #1
   232e4:	e3500000 	cmp	r0, #0
   232e8:	0a000001 	beq	232f4 <_USBStandardHub+0x3c>
   232ec:	ebffd125 	bl	17788 <free>
   232f0:	e5847024 	str	r7, [r4, #36]	; 0x24
   232f4:	e5b40004 	ldr	r0, [r4, #4]!
   232f8:	e3500000 	cmp	r0, #0
   232fc:	0a000003 	beq	23310 <_USBStandardHub+0x58>
   23300:	ebfff855 	bl	2145c <_USBDevice>
   23304:	e5940000 	ldr	r0, [r4]
   23308:	ebffd11e 	bl	17788 <free>
   2330c:	e5847000 	str	r7, [r4]
   23310:	e5963014 	ldr	r3, [r6, #20]
   23314:	e1530005 	cmp	r3, r5
   23318:	8affffef 	bhi	232dc <_USBStandardHub+0x24>
   2331c:	e3a04000 	mov	r4, #0
   23320:	e5960010 	ldr	r0, [r6, #16]
   23324:	e5864014 	str	r4, [r6, #20]
   23328:	e1500004 	cmp	r0, r4
   2332c:	0a000001 	beq	23338 <_USBStandardHub+0x80>
   23330:	ebffd114 	bl	17788 <free>
   23334:	e5864010 	str	r4, [r6, #16]
   23338:	e1a00006 	mov	r0, r6
   2333c:	e8bd41f0 	pop	{r4, r5, r6, r7, r8, lr}
   23340:	ea000490 	b	24588 <_USBFunction>
   23344:	e3a02031 	mov	r2, #49	; 0x31
   23348:	e59f1008 	ldr	r1, [pc, #8]	; 23358 <_USBStandardHub+0xa0>
   2334c:	e59f0008 	ldr	r0, [pc, #8]	; 2335c <_USBStandardHub+0xa4>
   23350:	ebffd132 	bl	17820 <uspi_assertion_failed>
   23354:	eaffffda 	b	232c4 <_USBStandardHub+0xc>
   23358:	00031500 	.word	0x00031500
   2335c:	000306f0 	.word	0x000306f0

00023360 <USBStandardHubEnumeratePorts>:
   23360:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23364:	e2506000 	subs	r6, r0, #0
   23368:	e24dd01c 	sub	sp, sp, #28
   2336c:	0a000151 	beq	238b8 <USBStandardHubEnumeratePorts+0x558>
   23370:	e1a00006 	mov	r0, r6
   23374:	eb000507 	bl	24798 <USBFunctionGetHost>
   23378:	e250b000 	subs	fp, r0, #0
   2337c:	0a000155 	beq	238d8 <USBStandardHubEnumeratePorts+0x578>
   23380:	e1a00006 	mov	r0, r6
   23384:	eb0004ec 	bl	2473c <USBFunctionGetEndpoint0>
   23388:	e250a000 	subs	sl, r0, #0
   2338c:	0a000159 	beq	238f8 <USBStandardHubEnumeratePorts+0x598>
   23390:	e5963014 	ldr	r3, [r6, #20]
   23394:	e3530000 	cmp	r3, #0
   23398:	0a00001d 	beq	23414 <USBStandardHubEnumeratePorts+0xb4>
   2339c:	e3a04001 	mov	r4, #1
   233a0:	e3a05000 	mov	r5, #0
   233a4:	e3a07008 	mov	r7, #8
   233a8:	ea000004 	b	233c0 <USBStandardHubEnumeratePorts+0x60>
   233ac:	e5963014 	ldr	r3, [r6, #20]
   233b0:	e2842001 	add	r2, r4, #1
   233b4:	e1530004 	cmp	r3, r4
   233b8:	9a00001c 	bls	23430 <USBStandardHubEnumeratePorts+0xd0>
   233bc:	e1a04002 	mov	r4, r2
   233c0:	e6ff3074 	uxth	r3, r4
   233c4:	e58d3004 	str	r3, [sp, #4]
   233c8:	e58d500c 	str	r5, [sp, #12]
   233cc:	e58d5008 	str	r5, [sp, #8]
   233d0:	e58d7000 	str	r7, [sp]
   233d4:	e3a03003 	mov	r3, #3
   233d8:	e3a02023 	mov	r2, #35	; 0x23
   233dc:	e1a0100a 	mov	r1, sl
   233e0:	e1a0000b 	mov	r0, fp
   233e4:	ebffed8f 	bl	1ea28 <DWHCIDeviceControlMessage>
   233e8:	e3500000 	cmp	r0, #0
   233ec:	aaffffee 	bge	233ac <USBStandardHubEnumeratePorts+0x4c>
   233f0:	e1a03004 	mov	r3, r4
   233f4:	e59f2630 	ldr	r2, [pc, #1584]	; 23a2c <USBStandardHubEnumeratePorts+0x6cc>
   233f8:	e3a01001 	mov	r1, #1
   233fc:	e59f062c 	ldr	r0, [pc, #1580]	; 23a30 <USBStandardHubEnumeratePorts+0x6d0>
   23400:	ebff98eb 	bl	97b4 <LogWrite>
   23404:	e3a04000 	mov	r4, #0
   23408:	e1a00004 	mov	r0, r4
   2340c:	e28dd01c 	add	sp, sp, #28
   23410:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23414:	e3a020a4 	mov	r2, #164	; 0xa4
   23418:	e59f1614 	ldr	r1, [pc, #1556]	; 23a34 <USBStandardHubEnumeratePorts+0x6d4>
   2341c:	e59f0614 	ldr	r0, [pc, #1556]	; 23a38 <USBStandardHubEnumeratePorts+0x6d8>
   23420:	ebffd0fe 	bl	17820 <uspi_assertion_failed>
   23424:	e5963014 	ldr	r3, [r6, #20]
   23428:	e3530000 	cmp	r3, #0
   2342c:	1affffda 	bne	2339c <USBStandardHubEnumeratePorts+0x3c>
   23430:	e59f0604 	ldr	r0, [pc, #1540]	; 23a3c <USBStandardHubEnumeratePorts+0x6dc>
   23434:	ebffd0db 	bl	177a8 <MsDelay>
   23438:	e5963014 	ldr	r3, [r6, #20]
   2343c:	e3530000 	cmp	r3, #0
   23440:	0a0000a4 	beq	236d8 <USBStandardHubEnumeratePorts+0x378>
   23444:	e2864034 	add	r4, r6, #52	; 0x34
   23448:	e3a05001 	mov	r5, #1
   2344c:	ea00005c 	b	235c4 <USBStandardHubEnumeratePorts+0x264>
   23450:	e5942000 	ldr	r2, [r4]
   23454:	e5d23000 	ldrb	r3, [r2]
   23458:	e5d22001 	ldrb	r2, [r2, #1]
   2345c:	e1833402 	orr	r3, r3, r2, lsl #8
   23460:	e3130c01 	tst	r3, #256	; 0x100
   23464:	0a0000cf 	beq	237a8 <USBStandardHubEnumeratePorts+0x448>
   23468:	e3130001 	tst	r3, #1
   2346c:	0a00004f 	beq	235b0 <USBStandardHubEnumeratePorts+0x250>
   23470:	e3a09000 	mov	r9, #0
   23474:	e3a08004 	mov	r8, #4
   23478:	e58d7004 	str	r7, [sp, #4]
   2347c:	e58d900c 	str	r9, [sp, #12]
   23480:	e58d9008 	str	r9, [sp, #8]
   23484:	e58d8000 	str	r8, [sp]
   23488:	e3a03003 	mov	r3, #3
   2348c:	e3a02023 	mov	r2, #35	; 0x23
   23490:	e1a0100a 	mov	r1, sl
   23494:	e1a0000b 	mov	r0, fp
   23498:	ebffed62 	bl	1ea28 <DWHCIDeviceControlMessage>
   2349c:	e1500009 	cmp	r0, r9
   234a0:	ba0000cf 	blt	237e4 <USBStandardHubEnumeratePorts+0x484>
   234a4:	e3a00064 	mov	r0, #100	; 0x64
   234a8:	ebffd0be 	bl	177a8 <MsDelay>
   234ac:	e58d800c 	str	r8, [sp, #12]
   234b0:	e5942000 	ldr	r2, [r4]
   234b4:	e1a03009 	mov	r3, r9
   234b8:	e58d2008 	str	r2, [sp, #8]
   234bc:	e58d7004 	str	r7, [sp, #4]
   234c0:	e58d9000 	str	r9, [sp]
   234c4:	e3a020a3 	mov	r2, #163	; 0xa3
   234c8:	e1a0100a 	mov	r1, sl
   234cc:	e1a0000b 	mov	r0, fp
   234d0:	ebffed54 	bl	1ea28 <DWHCIDeviceControlMessage>
   234d4:	e3500004 	cmp	r0, #4
   234d8:	1affffc9 	bne	23404 <USBStandardHubEnumeratePorts+0xa4>
   234dc:	e5942000 	ldr	r2, [r4]
   234e0:	e5d23000 	ldrb	r3, [r2]
   234e4:	e5d22001 	ldrb	r2, [r2, #1]
   234e8:	e1833402 	orr	r3, r3, r2, lsl #8
   234ec:	e3130002 	tst	r3, #2
   234f0:	0a0000d0 	beq	23838 <USBStandardHubEnumeratePorts+0x4d8>
   234f4:	e2132008 	ands	r2, r3, #8
   234f8:	1a000103 	bne	2390c <USBStandardHubEnumeratePorts+0x5ac>
   234fc:	e3130c02 	tst	r3, #512	; 0x200
   23500:	11a09002 	movne	r9, r2
   23504:	1a000002 	bne	23514 <USBStandardHubEnumeratePorts+0x1b4>
   23508:	e3130b01 	tst	r3, #1024	; 0x400
   2350c:	03a09001 	moveq	r9, #1
   23510:	13a09002 	movne	r9, #2
   23514:	e1a00006 	mov	r0, r6
   23518:	eb000473 	bl	246ec <USBFunctionGetDevice>
   2351c:	e2507000 	subs	r7, r0, #0
   23520:	0a0000d6 	beq	23880 <USBStandardHubEnumeratePorts+0x520>
   23524:	e1a00007 	mov	r0, r7
   23528:	ebfff8ca 	bl	21858 <USBDeviceIsSplit>
   2352c:	e1a08000 	mov	r8, r0
   23530:	e1a00007 	mov	r0, r7
   23534:	ebfff8d4 	bl	2188c <USBDeviceGetHubAddress>
   23538:	e58d0010 	str	r0, [sp, #16]
   2353c:	e1a00007 	mov	r0, r7
   23540:	ebfff8df 	bl	218c4 <USBDeviceGetHubPortNumber>
   23544:	e3580000 	cmp	r8, #0
   23548:	e58d0014 	str	r0, [sp, #20]
   2354c:	0a0000aa 	beq	237fc <USBStandardHubEnumeratePorts+0x49c>
   23550:	e5143020 	ldr	r3, [r4, #-32]	; 0xffffffe0
   23554:	e3530000 	cmp	r3, #0
   23558:	0a000003 	beq	2356c <USBStandardHubEnumeratePorts+0x20c>
   2355c:	e59f24dc 	ldr	r2, [pc, #1244]	; 23a40 <USBStandardHubEnumeratePorts+0x6e0>
   23560:	e59f14cc 	ldr	r1, [pc, #1228]	; 23a34 <USBStandardHubEnumeratePorts+0x6d4>
   23564:	e59f04d8 	ldr	r0, [pc, #1240]	; 23a44 <USBStandardHubEnumeratePorts+0x6e4>
   23568:	ebffd0ac 	bl	17820 <uspi_assertion_failed>
   2356c:	e3a00060 	mov	r0, #96	; 0x60
   23570:	ebffd083 	bl	17784 <malloc>
   23574:	e3500000 	cmp	r0, #0
   23578:	e5040020 	str	r0, [r4, #-32]	; 0xffffffe0
   2357c:	0a0000b9 	beq	23868 <USBStandardHubEnumeratePorts+0x508>
   23580:	e59d3014 	ldr	r3, [sp, #20]
   23584:	e1a02009 	mov	r2, r9
   23588:	e58d3004 	str	r3, [sp, #4]
   2358c:	e59d3010 	ldr	r3, [sp, #16]
   23590:	e1a0100b 	mov	r1, fp
   23594:	e58d3000 	str	r3, [sp]
   23598:	e1a03008 	mov	r3, r8
   2359c:	ebfff75e 	bl	2131c <USBDevice>
   235a0:	e5140020 	ldr	r0, [r4, #-32]	; 0xffffffe0
   235a4:	ebfff9b4 	bl	21c7c <USBDeviceInitialize>
   235a8:	e2507000 	subs	r7, r0, #0
   235ac:	0a0000a7 	beq	23850 <USBStandardHubEnumeratePorts+0x4f0>
   235b0:	e5963014 	ldr	r3, [r6, #20]
   235b4:	e2852001 	add	r2, r5, #1
   235b8:	e1550003 	cmp	r5, r3
   235bc:	2a000021 	bcs	23648 <USBStandardHubEnumeratePorts+0x2e8>
   235c0:	e1a05002 	mov	r5, r2
   235c4:	e5b43004 	ldr	r3, [r4, #4]!
   235c8:	e3530000 	cmp	r3, #0
   235cc:	0a000003 	beq	235e0 <USBStandardHubEnumeratePorts+0x280>
   235d0:	e3a020ba 	mov	r2, #186	; 0xba
   235d4:	e59f1458 	ldr	r1, [pc, #1112]	; 23a34 <USBStandardHubEnumeratePorts+0x6d4>
   235d8:	e59f0468 	ldr	r0, [pc, #1128]	; 23a48 <USBStandardHubEnumeratePorts+0x6e8>
   235dc:	ebffd08f 	bl	17820 <uspi_assertion_failed>
   235e0:	e3a00004 	mov	r0, #4
   235e4:	ebffd066 	bl	17784 <malloc>
   235e8:	e3500000 	cmp	r0, #0
   235ec:	e5840000 	str	r0, [r4]
   235f0:	0a000075 	beq	237cc <USBStandardHubEnumeratePorts+0x46c>
   235f4:	e3a02004 	mov	r2, #4
   235f8:	e3a03000 	mov	r3, #0
   235fc:	e6ff7075 	uxth	r7, r5
   23600:	e58d0008 	str	r0, [sp, #8]
   23604:	e58d200c 	str	r2, [sp, #12]
   23608:	e88d0088 	stm	sp, {r3, r7}
   2360c:	e3a020a3 	mov	r2, #163	; 0xa3
   23610:	e1a0100a 	mov	r1, sl
   23614:	e1a0000b 	mov	r0, fp
   23618:	ebffed02 	bl	1ea28 <DWHCIDeviceControlMessage>
   2361c:	e3500004 	cmp	r0, #4
   23620:	0affff8a 	beq	23450 <USBStandardHubEnumeratePorts+0xf0>
   23624:	e1a03005 	mov	r3, r5
   23628:	e59f241c 	ldr	r2, [pc, #1052]	; 23a4c <USBStandardHubEnumeratePorts+0x6ec>
   2362c:	e3a01001 	mov	r1, #1
   23630:	e59f03f8 	ldr	r0, [pc, #1016]	; 23a30 <USBStandardHubEnumeratePorts+0x6d0>
   23634:	ebff985e 	bl	97b4 <LogWrite>
   23638:	e5963014 	ldr	r3, [r6, #20]
   2363c:	e2852001 	add	r2, r5, #1
   23640:	e1550003 	cmp	r5, r3
   23644:	3affffdd 	bcc	235c0 <USBStandardHubEnumeratePorts+0x260>
   23648:	e3530000 	cmp	r3, #0
   2364c:	0a000021 	beq	236d8 <USBStandardHubEnumeratePorts+0x378>
   23650:	e3a04000 	mov	r4, #0
   23654:	e59f93f4 	ldr	r9, [pc, #1012]	; 23a50 <USBStandardHubEnumeratePorts+0x6f0>
   23658:	e59f83d0 	ldr	r8, [pc, #976]	; 23a30 <USBStandardHubEnumeratePorts+0x6d0>
   2365c:	e2865018 	add	r5, r6, #24
   23660:	ea000007 	b	23684 <USBStandardHubEnumeratePorts+0x324>
   23664:	e1a02009 	mov	r2, r9
   23668:	e3a01004 	mov	r1, #4
   2366c:	e1a00008 	mov	r0, r8
   23670:	ebff984f 	bl	97b4 <LogWrite>
   23674:	e5963014 	ldr	r3, [r6, #20]
   23678:	e1530004 	cmp	r3, r4
   2367c:	e2855004 	add	r5, r5, #4
   23680:	9a000014 	bls	236d8 <USBStandardHubEnumeratePorts+0x378>
   23684:	e5950000 	ldr	r0, [r5]
   23688:	e2844001 	add	r4, r4, #1
   2368c:	e3500000 	cmp	r0, #0
   23690:	0afffff8 	beq	23678 <USBStandardHubEnumeratePorts+0x318>
   23694:	ebfffb3b 	bl	22388 <USBDeviceConfigure>
   23698:	e2507000 	subs	r7, r0, #0
   2369c:	e1a03004 	mov	r3, r4
   236a0:	1affffef 	bne	23664 <USBStandardHubEnumeratePorts+0x304>
   236a4:	e59f23a8 	ldr	r2, [pc, #936]	; 23a54 <USBStandardHubEnumeratePorts+0x6f4>
   236a8:	e3a01001 	mov	r1, #1
   236ac:	e1a00008 	mov	r0, r8
   236b0:	ebff983f 	bl	97b4 <LogWrite>
   236b4:	e5950000 	ldr	r0, [r5]
   236b8:	ebfff767 	bl	2145c <_USBDevice>
   236bc:	e5950000 	ldr	r0, [r5]
   236c0:	ebffd030 	bl	17788 <free>
   236c4:	e5963014 	ldr	r3, [r6, #20]
   236c8:	e5857000 	str	r7, [r5]
   236cc:	e1530004 	cmp	r3, r4
   236d0:	e2855004 	add	r5, r5, #4
   236d4:	8affffea 	bhi	23684 <USBStandardHubEnumeratePorts+0x324>
   236d8:	e3a00004 	mov	r0, #4
   236dc:	ebffd028 	bl	17784 <malloc>
   236e0:	e2507000 	subs	r7, r0, #0
   236e4:	0a0000cb 	beq	23a18 <USBStandardHubEnumeratePorts+0x6b8>
   236e8:	e3a04000 	mov	r4, #0
   236ec:	e3a03004 	mov	r3, #4
   236f0:	e58d7008 	str	r7, [sp, #8]
   236f4:	e58d300c 	str	r3, [sp, #12]
   236f8:	e58d4004 	str	r4, [sp, #4]
   236fc:	e58d4000 	str	r4, [sp]
   23700:	e1a03004 	mov	r3, r4
   23704:	e3a020a0 	mov	r2, #160	; 0xa0
   23708:	e1a0100a 	mov	r1, sl
   2370c:	e1a0000b 	mov	r0, fp
   23710:	ebffecc4 	bl	1ea28 <DWHCIDeviceControlMessage>
   23714:	e3500004 	cmp	r0, #4
   23718:	e1a08000 	mov	r8, r0
   2371c:	1a00005c 	bne	23894 <USBStandardHubEnumeratePorts+0x534>
   23720:	e5d73000 	ldrb	r3, [r7]
   23724:	e3130002 	tst	r3, #2
   23728:	0a000087 	beq	2394c <USBStandardHubEnumeratePorts+0x5ec>
   2372c:	e5963014 	ldr	r3, [r6, #20]
   23730:	e3530000 	cmp	r3, #0
   23734:	0a000011 	beq	23780 <USBStandardHubEnumeratePorts+0x420>
   23738:	e3a05001 	mov	r5, #1
   2373c:	e3a08008 	mov	r8, #8
   23740:	ea000000 	b	23748 <USBStandardHubEnumeratePorts+0x3e8>
   23744:	e1a05002 	mov	r5, r2
   23748:	e6ff3075 	uxth	r3, r5
   2374c:	e58d3004 	str	r3, [sp, #4]
   23750:	e3a02023 	mov	r2, #35	; 0x23
   23754:	e3a03001 	mov	r3, #1
   23758:	e58d400c 	str	r4, [sp, #12]
   2375c:	e58d4008 	str	r4, [sp, #8]
   23760:	e58d8000 	str	r8, [sp]
   23764:	e1a0100a 	mov	r1, sl
   23768:	e1a0000b 	mov	r0, fp
   2376c:	ebffecad 	bl	1ea28 <DWHCIDeviceControlMessage>
   23770:	e5963014 	ldr	r3, [r6, #20]
   23774:	e2852001 	add	r2, r5, #1
   23778:	e1530005 	cmp	r3, r5
   2377c:	8afffff0 	bhi	23744 <USBStandardHubEnumeratePorts+0x3e4>
   23780:	e3a04000 	mov	r4, #0
   23784:	e59f22cc 	ldr	r2, [pc, #716]	; 23a58 <USBStandardHubEnumeratePorts+0x6f8>
   23788:	e3a01001 	mov	r1, #1
   2378c:	e59f029c 	ldr	r0, [pc, #668]	; 23a30 <USBStandardHubEnumeratePorts+0x6d0>
   23790:	ebff9807 	bl	97b4 <LogWrite>
   23794:	e1a00007 	mov	r0, r7
   23798:	ebffcffa 	bl	17788 <free>
   2379c:	e1a00004 	mov	r0, r4
   237a0:	e28dd01c 	add	sp, sp, #28
   237a4:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   237a8:	e3a020c7 	mov	r2, #199	; 0xc7
   237ac:	e59f1280 	ldr	r1, [pc, #640]	; 23a34 <USBStandardHubEnumeratePorts+0x6d4>
   237b0:	e59f02a4 	ldr	r0, [pc, #676]	; 23a5c <USBStandardHubEnumeratePorts+0x6fc>
   237b4:	ebffd019 	bl	17820 <uspi_assertion_failed>
   237b8:	e5942000 	ldr	r2, [r4]
   237bc:	e5d23000 	ldrb	r3, [r2]
   237c0:	e5d22001 	ldrb	r2, [r2, #1]
   237c4:	e1833402 	orr	r3, r3, r2, lsl #8
   237c8:	eaffff26 	b	23468 <USBStandardHubEnumeratePorts+0x108>
   237cc:	e59f028c 	ldr	r0, [pc, #652]	; 23a60 <USBStandardHubEnumeratePorts+0x700>
   237d0:	e3a020bc 	mov	r2, #188	; 0xbc
   237d4:	e59f1258 	ldr	r1, [pc, #600]	; 23a34 <USBStandardHubEnumeratePorts+0x6d4>
   237d8:	ebffd010 	bl	17820 <uspi_assertion_failed>
   237dc:	e5940000 	ldr	r0, [r4]
   237e0:	eaffff83 	b	235f4 <USBStandardHubEnumeratePorts+0x294>
   237e4:	e1a03005 	mov	r3, r5
   237e8:	e59f2274 	ldr	r2, [pc, #628]	; 23a64 <USBStandardHubEnumeratePorts+0x704>
   237ec:	e3a01001 	mov	r1, #1
   237f0:	e59f0238 	ldr	r0, [pc, #568]	; 23a30 <USBStandardHubEnumeratePorts+0x6d0>
   237f4:	ebff97ee 	bl	97b4 <LogWrite>
   237f8:	eaffff6c 	b	235b0 <USBStandardHubEnumeratePorts+0x250>
   237fc:	e1a00007 	mov	r0, r7
   23800:	ebfff806 	bl	21820 <USBDeviceGetSpeed>
   23804:	e2593002 	subs	r3, r9, #2
   23808:	13a03001 	movne	r3, #1
   2380c:	e3500002 	cmp	r0, #2
   23810:	13a03000 	movne	r3, #0
   23814:	e3530000 	cmp	r3, #0
   23818:	0affff4c 	beq	23550 <USBStandardHubEnumeratePorts+0x1f0>
   2381c:	e1a00007 	mov	r0, r7
   23820:	ebfff7f1 	bl	217ec <USBDeviceGetAddress>
   23824:	e6ef3075 	uxtb	r3, r5
   23828:	e58d0010 	str	r0, [sp, #16]
   2382c:	e3a08001 	mov	r8, #1
   23830:	e58d3014 	str	r3, [sp, #20]
   23834:	eaffff45 	b	23550 <USBStandardHubEnumeratePorts+0x1f0>
   23838:	e1a03005 	mov	r3, r5
   2383c:	e59f2224 	ldr	r2, [pc, #548]	; 23a68 <USBStandardHubEnumeratePorts+0x708>
   23840:	e3a01001 	mov	r1, #1
   23844:	e59f01e4 	ldr	r0, [pc, #484]	; 23a30 <USBStandardHubEnumeratePorts+0x6d0>
   23848:	ebff97d9 	bl	97b4 <LogWrite>
   2384c:	eaffff57 	b	235b0 <USBStandardHubEnumeratePorts+0x250>
   23850:	e5140020 	ldr	r0, [r4, #-32]	; 0xffffffe0
   23854:	ebfff700 	bl	2145c <_USBDevice>
   23858:	e5140020 	ldr	r0, [r4, #-32]	; 0xffffffe0
   2385c:	ebffcfc9 	bl	17788 <free>
   23860:	e5047020 	str	r7, [r4, #-32]	; 0xffffffe0
   23864:	eaffff51 	b	235b0 <USBStandardHubEnumeratePorts+0x250>
   23868:	e59f01fc 	ldr	r0, [pc, #508]	; 23a6c <USBStandardHubEnumeratePorts+0x70c>
   2386c:	e59f21fc 	ldr	r2, [pc, #508]	; 23a70 <USBStandardHubEnumeratePorts+0x710>
   23870:	e59f11bc 	ldr	r1, [pc, #444]	; 23a34 <USBStandardHubEnumeratePorts+0x6d4>
   23874:	ebffcfe9 	bl	17820 <uspi_assertion_failed>
   23878:	e5140020 	ldr	r0, [r4, #-32]	; 0xffffffe0
   2387c:	eaffff3f 	b	23580 <USBStandardHubEnumeratePorts+0x220>
   23880:	e59f21ec 	ldr	r2, [pc, #492]	; 23a74 <USBStandardHubEnumeratePorts+0x714>
   23884:	e59f11a8 	ldr	r1, [pc, #424]	; 23a34 <USBStandardHubEnumeratePorts+0x6d4>
   23888:	e59f01e8 	ldr	r0, [pc, #488]	; 23a78 <USBStandardHubEnumeratePorts+0x718>
   2388c:	ebffcfe3 	bl	17820 <uspi_assertion_failed>
   23890:	eaffff23 	b	23524 <USBStandardHubEnumeratePorts+0x1c4>
   23894:	e59f21e0 	ldr	r2, [pc, #480]	; 23a7c <USBStandardHubEnumeratePorts+0x71c>
   23898:	e3a01001 	mov	r1, #1
   2389c:	e59f018c 	ldr	r0, [pc, #396]	; 23a30 <USBStandardHubEnumeratePorts+0x6d0>
   238a0:	ebff97c3 	bl	97b4 <LogWrite>
   238a4:	e1a00007 	mov	r0, r7
   238a8:	ebffcfb6 	bl	17788 <free>
   238ac:	e1a00004 	mov	r0, r4
   238b0:	e28dd01c 	add	sp, sp, #28
   238b4:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   238b8:	e3a0209c 	mov	r2, #156	; 0x9c
   238bc:	e59f1170 	ldr	r1, [pc, #368]	; 23a34 <USBStandardHubEnumeratePorts+0x6d4>
   238c0:	e59f01b8 	ldr	r0, [pc, #440]	; 23a80 <USBStandardHubEnumeratePorts+0x720>
   238c4:	ebffcfd5 	bl	17820 <uspi_assertion_failed>
   238c8:	e1a00006 	mov	r0, r6
   238cc:	eb0003b1 	bl	24798 <USBFunctionGetHost>
   238d0:	e250b000 	subs	fp, r0, #0
   238d4:	1afffea9 	bne	23380 <USBStandardHubEnumeratePorts+0x20>
   238d8:	e3a0209f 	mov	r2, #159	; 0x9f
   238dc:	e59f1150 	ldr	r1, [pc, #336]	; 23a34 <USBStandardHubEnumeratePorts+0x6d4>
   238e0:	e59f019c 	ldr	r0, [pc, #412]	; 23a84 <USBStandardHubEnumeratePorts+0x724>
   238e4:	ebffcfcd 	bl	17820 <uspi_assertion_failed>
   238e8:	e1a00006 	mov	r0, r6
   238ec:	eb000392 	bl	2473c <USBFunctionGetEndpoint0>
   238f0:	e250a000 	subs	sl, r0, #0
   238f4:	1afffea5 	bne	23390 <USBStandardHubEnumeratePorts+0x30>
   238f8:	e3a020a2 	mov	r2, #162	; 0xa2
   238fc:	e59f1130 	ldr	r1, [pc, #304]	; 23a34 <USBStandardHubEnumeratePorts+0x6d4>
   23900:	e59f0180 	ldr	r0, [pc, #384]	; 23a88 <USBStandardHubEnumeratePorts+0x728>
   23904:	ebffcfc5 	bl	17820 <uspi_assertion_failed>
   23908:	eafffea0 	b	23390 <USBStandardHubEnumeratePorts+0x30>
   2390c:	e3a03008 	mov	r3, #8
   23910:	e1a0100a 	mov	r1, sl
   23914:	e58d3000 	str	r3, [sp]
   23918:	e58d900c 	str	r9, [sp, #12]
   2391c:	e98d0280 	stmib	sp, {r7, r9}
   23920:	e1a0000b 	mov	r0, fp
   23924:	e3a03001 	mov	r3, #1
   23928:	e3a02023 	mov	r2, #35	; 0x23
   2392c:	ebffec3d 	bl	1ea28 <DWHCIDeviceControlMessage>
   23930:	e1a03005 	mov	r3, r5
   23934:	e59f2150 	ldr	r2, [pc, #336]	; 23a8c <USBStandardHubEnumeratePorts+0x72c>
   23938:	e3a01001 	mov	r1, #1
   2393c:	e59f00ec 	ldr	r0, [pc, #236]	; 23a30 <USBStandardHubEnumeratePorts+0x6d0>
   23940:	e1a04009 	mov	r4, r9
   23944:	ebff979a 	bl	97b4 <LogWrite>
   23948:	eafffeae 	b	23408 <USBStandardHubEnumeratePorts+0xa8>
   2394c:	e1a00007 	mov	r0, r7
   23950:	ebffcf8c 	bl	17788 <free>
   23954:	e5963014 	ldr	r3, [r6, #20]
   23958:	e3530000 	cmp	r3, #0
   2395c:	03a04001 	moveq	r4, #1
   23960:	0afffea8 	beq	23408 <USBStandardHubEnumeratePorts+0xa8>
   23964:	e3a05001 	mov	r5, #1
   23968:	e58d8010 	str	r8, [sp, #16]
   2396c:	e1a04005 	mov	r4, r5
   23970:	e2868034 	add	r8, r6, #52	; 0x34
   23974:	ea000004 	b	2398c <USBStandardHubEnumeratePorts+0x62c>
   23978:	e5963014 	ldr	r3, [r6, #20]
   2397c:	e2852001 	add	r2, r5, #1
   23980:	e1530005 	cmp	r3, r5
   23984:	9afffe9f 	bls	23408 <USBStandardHubEnumeratePorts+0xa8>
   23988:	e1a05002 	mov	r5, r2
   2398c:	e3a07000 	mov	r7, #0
   23990:	e59d3010 	ldr	r3, [sp, #16]
   23994:	e6ff9075 	uxth	r9, r5
   23998:	e58d300c 	str	r3, [sp, #12]
   2399c:	e5b83004 	ldr	r3, [r8, #4]!
   239a0:	e3a020a3 	mov	r2, #163	; 0xa3
   239a4:	e58d3008 	str	r3, [sp, #8]
   239a8:	e58d7000 	str	r7, [sp]
   239ac:	e1a03007 	mov	r3, r7
   239b0:	e58d9004 	str	r9, [sp, #4]
   239b4:	e1a0100a 	mov	r1, sl
   239b8:	e1a0000b 	mov	r0, fp
   239bc:	ebffec19 	bl	1ea28 <DWHCIDeviceControlMessage>
   239c0:	e3500004 	cmp	r0, #4
   239c4:	1affffeb 	bne	23978 <USBStandardHubEnumeratePorts+0x618>
   239c8:	e5983000 	ldr	r3, [r8]
   239cc:	e5d33000 	ldrb	r3, [r3]
   239d0:	e3130008 	tst	r3, #8
   239d4:	0affffe7 	beq	23978 <USBStandardHubEnumeratePorts+0x618>
   239d8:	e3a03008 	mov	r3, #8
   239dc:	e1a0100a 	mov	r1, sl
   239e0:	e88d0208 	stm	sp, {r3, r9}
   239e4:	e58d700c 	str	r7, [sp, #12]
   239e8:	e58d7008 	str	r7, [sp, #8]
   239ec:	e3a03001 	mov	r3, #1
   239f0:	e3a02023 	mov	r2, #35	; 0x23
   239f4:	e1a0000b 	mov	r0, fp
   239f8:	ebffec0a 	bl	1ea28 <DWHCIDeviceControlMessage>
   239fc:	e1a03005 	mov	r3, r5
   23a00:	e59f2084 	ldr	r2, [pc, #132]	; 23a8c <USBStandardHubEnumeratePorts+0x72c>
   23a04:	e3a01001 	mov	r1, #1
   23a08:	e59f0020 	ldr	r0, [pc, #32]	; 23a30 <USBStandardHubEnumeratePorts+0x6d0>
   23a0c:	e1a04007 	mov	r4, r7
   23a10:	ebff9767 	bl	97b4 <LogWrite>
   23a14:	eaffffd7 	b	23978 <USBStandardHubEnumeratePorts+0x618>
   23a18:	e3a02f4f 	mov	r2, #316	; 0x13c
   23a1c:	e59f1010 	ldr	r1, [pc, #16]	; 23a34 <USBStandardHubEnumeratePorts+0x6d4>
   23a20:	e59f0068 	ldr	r0, [pc, #104]	; 23a90 <USBStandardHubEnumeratePorts+0x730>
   23a24:	ebffcf7d 	bl	17820 <uspi_assertion_failed>
   23a28:	eaffff2e 	b	236e8 <USBStandardHubEnumeratePorts+0x388>
   23a2c:	00031544 	.word	0x00031544
   23a30:	000314f8 	.word	0x000314f8
   23a34:	00031500 	.word	0x00031500
   23a38:	00031530 	.word	0x00031530
   23a3c:	000001fe 	.word	0x000001fe
   23a40:	00000115 	.word	0x00000115
   23a44:	00031658 	.word	0x00031658
   23a48:	0003155c 	.word	0x0003155c
   23a4c:	0003159c 	.word	0x0003159c
   23a50:	000316bc 	.word	0x000316bc
   23a54:	00031698 	.word	0x00031698
   23a58:	00031700 	.word	0x00031700
   23a5c:	000315bc 	.word	0x000315bc
   23a60:	0003157c 	.word	0x0003157c
   23a64:	000315f4 	.word	0x000315f4
   23a68:	0003160c 	.word	0x0003160c
   23a6c:	00031678 	.word	0x00031678
   23a70:	00000117 	.word	0x00000117
   23a74:	00000103 	.word	0x00000103
   23a78:	00031648 	.word	0x00031648
   23a7c:	000316e8 	.word	0x000316e8
   23a80:	000306f0 	.word	0x000306f0
   23a84:	00031514 	.word	0x00031514
   23a88:	00031520 	.word	0x00031520
   23a8c:	00031624 	.word	0x00031624
   23a90:	000316d8 	.word	0x000316d8

00023a94 <USBStandardHubConfigure>:
   23a94:	e92d4070 	push	{r4, r5, r6, lr}
   23a98:	e2504000 	subs	r4, r0, #0
   23a9c:	e24dd010 	sub	sp, sp, #16
   23aa0:	0a000048 	beq	23bc8 <USBStandardHubConfigure+0x134>
   23aa4:	e1a00004 	mov	r0, r4
   23aa8:	eb0002f8 	bl	24690 <USBFunctionGetNumEndpoints>
   23aac:	e3500001 	cmp	r0, #1
   23ab0:	e1a06000 	mov	r6, r0
   23ab4:	0a000006 	beq	23ad4 <USBStandardHubConfigure+0x40>
   23ab8:	e1a00004 	mov	r0, r4
   23abc:	e59f119c 	ldr	r1, [pc, #412]	; 23c60 <USBStandardHubConfigure+0x1cc>
   23ac0:	eb00039e 	bl	24940 <USBFunctionConfigurationError>
   23ac4:	e3a05000 	mov	r5, #0
   23ac8:	e1a00005 	mov	r0, r5
   23acc:	e28dd010 	add	sp, sp, #16
   23ad0:	e8bd8070 	pop	{r4, r5, r6, pc}
   23ad4:	e3a01005 	mov	r1, #5
   23ad8:	e1a00004 	mov	r0, r4
   23adc:	eb00037d 	bl	248d8 <USBFunctionGetDescriptor>
   23ae0:	e3500000 	cmp	r0, #0
   23ae4:	0afffff3 	beq	23ab8 <USBStandardHubConfigure+0x24>
   23ae8:	e1d030d2 	ldrsb	r3, [r0, #2]
   23aec:	e3530000 	cmp	r3, #0
   23af0:	aafffff0 	bge	23ab8 <USBStandardHubConfigure+0x24>
   23af4:	e5d03003 	ldrb	r3, [r0, #3]
   23af8:	e203303f 	and	r3, r3, #63	; 0x3f
   23afc:	e3530003 	cmp	r3, #3
   23b00:	1affffec 	bne	23ab8 <USBStandardHubConfigure+0x24>
   23b04:	e1a00004 	mov	r0, r4
   23b08:	eb000339 	bl	247f4 <USBFunctionConfigure>
   23b0c:	e2505000 	subs	r5, r0, #0
   23b10:	0a000031 	beq	23bdc <USBStandardHubConfigure+0x148>
   23b14:	e1a00004 	mov	r0, r4
   23b18:	eb00031e 	bl	24798 <USBFunctionGetHost>
   23b1c:	e2505000 	subs	r5, r0, #0
   23b20:	0a000049 	beq	23c4c <USBStandardHubConfigure+0x1b8>
   23b24:	e5943010 	ldr	r3, [r4, #16]
   23b28:	e3530000 	cmp	r3, #0
   23b2c:	0a000003 	beq	23b40 <USBStandardHubConfigure+0xac>
   23b30:	e3a0206f 	mov	r2, #111	; 0x6f
   23b34:	e59f1128 	ldr	r1, [pc, #296]	; 23c64 <USBStandardHubConfigure+0x1d0>
   23b38:	e59f0128 	ldr	r0, [pc, #296]	; 23c68 <USBStandardHubConfigure+0x1d4>
   23b3c:	ebffcf37 	bl	17820 <uspi_assertion_failed>
   23b40:	e3a00009 	mov	r0, #9
   23b44:	ebffcf0e 	bl	17784 <malloc>
   23b48:	e3500000 	cmp	r0, #0
   23b4c:	e5840010 	str	r0, [r4, #16]
   23b50:	0a000038 	beq	23c38 <USBStandardHubConfigure+0x1a4>
   23b54:	e1a00004 	mov	r0, r4
   23b58:	eb0002f7 	bl	2473c <USBFunctionGetEndpoint0>
   23b5c:	e3a02009 	mov	r2, #9
   23b60:	e3a030a0 	mov	r3, #160	; 0xa0
   23b64:	e1cd20f4 	strd	r2, [sp, #4]
   23b68:	e5943010 	ldr	r3, [r4, #16]
   23b6c:	e1a01000 	mov	r1, r0
   23b70:	e58d3000 	str	r3, [sp]
   23b74:	e1a00005 	mov	r0, r5
   23b78:	e3a03000 	mov	r3, #0
   23b7c:	e3a02029 	mov	r2, #41	; 0x29
   23b80:	ebffebd4 	bl	1ead8 <DWHCIDeviceGetDescriptor>
   23b84:	e3500009 	cmp	r0, #9
   23b88:	1a000018 	bne	23bf0 <USBStandardHubConfigure+0x15c>
   23b8c:	e5943010 	ldr	r3, [r4, #16]
   23b90:	e5d33002 	ldrb	r3, [r3, #2]
   23b94:	e3530008 	cmp	r3, #8
   23b98:	e5843014 	str	r3, [r4, #20]
   23b9c:	8a00001c 	bhi	23c14 <USBStandardHubConfigure+0x180>
   23ba0:	e1a00004 	mov	r0, r4
   23ba4:	ebfffded 	bl	23360 <USBStandardHubEnumeratePorts>
   23ba8:	e2505000 	subs	r5, r0, #0
   23bac:	13a05001 	movne	r5, #1
   23bb0:	1affffc4 	bne	23ac8 <USBStandardHubConfigure+0x34>
   23bb4:	e59f20b0 	ldr	r2, [pc, #176]	; 23c6c <USBStandardHubConfigure+0x1d8>
   23bb8:	e3a01001 	mov	r1, #1
   23bbc:	e59f009c 	ldr	r0, [pc, #156]	; 23c60 <USBStandardHubConfigure+0x1cc>
   23bc0:	ebff96fb 	bl	97b4 <LogWrite>
   23bc4:	eaffffbf 	b	23ac8 <USBStandardHubConfigure+0x34>
   23bc8:	e3a02051 	mov	r2, #81	; 0x51
   23bcc:	e59f1090 	ldr	r1, [pc, #144]	; 23c64 <USBStandardHubConfigure+0x1d0>
   23bd0:	e59f0098 	ldr	r0, [pc, #152]	; 23c70 <USBStandardHubConfigure+0x1dc>
   23bd4:	ebffcf11 	bl	17820 <uspi_assertion_failed>
   23bd8:	eaffffb1 	b	23aa4 <USBStandardHubConfigure+0x10>
   23bdc:	e1a01006 	mov	r1, r6
   23be0:	e59f208c 	ldr	r2, [pc, #140]	; 23c74 <USBStandardHubConfigure+0x1e0>
   23be4:	e59f0074 	ldr	r0, [pc, #116]	; 23c60 <USBStandardHubConfigure+0x1cc>
   23be8:	ebff96f1 	bl	97b4 <LogWrite>
   23bec:	eaffffb5 	b	23ac8 <USBStandardHubConfigure+0x34>
   23bf0:	e3a05000 	mov	r5, #0
   23bf4:	e59f207c 	ldr	r2, [pc, #124]	; 23c78 <USBStandardHubConfigure+0x1e4>
   23bf8:	e3a01001 	mov	r1, #1
   23bfc:	e59f005c 	ldr	r0, [pc, #92]	; 23c60 <USBStandardHubConfigure+0x1cc>
   23c00:	ebff96eb 	bl	97b4 <LogWrite>
   23c04:	e5940010 	ldr	r0, [r4, #16]
   23c08:	ebffcede 	bl	17788 <free>
   23c0c:	e5845010 	str	r5, [r4, #16]
   23c10:	eaffffac 	b	23ac8 <USBStandardHubConfigure+0x34>
   23c14:	e3a05000 	mov	r5, #0
   23c18:	e59f205c 	ldr	r2, [pc, #92]	; 23c7c <USBStandardHubConfigure+0x1e8>
   23c1c:	e3a01001 	mov	r1, #1
   23c20:	e59f0038 	ldr	r0, [pc, #56]	; 23c60 <USBStandardHubConfigure+0x1cc>
   23c24:	ebff96e2 	bl	97b4 <LogWrite>
   23c28:	e5940010 	ldr	r0, [r4, #16]
   23c2c:	ebffced5 	bl	17788 <free>
   23c30:	e5845010 	str	r5, [r4, #16]
   23c34:	eaffffa3 	b	23ac8 <USBStandardHubConfigure+0x34>
   23c38:	e3a02071 	mov	r2, #113	; 0x71
   23c3c:	e59f1020 	ldr	r1, [pc, #32]	; 23c64 <USBStandardHubConfigure+0x1d0>
   23c40:	e59f0038 	ldr	r0, [pc, #56]	; 23c80 <USBStandardHubConfigure+0x1ec>
   23c44:	ebffcef5 	bl	17820 <uspi_assertion_failed>
   23c48:	eaffffc1 	b	23b54 <USBStandardHubConfigure+0xc0>
   23c4c:	e3a0206d 	mov	r2, #109	; 0x6d
   23c50:	e59f100c 	ldr	r1, [pc, #12]	; 23c64 <USBStandardHubConfigure+0x1d0>
   23c54:	e59f0028 	ldr	r0, [pc, #40]	; 23c84 <USBStandardHubConfigure+0x1f0>
   23c58:	ebffcef0 	bl	17820 <uspi_assertion_failed>
   23c5c:	eaffffb0 	b	23b24 <USBStandardHubConfigure+0x90>
   23c60:	000314f8 	.word	0x000314f8
   23c64:	00031500 	.word	0x00031500
   23c68:	00031734 	.word	0x00031734
   23c6c:	00031794 	.word	0x00031794
   23c70:	000306f0 	.word	0x000306f0
   23c74:	0003171c 	.word	0x0003171c
   23c78:	00031764 	.word	0x00031764
   23c7c:	00031780 	.word	0x00031780
   23c80:	0003174c 	.word	0x0003174c
   23c84:	00031514 	.word	0x00031514

00023c88 <DeviceNameService>:
   23c88:	e92d4070 	push	{r4, r5, r6, lr}
   23c8c:	e2505000 	subs	r5, r0, #0
   23c90:	0a00000b 	beq	23cc4 <DeviceNameService+0x3c>
   23c94:	e3a03000 	mov	r3, #0
   23c98:	e59f4038 	ldr	r4, [pc, #56]	; 23cd8 <DeviceNameService+0x50>
   23c9c:	e5853000 	str	r3, [r5]
   23ca0:	e5943000 	ldr	r3, [r4]
   23ca4:	e3530000 	cmp	r3, #0
   23ca8:	0a000003 	beq	23cbc <DeviceNameService+0x34>
   23cac:	e3a02021 	mov	r2, #33	; 0x21
   23cb0:	e59f1024 	ldr	r1, [pc, #36]	; 23cdc <DeviceNameService+0x54>
   23cb4:	e59f0024 	ldr	r0, [pc, #36]	; 23ce0 <DeviceNameService+0x58>
   23cb8:	ebffced8 	bl	17820 <uspi_assertion_failed>
   23cbc:	e5845000 	str	r5, [r4]
   23cc0:	e8bd8070 	pop	{r4, r5, r6, pc}
   23cc4:	e3a0201d 	mov	r2, #29
   23cc8:	e59f100c 	ldr	r1, [pc, #12]	; 23cdc <DeviceNameService+0x54>
   23ccc:	e59f0010 	ldr	r0, [pc, #16]	; 23ce4 <DeviceNameService+0x5c>
   23cd0:	ebffced2 	bl	17820 <uspi_assertion_failed>
   23cd4:	eaffffee 	b	23c94 <DeviceNameService+0xc>
   23cd8:	00080b00 	.word	0x00080b00
   23cdc:	000317ac 	.word	0x000317ac
   23ce0:	000317c0 	.word	0x000317c0
   23ce4:	000306f0 	.word	0x000306f0

00023ce8 <_DeviceNameService>:
   23ce8:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   23cec:	e2505000 	subs	r5, r0, #0
   23cf0:	0a00001d 	beq	23d6c <_DeviceNameService+0x84>
   23cf4:	e5953000 	ldr	r3, [r5]
   23cf8:	e3530000 	cmp	r3, #0
   23cfc:	0a000016 	beq	23d5c <_DeviceNameService+0x74>
   23d00:	e59f7078 	ldr	r7, [pc, #120]	; 23d80 <_DeviceNameService+0x98>
   23d04:	e59f6078 	ldr	r6, [pc, #120]	; 23d84 <_DeviceNameService+0x9c>
   23d08:	ea00000a 	b	23d38 <_DeviceNameService+0x50>
   23d0c:	e5953000 	ldr	r3, [r5]
   23d10:	e5930004 	ldr	r0, [r3, #4]
   23d14:	ebffce9b 	bl	17788 <free>
   23d18:	e3a03000 	mov	r3, #0
   23d1c:	e5950000 	ldr	r0, [r5]
   23d20:	e5803004 	str	r3, [r0, #4]
   23d24:	e5803008 	str	r3, [r0, #8]
   23d28:	ebffce96 	bl	17788 <free>
   23d2c:	e2543000 	subs	r3, r4, #0
   23d30:	e5854000 	str	r4, [r5]
   23d34:	0a000008 	beq	23d5c <_DeviceNameService+0x74>
   23d38:	e5932004 	ldr	r2, [r3, #4]
   23d3c:	e5934000 	ldr	r4, [r3]
   23d40:	e3520000 	cmp	r2, #0
   23d44:	1afffff0 	bne	23d0c <_DeviceNameService+0x24>
   23d48:	e3a0202d 	mov	r2, #45	; 0x2d
   23d4c:	e1a01007 	mov	r1, r7
   23d50:	e1a00006 	mov	r0, r6
   23d54:	ebffceb1 	bl	17820 <uspi_assertion_failed>
   23d58:	eaffffeb 	b	23d0c <_DeviceNameService+0x24>
   23d5c:	e3a02000 	mov	r2, #0
   23d60:	e59f3020 	ldr	r3, [pc, #32]	; 23d88 <_DeviceNameService+0xa0>
   23d64:	e5832000 	str	r2, [r3]
   23d68:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   23d6c:	e3a02027 	mov	r2, #39	; 0x27
   23d70:	e59f1008 	ldr	r1, [pc, #8]	; 23d80 <_DeviceNameService+0x98>
   23d74:	e59f0010 	ldr	r0, [pc, #16]	; 23d8c <_DeviceNameService+0xa4>
   23d78:	ebffcea8 	bl	17820 <uspi_assertion_failed>
   23d7c:	eaffffdc 	b	23cf4 <_DeviceNameService+0xc>
   23d80:	000317ac 	.word	0x000317ac
   23d84:	000317d0 	.word	0x000317d0
   23d88:	00080b00 	.word	0x00080b00
   23d8c:	000306f0 	.word	0x000306f0

00023d90 <DeviceNameServiceAddDevice>:
   23d90:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   23d94:	e2506000 	subs	r6, r0, #0
   23d98:	e1a05001 	mov	r5, r1
   23d9c:	e1a07002 	mov	r7, r2
   23da0:	e1a08003 	mov	r8, r3
   23da4:	0a00001b 	beq	23e18 <DeviceNameServiceAddDevice+0x88>
   23da8:	e3a00010 	mov	r0, #16
   23dac:	ebffce74 	bl	17784 <malloc>
   23db0:	e2504000 	subs	r4, r0, #0
   23db4:	0a00001f 	beq	23e38 <DeviceNameServiceAddDevice+0xa8>
   23db8:	e3550000 	cmp	r5, #0
   23dbc:	0a000023 	beq	23e50 <DeviceNameServiceAddDevice+0xc0>
   23dc0:	e1a00005 	mov	r0, r5
   23dc4:	eb000deb 	bl	27578 <uspi_strlen>
   23dc8:	e2800001 	add	r0, r0, #1
   23dcc:	ebffce6c 	bl	17784 <malloc>
   23dd0:	e3500000 	cmp	r0, #0
   23dd4:	e5840004 	str	r0, [r4, #4]
   23dd8:	0a000021 	beq	23e64 <DeviceNameServiceAddDevice+0xd4>
   23ddc:	e1a01005 	mov	r1, r5
   23de0:	eb000e0a 	bl	27610 <uspi_strcpy>
   23de4:	e3570000 	cmp	r7, #0
   23de8:	0a000005 	beq	23e04 <DeviceNameServiceAddDevice+0x74>
   23dec:	e5963000 	ldr	r3, [r6]
   23df0:	e5847008 	str	r7, [r4, #8]
   23df4:	e584800c 	str	r8, [r4, #12]
   23df8:	e5843000 	str	r3, [r4]
   23dfc:	e5864000 	str	r4, [r6]
   23e00:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   23e04:	e3a02047 	mov	r2, #71	; 0x47
   23e08:	e59f106c 	ldr	r1, [pc, #108]	; 23e7c <DeviceNameServiceAddDevice+0xec>
   23e0c:	e59f006c 	ldr	r0, [pc, #108]	; 23e80 <DeviceNameServiceAddDevice+0xf0>
   23e10:	ebffce82 	bl	17820 <uspi_assertion_failed>
   23e14:	eafffff4 	b	23dec <DeviceNameServiceAddDevice+0x5c>
   23e18:	e3a0203d 	mov	r2, #61	; 0x3d
   23e1c:	e59f1058 	ldr	r1, [pc, #88]	; 23e7c <DeviceNameServiceAddDevice+0xec>
   23e20:	e59f005c 	ldr	r0, [pc, #92]	; 23e84 <DeviceNameServiceAddDevice+0xf4>
   23e24:	ebffce7d 	bl	17820 <uspi_assertion_failed>
   23e28:	e3a00010 	mov	r0, #16
   23e2c:	ebffce54 	bl	17784 <malloc>
   23e30:	e2504000 	subs	r4, r0, #0
   23e34:	1affffdf 	bne	23db8 <DeviceNameServiceAddDevice+0x28>
   23e38:	e3a02040 	mov	r2, #64	; 0x40
   23e3c:	e59f1038 	ldr	r1, [pc, #56]	; 23e7c <DeviceNameServiceAddDevice+0xec>
   23e40:	e59f0040 	ldr	r0, [pc, #64]	; 23e88 <DeviceNameServiceAddDevice+0xf8>
   23e44:	ebffce75 	bl	17820 <uspi_assertion_failed>
   23e48:	e3550000 	cmp	r5, #0
   23e4c:	1affffdb 	bne	23dc0 <DeviceNameServiceAddDevice+0x30>
   23e50:	e3a02042 	mov	r2, #66	; 0x42
   23e54:	e59f1020 	ldr	r1, [pc, #32]	; 23e7c <DeviceNameServiceAddDevice+0xec>
   23e58:	e59f002c 	ldr	r0, [pc, #44]	; 23e8c <DeviceNameServiceAddDevice+0xfc>
   23e5c:	ebffce6f 	bl	17820 <uspi_assertion_failed>
   23e60:	eaffffd6 	b	23dc0 <DeviceNameServiceAddDevice+0x30>
   23e64:	e59f0024 	ldr	r0, [pc, #36]	; 23e90 <DeviceNameServiceAddDevice+0x100>
   23e68:	e3a02044 	mov	r2, #68	; 0x44
   23e6c:	e59f1008 	ldr	r1, [pc, #8]	; 23e7c <DeviceNameServiceAddDevice+0xec>
   23e70:	ebffce6a 	bl	17820 <uspi_assertion_failed>
   23e74:	e5940004 	ldr	r0, [r4, #4]
   23e78:	eaffffd7 	b	23ddc <DeviceNameServiceAddDevice+0x4c>
   23e7c:	000317ac 	.word	0x000317ac
   23e80:	00031208 	.word	0x00031208
   23e84:	000306f0 	.word	0x000306f0
   23e88:	000306c8 	.word	0x000306c8
   23e8c:	000317e0 	.word	0x000317e0
   23e90:	000317ec 	.word	0x000317ec

00023e94 <DeviceNameServiceGetDevice>:
   23e94:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   23e98:	e2504000 	subs	r4, r0, #0
   23e9c:	e1a05001 	mov	r5, r1
   23ea0:	e1a06002 	mov	r6, r2
   23ea4:	0a000025 	beq	23f40 <DeviceNameServiceGetDevice+0xac>
   23ea8:	e3550000 	cmp	r5, #0
   23eac:	0a000029 	beq	23f58 <DeviceNameServiceGetDevice+0xc4>
   23eb0:	e5944000 	ldr	r4, [r4]
   23eb4:	e3540000 	cmp	r4, #0
   23eb8:	0a000015 	beq	23f14 <DeviceNameServiceGetDevice+0x80>
   23ebc:	e59f80a8 	ldr	r8, [pc, #168]	; 23f6c <DeviceNameServiceGetDevice+0xd8>
   23ec0:	e59f70a8 	ldr	r7, [pc, #168]	; 23f70 <DeviceNameServiceGetDevice+0xdc>
   23ec4:	ea000009 	b	23ef0 <DeviceNameServiceGetDevice+0x5c>
   23ec8:	e1a00005 	mov	r0, r5
   23ecc:	eb000db3 	bl	275a0 <uspi_strcmp>
   23ed0:	e3500000 	cmp	r0, #0
   23ed4:	1a000002 	bne	23ee4 <DeviceNameServiceGetDevice+0x50>
   23ed8:	e594300c 	ldr	r3, [r4, #12]
   23edc:	e1530006 	cmp	r3, r6
   23ee0:	0a00000d 	beq	23f1c <DeviceNameServiceGetDevice+0x88>
   23ee4:	e5944000 	ldr	r4, [r4]
   23ee8:	e3540000 	cmp	r4, #0
   23eec:	0a000008 	beq	23f14 <DeviceNameServiceGetDevice+0x80>
   23ef0:	e5941004 	ldr	r1, [r4, #4]
   23ef4:	e3510000 	cmp	r1, #0
   23ef8:	1afffff2 	bne	23ec8 <DeviceNameServiceGetDevice+0x34>
   23efc:	e1a01008 	mov	r1, r8
   23f00:	e3a02058 	mov	r2, #88	; 0x58
   23f04:	e1a00007 	mov	r0, r7
   23f08:	ebffce44 	bl	17820 <uspi_assertion_failed>
   23f0c:	e5941004 	ldr	r1, [r4, #4]
   23f10:	eaffffec 	b	23ec8 <DeviceNameServiceGetDevice+0x34>
   23f14:	e3a00000 	mov	r0, #0
   23f18:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   23f1c:	e5940008 	ldr	r0, [r4, #8]
   23f20:	e3500000 	cmp	r0, #0
   23f24:	18bd81f0 	popne	{r4, r5, r6, r7, r8, pc}
   23f28:	e3a0205c 	mov	r2, #92	; 0x5c
   23f2c:	e59f1038 	ldr	r1, [pc, #56]	; 23f6c <DeviceNameServiceGetDevice+0xd8>
   23f30:	e59f003c 	ldr	r0, [pc, #60]	; 23f74 <DeviceNameServiceGetDevice+0xe0>
   23f34:	ebffce39 	bl	17820 <uspi_assertion_failed>
   23f38:	e5940008 	ldr	r0, [r4, #8]
   23f3c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   23f40:	e3a02052 	mov	r2, #82	; 0x52
   23f44:	e59f1020 	ldr	r1, [pc, #32]	; 23f6c <DeviceNameServiceGetDevice+0xd8>
   23f48:	e59f0028 	ldr	r0, [pc, #40]	; 23f78 <DeviceNameServiceGetDevice+0xe4>
   23f4c:	ebffce33 	bl	17820 <uspi_assertion_failed>
   23f50:	e3550000 	cmp	r5, #0
   23f54:	1affffd5 	bne	23eb0 <DeviceNameServiceGetDevice+0x1c>
   23f58:	e3a02053 	mov	r2, #83	; 0x53
   23f5c:	e59f1008 	ldr	r1, [pc, #8]	; 23f6c <DeviceNameServiceGetDevice+0xd8>
   23f60:	e59f0014 	ldr	r0, [pc, #20]	; 23f7c <DeviceNameServiceGetDevice+0xe8>
   23f64:	ebffce2d 	bl	17820 <uspi_assertion_failed>
   23f68:	eaffffd0 	b	23eb0 <DeviceNameServiceGetDevice+0x1c>
   23f6c:	000317ac 	.word	0x000317ac
   23f70:	000317ec 	.word	0x000317ec
   23f74:	00031800 	.word	0x00031800
   23f78:	000306f0 	.word	0x000306f0
   23f7c:	000317e0 	.word	0x000317e0

00023f80 <DeviceNameServiceGet>:
   23f80:	e92d4010 	push	{r4, lr}
   23f84:	e59f4020 	ldr	r4, [pc, #32]	; 23fac <DeviceNameServiceGet+0x2c>
   23f88:	e5940000 	ldr	r0, [r4]
   23f8c:	e3500000 	cmp	r0, #0
   23f90:	18bd8010 	popne	{r4, pc}
   23f94:	e3a02068 	mov	r2, #104	; 0x68
   23f98:	e59f1010 	ldr	r1, [pc, #16]	; 23fb0 <DeviceNameServiceGet+0x30>
   23f9c:	e59f0010 	ldr	r0, [pc, #16]	; 23fb4 <DeviceNameServiceGet+0x34>
   23fa0:	ebffce1e 	bl	17820 <uspi_assertion_failed>
   23fa4:	e5940000 	ldr	r0, [r4]
   23fa8:	e8bd8010 	pop	{r4, pc}
   23fac:	00080b00 	.word	0x00080b00
   23fb0:	000317ac 	.word	0x000317ac
   23fb4:	00031814 	.word	0x00031814

00023fb8 <MACAddress>:
   23fb8:	e92d4010 	push	{r4, lr}
   23fbc:	e2504000 	subs	r4, r0, #0
   23fc0:	0a000002 	beq	23fd0 <MACAddress+0x18>
   23fc4:	e3a03000 	mov	r3, #0
   23fc8:	e5843000 	str	r3, [r4]
   23fcc:	e8bd8010 	pop	{r4, pc}
   23fd0:	e3a0201a 	mov	r2, #26
   23fd4:	e59f1008 	ldr	r1, [pc, #8]	; 23fe4 <MACAddress+0x2c>
   23fd8:	e59f0008 	ldr	r0, [pc, #8]	; 23fe8 <MACAddress+0x30>
   23fdc:	ebffce0f 	bl	17820 <uspi_assertion_failed>
   23fe0:	eafffff7 	b	23fc4 <MACAddress+0xc>
   23fe4:	00031824 	.word	0x00031824
   23fe8:	000306f0 	.word	0x000306f0

00023fec <_MACAddress>:
   23fec:	e92d4010 	push	{r4, lr}
   23ff0:	e2504000 	subs	r4, r0, #0
   23ff4:	0a000002 	beq	24004 <_MACAddress+0x18>
   23ff8:	e3a03000 	mov	r3, #0
   23ffc:	e5843000 	str	r3, [r4]
   24000:	e8bd8010 	pop	{r4, pc}
   24004:	e3a02028 	mov	r2, #40	; 0x28
   24008:	e59f1008 	ldr	r1, [pc, #8]	; 24018 <_MACAddress+0x2c>
   2400c:	e59f0008 	ldr	r0, [pc, #8]	; 2401c <_MACAddress+0x30>
   24010:	ebffce02 	bl	17820 <uspi_assertion_failed>
   24014:	eafffff7 	b	23ff8 <_MACAddress+0xc>
   24018:	00031824 	.word	0x00031824
   2401c:	000306f0 	.word	0x000306f0

00024020 <MACAddressSet>:
   24020:	e92d4070 	push	{r4, r5, r6, lr}
   24024:	e2504000 	subs	r4, r0, #0
   24028:	e1a05001 	mov	r5, r1
   2402c:	0a00000d 	beq	24068 <MACAddressSet+0x48>
   24030:	e3550000 	cmp	r5, #0
   24034:	0a000006 	beq	24054 <MACAddressSet+0x34>
   24038:	e1a01005 	mov	r1, r5
   2403c:	e3a02006 	mov	r2, #6
   24040:	e2840004 	add	r0, r4, #4
   24044:	eb000d2b 	bl	274f8 <uspi_memcpy>
   24048:	e3a03001 	mov	r3, #1
   2404c:	e5843000 	str	r3, [r4]
   24050:	e8bd8070 	pop	{r4, r5, r6, pc}
   24054:	e3a02038 	mov	r2, #56	; 0x38
   24058:	e59f101c 	ldr	r1, [pc, #28]	; 2407c <MACAddressSet+0x5c>
   2405c:	e59f001c 	ldr	r0, [pc, #28]	; 24080 <MACAddressSet+0x60>
   24060:	ebffcdee 	bl	17820 <uspi_assertion_failed>
   24064:	eafffff3 	b	24038 <MACAddressSet+0x18>
   24068:	e3a02037 	mov	r2, #55	; 0x37
   2406c:	e59f1008 	ldr	r1, [pc, #8]	; 2407c <MACAddressSet+0x5c>
   24070:	e59f000c 	ldr	r0, [pc, #12]	; 24084 <MACAddressSet+0x64>
   24074:	ebffcde9 	bl	17820 <uspi_assertion_failed>
   24078:	eaffffec 	b	24030 <MACAddressSet+0x10>
   2407c:	00031824 	.word	0x00031824
   24080:	00031834 	.word	0x00031834
   24084:	000306f0 	.word	0x000306f0

00024088 <MACAddress2>:
   24088:	e92d4070 	push	{r4, r5, r6, lr}
   2408c:	e2504000 	subs	r4, r0, #0
   24090:	e1a05001 	mov	r5, r1
   24094:	0a000003 	beq	240a8 <MACAddress2+0x20>
   24098:	e1a01005 	mov	r1, r5
   2409c:	e1a00004 	mov	r0, r4
   240a0:	e8bd4070 	pop	{r4, r5, r6, lr}
   240a4:	eaffffdd 	b	24020 <MACAddressSet>
   240a8:	e59f1018 	ldr	r1, [pc, #24]	; 240c8 <MACAddress2+0x40>
   240ac:	e59f0018 	ldr	r0, [pc, #24]	; 240cc <MACAddress2+0x44>
   240b0:	e3a02021 	mov	r2, #33	; 0x21
   240b4:	ebffcdd9 	bl	17820 <uspi_assertion_failed>
   240b8:	e1a01005 	mov	r1, r5
   240bc:	e1a00004 	mov	r0, r4
   240c0:	e8bd4070 	pop	{r4, r5, r6, lr}
   240c4:	eaffffd5 	b	24020 <MACAddressSet>
   240c8:	00031824 	.word	0x00031824
   240cc:	000306f0 	.word	0x000306f0

000240d0 <MACAddressSetBroadcast>:
   240d0:	e92d4010 	push	{r4, lr}
   240d4:	e2504000 	subs	r4, r0, #0
   240d8:	0a000006 	beq	240f8 <MACAddressSetBroadcast+0x28>
   240dc:	e3a02006 	mov	r2, #6
   240e0:	e3a010ff 	mov	r1, #255	; 0xff
   240e4:	e2840004 	add	r0, r4, #4
   240e8:	eb000cf9 	bl	274d4 <uspi_memset>
   240ec:	e3a03001 	mov	r3, #1
   240f0:	e5843000 	str	r3, [r4]
   240f4:	e8bd8010 	pop	{r4, pc}
   240f8:	e3a02040 	mov	r2, #64	; 0x40
   240fc:	e59f1008 	ldr	r1, [pc, #8]	; 2410c <MACAddressSetBroadcast+0x3c>
   24100:	e59f0008 	ldr	r0, [pc, #8]	; 24110 <MACAddressSetBroadcast+0x40>
   24104:	ebffcdc5 	bl	17820 <uspi_assertion_failed>
   24108:	eafffff3 	b	240dc <MACAddressSetBroadcast+0xc>
   2410c:	00031824 	.word	0x00031824
   24110:	000306f0 	.word	0x000306f0

00024114 <MACAddressGet>:
   24114:	e92d4010 	push	{r4, lr}
   24118:	e2504000 	subs	r4, r0, #0
   2411c:	0a000008 	beq	24144 <MACAddressGet+0x30>
   24120:	e5943000 	ldr	r3, [r4]
   24124:	e3530000 	cmp	r3, #0
   24128:	1a000003 	bne	2413c <MACAddressGet+0x28>
   2412c:	e3a02049 	mov	r2, #73	; 0x49
   24130:	e59f1020 	ldr	r1, [pc, #32]	; 24158 <MACAddressGet+0x44>
   24134:	e59f0020 	ldr	r0, [pc, #32]	; 2415c <MACAddressGet+0x48>
   24138:	ebffcdb8 	bl	17820 <uspi_assertion_failed>
   2413c:	e2840004 	add	r0, r4, #4
   24140:	e8bd8010 	pop	{r4, pc}
   24144:	e3a02048 	mov	r2, #72	; 0x48
   24148:	e59f1008 	ldr	r1, [pc, #8]	; 24158 <MACAddressGet+0x44>
   2414c:	e59f000c 	ldr	r0, [pc, #12]	; 24160 <MACAddressGet+0x4c>
   24150:	ebffcdb2 	bl	17820 <uspi_assertion_failed>
   24154:	eafffff1 	b	24120 <MACAddressGet+0xc>
   24158:	00031824 	.word	0x00031824
   2415c:	00030c54 	.word	0x00030c54
   24160:	000306f0 	.word	0x000306f0

00024164 <MACAddressIsEqual>:
   24164:	e92d4070 	push	{r4, r5, r6, lr}
   24168:	e2504000 	subs	r4, r0, #0
   2416c:	e1a05001 	mov	r5, r1
   24170:	0a00000f 	beq	241b4 <MACAddressIsEqual+0x50>
   24174:	e5943000 	ldr	r3, [r4]
   24178:	e3530000 	cmp	r3, #0
   2417c:	1a000003 	bne	24190 <MACAddressIsEqual+0x2c>
   24180:	e3a02030 	mov	r2, #48	; 0x30
   24184:	e59f103c 	ldr	r1, [pc, #60]	; 241c8 <MACAddressIsEqual+0x64>
   24188:	e59f003c 	ldr	r0, [pc, #60]	; 241cc <MACAddressIsEqual+0x68>
   2418c:	ebffcda3 	bl	17820 <uspi_assertion_failed>
   24190:	e1a00005 	mov	r0, r5
   24194:	ebffffde 	bl	24114 <MACAddressGet>
   24198:	e3a02006 	mov	r2, #6
   2419c:	e1a01000 	mov	r1, r0
   241a0:	e2840004 	add	r0, r4, #4
   241a4:	eb000cdc 	bl	2751c <uspi_memcmp>
   241a8:	e16f0f10 	clz	r0, r0
   241ac:	e1a002a0 	lsr	r0, r0, #5
   241b0:	e8bd8070 	pop	{r4, r5, r6, pc}
   241b4:	e3a0202f 	mov	r2, #47	; 0x2f
   241b8:	e59f1008 	ldr	r1, [pc, #8]	; 241c8 <MACAddressIsEqual+0x64>
   241bc:	e59f000c 	ldr	r0, [pc, #12]	; 241d0 <MACAddressIsEqual+0x6c>
   241c0:	ebffcd96 	bl	17820 <uspi_assertion_failed>
   241c4:	eaffffea 	b	24174 <MACAddressIsEqual+0x10>
   241c8:	00031824 	.word	0x00031824
   241cc:	00030c54 	.word	0x00030c54
   241d0:	000306f0 	.word	0x000306f0

000241d4 <MACAddressCopyTo>:
   241d4:	e92d4070 	push	{r4, r5, r6, lr}
   241d8:	e2505000 	subs	r5, r0, #0
   241dc:	e1a04001 	mov	r4, r1
   241e0:	0a000014 	beq	24238 <MACAddressCopyTo+0x64>
   241e4:	e5953000 	ldr	r3, [r5]
   241e8:	e3530000 	cmp	r3, #0
   241ec:	0a000006 	beq	2420c <MACAddressCopyTo+0x38>
   241f0:	e3540000 	cmp	r4, #0
   241f4:	0a00000a 	beq	24224 <MACAddressCopyTo+0x50>
   241f8:	e2851004 	add	r1, r5, #4
   241fc:	e1a00004 	mov	r0, r4
   24200:	e8bd4070 	pop	{r4, r5, r6, lr}
   24204:	e3a02006 	mov	r2, #6
   24208:	ea000cba 	b	274f8 <uspi_memcpy>
   2420c:	e3a02051 	mov	r2, #81	; 0x51
   24210:	e59f1034 	ldr	r1, [pc, #52]	; 2424c <MACAddressCopyTo+0x78>
   24214:	e59f0034 	ldr	r0, [pc, #52]	; 24250 <MACAddressCopyTo+0x7c>
   24218:	ebffcd80 	bl	17820 <uspi_assertion_failed>
   2421c:	e3540000 	cmp	r4, #0
   24220:	1afffff4 	bne	241f8 <MACAddressCopyTo+0x24>
   24224:	e3a02052 	mov	r2, #82	; 0x52
   24228:	e59f101c 	ldr	r1, [pc, #28]	; 2424c <MACAddressCopyTo+0x78>
   2422c:	e59f0020 	ldr	r0, [pc, #32]	; 24254 <MACAddressCopyTo+0x80>
   24230:	ebffcd7a 	bl	17820 <uspi_assertion_failed>
   24234:	eaffffef 	b	241f8 <MACAddressCopyTo+0x24>
   24238:	e3a02050 	mov	r2, #80	; 0x50
   2423c:	e59f1008 	ldr	r1, [pc, #8]	; 2424c <MACAddressCopyTo+0x78>
   24240:	e59f0010 	ldr	r0, [pc, #16]	; 24258 <MACAddressCopyTo+0x84>
   24244:	ebffcd75 	bl	17820 <uspi_assertion_failed>
   24248:	eaffffe5 	b	241e4 <MACAddressCopyTo+0x10>
   2424c:	00031824 	.word	0x00031824
   24250:	00030c54 	.word	0x00030c54
   24254:	00031c90 	.word	0x00031c90
   24258:	000306f0 	.word	0x000306f0

0002425c <MACAddressIsBroadcast>:
   2425c:	e92d4010 	push	{r4, lr}
   24260:	e2504000 	subs	r4, r0, #0
   24264:	0a000012 	beq	242b4 <MACAddressIsBroadcast+0x58>
   24268:	e5943000 	ldr	r3, [r4]
   2426c:	e3530000 	cmp	r3, #0
   24270:	0a000008 	beq	24298 <MACAddressIsBroadcast+0x3c>
   24274:	e2843004 	add	r3, r4, #4
   24278:	e284200a 	add	r2, r4, #10
   2427c:	e4d31001 	ldrb	r1, [r3], #1
   24280:	e35100ff 	cmp	r1, #255	; 0xff
   24284:	1a000008 	bne	242ac <MACAddressIsBroadcast+0x50>
   24288:	e1530002 	cmp	r3, r2
   2428c:	1afffffa 	bne	2427c <MACAddressIsBroadcast+0x20>
   24290:	e3a00001 	mov	r0, #1
   24294:	e8bd8010 	pop	{r4, pc}
   24298:	e3a0205a 	mov	r2, #90	; 0x5a
   2429c:	e59f1024 	ldr	r1, [pc, #36]	; 242c8 <MACAddressIsBroadcast+0x6c>
   242a0:	e59f0024 	ldr	r0, [pc, #36]	; 242cc <MACAddressIsBroadcast+0x70>
   242a4:	ebffcd5d 	bl	17820 <uspi_assertion_failed>
   242a8:	eafffff1 	b	24274 <MACAddressIsBroadcast+0x18>
   242ac:	e3a00000 	mov	r0, #0
   242b0:	e8bd8010 	pop	{r4, pc}
   242b4:	e3a02059 	mov	r2, #89	; 0x59
   242b8:	e59f1008 	ldr	r1, [pc, #8]	; 242c8 <MACAddressIsBroadcast+0x6c>
   242bc:	e59f000c 	ldr	r0, [pc, #12]	; 242d0 <MACAddressIsBroadcast+0x74>
   242c0:	ebffcd56 	bl	17820 <uspi_assertion_failed>
   242c4:	eaffffe7 	b	24268 <MACAddressIsBroadcast+0xc>
   242c8:	00031824 	.word	0x00031824
   242cc:	00030c54 	.word	0x00030c54
   242d0:	000306f0 	.word	0x000306f0

000242d4 <MACAddressGetSize>:
   242d4:	e3a00006 	mov	r0, #6
   242d8:	e12fff1e 	bx	lr

000242dc <MACAddressFormat>:
   242dc:	e92d4030 	push	{r4, r5, lr}
   242e0:	e2504000 	subs	r4, r0, #0
   242e4:	e24dd014 	sub	sp, sp, #20
   242e8:	e1a05001 	mov	r5, r1
   242ec:	0a00001e 	beq	2436c <MACAddressFormat+0x90>
   242f0:	e5943000 	ldr	r3, [r4]
   242f4:	e3530000 	cmp	r3, #0
   242f8:	0a000010 	beq	24340 <MACAddressFormat+0x64>
   242fc:	e3550000 	cmp	r5, #0
   24300:	0a000014 	beq	24358 <MACAddressFormat+0x7c>
   24304:	e5d41009 	ldrb	r1, [r4, #9]
   24308:	e5d43005 	ldrb	r3, [r4, #5]
   2430c:	e5d42004 	ldrb	r2, [r4, #4]
   24310:	e58d100c 	str	r1, [sp, #12]
   24314:	e5d41008 	ldrb	r1, [r4, #8]
   24318:	e1a00005 	mov	r0, r5
   2431c:	e58d1008 	str	r1, [sp, #8]
   24320:	e5d41007 	ldrb	r1, [r4, #7]
   24324:	e58d1004 	str	r1, [sp, #4]
   24328:	e5d41006 	ldrb	r1, [r4, #6]
   2432c:	e58d1000 	str	r1, [sp]
   24330:	e59f1048 	ldr	r1, [pc, #72]	; 24380 <MACAddressFormat+0xa4>
   24334:	eb000c20 	bl	273bc <StringFormat>
   24338:	e28dd014 	add	sp, sp, #20
   2433c:	e8bd8030 	pop	{r4, r5, pc}
   24340:	e3a0206f 	mov	r2, #111	; 0x6f
   24344:	e59f1038 	ldr	r1, [pc, #56]	; 24384 <MACAddressFormat+0xa8>
   24348:	e59f0038 	ldr	r0, [pc, #56]	; 24388 <MACAddressFormat+0xac>
   2434c:	ebffcd33 	bl	17820 <uspi_assertion_failed>
   24350:	e3550000 	cmp	r5, #0
   24354:	1affffea 	bne	24304 <MACAddressFormat+0x28>
   24358:	e3a02071 	mov	r2, #113	; 0x71
   2435c:	e59f1020 	ldr	r1, [pc, #32]	; 24384 <MACAddressFormat+0xa8>
   24360:	e59f0024 	ldr	r0, [pc, #36]	; 2438c <MACAddressFormat+0xb0>
   24364:	ebffcd2d 	bl	17820 <uspi_assertion_failed>
   24368:	eaffffe5 	b	24304 <MACAddressFormat+0x28>
   2436c:	e3a0206e 	mov	r2, #110	; 0x6e
   24370:	e59f100c 	ldr	r1, [pc, #12]	; 24384 <MACAddressFormat+0xa8>
   24374:	e59f0014 	ldr	r0, [pc, #20]	; 24390 <MACAddressFormat+0xb4>
   24378:	ebffcd28 	bl	17820 <uspi_assertion_failed>
   2437c:	eaffffdb 	b	242f0 <MACAddressFormat+0x14>
   24380:	00031844 	.word	0x00031844
   24384:	00031824 	.word	0x00031824
   24388:	00030c54 	.word	0x00030c54
   2438c:	00030e94 	.word	0x00030e94
   24390:	000306f0 	.word	0x000306f0

00024394 <USBFunction>:
   24394:	e92d4070 	push	{r4, r5, r6, lr}
   24398:	e2504000 	subs	r4, r0, #0
   2439c:	e1a06001 	mov	r6, r1
   243a0:	e1a05002 	mov	r5, r2
   243a4:	0a000017 	beq	24408 <USBFunction+0x74>
   243a8:	e3a03000 	mov	r3, #0
   243ac:	e1560003 	cmp	r6, r3
   243b0:	e8840048 	stm	r4, {r3, r6}
   243b4:	0a00001b 	beq	24428 <USBFunction+0x94>
   243b8:	e3a0001c 	mov	r0, #28
   243bc:	ebffccf0 	bl	17784 <malloc>
   243c0:	e3500000 	cmp	r0, #0
   243c4:	e5840008 	str	r0, [r4, #8]
   243c8:	0a00001b 	beq	2443c <USBFunction+0xa8>
   243cc:	e3550000 	cmp	r5, #0
   243d0:	0a00001f 	beq	24454 <USBFunction+0xc0>
   243d4:	e1a01005 	mov	r1, r5
   243d8:	e5940008 	ldr	r0, [r4, #8]
   243dc:	eb001d75 	bl	2b9b8 <USBConfigurationParserCopy>
   243e0:	e5940008 	ldr	r0, [r4, #8]
   243e4:	eb001de8 	bl	2bb8c <USBConfigurationParserGetCurrentDescriptor>
   243e8:	e3500000 	cmp	r0, #0
   243ec:	e584000c 	str	r0, [r4, #12]
   243f0:	18bd8070 	popne	{r4, r5, r6, pc}
   243f4:	e3a0202c 	mov	r2, #44	; 0x2c
   243f8:	e8bd4070 	pop	{r4, r5, r6, lr}
   243fc:	e59f1064 	ldr	r1, [pc, #100]	; 24468 <USBFunction+0xd4>
   24400:	e59f0064 	ldr	r0, [pc, #100]	; 2446c <USBFunction+0xd8>
   24404:	eaffcd05 	b	17820 <uspi_assertion_failed>
   24408:	e3a0201f 	mov	r2, #31
   2440c:	e59f1054 	ldr	r1, [pc, #84]	; 24468 <USBFunction+0xd4>
   24410:	e59f0058 	ldr	r0, [pc, #88]	; 24470 <USBFunction+0xdc>
   24414:	ebffcd01 	bl	17820 <uspi_assertion_failed>
   24418:	e3a03000 	mov	r3, #0
   2441c:	e1560003 	cmp	r6, r3
   24420:	e8840048 	stm	r4, {r3, r6}
   24424:	1affffe3 	bne	243b8 <USBFunction+0x24>
   24428:	e3a02024 	mov	r2, #36	; 0x24
   2442c:	e59f1034 	ldr	r1, [pc, #52]	; 24468 <USBFunction+0xd4>
   24430:	e59f003c 	ldr	r0, [pc, #60]	; 24474 <USBFunction+0xe0>
   24434:	ebffccf9 	bl	17820 <uspi_assertion_failed>
   24438:	eaffffde 	b	243b8 <USBFunction+0x24>
   2443c:	e3a02027 	mov	r2, #39	; 0x27
   24440:	e59f1020 	ldr	r1, [pc, #32]	; 24468 <USBFunction+0xd4>
   24444:	e59f002c 	ldr	r0, [pc, #44]	; 24478 <USBFunction+0xe4>
   24448:	ebffccf4 	bl	17820 <uspi_assertion_failed>
   2444c:	e3550000 	cmp	r5, #0
   24450:	1affffdf 	bne	243d4 <USBFunction+0x40>
   24454:	e3a02028 	mov	r2, #40	; 0x28
   24458:	e59f1008 	ldr	r1, [pc, #8]	; 24468 <USBFunction+0xd4>
   2445c:	e59f0018 	ldr	r0, [pc, #24]	; 2447c <USBFunction+0xe8>
   24460:	ebffccee 	bl	17820 <uspi_assertion_failed>
   24464:	eaffffda 	b	243d4 <USBFunction+0x40>
   24468:	0003186c 	.word	0x0003186c
   2446c:	00031890 	.word	0x00031890
   24470:	000306f0 	.word	0x000306f0
   24474:	00030d90 	.word	0x00030d90
   24478:	00030f08 	.word	0x00030f08
   2447c:	0003187c 	.word	0x0003187c

00024480 <USBFunctionCopy>:
   24480:	e92d4070 	push	{r4, r5, r6, lr}
   24484:	e2504000 	subs	r4, r0, #0
   24488:	e1a05001 	mov	r5, r1
   2448c:	0a000019 	beq	244f8 <USBFunctionCopy+0x78>
   24490:	e3550000 	cmp	r5, #0
   24494:	0a00001d 	beq	24510 <USBFunctionCopy+0x90>
   24498:	e1c520d0 	ldrd	r2, [r5]
   2449c:	e3530000 	cmp	r3, #0
   244a0:	e1c420f0 	strd	r2, [r4]
   244a4:	0a00001e 	beq	24524 <USBFunctionCopy+0xa4>
   244a8:	e3a0001c 	mov	r0, #28
   244ac:	ebffccb4 	bl	17784 <malloc>
   244b0:	e3500000 	cmp	r0, #0
   244b4:	e5840008 	str	r0, [r4, #8]
   244b8:	0a00001e 	beq	24538 <USBFunctionCopy+0xb8>
   244bc:	e5951008 	ldr	r1, [r5, #8]
   244c0:	e3510000 	cmp	r1, #0
   244c4:	0a000022 	beq	24554 <USBFunctionCopy+0xd4>
   244c8:	e5940008 	ldr	r0, [r4, #8]
   244cc:	eb001d39 	bl	2b9b8 <USBConfigurationParserCopy>
   244d0:	e5940008 	ldr	r0, [r4, #8]
   244d4:	eb001dac 	bl	2bb8c <USBConfigurationParserGetCurrentDescriptor>
   244d8:	e3500000 	cmp	r0, #0
   244dc:	e584000c 	str	r0, [r4, #12]
   244e0:	18bd8070 	popne	{r4, r5, r6, pc}
   244e4:	e3a0203f 	mov	r2, #63	; 0x3f
   244e8:	e8bd4070 	pop	{r4, r5, r6, lr}
   244ec:	e59f1078 	ldr	r1, [pc, #120]	; 2456c <USBFunctionCopy+0xec>
   244f0:	e59f0078 	ldr	r0, [pc, #120]	; 24570 <USBFunctionCopy+0xf0>
   244f4:	eaffccc9 	b	17820 <uspi_assertion_failed>
   244f8:	e3a02031 	mov	r2, #49	; 0x31
   244fc:	e59f1068 	ldr	r1, [pc, #104]	; 2456c <USBFunctionCopy+0xec>
   24500:	e59f006c 	ldr	r0, [pc, #108]	; 24574 <USBFunctionCopy+0xf4>
   24504:	ebffccc5 	bl	17820 <uspi_assertion_failed>
   24508:	e3550000 	cmp	r5, #0
   2450c:	1affffe1 	bne	24498 <USBFunctionCopy+0x18>
   24510:	e3a02032 	mov	r2, #50	; 0x32
   24514:	e59f1050 	ldr	r1, [pc, #80]	; 2456c <USBFunctionCopy+0xec>
   24518:	e59f0058 	ldr	r0, [pc, #88]	; 24578 <USBFunctionCopy+0xf8>
   2451c:	ebffccbf 	bl	17820 <uspi_assertion_failed>
   24520:	eaffffdc 	b	24498 <USBFunctionCopy+0x18>
   24524:	e3a02037 	mov	r2, #55	; 0x37
   24528:	e59f103c 	ldr	r1, [pc, #60]	; 2456c <USBFunctionCopy+0xec>
   2452c:	e59f0048 	ldr	r0, [pc, #72]	; 2457c <USBFunctionCopy+0xfc>
   24530:	ebffccba 	bl	17820 <uspi_assertion_failed>
   24534:	eaffffdb 	b	244a8 <USBFunctionCopy+0x28>
   24538:	e59f102c 	ldr	r1, [pc, #44]	; 2456c <USBFunctionCopy+0xec>
   2453c:	e3a0203a 	mov	r2, #58	; 0x3a
   24540:	e59f0038 	ldr	r0, [pc, #56]	; 24580 <USBFunctionCopy+0x100>
   24544:	ebffccb5 	bl	17820 <uspi_assertion_failed>
   24548:	e5951008 	ldr	r1, [r5, #8]
   2454c:	e3510000 	cmp	r1, #0
   24550:	1affffdc 	bne	244c8 <USBFunctionCopy+0x48>
   24554:	e59f1010 	ldr	r1, [pc, #16]	; 2456c <USBFunctionCopy+0xec>
   24558:	e3a0203b 	mov	r2, #59	; 0x3b
   2455c:	e59f0020 	ldr	r0, [pc, #32]	; 24584 <USBFunctionCopy+0x104>
   24560:	ebffccae 	bl	17820 <uspi_assertion_failed>
   24564:	e5951008 	ldr	r1, [r5, #8]
   24568:	eaffffd6 	b	244c8 <USBFunctionCopy+0x48>
   2456c:	0003186c 	.word	0x0003186c
   24570:	00031890 	.word	0x00031890
   24574:	000306f0 	.word	0x000306f0
   24578:	000318b0 	.word	0x000318b0
   2457c:	00030d90 	.word	0x00030d90
   24580:	00030f08 	.word	0x00030f08
   24584:	000318c0 	.word	0x000318c0

00024588 <_USBFunction>:
   24588:	e92d4070 	push	{r4, r5, r6, lr}
   2458c:	e2504000 	subs	r4, r0, #0
   24590:	0a000009 	beq	245bc <_USBFunction+0x34>
   24594:	e3a05000 	mov	r5, #0
   24598:	e5940008 	ldr	r0, [r4, #8]
   2459c:	e584500c 	str	r5, [r4, #12]
   245a0:	eb001d22 	bl	2ba30 <_USBConfigurationParser>
   245a4:	e5940008 	ldr	r0, [r4, #8]
   245a8:	ebffcc76 	bl	17788 <free>
   245ac:	e5845008 	str	r5, [r4, #8]
   245b0:	e5845004 	str	r5, [r4, #4]
   245b4:	e5845000 	str	r5, [r4]
   245b8:	e8bd8070 	pop	{r4, r5, r6, pc}
   245bc:	e3a02044 	mov	r2, #68	; 0x44
   245c0:	e59f1008 	ldr	r1, [pc, #8]	; 245d0 <_USBFunction+0x48>
   245c4:	e59f0008 	ldr	r0, [pc, #8]	; 245d4 <_USBFunction+0x4c>
   245c8:	ebffcc94 	bl	17820 <uspi_assertion_failed>
   245cc:	eafffff0 	b	24594 <_USBFunction+0xc>
   245d0:	0003186c 	.word	0x0003186c
   245d4:	000306f0 	.word	0x000306f0

000245d8 <USBFunctionGetInterfaceName>:
   245d8:	e92d4030 	push	{r4, r5, lr}
   245dc:	e2505000 	subs	r5, r0, #0
   245e0:	e24dd00c 	sub	sp, sp, #12
   245e4:	0a00001f 	beq	24668 <USBFunctionGetInterfaceName+0x90>
   245e8:	e3a0000c 	mov	r0, #12
   245ec:	ebffcc64 	bl	17784 <malloc>
   245f0:	e2504000 	subs	r4, r0, #0
   245f4:	0a000016 	beq	24654 <USBFunctionGetInterfaceName+0x7c>
   245f8:	e59f107c 	ldr	r1, [pc, #124]	; 2467c <USBFunctionGetInterfaceName+0xa4>
   245fc:	e1a00004 	mov	r0, r4
   24600:	eb0008ba 	bl	268f0 <String2>
   24604:	e595100c 	ldr	r1, [r5, #12]
   24608:	e3510000 	cmp	r1, #0
   2460c:	0a000004 	beq	24624 <USBFunctionGetInterfaceName+0x4c>
   24610:	e5d12005 	ldrb	r2, [r1, #5]
   24614:	e2423001 	sub	r3, r2, #1
   24618:	e6ef3073 	uxtb	r3, r3
   2461c:	e35300fd 	cmp	r3, #253	; 0xfd
   24620:	9a000002 	bls	24630 <USBFunctionGetInterfaceName+0x58>
   24624:	e1a00004 	mov	r0, r4
   24628:	e28dd00c 	add	sp, sp, #12
   2462c:	e8bd8030 	pop	{r4, r5, pc}
   24630:	e5d13006 	ldrb	r3, [r1, #6]
   24634:	e5d11007 	ldrb	r1, [r1, #7]
   24638:	e1a00004 	mov	r0, r4
   2463c:	e58d1000 	str	r1, [sp]
   24640:	e59f1038 	ldr	r1, [pc, #56]	; 24680 <USBFunctionGetInterfaceName+0xa8>
   24644:	eb000b5c 	bl	273bc <StringFormat>
   24648:	e1a00004 	mov	r0, r4
   2464c:	e28dd00c 	add	sp, sp, #12
   24650:	e8bd8030 	pop	{r4, r5, pc}
   24654:	e3a0206b 	mov	r2, #107	; 0x6b
   24658:	e59f1024 	ldr	r1, [pc, #36]	; 24684 <USBFunctionGetInterfaceName+0xac>
   2465c:	e59f0024 	ldr	r0, [pc, #36]	; 24688 <USBFunctionGetInterfaceName+0xb0>
   24660:	ebffcc6e 	bl	17820 <uspi_assertion_failed>
   24664:	eaffffe3 	b	245f8 <USBFunctionGetInterfaceName+0x20>
   24668:	e3a02068 	mov	r2, #104	; 0x68
   2466c:	e59f1010 	ldr	r1, [pc, #16]	; 24684 <USBFunctionGetInterfaceName+0xac>
   24670:	e59f0014 	ldr	r0, [pc, #20]	; 2468c <USBFunctionGetInterfaceName+0xb4>
   24674:	ebffcc69 	bl	17820 <uspi_assertion_failed>
   24678:	eaffffda 	b	245e8 <USBFunctionGetInterfaceName+0x10>
   2467c:	0002fd88 	.word	0x0002fd88
   24680:	000318e0 	.word	0x000318e0
   24684:	0003186c 	.word	0x0003186c
   24688:	00030e94 	.word	0x00030e94
   2468c:	000306f0 	.word	0x000306f0

00024690 <USBFunctionGetNumEndpoints>:
   24690:	e92d4010 	push	{r4, lr}
   24694:	e2504000 	subs	r4, r0, #0
   24698:	0a00000b 	beq	246cc <USBFunctionGetNumEndpoints+0x3c>
   2469c:	e594300c 	ldr	r3, [r4, #12]
   246a0:	e3530000 	cmp	r3, #0
   246a4:	0a000001 	beq	246b0 <USBFunctionGetNumEndpoints+0x20>
   246a8:	e5d30004 	ldrb	r0, [r3, #4]
   246ac:	e8bd8010 	pop	{r4, pc}
   246b0:	e3a0207e 	mov	r2, #126	; 0x7e
   246b4:	e59f1024 	ldr	r1, [pc, #36]	; 246e0 <USBFunctionGetNumEndpoints+0x50>
   246b8:	e59f0024 	ldr	r0, [pc, #36]	; 246e4 <USBFunctionGetNumEndpoints+0x54>
   246bc:	ebffcc57 	bl	17820 <uspi_assertion_failed>
   246c0:	e594300c 	ldr	r3, [r4, #12]
   246c4:	e5d30004 	ldrb	r0, [r3, #4]
   246c8:	e8bd8010 	pop	{r4, pc}
   246cc:	e3a0207d 	mov	r2, #125	; 0x7d
   246d0:	e59f1008 	ldr	r1, [pc, #8]	; 246e0 <USBFunctionGetNumEndpoints+0x50>
   246d4:	e59f000c 	ldr	r0, [pc, #12]	; 246e8 <USBFunctionGetNumEndpoints+0x58>
   246d8:	ebffcc50 	bl	17820 <uspi_assertion_failed>
   246dc:	eaffffee 	b	2469c <USBFunctionGetNumEndpoints+0xc>
   246e0:	0003186c 	.word	0x0003186c
   246e4:	00031890 	.word	0x00031890
   246e8:	000306f0 	.word	0x000306f0

000246ec <USBFunctionGetDevice>:
   246ec:	e92d4010 	push	{r4, lr}
   246f0:	e2504000 	subs	r4, r0, #0
   246f4:	0a000008 	beq	2471c <USBFunctionGetDevice+0x30>
   246f8:	e5940004 	ldr	r0, [r4, #4]
   246fc:	e3500000 	cmp	r0, #0
   24700:	18bd8010 	popne	{r4, pc}
   24704:	e3a02085 	mov	r2, #133	; 0x85
   24708:	e59f1020 	ldr	r1, [pc, #32]	; 24730 <USBFunctionGetDevice+0x44>
   2470c:	e59f0020 	ldr	r0, [pc, #32]	; 24734 <USBFunctionGetDevice+0x48>
   24710:	ebffcc42 	bl	17820 <uspi_assertion_failed>
   24714:	e5940004 	ldr	r0, [r4, #4]
   24718:	e8bd8010 	pop	{r4, pc}
   2471c:	e3a02084 	mov	r2, #132	; 0x84
   24720:	e59f1008 	ldr	r1, [pc, #8]	; 24730 <USBFunctionGetDevice+0x44>
   24724:	e59f000c 	ldr	r0, [pc, #12]	; 24738 <USBFunctionGetDevice+0x4c>
   24728:	ebffcc3c 	bl	17820 <uspi_assertion_failed>
   2472c:	eafffff1 	b	246f8 <USBFunctionGetDevice+0xc>
   24730:	0003186c 	.word	0x0003186c
   24734:	00030d90 	.word	0x00030d90
   24738:	000306f0 	.word	0x000306f0

0002473c <USBFunctionGetEndpoint0>:
   2473c:	e92d4010 	push	{r4, lr}
   24740:	e2504000 	subs	r4, r0, #0
   24744:	0a00000b 	beq	24778 <USBFunctionGetEndpoint0+0x3c>
   24748:	e5940004 	ldr	r0, [r4, #4]
   2474c:	e3500000 	cmp	r0, #0
   24750:	0a000001 	beq	2475c <USBFunctionGetEndpoint0+0x20>
   24754:	e8bd4010 	pop	{r4, lr}
   24758:	eafff466 	b	218f8 <USBDeviceGetEndpoint0>
   2475c:	e59f0028 	ldr	r0, [pc, #40]	; 2478c <USBFunctionGetEndpoint0+0x50>
   24760:	e3a0208c 	mov	r2, #140	; 0x8c
   24764:	e59f1024 	ldr	r1, [pc, #36]	; 24790 <USBFunctionGetEndpoint0+0x54>
   24768:	ebffcc2c 	bl	17820 <uspi_assertion_failed>
   2476c:	e5940004 	ldr	r0, [r4, #4]
   24770:	e8bd4010 	pop	{r4, lr}
   24774:	eafff45f 	b	218f8 <USBDeviceGetEndpoint0>
   24778:	e3a0208b 	mov	r2, #139	; 0x8b
   2477c:	e59f100c 	ldr	r1, [pc, #12]	; 24790 <USBFunctionGetEndpoint0+0x54>
   24780:	e59f000c 	ldr	r0, [pc, #12]	; 24794 <USBFunctionGetEndpoint0+0x58>
   24784:	ebffcc25 	bl	17820 <uspi_assertion_failed>
   24788:	eaffffee 	b	24748 <USBFunctionGetEndpoint0+0xc>
   2478c:	00030d90 	.word	0x00030d90
   24790:	0003186c 	.word	0x0003186c
   24794:	000306f0 	.word	0x000306f0

00024798 <USBFunctionGetHost>:
   24798:	e92d4010 	push	{r4, lr}
   2479c:	e2504000 	subs	r4, r0, #0
   247a0:	0a00000b 	beq	247d4 <USBFunctionGetHost+0x3c>
   247a4:	e5940004 	ldr	r0, [r4, #4]
   247a8:	e3500000 	cmp	r0, #0
   247ac:	0a000001 	beq	247b8 <USBFunctionGetHost+0x20>
   247b0:	e8bd4010 	pop	{r4, lr}
   247b4:	eafff465 	b	21950 <USBDeviceGetHost>
   247b8:	e59f0028 	ldr	r0, [pc, #40]	; 247e8 <USBFunctionGetHost+0x50>
   247bc:	e3a02093 	mov	r2, #147	; 0x93
   247c0:	e59f1024 	ldr	r1, [pc, #36]	; 247ec <USBFunctionGetHost+0x54>
   247c4:	ebffcc15 	bl	17820 <uspi_assertion_failed>
   247c8:	e5940004 	ldr	r0, [r4, #4]
   247cc:	e8bd4010 	pop	{r4, lr}
   247d0:	eafff45e 	b	21950 <USBDeviceGetHost>
   247d4:	e3a02092 	mov	r2, #146	; 0x92
   247d8:	e59f100c 	ldr	r1, [pc, #12]	; 247ec <USBFunctionGetHost+0x54>
   247dc:	e59f000c 	ldr	r0, [pc, #12]	; 247f0 <USBFunctionGetHost+0x58>
   247e0:	ebffcc0e 	bl	17820 <uspi_assertion_failed>
   247e4:	eaffffee 	b	247a4 <USBFunctionGetHost+0xc>
   247e8:	00030d90 	.word	0x00030d90
   247ec:	0003186c 	.word	0x0003186c
   247f0:	000306f0 	.word	0x000306f0

000247f4 <USBFunctionConfigure>:
   247f4:	e92d4070 	push	{r4, r5, r6, lr}
   247f8:	e2504000 	subs	r4, r0, #0
   247fc:	e24dd010 	sub	sp, sp, #16
   24800:	0a000022 	beq	24890 <USBFunctionConfigure+0x9c>
   24804:	e594300c 	ldr	r3, [r4, #12]
   24808:	e3530000 	cmp	r3, #0
   2480c:	0a000026 	beq	248ac <USBFunctionConfigure+0xb8>
   24810:	e5d33003 	ldrb	r3, [r3, #3]
   24814:	e3530000 	cmp	r3, #0
   24818:	1a000002 	bne	24828 <USBFunctionConfigure+0x34>
   2481c:	e3a00001 	mov	r0, #1
   24820:	e28dd010 	add	sp, sp, #16
   24824:	e8bd8070 	pop	{r4, r5, r6, pc}
   24828:	e1a00004 	mov	r0, r4
   2482c:	ebffffd9 	bl	24798 <USBFunctionGetHost>
   24830:	e3a05000 	mov	r5, #0
   24834:	e1a06000 	mov	r6, r0
   24838:	e1a00004 	mov	r0, r4
   2483c:	ebffffbe 	bl	2473c <USBFunctionGetEndpoint0>
   24840:	e594300c 	ldr	r3, [r4, #12]
   24844:	e58d500c 	str	r5, [sp, #12]
   24848:	e58d5008 	str	r5, [sp, #8]
   2484c:	e5d32002 	ldrb	r2, [r3, #2]
   24850:	e1a01000 	mov	r1, r0
   24854:	e58d2004 	str	r2, [sp, #4]
   24858:	e5d33003 	ldrb	r3, [r3, #3]
   2485c:	e1a00006 	mov	r0, r6
   24860:	e58d3000 	str	r3, [sp]
   24864:	e3a02001 	mov	r2, #1
   24868:	e3a0300b 	mov	r3, #11
   2486c:	ebffe86d 	bl	1ea28 <DWHCIDeviceControlMessage>
   24870:	e1500005 	cmp	r0, r5
   24874:	aaffffe8 	bge	2481c <USBFunctionConfigure+0x28>
   24878:	e59f0044 	ldr	r0, [pc, #68]	; 248c4 <USBFunctionConfigure+0xd0>
   2487c:	e59f2044 	ldr	r2, [pc, #68]	; 248c8 <USBFunctionConfigure+0xd4>
   24880:	e3a01001 	mov	r1, #1
   24884:	ebff93ca 	bl	97b4 <LogWrite>
   24888:	e1a00005 	mov	r0, r5
   2488c:	eaffffe3 	b	24820 <USBFunctionConfigure+0x2c>
   24890:	e3a02053 	mov	r2, #83	; 0x53
   24894:	e59f1030 	ldr	r1, [pc, #48]	; 248cc <USBFunctionConfigure+0xd8>
   24898:	e59f0030 	ldr	r0, [pc, #48]	; 248d0 <USBFunctionConfigure+0xdc>
   2489c:	ebffcbdf 	bl	17820 <uspi_assertion_failed>
   248a0:	e594300c 	ldr	r3, [r4, #12]
   248a4:	e3530000 	cmp	r3, #0
   248a8:	1affffd8 	bne	24810 <USBFunctionConfigure+0x1c>
   248ac:	e3a02055 	mov	r2, #85	; 0x55
   248b0:	e59f1014 	ldr	r1, [pc, #20]	; 248cc <USBFunctionConfigure+0xd8>
   248b4:	e59f0018 	ldr	r0, [pc, #24]	; 248d4 <USBFunctionConfigure+0xe0>
   248b8:	ebffcbd8 	bl	17820 <uspi_assertion_failed>
   248bc:	e594300c 	ldr	r3, [r4, #12]
   248c0:	eaffffd2 	b	24810 <USBFunctionConfigure+0x1c>
   248c4:	00031864 	.word	0x00031864
   248c8:	0003171c 	.word	0x0003171c
   248cc:	0003186c 	.word	0x0003186c
   248d0:	000306f0 	.word	0x000306f0
   248d4:	00031890 	.word	0x00031890

000248d8 <USBFunctionGetDescriptor>:
   248d8:	e92d4070 	push	{r4, r5, r6, lr}
   248dc:	e2504000 	subs	r4, r0, #0
   248e0:	e1a05001 	mov	r5, r1
   248e4:	0a00000d 	beq	24920 <USBFunctionGetDescriptor+0x48>
   248e8:	e5940008 	ldr	r0, [r4, #8]
   248ec:	e3500000 	cmp	r0, #0
   248f0:	0a000002 	beq	24900 <USBFunctionGetDescriptor+0x28>
   248f4:	e1a01005 	mov	r1, r5
   248f8:	e8bd4070 	pop	{r4, r5, r6, lr}
   248fc:	ea001c65 	b	2ba98 <USBConfigurationParserGetDescriptor>
   24900:	e59f102c 	ldr	r1, [pc, #44]	; 24934 <USBFunctionGetDescriptor+0x5c>
   24904:	e59f002c 	ldr	r0, [pc, #44]	; 24938 <USBFunctionGetDescriptor+0x60>
   24908:	e3a0209a 	mov	r2, #154	; 0x9a
   2490c:	ebffcbc3 	bl	17820 <uspi_assertion_failed>
   24910:	e5940008 	ldr	r0, [r4, #8]
   24914:	e1a01005 	mov	r1, r5
   24918:	e8bd4070 	pop	{r4, r5, r6, lr}
   2491c:	ea001c5d 	b	2ba98 <USBConfigurationParserGetDescriptor>
   24920:	e3a02099 	mov	r2, #153	; 0x99
   24924:	e59f1008 	ldr	r1, [pc, #8]	; 24934 <USBFunctionGetDescriptor+0x5c>
   24928:	e59f000c 	ldr	r0, [pc, #12]	; 2493c <USBFunctionGetDescriptor+0x64>
   2492c:	ebffcbbb 	bl	17820 <uspi_assertion_failed>
   24930:	eaffffec 	b	248e8 <USBFunctionGetDescriptor+0x10>
   24934:	0003186c 	.word	0x0003186c
   24938:	00030f08 	.word	0x00030f08
   2493c:	000306f0 	.word	0x000306f0

00024940 <USBFunctionConfigurationError>:
   24940:	e92d4070 	push	{r4, r5, r6, lr}
   24944:	e2504000 	subs	r4, r0, #0
   24948:	e1a05001 	mov	r5, r1
   2494c:	0a000010 	beq	24994 <USBFunctionConfigurationError+0x54>
   24950:	e5943008 	ldr	r3, [r4, #8]
   24954:	e3530000 	cmp	r3, #0
   24958:	0a000014 	beq	249b0 <USBFunctionConfigurationError+0x70>
   2495c:	e3550000 	cmp	r5, #0
   24960:	0a000003 	beq	24974 <USBFunctionConfigurationError+0x34>
   24964:	e1a01005 	mov	r1, r5
   24968:	e5940008 	ldr	r0, [r4, #8]
   2496c:	e8bd4070 	pop	{r4, r5, r6, lr}
   24970:	ea001c9b 	b	2bbe4 <USBConfigurationParserError>
   24974:	e59f1048 	ldr	r1, [pc, #72]	; 249c4 <USBFunctionConfigurationError+0x84>
   24978:	e59f0048 	ldr	r0, [pc, #72]	; 249c8 <USBFunctionConfigurationError+0x88>
   2497c:	e3a020a2 	mov	r2, #162	; 0xa2
   24980:	ebffcba6 	bl	17820 <uspi_assertion_failed>
   24984:	e1a01005 	mov	r1, r5
   24988:	e5940008 	ldr	r0, [r4, #8]
   2498c:	e8bd4070 	pop	{r4, r5, r6, lr}
   24990:	ea001c93 	b	2bbe4 <USBConfigurationParserError>
   24994:	e3a020a0 	mov	r2, #160	; 0xa0
   24998:	e59f1024 	ldr	r1, [pc, #36]	; 249c4 <USBFunctionConfigurationError+0x84>
   2499c:	e59f0028 	ldr	r0, [pc, #40]	; 249cc <USBFunctionConfigurationError+0x8c>
   249a0:	ebffcb9e 	bl	17820 <uspi_assertion_failed>
   249a4:	e5943008 	ldr	r3, [r4, #8]
   249a8:	e3530000 	cmp	r3, #0
   249ac:	1affffea 	bne	2495c <USBFunctionConfigurationError+0x1c>
   249b0:	e3a020a1 	mov	r2, #161	; 0xa1
   249b4:	e59f1008 	ldr	r1, [pc, #8]	; 249c4 <USBFunctionConfigurationError+0x84>
   249b8:	e59f0010 	ldr	r0, [pc, #16]	; 249d0 <USBFunctionConfigurationError+0x90>
   249bc:	ebffcb97 	bl	17820 <uspi_assertion_failed>
   249c0:	eaffffe5 	b	2495c <USBFunctionConfigurationError+0x1c>
   249c4:	0003186c 	.word	0x0003186c
   249c8:	000318ec 	.word	0x000318ec
   249cc:	000306f0 	.word	0x000306f0
   249d0:	00030f08 	.word	0x00030f08

000249d4 <USBFunctionSelectInterfaceByClass>:
   249d4:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   249d8:	e2504000 	subs	r4, r0, #0
   249dc:	e1a05001 	mov	r5, r1
   249e0:	e1a06002 	mov	r6, r2
   249e4:	e1a07003 	mov	r7, r3
   249e8:	0a00001e 	beq	24a68 <USBFunctionSelectInterfaceByClass+0x94>
   249ec:	e594300c 	ldr	r3, [r4, #12]
   249f0:	e3530000 	cmp	r3, #0
   249f4:	0a000022 	beq	24a84 <USBFunctionSelectInterfaceByClass+0xb0>
   249f8:	e5943008 	ldr	r3, [r4, #8]
   249fc:	e3530000 	cmp	r3, #0
   24a00:	0a000026 	beq	24aa0 <USBFunctionSelectInterfaceByClass+0xcc>
   24a04:	e5943004 	ldr	r3, [r4, #4]
   24a08:	e3530000 	cmp	r3, #0
   24a0c:	0a00002a 	beq	24abc <USBFunctionSelectInterfaceByClass+0xe8>
   24a10:	e594000c 	ldr	r0, [r4, #12]
   24a14:	ea000008 	b	24a3c <USBFunctionSelectInterfaceByClass+0x68>
   24a18:	e3a01004 	mov	r1, #4
   24a1c:	e5940004 	ldr	r0, [r4, #4]
   24a20:	ebfff40a 	bl	21a50 <USBDeviceGetDescriptor>
   24a24:	e3a01004 	mov	r1, #4
   24a28:	e5940008 	ldr	r0, [r4, #8]
   24a2c:	eb001c19 	bl	2ba98 <USBConfigurationParserGetDescriptor>
   24a30:	e3500000 	cmp	r0, #0
   24a34:	e584000c 	str	r0, [r4, #12]
   24a38:	08bd81f0 	popeq	{r4, r5, r6, r7, r8, pc}
   24a3c:	e5d03005 	ldrb	r3, [r0, #5]
   24a40:	e1530005 	cmp	r3, r5
   24a44:	1afffff3 	bne	24a18 <USBFunctionSelectInterfaceByClass+0x44>
   24a48:	e5d03006 	ldrb	r3, [r0, #6]
   24a4c:	e1530006 	cmp	r3, r6
   24a50:	1afffff0 	bne	24a18 <USBFunctionSelectInterfaceByClass+0x44>
   24a54:	e5d03007 	ldrb	r3, [r0, #7]
   24a58:	e1530007 	cmp	r3, r7
   24a5c:	1affffed 	bne	24a18 <USBFunctionSelectInterfaceByClass+0x44>
   24a60:	e3a00001 	mov	r0, #1
   24a64:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   24a68:	e3a020a8 	mov	r2, #168	; 0xa8
   24a6c:	e59f105c 	ldr	r1, [pc, #92]	; 24ad0 <USBFunctionSelectInterfaceByClass+0xfc>
   24a70:	e59f005c 	ldr	r0, [pc, #92]	; 24ad4 <USBFunctionSelectInterfaceByClass+0x100>
   24a74:	ebffcb69 	bl	17820 <uspi_assertion_failed>
   24a78:	e594300c 	ldr	r3, [r4, #12]
   24a7c:	e3530000 	cmp	r3, #0
   24a80:	1affffdc 	bne	249f8 <USBFunctionSelectInterfaceByClass+0x24>
   24a84:	e3a020a9 	mov	r2, #169	; 0xa9
   24a88:	e59f1040 	ldr	r1, [pc, #64]	; 24ad0 <USBFunctionSelectInterfaceByClass+0xfc>
   24a8c:	e59f0044 	ldr	r0, [pc, #68]	; 24ad8 <USBFunctionSelectInterfaceByClass+0x104>
   24a90:	ebffcb62 	bl	17820 <uspi_assertion_failed>
   24a94:	e5943008 	ldr	r3, [r4, #8]
   24a98:	e3530000 	cmp	r3, #0
   24a9c:	1affffd8 	bne	24a04 <USBFunctionSelectInterfaceByClass+0x30>
   24aa0:	e3a020aa 	mov	r2, #170	; 0xaa
   24aa4:	e59f1024 	ldr	r1, [pc, #36]	; 24ad0 <USBFunctionSelectInterfaceByClass+0xfc>
   24aa8:	e59f002c 	ldr	r0, [pc, #44]	; 24adc <USBFunctionSelectInterfaceByClass+0x108>
   24aac:	ebffcb5b 	bl	17820 <uspi_assertion_failed>
   24ab0:	e5943004 	ldr	r3, [r4, #4]
   24ab4:	e3530000 	cmp	r3, #0
   24ab8:	1affffd4 	bne	24a10 <USBFunctionSelectInterfaceByClass+0x3c>
   24abc:	e3a020ab 	mov	r2, #171	; 0xab
   24ac0:	e59f1008 	ldr	r1, [pc, #8]	; 24ad0 <USBFunctionSelectInterfaceByClass+0xfc>
   24ac4:	e59f0014 	ldr	r0, [pc, #20]	; 24ae0 <USBFunctionSelectInterfaceByClass+0x10c>
   24ac8:	ebffcb54 	bl	17820 <uspi_assertion_failed>
   24acc:	eaffffcf 	b	24a10 <USBFunctionSelectInterfaceByClass+0x3c>
   24ad0:	0003186c 	.word	0x0003186c
   24ad4:	000306f0 	.word	0x000306f0
   24ad8:	00031890 	.word	0x00031890
   24adc:	00030f08 	.word	0x00030f08
   24ae0:	00030d90 	.word	0x00030d90

00024ae4 <USBFunctionGetInterfaceNumber>:
   24ae4:	e92d4010 	push	{r4, lr}
   24ae8:	e2504000 	subs	r4, r0, #0
   24aec:	0a00000b 	beq	24b20 <USBFunctionGetInterfaceNumber+0x3c>
   24af0:	e594300c 	ldr	r3, [r4, #12]
   24af4:	e3530000 	cmp	r3, #0
   24af8:	0a000001 	beq	24b04 <USBFunctionGetInterfaceNumber+0x20>
   24afc:	e5d30002 	ldrb	r0, [r3, #2]
   24b00:	e8bd8010 	pop	{r4, pc}
   24b04:	e3a020c2 	mov	r2, #194	; 0xc2
   24b08:	e59f1024 	ldr	r1, [pc, #36]	; 24b34 <USBFunctionGetInterfaceNumber+0x50>
   24b0c:	e59f0024 	ldr	r0, [pc, #36]	; 24b38 <USBFunctionGetInterfaceNumber+0x54>
   24b10:	ebffcb42 	bl	17820 <uspi_assertion_failed>
   24b14:	e594300c 	ldr	r3, [r4, #12]
   24b18:	e5d30002 	ldrb	r0, [r3, #2]
   24b1c:	e8bd8010 	pop	{r4, pc}
   24b20:	e3a020c1 	mov	r2, #193	; 0xc1
   24b24:	e59f1008 	ldr	r1, [pc, #8]	; 24b34 <USBFunctionGetInterfaceNumber+0x50>
   24b28:	e59f000c 	ldr	r0, [pc, #12]	; 24b3c <USBFunctionGetInterfaceNumber+0x58>
   24b2c:	ebffcb3b 	bl	17820 <uspi_assertion_failed>
   24b30:	eaffffee 	b	24af0 <USBFunctionGetInterfaceNumber+0xc>
   24b34:	0003186c 	.word	0x0003186c
   24b38:	00031890 	.word	0x00031890
   24b3c:	000306f0 	.word	0x000306f0

00024b40 <USBFunctionGetInterfaceClass>:
   24b40:	e92d4010 	push	{r4, lr}
   24b44:	e2504000 	subs	r4, r0, #0
   24b48:	0a00000b 	beq	24b7c <USBFunctionGetInterfaceClass+0x3c>
   24b4c:	e594300c 	ldr	r3, [r4, #12]
   24b50:	e3530000 	cmp	r3, #0
   24b54:	0a000001 	beq	24b60 <USBFunctionGetInterfaceClass+0x20>
   24b58:	e5d30005 	ldrb	r0, [r3, #5]
   24b5c:	e8bd8010 	pop	{r4, pc}
   24b60:	e3a020c9 	mov	r2, #201	; 0xc9
   24b64:	e59f1024 	ldr	r1, [pc, #36]	; 24b90 <USBFunctionGetInterfaceClass+0x50>
   24b68:	e59f0024 	ldr	r0, [pc, #36]	; 24b94 <USBFunctionGetInterfaceClass+0x54>
   24b6c:	ebffcb2b 	bl	17820 <uspi_assertion_failed>
   24b70:	e594300c 	ldr	r3, [r4, #12]
   24b74:	e5d30005 	ldrb	r0, [r3, #5]
   24b78:	e8bd8010 	pop	{r4, pc}
   24b7c:	e3a020c8 	mov	r2, #200	; 0xc8
   24b80:	e59f1008 	ldr	r1, [pc, #8]	; 24b90 <USBFunctionGetInterfaceClass+0x50>
   24b84:	e59f000c 	ldr	r0, [pc, #12]	; 24b98 <USBFunctionGetInterfaceClass+0x58>
   24b88:	ebffcb24 	bl	17820 <uspi_assertion_failed>
   24b8c:	eaffffee 	b	24b4c <USBFunctionGetInterfaceClass+0xc>
   24b90:	0003186c 	.word	0x0003186c
   24b94:	00031890 	.word	0x00031890
   24b98:	000306f0 	.word	0x000306f0

00024b9c <USBFunctionGetInterfaceSubClass>:
   24b9c:	e92d4010 	push	{r4, lr}
   24ba0:	e2504000 	subs	r4, r0, #0
   24ba4:	0a00000b 	beq	24bd8 <USBFunctionGetInterfaceSubClass+0x3c>
   24ba8:	e594300c 	ldr	r3, [r4, #12]
   24bac:	e3530000 	cmp	r3, #0
   24bb0:	0a000001 	beq	24bbc <USBFunctionGetInterfaceSubClass+0x20>
   24bb4:	e5d30006 	ldrb	r0, [r3, #6]
   24bb8:	e8bd8010 	pop	{r4, pc}
   24bbc:	e3a020d0 	mov	r2, #208	; 0xd0
   24bc0:	e59f1024 	ldr	r1, [pc, #36]	; 24bec <USBFunctionGetInterfaceSubClass+0x50>
   24bc4:	e59f0024 	ldr	r0, [pc, #36]	; 24bf0 <USBFunctionGetInterfaceSubClass+0x54>
   24bc8:	ebffcb14 	bl	17820 <uspi_assertion_failed>
   24bcc:	e594300c 	ldr	r3, [r4, #12]
   24bd0:	e5d30006 	ldrb	r0, [r3, #6]
   24bd4:	e8bd8010 	pop	{r4, pc}
   24bd8:	e3a020cf 	mov	r2, #207	; 0xcf
   24bdc:	e59f1008 	ldr	r1, [pc, #8]	; 24bec <USBFunctionGetInterfaceSubClass+0x50>
   24be0:	e59f000c 	ldr	r0, [pc, #12]	; 24bf4 <USBFunctionGetInterfaceSubClass+0x58>
   24be4:	ebffcb0d 	bl	17820 <uspi_assertion_failed>
   24be8:	eaffffee 	b	24ba8 <USBFunctionGetInterfaceSubClass+0xc>
   24bec:	0003186c 	.word	0x0003186c
   24bf0:	00031890 	.word	0x00031890
   24bf4:	000306f0 	.word	0x000306f0

00024bf8 <USBFunctionGetInterfaceProtocol>:
   24bf8:	e92d4010 	push	{r4, lr}
   24bfc:	e2504000 	subs	r4, r0, #0
   24c00:	0a00000b 	beq	24c34 <USBFunctionGetInterfaceProtocol+0x3c>
   24c04:	e594300c 	ldr	r3, [r4, #12]
   24c08:	e3530000 	cmp	r3, #0
   24c0c:	0a000001 	beq	24c18 <USBFunctionGetInterfaceProtocol+0x20>
   24c10:	e5d30007 	ldrb	r0, [r3, #7]
   24c14:	e8bd8010 	pop	{r4, pc}
   24c18:	e3a020d7 	mov	r2, #215	; 0xd7
   24c1c:	e59f1024 	ldr	r1, [pc, #36]	; 24c48 <USBFunctionGetInterfaceProtocol+0x50>
   24c20:	e59f0024 	ldr	r0, [pc, #36]	; 24c4c <USBFunctionGetInterfaceProtocol+0x54>
   24c24:	ebffcafd 	bl	17820 <uspi_assertion_failed>
   24c28:	e594300c 	ldr	r3, [r4, #12]
   24c2c:	e5d30007 	ldrb	r0, [r3, #7]
   24c30:	e8bd8010 	pop	{r4, pc}
   24c34:	e3a020d6 	mov	r2, #214	; 0xd6
   24c38:	e59f1008 	ldr	r1, [pc, #8]	; 24c48 <USBFunctionGetInterfaceProtocol+0x50>
   24c3c:	e59f000c 	ldr	r0, [pc, #12]	; 24c50 <USBFunctionGetInterfaceProtocol+0x58>
   24c40:	ebffcaf6 	bl	17820 <uspi_assertion_failed>
   24c44:	eaffffee 	b	24c04 <USBFunctionGetInterfaceProtocol+0xc>
   24c48:	0003186c 	.word	0x0003186c
   24c4c:	00031890 	.word	0x00031890
   24c50:	000306f0 	.word	0x000306f0

00024c54 <SMSC951xDevice>:
   24c54:	e92d4070 	push	{r4, r5, r6, lr}
   24c58:	e2504000 	subs	r4, r0, #0
   24c5c:	e1a05001 	mov	r5, r1
   24c60:	0a000012 	beq	24cb0 <SMSC951xDevice+0x5c>
   24c64:	e1a01005 	mov	r1, r5
   24c68:	e1a00004 	mov	r0, r4
   24c6c:	ebfffe03 	bl	24480 <USBFunctionCopy>
   24c70:	e3a03000 	mov	r3, #0
   24c74:	e59f2048 	ldr	r2, [pc, #72]	; 24cc4 <SMSC951xDevice+0x70>
   24c78:	e5843010 	str	r3, [r4, #16]
   24c7c:	e5843014 	str	r3, [r4, #20]
   24c80:	e5843024 	str	r3, [r4, #36]	; 0x24
   24c84:	e5842000 	str	r2, [r4]
   24c88:	e3a00d19 	mov	r0, #1600	; 0x640
   24c8c:	ebffcabc 	bl	17784 <malloc>
   24c90:	e3500000 	cmp	r0, #0
   24c94:	e5840024 	str	r0, [r4, #36]	; 0x24
   24c98:	18bd8070 	popne	{r4, r5, r6, pc}
   24c9c:	e3a02093 	mov	r2, #147	; 0x93
   24ca0:	e8bd4070 	pop	{r4, r5, r6, lr}
   24ca4:	e59f101c 	ldr	r1, [pc, #28]	; 24cc8 <SMSC951xDevice+0x74>
   24ca8:	e59f001c 	ldr	r0, [pc, #28]	; 24ccc <SMSC951xDevice+0x78>
   24cac:	eaffcadb 	b	17820 <uspi_assertion_failed>
   24cb0:	e3a02089 	mov	r2, #137	; 0x89
   24cb4:	e59f100c 	ldr	r1, [pc, #12]	; 24cc8 <SMSC951xDevice+0x74>
   24cb8:	e59f0010 	ldr	r0, [pc, #16]	; 24cd0 <SMSC951xDevice+0x7c>
   24cbc:	ebffcad7 	bl	17820 <uspi_assertion_failed>
   24cc0:	eaffffe7 	b	24c64 <SMSC951xDevice+0x10>
   24cc4:	000250f8 	.word	0x000250f8
   24cc8:	00031908 	.word	0x00031908
   24ccc:	00031914 	.word	0x00031914
   24cd0:	000306f0 	.word	0x000306f0

00024cd4 <_SMSC951xDevice>:
   24cd4:	e92d4010 	push	{r4, lr}
   24cd8:	e2504000 	subs	r4, r0, #0
   24cdc:	0a000018 	beq	24d44 <_SMSC951xDevice+0x70>
   24ce0:	e5940024 	ldr	r0, [r4, #36]	; 0x24
   24ce4:	e3500000 	cmp	r0, #0
   24ce8:	0a000002 	beq	24cf8 <_SMSC951xDevice+0x24>
   24cec:	ebffcaa5 	bl	17788 <free>
   24cf0:	e3a03000 	mov	r3, #0
   24cf4:	e5843024 	str	r3, [r4, #36]	; 0x24
   24cf8:	e5940014 	ldr	r0, [r4, #20]
   24cfc:	e3500000 	cmp	r0, #0
   24d00:	0a000004 	beq	24d18 <_SMSC951xDevice+0x44>
   24d04:	ebfff766 	bl	22aa4 <_USBEndpoint>
   24d08:	e5940014 	ldr	r0, [r4, #20]
   24d0c:	ebffca9d 	bl	17788 <free>
   24d10:	e3a03000 	mov	r3, #0
   24d14:	e5843014 	str	r3, [r4, #20]
   24d18:	e5940010 	ldr	r0, [r4, #16]
   24d1c:	e3500000 	cmp	r0, #0
   24d20:	0a000004 	beq	24d38 <_SMSC951xDevice+0x64>
   24d24:	ebfff75e 	bl	22aa4 <_USBEndpoint>
   24d28:	e5940010 	ldr	r0, [r4, #16]
   24d2c:	ebffca95 	bl	17788 <free>
   24d30:	e3a03000 	mov	r3, #0
   24d34:	e5843010 	str	r3, [r4, #16]
   24d38:	e1a00004 	mov	r0, r4
   24d3c:	e8bd4010 	pop	{r4, lr}
   24d40:	eafffe10 	b	24588 <_USBFunction>
   24d44:	e3a02098 	mov	r2, #152	; 0x98
   24d48:	e59f1008 	ldr	r1, [pc, #8]	; 24d58 <_SMSC951xDevice+0x84>
   24d4c:	e59f0008 	ldr	r0, [pc, #8]	; 24d5c <_SMSC951xDevice+0x88>
   24d50:	ebffcab2 	bl	17820 <uspi_assertion_failed>
   24d54:	eaffffe1 	b	24ce0 <_SMSC951xDevice+0xc>
   24d58:	00031908 	.word	0x00031908
   24d5c:	000306f0 	.word	0x000306f0

00024d60 <SMSC951xDeviceGetMACAddress>:
   24d60:	e92d4010 	push	{r4, lr}
   24d64:	e2504000 	subs	r4, r0, #0
   24d68:	0a000001 	beq	24d74 <SMSC951xDeviceGetMACAddress+0x14>
   24d6c:	e2840018 	add	r0, r4, #24
   24d70:	e8bd8010 	pop	{r4, pc}
   24d74:	e59f2010 	ldr	r2, [pc, #16]	; 24d8c <SMSC951xDeviceGetMACAddress+0x2c>
   24d78:	e59f1010 	ldr	r1, [pc, #16]	; 24d90 <SMSC951xDeviceGetMACAddress+0x30>
   24d7c:	e59f0010 	ldr	r0, [pc, #16]	; 24d94 <SMSC951xDeviceGetMACAddress+0x34>
   24d80:	ebffcaa6 	bl	17820 <uspi_assertion_failed>
   24d84:	e2840018 	add	r0, r4, #24
   24d88:	e8bd8010 	pop	{r4, pc}
   24d8c:	00000137 	.word	0x00000137
   24d90:	00031908 	.word	0x00031908
   24d94:	000306f0 	.word	0x000306f0

00024d98 <SMSC951xDeviceSendFrame>:
   24d98:	e92d4070 	push	{r4, r5, r6, lr}
   24d9c:	e2504000 	subs	r4, r0, #0
   24da0:	e1a06001 	mov	r6, r1
   24da4:	e1a05002 	mov	r5, r2
   24da8:	0a00002c 	beq	24e60 <SMSC951xDeviceSendFrame+0xc8>
   24dac:	e59f30c0 	ldr	r3, [pc, #192]	; 24e74 <SMSC951xDeviceSendFrame+0xdc>
   24db0:	e1550003 	cmp	r5, r3
   24db4:	8a000018 	bhi	24e1c <SMSC951xDeviceSendFrame+0x84>
   24db8:	e5943024 	ldr	r3, [r4, #36]	; 0x24
   24dbc:	e3530000 	cmp	r3, #0
   24dc0:	0a00001c 	beq	24e38 <SMSC951xDeviceSendFrame+0xa0>
   24dc4:	e3560000 	cmp	r6, #0
   24dc8:	0a00001f 	beq	24e4c <SMSC951xDeviceSendFrame+0xb4>
   24dcc:	e5940024 	ldr	r0, [r4, #36]	; 0x24
   24dd0:	e1a02005 	mov	r2, r5
   24dd4:	e1a01006 	mov	r1, r6
   24dd8:	e2800008 	add	r0, r0, #8
   24ddc:	eb0009c5 	bl	274f8 <uspi_memcpy>
   24de0:	e5942014 	ldr	r2, [r4, #20]
   24de4:	e5943024 	ldr	r3, [r4, #36]	; 0x24
   24de8:	e3520000 	cmp	r2, #0
   24dec:	e3852a03 	orr	r2, r5, #12288	; 0x3000
   24df0:	e8830024 	stm	r3, {r2, r5}
   24df4:	0a00000a 	beq	24e24 <SMSC951xDeviceSendFrame+0x8c>
   24df8:	e1a00004 	mov	r0, r4
   24dfc:	ebfffe65 	bl	24798 <USBFunctionGetHost>
   24e00:	e2853008 	add	r3, r5, #8
   24e04:	e5942024 	ldr	r2, [r4, #36]	; 0x24
   24e08:	e5941014 	ldr	r1, [r4, #20]
   24e0c:	ebffe78f 	bl	1ec50 <DWHCIDeviceTransfer>
   24e10:	e1e00000 	mvn	r0, r0
   24e14:	e1a00fa0 	lsr	r0, r0, #31
   24e18:	e8bd8070 	pop	{r4, r5, r6, pc}
   24e1c:	e3a00000 	mov	r0, #0
   24e20:	e8bd8070 	pop	{r4, r5, r6, pc}
   24e24:	e3a02f53 	mov	r2, #332	; 0x14c
   24e28:	e59f1048 	ldr	r1, [pc, #72]	; 24e78 <SMSC951xDeviceSendFrame+0xe0>
   24e2c:	e59f0048 	ldr	r0, [pc, #72]	; 24e7c <SMSC951xDeviceSendFrame+0xe4>
   24e30:	ebffca7a 	bl	17820 <uspi_assertion_failed>
   24e34:	eaffffef 	b	24df8 <SMSC951xDeviceSendFrame+0x60>
   24e38:	e59f2040 	ldr	r2, [pc, #64]	; 24e80 <SMSC951xDeviceSendFrame+0xe8>
   24e3c:	e59f1034 	ldr	r1, [pc, #52]	; 24e78 <SMSC951xDeviceSendFrame+0xe0>
   24e40:	e59f003c 	ldr	r0, [pc, #60]	; 24e84 <SMSC951xDeviceSendFrame+0xec>
   24e44:	ebffca75 	bl	17820 <uspi_assertion_failed>
   24e48:	eaffffdd 	b	24dc4 <SMSC951xDeviceSendFrame+0x2c>
   24e4c:	e59f2034 	ldr	r2, [pc, #52]	; 24e88 <SMSC951xDeviceSendFrame+0xf0>
   24e50:	e59f1020 	ldr	r1, [pc, #32]	; 24e78 <SMSC951xDeviceSendFrame+0xe0>
   24e54:	e59f0030 	ldr	r0, [pc, #48]	; 24e8c <SMSC951xDeviceSendFrame+0xf4>
   24e58:	ebffca70 	bl	17820 <uspi_assertion_failed>
   24e5c:	eaffffda 	b	24dcc <SMSC951xDeviceSendFrame+0x34>
   24e60:	e59f2028 	ldr	r2, [pc, #40]	; 24e90 <SMSC951xDeviceSendFrame+0xf8>
   24e64:	e59f100c 	ldr	r1, [pc, #12]	; 24e78 <SMSC951xDeviceSendFrame+0xe0>
   24e68:	e59f0024 	ldr	r0, [pc, #36]	; 24e94 <SMSC951xDeviceSendFrame+0xfc>
   24e6c:	ebffca6b 	bl	17820 <uspi_assertion_failed>
   24e70:	eaffffcd 	b	24dac <SMSC951xDeviceSendFrame+0x14>
   24e74:	00000637 	.word	0x00000637
   24e78:	00031908 	.word	0x00031908
   24e7c:	0003192c 	.word	0x0003192c
   24e80:	00000145 	.word	0x00000145
   24e84:	00031914 	.word	0x00031914
   24e88:	00000146 	.word	0x00000146
   24e8c:	00031c90 	.word	0x00031c90
   24e90:	0000013e 	.word	0x0000013e
   24e94:	000306f0 	.word	0x000306f0

00024e98 <SMSC951xDeviceReceiveFrame>:
   24e98:	e92d40f0 	push	{r4, r5, r6, r7, lr}
   24e9c:	e2505000 	subs	r5, r0, #0
   24ea0:	e24dd034 	sub	sp, sp, #52	; 0x34
   24ea4:	e1a06001 	mov	r6, r1
   24ea8:	e1a07002 	mov	r7, r2
   24eac:	0a00003e 	beq	24fac <SMSC951xDeviceReceiveFrame+0x114>
   24eb0:	e5953010 	ldr	r3, [r5, #16]
   24eb4:	e3530000 	cmp	r3, #0
   24eb8:	0a000042 	beq	24fc8 <SMSC951xDeviceReceiveFrame+0x130>
   24ebc:	e3560000 	cmp	r6, #0
   24ec0:	0a000046 	beq	24fe0 <SMSC951xDeviceReceiveFrame+0x148>
   24ec4:	e3a04000 	mov	r4, #0
   24ec8:	e5951010 	ldr	r1, [r5, #16]
   24ecc:	e3a03d19 	mov	r3, #1600	; 0x640
   24ed0:	e1a02006 	mov	r2, r6
   24ed4:	e28d000c 	add	r0, sp, #12
   24ed8:	e58d4000 	str	r4, [sp]
   24edc:	ebfff7cf 	bl	22e20 <USBRequest>
   24ee0:	e1a00005 	mov	r0, r5
   24ee4:	ebfffe2b 	bl	24798 <USBFunctionGetHost>
   24ee8:	e28d100c 	add	r1, sp, #12
   24eec:	ebffe632 	bl	1e7bc <DWHCIDeviceSubmitBlockingRequest>
   24ef0:	e1500004 	cmp	r0, r4
   24ef4:	0a000020 	beq	24f7c <SMSC951xDeviceReceiveFrame+0xe4>
   24ef8:	e28d000c 	add	r0, sp, #12
   24efc:	ebfff844 	bl	23014 <USBRequestGetResultLength>
   24f00:	e3500003 	cmp	r0, #3
   24f04:	9a00001c 	bls	24f7c <SMSC951xDeviceReceiveFrame+0xe4>
   24f08:	e5963000 	ldr	r3, [r6]
   24f0c:	e59f2118 	ldr	r2, [pc, #280]	; 2502c <SMSC951xDeviceReceiveFrame+0x194>
   24f10:	e0022003 	and	r2, r2, r3
   24f14:	e3520000 	cmp	r2, #0
   24f18:	1a000035 	bne	24ff4 <SMSC951xDeviceReceiveFrame+0x15c>
   24f1c:	e59f410c 	ldr	r4, [pc, #268]	; 25030 <SMSC951xDeviceReceiveFrame+0x198>
   24f20:	e2400004 	sub	r0, r0, #4
   24f24:	e0044823 	and	r4, r4, r3, lsr #16
   24f28:	e1500004 	cmp	r0, r4
   24f2c:	1a000017 	bne	24f90 <SMSC951xDeviceReceiveFrame+0xf8>
   24f30:	e3540004 	cmp	r4, #4
   24f34:	9a00000c 	bls	24f6c <SMSC951xDeviceReceiveFrame+0xd4>
   24f38:	e2444004 	sub	r4, r4, #4
   24f3c:	e1a02004 	mov	r2, r4
   24f40:	e2861004 	add	r1, r6, #4
   24f44:	e1a00006 	mov	r0, r6
   24f48:	eb00096a 	bl	274f8 <uspi_memcpy>
   24f4c:	e3570000 	cmp	r7, #0
   24f50:	0a000030 	beq	25018 <SMSC951xDeviceReceiveFrame+0x180>
   24f54:	e28d000c 	add	r0, sp, #12
   24f58:	e5874000 	str	r4, [r7]
   24f5c:	ebfff7df 	bl	22ee0 <_USBRequest>
   24f60:	e3a00001 	mov	r0, #1
   24f64:	e28dd034 	add	sp, sp, #52	; 0x34
   24f68:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
   24f6c:	e3a02f5d 	mov	r2, #372	; 0x174
   24f70:	e59f10bc 	ldr	r1, [pc, #188]	; 25034 <SMSC951xDeviceReceiveFrame+0x19c>
   24f74:	e59f00bc 	ldr	r0, [pc, #188]	; 25038 <SMSC951xDeviceReceiveFrame+0x1a0>
   24f78:	ebffca28 	bl	17820 <uspi_assertion_failed>
   24f7c:	e28d000c 	add	r0, sp, #12
   24f80:	ebfff7d6 	bl	22ee0 <_USBRequest>
   24f84:	e3a00000 	mov	r0, #0
   24f88:	e28dd034 	add	sp, sp, #52	; 0x34
   24f8c:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
   24f90:	e59f20a4 	ldr	r2, [pc, #164]	; 2503c <SMSC951xDeviceReceiveFrame+0x1a4>
   24f94:	e59f1098 	ldr	r1, [pc, #152]	; 25034 <SMSC951xDeviceReceiveFrame+0x19c>
   24f98:	e59f00a0 	ldr	r0, [pc, #160]	; 25040 <SMSC951xDeviceReceiveFrame+0x1a8>
   24f9c:	ebffca1f 	bl	17820 <uspi_assertion_failed>
   24fa0:	e3540004 	cmp	r4, #4
   24fa4:	8affffe3 	bhi	24f38 <SMSC951xDeviceReceiveFrame+0xa0>
   24fa8:	eaffffef 	b	24f6c <SMSC951xDeviceReceiveFrame+0xd4>
   24fac:	e59f2090 	ldr	r2, [pc, #144]	; 25044 <SMSC951xDeviceReceiveFrame+0x1ac>
   24fb0:	e59f107c 	ldr	r1, [pc, #124]	; 25034 <SMSC951xDeviceReceiveFrame+0x19c>
   24fb4:	e59f008c 	ldr	r0, [pc, #140]	; 25048 <SMSC951xDeviceReceiveFrame+0x1b0>
   24fb8:	ebffca18 	bl	17820 <uspi_assertion_failed>
   24fbc:	e5953010 	ldr	r3, [r5, #16]
   24fc0:	e3530000 	cmp	r3, #0
   24fc4:	1affffbc 	bne	24ebc <SMSC951xDeviceReceiveFrame+0x24>
   24fc8:	e3a02f55 	mov	r2, #340	; 0x154
   24fcc:	e59f1060 	ldr	r1, [pc, #96]	; 25034 <SMSC951xDeviceReceiveFrame+0x19c>
   24fd0:	e59f0074 	ldr	r0, [pc, #116]	; 2504c <SMSC951xDeviceReceiveFrame+0x1b4>
   24fd4:	ebffca11 	bl	17820 <uspi_assertion_failed>
   24fd8:	e3560000 	cmp	r6, #0
   24fdc:	1affffb8 	bne	24ec4 <SMSC951xDeviceReceiveFrame+0x2c>
   24fe0:	e59f2068 	ldr	r2, [pc, #104]	; 25050 <SMSC951xDeviceReceiveFrame+0x1b8>
   24fe4:	e59f1048 	ldr	r1, [pc, #72]	; 25034 <SMSC951xDeviceReceiveFrame+0x19c>
   24fe8:	e59f0064 	ldr	r0, [pc, #100]	; 25054 <SMSC951xDeviceReceiveFrame+0x1bc>
   24fec:	ebffca0b 	bl	17820 <uspi_assertion_failed>
   24ff0:	eaffffb3 	b	24ec4 <SMSC951xDeviceReceiveFrame+0x2c>
   24ff4:	e59f205c 	ldr	r2, [pc, #92]	; 25058 <SMSC951xDeviceReceiveFrame+0x1c0>
   24ff8:	e3a01002 	mov	r1, #2
   24ffc:	e59f0058 	ldr	r0, [pc, #88]	; 2505c <SMSC951xDeviceReceiveFrame+0x1c4>
   25000:	ebff91eb 	bl	97b4 <LogWrite>
   25004:	e28d000c 	add	r0, sp, #12
   25008:	ebfff7b4 	bl	22ee0 <_USBRequest>
   2500c:	e1a00004 	mov	r0, r4
   25010:	e28dd034 	add	sp, sp, #52	; 0x34
   25014:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
   25018:	e59f2040 	ldr	r2, [pc, #64]	; 25060 <SMSC951xDeviceReceiveFrame+0x1c8>
   2501c:	e59f1010 	ldr	r1, [pc, #16]	; 25034 <SMSC951xDeviceReceiveFrame+0x19c>
   25020:	e59f003c 	ldr	r0, [pc, #60]	; 25064 <SMSC951xDeviceReceiveFrame+0x1cc>
   25024:	ebffc9fd 	bl	17820 <uspi_assertion_failed>
   25028:	eaffffc9 	b	24f54 <SMSC951xDeviceReceiveFrame+0xbc>
   2502c:	400090de 	.word	0x400090de
   25030:	00003fff 	.word	0x00003fff
   25034:	00031908 	.word	0x00031908
   25038:	000319a4 	.word	0x000319a4
   2503c:	00000173 	.word	0x00000173
   25040:	00031984 	.word	0x00031984
   25044:	00000152 	.word	0x00000152
   25048:	000306f0 	.word	0x000306f0
   2504c:	0003194c 	.word	0x0003194c
   25050:	00000155 	.word	0x00000155
   25054:	00031c90 	.word	0x00031c90
   25058:	0003196c 	.word	0x0003196c
   2505c:	000318fc 	.word	0x000318fc
   25060:	00000181 	.word	0x00000181
   25064:	000319b8 	.word	0x000319b8

00025068 <SMSC951xDeviceWriteReg>:
   25068:	e92d4070 	push	{r4, r5, r6, lr}
   2506c:	e2505000 	subs	r5, r0, #0
   25070:	e24dd018 	sub	sp, sp, #24
   25074:	e1a04001 	mov	r4, r1
   25078:	e58d2014 	str	r2, [sp, #20]
   2507c:	0a000015 	beq	250d8 <SMSC951xDeviceWriteReg+0x70>
   25080:	e1a00005 	mov	r0, r5
   25084:	ebfffdc3 	bl	24798 <USBFunctionGetHost>
   25088:	e1a06000 	mov	r6, r0
   2508c:	e1a00005 	mov	r0, r5
   25090:	ebfffda9 	bl	2473c <USBFunctionGetEndpoint0>
   25094:	e3a0c004 	mov	ip, #4
   25098:	e3a02000 	mov	r2, #0
   2509c:	e28d3014 	add	r3, sp, #20
   250a0:	e6ff4074 	uxth	r4, r4
   250a4:	e1a01000 	mov	r1, r0
   250a8:	e58d2000 	str	r2, [sp]
   250ac:	e58d3008 	str	r3, [sp, #8]
   250b0:	e58d4004 	str	r4, [sp, #4]
   250b4:	e1a00006 	mov	r0, r6
   250b8:	e58dc00c 	str	ip, [sp, #12]
   250bc:	e3a030a0 	mov	r3, #160	; 0xa0
   250c0:	e3a02040 	mov	r2, #64	; 0x40
   250c4:	ebffe657 	bl	1ea28 <DWHCIDeviceControlMessage>
   250c8:	e1e00000 	mvn	r0, r0
   250cc:	e1a00fa0 	lsr	r0, r0, #31
   250d0:	e28dd018 	add	sp, sp, #24
   250d4:	e8bd8070 	pop	{r4, r5, r6, pc}
   250d8:	e59f200c 	ldr	r2, [pc, #12]	; 250ec <SMSC951xDeviceWriteReg+0x84>
   250dc:	e59f100c 	ldr	r1, [pc, #12]	; 250f0 <SMSC951xDeviceWriteReg+0x88>
   250e0:	e59f000c 	ldr	r0, [pc, #12]	; 250f4 <SMSC951xDeviceWriteReg+0x8c>
   250e4:	ebffc9cd 	bl	17820 <uspi_assertion_failed>
   250e8:	eaffffe4 	b	25080 <SMSC951xDeviceWriteReg+0x18>
   250ec:	000001de 	.word	0x000001de
   250f0:	00031908 	.word	0x00031908
   250f4:	000306f0 	.word	0x000306f0

000250f8 <SMSC951xDeviceConfigure>:
   250f8:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   250fc:	e2504000 	subs	r4, r0, #0
   25100:	e24dd028 	sub	sp, sp, #40	; 0x28
   25104:	0a000088 	beq	2532c <SMSC951xDeviceConfigure+0x234>
   25108:	e1a0000d 	mov	r0, sp
   2510c:	ebffc9be 	bl	1780c <GetMACAddress>
   25110:	e2506000 	subs	r6, r0, #0
   25114:	0a000053 	beq	25268 <SMSC951xDeviceConfigure+0x170>
   25118:	e2847018 	add	r7, r4, #24
   2511c:	e1a0100d 	mov	r1, sp
   25120:	e1a00007 	mov	r0, r7
   25124:	ebfffbbd 	bl	24020 <MACAddressSet>
   25128:	e28d0010 	add	r0, sp, #16
   2512c:	eb0005e1 	bl	268b8 <String>
   25130:	e28d1010 	add	r1, sp, #16
   25134:	e1a00007 	mov	r0, r7
   25138:	ebfffc67 	bl	242dc <MACAddressFormat>
   2513c:	e28d0010 	add	r0, sp, #16
   25140:	eb00060f 	bl	26984 <StringGet>
   25144:	e59f22a0 	ldr	r2, [pc, #672]	; 253ec <SMSC951xDeviceConfigure+0x2f4>
   25148:	e1a03000 	mov	r3, r0
   2514c:	e3a01004 	mov	r1, #4
   25150:	e59f0298 	ldr	r0, [pc, #664]	; 253f0 <SMSC951xDeviceConfigure+0x2f8>
   25154:	ebff9196 	bl	97b4 <LogWrite>
   25158:	e1a00004 	mov	r0, r4
   2515c:	ebfffd4b 	bl	24690 <USBFunctionGetNumEndpoints>
   25160:	e3500003 	cmp	r0, #3
   25164:	1a000036 	bne	25244 <SMSC951xDeviceConfigure+0x14c>
   25168:	e59f6284 	ldr	r6, [pc, #644]	; 253f4 <SMSC951xDeviceConfigure+0x2fc>
   2516c:	e59f8284 	ldr	r8, [pc, #644]	; 253f8 <SMSC951xDeviceConfigure+0x300>
   25170:	e59f9284 	ldr	r9, [pc, #644]	; 253fc <SMSC951xDeviceConfigure+0x304>
   25174:	ea000003 	b	25188 <SMSC951xDeviceConfigure+0x90>
   25178:	e5d52003 	ldrb	r2, [r5, #3]
   2517c:	e202203f 	and	r2, r2, #63	; 0x3f
   25180:	e3520002 	cmp	r2, #2
   25184:	0a00003e 	beq	25284 <SMSC951xDeviceConfigure+0x18c>
   25188:	e3a01005 	mov	r1, #5
   2518c:	e1a00004 	mov	r0, r4
   25190:	ebfffdd0 	bl	248d8 <USBFunctionGetDescriptor>
   25194:	e2505000 	subs	r5, r0, #0
   25198:	1afffff6 	bne	25178 <SMSC951xDeviceConfigure+0x80>
   2519c:	e5943010 	ldr	r3, [r4, #16]
   251a0:	e1a00004 	mov	r0, r4
   251a4:	e3530000 	cmp	r3, #0
   251a8:	0a000026 	beq	25248 <SMSC951xDeviceConfigure+0x150>
   251ac:	e5943014 	ldr	r3, [r4, #20]
   251b0:	e3530000 	cmp	r3, #0
   251b4:	0a000023 	beq	25248 <SMSC951xDeviceConfigure+0x150>
   251b8:	ebfffd8d 	bl	247f4 <USBFunctionConfigure>
   251bc:	e2506000 	subs	r6, r0, #0
   251c0:	0a00005e 	beq	25340 <SMSC951xDeviceConfigure+0x248>
   251c4:	e1a00007 	mov	r0, r7
   251c8:	e28d1008 	add	r1, sp, #8
   251cc:	ebfffc00 	bl	241d4 <MACAddressCopyTo>
   251d0:	e5dd200d 	ldrb	r2, [sp, #13]
   251d4:	e5dd300c 	ldrb	r3, [sp, #12]
   251d8:	e3a01f41 	mov	r1, #260	; 0x104
   251dc:	e1832402 	orr	r2, r3, r2, lsl #8
   251e0:	e1a00004 	mov	r0, r4
   251e4:	e59d6008 	ldr	r6, [sp, #8]
   251e8:	ebffff9e 	bl	25068 <SMSC951xDeviceWriteReg>
   251ec:	e3500000 	cmp	r0, #0
   251f0:	0a000045 	beq	2530c <SMSC951xDeviceConfigure+0x214>
   251f4:	e1a02006 	mov	r2, r6
   251f8:	e3a01f42 	mov	r1, #264	; 0x108
   251fc:	e1a00004 	mov	r0, r4
   25200:	ebffff98 	bl	25068 <SMSC951xDeviceWriteReg>
   25204:	e3500000 	cmp	r0, #0
   25208:	0a00003f 	beq	2530c <SMSC951xDeviceConfigure+0x214>
   2520c:	e59f21ec 	ldr	r2, [pc, #492]	; 25400 <SMSC951xDeviceConfigure+0x308>
   25210:	e3a01024 	mov	r1, #36	; 0x24
   25214:	e1a00004 	mov	r0, r4
   25218:	ebffff92 	bl	25068 <SMSC951xDeviceWriteReg>
   2521c:	e3500000 	cmp	r0, #0
   25220:	0a000005 	beq	2523c <SMSC951xDeviceConfigure+0x144>
   25224:	e59f21d8 	ldr	r2, [pc, #472]	; 25404 <SMSC951xDeviceConfigure+0x30c>
   25228:	e3a01c01 	mov	r1, #256	; 0x100
   2522c:	e1a00004 	mov	r0, r4
   25230:	ebffff8c 	bl	25068 <SMSC951xDeviceWriteReg>
   25234:	e3500000 	cmp	r0, #0
   25238:	1a00004d 	bne	25374 <SMSC951xDeviceConfigure+0x27c>
   2523c:	e59f21c4 	ldr	r2, [pc, #452]	; 25408 <SMSC951xDeviceConfigure+0x310>
   25240:	ea000032 	b	25310 <SMSC951xDeviceConfigure+0x218>
   25244:	e1a00004 	mov	r0, r4
   25248:	e59f11a0 	ldr	r1, [pc, #416]	; 253f0 <SMSC951xDeviceConfigure+0x2f8>
   2524c:	ebfffdbb 	bl	24940 <USBFunctionConfigurationError>
   25250:	e28d0010 	add	r0, sp, #16
   25254:	eb0005b9 	bl	26940 <_String>
   25258:	e3a06000 	mov	r6, #0
   2525c:	e1a00006 	mov	r0, r6
   25260:	e28dd028 	add	sp, sp, #40	; 0x28
   25264:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   25268:	e59f219c 	ldr	r2, [pc, #412]	; 2540c <SMSC951xDeviceConfigure+0x314>
   2526c:	e3a01001 	mov	r1, #1
   25270:	e59f0178 	ldr	r0, [pc, #376]	; 253f0 <SMSC951xDeviceConfigure+0x2f8>
   25274:	ebff914e 	bl	97b4 <LogWrite>
   25278:	e1a00006 	mov	r0, r6
   2527c:	e28dd028 	add	sp, sp, #40	; 0x28
   25280:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   25284:	e1d530d2 	ldrsb	r3, [r5, #2]
   25288:	e3530000 	cmp	r3, #0
   2528c:	ba00000f 	blt	252d0 <SMSC951xDeviceConfigure+0x1d8>
   25290:	e5943014 	ldr	r3, [r4, #20]
   25294:	e3530000 	cmp	r3, #0
   25298:	1affffe9 	bne	25244 <SMSC951xDeviceConfigure+0x14c>
   2529c:	e3a00018 	mov	r0, #24
   252a0:	ebffc937 	bl	17784 <malloc>
   252a4:	e3500000 	cmp	r0, #0
   252a8:	e1a0a000 	mov	sl, r0
   252ac:	e5840014 	str	r0, [r4, #20]
   252b0:	0a000029 	beq	2535c <SMSC951xDeviceConfigure+0x264>
   252b4:	e1a00004 	mov	r0, r4
   252b8:	ebfffd0b 	bl	246ec <USBFunctionGetDevice>
   252bc:	e1a02005 	mov	r2, r5
   252c0:	e1a01000 	mov	r1, r0
   252c4:	e1a0000a 	mov	r0, sl
   252c8:	ebfff558 	bl	22830 <USBEndpoint2>
   252cc:	eaffffad 	b	25188 <SMSC951xDeviceConfigure+0x90>
   252d0:	e5943010 	ldr	r3, [r4, #16]
   252d4:	e3530000 	cmp	r3, #0
   252d8:	1affffd9 	bne	25244 <SMSC951xDeviceConfigure+0x14c>
   252dc:	e3a00018 	mov	r0, #24
   252e0:	ebffc927 	bl	17784 <malloc>
   252e4:	e3500000 	cmp	r0, #0
   252e8:	e1a0a000 	mov	sl, r0
   252ec:	e5840010 	str	r0, [r4, #16]
   252f0:	1affffef 	bne	252b4 <SMSC951xDeviceConfigure+0x1bc>
   252f4:	e3a020e0 	mov	r2, #224	; 0xe0
   252f8:	e1a01006 	mov	r1, r6
   252fc:	e1a00009 	mov	r0, r9
   25300:	ebffc946 	bl	17820 <uspi_assertion_failed>
   25304:	e594a010 	ldr	sl, [r4, #16]
   25308:	eaffffe9 	b	252b4 <SMSC951xDeviceConfigure+0x1bc>
   2530c:	e59f20fc 	ldr	r2, [pc, #252]	; 25410 <SMSC951xDeviceConfigure+0x318>
   25310:	e3a01001 	mov	r1, #1
   25314:	e59f00d4 	ldr	r0, [pc, #212]	; 253f0 <SMSC951xDeviceConfigure+0x2f8>
   25318:	ebff9125 	bl	97b4 <LogWrite>
   2531c:	e28d0010 	add	r0, sp, #16
   25320:	eb000586 	bl	26940 <_String>
   25324:	e3a06000 	mov	r6, #0
   25328:	eaffffcb 	b	2525c <SMSC951xDeviceConfigure+0x164>
   2532c:	e3a020b4 	mov	r2, #180	; 0xb4
   25330:	e59f10bc 	ldr	r1, [pc, #188]	; 253f4 <SMSC951xDeviceConfigure+0x2fc>
   25334:	e59f00d8 	ldr	r0, [pc, #216]	; 25414 <SMSC951xDeviceConfigure+0x31c>
   25338:	ebffc938 	bl	17820 <uspi_assertion_failed>
   2533c:	eaffff71 	b	25108 <SMSC951xDeviceConfigure+0x10>
   25340:	e59f20d0 	ldr	r2, [pc, #208]	; 25418 <SMSC951xDeviceConfigure+0x320>
   25344:	e3a01001 	mov	r1, #1
   25348:	e59f00a0 	ldr	r0, [pc, #160]	; 253f0 <SMSC951xDeviceConfigure+0x2f8>
   2534c:	ebff9118 	bl	97b4 <LogWrite>
   25350:	e28d0010 	add	r0, sp, #16
   25354:	eb000579 	bl	26940 <_String>
   25358:	eaffffbf 	b	2525c <SMSC951xDeviceConfigure+0x164>
   2535c:	e3a020ef 	mov	r2, #239	; 0xef
   25360:	e1a01006 	mov	r1, r6
   25364:	e1a00008 	mov	r0, r8
   25368:	ebffc92c 	bl	17820 <uspi_assertion_failed>
   2536c:	e594a014 	ldr	sl, [r4, #20]
   25370:	eaffffcf 	b	252b4 <SMSC951xDeviceConfigure+0x1bc>
   25374:	e3a02004 	mov	r2, #4
   25378:	e3a01010 	mov	r1, #16
   2537c:	e1a00004 	mov	r0, r4
   25380:	ebffff38 	bl	25068 <SMSC951xDeviceWriteReg>
   25384:	e3500000 	cmp	r0, #0
   25388:	0affffab 	beq	2523c <SMSC951xDeviceConfigure+0x144>
   2538c:	e28d001c 	add	r0, sp, #28
   25390:	eb000548 	bl	268b8 <String>
   25394:	e59f3080 	ldr	r3, [pc, #128]	; 2541c <SMSC951xDeviceConfigure+0x324>
   25398:	e59f1080 	ldr	r1, [pc, #128]	; 25420 <SMSC951xDeviceConfigure+0x328>
   2539c:	e5932000 	ldr	r2, [r3]
   253a0:	e28d001c 	add	r0, sp, #28
   253a4:	e282c001 	add	ip, r2, #1
   253a8:	e583c000 	str	ip, [r3]
   253ac:	eb000802 	bl	273bc <StringFormat>
   253b0:	ebfffaf2 	bl	23f80 <DeviceNameServiceGet>
   253b4:	e1a06000 	mov	r6, r0
   253b8:	e28d001c 	add	r0, sp, #28
   253bc:	eb000570 	bl	26984 <StringGet>
   253c0:	e1a03005 	mov	r3, r5
   253c4:	e1a01000 	mov	r1, r0
   253c8:	e1a02004 	mov	r2, r4
   253cc:	e1a00006 	mov	r0, r6
   253d0:	ebfffa6e 	bl	23d90 <DeviceNameServiceAddDevice>
   253d4:	e28d001c 	add	r0, sp, #28
   253d8:	eb000558 	bl	26940 <_String>
   253dc:	e28d0010 	add	r0, sp, #16
   253e0:	eb000556 	bl	26940 <_String>
   253e4:	e3a06001 	mov	r6, #1
   253e8:	eaffff9b 	b	2525c <SMSC951xDeviceConfigure+0x164>
   253ec:	000319cc 	.word	0x000319cc
   253f0:	000318fc 	.word	0x000318fc
   253f4:	00031908 	.word	0x00031908
   253f8:	00031a14 	.word	0x00031a14
   253fc:	000319f8 	.word	0x000319f8
   25400:	01110000 	.word	0x01110000
   25404:	0080000c 	.word	0x0080000c
   25408:	00031a48 	.word	0x00031a48
   2540c:	000319e0 	.word	0x000319e0
   25410:	00031a30 	.word	0x00031a30
   25414:	000306f0 	.word	0x000306f0
   25418:	0003171c 	.word	0x0003171c
   2541c:	00080b04 	.word	0x00080b04
   25420:	00031a5c 	.word	0x00031a5c

00025424 <SMSC951xDeviceReadReg>:
   25424:	e92d40f0 	push	{r4, r5, r6, r7, lr}
   25428:	e2505000 	subs	r5, r0, #0
   2542c:	e24dd014 	sub	sp, sp, #20
   25430:	e1a04001 	mov	r4, r1
   25434:	e1a06002 	mov	r6, r2
   25438:	0a000015 	beq	25494 <SMSC951xDeviceReadReg+0x70>
   2543c:	e1a00005 	mov	r0, r5
   25440:	ebfffcd4 	bl	24798 <USBFunctionGetHost>
   25444:	e1a07000 	mov	r7, r0
   25448:	e1a00005 	mov	r0, r5
   2544c:	ebfffcba 	bl	2473c <USBFunctionGetEndpoint0>
   25450:	e3a02004 	mov	r2, #4
   25454:	e3a03000 	mov	r3, #0
   25458:	e6ff4074 	uxth	r4, r4
   2545c:	e1a01000 	mov	r1, r0
   25460:	e58d200c 	str	r2, [sp, #12]
   25464:	e58d3000 	str	r3, [sp]
   25468:	e58d4004 	str	r4, [sp, #4]
   2546c:	e1a00007 	mov	r0, r7
   25470:	e58d6008 	str	r6, [sp, #8]
   25474:	e3a030a1 	mov	r3, #161	; 0xa1
   25478:	e3a020c0 	mov	r2, #192	; 0xc0
   2547c:	ebffe569 	bl	1ea28 <DWHCIDeviceControlMessage>
   25480:	e2400004 	sub	r0, r0, #4
   25484:	e16f0f10 	clz	r0, r0
   25488:	e1a002a0 	lsr	r0, r0, #5
   2548c:	e28dd014 	add	sp, sp, #20
   25490:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
   25494:	e3a02f7a 	mov	r2, #488	; 0x1e8
   25498:	e59f1008 	ldr	r1, [pc, #8]	; 254a8 <SMSC951xDeviceReadReg+0x84>
   2549c:	e59f0008 	ldr	r0, [pc, #8]	; 254ac <SMSC951xDeviceReadReg+0x88>
   254a0:	ebffc8de 	bl	17820 <uspi_assertion_failed>
   254a4:	eaffffe4 	b	2543c <SMSC951xDeviceReadReg+0x18>
   254a8:	00031908 	.word	0x00031908
   254ac:	000306f0 	.word	0x000306f0

000254b0 <SMSC951xDevicePHYWaitNotBusy>:
   254b0:	e92d4030 	push	{r4, r5, lr}
   254b4:	e2505000 	subs	r5, r0, #0
   254b8:	e24dd00c 	sub	sp, sp, #12
   254bc:	0a000013 	beq	25510 <SMSC951xDevicePHYWaitNotBusy+0x60>
   254c0:	e3a00001 	mov	r0, #1
   254c4:	ebffc8b7 	bl	177a8 <MsDelay>
   254c8:	e59f4054 	ldr	r4, [pc, #84]	; 25524 <SMSC951xDevicePHYWaitNotBusy+0x74>
   254cc:	ea000006 	b	254ec <SMSC951xDevicePHYWaitNotBusy+0x3c>
   254d0:	e59d3004 	ldr	r3, [sp, #4]
   254d4:	e3a00001 	mov	r0, #1
   254d8:	e3130001 	tst	r3, #1
   254dc:	0a000009 	beq	25508 <SMSC951xDevicePHYWaitNotBusy+0x58>
   254e0:	ebffc8b0 	bl	177a8 <MsDelay>
   254e4:	e2544001 	subs	r4, r4, #1
   254e8:	0a000005 	beq	25504 <SMSC951xDevicePHYWaitNotBusy+0x54>
   254ec:	e28d2004 	add	r2, sp, #4
   254f0:	e3a01f45 	mov	r1, #276	; 0x114
   254f4:	e1a00005 	mov	r0, r5
   254f8:	ebffffc9 	bl	25424 <SMSC951xDeviceReadReg>
   254fc:	e3500000 	cmp	r0, #0
   25500:	1afffff2 	bne	254d0 <SMSC951xDevicePHYWaitNotBusy+0x20>
   25504:	e3a00000 	mov	r0, #0
   25508:	e28dd00c 	add	sp, sp, #12
   2550c:	e8bd8030 	pop	{r4, r5, pc}
   25510:	e59f2010 	ldr	r2, [pc, #16]	; 25528 <SMSC951xDevicePHYWaitNotBusy+0x78>
   25514:	e59f1010 	ldr	r1, [pc, #16]	; 2552c <SMSC951xDevicePHYWaitNotBusy+0x7c>
   25518:	e59f0010 	ldr	r0, [pc, #16]	; 25530 <SMSC951xDevicePHYWaitNotBusy+0x80>
   2551c:	ebffc8bf 	bl	17820 <uspi_assertion_failed>
   25520:	eaffffe6 	b	254c0 <SMSC951xDevicePHYWaitNotBusy+0x10>
   25524:	000003e7 	.word	0x000003e7
   25528:	000001c5 	.word	0x000001c5
   2552c:	00031908 	.word	0x00031908
   25530:	000306f0 	.word	0x000306f0

00025534 <SMSC951xDevicePHYWrite>:
   25534:	e92d4070 	push	{r4, r5, r6, lr}
   25538:	e2504000 	subs	r4, r0, #0
   2553c:	e1a05001 	mov	r5, r1
   25540:	e1a06002 	mov	r6, r2
   25544:	0a00001c 	beq	255bc <SMSC951xDevicePHYWrite+0x88>
   25548:	e355001f 	cmp	r5, #31
   2554c:	8a000015 	bhi	255a8 <SMSC951xDevicePHYWrite+0x74>
   25550:	e1a00004 	mov	r0, r4
   25554:	ebffffd5 	bl	254b0 <SMSC951xDevicePHYWaitNotBusy>
   25558:	e3500000 	cmp	r0, #0
   2555c:	1a000001 	bne	25568 <SMSC951xDevicePHYWrite+0x34>
   25560:	e3a00000 	mov	r0, #0
   25564:	e8bd8070 	pop	{r4, r5, r6, pc}
   25568:	e1a02006 	mov	r2, r6
   2556c:	e3a01f46 	mov	r1, #280	; 0x118
   25570:	e1a00004 	mov	r0, r4
   25574:	ebfffebb 	bl	25068 <SMSC951xDeviceWriteReg>
   25578:	e3500000 	cmp	r0, #0
   2557c:	0afffff7 	beq	25560 <SMSC951xDevicePHYWrite+0x2c>
   25580:	e59f2048 	ldr	r2, [pc, #72]	; 255d0 <SMSC951xDevicePHYWrite+0x9c>
   25584:	e3a01f45 	mov	r1, #276	; 0x114
   25588:	e1822305 	orr	r2, r2, r5, lsl #6
   2558c:	e1a00004 	mov	r0, r4
   25590:	ebfffeb4 	bl	25068 <SMSC951xDeviceWriteReg>
   25594:	e3500000 	cmp	r0, #0
   25598:	0afffff0 	beq	25560 <SMSC951xDevicePHYWrite+0x2c>
   2559c:	e1a00004 	mov	r0, r4
   255a0:	e8bd4070 	pop	{r4, r5, r6, lr}
   255a4:	eaffffc1 	b	254b0 <SMSC951xDevicePHYWaitNotBusy>
   255a8:	e59f2024 	ldr	r2, [pc, #36]	; 255d4 <SMSC951xDevicePHYWrite+0xa0>
   255ac:	e59f1024 	ldr	r1, [pc, #36]	; 255d8 <SMSC951xDevicePHYWrite+0xa4>
   255b0:	e59f0024 	ldr	r0, [pc, #36]	; 255dc <SMSC951xDevicePHYWrite+0xa8>
   255b4:	ebffc899 	bl	17820 <uspi_assertion_failed>
   255b8:	eaffffe4 	b	25550 <SMSC951xDevicePHYWrite+0x1c>
   255bc:	e3a02f66 	mov	r2, #408	; 0x198
   255c0:	e59f1010 	ldr	r1, [pc, #16]	; 255d8 <SMSC951xDevicePHYWrite+0xa4>
   255c4:	e59f0014 	ldr	r0, [pc, #20]	; 255e0 <SMSC951xDevicePHYWrite+0xac>
   255c8:	ebffc894 	bl	17820 <uspi_assertion_failed>
   255cc:	eaffffdd 	b	25548 <SMSC951xDevicePHYWrite+0x14>
   255d0:	00000803 	.word	0x00000803
   255d4:	00000199 	.word	0x00000199
   255d8:	00031908 	.word	0x00031908
   255dc:	00031a64 	.word	0x00031a64
   255e0:	000306f0 	.word	0x000306f0

000255e4 <SMSC951xDevicePHYRead>:
   255e4:	e92d4070 	push	{r4, r5, r6, lr}
   255e8:	e2504000 	subs	r4, r0, #0
   255ec:	e24dd008 	sub	sp, sp, #8
   255f0:	e1a05001 	mov	r5, r1
   255f4:	e1a06002 	mov	r6, r2
   255f8:	0a000024 	beq	25690 <SMSC951xDevicePHYRead+0xac>
   255fc:	e355001f 	cmp	r5, #31
   25600:	8a00001d 	bhi	2567c <SMSC951xDevicePHYRead+0x98>
   25604:	e1a00004 	mov	r0, r4
   25608:	ebffffa8 	bl	254b0 <SMSC951xDevicePHYWaitNotBusy>
   2560c:	e3500000 	cmp	r0, #0
   25610:	1a000002 	bne	25620 <SMSC951xDevicePHYRead+0x3c>
   25614:	e3a00000 	mov	r0, #0
   25618:	e28dd008 	add	sp, sp, #8
   2561c:	e8bd8070 	pop	{r4, r5, r6, pc}
   25620:	e59f2090 	ldr	r2, [pc, #144]	; 256b8 <SMSC951xDevicePHYRead+0xd4>
   25624:	e3a01f45 	mov	r1, #276	; 0x114
   25628:	e1822305 	orr	r2, r2, r5, lsl #6
   2562c:	e1a00004 	mov	r0, r4
   25630:	ebfffe8c 	bl	25068 <SMSC951xDeviceWriteReg>
   25634:	e3500000 	cmp	r0, #0
   25638:	0afffff5 	beq	25614 <SMSC951xDevicePHYRead+0x30>
   2563c:	e1a00004 	mov	r0, r4
   25640:	ebffff9a 	bl	254b0 <SMSC951xDevicePHYWaitNotBusy>
   25644:	e3500000 	cmp	r0, #0
   25648:	0afffff1 	beq	25614 <SMSC951xDevicePHYRead+0x30>
   2564c:	e1a00004 	mov	r0, r4
   25650:	e28d2004 	add	r2, sp, #4
   25654:	e3a01f46 	mov	r1, #280	; 0x118
   25658:	ebffff71 	bl	25424 <SMSC951xDeviceReadReg>
   2565c:	e3500000 	cmp	r0, #0
   25660:	0affffec 	beq	25618 <SMSC951xDevicePHYRead+0x34>
   25664:	e3560000 	cmp	r6, #0
   25668:	0a00000d 	beq	256a4 <SMSC951xDevicePHYRead+0xc0>
   2566c:	e59d3004 	ldr	r3, [sp, #4]
   25670:	e3a00001 	mov	r0, #1
   25674:	e1c630b0 	strh	r3, [r6]
   25678:	eaffffe6 	b	25618 <SMSC951xDevicePHYRead+0x34>
   2567c:	e59f2038 	ldr	r2, [pc, #56]	; 256bc <SMSC951xDevicePHYRead+0xd8>
   25680:	e59f1038 	ldr	r1, [pc, #56]	; 256c0 <SMSC951xDevicePHYRead+0xdc>
   25684:	e59f0038 	ldr	r0, [pc, #56]	; 256c4 <SMSC951xDevicePHYRead+0xe0>
   25688:	ebffc864 	bl	17820 <uspi_assertion_failed>
   2568c:	eaffffdc 	b	25604 <SMSC951xDevicePHYRead+0x20>
   25690:	e3a02f6b 	mov	r2, #428	; 0x1ac
   25694:	e59f1024 	ldr	r1, [pc, #36]	; 256c0 <SMSC951xDevicePHYRead+0xdc>
   25698:	e59f0028 	ldr	r0, [pc, #40]	; 256c8 <SMSC951xDevicePHYRead+0xe4>
   2569c:	ebffc85f 	bl	17820 <uspi_assertion_failed>
   256a0:	eaffffd5 	b	255fc <SMSC951xDevicePHYRead+0x18>
   256a4:	e59f2020 	ldr	r2, [pc, #32]	; 256cc <SMSC951xDevicePHYRead+0xe8>
   256a8:	e59f1010 	ldr	r1, [pc, #16]	; 256c0 <SMSC951xDevicePHYRead+0xdc>
   256ac:	e59f001c 	ldr	r0, [pc, #28]	; 256d0 <SMSC951xDevicePHYRead+0xec>
   256b0:	ebffc85a 	bl	17820 <uspi_assertion_failed>
   256b4:	eaffffec 	b	2566c <SMSC951xDevicePHYRead+0x88>
   256b8:	00000801 	.word	0x00000801
   256bc:	000001ad 	.word	0x000001ad
   256c0:	00031908 	.word	0x00031908
   256c4:	00031a64 	.word	0x00031a64
   256c8:	000306f0 	.word	0x000306f0
   256cc:	000001bd 	.word	0x000001bd
   256d0:	00031a74 	.word	0x00031a74

000256d4 <SMSC951xDeviceIsLinkUp>:
   256d4:	e92d4010 	push	{r4, lr}
   256d8:	e2504000 	subs	r4, r0, #0
   256dc:	e24dd008 	sub	sp, sp, #8
   256e0:	0a000009 	beq	2570c <SMSC951xDeviceIsLinkUp+0x38>
   256e4:	e1a00004 	mov	r0, r4
   256e8:	e28d2006 	add	r2, sp, #6
   256ec:	e3a01001 	mov	r1, #1
   256f0:	ebffffbb 	bl	255e4 <SMSC951xDevicePHYRead>
   256f4:	e3500000 	cmp	r0, #0
   256f8:	11dd00b6 	ldrhne	r0, [sp, #6]
   256fc:	11a00140 	asrne	r0, r0, #2
   25700:	12000001 	andne	r0, r0, #1
   25704:	e28dd008 	add	sp, sp, #8
   25708:	e8bd8010 	pop	{r4, pc}
   2570c:	e59f200c 	ldr	r2, [pc, #12]	; 25720 <SMSC951xDeviceIsLinkUp+0x4c>
   25710:	e59f100c 	ldr	r1, [pc, #12]	; 25724 <SMSC951xDeviceIsLinkUp+0x50>
   25714:	e59f000c 	ldr	r0, [pc, #12]	; 25728 <SMSC951xDeviceIsLinkUp+0x54>
   25718:	ebffc840 	bl	17820 <uspi_assertion_failed>
   2571c:	eafffff0 	b	256e4 <SMSC951xDeviceIsLinkUp+0x10>
   25720:	0000018b 	.word	0x0000018b
   25724:	00031908 	.word	0x00031908
   25728:	000306f0 	.word	0x000306f0

0002572c <SMSC951xDeviceDumpReg>:
   2572c:	e92d4070 	push	{r4, r5, r6, lr}
   25730:	e2505000 	subs	r5, r0, #0
   25734:	e24dd010 	sub	sp, sp, #16
   25738:	e1a06001 	mov	r6, r1
   2573c:	e1a04002 	mov	r4, r2
   25740:	0a000014 	beq	25798 <SMSC951xDeviceDumpReg+0x6c>
   25744:	e1a00005 	mov	r0, r5
   25748:	e28d200c 	add	r2, sp, #12
   2574c:	e1a01004 	mov	r1, r4
   25750:	ebffff33 	bl	25424 <SMSC951xDeviceReadReg>
   25754:	e3500000 	cmp	r0, #0
   25758:	0a000007 	beq	2577c <SMSC951xDeviceDumpReg+0x50>
   2575c:	e59d300c 	ldr	r3, [sp, #12]
   25760:	e58d6000 	str	r6, [sp]
   25764:	e59f2040 	ldr	r2, [pc, #64]	; 257ac <SMSC951xDeviceDumpReg+0x80>
   25768:	e3a01004 	mov	r1, #4
   2576c:	e59f003c 	ldr	r0, [pc, #60]	; 257b0 <SMSC951xDeviceDumpReg+0x84>
   25770:	ebff900f 	bl	97b4 <LogWrite>
   25774:	e28dd010 	add	sp, sp, #16
   25778:	e8bd8070 	pop	{r4, r5, r6, pc}
   2577c:	e1a03004 	mov	r3, r4
   25780:	e59f202c 	ldr	r2, [pc, #44]	; 257b4 <SMSC951xDeviceDumpReg+0x88>
   25784:	e3a01001 	mov	r1, #1
   25788:	e59f0020 	ldr	r0, [pc, #32]	; 257b0 <SMSC951xDeviceDumpReg+0x84>
   2578c:	ebff9008 	bl	97b4 <LogWrite>
   25790:	e28dd010 	add	sp, sp, #16
   25794:	e8bd8070 	pop	{r4, r5, r6, pc}
   25798:	e3a02f7d 	mov	r2, #500	; 0x1f4
   2579c:	e59f1014 	ldr	r1, [pc, #20]	; 257b8 <SMSC951xDeviceDumpReg+0x8c>
   257a0:	e59f0014 	ldr	r0, [pc, #20]	; 257bc <SMSC951xDeviceDumpReg+0x90>
   257a4:	ebffc81d 	bl	17820 <uspi_assertion_failed>
   257a8:	eaffffe5 	b	25744 <SMSC951xDeviceDumpReg+0x18>
   257ac:	00031a9c 	.word	0x00031a9c
   257b0:	000318fc 	.word	0x000318fc
   257b4:	00031a80 	.word	0x00031a80
   257b8:	00031908 	.word	0x00031908
   257bc:	000306f0 	.word	0x000306f0

000257c0 <SMSC951xDeviceDumpRegs>:
   257c0:	e92d4010 	push	{r4, lr}
   257c4:	e2504000 	subs	r4, r0, #0
   257c8:	0a000050 	beq	25910 <SMSC951xDeviceDumpRegs+0x150>
   257cc:	e1a00004 	mov	r0, r4
   257d0:	e3a02000 	mov	r2, #0
   257d4:	e59f1148 	ldr	r1, [pc, #328]	; 25924 <SMSC951xDeviceDumpRegs+0x164>
   257d8:	ebffffd3 	bl	2572c <SMSC951xDeviceDumpReg>
   257dc:	e1a00004 	mov	r0, r4
   257e0:	e3a02008 	mov	r2, #8
   257e4:	e59f113c 	ldr	r1, [pc, #316]	; 25928 <SMSC951xDeviceDumpRegs+0x168>
   257e8:	ebffffcf 	bl	2572c <SMSC951xDeviceDumpReg>
   257ec:	e1a00004 	mov	r0, r4
   257f0:	e3a0200c 	mov	r2, #12
   257f4:	e59f1130 	ldr	r1, [pc, #304]	; 2592c <SMSC951xDeviceDumpRegs+0x16c>
   257f8:	ebffffcb 	bl	2572c <SMSC951xDeviceDumpReg>
   257fc:	e1a00004 	mov	r0, r4
   25800:	e3a02010 	mov	r2, #16
   25804:	e59f1124 	ldr	r1, [pc, #292]	; 25930 <SMSC951xDeviceDumpRegs+0x170>
   25808:	ebffffc7 	bl	2572c <SMSC951xDeviceDumpReg>
   2580c:	e1a00004 	mov	r0, r4
   25810:	e3a02014 	mov	r2, #20
   25814:	e59f1118 	ldr	r1, [pc, #280]	; 25934 <SMSC951xDeviceDumpRegs+0x174>
   25818:	ebffffc3 	bl	2572c <SMSC951xDeviceDumpReg>
   2581c:	e1a00004 	mov	r0, r4
   25820:	e3a02018 	mov	r2, #24
   25824:	e59f110c 	ldr	r1, [pc, #268]	; 25938 <SMSC951xDeviceDumpRegs+0x178>
   25828:	ebffffbf 	bl	2572c <SMSC951xDeviceDumpReg>
   2582c:	e1a00004 	mov	r0, r4
   25830:	e3a02020 	mov	r2, #32
   25834:	e59f1100 	ldr	r1, [pc, #256]	; 2593c <SMSC951xDeviceDumpRegs+0x17c>
   25838:	ebffffbb 	bl	2572c <SMSC951xDeviceDumpReg>
   2583c:	e1a00004 	mov	r0, r4
   25840:	e3a02024 	mov	r2, #36	; 0x24
   25844:	e59f10f4 	ldr	r1, [pc, #244]	; 25940 <SMSC951xDeviceDumpRegs+0x180>
   25848:	ebffffb7 	bl	2572c <SMSC951xDeviceDumpReg>
   2584c:	e1a00004 	mov	r0, r4
   25850:	e3a02028 	mov	r2, #40	; 0x28
   25854:	e59f10e8 	ldr	r1, [pc, #232]	; 25944 <SMSC951xDeviceDumpRegs+0x184>
   25858:	ebffffb3 	bl	2572c <SMSC951xDeviceDumpReg>
   2585c:	e1a00004 	mov	r0, r4
   25860:	e3a0202c 	mov	r2, #44	; 0x2c
   25864:	e59f10dc 	ldr	r1, [pc, #220]	; 25948 <SMSC951xDeviceDumpRegs+0x188>
   25868:	ebffffaf 	bl	2572c <SMSC951xDeviceDumpReg>
   2586c:	e1a00004 	mov	r0, r4
   25870:	e3a02038 	mov	r2, #56	; 0x38
   25874:	e59f10d0 	ldr	r1, [pc, #208]	; 2594c <SMSC951xDeviceDumpRegs+0x18c>
   25878:	ebffffab 	bl	2572c <SMSC951xDeviceDumpReg>
   2587c:	e1a00004 	mov	r0, r4
   25880:	e3a02068 	mov	r2, #104	; 0x68
   25884:	e59f10c4 	ldr	r1, [pc, #196]	; 25950 <SMSC951xDeviceDumpRegs+0x190>
   25888:	ebffffa7 	bl	2572c <SMSC951xDeviceDumpReg>
   2588c:	e1a00004 	mov	r0, r4
   25890:	e3a0206c 	mov	r2, #108	; 0x6c
   25894:	e59f10b8 	ldr	r1, [pc, #184]	; 25954 <SMSC951xDeviceDumpRegs+0x194>
   25898:	ebffffa3 	bl	2572c <SMSC951xDeviceDumpReg>
   2589c:	e1a00004 	mov	r0, r4
   258a0:	e3a02c01 	mov	r2, #256	; 0x100
   258a4:	e59f10ac 	ldr	r1, [pc, #172]	; 25958 <SMSC951xDeviceDumpRegs+0x198>
   258a8:	ebffff9f 	bl	2572c <SMSC951xDeviceDumpReg>
   258ac:	e1a00004 	mov	r0, r4
   258b0:	e3a02f41 	mov	r2, #260	; 0x104
   258b4:	e59f10a0 	ldr	r1, [pc, #160]	; 2595c <SMSC951xDeviceDumpRegs+0x19c>
   258b8:	ebffff9b 	bl	2572c <SMSC951xDeviceDumpReg>
   258bc:	e1a00004 	mov	r0, r4
   258c0:	e3a02f42 	mov	r2, #264	; 0x108
   258c4:	e59f1094 	ldr	r1, [pc, #148]	; 25960 <SMSC951xDeviceDumpRegs+0x1a0>
   258c8:	ebffff97 	bl	2572c <SMSC951xDeviceDumpReg>
   258cc:	e1a00004 	mov	r0, r4
   258d0:	e3a02f43 	mov	r2, #268	; 0x10c
   258d4:	e59f1088 	ldr	r1, [pc, #136]	; 25964 <SMSC951xDeviceDumpRegs+0x1a4>
   258d8:	ebffff93 	bl	2572c <SMSC951xDeviceDumpReg>
   258dc:	e1a00004 	mov	r0, r4
   258e0:	e3a02e11 	mov	r2, #272	; 0x110
   258e4:	e59f107c 	ldr	r1, [pc, #124]	; 25968 <SMSC951xDeviceDumpRegs+0x1a8>
   258e8:	ebffff8f 	bl	2572c <SMSC951xDeviceDumpReg>
   258ec:	e1a00004 	mov	r0, r4
   258f0:	e3a02f47 	mov	r2, #284	; 0x11c
   258f4:	e59f1070 	ldr	r1, [pc, #112]	; 2596c <SMSC951xDeviceDumpRegs+0x1ac>
   258f8:	ebffff8b 	bl	2572c <SMSC951xDeviceDumpReg>
   258fc:	e1a00004 	mov	r0, r4
   25900:	e8bd4010 	pop	{r4, lr}
   25904:	e3a02f4b 	mov	r2, #300	; 0x12c
   25908:	e59f1060 	ldr	r1, [pc, #96]	; 25970 <SMSC951xDeviceDumpRegs+0x1b0>
   2590c:	eaffff86 	b	2572c <SMSC951xDeviceDumpReg>
   25910:	e59f205c 	ldr	r2, [pc, #92]	; 25974 <SMSC951xDeviceDumpRegs+0x1b4>
   25914:	e59f105c 	ldr	r1, [pc, #92]	; 25978 <SMSC951xDeviceDumpRegs+0x1b8>
   25918:	e59f005c 	ldr	r0, [pc, #92]	; 2597c <SMSC951xDeviceDumpRegs+0x1bc>
   2591c:	ebffc7bf 	bl	17820 <uspi_assertion_failed>
   25920:	eaffffa9 	b	257cc <SMSC951xDeviceDumpRegs+0xc>
   25924:	00031aa4 	.word	0x00031aa4
   25928:	00031aac 	.word	0x00031aac
   2592c:	00031ab4 	.word	0x00031ab4
   25930:	00031abc 	.word	0x00031abc
   25934:	00031ac4 	.word	0x00031ac4
   25938:	00031acc 	.word	0x00031acc
   2593c:	00031ad8 	.word	0x00031ad8
   25940:	00031ae0 	.word	0x00031ae0
   25944:	00031ae4 	.word	0x00031ae4
   25948:	00031af0 	.word	0x00031af0
   2594c:	00031af8 	.word	0x00031af8
   25950:	00031b04 	.word	0x00031b04
   25954:	00031b10 	.word	0x00031b10
   25958:	00031b1c 	.word	0x00031b1c
   2595c:	00031b24 	.word	0x00031b24
   25960:	00031b2c 	.word	0x00031b2c
   25964:	00031b34 	.word	0x00031b34
   25968:	00031b3c 	.word	0x00031b3c
   2596c:	00031b44 	.word	0x00031b44
   25970:	00031b4c 	.word	0x00031b4c
   25974:	00000203 	.word	0x00000203
   25978:	00031908 	.word	0x00031908
   2597c:	000306f0 	.word	0x000306f0

00025980 <LAN7800Device>:
   25980:	e92d4070 	push	{r4, r5, r6, lr}
   25984:	e2504000 	subs	r4, r0, #0
   25988:	e1a05001 	mov	r5, r1
   2598c:	0a000012 	beq	259dc <LAN7800Device+0x5c>
   25990:	e1a01005 	mov	r1, r5
   25994:	e1a00004 	mov	r0, r4
   25998:	ebfffab8 	bl	24480 <USBFunctionCopy>
   2599c:	e3a03000 	mov	r3, #0
   259a0:	e59f2048 	ldr	r2, [pc, #72]	; 259f0 <LAN7800Device+0x70>
   259a4:	e5843010 	str	r3, [r4, #16]
   259a8:	e5843014 	str	r3, [r4, #20]
   259ac:	e5843024 	str	r3, [r4, #36]	; 0x24
   259b0:	e5842000 	str	r2, [r4]
   259b4:	e3a00d19 	mov	r0, #1600	; 0x640
   259b8:	ebffc771 	bl	17784 <malloc>
   259bc:	e3500000 	cmp	r0, #0
   259c0:	e5840024 	str	r0, [r4, #36]	; 0x24
   259c4:	18bd8070 	popne	{r4, r5, r6, pc}
   259c8:	e59f2024 	ldr	r2, [pc, #36]	; 259f4 <LAN7800Device+0x74>
   259cc:	e59f1024 	ldr	r1, [pc, #36]	; 259f8 <LAN7800Device+0x78>
   259d0:	e59f0024 	ldr	r0, [pc, #36]	; 259fc <LAN7800Device+0x7c>
   259d4:	e8bd4070 	pop	{r4, r5, r6, lr}
   259d8:	eaffc790 	b	17820 <uspi_assertion_failed>
   259dc:	e3a020f8 	mov	r2, #248	; 0xf8
   259e0:	e59f1010 	ldr	r1, [pc, #16]	; 259f8 <LAN7800Device+0x78>
   259e4:	e59f0014 	ldr	r0, [pc, #20]	; 25a00 <LAN7800Device+0x80>
   259e8:	ebffc78c 	bl	17820 <uspi_assertion_failed>
   259ec:	eaffffe7 	b	25990 <LAN7800Device+0x10>
   259f0:	000263c4 	.word	0x000263c4
   259f4:	00000102 	.word	0x00000102
   259f8:	00031b5c 	.word	0x00031b5c
   259fc:	00031914 	.word	0x00031914
   25a00:	000306f0 	.word	0x000306f0

00025a04 <_LAN7800Device>:
   25a04:	e92d4010 	push	{r4, lr}
   25a08:	e2504000 	subs	r4, r0, #0
   25a0c:	0a000018 	beq	25a74 <_LAN7800Device+0x70>
   25a10:	e5940024 	ldr	r0, [r4, #36]	; 0x24
   25a14:	e3500000 	cmp	r0, #0
   25a18:	0a000002 	beq	25a28 <_LAN7800Device+0x24>
   25a1c:	ebffc759 	bl	17788 <free>
   25a20:	e3a03000 	mov	r3, #0
   25a24:	e5843024 	str	r3, [r4, #36]	; 0x24
   25a28:	e5940014 	ldr	r0, [r4, #20]
   25a2c:	e3500000 	cmp	r0, #0
   25a30:	0a000004 	beq	25a48 <_LAN7800Device+0x44>
   25a34:	ebfff41a 	bl	22aa4 <_USBEndpoint>
   25a38:	e5940014 	ldr	r0, [r4, #20]
   25a3c:	ebffc751 	bl	17788 <free>
   25a40:	e3a03000 	mov	r3, #0
   25a44:	e5843014 	str	r3, [r4, #20]
   25a48:	e5940010 	ldr	r0, [r4, #16]
   25a4c:	e3500000 	cmp	r0, #0
   25a50:	0a000004 	beq	25a68 <_LAN7800Device+0x64>
   25a54:	ebfff412 	bl	22aa4 <_USBEndpoint>
   25a58:	e5940010 	ldr	r0, [r4, #16]
   25a5c:	ebffc749 	bl	17788 <free>
   25a60:	e3a03000 	mov	r3, #0
   25a64:	e5843010 	str	r3, [r4, #16]
   25a68:	e1a00004 	mov	r0, r4
   25a6c:	e8bd4010 	pop	{r4, lr}
   25a70:	eafffac4 	b	24588 <_USBFunction>
   25a74:	e59f200c 	ldr	r2, [pc, #12]	; 25a88 <_LAN7800Device+0x84>
   25a78:	e59f100c 	ldr	r1, [pc, #12]	; 25a8c <_LAN7800Device+0x88>
   25a7c:	e59f000c 	ldr	r0, [pc, #12]	; 25a90 <_LAN7800Device+0x8c>
   25a80:	ebffc766 	bl	17820 <uspi_assertion_failed>
   25a84:	eaffffe1 	b	25a10 <_LAN7800Device+0xc>
   25a88:	00000107 	.word	0x00000107
   25a8c:	00031b5c 	.word	0x00031b5c
   25a90:	000306f0 	.word	0x000306f0

00025a94 <LAN7800DeviceGetMACAddress>:
   25a94:	e92d4010 	push	{r4, lr}
   25a98:	e2504000 	subs	r4, r0, #0
   25a9c:	0a000001 	beq	25aa8 <LAN7800DeviceGetMACAddress+0x14>
   25aa0:	e2840018 	add	r0, r4, #24
   25aa4:	e8bd8010 	pop	{r4, pc}
   25aa8:	e59f2010 	ldr	r2, [pc, #16]	; 25ac0 <LAN7800DeviceGetMACAddress+0x2c>
   25aac:	e59f1010 	ldr	r1, [pc, #16]	; 25ac4 <LAN7800DeviceGetMACAddress+0x30>
   25ab0:	e59f0010 	ldr	r0, [pc, #16]	; 25ac8 <LAN7800DeviceGetMACAddress+0x34>
   25ab4:	ebffc759 	bl	17820 <uspi_assertion_failed>
   25ab8:	e2840018 	add	r0, r4, #24
   25abc:	e8bd8010 	pop	{r4, pc}
   25ac0:	000001de 	.word	0x000001de
   25ac4:	00031b5c 	.word	0x00031b5c
   25ac8:	000306f0 	.word	0x000306f0

00025acc <LAN7800DeviceSendFrame>:
   25acc:	e92d4070 	push	{r4, r5, r6, lr}
   25ad0:	e2504000 	subs	r4, r0, #0
   25ad4:	e1a06001 	mov	r6, r1
   25ad8:	e1a05002 	mov	r5, r2
   25adc:	0a00002e 	beq	25b9c <LAN7800DeviceSendFrame+0xd0>
   25ae0:	e59f30c8 	ldr	r3, [pc, #200]	; 25bb0 <LAN7800DeviceSendFrame+0xe4>
   25ae4:	e1550003 	cmp	r5, r3
   25ae8:	8a00001a 	bhi	25b58 <LAN7800DeviceSendFrame+0x8c>
   25aec:	e5943024 	ldr	r3, [r4, #36]	; 0x24
   25af0:	e3530000 	cmp	r3, #0
   25af4:	0a00001e 	beq	25b74 <LAN7800DeviceSendFrame+0xa8>
   25af8:	e3560000 	cmp	r6, #0
   25afc:	0a000021 	beq	25b88 <LAN7800DeviceSendFrame+0xbc>
   25b00:	e5940024 	ldr	r0, [r4, #36]	; 0x24
   25b04:	e1a01006 	mov	r1, r6
   25b08:	e1a02005 	mov	r2, r5
   25b0c:	e2800008 	add	r0, r0, #8
   25b10:	eb000678 	bl	274f8 <uspi_memcpy>
   25b14:	e3a01000 	mov	r1, #0
   25b18:	e5942014 	ldr	r2, [r4, #20]
   25b1c:	e5943024 	ldr	r3, [r4, #36]	; 0x24
   25b20:	e1520001 	cmp	r2, r1
   25b24:	e3852501 	orr	r2, r5, #4194304	; 0x400000
   25b28:	e5831004 	str	r1, [r3, #4]
   25b2c:	e5832000 	str	r2, [r3]
   25b30:	0a00000a 	beq	25b60 <LAN7800DeviceSendFrame+0x94>
   25b34:	e1a00004 	mov	r0, r4
   25b38:	ebfffb16 	bl	24798 <USBFunctionGetHost>
   25b3c:	e2853008 	add	r3, r5, #8
   25b40:	e5942024 	ldr	r2, [r4, #36]	; 0x24
   25b44:	e5941014 	ldr	r1, [r4, #20]
   25b48:	ebffe440 	bl	1ec50 <DWHCIDeviceTransfer>
   25b4c:	e1e00000 	mvn	r0, r0
   25b50:	e1a00fa0 	lsr	r0, r0, #31
   25b54:	e8bd8070 	pop	{r4, r5, r6, pc}
   25b58:	e3a00000 	mov	r0, #0
   25b5c:	e8bd8070 	pop	{r4, r5, r6, pc}
   25b60:	e59f204c 	ldr	r2, [pc, #76]	; 25bb4 <LAN7800DeviceSendFrame+0xe8>
   25b64:	e59f104c 	ldr	r1, [pc, #76]	; 25bb8 <LAN7800DeviceSendFrame+0xec>
   25b68:	e59f004c 	ldr	r0, [pc, #76]	; 25bbc <LAN7800DeviceSendFrame+0xf0>
   25b6c:	ebffc72b 	bl	17820 <uspi_assertion_failed>
   25b70:	eaffffef 	b	25b34 <LAN7800DeviceSendFrame+0x68>
   25b74:	e3a02f7b 	mov	r2, #492	; 0x1ec
   25b78:	e59f1038 	ldr	r1, [pc, #56]	; 25bb8 <LAN7800DeviceSendFrame+0xec>
   25b7c:	e59f003c 	ldr	r0, [pc, #60]	; 25bc0 <LAN7800DeviceSendFrame+0xf4>
   25b80:	ebffc726 	bl	17820 <uspi_assertion_failed>
   25b84:	eaffffdb 	b	25af8 <LAN7800DeviceSendFrame+0x2c>
   25b88:	e59f2034 	ldr	r2, [pc, #52]	; 25bc4 <LAN7800DeviceSendFrame+0xf8>
   25b8c:	e59f1024 	ldr	r1, [pc, #36]	; 25bb8 <LAN7800DeviceSendFrame+0xec>
   25b90:	e59f0030 	ldr	r0, [pc, #48]	; 25bc8 <LAN7800DeviceSendFrame+0xfc>
   25b94:	ebffc721 	bl	17820 <uspi_assertion_failed>
   25b98:	eaffffd8 	b	25b00 <LAN7800DeviceSendFrame+0x34>
   25b9c:	e59f2028 	ldr	r2, [pc, #40]	; 25bcc <LAN7800DeviceSendFrame+0x100>
   25ba0:	e59f1010 	ldr	r1, [pc, #16]	; 25bb8 <LAN7800DeviceSendFrame+0xec>
   25ba4:	e59f0024 	ldr	r0, [pc, #36]	; 25bd0 <LAN7800DeviceSendFrame+0x104>
   25ba8:	ebffc71c 	bl	17820 <uspi_assertion_failed>
   25bac:	eaffffcb 	b	25ae0 <LAN7800DeviceSendFrame+0x14>
   25bb0:	00000638 	.word	0x00000638
   25bb4:	000001f3 	.word	0x000001f3
   25bb8:	00031b5c 	.word	0x00031b5c
   25bbc:	0003192c 	.word	0x0003192c
   25bc0:	00031914 	.word	0x00031914
   25bc4:	000001ed 	.word	0x000001ed
   25bc8:	00031c90 	.word	0x00031c90
   25bcc:	000001e5 	.word	0x000001e5
   25bd0:	000306f0 	.word	0x000306f0

00025bd4 <LAN7800DeviceReceiveFrame>:
   25bd4:	e92d40f0 	push	{r4, r5, r6, r7, lr}
   25bd8:	e2505000 	subs	r5, r0, #0
   25bdc:	e24dd034 	sub	sp, sp, #52	; 0x34
   25be0:	e1a06001 	mov	r6, r1
   25be4:	e1a07002 	mov	r7, r2
   25be8:	0a00003c 	beq	25ce0 <LAN7800DeviceReceiveFrame+0x10c>
   25bec:	e5953010 	ldr	r3, [r5, #16]
   25bf0:	e3530000 	cmp	r3, #0
   25bf4:	0a000040 	beq	25cfc <LAN7800DeviceReceiveFrame+0x128>
   25bf8:	e3560000 	cmp	r6, #0
   25bfc:	0a000044 	beq	25d14 <LAN7800DeviceReceiveFrame+0x140>
   25c00:	e3a04000 	mov	r4, #0
   25c04:	e5951010 	ldr	r1, [r5, #16]
   25c08:	e3a03d19 	mov	r3, #1600	; 0x640
   25c0c:	e1a02006 	mov	r2, r6
   25c10:	e28d000c 	add	r0, sp, #12
   25c14:	e58d4000 	str	r4, [sp]
   25c18:	ebfff480 	bl	22e20 <USBRequest>
   25c1c:	e1a00005 	mov	r0, r5
   25c20:	ebfffadc 	bl	24798 <USBFunctionGetHost>
   25c24:	e28d100c 	add	r1, sp, #12
   25c28:	ebffe2e3 	bl	1e7bc <DWHCIDeviceSubmitBlockingRequest>
   25c2c:	e1500004 	cmp	r0, r4
   25c30:	0a00001e 	beq	25cb0 <LAN7800DeviceReceiveFrame+0xdc>
   25c34:	e28d000c 	add	r0, sp, #12
   25c38:	ebfff4f5 	bl	23014 <USBRequestGetResultLength>
   25c3c:	e3500009 	cmp	r0, #9
   25c40:	9a00001a 	bls	25cb0 <LAN7800DeviceReceiveFrame+0xdc>
   25c44:	e5963000 	ldr	r3, [r6]
   25c48:	e3130501 	tst	r3, #4194304	; 0x400000
   25c4c:	1a000035 	bne	25d28 <LAN7800DeviceReceiveFrame+0x154>
   25c50:	e1a04903 	lsl	r4, r3, #18
   25c54:	e1a04924 	lsr	r4, r4, #18
   25c58:	e240000a 	sub	r0, r0, #10
   25c5c:	e1500004 	cmp	r0, r4
   25c60:	1a000017 	bne	25cc4 <LAN7800DeviceReceiveFrame+0xf0>
   25c64:	e3540004 	cmp	r4, #4
   25c68:	9a00000c 	bls	25ca0 <LAN7800DeviceReceiveFrame+0xcc>
   25c6c:	e2444004 	sub	r4, r4, #4
   25c70:	e1a02004 	mov	r2, r4
   25c74:	e286100a 	add	r1, r6, #10
   25c78:	e1a00006 	mov	r0, r6
   25c7c:	eb00061d 	bl	274f8 <uspi_memcpy>
   25c80:	e3570000 	cmp	r7, #0
   25c84:	0a000030 	beq	25d4c <LAN7800DeviceReceiveFrame+0x178>
   25c88:	e28d000c 	add	r0, sp, #12
   25c8c:	e5874000 	str	r4, [r7]
   25c90:	ebfff492 	bl	22ee0 <_USBRequest>
   25c94:	e3a00001 	mov	r0, #1
   25c98:	e28dd034 	add	sp, sp, #52	; 0x34
   25c9c:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
   25ca0:	e3a02f87 	mov	r2, #540	; 0x21c
   25ca4:	e59f10b4 	ldr	r1, [pc, #180]	; 25d60 <LAN7800DeviceReceiveFrame+0x18c>
   25ca8:	e59f00b4 	ldr	r0, [pc, #180]	; 25d64 <LAN7800DeviceReceiveFrame+0x190>
   25cac:	ebffc6db 	bl	17820 <uspi_assertion_failed>
   25cb0:	e28d000c 	add	r0, sp, #12
   25cb4:	ebfff489 	bl	22ee0 <_USBRequest>
   25cb8:	e3a00000 	mov	r0, #0
   25cbc:	e28dd034 	add	sp, sp, #52	; 0x34
   25cc0:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
   25cc4:	e59f209c 	ldr	r2, [pc, #156]	; 25d68 <LAN7800DeviceReceiveFrame+0x194>
   25cc8:	e59f1090 	ldr	r1, [pc, #144]	; 25d60 <LAN7800DeviceReceiveFrame+0x18c>
   25ccc:	e59f0098 	ldr	r0, [pc, #152]	; 25d6c <LAN7800DeviceReceiveFrame+0x198>
   25cd0:	ebffc6d2 	bl	17820 <uspi_assertion_failed>
   25cd4:	e3540004 	cmp	r4, #4
   25cd8:	8affffe3 	bhi	25c6c <LAN7800DeviceReceiveFrame+0x98>
   25cdc:	eaffffef 	b	25ca0 <LAN7800DeviceReceiveFrame+0xcc>
   25ce0:	e59f2088 	ldr	r2, [pc, #136]	; 25d70 <LAN7800DeviceReceiveFrame+0x19c>
   25ce4:	e59f1074 	ldr	r1, [pc, #116]	; 25d60 <LAN7800DeviceReceiveFrame+0x18c>
   25ce8:	e59f0084 	ldr	r0, [pc, #132]	; 25d74 <LAN7800DeviceReceiveFrame+0x1a0>
   25cec:	ebffc6cb 	bl	17820 <uspi_assertion_failed>
   25cf0:	e5953010 	ldr	r3, [r5, #16]
   25cf4:	e3530000 	cmp	r3, #0
   25cf8:	1affffbe 	bne	25bf8 <LAN7800DeviceReceiveFrame+0x24>
   25cfc:	e3a02f7f 	mov	r2, #508	; 0x1fc
   25d00:	e59f1058 	ldr	r1, [pc, #88]	; 25d60 <LAN7800DeviceReceiveFrame+0x18c>
   25d04:	e59f006c 	ldr	r0, [pc, #108]	; 25d78 <LAN7800DeviceReceiveFrame+0x1a4>
   25d08:	ebffc6c4 	bl	17820 <uspi_assertion_failed>
   25d0c:	e3560000 	cmp	r6, #0
   25d10:	1affffba 	bne	25c00 <LAN7800DeviceReceiveFrame+0x2c>
   25d14:	e59f2060 	ldr	r2, [pc, #96]	; 25d7c <LAN7800DeviceReceiveFrame+0x1a8>
   25d18:	e59f1040 	ldr	r1, [pc, #64]	; 25d60 <LAN7800DeviceReceiveFrame+0x18c>
   25d1c:	e59f005c 	ldr	r0, [pc, #92]	; 25d80 <LAN7800DeviceReceiveFrame+0x1ac>
   25d20:	ebffc6be 	bl	17820 <uspi_assertion_failed>
   25d24:	eaffffb5 	b	25c00 <LAN7800DeviceReceiveFrame+0x2c>
   25d28:	e59f2054 	ldr	r2, [pc, #84]	; 25d84 <LAN7800DeviceReceiveFrame+0x1b0>
   25d2c:	e3a01002 	mov	r1, #2
   25d30:	e59f0050 	ldr	r0, [pc, #80]	; 25d88 <LAN7800DeviceReceiveFrame+0x1b4>
   25d34:	ebff8e9e 	bl	97b4 <LogWrite>
   25d38:	e28d000c 	add	r0, sp, #12
   25d3c:	ebfff467 	bl	22ee0 <_USBRequest>
   25d40:	e1a00004 	mov	r0, r4
   25d44:	e28dd034 	add	sp, sp, #52	; 0x34
   25d48:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
   25d4c:	e59f2038 	ldr	r2, [pc, #56]	; 25d8c <LAN7800DeviceReceiveFrame+0x1b8>
   25d50:	e59f1008 	ldr	r1, [pc, #8]	; 25d60 <LAN7800DeviceReceiveFrame+0x18c>
   25d54:	e59f0034 	ldr	r0, [pc, #52]	; 25d90 <LAN7800DeviceReceiveFrame+0x1bc>
   25d58:	ebffc6b0 	bl	17820 <uspi_assertion_failed>
   25d5c:	eaffffc9 	b	25c88 <LAN7800DeviceReceiveFrame+0xb4>
   25d60:	00031b5c 	.word	0x00031b5c
   25d64:	000319a4 	.word	0x000319a4
   25d68:	0000021b 	.word	0x0000021b
   25d6c:	00031b68 	.word	0x00031b68
   25d70:	000001fa 	.word	0x000001fa
   25d74:	000306f0 	.word	0x000306f0
   25d78:	0003194c 	.word	0x0003194c
   25d7c:	000001fd 	.word	0x000001fd
   25d80:	00031c90 	.word	0x00031c90
   25d84:	0003196c 	.word	0x0003196c
   25d88:	00031b54 	.word	0x00031b54
   25d8c:	00000229 	.word	0x00000229
   25d90:	000319b8 	.word	0x000319b8

00025d94 <LAN7800DeviceWriteReg>:
   25d94:	e92d4070 	push	{r4, r5, r6, lr}
   25d98:	e2504000 	subs	r4, r0, #0
   25d9c:	e24dd018 	sub	sp, sp, #24
   25da0:	e1a05001 	mov	r5, r1
   25da4:	e58d2014 	str	r2, [sp, #20]
   25da8:	0a00001e 	beq	25e28 <LAN7800DeviceWriteReg+0x94>
   25dac:	e1a00004 	mov	r0, r4
   25db0:	ebfffa78 	bl	24798 <USBFunctionGetHost>
   25db4:	e1a06000 	mov	r6, r0
   25db8:	e1a00004 	mov	r0, r4
   25dbc:	ebfffa5e 	bl	2473c <USBFunctionGetEndpoint0>
   25dc0:	e3a04000 	mov	r4, #0
   25dc4:	e3a0c004 	mov	ip, #4
   25dc8:	e28d2014 	add	r2, sp, #20
   25dcc:	e6ff3075 	uxth	r3, r5
   25dd0:	e1a01000 	mov	r1, r0
   25dd4:	e58d2008 	str	r2, [sp, #8]
   25dd8:	e58d3004 	str	r3, [sp, #4]
   25ddc:	e58dc00c 	str	ip, [sp, #12]
   25de0:	e1a00006 	mov	r0, r6
   25de4:	e58d4000 	str	r4, [sp]
   25de8:	e3a030a0 	mov	r3, #160	; 0xa0
   25dec:	e3a02040 	mov	r2, #64	; 0x40
   25df0:	ebffe30c 	bl	1ea28 <DWHCIDeviceControlMessage>
   25df4:	e1500004 	cmp	r0, r4
   25df8:	a3a00001 	movge	r0, #1
   25dfc:	ba000001 	blt	25e08 <LAN7800DeviceWriteReg+0x74>
   25e00:	e28dd018 	add	sp, sp, #24
   25e04:	e8bd8070 	pop	{r4, r5, r6, pc}
   25e08:	e1a03005 	mov	r3, r5
   25e0c:	e59f2028 	ldr	r2, [pc, #40]	; 25e3c <LAN7800DeviceWriteReg+0xa8>
   25e10:	e3a01002 	mov	r1, #2
   25e14:	e59f0024 	ldr	r0, [pc, #36]	; 25e40 <LAN7800DeviceWriteReg+0xac>
   25e18:	ebff8e65 	bl	97b4 <LogWrite>
   25e1c:	e1a00004 	mov	r0, r4
   25e20:	e28dd018 	add	sp, sp, #24
   25e24:	e8bd8070 	pop	{r4, r5, r6, pc}
   25e28:	e59f2014 	ldr	r2, [pc, #20]	; 25e44 <LAN7800DeviceWriteReg+0xb0>
   25e2c:	e59f1014 	ldr	r1, [pc, #20]	; 25e48 <LAN7800DeviceWriteReg+0xb4>
   25e30:	e59f0014 	ldr	r0, [pc, #20]	; 25e4c <LAN7800DeviceWriteReg+0xb8>
   25e34:	ebffc679 	bl	17820 <uspi_assertion_failed>
   25e38:	eaffffdb 	b	25dac <LAN7800DeviceWriteReg+0x18>
   25e3c:	00031b98 	.word	0x00031b98
   25e40:	00031b54 	.word	0x00031b54
   25e44:	000002e2 	.word	0x000002e2
   25e48:	00031b5c 	.word	0x00031b5c
   25e4c:	000306f0 	.word	0x000306f0

00025e50 <LAN7800DeviceInitMACAddress>:
   25e50:	e92d40f0 	push	{r4, r5, r6, r7, lr}
   25e54:	e2504000 	subs	r4, r0, #0
   25e58:	e24dd01c 	sub	sp, sp, #28
   25e5c:	0a000034 	beq	25f34 <LAN7800DeviceInitMACAddress+0xe4>
   25e60:	e28d0004 	add	r0, sp, #4
   25e64:	ebffc668 	bl	1780c <GetMACAddress>
   25e68:	e3500000 	cmp	r0, #0
   25e6c:	1a000002 	bne	25e7c <LAN7800DeviceInitMACAddress+0x2c>
   25e70:	e3a00000 	mov	r0, #0
   25e74:	e28dd01c 	add	sp, sp, #28
   25e78:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
   25e7c:	e2846018 	add	r6, r4, #24
   25e80:	e28d1004 	add	r1, sp, #4
   25e84:	e1a00006 	mov	r0, r6
   25e88:	ebfff864 	bl	24020 <MACAddressSet>
   25e8c:	e59d5004 	ldr	r5, [sp, #4]
   25e90:	e3a01f47 	mov	r1, #284	; 0x11c
   25e94:	e1a02005 	mov	r2, r5
   25e98:	e1a00004 	mov	r0, r4
   25e9c:	e1dd70b8 	ldrh	r7, [sp, #8]
   25ea0:	ebffffbb 	bl	25d94 <LAN7800DeviceWriteReg>
   25ea4:	e3500000 	cmp	r0, #0
   25ea8:	0afffff0 	beq	25e70 <LAN7800DeviceInitMACAddress+0x20>
   25eac:	e1a02007 	mov	r2, r7
   25eb0:	e3a01f46 	mov	r1, #280	; 0x118
   25eb4:	e1a00004 	mov	r0, r4
   25eb8:	ebffffb5 	bl	25d94 <LAN7800DeviceWriteReg>
   25ebc:	e3500000 	cmp	r0, #0
   25ec0:	0affffea 	beq	25e70 <LAN7800DeviceInitMACAddress+0x20>
   25ec4:	e1a02005 	mov	r2, r5
   25ec8:	e59f1078 	ldr	r1, [pc, #120]	; 25f48 <LAN7800DeviceInitMACAddress+0xf8>
   25ecc:	e1a00004 	mov	r0, r4
   25ed0:	ebffffaf 	bl	25d94 <LAN7800DeviceWriteReg>
   25ed4:	e3500000 	cmp	r0, #0
   25ed8:	0affffe4 	beq	25e70 <LAN7800DeviceInitMACAddress+0x20>
   25edc:	e3872102 	orr	r2, r7, #-2147483648	; 0x80000000
   25ee0:	e1a00004 	mov	r0, r4
   25ee4:	e3a01b01 	mov	r1, #1024	; 0x400
   25ee8:	ebffffa9 	bl	25d94 <LAN7800DeviceWriteReg>
   25eec:	e3500000 	cmp	r0, #0
   25ef0:	0affffde 	beq	25e70 <LAN7800DeviceInitMACAddress+0x20>
   25ef4:	e28d000c 	add	r0, sp, #12
   25ef8:	eb00026e 	bl	268b8 <String>
   25efc:	e28d100c 	add	r1, sp, #12
   25f00:	e1a00006 	mov	r0, r6
   25f04:	ebfff8f4 	bl	242dc <MACAddressFormat>
   25f08:	e28d000c 	add	r0, sp, #12
   25f0c:	eb00029c 	bl	26984 <StringGet>
   25f10:	e59f2034 	ldr	r2, [pc, #52]	; 25f4c <LAN7800DeviceInitMACAddress+0xfc>
   25f14:	e1a03000 	mov	r3, r0
   25f18:	e3a01004 	mov	r1, #4
   25f1c:	e59f002c 	ldr	r0, [pc, #44]	; 25f50 <LAN7800DeviceInitMACAddress+0x100>
   25f20:	ebff8e23 	bl	97b4 <LogWrite>
   25f24:	e28d000c 	add	r0, sp, #12
   25f28:	eb000284 	bl	26940 <_String>
   25f2c:	e3a00001 	mov	r0, #1
   25f30:	eaffffcf 	b	25e74 <LAN7800DeviceInitMACAddress+0x24>
   25f34:	e3a02d09 	mov	r2, #576	; 0x240
   25f38:	e59f1014 	ldr	r1, [pc, #20]	; 25f54 <LAN7800DeviceInitMACAddress+0x104>
   25f3c:	e59f0014 	ldr	r0, [pc, #20]	; 25f58 <LAN7800DeviceInitMACAddress+0x108>
   25f40:	ebffc636 	bl	17820 <uspi_assertion_failed>
   25f44:	eaffffc5 	b	25e60 <LAN7800DeviceInitMACAddress+0x10>
   25f48:	00000404 	.word	0x00000404
   25f4c:	000319cc 	.word	0x000319cc
   25f50:	00031b54 	.word	0x00031b54
   25f54:	00031b5c 	.word	0x00031b5c
   25f58:	000306f0 	.word	0x000306f0

00025f5c <LAN7800DeviceReadReg>:
   25f5c:	e92d40f0 	push	{r4, r5, r6, r7, lr}
   25f60:	e2504000 	subs	r4, r0, #0
   25f64:	e24dd014 	sub	sp, sp, #20
   25f68:	e1a05001 	mov	r5, r1
   25f6c:	e1a07002 	mov	r7, r2
   25f70:	0a00001b 	beq	25fe4 <LAN7800DeviceReadReg+0x88>
   25f74:	e1a00004 	mov	r0, r4
   25f78:	ebfffa06 	bl	24798 <USBFunctionGetHost>
   25f7c:	e1a06000 	mov	r6, r0
   25f80:	e1a00004 	mov	r0, r4
   25f84:	ebfff9ec 	bl	2473c <USBFunctionGetEndpoint0>
   25f88:	e3a04000 	mov	r4, #0
   25f8c:	e3a02004 	mov	r2, #4
   25f90:	e6ff3075 	uxth	r3, r5
   25f94:	e1a01000 	mov	r1, r0
   25f98:	e58d200c 	str	r2, [sp, #12]
   25f9c:	e58d3004 	str	r3, [sp, #4]
   25fa0:	e58d7008 	str	r7, [sp, #8]
   25fa4:	e1a00006 	mov	r0, r6
   25fa8:	e58d4000 	str	r4, [sp]
   25fac:	e3a030a1 	mov	r3, #161	; 0xa1
   25fb0:	e3a020c0 	mov	r2, #192	; 0xc0
   25fb4:	ebffe29b 	bl	1ea28 <DWHCIDeviceControlMessage>
   25fb8:	e3500004 	cmp	r0, #4
   25fbc:	03a00001 	moveq	r0, #1
   25fc0:	0a000005 	beq	25fdc <LAN7800DeviceReadReg+0x80>
   25fc4:	e59f002c 	ldr	r0, [pc, #44]	; 25ff8 <LAN7800DeviceReadReg+0x9c>
   25fc8:	e1a03005 	mov	r3, r5
   25fcc:	e59f2028 	ldr	r2, [pc, #40]	; 25ffc <LAN7800DeviceReadReg+0xa0>
   25fd0:	e3a01002 	mov	r1, #2
   25fd4:	ebff8df6 	bl	97b4 <LogWrite>
   25fd8:	e1a00004 	mov	r0, r4
   25fdc:	e28dd014 	add	sp, sp, #20
   25fe0:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
   25fe4:	e59f2014 	ldr	r2, [pc, #20]	; 26000 <LAN7800DeviceReadReg+0xa4>
   25fe8:	e59f1014 	ldr	r1, [pc, #20]	; 26004 <LAN7800DeviceReadReg+0xa8>
   25fec:	e59f0014 	ldr	r0, [pc, #20]	; 26008 <LAN7800DeviceReadReg+0xac>
   25ff0:	ebffc60a 	bl	17820 <uspi_assertion_failed>
   25ff4:	eaffffde 	b	25f74 <LAN7800DeviceReadReg+0x18>
   25ff8:	00031b54 	.word	0x00031b54
   25ffc:	00031a80 	.word	0x00031a80
   26000:	000002f3 	.word	0x000002f3
   26004:	00031b5c 	.word	0x00031b5c
   26008:	000306f0 	.word	0x000306f0

0002600c <LAN7800DeviceWaitReg>:
   2600c:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   26010:	e2505000 	subs	r5, r0, #0
   26014:	e24dd008 	sub	sp, sp, #8
   26018:	e1a06001 	mov	r6, r1
   2601c:	e1a07002 	mov	r7, r2
   26020:	e1a08003 	mov	r8, r3
   26024:	0a000014 	beq	2607c <LAN7800DeviceWaitReg+0x70>
   26028:	e3a00001 	mov	r0, #1
   2602c:	ebffc5dd 	bl	177a8 <MsDelay>
   26030:	e59f4058 	ldr	r4, [pc, #88]	; 26090 <LAN7800DeviceWaitReg+0x84>
   26034:	ea000007 	b	26058 <LAN7800DeviceWaitReg+0x4c>
   26038:	e59d3004 	ldr	r3, [sp, #4]
   2603c:	e3a00001 	mov	r0, #1
   26040:	e0033007 	and	r3, r3, r7
   26044:	e1530008 	cmp	r3, r8
   26048:	0a000009 	beq	26074 <LAN7800DeviceWaitReg+0x68>
   2604c:	ebffc5d5 	bl	177a8 <MsDelay>
   26050:	e2544001 	subs	r4, r4, #1
   26054:	0a000005 	beq	26070 <LAN7800DeviceWaitReg+0x64>
   26058:	e28d2004 	add	r2, sp, #4
   2605c:	e1a01006 	mov	r1, r6
   26060:	e1a00005 	mov	r0, r5
   26064:	ebffffbc 	bl	25f5c <LAN7800DeviceReadReg>
   26068:	e3500000 	cmp	r0, #0
   2606c:	1afffff1 	bne	26038 <LAN7800DeviceWaitReg+0x2c>
   26070:	e3a00000 	mov	r0, #0
   26074:	e28dd008 	add	sp, sp, #8
   26078:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   2607c:	e59f2010 	ldr	r2, [pc, #16]	; 26094 <LAN7800DeviceWaitReg+0x88>
   26080:	e59f1010 	ldr	r1, [pc, #16]	; 26098 <LAN7800DeviceWaitReg+0x8c>
   26084:	e59f0010 	ldr	r0, [pc, #16]	; 2609c <LAN7800DeviceWaitReg+0x90>
   26088:	ebffc5e4 	bl	17820 <uspi_assertion_failed>
   2608c:	eaffffe5 	b	26028 <LAN7800DeviceWaitReg+0x1c>
   26090:	000003e7 	.word	0x000003e7
   26094:	000002b9 	.word	0x000002b9
   26098:	00031b5c 	.word	0x00031b5c
   2609c:	000306f0 	.word	0x000306f0

000260a0 <LAN7800DevicePHYWrite>:
   260a0:	e92d4070 	push	{r4, r5, r6, lr}
   260a4:	e2505000 	subs	r5, r0, #0
   260a8:	e1a04001 	mov	r4, r1
   260ac:	e1a06002 	mov	r6, r2
   260b0:	0a000024 	beq	26148 <LAN7800DevicePHYWrite+0xa8>
   260b4:	e354001e 	cmp	r4, #30
   260b8:	8a00001d 	bhi	26134 <LAN7800DevicePHYWrite+0x94>
   260bc:	e3a03000 	mov	r3, #0
   260c0:	e3a02001 	mov	r2, #1
   260c4:	e3a01e12 	mov	r1, #288	; 0x120
   260c8:	e1a00005 	mov	r0, r5
   260cc:	ebffffce 	bl	2600c <LAN7800DeviceWaitReg>
   260d0:	e3500000 	cmp	r0, #0
   260d4:	1a000001 	bne	260e0 <LAN7800DevicePHYWrite+0x40>
   260d8:	e3a00000 	mov	r0, #0
   260dc:	e8bd8070 	pop	{r4, r5, r6, pc}
   260e0:	e1a02006 	mov	r2, r6
   260e4:	e3a01f49 	mov	r1, #292	; 0x124
   260e8:	e1a00005 	mov	r0, r5
   260ec:	ebffff28 	bl	25d94 <LAN7800DeviceWriteReg>
   260f0:	e3500000 	cmp	r0, #0
   260f4:	0afffff7 	beq	260d8 <LAN7800DevicePHYWrite+0x38>
   260f8:	e1a02304 	lsl	r2, r4, #6
   260fc:	e2022d1f 	and	r2, r2, #1984	; 0x7c0
   26100:	e3822b02 	orr	r2, r2, #2048	; 0x800
   26104:	e3822003 	orr	r2, r2, #3
   26108:	e3a01e12 	mov	r1, #288	; 0x120
   2610c:	e1a00005 	mov	r0, r5
   26110:	ebffff1f 	bl	25d94 <LAN7800DeviceWriteReg>
   26114:	e3500000 	cmp	r0, #0
   26118:	0affffee 	beq	260d8 <LAN7800DevicePHYWrite+0x38>
   2611c:	e1a00005 	mov	r0, r5
   26120:	e8bd4070 	pop	{r4, r5, r6, lr}
   26124:	e3a03000 	mov	r3, #0
   26128:	e3a02001 	mov	r2, #1
   2612c:	e3a01e12 	mov	r1, #288	; 0x120
   26130:	eaffffb5 	b	2600c <LAN7800DeviceWaitReg>
   26134:	e59f2020 	ldr	r2, [pc, #32]	; 2615c <LAN7800DevicePHYWrite+0xbc>
   26138:	e59f1020 	ldr	r1, [pc, #32]	; 26160 <LAN7800DevicePHYWrite+0xc0>
   2613c:	e59f0020 	ldr	r0, [pc, #32]	; 26164 <LAN7800DevicePHYWrite+0xc4>
   26140:	ebffc5b6 	bl	17820 <uspi_assertion_failed>
   26144:	eaffffdc 	b	260bc <LAN7800DevicePHYWrite+0x1c>
   26148:	e59f2018 	ldr	r2, [pc, #24]	; 26168 <LAN7800DevicePHYWrite+0xc8>
   2614c:	e59f100c 	ldr	r1, [pc, #12]	; 26160 <LAN7800DevicePHYWrite+0xc0>
   26150:	e59f0014 	ldr	r0, [pc, #20]	; 2616c <LAN7800DevicePHYWrite+0xcc>
   26154:	ebffc5b1 	bl	17820 <uspi_assertion_failed>
   26158:	eaffffd5 	b	260b4 <LAN7800DevicePHYWrite+0x14>
   2615c:	00000283 	.word	0x00000283
   26160:	00031b5c 	.word	0x00031b5c
   26164:	00031bb4 	.word	0x00031bb4
   26168:	00000282 	.word	0x00000282
   2616c:	000306f0 	.word	0x000306f0

00026170 <LAN7800DevicePHYRead>:
   26170:	e92d4070 	push	{r4, r5, r6, lr}
   26174:	e2505000 	subs	r5, r0, #0
   26178:	e24dd008 	sub	sp, sp, #8
   2617c:	e1a04001 	mov	r4, r1
   26180:	e1a06002 	mov	r6, r2
   26184:	0a00002c 	beq	2623c <LAN7800DevicePHYRead+0xcc>
   26188:	e354001e 	cmp	r4, #30
   2618c:	8a000025 	bhi	26228 <LAN7800DevicePHYRead+0xb8>
   26190:	e3a03000 	mov	r3, #0
   26194:	e3a02001 	mov	r2, #1
   26198:	e3a01e12 	mov	r1, #288	; 0x120
   2619c:	e1a00005 	mov	r0, r5
   261a0:	ebffff99 	bl	2600c <LAN7800DeviceWaitReg>
   261a4:	e3500000 	cmp	r0, #0
   261a8:	1a000002 	bne	261b8 <LAN7800DevicePHYRead+0x48>
   261ac:	e3a00000 	mov	r0, #0
   261b0:	e28dd008 	add	sp, sp, #8
   261b4:	e8bd8070 	pop	{r4, r5, r6, pc}
   261b8:	e1a02304 	lsl	r2, r4, #6
   261bc:	e2022d1f 	and	r2, r2, #1984	; 0x7c0
   261c0:	e3822b02 	orr	r2, r2, #2048	; 0x800
   261c4:	e3822001 	orr	r2, r2, #1
   261c8:	e3a01e12 	mov	r1, #288	; 0x120
   261cc:	e1a00005 	mov	r0, r5
   261d0:	ebfffeef 	bl	25d94 <LAN7800DeviceWriteReg>
   261d4:	e3500000 	cmp	r0, #0
   261d8:	0afffff3 	beq	261ac <LAN7800DevicePHYRead+0x3c>
   261dc:	e3a03000 	mov	r3, #0
   261e0:	e3a02001 	mov	r2, #1
   261e4:	e3a01e12 	mov	r1, #288	; 0x120
   261e8:	e1a00005 	mov	r0, r5
   261ec:	ebffff86 	bl	2600c <LAN7800DeviceWaitReg>
   261f0:	e3500000 	cmp	r0, #0
   261f4:	0affffec 	beq	261ac <LAN7800DevicePHYRead+0x3c>
   261f8:	e1a00005 	mov	r0, r5
   261fc:	e28d2004 	add	r2, sp, #4
   26200:	e3a01f49 	mov	r1, #292	; 0x124
   26204:	ebffff54 	bl	25f5c <LAN7800DeviceReadReg>
   26208:	e3500000 	cmp	r0, #0
   2620c:	0affffe6 	beq	261ac <LAN7800DevicePHYRead+0x3c>
   26210:	e3560000 	cmp	r6, #0
   26214:	0a00000d 	beq	26250 <LAN7800DevicePHYRead+0xe0>
   26218:	e59d3004 	ldr	r3, [sp, #4]
   2621c:	e3a00001 	mov	r0, #1
   26220:	e1c630b0 	strh	r3, [r6]
   26224:	eaffffe1 	b	261b0 <LAN7800DevicePHYRead+0x40>
   26228:	e59f2034 	ldr	r2, [pc, #52]	; 26264 <LAN7800DevicePHYRead+0xf4>
   2622c:	e59f1034 	ldr	r1, [pc, #52]	; 26268 <LAN7800DevicePHYRead+0xf8>
   26230:	e59f0034 	ldr	r0, [pc, #52]	; 2626c <LAN7800DevicePHYRead+0xfc>
   26234:	ebffc579 	bl	17820 <uspi_assertion_failed>
   26238:	eaffffd4 	b	26190 <LAN7800DevicePHYRead+0x20>
   2623c:	e59f202c 	ldr	r2, [pc, #44]	; 26270 <LAN7800DevicePHYRead+0x100>
   26240:	e59f1020 	ldr	r1, [pc, #32]	; 26268 <LAN7800DevicePHYRead+0xf8>
   26244:	e59f0028 	ldr	r0, [pc, #40]	; 26274 <LAN7800DevicePHYRead+0x104>
   26248:	ebffc574 	bl	17820 <uspi_assertion_failed>
   2624c:	eaffffcd 	b	26188 <LAN7800DevicePHYRead+0x18>
   26250:	e59f2020 	ldr	r2, [pc, #32]	; 26278 <LAN7800DevicePHYRead+0x108>
   26254:	e59f100c 	ldr	r1, [pc, #12]	; 26268 <LAN7800DevicePHYRead+0xf8>
   26258:	e59f001c 	ldr	r0, [pc, #28]	; 2627c <LAN7800DevicePHYRead+0x10c>
   2625c:	ebffc56f 	bl	17820 <uspi_assertion_failed>
   26260:	eaffffec 	b	26218 <LAN7800DevicePHYRead+0xa8>
   26264:	0000029b 	.word	0x0000029b
   26268:	00031b5c 	.word	0x00031b5c
   2626c:	00031bb4 	.word	0x00031bb4
   26270:	0000029a 	.word	0x0000029a
   26274:	000306f0 	.word	0x000306f0
   26278:	000002af 	.word	0x000002af
   2627c:	00031a74 	.word	0x00031a74

00026280 <LAN7800DeviceIsLinkUp>:
   26280:	e92d4010 	push	{r4, lr}
   26284:	e2504000 	subs	r4, r0, #0
   26288:	e24dd008 	sub	sp, sp, #8
   2628c:	0a000009 	beq	262b8 <LAN7800DeviceIsLinkUp+0x38>
   26290:	e1a00004 	mov	r0, r4
   26294:	e28d2006 	add	r2, sp, #6
   26298:	e3a01001 	mov	r1, #1
   2629c:	ebffffb3 	bl	26170 <LAN7800DevicePHYRead>
   262a0:	e3500000 	cmp	r0, #0
   262a4:	11dd00b6 	ldrhne	r0, [sp, #6]
   262a8:	11a00140 	asrne	r0, r0, #2
   262ac:	12000001 	andne	r0, r0, #1
   262b0:	e28dd008 	add	sp, sp, #8
   262b4:	e8bd8010 	pop	{r4, pc}
   262b8:	e59f200c 	ldr	r2, [pc, #12]	; 262cc <LAN7800DeviceIsLinkUp+0x4c>
   262bc:	e59f100c 	ldr	r1, [pc, #12]	; 262d0 <LAN7800DeviceIsLinkUp+0x50>
   262c0:	e59f000c 	ldr	r0, [pc, #12]	; 262d4 <LAN7800DeviceIsLinkUp+0x54>
   262c4:	ebffc555 	bl	17820 <uspi_assertion_failed>
   262c8:	eafffff0 	b	26290 <LAN7800DeviceIsLinkUp+0x10>
   262cc:	00000233 	.word	0x00000233
   262d0:	00031b5c 	.word	0x00031b5c
   262d4:	000306f0 	.word	0x000306f0

000262d8 <LAN7800DeviceInitPHY>:
   262d8:	e92d4010 	push	{r4, lr}
   262dc:	e2504000 	subs	r4, r0, #0
   262e0:	e24dd008 	sub	sp, sp, #8
   262e4:	0a00000f 	beq	26328 <LAN7800DeviceInitPHY+0x50>
   262e8:	e28d2006 	add	r2, sp, #6
   262ec:	e3a0101d 	mov	r1, #29
   262f0:	e1a00004 	mov	r0, r4
   262f4:	ebffff9d 	bl	26170 <LAN7800DevicePHYRead>
   262f8:	e3500000 	cmp	r0, #0
   262fc:	0a000007 	beq	26320 <LAN7800DeviceInitPHY+0x48>
   26300:	e1dd30b6 	ldrh	r3, [sp, #6]
   26304:	e1a00004 	mov	r0, r4
   26308:	e3c330ff 	bic	r3, r3, #255	; 0xff
   2630c:	e3833061 	orr	r3, r3, #97	; 0x61
   26310:	e1a02003 	mov	r2, r3
   26314:	e3a0101d 	mov	r1, #29
   26318:	e1cd30b6 	strh	r3, [sp, #6]
   2631c:	ebffff5f 	bl	260a0 <LAN7800DevicePHYWrite>
   26320:	e28dd008 	add	sp, sp, #8
   26324:	e8bd8010 	pop	{r4, pc}
   26328:	e59f200c 	ldr	r2, [pc, #12]	; 2633c <LAN7800DeviceInitPHY+0x64>
   2632c:	e59f100c 	ldr	r1, [pc, #12]	; 26340 <LAN7800DeviceInitPHY+0x68>
   26330:	e59f000c 	ldr	r0, [pc, #12]	; 26344 <LAN7800DeviceInitPHY+0x6c>
   26334:	ebffc539 	bl	17820 <uspi_assertion_failed>
   26338:	eaffffea 	b	262e8 <LAN7800DeviceInitPHY+0x10>
   2633c:	0000026a 	.word	0x0000026a
   26340:	00031b5c 	.word	0x00031b5c
   26344:	000306f0 	.word	0x000306f0

00026348 <LAN7800DeviceReadWriteReg>:
   26348:	e92d40f0 	push	{r4, r5, r6, r7, lr}
   2634c:	e2505000 	subs	r5, r0, #0
   26350:	e24dd00c 	sub	sp, sp, #12
   26354:	e1a06001 	mov	r6, r1
   26358:	e1a07002 	mov	r7, r2
   2635c:	e1a04003 	mov	r4, r3
   26360:	0a00000f 	beq	263a4 <LAN7800DeviceReadWriteReg+0x5c>
   26364:	e28d2004 	add	r2, sp, #4
   26368:	e1a01006 	mov	r1, r6
   2636c:	e1a00005 	mov	r0, r5
   26370:	ebfffef9 	bl	25f5c <LAN7800DeviceReadReg>
   26374:	e3500000 	cmp	r0, #0
   26378:	0a000007 	beq	2639c <LAN7800DeviceReadWriteReg+0x54>
   2637c:	e59d3004 	ldr	r3, [sp, #4]
   26380:	e1a01006 	mov	r1, r6
   26384:	e0044003 	and	r4, r4, r3
   26388:	e1844007 	orr	r4, r4, r7
   2638c:	e1a00005 	mov	r0, r5
   26390:	e1a02004 	mov	r2, r4
   26394:	e58d4004 	str	r4, [sp, #4]
   26398:	ebfffe7d 	bl	25d94 <LAN7800DeviceWriteReg>
   2639c:	e28dd00c 	add	sp, sp, #12
   263a0:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
   263a4:	e59f200c 	ldr	r2, [pc, #12]	; 263b8 <LAN7800DeviceReadWriteReg+0x70>
   263a8:	e59f100c 	ldr	r1, [pc, #12]	; 263bc <LAN7800DeviceReadWriteReg+0x74>
   263ac:	e59f000c 	ldr	r0, [pc, #12]	; 263c0 <LAN7800DeviceReadWriteReg+0x78>
   263b0:	ebffc51a 	bl	17820 <uspi_assertion_failed>
   263b4:	eaffffea 	b	26364 <LAN7800DeviceReadWriteReg+0x1c>
   263b8:	000002d2 	.word	0x000002d2
   263bc:	00031b5c 	.word	0x00031b5c
   263c0:	000306f0 	.word	0x000306f0

000263c4 <LAN7800DeviceConfigure>:
   263c4:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
   263c8:	e2505000 	subs	r5, r0, #0
   263cc:	e24dd014 	sub	sp, sp, #20
   263d0:	0a000061 	beq	2655c <LAN7800DeviceConfigure+0x198>
   263d4:	e1a00005 	mov	r0, r5
   263d8:	ebfff8ac 	bl	24690 <USBFunctionGetNumEndpoints>
   263dc:	e3500003 	cmp	r0, #3
   263e0:	1a000040 	bne	264e8 <LAN7800DeviceConfigure+0x124>
   263e4:	e59f7480 	ldr	r7, [pc, #1152]	; 2686c <LAN7800DeviceConfigure+0x4a8>
   263e8:	e59f8480 	ldr	r8, [pc, #1152]	; 26870 <LAN7800DeviceConfigure+0x4ac>
   263ec:	e59f9480 	ldr	r9, [pc, #1152]	; 26874 <LAN7800DeviceConfigure+0x4b0>
   263f0:	ea000003 	b	26404 <LAN7800DeviceConfigure+0x40>
   263f4:	e5d43003 	ldrb	r3, [r4, #3]
   263f8:	e203303f 	and	r3, r3, #63	; 0x3f
   263fc:	e3530002 	cmp	r3, #2
   26400:	0a000025 	beq	2649c <LAN7800DeviceConfigure+0xd8>
   26404:	e3a01005 	mov	r1, #5
   26408:	e1a00005 	mov	r0, r5
   2640c:	ebfff931 	bl	248d8 <USBFunctionGetDescriptor>
   26410:	e2504000 	subs	r4, r0, #0
   26414:	1afffff6 	bne	263f4 <LAN7800DeviceConfigure+0x30>
   26418:	e5953010 	ldr	r3, [r5, #16]
   2641c:	e1a00005 	mov	r0, r5
   26420:	e3530000 	cmp	r3, #0
   26424:	0a000016 	beq	26484 <LAN7800DeviceConfigure+0xc0>
   26428:	e5953014 	ldr	r3, [r5, #20]
   2642c:	e3530000 	cmp	r3, #0
   26430:	0a000013 	beq	26484 <LAN7800DeviceConfigure+0xc0>
   26434:	ebfff8ee 	bl	247f4 <USBFunctionConfigure>
   26438:	e2506000 	subs	r6, r0, #0
   2643c:	0a000030 	beq	26504 <LAN7800DeviceConfigure+0x140>
   26440:	e1a0200d 	mov	r2, sp
   26444:	e1a01004 	mov	r1, r4
   26448:	e1a00005 	mov	r0, r5
   2644c:	ebfffec2 	bl	25f5c <LAN7800DeviceReadReg>
   26450:	e3500000 	cmp	r0, #0
   26454:	e1dd30b2 	ldrh	r3, [sp, #2]
   26458:	0a000001 	beq	26464 <LAN7800DeviceConfigure+0xa0>
   2645c:	e3530b1e 	cmp	r3, #30720	; 0x7800
   26460:	0a000048 	beq	26588 <LAN7800DeviceConfigure+0x1c4>
   26464:	e3a06000 	mov	r6, #0
   26468:	e59f2408 	ldr	r2, [pc, #1032]	; 26878 <LAN7800DeviceConfigure+0x4b4>
   2646c:	e3a01001 	mov	r1, #1
   26470:	e59f0404 	ldr	r0, [pc, #1028]	; 2687c <LAN7800DeviceConfigure+0x4b8>
   26474:	ebff8cce 	bl	97b4 <LogWrite>
   26478:	e1a00006 	mov	r0, r6
   2647c:	e28dd014 	add	sp, sp, #20
   26480:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
   26484:	e59f13f0 	ldr	r1, [pc, #1008]	; 2687c <LAN7800DeviceConfigure+0x4b8>
   26488:	ebfff92c 	bl	24940 <USBFunctionConfigurationError>
   2648c:	e3a06000 	mov	r6, #0
   26490:	e1a00006 	mov	r0, r6
   26494:	e28dd014 	add	sp, sp, #20
   26498:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
   2649c:	e1d430d2 	ldrsb	r3, [r4, #2]
   264a0:	e3530000 	cmp	r3, #0
   264a4:	ba00001d 	blt	26520 <LAN7800DeviceConfigure+0x15c>
   264a8:	e5953014 	ldr	r3, [r5, #20]
   264ac:	e3530000 	cmp	r3, #0
   264b0:	1a00000c 	bne	264e8 <LAN7800DeviceConfigure+0x124>
   264b4:	e3a00018 	mov	r0, #24
   264b8:	ebffc4b1 	bl	17784 <malloc>
   264bc:	e3500000 	cmp	r0, #0
   264c0:	e1a06000 	mov	r6, r0
   264c4:	e5850014 	str	r0, [r5, #20]
   264c8:	0a000028 	beq	26570 <LAN7800DeviceConfigure+0x1ac>
   264cc:	e1a00005 	mov	r0, r5
   264d0:	ebfff885 	bl	246ec <USBFunctionGetDevice>
   264d4:	e1a02004 	mov	r2, r4
   264d8:	e1a01000 	mov	r1, r0
   264dc:	e1a00006 	mov	r0, r6
   264e0:	ebfff0d2 	bl	22830 <USBEndpoint2>
   264e4:	eaffffc6 	b	26404 <LAN7800DeviceConfigure+0x40>
   264e8:	e3a06000 	mov	r6, #0
   264ec:	e1a00005 	mov	r0, r5
   264f0:	e59f1384 	ldr	r1, [pc, #900]	; 2687c <LAN7800DeviceConfigure+0x4b8>
   264f4:	ebfff911 	bl	24940 <USBFunctionConfigurationError>
   264f8:	e1a00006 	mov	r0, r6
   264fc:	e28dd014 	add	sp, sp, #20
   26500:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
   26504:	e59f2374 	ldr	r2, [pc, #884]	; 26880 <LAN7800DeviceConfigure+0x4bc>
   26508:	e3a01001 	mov	r1, #1
   2650c:	e59f0368 	ldr	r0, [pc, #872]	; 2687c <LAN7800DeviceConfigure+0x4b8>
   26510:	ebff8ca7 	bl	97b4 <LogWrite>
   26514:	e1a00006 	mov	r0, r6
   26518:	e28dd014 	add	sp, sp, #20
   2651c:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
   26520:	e5953010 	ldr	r3, [r5, #16]
   26524:	e3530000 	cmp	r3, #0
   26528:	1affffee 	bne	264e8 <LAN7800DeviceConfigure+0x124>
   2652c:	e3a00018 	mov	r0, #24
   26530:	ebffc493 	bl	17784 <malloc>
   26534:	e3500000 	cmp	r0, #0
   26538:	e1a06000 	mov	r6, r0
   2653c:	e5850010 	str	r0, [r5, #16]
   26540:	1affffe1 	bne	264cc <LAN7800DeviceConfigure+0x108>
   26544:	e59f2338 	ldr	r2, [pc, #824]	; 26884 <LAN7800DeviceConfigure+0x4c0>
   26548:	e1a01007 	mov	r1, r7
   2654c:	e1a00009 	mov	r0, r9
   26550:	ebffc4b2 	bl	17820 <uspi_assertion_failed>
   26554:	e5956010 	ldr	r6, [r5, #16]
   26558:	eaffffdb 	b	264cc <LAN7800DeviceConfigure+0x108>
   2655c:	e59f2324 	ldr	r2, [pc, #804]	; 26888 <LAN7800DeviceConfigure+0x4c4>
   26560:	e59f1304 	ldr	r1, [pc, #772]	; 2686c <LAN7800DeviceConfigure+0x4a8>
   26564:	e59f0320 	ldr	r0, [pc, #800]	; 2688c <LAN7800DeviceConfigure+0x4c8>
   26568:	ebffc4ac 	bl	17820 <uspi_assertion_failed>
   2656c:	eaffff98 	b	263d4 <LAN7800DeviceConfigure+0x10>
   26570:	e59f2318 	ldr	r2, [pc, #792]	; 26890 <LAN7800DeviceConfigure+0x4cc>
   26574:	e1a01007 	mov	r1, r7
   26578:	e1a00008 	mov	r0, r8
   2657c:	ebffc4a7 	bl	17820 <uspi_assertion_failed>
   26580:	e5956014 	ldr	r6, [r5, #20]
   26584:	eaffffd0 	b	264cc <LAN7800DeviceConfigure+0x108>
   26588:	e3e03000 	mvn	r3, #0
   2658c:	e3a02002 	mov	r2, #2
   26590:	e3a01010 	mov	r1, #16
   26594:	e1a00005 	mov	r0, r5
   26598:	ebffff6a 	bl	26348 <LAN7800DeviceReadWriteReg>
   2659c:	e3500000 	cmp	r0, #0
   265a0:	0a000006 	beq	265c0 <LAN7800DeviceConfigure+0x1fc>
   265a4:	e1a03004 	mov	r3, r4
   265a8:	e3a02002 	mov	r2, #2
   265ac:	e3a01010 	mov	r1, #16
   265b0:	e1a00005 	mov	r0, r5
   265b4:	ebfffe94 	bl	2600c <LAN7800DeviceWaitReg>
   265b8:	e3500000 	cmp	r0, #0
   265bc:	1a000005 	bne	265d8 <LAN7800DeviceConfigure+0x214>
   265c0:	e59f22cc 	ldr	r2, [pc, #716]	; 26894 <LAN7800DeviceConfigure+0x4d0>
   265c4:	e3a01001 	mov	r1, #1
   265c8:	e59f02ac 	ldr	r0, [pc, #684]	; 2687c <LAN7800DeviceConfigure+0x4b8>
   265cc:	ebff8c78 	bl	97b4 <LogWrite>
   265d0:	e3a06000 	mov	r6, #0
   265d4:	eaffffad 	b	26490 <LAN7800DeviceConfigure+0xcc>
   265d8:	e1a00005 	mov	r0, r5
   265dc:	ebfffe1b 	bl	25e50 <LAN7800DeviceInitMACAddress>
   265e0:	e2506000 	subs	r6, r0, #0
   265e4:	0a000007 	beq	26608 <LAN7800DeviceConfigure+0x244>
   265e8:	e3a02018 	mov	r2, #24
   265ec:	e3a01090 	mov	r1, #144	; 0x90
   265f0:	e1a00005 	mov	r0, r5
   265f4:	ebfffde6 	bl	25d94 <LAN7800DeviceWriteReg>
   265f8:	e3500000 	cmp	r0, #0
   265fc:	1a000006 	bne	2661c <LAN7800DeviceConfigure+0x258>
   26600:	e3a06000 	mov	r6, #0
   26604:	eaffffa1 	b	26490 <LAN7800DeviceConfigure+0xcc>
   26608:	e59f2288 	ldr	r2, [pc, #648]	; 26898 <LAN7800DeviceConfigure+0x4d4>
   2660c:	e3a01001 	mov	r1, #1
   26610:	e59f0264 	ldr	r0, [pc, #612]	; 2687c <LAN7800DeviceConfigure+0x4b8>
   26614:	ebff8c66 	bl	97b4 <LogWrite>
   26618:	eaffff9c 	b	26490 <LAN7800DeviceConfigure+0xcc>
   2661c:	e3a02b02 	mov	r2, #2048	; 0x800
   26620:	e3a01094 	mov	r1, #148	; 0x94
   26624:	e1a00005 	mov	r0, r5
   26628:	ebfffdd9 	bl	25d94 <LAN7800DeviceWriteReg>
   2662c:	e3500000 	cmp	r0, #0
   26630:	0afffff2 	beq	26600 <LAN7800DeviceConfigure+0x23c>
   26634:	e3e03010 	mvn	r3, #16
   26638:	e3a02603 	mov	r2, #3145728	; 0x300000
   2663c:	e3a01010 	mov	r1, #16
   26640:	e1a00005 	mov	r0, r5
   26644:	ebffff3f 	bl	26348 <LAN7800DeviceReadWriteReg>
   26648:	e3500000 	cmp	r0, #0
   2664c:	0affffeb 	beq	26600 <LAN7800DeviceConfigure+0x23c>
   26650:	e3e03040 	mvn	r3, #64	; 0x40
   26654:	e3a02020 	mov	r2, #32
   26658:	e3a01080 	mov	r1, #128	; 0x80
   2665c:	e1a00005 	mov	r0, r5
   26660:	ebffff38 	bl	26348 <LAN7800DeviceReadWriteReg>
   26664:	e3500000 	cmp	r0, #0
   26668:	0affffe4 	beq	26600 <LAN7800DeviceConfigure+0x23c>
   2666c:	e3a02017 	mov	r2, #23
   26670:	e3a010c8 	mov	r1, #200	; 0xc8
   26674:	e1a00005 	mov	r0, r5
   26678:	ebfffdc5 	bl	25d94 <LAN7800DeviceWriteReg>
   2667c:	e3500000 	cmp	r0, #0
   26680:	0affffde 	beq	26600 <LAN7800DeviceConfigure+0x23c>
   26684:	e3a02017 	mov	r2, #23
   26688:	e3a010cc 	mov	r1, #204	; 0xcc
   2668c:	e1a00005 	mov	r0, r5
   26690:	ebfffdbf 	bl	25d94 <LAN7800DeviceWriteReg>
   26694:	e3500000 	cmp	r0, #0
   26698:	0affffd8 	beq	26600 <LAN7800DeviceConfigure+0x23c>
   2669c:	e3a02000 	mov	r2, #0
   266a0:	e3a01098 	mov	r1, #152	; 0x98
   266a4:	e1a00005 	mov	r0, r5
   266a8:	ebfffdb9 	bl	25d94 <LAN7800DeviceWriteReg>
   266ac:	e3500000 	cmp	r0, #0
   266b0:	0affffd2 	beq	26600 <LAN7800DeviceConfigure+0x23c>
   266b4:	e3e02000 	mvn	r2, #0
   266b8:	e3a0100c 	mov	r1, #12
   266bc:	e1a00005 	mov	r0, r5
   266c0:	ebfffdb3 	bl	25d94 <LAN7800DeviceWriteReg>
   266c4:	e3500000 	cmp	r0, #0
   266c8:	0affffcc 	beq	26600 <LAN7800DeviceConfigure+0x23c>
   266cc:	e3a02000 	mov	r2, #0
   266d0:	e3a01f43 	mov	r1, #268	; 0x10c
   266d4:	e1a00005 	mov	r0, r5
   266d8:	ebfffdad 	bl	25d94 <LAN7800DeviceWriteReg>
   266dc:	e3500000 	cmp	r0, #0
   266e0:	0affffc6 	beq	26600 <LAN7800DeviceConfigure+0x23c>
   266e4:	e3a02000 	mov	r2, #0
   266e8:	e3a010d0 	mov	r1, #208	; 0xd0
   266ec:	e1a00005 	mov	r0, r5
   266f0:	ebfffda7 	bl	25d94 <LAN7800DeviceWriteReg>
   266f4:	e3500000 	cmp	r0, #0
   266f8:	0affffc0 	beq	26600 <LAN7800DeviceConfigure+0x23c>
   266fc:	e3e03000 	mvn	r3, #0
   26700:	e59f2194 	ldr	r2, [pc, #404]	; 2689c <LAN7800DeviceConfigure+0x4d8>
   26704:	e3a010b0 	mov	r1, #176	; 0xb0
   26708:	e1a00005 	mov	r0, r5
   2670c:	ebffff0d 	bl	26348 <LAN7800DeviceReadWriteReg>
   26710:	e3500000 	cmp	r0, #0
   26714:	0affffb9 	beq	26600 <LAN7800DeviceConfigure+0x23c>
   26718:	e3e03000 	mvn	r3, #0
   2671c:	e3a02010 	mov	r2, #16
   26720:	e3a01014 	mov	r1, #20
   26724:	e1a00005 	mov	r0, r5
   26728:	ebffff06 	bl	26348 <LAN7800DeviceReadWriteReg>
   2672c:	e3500000 	cmp	r0, #0
   26730:	0a000006 	beq	26750 <LAN7800DeviceConfigure+0x38c>
   26734:	e3a03080 	mov	r3, #128	; 0x80
   26738:	e3a02090 	mov	r2, #144	; 0x90
   2673c:	e3a01014 	mov	r1, #20
   26740:	e1a00005 	mov	r0, r5
   26744:	ebfffe30 	bl	2600c <LAN7800DeviceWaitReg>
   26748:	e3500000 	cmp	r0, #0
   2674c:	1a000004 	bne	26764 <LAN7800DeviceConfigure+0x3a0>
   26750:	e59f2148 	ldr	r2, [pc, #328]	; 268a0 <LAN7800DeviceConfigure+0x4dc>
   26754:	e3a01001 	mov	r1, #1
   26758:	e59f011c 	ldr	r0, [pc, #284]	; 2687c <LAN7800DeviceConfigure+0x4b8>
   2675c:	ebff8c14 	bl	97b4 <LogWrite>
   26760:	eaffffa6 	b	26600 <LAN7800DeviceConfigure+0x23c>
   26764:	e3e03000 	mvn	r3, #0
   26768:	e3a02b06 	mov	r2, #6144	; 0x1800
   2676c:	e3a01c01 	mov	r1, #256	; 0x100
   26770:	e1a00005 	mov	r0, r5
   26774:	ebfffef3 	bl	26348 <LAN7800DeviceReadWriteReg>
   26778:	e3500000 	cmp	r0, #0
   2677c:	0affff9f 	beq	26600 <LAN7800DeviceConfigure+0x23c>
   26780:	e3e03000 	mvn	r3, #0
   26784:	e3a02001 	mov	r2, #1
   26788:	e3a01f42 	mov	r1, #264	; 0x108
   2678c:	e1a00005 	mov	r0, r5
   26790:	ebfffeec 	bl	26348 <LAN7800DeviceReadWriteReg>
   26794:	e3500000 	cmp	r0, #0
   26798:	0affff98 	beq	26600 <LAN7800DeviceConfigure+0x23c>
   2679c:	e3e03000 	mvn	r3, #0
   267a0:	e3a02102 	mov	r2, #-2147483648	; 0x80000000
   267a4:	e3a010c4 	mov	r1, #196	; 0xc4
   267a8:	e1a00005 	mov	r0, r5
   267ac:	ebfffee5 	bl	26348 <LAN7800DeviceReadWriteReg>
   267b0:	e3500000 	cmp	r0, #0
   267b4:	0affff91 	beq	26600 <LAN7800DeviceConfigure+0x23c>
   267b8:	e59f30e4 	ldr	r3, [pc, #228]	; 268a4 <LAN7800DeviceConfigure+0x4e0>
   267bc:	e59f20e4 	ldr	r2, [pc, #228]	; 268a8 <LAN7800DeviceConfigure+0x4e4>
   267c0:	e3a01f41 	mov	r1, #260	; 0x104
   267c4:	e1a00005 	mov	r0, r5
   267c8:	ebfffede 	bl	26348 <LAN7800DeviceReadWriteReg>
   267cc:	e3500000 	cmp	r0, #0
   267d0:	0affff8a 	beq	26600 <LAN7800DeviceConfigure+0x23c>
   267d4:	e3e03000 	mvn	r3, #0
   267d8:	e3a02102 	mov	r2, #-2147483648	; 0x80000000
   267dc:	e3a010c0 	mov	r1, #192	; 0xc0
   267e0:	e1a00005 	mov	r0, r5
   267e4:	ebfffed7 	bl	26348 <LAN7800DeviceReadWriteReg>
   267e8:	e3500000 	cmp	r0, #0
   267ec:	0affff83 	beq	26600 <LAN7800DeviceConfigure+0x23c>
   267f0:	e1a00005 	mov	r0, r5
   267f4:	ebfffeb7 	bl	262d8 <LAN7800DeviceInitPHY>
   267f8:	e2506000 	subs	r6, r0, #0
   267fc:	0a000015 	beq	26858 <LAN7800DeviceConfigure+0x494>
   26800:	e28d0004 	add	r0, sp, #4
   26804:	eb00002b 	bl	268b8 <String>
   26808:	e59f309c 	ldr	r3, [pc, #156]	; 268ac <LAN7800DeviceConfigure+0x4e8>
   2680c:	e59f109c 	ldr	r1, [pc, #156]	; 268b0 <LAN7800DeviceConfigure+0x4ec>
   26810:	e5932000 	ldr	r2, [r3]
   26814:	e28d0004 	add	r0, sp, #4
   26818:	e282c001 	add	ip, r2, #1
   2681c:	e583c000 	str	ip, [r3]
   26820:	eb0002e5 	bl	273bc <StringFormat>
   26824:	ebfff5d5 	bl	23f80 <DeviceNameServiceGet>
   26828:	e1a04000 	mov	r4, r0
   2682c:	e28d0004 	add	r0, sp, #4
   26830:	eb000053 	bl	26984 <StringGet>
   26834:	e1a02005 	mov	r2, r5
   26838:	e1a01000 	mov	r1, r0
   2683c:	e3a03000 	mov	r3, #0
   26840:	e1a00004 	mov	r0, r4
   26844:	ebfff551 	bl	23d90 <DeviceNameServiceAddDevice>
   26848:	e28d0004 	add	r0, sp, #4
   2684c:	eb00003b 	bl	26940 <_String>
   26850:	e3a06001 	mov	r6, #1
   26854:	eaffff0d 	b	26490 <LAN7800DeviceConfigure+0xcc>
   26858:	e59f2054 	ldr	r2, [pc, #84]	; 268b4 <LAN7800DeviceConfigure+0x4f0>
   2685c:	e3a01001 	mov	r1, #1
   26860:	e59f0014 	ldr	r0, [pc, #20]	; 2687c <LAN7800DeviceConfigure+0x4b8>
   26864:	ebff8bd2 	bl	97b4 <LogWrite>
   26868:	eaffff08 	b	26490 <LAN7800DeviceConfigure+0xcc>
   2686c:	00031b5c 	.word	0x00031b5c
   26870:	00031a14 	.word	0x00031a14
   26874:	000319f8 	.word	0x000319f8
   26878:	00031bc4 	.word	0x00031bc4
   2687c:	00031b54 	.word	0x00031b54
   26880:	0003171c 	.word	0x0003171c
   26884:	0000013d 	.word	0x0000013d
   26888:	00000123 	.word	0x00000123
   2688c:	000306f0 	.word	0x000306f0
   26890:	0000014a 	.word	0x0000014a
   26894:	00031bdc 	.word	0x00031bdc
   26898:	00031bec 	.word	0x00031bec
   2689c:	00000402 	.word	0x00000402
   268a0:	00031c04 	.word	0x00031c04
   268a4:	c000ffff 	.word	0xc000ffff
   268a8:	05ee0001 	.word	0x05ee0001
   268ac:	00042350 	.word	0x00042350
   268b0:	00031a5c 	.word	0x00031a5c
   268b4:	00031c18 	.word	0x00031c18

000268b8 <String>:
   268b8:	e92d4010 	push	{r4, lr}
   268bc:	e2504000 	subs	r4, r0, #0
   268c0:	0a000003 	beq	268d4 <String+0x1c>
   268c4:	e3a03000 	mov	r3, #0
   268c8:	e5843000 	str	r3, [r4]
   268cc:	e5843004 	str	r3, [r4, #4]
   268d0:	e8bd8010 	pop	{r4, pc}
   268d4:	e3a02023 	mov	r2, #35	; 0x23
   268d8:	e59f1008 	ldr	r1, [pc, #8]	; 268e8 <String+0x30>
   268dc:	e59f0008 	ldr	r0, [pc, #8]	; 268ec <String+0x34>
   268e0:	ebffc3ce 	bl	17820 <uspi_assertion_failed>
   268e4:	eafffff6 	b	268c4 <String+0xc>
   268e8:	00031c28 	.word	0x00031c28
   268ec:	000306f0 	.word	0x000306f0

000268f0 <String2>:
   268f0:	e92d4070 	push	{r4, r5, r6, lr}
   268f4:	e2504000 	subs	r4, r0, #0
   268f8:	e1a05001 	mov	r5, r1
   268fc:	0a000008 	beq	26924 <String2+0x34>
   26900:	e1a00005 	mov	r0, r5
   26904:	eb00031b 	bl	27578 <uspi_strlen>
   26908:	e2800001 	add	r0, r0, #1
   2690c:	e5840004 	str	r0, [r4, #4]
   26910:	ebffc39b 	bl	17784 <malloc>
   26914:	e1a01005 	mov	r1, r5
   26918:	e5840000 	str	r0, [r4]
   2691c:	e8bd4070 	pop	{r4, r5, r6, lr}
   26920:	ea00033a 	b	27610 <uspi_strcpy>
   26924:	e3a0202a 	mov	r2, #42	; 0x2a
   26928:	e59f1008 	ldr	r1, [pc, #8]	; 26938 <String2+0x48>
   2692c:	e59f0008 	ldr	r0, [pc, #8]	; 2693c <String2+0x4c>
   26930:	ebffc3ba 	bl	17820 <uspi_assertion_failed>
   26934:	eafffff1 	b	26900 <String2+0x10>
   26938:	00031c28 	.word	0x00031c28
   2693c:	000306f0 	.word	0x000306f0

00026940 <_String>:
   26940:	e92d4010 	push	{r4, lr}
   26944:	e2504000 	subs	r4, r0, #0
   26948:	0a000006 	beq	26968 <_String+0x28>
   2694c:	e5940000 	ldr	r0, [r4]
   26950:	e3500000 	cmp	r0, #0
   26954:	08bd8010 	popeq	{r4, pc}
   26958:	ebffc38a 	bl	17788 <free>
   2695c:	e3a03000 	mov	r3, #0
   26960:	e5843000 	str	r3, [r4]
   26964:	e8bd8010 	pop	{r4, pc}
   26968:	e3a02035 	mov	r2, #53	; 0x35
   2696c:	e59f1008 	ldr	r1, [pc, #8]	; 2697c <_String+0x3c>
   26970:	e59f0008 	ldr	r0, [pc, #8]	; 26980 <_String+0x40>
   26974:	ebffc3a9 	bl	17820 <uspi_assertion_failed>
   26978:	eafffff3 	b	2694c <_String+0xc>
   2697c:	00031c28 	.word	0x00031c28
   26980:	000306f0 	.word	0x000306f0

00026984 <StringGet>:
   26984:	e92d4010 	push	{r4, lr}
   26988:	e2504000 	subs	r4, r0, #0
   2698c:	0a000004 	beq	269a4 <StringGet+0x20>
   26990:	e5940000 	ldr	r0, [r4]
   26994:	e59f301c 	ldr	r3, [pc, #28]	; 269b8 <StringGet+0x34>
   26998:	e3500000 	cmp	r0, #0
   2699c:	01a00003 	moveq	r0, r3
   269a0:	e8bd8010 	pop	{r4, pc}
   269a4:	e3a02040 	mov	r2, #64	; 0x40
   269a8:	e59f100c 	ldr	r1, [pc, #12]	; 269bc <StringGet+0x38>
   269ac:	e59f000c 	ldr	r0, [pc, #12]	; 269c0 <StringGet+0x3c>
   269b0:	ebffc39a 	bl	17820 <uspi_assertion_failed>
   269b4:	eafffff5 	b	26990 <StringGet+0xc>
   269b8:	00030310 	.word	0x00030310
   269bc:	00031c28 	.word	0x00031c28
   269c0:	000306f0 	.word	0x000306f0

000269c4 <StringSet>:
   269c4:	e92d4070 	push	{r4, r5, r6, lr}
   269c8:	e2504000 	subs	r4, r0, #0
   269cc:	e1a05001 	mov	r5, r1
   269d0:	0a00000d 	beq	26a0c <StringSet+0x48>
   269d4:	e5940000 	ldr	r0, [r4]
   269d8:	e3500000 	cmp	r0, #0
   269dc:	0a000000 	beq	269e4 <StringSet+0x20>
   269e0:	ebffc368 	bl	17788 <free>
   269e4:	e1a00005 	mov	r0, r5
   269e8:	eb0002e2 	bl	27578 <uspi_strlen>
   269ec:	e2800001 	add	r0, r0, #1
   269f0:	e5840004 	str	r0, [r4, #4]
   269f4:	ebffc362 	bl	17784 <malloc>
   269f8:	e1a01005 	mov	r1, r5
   269fc:	e5840000 	str	r0, [r4]
   26a00:	eb000302 	bl	27610 <uspi_strcpy>
   26a04:	e5940000 	ldr	r0, [r4]
   26a08:	e8bd8070 	pop	{r4, r5, r6, pc}
   26a0c:	e3a0204c 	mov	r2, #76	; 0x4c
   26a10:	e59f1008 	ldr	r1, [pc, #8]	; 26a20 <StringSet+0x5c>
   26a14:	e59f0008 	ldr	r0, [pc, #8]	; 26a24 <StringSet+0x60>
   26a18:	ebffc380 	bl	17820 <uspi_assertion_failed>
   26a1c:	eaffffec 	b	269d4 <StringSet+0x10>
   26a20:	00031c28 	.word	0x00031c28
   26a24:	000306f0 	.word	0x000306f0

00026a28 <StringGetLength>:
   26a28:	e92d4010 	push	{r4, lr}
   26a2c:	e2504000 	subs	r4, r0, #0
   26a30:	0a000004 	beq	26a48 <StringGetLength+0x20>
   26a34:	e5940000 	ldr	r0, [r4]
   26a38:	e3500000 	cmp	r0, #0
   26a3c:	08bd8010 	popeq	{r4, pc}
   26a40:	e8bd4010 	pop	{r4, lr}
   26a44:	ea0002cb 	b	27578 <uspi_strlen>
   26a48:	e3a0205e 	mov	r2, #94	; 0x5e
   26a4c:	e59f1008 	ldr	r1, [pc, #8]	; 26a5c <StringGetLength+0x34>
   26a50:	e59f0008 	ldr	r0, [pc, #8]	; 26a60 <StringGetLength+0x38>
   26a54:	ebffc371 	bl	17820 <uspi_assertion_failed>
   26a58:	eafffff5 	b	26a34 <StringGetLength+0xc>
   26a5c:	00031c28 	.word	0x00031c28
   26a60:	000306f0 	.word	0x000306f0

00026a64 <StringAppend>:
   26a64:	e92d4070 	push	{r4, r5, r6, lr}
   26a68:	e2504000 	subs	r4, r0, #0
   26a6c:	e1a06001 	mov	r6, r1
   26a70:	0a00001b 	beq	26ae4 <StringAppend+0x80>
   26a74:	e3a03001 	mov	r3, #1
   26a78:	e5940000 	ldr	r0, [r4]
   26a7c:	e5843004 	str	r3, [r4, #4]
   26a80:	e3500000 	cmp	r0, #0
   26a84:	0a000003 	beq	26a98 <StringAppend+0x34>
   26a88:	eb0002ba 	bl	27578 <uspi_strlen>
   26a8c:	e5943004 	ldr	r3, [r4, #4]
   26a90:	e0830000 	add	r0, r3, r0
   26a94:	e5840004 	str	r0, [r4, #4]
   26a98:	e1a00006 	mov	r0, r6
   26a9c:	eb0002b5 	bl	27578 <uspi_strlen>
   26aa0:	e5943004 	ldr	r3, [r4, #4]
   26aa4:	e0800003 	add	r0, r0, r3
   26aa8:	e5840004 	str	r0, [r4, #4]
   26aac:	ebffc334 	bl	17784 <malloc>
   26ab0:	e5941000 	ldr	r1, [r4]
   26ab4:	e1a05000 	mov	r5, r0
   26ab8:	e3510000 	cmp	r1, #0
   26abc:	05c01000 	strbeq	r1, [r0]
   26ac0:	0a000002 	beq	26ad0 <StringAppend+0x6c>
   26ac4:	eb0002d1 	bl	27610 <uspi_strcpy>
   26ac8:	e5940000 	ldr	r0, [r4]
   26acc:	ebffc32d 	bl	17788 <free>
   26ad0:	e1a01006 	mov	r1, r6
   26ad4:	e1a00005 	mov	r0, r5
   26ad8:	eb0002e9 	bl	27684 <uspi_strcat>
   26adc:	e5845000 	str	r5, [r4]
   26ae0:	e8bd8070 	pop	{r4, r5, r6, pc}
   26ae4:	e3a0206a 	mov	r2, #106	; 0x6a
   26ae8:	e59f1008 	ldr	r1, [pc, #8]	; 26af8 <StringAppend+0x94>
   26aec:	e59f0008 	ldr	r0, [pc, #8]	; 26afc <StringAppend+0x98>
   26af0:	ebffc34a 	bl	17820 <uspi_assertion_failed>
   26af4:	eaffffde 	b	26a74 <StringAppend+0x10>
   26af8:	00031c28 	.word	0x00031c28
   26afc:	000306f0 	.word	0x000306f0

00026b00 <StringCompare>:
   26b00:	e92d4070 	push	{r4, r5, r6, lr}
   26b04:	e2504000 	subs	r4, r0, #0
   26b08:	e1a05001 	mov	r5, r1
   26b0c:	0a000003 	beq	26b20 <StringCompare+0x20>
   26b10:	e1a01005 	mov	r1, r5
   26b14:	e5940000 	ldr	r0, [r4]
   26b18:	e8bd4070 	pop	{r4, r5, r6, lr}
   26b1c:	ea00029f 	b	275a0 <uspi_strcmp>
   26b20:	e59f1018 	ldr	r1, [pc, #24]	; 26b40 <StringCompare+0x40>
   26b24:	e59f0018 	ldr	r0, [pc, #24]	; 26b44 <StringCompare+0x44>
   26b28:	e3a02086 	mov	r2, #134	; 0x86
   26b2c:	ebffc33b 	bl	17820 <uspi_assertion_failed>
   26b30:	e1a01005 	mov	r1, r5
   26b34:	e5940000 	ldr	r0, [r4]
   26b38:	e8bd4070 	pop	{r4, r5, r6, lr}
   26b3c:	ea000297 	b	275a0 <uspi_strcmp>
   26b40:	00031c28 	.word	0x00031c28
   26b44:	000306f0 	.word	0x000306f0

00026b48 <StringFind>:
   26b48:	e92d4070 	push	{r4, r5, r6, lr}
   26b4c:	e2505000 	subs	r5, r0, #0
   26b50:	e1a04001 	mov	r4, r1
   26b54:	0a00000f 	beq	26b98 <StringFind+0x50>
   26b58:	e5952000 	ldr	r2, [r5]
   26b5c:	e1d230d0 	ldrsb	r3, [r2]
   26b60:	e3530000 	cmp	r3, #0
   26b64:	0a000009 	beq	26b90 <StringFind+0x48>
   26b68:	e1540003 	cmp	r4, r3
   26b6c:	e3a00000 	mov	r0, #0
   26b70:	1a000002 	bne	26b80 <StringFind+0x38>
   26b74:	e8bd8070 	pop	{r4, r5, r6, pc}
   26b78:	e1530004 	cmp	r3, r4
   26b7c:	08bd8070 	popeq	{r4, r5, r6, pc}
   26b80:	e1f230d1 	ldrsb	r3, [r2, #1]!
   26b84:	e2800001 	add	r0, r0, #1
   26b88:	e3530000 	cmp	r3, #0
   26b8c:	1afffff9 	bne	26b78 <StringFind+0x30>
   26b90:	e3e00000 	mvn	r0, #0
   26b94:	e8bd8070 	pop	{r4, r5, r6, pc}
   26b98:	e3a0208d 	mov	r2, #141	; 0x8d
   26b9c:	e59f1008 	ldr	r1, [pc, #8]	; 26bac <StringFind+0x64>
   26ba0:	e59f0008 	ldr	r0, [pc, #8]	; 26bb0 <StringFind+0x68>
   26ba4:	ebffc31d 	bl	17820 <uspi_assertion_failed>
   26ba8:	eaffffea 	b	26b58 <StringFind+0x10>
   26bac:	00031c28 	.word	0x00031c28
   26bb0:	000306f0 	.word	0x000306f0

00026bb4 <StringReserveSpace>:
   26bb4:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   26bb8:	e2505000 	subs	r5, r0, #0
   26bbc:	e1a04001 	mov	r4, r1
   26bc0:	0a000016 	beq	26c20 <StringReserveSpace+0x6c>
   26bc4:	e3540000 	cmp	r4, #0
   26bc8:	08bd81f0 	popeq	{r4, r5, r6, r7, r8, pc}
   26bcc:	e895004c 	ldm	r5, {r2, r3, r6}
   26bd0:	e0466002 	sub	r6, r6, r2
   26bd4:	e0844006 	add	r4, r4, r6
   26bd8:	e2842001 	add	r2, r4, #1
   26bdc:	e1520003 	cmp	r2, r3
   26be0:	98bd81f0 	popls	{r4, r5, r6, r7, r8, pc}
   26be4:	e2844041 	add	r4, r4, #65	; 0x41
   26be8:	e1a00004 	mov	r0, r4
   26bec:	ebffc2e4 	bl	17784 <malloc>
   26bf0:	e3a02000 	mov	r2, #0
   26bf4:	e1a07000 	mov	r7, r0
   26bf8:	e5953008 	ldr	r3, [r5, #8]
   26bfc:	e0876006 	add	r6, r7, r6
   26c00:	e5c32000 	strb	r2, [r3]
   26c04:	e5951000 	ldr	r1, [r5]
   26c08:	eb000280 	bl	27610 <uspi_strcpy>
   26c0c:	e5950000 	ldr	r0, [r5]
   26c10:	ebffc2dc 	bl	17788 <free>
   26c14:	e9850050 	stmib	r5, {r4, r6}
   26c18:	e5857000 	str	r7, [r5]
   26c1c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   26c20:	e59f2014 	ldr	r2, [pc, #20]	; 26c3c <StringReserveSpace+0x88>
   26c24:	e59f1014 	ldr	r1, [pc, #20]	; 26c40 <StringReserveSpace+0x8c>
   26c28:	e59f0014 	ldr	r0, [pc, #20]	; 26c44 <StringReserveSpace+0x90>
   26c2c:	ebffc2fb 	bl	17820 <uspi_assertion_failed>
   26c30:	e3540000 	cmp	r4, #0
   26c34:	1affffe4 	bne	26bcc <StringReserveSpace+0x18>
   26c38:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   26c3c:	00000199 	.word	0x00000199
   26c40:	00031c28 	.word	0x00031c28
   26c44:	000306f0 	.word	0x000306f0

00026c48 <StringPutChar>:
   26c48:	e92d4070 	push	{r4, r5, r6, lr}
   26c4c:	e2505000 	subs	r5, r0, #0
   26c50:	e1a06001 	mov	r6, r1
   26c54:	e1a04002 	mov	r4, r2
   26c58:	0a00000d 	beq	26c94 <StringPutChar+0x4c>
   26c5c:	e1a01004 	mov	r1, r4
   26c60:	e1a00005 	mov	r0, r5
   26c64:	ebffffd2 	bl	26bb4 <StringReserveSpace>
   26c68:	e3540000 	cmp	r4, #0
   26c6c:	e2442001 	sub	r2, r4, #1
   26c70:	08bd8070 	popeq	{r4, r5, r6, pc}
   26c74:	e5953008 	ldr	r3, [r5, #8]
   26c78:	e2422001 	sub	r2, r2, #1
   26c7c:	e2831001 	add	r1, r3, #1
   26c80:	e3720001 	cmn	r2, #1
   26c84:	e5851008 	str	r1, [r5, #8]
   26c88:	e5c36000 	strb	r6, [r3]
   26c8c:	1afffff8 	bne	26c74 <StringPutChar+0x2c>
   26c90:	e8bd8070 	pop	{r4, r5, r6, pc}
   26c94:	e3a02d06 	mov	r2, #384	; 0x180
   26c98:	e59f1008 	ldr	r1, [pc, #8]	; 26ca8 <StringPutChar+0x60>
   26c9c:	e59f0008 	ldr	r0, [pc, #8]	; 26cac <StringPutChar+0x64>
   26ca0:	ebffc2de 	bl	17820 <uspi_assertion_failed>
   26ca4:	eaffffec 	b	26c5c <StringPutChar+0x14>
   26ca8:	00031c28 	.word	0x00031c28
   26cac:	000306f0 	.word	0x000306f0

00026cb0 <StringPutString>:
   26cb0:	e92d4070 	push	{r4, r5, r6, lr}
   26cb4:	e2504000 	subs	r4, r0, #0
   26cb8:	e1a06001 	mov	r6, r1
   26cbc:	0a00000c 	beq	26cf4 <StringPutString+0x44>
   26cc0:	e1a00006 	mov	r0, r6
   26cc4:	eb00022b 	bl	27578 <uspi_strlen>
   26cc8:	e1a05000 	mov	r5, r0
   26ccc:	e1a01000 	mov	r1, r0
   26cd0:	e1a00004 	mov	r0, r4
   26cd4:	ebffffb6 	bl	26bb4 <StringReserveSpace>
   26cd8:	e1a01006 	mov	r1, r6
   26cdc:	e5940008 	ldr	r0, [r4, #8]
   26ce0:	eb00024a 	bl	27610 <uspi_strcpy>
   26ce4:	e5940008 	ldr	r0, [r4, #8]
   26ce8:	e0800005 	add	r0, r0, r5
   26cec:	e5840008 	str	r0, [r4, #8]
   26cf0:	e8bd8070 	pop	{r4, r5, r6, pc}
   26cf4:	e3a02f63 	mov	r2, #396	; 0x18c
   26cf8:	e59f1008 	ldr	r1, [pc, #8]	; 26d08 <StringPutString+0x58>
   26cfc:	e59f0008 	ldr	r0, [pc, #8]	; 26d0c <StringPutString+0x5c>
   26d00:	ebffc2c6 	bl	17820 <uspi_assertion_failed>
   26d04:	eaffffed 	b	26cc0 <StringPutString+0x10>
   26d08:	00031c28 	.word	0x00031c28
   26d0c:	000306f0 	.word	0x000306f0

00026d10 <StringFormatV>:
   26d10:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   26d14:	e250a000 	subs	sl, r0, #0
   26d18:	e24dd02c 	sub	sp, sp, #44	; 0x2c
   26d1c:	e1a06001 	mov	r6, r1
   26d20:	e58d2004 	str	r2, [sp, #4]
   26d24:	0a000179 	beq	27310 <StringFormatV+0x600>
   26d28:	e59a0000 	ldr	r0, [sl]
   26d2c:	e3500000 	cmp	r0, #0
   26d30:	0a000000 	beq	26d38 <StringFormatV+0x28>
   26d34:	ebffc293 	bl	17788 <free>
   26d38:	e3a00040 	mov	r0, #64	; 0x40
   26d3c:	e58a0004 	str	r0, [sl, #4]
   26d40:	ebffc28f 	bl	17784 <malloc>
   26d44:	e58a0000 	str	r0, [sl]
   26d48:	e58a0008 	str	r0, [sl, #8]
   26d4c:	e1d610d0 	ldrsb	r1, [r6]
   26d50:	e3510000 	cmp	r1, #0
   26d54:	0a000055 	beq	26eb0 <StringFormatV+0x1a0>
   26d58:	e3510025 	cmp	r1, #37	; 0x25
   26d5c:	e2863001 	add	r3, r6, #1
   26d60:	1a00004b 	bne	26e94 <StringFormatV+0x184>
   26d64:	e1d610d1 	ldrsb	r1, [r6, #1]
   26d68:	e3510025 	cmp	r1, #37	; 0x25
   26d6c:	0a00007a 	beq	26f5c <StringFormatV+0x24c>
   26d70:	e351002d 	cmp	r1, #45	; 0x2d
   26d74:	03a02001 	moveq	r2, #1
   26d78:	13a02000 	movne	r2, #0
   26d7c:	01d610d2 	ldrsbeq	r1, [r6, #2]
   26d80:	02863002 	addeq	r3, r6, #2
   26d84:	e3510030 	cmp	r1, #48	; 0x30
   26d88:	01d310d1 	ldrsbeq	r1, [r3, #1]
   26d8c:	e58d2008 	str	r2, [sp, #8]
   26d90:	e2835001 	add	r5, r3, #1
   26d94:	02832002 	addeq	r2, r3, #2
   26d98:	13a02000 	movne	r2, #0
   26d9c:	03a03001 	moveq	r3, #1
   26da0:	158d200c 	strne	r2, [sp, #12]
   26da4:	058d300c 	streq	r3, [sp, #12]
   26da8:	01a03005 	moveq	r3, r5
   26dac:	01a05002 	moveq	r5, r2
   26db0:	e2412030 	sub	r2, r1, #48	; 0x30
   26db4:	e6ef2072 	uxtb	r2, r2
   26db8:	e3520009 	cmp	r2, #9
   26dbc:	93a04000 	movls	r4, #0
   26dc0:	9a000001 	bls	26dcc <StringFormatV+0xbc>
   26dc4:	ea000134 	b	2729c <StringFormatV+0x58c>
   26dc8:	e1a03007 	mov	r3, r7
   26dcc:	e0844104 	add	r4, r4, r4, lsl #2
   26dd0:	e0814084 	add	r4, r1, r4, lsl #1
   26dd4:	e1d310d1 	ldrsb	r1, [r3, #1]
   26dd8:	e2444030 	sub	r4, r4, #48	; 0x30
   26ddc:	e2412030 	sub	r2, r1, #48	; 0x30
   26de0:	e6ef2072 	uxtb	r2, r2
   26de4:	e3520009 	cmp	r2, #9
   26de8:	e2837001 	add	r7, r3, #1
   26dec:	9afffff5 	bls	26dc8 <StringFormatV+0xb8>
   26df0:	e2835002 	add	r5, r3, #2
   26df4:	e351006c 	cmp	r1, #108	; 0x6c
   26df8:	0a000030 	beq	26ec0 <StringFormatV+0x1b0>
   26dfc:	e1d780d0 	ldrsb	r8, [r7]
   26e00:	e2483058 	sub	r3, r8, #88	; 0x58
   26e04:	e3530020 	cmp	r3, #32
   26e08:	979ff103 	ldrls	pc, [pc, r3, lsl #2]
   26e0c:	ea00010a 	b	2723c <StringFormatV+0x52c>
   26e10:	00027128 	.word	0x00027128
   26e14:	0002723c 	.word	0x0002723c
   26e18:	0002723c 	.word	0x0002723c
   26e1c:	0002723c 	.word	0x0002723c
   26e20:	0002723c 	.word	0x0002723c
   26e24:	0002723c 	.word	0x0002723c
   26e28:	0002723c 	.word	0x0002723c
   26e2c:	0002723c 	.word	0x0002723c
   26e30:	0002723c 	.word	0x0002723c
   26e34:	0002723c 	.word	0x0002723c
   26e38:	0002723c 	.word	0x0002723c
   26e3c:	00026fbc 	.word	0x00026fbc
   26e40:	00027130 	.word	0x00027130
   26e44:	0002723c 	.word	0x0002723c
   26e48:	0002723c 	.word	0x0002723c
   26e4c:	0002723c 	.word	0x0002723c
   26e50:	0002723c 	.word	0x0002723c
   26e54:	0002723c 	.word	0x0002723c
   26e58:	0002723c 	.word	0x0002723c
   26e5c:	0002723c 	.word	0x0002723c
   26e60:	0002723c 	.word	0x0002723c
   26e64:	0002723c 	.word	0x0002723c
   26e68:	0002723c 	.word	0x0002723c
   26e6c:	00027120 	.word	0x00027120
   26e70:	0002723c 	.word	0x0002723c
   26e74:	0002723c 	.word	0x0002723c
   26e78:	0002723c 	.word	0x0002723c
   26e7c:	00026f74 	.word	0x00026f74
   26e80:	0002723c 	.word	0x0002723c
   26e84:	00026ff8 	.word	0x00026ff8
   26e88:	0002723c 	.word	0x0002723c
   26e8c:	0002723c 	.word	0x0002723c
   26e90:	00027128 	.word	0x00027128
   26e94:	e1a06003 	mov	r6, r3
   26e98:	e3a02001 	mov	r2, #1
   26e9c:	e1a0000a 	mov	r0, sl
   26ea0:	ebffff68 	bl	26c48 <StringPutChar>
   26ea4:	e1d610d0 	ldrsb	r1, [r6]
   26ea8:	e3510000 	cmp	r1, #0
   26eac:	1affffa9 	bne	26d58 <StringFormatV+0x48>
   26eb0:	e59a3008 	ldr	r3, [sl, #8]
   26eb4:	e5c31000 	strb	r1, [r3]
   26eb8:	e28dd02c 	add	sp, sp, #44	; 0x2c
   26ebc:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   26ec0:	e1d780d1 	ldrsb	r8, [r7, #1]
   26ec4:	e2856001 	add	r6, r5, #1
   26ec8:	e2483058 	sub	r3, r8, #88	; 0x58
   26ecc:	e3530020 	cmp	r3, #32
   26ed0:	979ff103 	ldrls	pc, [pc, r3, lsl #2]
   26ed4:	ea0000d6 	b	27234 <StringFormatV+0x524>
   26ed8:	000272d0 	.word	0x000272d0
   26edc:	00027234 	.word	0x00027234
   26ee0:	00027234 	.word	0x00027234
   26ee4:	00027234 	.word	0x00027234
   26ee8:	00027234 	.word	0x00027234
   26eec:	00027234 	.word	0x00027234
   26ef0:	00027234 	.word	0x00027234
   26ef4:	00027234 	.word	0x00027234
   26ef8:	00027234 	.word	0x00027234
   26efc:	00027234 	.word	0x00027234
   26f00:	00027234 	.word	0x00027234
   26f04:	00026fb8 	.word	0x00026fb8
   26f08:	00027134 	.word	0x00027134
   26f0c:	00027234 	.word	0x00027234
   26f10:	00027234 	.word	0x00027234
   26f14:	00027234 	.word	0x00027234
   26f18:	00027234 	.word	0x00027234
   26f1c:	00027234 	.word	0x00027234
   26f20:	00027234 	.word	0x00027234
   26f24:	00027234 	.word	0x00027234
   26f28:	00027234 	.word	0x00027234
   26f2c:	00027234 	.word	0x00027234
   26f30:	00027234 	.word	0x00027234
   26f34:	000272e0 	.word	0x000272e0
   26f38:	00027234 	.word	0x00027234
   26f3c:	00027234 	.word	0x00027234
   26f40:	00027234 	.word	0x00027234
   26f44:	00026f70 	.word	0x00026f70
   26f48:	00027234 	.word	0x00027234
   26f4c:	000272d8 	.word	0x000272d8
   26f50:	00027234 	.word	0x00027234
   26f54:	00027234 	.word	0x00027234
   26f58:	000272d0 	.word	0x000272d0
   26f5c:	e3a02001 	mov	r2, #1
   26f60:	e1a0000a 	mov	r0, sl
   26f64:	e2866002 	add	r6, r6, #2
   26f68:	ebffff36 	bl	26c48 <StringPutChar>
   26f6c:	eaffff76 	b	26d4c <StringFormatV+0x3c>
   26f70:	e1a05006 	mov	r5, r6
   26f74:	e59d3004 	ldr	r3, [sp, #4]
   26f78:	e5936000 	ldr	r6, [r3]
   26f7c:	e2838004 	add	r8, r3, #4
   26f80:	e1a00006 	mov	r0, r6
   26f84:	eb00017b 	bl	27578 <uspi_strlen>
   26f88:	e59d3008 	ldr	r3, [sp, #8]
   26f8c:	e1a07000 	mov	r7, r0
   26f90:	e3530000 	cmp	r3, #0
   26f94:	1a0000e5 	bne	27330 <StringFormatV+0x620>
   26f98:	e1540000 	cmp	r4, r0
   26f9c:	8a0000d6 	bhi	272fc <StringFormatV+0x5ec>
   26fa0:	e1a01006 	mov	r1, r6
   26fa4:	e1a0000a 	mov	r0, sl
   26fa8:	e1a06005 	mov	r6, r5
   26fac:	e58d8004 	str	r8, [sp, #4]
   26fb0:	ebffff3e 	bl	26cb0 <StringPutString>
   26fb4:	eaffff64 	b	26d4c <StringFormatV+0x3c>
   26fb8:	e1a05006 	mov	r5, r6
   26fbc:	e59d3008 	ldr	r3, [sp, #8]
   26fc0:	e3530000 	cmp	r3, #0
   26fc4:	e59d3004 	ldr	r3, [sp, #4]
   26fc8:	e2837004 	add	r7, r3, #4
   26fcc:	e1d360d0 	ldrsb	r6, [r3]
   26fd0:	1a0000e4 	bne	27368 <StringFormatV+0x658>
   26fd4:	e3540001 	cmp	r4, #1
   26fd8:	8a0000c2 	bhi	272e8 <StringFormatV+0x5d8>
   26fdc:	e1a01006 	mov	r1, r6
   26fe0:	e3a02001 	mov	r2, #1
   26fe4:	e1a0000a 	mov	r0, sl
   26fe8:	e1a06005 	mov	r6, r5
   26fec:	e58d7004 	str	r7, [sp, #4]
   26ff0:	ebffff14 	bl	26c48 <StringPutChar>
   26ff4:	eaffff54 	b	26d4c <StringFormatV+0x3c>
   26ff8:	e3a0700a 	mov	r7, #10
   26ffc:	e1a06005 	mov	r6, r5
   27000:	e59d3004 	ldr	r3, [sp, #4]
   27004:	e5935000 	ldr	r5, [r3]
   27008:	e2833004 	add	r3, r3, #4
   2700c:	e1550007 	cmp	r5, r7
   27010:	e58d3004 	str	r3, [sp, #4]
   27014:	23a0b001 	movcs	fp, #1
   27018:	3a0000c1 	bcc	27324 <StringFormatV+0x614>
   2701c:	e00b0b97 	mul	fp, r7, fp
   27020:	e1a00005 	mov	r0, r5
   27024:	e1a0100b 	mov	r1, fp
   27028:	eb001acd 	bl	2db64 <__udivsi3>
   2702c:	e1500007 	cmp	r0, r7
   27030:	2afffff9 	bcs	2701c <StringFormatV+0x30c>
   27034:	e1a09000 	mov	r9, r0
   27038:	e3580058 	cmp	r8, #88	; 0x58
   2703c:	e1a02006 	mov	r2, r6
   27040:	13a03057 	movne	r3, #87	; 0x57
   27044:	03a03037 	moveq	r3, #55	; 0x37
   27048:	e58d4010 	str	r4, [sp, #16]
   2704c:	e1a0600b 	mov	r6, fp
   27050:	e28d801c 	add	r8, sp, #28
   27054:	e58da014 	str	sl, [sp, #20]
   27058:	e1a04003 	mov	r4, r3
   2705c:	e1a0b002 	mov	fp, r2
   27060:	ea000004 	b	27078 <StringFormatV+0x368>
   27064:	e1a01006 	mov	r1, r6
   27068:	e1a00005 	mov	r0, r5
   2706c:	eb001abc 	bl	2db64 <__udivsi3>
   27070:	e1a0800a 	mov	r8, sl
   27074:	e1a09000 	mov	r9, r0
   27078:	e1a00005 	mov	r0, r5
   2707c:	e1a01006 	mov	r1, r6
   27080:	eb001af4 	bl	2dc58 <__aeabi_uidivmod>
   27084:	e1a0a008 	mov	sl, r8
   27088:	e3590009 	cmp	r9, #9
   2708c:	e6ef9079 	uxtb	r9, r9
   27090:	e2892030 	add	r2, r9, #48	; 0x30
   27094:	80899004 	addhi	r9, r9, r4
   27098:	96af9072 	sxtbls	r9, r2
   2709c:	86af9079 	sxtbhi	r9, r9
   270a0:	e1a00006 	mov	r0, r6
   270a4:	e1a05001 	mov	r5, r1
   270a8:	e4ca9001 	strb	r9, [sl], #1
   270ac:	e1a01007 	mov	r1, r7
   270b0:	eb001aab 	bl	2db64 <__udivsi3>
   270b4:	e2506000 	subs	r6, r0, #0
   270b8:	1affffe9 	bne	27064 <StringFormatV+0x354>
   270bc:	e1a0300b 	mov	r3, fp
   270c0:	e1a0b006 	mov	fp, r6
   270c4:	e28d001c 	add	r0, sp, #28
   270c8:	e5c8b001 	strb	fp, [r8, #1]
   270cc:	e1a06003 	mov	r6, r3
   270d0:	e59d4010 	ldr	r4, [sp, #16]
   270d4:	e59da014 	ldr	sl, [sp, #20]
   270d8:	eb000126 	bl	27578 <uspi_strlen>
   270dc:	e59d3008 	ldr	r3, [sp, #8]
   270e0:	e1a05000 	mov	r5, r0
   270e4:	e3530000 	cmp	r3, #0
   270e8:	1a000061 	bne	27274 <StringFormatV+0x564>
   270ec:	e1540000 	cmp	r4, r0
   270f0:	9a000006 	bls	27110 <StringFormatV+0x400>
   270f4:	e59d300c 	ldr	r3, [sp, #12]
   270f8:	e0442000 	sub	r2, r4, r0
   270fc:	e3530000 	cmp	r3, #0
   27100:	03a01020 	moveq	r1, #32
   27104:	13a01030 	movne	r1, #48	; 0x30
   27108:	e1a0000a 	mov	r0, sl
   2710c:	ebfffecd 	bl	26c48 <StringPutChar>
   27110:	e28d101c 	add	r1, sp, #28
   27114:	e1a0000a 	mov	r0, sl
   27118:	ebfffee4 	bl	26cb0 <StringPutString>
   2711c:	eaffff0a 	b	26d4c <StringFormatV+0x3c>
   27120:	e3a07008 	mov	r7, #8
   27124:	eaffffb4 	b	26ffc <StringFormatV+0x2ec>
   27128:	e3a07010 	mov	r7, #16
   2712c:	eaffffb2 	b	26ffc <StringFormatV+0x2ec>
   27130:	e1a06005 	mov	r6, r5
   27134:	e59d3004 	ldr	r3, [sp, #4]
   27138:	e5938000 	ldr	r8, [r3]
   2713c:	e2833004 	add	r3, r3, #4
   27140:	e3580000 	cmp	r8, #0
   27144:	b2688000 	rsblt	r8, r8, #0
   27148:	b3a09001 	movlt	r9, #1
   2714c:	a3a09000 	movge	r9, #0
   27150:	e3580009 	cmp	r8, #9
   27154:	e58d3004 	str	r3, [sp, #4]
   27158:	e1a07008 	mov	r7, r8
   2715c:	c3a05001 	movgt	r5, #1
   27160:	da00008f 	ble	273a4 <StringFormatV+0x694>
   27164:	e0855105 	add	r5, r5, r5, lsl #2
   27168:	e1a05085 	lsl	r5, r5, #1
   2716c:	e1a01005 	mov	r1, r5
   27170:	e1a00008 	mov	r0, r8
   27174:	eb001a7a 	bl	2db64 <__udivsi3>
   27178:	e3500009 	cmp	r0, #9
   2717c:	8afffff8 	bhi	27164 <StringFormatV+0x454>
   27180:	e1a0b000 	mov	fp, r0
   27184:	e28d801c 	add	r8, sp, #28
   27188:	ea000004 	b	271a0 <StringFormatV+0x490>
   2718c:	e1a01005 	mov	r1, r5
   27190:	e1a00007 	mov	r0, r7
   27194:	e1a0800c 	mov	r8, ip
   27198:	eb001a71 	bl	2db64 <__udivsi3>
   2719c:	e1a0b000 	mov	fp, r0
   271a0:	e1a00007 	mov	r0, r7
   271a4:	e1a01005 	mov	r1, r5
   271a8:	eb001aaa 	bl	2dc58 <__aeabi_uidivmod>
   271ac:	e1a0c008 	mov	ip, r8
   271b0:	e35b0009 	cmp	fp, #9
   271b4:	e6efb07b 	uxtb	fp, fp
   271b8:	e28b3030 	add	r3, fp, #48	; 0x30
   271bc:	96afb073 	sxtbls	fp, r3
   271c0:	e59f31e8 	ldr	r3, [pc, #488]	; 273b0 <StringFormatV+0x6a0>
   271c4:	828bb057 	addhi	fp, fp, #87	; 0x57
   271c8:	e0832395 	umull	r2, r3, r5, r3
   271cc:	86afb07b 	sxtbhi	fp, fp
   271d0:	e1b051a3 	lsrs	r5, r3, #3
   271d4:	e1a07001 	mov	r7, r1
   271d8:	e4ccb001 	strb	fp, [ip], #1
   271dc:	1affffea 	bne	2718c <StringFormatV+0x47c>
   271e0:	e5c85001 	strb	r5, [r8, #1]
   271e4:	e28d001c 	add	r0, sp, #28
   271e8:	eb0000e2 	bl	27578 <uspi_strlen>
   271ec:	e3590000 	cmp	r9, #0
   271f0:	e1a05000 	mov	r5, r0
   271f4:	0a00002b 	beq	272a8 <StringFormatV+0x598>
   271f8:	e59d3008 	ldr	r3, [sp, #8]
   271fc:	e2805001 	add	r5, r0, #1
   27200:	e3530000 	cmp	r3, #0
   27204:	1a000016 	bne	27264 <StringFormatV+0x554>
   27208:	e1540005 	cmp	r4, r5
   2720c:	9a000003 	bls	27220 <StringFormatV+0x510>
   27210:	e0442005 	sub	r2, r4, r5
   27214:	e3a01020 	mov	r1, #32
   27218:	e1a0000a 	mov	r0, sl
   2721c:	ebfffe89 	bl	26c48 <StringPutChar>
   27220:	e3a02001 	mov	r2, #1
   27224:	e3a0102d 	mov	r1, #45	; 0x2d
   27228:	e1a0000a 	mov	r0, sl
   2722c:	ebfffe85 	bl	26c48 <StringPutChar>
   27230:	eaffffb6 	b	27110 <StringFormatV+0x400>
   27234:	e1a07005 	mov	r7, r5
   27238:	e1a05006 	mov	r5, r6
   2723c:	e1a0000a 	mov	r0, sl
   27240:	e3a02001 	mov	r2, #1
   27244:	e3a01025 	mov	r1, #37	; 0x25
   27248:	ebfffe7e 	bl	26c48 <StringPutChar>
   2724c:	e1d710d0 	ldrsb	r1, [r7]
   27250:	e3a02001 	mov	r2, #1
   27254:	e1a0000a 	mov	r0, sl
   27258:	e1a06005 	mov	r6, r5
   2725c:	ebfffe79 	bl	26c48 <StringPutChar>
   27260:	eafffeb9 	b	26d4c <StringFormatV+0x3c>
   27264:	e3a02001 	mov	r2, #1
   27268:	e3a0102d 	mov	r1, #45	; 0x2d
   2726c:	e1a0000a 	mov	r0, sl
   27270:	ebfffe74 	bl	26c48 <StringPutChar>
   27274:	e28d101c 	add	r1, sp, #28
   27278:	e1a0000a 	mov	r0, sl
   2727c:	ebfffe8b 	bl	26cb0 <StringPutString>
   27280:	e1540005 	cmp	r4, r5
   27284:	9afffeb0 	bls	26d4c <StringFormatV+0x3c>
   27288:	e0442005 	sub	r2, r4, r5
   2728c:	e3a01020 	mov	r1, #32
   27290:	e1a0000a 	mov	r0, sl
   27294:	ebfffe6b 	bl	26c48 <StringPutChar>
   27298:	eafffeab 	b	26d4c <StringFormatV+0x3c>
   2729c:	e1a07003 	mov	r7, r3
   272a0:	e3a04000 	mov	r4, #0
   272a4:	eafffed2 	b	26df4 <StringFormatV+0xe4>
   272a8:	e59d3008 	ldr	r3, [sp, #8]
   272ac:	e3530000 	cmp	r3, #0
   272b0:	1affffef 	bne	27274 <StringFormatV+0x564>
   272b4:	e1540000 	cmp	r4, r0
   272b8:	9affff94 	bls	27110 <StringFormatV+0x400>
   272bc:	e0442000 	sub	r2, r4, r0
   272c0:	e3a01020 	mov	r1, #32
   272c4:	e1a0000a 	mov	r0, sl
   272c8:	ebfffe5e 	bl	26c48 <StringPutChar>
   272cc:	eaffff8f 	b	27110 <StringFormatV+0x400>
   272d0:	e3a07010 	mov	r7, #16
   272d4:	eaffff49 	b	27000 <StringFormatV+0x2f0>
   272d8:	e3a0700a 	mov	r7, #10
   272dc:	eaffff47 	b	27000 <StringFormatV+0x2f0>
   272e0:	e3a07008 	mov	r7, #8
   272e4:	eaffff45 	b	27000 <StringFormatV+0x2f0>
   272e8:	e2442001 	sub	r2, r4, #1
   272ec:	e3a01020 	mov	r1, #32
   272f0:	e1a0000a 	mov	r0, sl
   272f4:	ebfffe53 	bl	26c48 <StringPutChar>
   272f8:	eaffff37 	b	26fdc <StringFormatV+0x2cc>
   272fc:	e0442000 	sub	r2, r4, r0
   27300:	e3a01020 	mov	r1, #32
   27304:	e1a0000a 	mov	r0, sl
   27308:	ebfffe4e 	bl	26c48 <StringPutChar>
   2730c:	eaffff23 	b	26fa0 <StringFormatV+0x290>
   27310:	e3a020ad 	mov	r2, #173	; 0xad
   27314:	e59f1098 	ldr	r1, [pc, #152]	; 273b4 <StringFormatV+0x6a4>
   27318:	e59f0098 	ldr	r0, [pc, #152]	; 273b8 <StringFormatV+0x6a8>
   2731c:	ebffc13f 	bl	17820 <uspi_assertion_failed>
   27320:	eafffe80 	b	26d28 <StringFormatV+0x18>
   27324:	e1a09005 	mov	r9, r5
   27328:	e3a0b001 	mov	fp, #1
   2732c:	eaffff41 	b	27038 <StringFormatV+0x328>
   27330:	e1a01006 	mov	r1, r6
   27334:	e1a0000a 	mov	r0, sl
   27338:	ebfffe5c 	bl	26cb0 <StringPutString>
   2733c:	e1540007 	cmp	r4, r7
   27340:	91a06005 	movls	r6, r5
   27344:	958d8004 	strls	r8, [sp, #4]
   27348:	9afffe7f 	bls	26d4c <StringFormatV+0x3c>
   2734c:	e0442007 	sub	r2, r4, r7
   27350:	e3a01020 	mov	r1, #32
   27354:	e1a0000a 	mov	r0, sl
   27358:	e1a06005 	mov	r6, r5
   2735c:	e58d8004 	str	r8, [sp, #4]
   27360:	ebfffe38 	bl	26c48 <StringPutChar>
   27364:	eafffe78 	b	26d4c <StringFormatV+0x3c>
   27368:	e1a01006 	mov	r1, r6
   2736c:	e3a02001 	mov	r2, #1
   27370:	e1a0000a 	mov	r0, sl
   27374:	ebfffe33 	bl	26c48 <StringPutChar>
   27378:	e3540001 	cmp	r4, #1
   2737c:	91a06005 	movls	r6, r5
   27380:	958d7004 	strls	r7, [sp, #4]
   27384:	9afffe70 	bls	26d4c <StringFormatV+0x3c>
   27388:	e2442001 	sub	r2, r4, #1
   2738c:	e3a01020 	mov	r1, #32
   27390:	e1a0000a 	mov	r0, sl
   27394:	e1a06005 	mov	r6, r5
   27398:	e58d7004 	str	r7, [sp, #4]
   2739c:	ebfffe29 	bl	26c48 <StringPutChar>
   273a0:	eafffe69 	b	26d4c <StringFormatV+0x3c>
   273a4:	e1a0b008 	mov	fp, r8
   273a8:	e3a05001 	mov	r5, #1
   273ac:	eaffff74 	b	27184 <StringFormatV+0x474>
   273b0:	cccccccd 	.word	0xcccccccd
   273b4:	00031c28 	.word	0x00031c28
   273b8:	000306f0 	.word	0x000306f0

000273bc <StringFormat>:
   273bc:	e92d000e 	push	{r1, r2, r3}
   273c0:	e92d4010 	push	{r4, lr}
   273c4:	e2504000 	subs	r4, r0, #0
   273c8:	e24dd00c 	sub	sp, sp, #12
   273cc:	0a000009 	beq	273f8 <StringFormat+0x3c>
   273d0:	e28d3018 	add	r3, sp, #24
   273d4:	e1a00004 	mov	r0, r4
   273d8:	e1a02003 	mov	r2, r3
   273dc:	e59d1014 	ldr	r1, [sp, #20]
   273e0:	e58d3004 	str	r3, [sp, #4]
   273e4:	ebfffe49 	bl	26d10 <StringFormatV>
   273e8:	e28dd00c 	add	sp, sp, #12
   273ec:	e8bd4010 	pop	{r4, lr}
   273f0:	e28dd00c 	add	sp, sp, #12
   273f4:	e12fff1e 	bx	lr
   273f8:	e3a020a1 	mov	r2, #161	; 0xa1
   273fc:	e59f1008 	ldr	r1, [pc, #8]	; 2740c <StringFormat+0x50>
   27400:	e59f0008 	ldr	r0, [pc, #8]	; 27410 <StringFormat+0x54>
   27404:	ebffc105 	bl	17820 <uspi_assertion_failed>
   27408:	eafffff0 	b	273d0 <StringFormat+0x14>
   2740c:	00031c28 	.word	0x00031c28
   27410:	000306f0 	.word	0x000306f0

00027414 <ntoa>:
   27414:	e1510002 	cmp	r1, r2
   27418:	e92d4ff8 	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2741c:	e1a05001 	mov	r5, r1
   27420:	e1a06002 	mov	r6, r2
   27424:	e1a09000 	mov	r9, r0
   27428:	e1a07003 	mov	r7, r3
   2742c:	23a0a001 	movcs	sl, #1
   27430:	3a000024 	bcc	274c8 <ntoa+0xb4>
   27434:	e00a0a96 	mul	sl, r6, sl
   27438:	e1a00005 	mov	r0, r5
   2743c:	e1a0100a 	mov	r1, sl
   27440:	eb0019c7 	bl	2db64 <__udivsi3>
   27444:	e1500006 	cmp	r0, r6
   27448:	e1a04000 	mov	r4, r0
   2744c:	2afffff8 	bcs	27434 <ntoa+0x20>
   27450:	e3570000 	cmp	r7, #0
   27454:	13a08037 	movne	r8, #55	; 0x37
   27458:	03a08057 	moveq	r8, #87	; 0x57
   2745c:	e1a07009 	mov	r7, r9
   27460:	ea000004 	b	27478 <ntoa+0x64>
   27464:	e1a0100a 	mov	r1, sl
   27468:	e1a00005 	mov	r0, r5
   2746c:	eb0019bc 	bl	2db64 <__udivsi3>
   27470:	e1a0700b 	mov	r7, fp
   27474:	e1a04000 	mov	r4, r0
   27478:	e1a00005 	mov	r0, r5
   2747c:	e1a0100a 	mov	r1, sl
   27480:	eb0019f4 	bl	2dc58 <__aeabi_uidivmod>
   27484:	e1a0b007 	mov	fp, r7
   27488:	e3540009 	cmp	r4, #9
   2748c:	e6ef4074 	uxtb	r4, r4
   27490:	e2843030 	add	r3, r4, #48	; 0x30
   27494:	80844008 	addhi	r4, r4, r8
   27498:	96af4073 	sxtbls	r4, r3
   2749c:	86af4074 	sxtbhi	r4, r4
   274a0:	e1a0000a 	mov	r0, sl
   274a4:	e1a05001 	mov	r5, r1
   274a8:	e4cb4001 	strb	r4, [fp], #1
   274ac:	e1a01006 	mov	r1, r6
   274b0:	eb0019ab 	bl	2db64 <__udivsi3>
   274b4:	e250a000 	subs	sl, r0, #0
   274b8:	1affffe9 	bne	27464 <ntoa+0x50>
   274bc:	e5c7a001 	strb	sl, [r7, #1]
   274c0:	e1a00009 	mov	r0, r9
   274c4:	e8bd8ff8 	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   274c8:	e1a04001 	mov	r4, r1
   274cc:	e3a0a001 	mov	sl, #1
   274d0:	eaffffde 	b	27450 <ntoa+0x3c>

000274d4 <uspi_memset>:
   274d4:	e3520000 	cmp	r2, #0
   274d8:	012fff1e 	bxeq	lr
   274dc:	e1a03000 	mov	r3, r0
   274e0:	e6af1071 	sxtb	r1, r1
   274e4:	e0802002 	add	r2, r0, r2
   274e8:	e4c31001 	strb	r1, [r3], #1
   274ec:	e1530002 	cmp	r3, r2
   274f0:	1afffffc 	bne	274e8 <uspi_memset+0x14>
   274f4:	e12fff1e 	bx	lr

000274f8 <uspi_memcpy>:
   274f8:	e3520000 	cmp	r2, #0
   274fc:	012fff1e 	bxeq	lr
   27500:	e0812002 	add	r2, r1, r2
   27504:	e2403001 	sub	r3, r0, #1
   27508:	e0d1c0d1 	ldrsb	ip, [r1], #1
   2750c:	e1510002 	cmp	r1, r2
   27510:	e5e3c001 	strb	ip, [r3, #1]!
   27514:	1afffffb 	bne	27508 <uspi_memcpy+0x10>
   27518:	e12fff1e 	bx	lr

0002751c <uspi_memcmp>:
   2751c:	e3520000 	cmp	r2, #0
   27520:	e242c001 	sub	ip, r2, #1
   27524:	0a00000d 	beq	27560 <uspi_memcmp+0x44>
   27528:	e5d02000 	ldrb	r2, [r0]
   2752c:	e5d13000 	ldrb	r3, [r1]
   27530:	e1520003 	cmp	r2, r3
   27534:	8a00000b 	bhi	27568 <uspi_memcmp+0x4c>
   27538:	3a00000c 	bcc	27570 <uspi_memcmp+0x54>
   2753c:	e081c00c 	add	ip, r1, ip
   27540:	ea000004 	b	27558 <uspi_memcmp+0x3c>
   27544:	e5f02001 	ldrb	r2, [r0, #1]!
   27548:	e5f13001 	ldrb	r3, [r1, #1]!
   2754c:	e1520003 	cmp	r2, r3
   27550:	8a000004 	bhi	27568 <uspi_memcmp+0x4c>
   27554:	3a000005 	bcc	27570 <uspi_memcmp+0x54>
   27558:	e151000c 	cmp	r1, ip
   2755c:	1afffff8 	bne	27544 <uspi_memcmp+0x28>
   27560:	e3a00000 	mov	r0, #0
   27564:	e12fff1e 	bx	lr
   27568:	e3a00001 	mov	r0, #1
   2756c:	e12fff1e 	bx	lr
   27570:	e3e00000 	mvn	r0, #0
   27574:	e12fff1e 	bx	lr

00027578 <uspi_strlen>:
   27578:	e1d010d0 	ldrsb	r1, [r0]
   2757c:	e2803001 	add	r3, r0, #1
   27580:	e3510000 	cmp	r1, #0
   27584:	0a000003 	beq	27598 <uspi_strlen+0x20>
   27588:	e0431000 	sub	r1, r3, r0
   2758c:	e0d320d1 	ldrsb	r2, [r3], #1
   27590:	e3520000 	cmp	r2, #0
   27594:	1afffffb 	bne	27588 <uspi_strlen+0x10>
   27598:	e1a00001 	mov	r0, r1
   2759c:	e12fff1e 	bx	lr

000275a0 <uspi_strcmp>:
   275a0:	e1d030d0 	ldrsb	r3, [r0]
   275a4:	e1d120d0 	ldrsb	r2, [r1]
   275a8:	e3530000 	cmp	r3, #0
   275ac:	0a00000e 	beq	275ec <uspi_strcmp+0x4c>
   275b0:	e3520000 	cmp	r2, #0
   275b4:	0a00000c 	beq	275ec <uspi_strcmp+0x4c>
   275b8:	e1520003 	cmp	r2, r3
   275bc:	ba00000f 	blt	27600 <uspi_strcmp+0x60>
   275c0:	da000005 	ble	275dc <uspi_strcmp+0x3c>
   275c4:	ea00000f 	b	27608 <uspi_strcmp+0x68>
   275c8:	e3520000 	cmp	r2, #0
   275cc:	0a000006 	beq	275ec <uspi_strcmp+0x4c>
   275d0:	e1530002 	cmp	r3, r2
   275d4:	ca000009 	bgt	27600 <uspi_strcmp+0x60>
   275d8:	ba00000a 	blt	27608 <uspi_strcmp+0x68>
   275dc:	e1f030d1 	ldrsb	r3, [r0, #1]!
   275e0:	e1f120d1 	ldrsb	r2, [r1, #1]!
   275e4:	e3530000 	cmp	r3, #0
   275e8:	1afffff6 	bne	275c8 <uspi_strcmp+0x28>
   275ec:	e1530002 	cmp	r3, r2
   275f0:	ca000002 	bgt	27600 <uspi_strcmp+0x60>
   275f4:	b3e00000 	mvnlt	r0, #0
   275f8:	a3a00000 	movge	r0, #0
   275fc:	e12fff1e 	bx	lr
   27600:	e3a00001 	mov	r0, #1
   27604:	e12fff1e 	bx	lr
   27608:	e3e00000 	mvn	r0, #0
   2760c:	e12fff1e 	bx	lr

00027610 <uspi_strcpy>:
   27610:	e1d130d0 	ldrsb	r3, [r1]
   27614:	e1a02000 	mov	r2, r0
   27618:	e3530000 	cmp	r3, #0
   2761c:	0a000003 	beq	27630 <uspi_strcpy+0x20>
   27620:	e4c23001 	strb	r3, [r2], #1
   27624:	e1f130d1 	ldrsb	r3, [r1, #1]!
   27628:	e3530000 	cmp	r3, #0
   2762c:	1afffffb 	bne	27620 <uspi_strcpy+0x10>
   27630:	e3a03000 	mov	r3, #0
   27634:	e5c23000 	strb	r3, [r2]
   27638:	e12fff1e 	bx	lr

0002763c <uspi_strncpy>:
   2763c:	e3520000 	cmp	r2, #0
   27640:	012fff1e 	bxeq	lr
   27644:	e1d1c0d0 	ldrsb	ip, [r1]
   27648:	e35c0000 	cmp	ip, #0
   2764c:	0a00000a 	beq	2767c <uspi_strncpy+0x40>
   27650:	e1a03000 	mov	r3, r0
   27654:	e0802002 	add	r2, r0, r2
   27658:	e4c3c001 	strb	ip, [r3], #1
   2765c:	e1530002 	cmp	r3, r2
   27660:	012fff1e 	bxeq	lr
   27664:	e1f1c0d1 	ldrsb	ip, [r1, #1]!
   27668:	e35c0000 	cmp	ip, #0
   2766c:	1afffff9 	bne	27658 <uspi_strncpy+0x1c>
   27670:	e3a02000 	mov	r2, #0
   27674:	e5c32000 	strb	r2, [r3]
   27678:	e12fff1e 	bx	lr
   2767c:	e1a03000 	mov	r3, r0
   27680:	eafffffa 	b	27670 <uspi_strncpy+0x34>

00027684 <uspi_strcat>:
   27684:	e1d030d0 	ldrsb	r3, [r0]
   27688:	e3530000 	cmp	r3, #0
   2768c:	e1a03000 	mov	r3, r0
   27690:	0a000002 	beq	276a0 <uspi_strcat+0x1c>
   27694:	e1f320d1 	ldrsb	r2, [r3, #1]!
   27698:	e3520000 	cmp	r2, #0
   2769c:	1afffffc 	bne	27694 <uspi_strcat+0x10>
   276a0:	e1d120d0 	ldrsb	r2, [r1]
   276a4:	e3520000 	cmp	r2, #0
   276a8:	0a000003 	beq	276bc <uspi_strcat+0x38>
   276ac:	e4c32001 	strb	r2, [r3], #1
   276b0:	e1f120d1 	ldrsb	r2, [r1, #1]!
   276b4:	e3520000 	cmp	r2, #0
   276b8:	1afffffb 	bne	276ac <uspi_strcat+0x28>
   276bc:	e3a02000 	mov	r2, #0
   276c0:	e5c32000 	strb	r2, [r3]
   276c4:	e12fff1e 	bx	lr

000276c8 <uspi_char2int>:
   276c8:	e12fff1e 	bx	lr

000276cc <uspi_le2be16>:
   276cc:	e6bf0fb0 	rev16	r0, r0
   276d0:	e6ff0070 	uxth	r0, r0
   276d4:	e12fff1e 	bx	lr

000276d8 <uspi_le2be32>:
   276d8:	e6bf0f30 	rev	r0, r0
   276dc:	e12fff1e 	bx	lr

000276e0 <USBBulkOnlyMassStorageDevice>:
   276e0:	e92d4070 	push	{r4, r5, r6, lr}
   276e4:	e2504000 	subs	r4, r0, #0
   276e8:	e1a05001 	mov	r5, r1
   276ec:	0a00000d 	beq	27728 <USBBulkOnlyMassStorageDevice+0x48>
   276f0:	e1a01005 	mov	r1, r5
   276f4:	e1a00004 	mov	r0, r4
   276f8:	ebfff360 	bl	24480 <USBFunctionCopy>
   276fc:	e3a03000 	mov	r3, #0
   27700:	e3a00000 	mov	r0, #0
   27704:	e3a01000 	mov	r1, #0
   27708:	e59f202c 	ldr	r2, [pc, #44]	; 2773c <USBBulkOnlyMassStorageDevice+0x5c>
   2770c:	e1c402f0 	strd	r0, [r4, #32]
   27710:	e5843010 	str	r3, [r4, #16]
   27714:	e5843014 	str	r3, [r4, #20]
   27718:	e5843018 	str	r3, [r4, #24]
   2771c:	e584301c 	str	r3, [r4, #28]
   27720:	e5842000 	str	r2, [r4]
   27724:	e8bd8070 	pop	{r4, r5, r6, pc}
   27728:	e3a020c8 	mov	r2, #200	; 0xc8
   2772c:	e59f100c 	ldr	r1, [pc, #12]	; 27740 <USBBulkOnlyMassStorageDevice+0x60>
   27730:	e59f000c 	ldr	r0, [pc, #12]	; 27744 <USBBulkOnlyMassStorageDevice+0x64>
   27734:	ebffc039 	bl	17820 <uspi_assertion_failed>
   27738:	eaffffec 	b	276f0 <USBBulkOnlyMassStorageDevice+0x10>
   2773c:	00027afc 	.word	0x00027afc
   27740:	00031c3c 	.word	0x00031c3c
   27744:	000306f0 	.word	0x000306f0

00027748 <_USBBulkOnlyMassStorageDevice>:
   27748:	e92d4010 	push	{r4, lr}
   2774c:	e2504000 	subs	r4, r0, #0
   27750:	0a000012 	beq	277a0 <_USBBulkOnlyMassStorageDevice+0x58>
   27754:	e5940014 	ldr	r0, [r4, #20]
   27758:	e3500000 	cmp	r0, #0
   2775c:	0a000004 	beq	27774 <_USBBulkOnlyMassStorageDevice+0x2c>
   27760:	ebffeccf 	bl	22aa4 <_USBEndpoint>
   27764:	e5940014 	ldr	r0, [r4, #20]
   27768:	ebffc006 	bl	17788 <free>
   2776c:	e3a03000 	mov	r3, #0
   27770:	e5843014 	str	r3, [r4, #20]
   27774:	e5940010 	ldr	r0, [r4, #16]
   27778:	e3500000 	cmp	r0, #0
   2777c:	0a000004 	beq	27794 <_USBBulkOnlyMassStorageDevice+0x4c>
   27780:	ebffecc7 	bl	22aa4 <_USBEndpoint>
   27784:	e5940010 	ldr	r0, [r4, #16]
   27788:	ebffbffe 	bl	17788 <free>
   2778c:	e3a03000 	mov	r3, #0
   27790:	e5843010 	str	r3, [r4, #16]
   27794:	e1a00004 	mov	r0, r4
   27798:	e8bd4010 	pop	{r4, lr}
   2779c:	eafff379 	b	24588 <_USBFunction>
   277a0:	e3a020d6 	mov	r2, #214	; 0xd6
   277a4:	e59f1008 	ldr	r1, [pc, #8]	; 277b4 <_USBBulkOnlyMassStorageDevice+0x6c>
   277a8:	e59f0008 	ldr	r0, [pc, #8]	; 277b8 <_USBBulkOnlyMassStorageDevice+0x70>
   277ac:	ebffc01b 	bl	17820 <uspi_assertion_failed>
   277b0:	eaffffe7 	b	27754 <_USBBulkOnlyMassStorageDevice+0xc>
   277b4:	00031c3c 	.word	0x00031c3c
   277b8:	000306f0 	.word	0x000306f0

000277bc <USBBulkOnlyMassStorageDeviceSeek>:
   277bc:	e92d4070 	push	{r4, r5, r6, lr}
   277c0:	e2506000 	subs	r6, r0, #0
   277c4:	e1a04002 	mov	r4, r2
   277c8:	e1a05003 	mov	r5, r3
   277cc:	0a000003 	beq	277e0 <USBBulkOnlyMassStorageDeviceSeek+0x24>
   277d0:	e1c642f0 	strd	r4, [r6, #32]
   277d4:	e1a00004 	mov	r0, r4
   277d8:	e1a01005 	mov	r1, r5
   277dc:	e8bd8070 	pop	{r4, r5, r6, pc}
   277e0:	e59f200c 	ldr	r2, [pc, #12]	; 277f4 <USBBulkOnlyMassStorageDeviceSeek+0x38>
   277e4:	e59f100c 	ldr	r1, [pc, #12]	; 277f8 <USBBulkOnlyMassStorageDeviceSeek+0x3c>
   277e8:	e59f000c 	ldr	r0, [pc, #12]	; 277fc <USBBulkOnlyMassStorageDeviceSeek+0x40>
   277ec:	ebffc00b 	bl	17820 <uspi_assertion_failed>
   277f0:	eafffff6 	b	277d0 <USBBulkOnlyMassStorageDeviceSeek+0x14>
   277f4:	000001d3 	.word	0x000001d3
   277f8:	00031c3c 	.word	0x00031c3c
   277fc:	000306f0 	.word	0x000306f0

00027800 <USBBulkOnlyMassStorageDeviceGetCapacity>:
   27800:	e92d4010 	push	{r4, lr}
   27804:	e2504000 	subs	r4, r0, #0
   27808:	0a000001 	beq	27814 <USBBulkOnlyMassStorageDeviceGetCapacity+0x14>
   2780c:	e594001c 	ldr	r0, [r4, #28]
   27810:	e8bd8010 	pop	{r4, pc}
   27814:	e3a02f77 	mov	r2, #476	; 0x1dc
   27818:	e59f100c 	ldr	r1, [pc, #12]	; 2782c <USBBulkOnlyMassStorageDeviceGetCapacity+0x2c>
   2781c:	e59f000c 	ldr	r0, [pc, #12]	; 27830 <USBBulkOnlyMassStorageDeviceGetCapacity+0x30>
   27820:	ebffbffe 	bl	17820 <uspi_assertion_failed>
   27824:	e594001c 	ldr	r0, [r4, #28]
   27828:	e8bd8010 	pop	{r4, pc}
   2782c:	00031c3c 	.word	0x00031c3c
   27830:	000306f0 	.word	0x000306f0

00027834 <USBBulkOnlyMassStorageDeviceCommand>:
   27834:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
   27838:	e2504000 	subs	r4, r0, #0
   2783c:	e24dd034 	sub	sp, sp, #52	; 0x34
   27840:	e1a07001 	mov	r7, r1
   27844:	e1a06002 	mov	r6, r2
   27848:	e1a09003 	mov	r9, r3
   2784c:	e59d5050 	ldr	r5, [sp, #80]	; 0x50
   27850:	e59d8054 	ldr	r8, [sp, #84]	; 0x54
   27854:	0a00005e 	beq	279d4 <USBBulkOnlyMassStorageDeviceCommand+0x1a0>
   27858:	e3570000 	cmp	r7, #0
   2785c:	0a000062 	beq	279ec <USBBulkOnlyMassStorageDeviceCommand+0x1b8>
   27860:	e2463006 	sub	r3, r6, #6
   27864:	e353000a 	cmp	r3, #10
   27868:	8a00004f 	bhi	279ac <USBBulkOnlyMassStorageDeviceCommand+0x178>
   2786c:	e16f3f19 	clz	r3, r9
   27870:	e3550000 	cmp	r5, #0
   27874:	e1a032a3 	lsr	r3, r3, #5
   27878:	03a03000 	moveq	r3, #0
   2787c:	e3530000 	cmp	r3, #0
   27880:	1a00004e 	bne	279c0 <USBBulkOnlyMassStorageDeviceCommand+0x18c>
   27884:	e3a0201f 	mov	r2, #31
   27888:	e3a01000 	mov	r1, #0
   2788c:	e28d0010 	add	r0, sp, #16
   27890:	ebffff0f 	bl	274d4 <uspi_memset>
   27894:	e3580000 	cmp	r8, #0
   27898:	03a0e000 	moveq	lr, #0
   2789c:	13a0e080 	movne	lr, #128	; 0x80
   278a0:	e5943018 	ldr	r3, [r4, #24]
   278a4:	e5ddc01d 	ldrb	ip, [sp, #29]
   278a8:	e2833001 	add	r3, r3, #1
   278ac:	e5843018 	str	r3, [r4, #24]
   278b0:	e5dd201e 	ldrb	r2, [sp, #30]
   278b4:	e206001f 	and	r0, r6, #31
   278b8:	e3c2201f 	bic	r2, r2, #31
   278bc:	e1800002 	orr	r0, r0, r2
   278c0:	e58d3014 	str	r3, [sp, #20]
   278c4:	e59f31e0 	ldr	r3, [pc, #480]	; 27aac <USBBulkOnlyMassStorageDeviceCommand+0x278>
   278c8:	e1a02006 	mov	r2, r6
   278cc:	e3ccc00f 	bic	ip, ip, #15
   278d0:	e1a01007 	mov	r1, r7
   278d4:	e5cd001e 	strb	r0, [sp, #30]
   278d8:	e28d001f 	add	r0, sp, #31
   278dc:	e5cde01c 	strb	lr, [sp, #28]
   278e0:	e5cdc01d 	strb	ip, [sp, #29]
   278e4:	e58d3010 	str	r3, [sp, #16]
   278e8:	e58d5018 	str	r5, [sp, #24]
   278ec:	ebffff01 	bl	274f8 <uspi_memcpy>
   278f0:	e1a00004 	mov	r0, r4
   278f4:	ebfff3a7 	bl	24798 <USBFunctionGetHost>
   278f8:	e2506000 	subs	r6, r0, #0
   278fc:	0a00003f 	beq	27a00 <USBBulkOnlyMassStorageDeviceCommand+0x1cc>
   27900:	e28d2010 	add	r2, sp, #16
   27904:	e3a0301f 	mov	r3, #31
   27908:	e5941014 	ldr	r1, [r4, #20]
   2790c:	e1a00006 	mov	r0, r6
   27910:	ebffdcce 	bl	1ec50 <DWHCIDeviceTransfer>
   27914:	e3500000 	cmp	r0, #0
   27918:	ba000057 	blt	27a7c <USBBulkOnlyMassStorageDeviceCommand+0x248>
   2791c:	e3550000 	cmp	r5, #0
   27920:	e5941010 	ldr	r1, [r4, #16]
   27924:	0a000009 	beq	27950 <USBBulkOnlyMassStorageDeviceCommand+0x11c>
   27928:	e5940014 	ldr	r0, [r4, #20]
   2792c:	e3580000 	cmp	r8, #0
   27930:	01a01000 	moveq	r1, r0
   27934:	e1a03005 	mov	r3, r5
   27938:	e1a02009 	mov	r2, r9
   2793c:	e1a00006 	mov	r0, r6
   27940:	ebffdcc2 	bl	1ec50 <DWHCIDeviceTransfer>
   27944:	e2505000 	subs	r5, r0, #0
   27948:	ba000051 	blt	27a94 <USBBulkOnlyMassStorageDeviceCommand+0x260>
   2794c:	e5941010 	ldr	r1, [r4, #16]
   27950:	e1a00006 	mov	r0, r6
   27954:	e3a0300d 	mov	r3, #13
   27958:	e1a0200d 	mov	r2, sp
   2795c:	ebffdcbb 	bl	1ec50 <DWHCIDeviceTransfer>
   27960:	e350000d 	cmp	r0, #13
   27964:	1a00002a 	bne	27a14 <USBBulkOnlyMassStorageDeviceCommand+0x1e0>
   27968:	e59f3140 	ldr	r3, [pc, #320]	; 27ab0 <USBBulkOnlyMassStorageDeviceCommand+0x27c>
   2796c:	e59d2000 	ldr	r2, [sp]
   27970:	e1520003 	cmp	r2, r3
   27974:	1a00002e 	bne	27a34 <USBBulkOnlyMassStorageDeviceCommand+0x200>
   27978:	e5943018 	ldr	r3, [r4, #24]
   2797c:	e59d2004 	ldr	r2, [sp, #4]
   27980:	e1520003 	cmp	r2, r3
   27984:	1a000030 	bne	27a4c <USBBulkOnlyMassStorageDeviceCommand+0x218>
   27988:	e5dd300c 	ldrb	r3, [sp, #12]
   2798c:	e3530000 	cmp	r3, #0
   27990:	1a000025 	bne	27a2c <USBBulkOnlyMassStorageDeviceCommand+0x1f8>
   27994:	e59d3008 	ldr	r3, [sp, #8]
   27998:	e3530000 	cmp	r3, #0
   2799c:	1a000030 	bne	27a64 <USBBulkOnlyMassStorageDeviceCommand+0x230>
   279a0:	e1a00005 	mov	r0, r5
   279a4:	e28dd034 	add	sp, sp, #52	; 0x34
   279a8:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
   279ac:	e59f2100 	ldr	r2, [pc, #256]	; 27ab4 <USBBulkOnlyMassStorageDeviceCommand+0x280>
   279b0:	e59f1100 	ldr	r1, [pc, #256]	; 27ab8 <USBBulkOnlyMassStorageDeviceCommand+0x284>
   279b4:	e59f0100 	ldr	r0, [pc, #256]	; 27abc <USBBulkOnlyMassStorageDeviceCommand+0x288>
   279b8:	ebffbf98 	bl	17820 <uspi_assertion_failed>
   279bc:	eaffffaa 	b	2786c <USBBulkOnlyMassStorageDeviceCommand+0x38>
   279c0:	e59f20f8 	ldr	r2, [pc, #248]	; 27ac0 <USBBulkOnlyMassStorageDeviceCommand+0x28c>
   279c4:	e59f10ec 	ldr	r1, [pc, #236]	; 27ab8 <USBBulkOnlyMassStorageDeviceCommand+0x284>
   279c8:	e59f00f4 	ldr	r0, [pc, #244]	; 27ac4 <USBBulkOnlyMassStorageDeviceCommand+0x290>
   279cc:	ebffbf93 	bl	17820 <uspi_assertion_failed>
   279d0:	eaffffab 	b	27884 <USBBulkOnlyMassStorageDeviceCommand+0x50>
   279d4:	e59f20ec 	ldr	r2, [pc, #236]	; 27ac8 <USBBulkOnlyMassStorageDeviceCommand+0x294>
   279d8:	e59f10d8 	ldr	r1, [pc, #216]	; 27ab8 <USBBulkOnlyMassStorageDeviceCommand+0x284>
   279dc:	e59f00e8 	ldr	r0, [pc, #232]	; 27acc <USBBulkOnlyMassStorageDeviceCommand+0x298>
   279e0:	ebffbf8e 	bl	17820 <uspi_assertion_failed>
   279e4:	e3570000 	cmp	r7, #0
   279e8:	1affff9c 	bne	27860 <USBBulkOnlyMassStorageDeviceCommand+0x2c>
   279ec:	e59f20dc 	ldr	r2, [pc, #220]	; 27ad0 <USBBulkOnlyMassStorageDeviceCommand+0x29c>
   279f0:	e59f10c0 	ldr	r1, [pc, #192]	; 27ab8 <USBBulkOnlyMassStorageDeviceCommand+0x284>
   279f4:	e59f00d8 	ldr	r0, [pc, #216]	; 27ad4 <USBBulkOnlyMassStorageDeviceCommand+0x2a0>
   279f8:	ebffbf88 	bl	17820 <uspi_assertion_failed>
   279fc:	eaffff97 	b	27860 <USBBulkOnlyMassStorageDeviceCommand+0x2c>
   27a00:	e59f20d0 	ldr	r2, [pc, #208]	; 27ad8 <USBBulkOnlyMassStorageDeviceCommand+0x2a4>
   27a04:	e59f10ac 	ldr	r1, [pc, #172]	; 27ab8 <USBBulkOnlyMassStorageDeviceCommand+0x284>
   27a08:	e59f00cc 	ldr	r0, [pc, #204]	; 27adc <USBBulkOnlyMassStorageDeviceCommand+0x2a8>
   27a0c:	ebffbf83 	bl	17820 <uspi_assertion_failed>
   27a10:	eaffffba 	b	27900 <USBBulkOnlyMassStorageDeviceCommand+0xcc>
   27a14:	e59f20c4 	ldr	r2, [pc, #196]	; 27ae0 <USBBulkOnlyMassStorageDeviceCommand+0x2ac>
   27a18:	e3a01001 	mov	r1, #1
   27a1c:	e59f00c0 	ldr	r0, [pc, #192]	; 27ae4 <USBBulkOnlyMassStorageDeviceCommand+0x2b0>
   27a20:	ebff8763 	bl	97b4 <LogWrite>
   27a24:	e3e05000 	mvn	r5, #0
   27a28:	eaffffdc 	b	279a0 <USBBulkOnlyMassStorageDeviceCommand+0x16c>
   27a2c:	e3e05000 	mvn	r5, #0
   27a30:	eaffffda 	b	279a0 <USBBulkOnlyMassStorageDeviceCommand+0x16c>
   27a34:	e59f20ac 	ldr	r2, [pc, #172]	; 27ae8 <USBBulkOnlyMassStorageDeviceCommand+0x2b4>
   27a38:	e3a01001 	mov	r1, #1
   27a3c:	e59f00a0 	ldr	r0, [pc, #160]	; 27ae4 <USBBulkOnlyMassStorageDeviceCommand+0x2b0>
   27a40:	ebff875b 	bl	97b4 <LogWrite>
   27a44:	e3e05000 	mvn	r5, #0
   27a48:	eaffffd4 	b	279a0 <USBBulkOnlyMassStorageDeviceCommand+0x16c>
   27a4c:	e59f2098 	ldr	r2, [pc, #152]	; 27aec <USBBulkOnlyMassStorageDeviceCommand+0x2b8>
   27a50:	e3a01001 	mov	r1, #1
   27a54:	e59f0088 	ldr	r0, [pc, #136]	; 27ae4 <USBBulkOnlyMassStorageDeviceCommand+0x2b0>
   27a58:	ebff8755 	bl	97b4 <LogWrite>
   27a5c:	e3e05000 	mvn	r5, #0
   27a60:	eaffffce 	b	279a0 <USBBulkOnlyMassStorageDeviceCommand+0x16c>
   27a64:	e59f2084 	ldr	r2, [pc, #132]	; 27af0 <USBBulkOnlyMassStorageDeviceCommand+0x2bc>
   27a68:	e3a01001 	mov	r1, #1
   27a6c:	e59f0070 	ldr	r0, [pc, #112]	; 27ae4 <USBBulkOnlyMassStorageDeviceCommand+0x2b0>
   27a70:	ebff874f 	bl	97b4 <LogWrite>
   27a74:	e3e05000 	mvn	r5, #0
   27a78:	eaffffc8 	b	279a0 <USBBulkOnlyMassStorageDeviceCommand+0x16c>
   27a7c:	e59f2070 	ldr	r2, [pc, #112]	; 27af4 <USBBulkOnlyMassStorageDeviceCommand+0x2c0>
   27a80:	e3a01001 	mov	r1, #1
   27a84:	e59f0058 	ldr	r0, [pc, #88]	; 27ae4 <USBBulkOnlyMassStorageDeviceCommand+0x2b0>
   27a88:	ebff8749 	bl	97b4 <LogWrite>
   27a8c:	e3e05000 	mvn	r5, #0
   27a90:	eaffffc2 	b	279a0 <USBBulkOnlyMassStorageDeviceCommand+0x16c>
   27a94:	e59f205c 	ldr	r2, [pc, #92]	; 27af8 <USBBulkOnlyMassStorageDeviceCommand+0x2c4>
   27a98:	e3a01001 	mov	r1, #1
   27a9c:	e59f0040 	ldr	r0, [pc, #64]	; 27ae4 <USBBulkOnlyMassStorageDeviceCommand+0x2b0>
   27aa0:	ebff8743 	bl	97b4 <LogWrite>
   27aa4:	e3e05000 	mvn	r5, #0
   27aa8:	eaffffbc 	b	279a0 <USBBulkOnlyMassStorageDeviceCommand+0x16c>
   27aac:	43425355 	.word	0x43425355
   27ab0:	53425355 	.word	0x53425355
   27ab4:	0000023a 	.word	0x0000023a
   27ab8:	00031c3c 	.word	0x00031c3c
   27abc:	00031c5c 	.word	0x00031c5c
   27ac0:	0000023b 	.word	0x0000023b
   27ac4:	00031c80 	.word	0x00031c80
   27ac8:	00000237 	.word	0x00000237
   27acc:	000306f0 	.word	0x000306f0
   27ad0:	00000239 	.word	0x00000239
   27ad4:	00031c4c 	.word	0x00031c4c
   27ad8:	0000024a 	.word	0x0000024a
   27adc:	00031514 	.word	0x00031514
   27ae0:	00031ccc 	.word	0x00031ccc
   27ae4:	00031c34 	.word	0x00031c34
   27ae8:	00031ce0 	.word	0x00031ce0
   27aec:	00031cf8 	.word	0x00031cf8
   27af0:	00031d0c 	.word	0x00031d0c
   27af4:	00031ca0 	.word	0x00031ca0
   27af8:	00031cb4 	.word	0x00031cb4

00027afc <USBBulkOnlyMassStorageDeviceConfigure>:
   27afc:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
   27b00:	e2505000 	subs	r5, r0, #0
   27b04:	e24dd064 	sub	sp, sp, #100	; 0x64
   27b08:	0a000093 	beq	27d5c <USBBulkOnlyMassStorageDeviceConfigure+0x260>
   27b0c:	e1a00005 	mov	r0, r5
   27b10:	ebfff2de 	bl	24690 <USBFunctionGetNumEndpoints>
   27b14:	e3500001 	cmp	r0, #1
   27b18:	9a000082 	bls	27d28 <USBBulkOnlyMassStorageDeviceConfigure+0x22c>
   27b1c:	e59f738c 	ldr	r7, [pc, #908]	; 27eb0 <USBBulkOnlyMassStorageDeviceConfigure+0x3b4>
   27b20:	e59f838c 	ldr	r8, [pc, #908]	; 27eb4 <USBBulkOnlyMassStorageDeviceConfigure+0x3b8>
   27b24:	e59f938c 	ldr	r9, [pc, #908]	; 27eb8 <USBBulkOnlyMassStorageDeviceConfigure+0x3bc>
   27b28:	ea000003 	b	27b3c <USBBulkOnlyMassStorageDeviceConfigure+0x40>
   27b2c:	e5d43003 	ldrb	r3, [r4, #3]
   27b30:	e203303f 	and	r3, r3, #63	; 0x3f
   27b34:	e3530002 	cmp	r3, #2
   27b38:	0a000052 	beq	27c88 <USBBulkOnlyMassStorageDeviceConfigure+0x18c>
   27b3c:	e3a01005 	mov	r1, #5
   27b40:	e1a00005 	mov	r0, r5
   27b44:	ebfff363 	bl	248d8 <USBFunctionGetDescriptor>
   27b48:	e2504000 	subs	r4, r0, #0
   27b4c:	1afffff6 	bne	27b2c <USBBulkOnlyMassStorageDeviceConfigure+0x30>
   27b50:	e5953010 	ldr	r3, [r5, #16]
   27b54:	e1a00005 	mov	r0, r5
   27b58:	e3530000 	cmp	r3, #0
   27b5c:	0a00005c 	beq	27cd4 <USBBulkOnlyMassStorageDeviceConfigure+0x1d8>
   27b60:	e5953014 	ldr	r3, [r5, #20]
   27b64:	e3530000 	cmp	r3, #0
   27b68:	0a000059 	beq	27cd4 <USBBulkOnlyMassStorageDeviceConfigure+0x1d8>
   27b6c:	ebfff320 	bl	247f4 <USBFunctionConfigure>
   27b70:	e2506000 	subs	r6, r0, #0
   27b74:	0a00007d 	beq	27d70 <USBBulkOnlyMassStorageDeviceConfigure+0x274>
   27b78:	e3a00024 	mov	r0, #36	; 0x24
   27b7c:	e3a06001 	mov	r6, #1
   27b80:	e3a0c012 	mov	ip, #18
   27b84:	e88d0041 	stm	sp, {r0, r6}
   27b88:	e1cd01b0 	strh	r0, [sp, #16]
   27b8c:	e28d303c 	add	r3, sp, #60	; 0x3c
   27b90:	e3a02006 	mov	r2, #6
   27b94:	e28d100c 	add	r1, sp, #12
   27b98:	e1a00005 	mov	r0, r5
   27b9c:	e58dc00c 	str	ip, [sp, #12]
   27ba0:	ebffff23 	bl	27834 <USBBulkOnlyMassStorageDeviceCommand>
   27ba4:	e3500024 	cmp	r0, #36	; 0x24
   27ba8:	1a000065 	bne	27d44 <USBBulkOnlyMassStorageDeviceConfigure+0x248>
   27bac:	e5dd303c 	ldrb	r3, [sp, #60]	; 0x3c
   27bb0:	e213301f 	ands	r3, r3, #31
   27bb4:	01a04003 	moveq	r4, r3
   27bb8:	03a06063 	moveq	r6, #99	; 0x63
   27bbc:	03a08003 	moveq	r8, #3
   27bc0:	0a000010 	beq	27c08 <USBBulkOnlyMassStorageDeviceConfigure+0x10c>
   27bc4:	ea00007c 	b	27dbc <USBBulkOnlyMassStorageDeviceConfigure+0x2c0>
   27bc8:	e3a0c012 	mov	ip, #18
   27bcc:	e3a07001 	mov	r7, #1
   27bd0:	e58dc000 	str	ip, [sp]
   27bd4:	e58d7004 	str	r7, [sp, #4]
   27bd8:	e3a02006 	mov	r2, #6
   27bdc:	e28d101c 	add	r1, sp, #28
   27be0:	e1a00005 	mov	r0, r5
   27be4:	e58d801c 	str	r8, [sp, #28]
   27be8:	e1cdc2b0 	strh	ip, [sp, #32]
   27bec:	ebffff10 	bl	27834 <USBBulkOnlyMassStorageDeviceCommand>
   27bf0:	e3500000 	cmp	r0, #0
   27bf4:	ba00006a 	blt	27da4 <USBBulkOnlyMassStorageDeviceConfigure+0x2a8>
   27bf8:	e3a00064 	mov	r0, #100	; 0x64
   27bfc:	ebffbee9 	bl	177a8 <MsDelay>
   27c00:	e2566001 	subs	r6, r6, #1
   27c04:	0a000072 	beq	27dd4 <USBBulkOnlyMassStorageDeviceConfigure+0x2d8>
   27c08:	e3a03000 	mov	r3, #0
   27c0c:	e58d4004 	str	r4, [sp, #4]
   27c10:	e58d4000 	str	r4, [sp]
   27c14:	e3a02006 	mov	r2, #6
   27c18:	e28d1014 	add	r1, sp, #20
   27c1c:	e1a00005 	mov	r0, r5
   27c20:	e58d4014 	str	r4, [sp, #20]
   27c24:	e1cd41b8 	strh	r4, [sp, #24]
   27c28:	ebffff01 	bl	27834 <USBBulkOnlyMassStorageDeviceCommand>
   27c2c:	e3500000 	cmp	r0, #0
   27c30:	e28d3028 	add	r3, sp, #40	; 0x28
   27c34:	baffffe3 	blt	27bc8 <USBBulkOnlyMassStorageDeviceConfigure+0xcc>
   27c38:	e3a02008 	mov	r2, #8
   27c3c:	e3a06001 	mov	r6, #1
   27c40:	e3a0c025 	mov	ip, #37	; 0x25
   27c44:	e88d0044 	stm	sp, {r2, r6}
   27c48:	e28d3014 	add	r3, sp, #20
   27c4c:	e28d101c 	add	r1, sp, #28
   27c50:	e3a0200a 	mov	r2, #10
   27c54:	e1a00005 	mov	r0, r5
   27c58:	e58d4020 	str	r4, [sp, #32]
   27c5c:	e1cd42b4 	strh	r4, [sp, #36]	; 0x24
   27c60:	e58dc01c 	str	ip, [sp, #28]
   27c64:	ebfffef2 	bl	27834 <USBBulkOnlyMassStorageDeviceCommand>
   27c68:	e3500008 	cmp	r0, #8
   27c6c:	0a00005d 	beq	27de8 <USBBulkOnlyMassStorageDeviceConfigure+0x2ec>
   27c70:	e1a01006 	mov	r1, r6
   27c74:	e59f2240 	ldr	r2, [pc, #576]	; 27ebc <USBBulkOnlyMassStorageDeviceConfigure+0x3c0>
   27c78:	e59f0240 	ldr	r0, [pc, #576]	; 27ec0 <USBBulkOnlyMassStorageDeviceConfigure+0x3c4>
   27c7c:	ebff86cc 	bl	97b4 <LogWrite>
   27c80:	e3a06000 	mov	r6, #0
   27c84:	ea000015 	b	27ce0 <USBBulkOnlyMassStorageDeviceConfigure+0x1e4>
   27c88:	e1d430d2 	ldrsb	r3, [r4, #2]
   27c8c:	e3530000 	cmp	r3, #0
   27c90:	ba000015 	blt	27cec <USBBulkOnlyMassStorageDeviceConfigure+0x1f0>
   27c94:	e5953014 	ldr	r3, [r5, #20]
   27c98:	e3530000 	cmp	r3, #0
   27c9c:	1a000021 	bne	27d28 <USBBulkOnlyMassStorageDeviceConfigure+0x22c>
   27ca0:	e3a00018 	mov	r0, #24
   27ca4:	ebffbeb6 	bl	17784 <malloc>
   27ca8:	e3500000 	cmp	r0, #0
   27cac:	e1a06000 	mov	r6, r0
   27cb0:	e5850014 	str	r0, [r5, #20]
   27cb4:	0a000034 	beq	27d8c <USBBulkOnlyMassStorageDeviceConfigure+0x290>
   27cb8:	e1a00005 	mov	r0, r5
   27cbc:	ebfff28a 	bl	246ec <USBFunctionGetDevice>
   27cc0:	e1a02004 	mov	r2, r4
   27cc4:	e1a01000 	mov	r1, r0
   27cc8:	e1a00006 	mov	r0, r6
   27ccc:	ebffead7 	bl	22830 <USBEndpoint2>
   27cd0:	eaffff99 	b	27b3c <USBBulkOnlyMassStorageDeviceConfigure+0x40>
   27cd4:	e59f11e4 	ldr	r1, [pc, #484]	; 27ec0 <USBBulkOnlyMassStorageDeviceConfigure+0x3c4>
   27cd8:	ebfff318 	bl	24940 <USBFunctionConfigurationError>
   27cdc:	e3a06000 	mov	r6, #0
   27ce0:	e1a00006 	mov	r0, r6
   27ce4:	e28dd064 	add	sp, sp, #100	; 0x64
   27ce8:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
   27cec:	e5953010 	ldr	r3, [r5, #16]
   27cf0:	e3530000 	cmp	r3, #0
   27cf4:	1a00000b 	bne	27d28 <USBBulkOnlyMassStorageDeviceConfigure+0x22c>
   27cf8:	e3a00018 	mov	r0, #24
   27cfc:	ebffbea0 	bl	17784 <malloc>
   27d00:	e3500000 	cmp	r0, #0
   27d04:	e1a06000 	mov	r6, r0
   27d08:	e5850010 	str	r0, [r5, #16]
   27d0c:	1affffe9 	bne	27cb8 <USBBulkOnlyMassStorageDeviceConfigure+0x1bc>
   27d10:	e3a02f41 	mov	r2, #260	; 0x104
   27d14:	e1a01007 	mov	r1, r7
   27d18:	e1a00009 	mov	r0, r9
   27d1c:	ebffbebf 	bl	17820 <uspi_assertion_failed>
   27d20:	e5956010 	ldr	r6, [r5, #16]
   27d24:	eaffffe3 	b	27cb8 <USBBulkOnlyMassStorageDeviceConfigure+0x1bc>
   27d28:	e3a06000 	mov	r6, #0
   27d2c:	e1a00005 	mov	r0, r5
   27d30:	e59f1188 	ldr	r1, [pc, #392]	; 27ec0 <USBBulkOnlyMassStorageDeviceConfigure+0x3c4>
   27d34:	ebfff301 	bl	24940 <USBFunctionConfigurationError>
   27d38:	e1a00006 	mov	r0, r6
   27d3c:	e28dd064 	add	sp, sp, #100	; 0x64
   27d40:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
   27d44:	e1a01006 	mov	r1, r6
   27d48:	e59f2174 	ldr	r2, [pc, #372]	; 27ec4 <USBBulkOnlyMassStorageDeviceConfigure+0x3c8>
   27d4c:	e59f016c 	ldr	r0, [pc, #364]	; 27ec0 <USBBulkOnlyMassStorageDeviceConfigure+0x3c4>
   27d50:	e1a06004 	mov	r6, r4
   27d54:	ebff8696 	bl	97b4 <LogWrite>
   27d58:	eaffffe0 	b	27ce0 <USBBulkOnlyMassStorageDeviceConfigure+0x1e4>
   27d5c:	e3a020ec 	mov	r2, #236	; 0xec
   27d60:	e59f1148 	ldr	r1, [pc, #328]	; 27eb0 <USBBulkOnlyMassStorageDeviceConfigure+0x3b4>
   27d64:	e59f015c 	ldr	r0, [pc, #348]	; 27ec8 <USBBulkOnlyMassStorageDeviceConfigure+0x3cc>
   27d68:	ebffbeac 	bl	17820 <uspi_assertion_failed>
   27d6c:	eaffff66 	b	27b0c <USBBulkOnlyMassStorageDeviceConfigure+0x10>
   27d70:	e59f2154 	ldr	r2, [pc, #340]	; 27ecc <USBBulkOnlyMassStorageDeviceConfigure+0x3d0>
   27d74:	e3a01001 	mov	r1, #1
   27d78:	e59f0140 	ldr	r0, [pc, #320]	; 27ec0 <USBBulkOnlyMassStorageDeviceConfigure+0x3c4>
   27d7c:	ebff868c 	bl	97b4 <LogWrite>
   27d80:	e1a00006 	mov	r0, r6
   27d84:	e28dd064 	add	sp, sp, #100	; 0x64
   27d88:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
   27d8c:	e59f213c 	ldr	r2, [pc, #316]	; 27ed0 <USBBulkOnlyMassStorageDeviceConfigure+0x3d4>
   27d90:	e1a01007 	mov	r1, r7
   27d94:	e1a00008 	mov	r0, r8
   27d98:	ebffbea0 	bl	17820 <uspi_assertion_failed>
   27d9c:	e5956014 	ldr	r6, [r5, #20]
   27da0:	eaffffc4 	b	27cb8 <USBBulkOnlyMassStorageDeviceConfigure+0x1bc>
   27da4:	e1a01007 	mov	r1, r7
   27da8:	e59f2124 	ldr	r2, [pc, #292]	; 27ed4 <USBBulkOnlyMassStorageDeviceConfigure+0x3d8>
   27dac:	e59f010c 	ldr	r0, [pc, #268]	; 27ec0 <USBBulkOnlyMassStorageDeviceConfigure+0x3c4>
   27db0:	ebff867f 	bl	97b4 <LogWrite>
   27db4:	e3a06000 	mov	r6, #0
   27db8:	eaffffc8 	b	27ce0 <USBBulkOnlyMassStorageDeviceConfigure+0x1e4>
   27dbc:	e1a01006 	mov	r1, r6
   27dc0:	e59f2110 	ldr	r2, [pc, #272]	; 27ed8 <USBBulkOnlyMassStorageDeviceConfigure+0x3dc>
   27dc4:	e59f00f4 	ldr	r0, [pc, #244]	; 27ec0 <USBBulkOnlyMassStorageDeviceConfigure+0x3c4>
   27dc8:	e1a06004 	mov	r6, r4
   27dcc:	ebff8678 	bl	97b4 <LogWrite>
   27dd0:	eaffffc2 	b	27ce0 <USBBulkOnlyMassStorageDeviceConfigure+0x1e4>
   27dd4:	e1a01007 	mov	r1, r7
   27dd8:	e59f20fc 	ldr	r2, [pc, #252]	; 27edc <USBBulkOnlyMassStorageDeviceConfigure+0x3e0>
   27ddc:	e59f00dc 	ldr	r0, [pc, #220]	; 27ec0 <USBBulkOnlyMassStorageDeviceConfigure+0x3c4>
   27de0:	ebff8673 	bl	97b4 <LogWrite>
   27de4:	eaffffbd 	b	27ce0 <USBBulkOnlyMassStorageDeviceConfigure+0x1e4>
   27de8:	e59d0018 	ldr	r0, [sp, #24]
   27dec:	ebfffe39 	bl	276d8 <uspi_le2be32>
   27df0:	e3500c02 	cmp	r0, #512	; 0x200
   27df4:	e1a03000 	mov	r3, r0
   27df8:	0a000005 	beq	27e14 <USBBulkOnlyMassStorageDeviceConfigure+0x318>
   27dfc:	e1a01006 	mov	r1, r6
   27e00:	e59f20d8 	ldr	r2, [pc, #216]	; 27ee0 <USBBulkOnlyMassStorageDeviceConfigure+0x3e4>
   27e04:	e59f00b4 	ldr	r0, [pc, #180]	; 27ec0 <USBBulkOnlyMassStorageDeviceConfigure+0x3c4>
   27e08:	ebff8669 	bl	97b4 <LogWrite>
   27e0c:	e3a06000 	mov	r6, #0
   27e10:	eaffffb2 	b	27ce0 <USBBulkOnlyMassStorageDeviceConfigure+0x1e4>
   27e14:	e59d0014 	ldr	r0, [sp, #20]
   27e18:	ebfffe2e 	bl	276d8 <uspi_le2be32>
   27e1c:	e3700001 	cmn	r0, #1
   27e20:	e585001c 	str	r0, [r5, #28]
   27e24:	0a00001b 	beq	27e98 <USBBulkOnlyMassStorageDeviceConfigure+0x39c>
   27e28:	e2803001 	add	r3, r0, #1
   27e2c:	e585301c 	str	r3, [r5, #28]
   27e30:	e59f20ac 	ldr	r2, [pc, #172]	; 27ee4 <USBBulkOnlyMassStorageDeviceConfigure+0x3e8>
   27e34:	e1a035a3 	lsr	r3, r3, #11
   27e38:	e3a01004 	mov	r1, #4
   27e3c:	e59f007c 	ldr	r0, [pc, #124]	; 27ec0 <USBBulkOnlyMassStorageDeviceConfigure+0x3c4>
   27e40:	ebff865b 	bl	97b4 <LogWrite>
   27e44:	e28d0028 	add	r0, sp, #40	; 0x28
   27e48:	ebfffa9a 	bl	268b8 <String>
   27e4c:	e59f3094 	ldr	r3, [pc, #148]	; 27ee8 <USBBulkOnlyMassStorageDeviceConfigure+0x3ec>
   27e50:	e59f1094 	ldr	r1, [pc, #148]	; 27eec <USBBulkOnlyMassStorageDeviceConfigure+0x3f0>
   27e54:	e5932000 	ldr	r2, [r3]
   27e58:	e28d0028 	add	r0, sp, #40	; 0x28
   27e5c:	e282c001 	add	ip, r2, #1
   27e60:	e583c000 	str	ip, [r3]
   27e64:	ebfffd54 	bl	273bc <StringFormat>
   27e68:	ebfff044 	bl	23f80 <DeviceNameServiceGet>
   27e6c:	e1a04000 	mov	r4, r0
   27e70:	e28d0028 	add	r0, sp, #40	; 0x28
   27e74:	ebfffac2 	bl	26984 <StringGet>
   27e78:	e1a03006 	mov	r3, r6
   27e7c:	e1a01000 	mov	r1, r0
   27e80:	e1a02005 	mov	r2, r5
   27e84:	e1a00004 	mov	r0, r4
   27e88:	ebffefc0 	bl	23d90 <DeviceNameServiceAddDevice>
   27e8c:	e28d0028 	add	r0, sp, #40	; 0x28
   27e90:	ebfffaaa 	bl	26940 <_String>
   27e94:	eaffff91 	b	27ce0 <USBBulkOnlyMassStorageDeviceConfigure+0x1e4>
   27e98:	e1a01006 	mov	r1, r6
   27e9c:	e59f204c 	ldr	r2, [pc, #76]	; 27ef0 <USBBulkOnlyMassStorageDeviceConfigure+0x3f4>
   27ea0:	e59f0018 	ldr	r0, [pc, #24]	; 27ec0 <USBBulkOnlyMassStorageDeviceConfigure+0x3c4>
   27ea4:	ebff8642 	bl	97b4 <LogWrite>
   27ea8:	e3a06000 	mov	r6, #0
   27eac:	eaffff8b 	b	27ce0 <USBBulkOnlyMassStorageDeviceConfigure+0x1e4>
   27eb0:	00031c3c 	.word	0x00031c3c
   27eb4:	00031d40 	.word	0x00031d40
   27eb8:	00031d24 	.word	0x00031d24
   27ebc:	00031dac 	.word	0x00031dac
   27ec0:	00031c34 	.word	0x00031c34
   27ec4:	00031d5c 	.word	0x00031d5c
   27ec8:	000306f0 	.word	0x000306f0
   27ecc:	0003171c 	.word	0x0003171c
   27ed0:	00000111 	.word	0x00000111
   27ed4:	00031d94 	.word	0x00031d94
   27ed8:	00031d74 	.word	0x00031d74
   27edc:	00031e14 	.word	0x00031e14
   27ee0:	00031dc4 	.word	0x00031dc4
   27ee4:	00031dfc 	.word	0x00031dfc
   27ee8:	00042354 	.word	0x00042354
   27eec:	00030600 	.word	0x00030600
   27ef0:	00031de0 	.word	0x00031de0

00027ef4 <USBBulkOnlyMassStorageDeviceTryRead>:
   27ef4:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   27ef8:	e2505000 	subs	r5, r0, #0
   27efc:	e24dd01c 	sub	sp, sp, #28
   27f00:	e1a08001 	mov	r8, r1
   27f04:	e1a04002 	mov	r4, r2
   27f08:	0a000033 	beq	27fdc <USBBulkOnlyMassStorageDeviceTryRead+0xe8>
   27f0c:	e3580000 	cmp	r8, #0
   27f10:	0a000037 	beq	27ff4 <USBBulkOnlyMassStorageDeviceTryRead+0x100>
   27f14:	e1c562d0 	ldrd	r6, [r5, #32]
   27f18:	e3a03000 	mov	r3, #0
   27f1c:	e59f2104 	ldr	r2, [pc, #260]	; 28028 <USBBulkOnlyMassStorageDeviceTryRead+0x134>
   27f20:	e003b007 	and	fp, r3, r7
   27f24:	e002a006 	and	sl, r2, r6
   27f28:	e19a300b 	orrs	r3, sl, fp
   27f2c:	e3e00000 	mvn	r0, #0
   27f30:	13a03001 	movne	r3, #1
   27f34:	03a03000 	moveq	r3, #0
   27f38:	e59f10e8 	ldr	r1, [pc, #232]	; 28028 <USBBulkOnlyMassStorageDeviceTryRead+0x134>
   27f3c:	e1570001 	cmp	r7, r1
   27f40:	01560000 	cmpeq	r6, r0
   27f44:	83833001 	orrhi	r3, r3, #1
   27f48:	e3530000 	cmp	r3, #0
   27f4c:	1a00002d 	bne	28008 <USBBulkOnlyMassStorageDeviceTryRead+0x114>
   27f50:	e1a09b84 	lsl	r9, r4, #23
   27f54:	e1a09ba9 	lsr	r9, r9, #23
   27f58:	e1a004a6 	lsr	r0, r6, #9
   27f5c:	e3590000 	cmp	r9, #0
   27f60:	e1800b87 	orr	r0, r0, r7, lsl #23
   27f64:	1a000027 	bne	28008 <USBBulkOnlyMassStorageDeviceTryRead+0x114>
   27f68:	e3a03028 	mov	r3, #40	; 0x28
   27f6c:	e1cd30bc 	strh	r3, [sp, #12]
   27f70:	ebfffdd8 	bl	276d8 <uspi_le2be32>
   27f74:	e1a03000 	mov	r3, r0
   27f78:	e1a004a4 	lsr	r0, r4, #9
   27f7c:	e1a02823 	lsr	r2, r3, #16
   27f80:	e6ff0070 	uxth	r0, r0
   27f84:	e1cd30be 	strh	r3, [sp, #14]
   27f88:	e1cd21b0 	strh	r2, [sp, #16]
   27f8c:	e5cd9012 	strb	r9, [sp, #18]
   27f90:	ebfffdcd 	bl	276cc <uspi_le2be16>
   27f94:	e1a02000 	mov	r2, r0
   27f98:	e3a06001 	mov	r6, #1
   27f9c:	e1a01422 	lsr	r1, r2, #8
   27fa0:	e5cd2013 	strb	r2, [sp, #19]
   27fa4:	e5cd1014 	strb	r1, [sp, #20]
   27fa8:	e58d4000 	str	r4, [sp]
   27fac:	e1a03008 	mov	r3, r8
   27fb0:	e1a00005 	mov	r0, r5
   27fb4:	e58d6004 	str	r6, [sp, #4]
   27fb8:	e3a0200a 	mov	r2, #10
   27fbc:	e28d100c 	add	r1, sp, #12
   27fc0:	e5cd9015 	strb	r9, [sp, #21]
   27fc4:	ebfffe1a 	bl	27834 <USBBulkOnlyMassStorageDeviceCommand>
   27fc8:	e1500004 	cmp	r0, r4
   27fcc:	1a00000f 	bne	28010 <USBBulkOnlyMassStorageDeviceTryRead+0x11c>
   27fd0:	e1a00004 	mov	r0, r4
   27fd4:	e28dd01c 	add	sp, sp, #28
   27fd8:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27fdc:	e59f2048 	ldr	r2, [pc, #72]	; 2802c <USBBulkOnlyMassStorageDeviceTryRead+0x138>
   27fe0:	e59f1048 	ldr	r1, [pc, #72]	; 28030 <USBBulkOnlyMassStorageDeviceTryRead+0x13c>
   27fe4:	e59f0048 	ldr	r0, [pc, #72]	; 28034 <USBBulkOnlyMassStorageDeviceTryRead+0x140>
   27fe8:	ebffbe0c 	bl	17820 <uspi_assertion_failed>
   27fec:	e3580000 	cmp	r8, #0
   27ff0:	1affffc7 	bne	27f14 <USBBulkOnlyMassStorageDeviceTryRead+0x20>
   27ff4:	e59f203c 	ldr	r2, [pc, #60]	; 28038 <USBBulkOnlyMassStorageDeviceTryRead+0x144>
   27ff8:	e59f1030 	ldr	r1, [pc, #48]	; 28030 <USBBulkOnlyMassStorageDeviceTryRead+0x13c>
   27ffc:	e59f0038 	ldr	r0, [pc, #56]	; 2803c <USBBulkOnlyMassStorageDeviceTryRead+0x148>
   28000:	ebffbe06 	bl	17820 <uspi_assertion_failed>
   28004:	eaffffc2 	b	27f14 <USBBulkOnlyMassStorageDeviceTryRead+0x20>
   28008:	e3e04000 	mvn	r4, #0
   2800c:	eaffffef 	b	27fd0 <USBBulkOnlyMassStorageDeviceTryRead+0xdc>
   28010:	e1a01006 	mov	r1, r6
   28014:	e59f2024 	ldr	r2, [pc, #36]	; 28040 <USBBulkOnlyMassStorageDeviceTryRead+0x14c>
   28018:	e59f0024 	ldr	r0, [pc, #36]	; 28044 <USBBulkOnlyMassStorageDeviceTryRead+0x150>
   2801c:	ebff85e4 	bl	97b4 <LogWrite>
   28020:	e3e04000 	mvn	r4, #0
   28024:	eaffffe9 	b	27fd0 <USBBulkOnlyMassStorageDeviceTryRead+0xdc>
   28028:	000001ff 	.word	0x000001ff
   2802c:	000001e3 	.word	0x000001e3
   28030:	00031c3c 	.word	0x00031c3c
   28034:	000306f0 	.word	0x000306f0
   28038:	000001e5 	.word	0x000001e5
   2803c:	00031c90 	.word	0x00031c90
   28040:	00031e28 	.word	0x00031e28
   28044:	00031c34 	.word	0x00031c34

00028048 <USBBulkOnlyMassStorageDeviceTryWrite>:
   28048:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2804c:	e2505000 	subs	r5, r0, #0
   28050:	e24dd01c 	sub	sp, sp, #28
   28054:	e1a08001 	mov	r8, r1
   28058:	e1a04002 	mov	r4, r2
   2805c:	0a000032 	beq	2812c <USBBulkOnlyMassStorageDeviceTryWrite+0xe4>
   28060:	e3580000 	cmp	r8, #0
   28064:	0a000036 	beq	28144 <USBBulkOnlyMassStorageDeviceTryWrite+0xfc>
   28068:	e1c562d0 	ldrd	r6, [r5, #32]
   2806c:	e3a03000 	mov	r3, #0
   28070:	e59f2100 	ldr	r2, [pc, #256]	; 28178 <USBBulkOnlyMassStorageDeviceTryWrite+0x130>
   28074:	e003b007 	and	fp, r3, r7
   28078:	e002a006 	and	sl, r2, r6
   2807c:	e19a300b 	orrs	r3, sl, fp
   28080:	e3e00000 	mvn	r0, #0
   28084:	13a03001 	movne	r3, #1
   28088:	03a03000 	moveq	r3, #0
   2808c:	e59f10e4 	ldr	r1, [pc, #228]	; 28178 <USBBulkOnlyMassStorageDeviceTryWrite+0x130>
   28090:	e1570001 	cmp	r7, r1
   28094:	01560000 	cmpeq	r6, r0
   28098:	83833001 	orrhi	r3, r3, #1
   2809c:	e3530000 	cmp	r3, #0
   280a0:	1a00002c 	bne	28158 <USBBulkOnlyMassStorageDeviceTryWrite+0x110>
   280a4:	e1a09b84 	lsl	r9, r4, #23
   280a8:	e1a09ba9 	lsr	r9, r9, #23
   280ac:	e1a004a6 	lsr	r0, r6, #9
   280b0:	e3590000 	cmp	r9, #0
   280b4:	e1800b87 	orr	r0, r0, r7, lsl #23
   280b8:	1a000026 	bne	28158 <USBBulkOnlyMassStorageDeviceTryWrite+0x110>
   280bc:	e59f30b8 	ldr	r3, [pc, #184]	; 2817c <USBBulkOnlyMassStorageDeviceTryWrite+0x134>
   280c0:	e1cd30bc 	strh	r3, [sp, #12]
   280c4:	ebfffd83 	bl	276d8 <uspi_le2be32>
   280c8:	e1a03000 	mov	r3, r0
   280cc:	e1a004a4 	lsr	r0, r4, #9
   280d0:	e1a02823 	lsr	r2, r3, #16
   280d4:	e6ff0070 	uxth	r0, r0
   280d8:	e1cd30be 	strh	r3, [sp, #14]
   280dc:	e1cd21b0 	strh	r2, [sp, #16]
   280e0:	e5cd9012 	strb	r9, [sp, #18]
   280e4:	ebfffd78 	bl	276cc <uspi_le2be16>
   280e8:	e1a01000 	mov	r1, r0
   280ec:	e1a0c420 	lsr	ip, r0, #8
   280f0:	e5cd1013 	strb	r1, [sp, #19]
   280f4:	e58d9004 	str	r9, [sp, #4]
   280f8:	e58d4000 	str	r4, [sp]
   280fc:	e1a03008 	mov	r3, r8
   28100:	e1a00005 	mov	r0, r5
   28104:	e3a0200a 	mov	r2, #10
   28108:	e28d100c 	add	r1, sp, #12
   2810c:	e5cdc014 	strb	ip, [sp, #20]
   28110:	e5cd9015 	strb	r9, [sp, #21]
   28114:	ebfffdc6 	bl	27834 <USBBulkOnlyMassStorageDeviceCommand>
   28118:	e3500000 	cmp	r0, #0
   2811c:	a1a00004 	movge	r0, r4
   28120:	ba00000e 	blt	28160 <USBBulkOnlyMassStorageDeviceTryWrite+0x118>
   28124:	e28dd01c 	add	sp, sp, #28
   28128:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2812c:	e3a02f83 	mov	r2, #524	; 0x20c
   28130:	e59f1048 	ldr	r1, [pc, #72]	; 28180 <USBBulkOnlyMassStorageDeviceTryWrite+0x138>
   28134:	e59f0048 	ldr	r0, [pc, #72]	; 28184 <USBBulkOnlyMassStorageDeviceTryWrite+0x13c>
   28138:	ebffbdb8 	bl	17820 <uspi_assertion_failed>
   2813c:	e3580000 	cmp	r8, #0
   28140:	1affffc8 	bne	28068 <USBBulkOnlyMassStorageDeviceTryWrite+0x20>
   28144:	e59f203c 	ldr	r2, [pc, #60]	; 28188 <USBBulkOnlyMassStorageDeviceTryWrite+0x140>
   28148:	e59f1030 	ldr	r1, [pc, #48]	; 28180 <USBBulkOnlyMassStorageDeviceTryWrite+0x138>
   2814c:	e59f0038 	ldr	r0, [pc, #56]	; 2818c <USBBulkOnlyMassStorageDeviceTryWrite+0x144>
   28150:	ebffbdb2 	bl	17820 <uspi_assertion_failed>
   28154:	eaffffc3 	b	28068 <USBBulkOnlyMassStorageDeviceTryWrite+0x20>
   28158:	e3e00000 	mvn	r0, #0
   2815c:	eafffff0 	b	28124 <USBBulkOnlyMassStorageDeviceTryWrite+0xdc>
   28160:	e59f0028 	ldr	r0, [pc, #40]	; 28190 <USBBulkOnlyMassStorageDeviceTryWrite+0x148>
   28164:	e59f2028 	ldr	r2, [pc, #40]	; 28194 <USBBulkOnlyMassStorageDeviceTryWrite+0x14c>
   28168:	e3a01001 	mov	r1, #1
   2816c:	ebff8590 	bl	97b4 <LogWrite>
   28170:	e3e00000 	mvn	r0, #0
   28174:	eaffffea 	b	28124 <USBBulkOnlyMassStorageDeviceTryWrite+0xdc>
   28178:	000001ff 	.word	0x000001ff
   2817c:	0000082a 	.word	0x0000082a
   28180:	00031c3c 	.word	0x00031c3c
   28184:	000306f0 	.word	0x000306f0
   28188:	0000020e 	.word	0x0000020e
   2818c:	00031c90 	.word	0x00031c90
   28190:	00031c34 	.word	0x00031c34
   28194:	00031e38 	.word	0x00031e38

00028198 <USBBulkOnlyMassStorageDeviceReset>:
   28198:	e92d40f0 	push	{r4, r5, r6, r7, lr}
   2819c:	e2505000 	subs	r5, r0, #0
   281a0:	e24dd014 	sub	sp, sp, #20
   281a4:	0a000032 	beq	28274 <USBBulkOnlyMassStorageDeviceReset+0xdc>
   281a8:	e1a00005 	mov	r0, r5
   281ac:	ebfff179 	bl	24798 <USBFunctionGetHost>
   281b0:	e2506000 	subs	r6, r0, #0
   281b4:	0a000036 	beq	28294 <USBBulkOnlyMassStorageDeviceReset+0xfc>
   281b8:	e1a00005 	mov	r0, r5
   281bc:	ebfff15e 	bl	2473c <USBFunctionGetEndpoint0>
   281c0:	e3a04000 	mov	r4, #0
   281c4:	e1a01000 	mov	r1, r0
   281c8:	e58d400c 	str	r4, [sp, #12]
   281cc:	e58d4008 	str	r4, [sp, #8]
   281d0:	e58d4004 	str	r4, [sp, #4]
   281d4:	e58d4000 	str	r4, [sp]
   281d8:	e3a030ff 	mov	r3, #255	; 0xff
   281dc:	e3a02021 	mov	r2, #33	; 0x21
   281e0:	e1a00006 	mov	r0, r6
   281e4:	ebffda0f 	bl	1ea28 <DWHCIDeviceControlMessage>
   281e8:	e1500004 	cmp	r0, r4
   281ec:	ba00002d 	blt	282a8 <USBBulkOnlyMassStorageDeviceReset+0x110>
   281f0:	e1a00005 	mov	r0, r5
   281f4:	ebfff150 	bl	2473c <USBFunctionGetEndpoint0>
   281f8:	e3a07001 	mov	r7, #1
   281fc:	e1a01000 	mov	r1, r0
   28200:	e58d400c 	str	r4, [sp, #12]
   28204:	e58d4008 	str	r4, [sp, #8]
   28208:	e88d0090 	stm	sp, {r4, r7}
   2820c:	e1a03007 	mov	r3, r7
   28210:	e3a02002 	mov	r2, #2
   28214:	e1a00006 	mov	r0, r6
   28218:	ebffda02 	bl	1ea28 <DWHCIDeviceControlMessage>
   2821c:	e3500000 	cmp	r0, #0
   28220:	ba000026 	blt	282c0 <USBBulkOnlyMassStorageDeviceReset+0x128>
   28224:	e1a00005 	mov	r0, r5
   28228:	ebfff143 	bl	2473c <USBFunctionGetEndpoint0>
   2822c:	e3a02002 	mov	r2, #2
   28230:	e1a01000 	mov	r1, r0
   28234:	e58d400c 	str	r4, [sp, #12]
   28238:	e58d4008 	str	r4, [sp, #8]
   2823c:	e58d4000 	str	r4, [sp]
   28240:	e1a03007 	mov	r3, r7
   28244:	e1a00006 	mov	r0, r6
   28248:	e58d2004 	str	r2, [sp, #4]
   2824c:	ebffd9f5 	bl	1ea28 <DWHCIDeviceControlMessage>
   28250:	e3500000 	cmp	r0, #0
   28254:	ba00001f 	blt	282d8 <USBBulkOnlyMassStorageDeviceReset+0x140>
   28258:	e5950010 	ldr	r0, [r5, #16]
   2825c:	ebffeada 	bl	22dcc <USBEndpointResetPID>
   28260:	e5950014 	ldr	r0, [r5, #20]
   28264:	ebffead8 	bl	22dcc <USBEndpointResetPID>
   28268:	e1a00004 	mov	r0, r4
   2826c:	e28dd014 	add	sp, sp, #20
   28270:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
   28274:	e3a02fa2 	mov	r2, #648	; 0x288
   28278:	e59f1070 	ldr	r1, [pc, #112]	; 282f0 <USBBulkOnlyMassStorageDeviceReset+0x158>
   2827c:	e59f0070 	ldr	r0, [pc, #112]	; 282f4 <USBBulkOnlyMassStorageDeviceReset+0x15c>
   28280:	ebffbd66 	bl	17820 <uspi_assertion_failed>
   28284:	e1a00005 	mov	r0, r5
   28288:	ebfff142 	bl	24798 <USBFunctionGetHost>
   2828c:	e2506000 	subs	r6, r0, #0
   28290:	1affffc8 	bne	281b8 <USBBulkOnlyMassStorageDeviceReset+0x20>
   28294:	e59f205c 	ldr	r2, [pc, #92]	; 282f8 <USBBulkOnlyMassStorageDeviceReset+0x160>
   28298:	e59f1050 	ldr	r1, [pc, #80]	; 282f0 <USBBulkOnlyMassStorageDeviceReset+0x158>
   2829c:	e59f0058 	ldr	r0, [pc, #88]	; 282fc <USBBulkOnlyMassStorageDeviceReset+0x164>
   282a0:	ebffbd5e 	bl	17820 <uspi_assertion_failed>
   282a4:	eaffffc3 	b	281b8 <USBBulkOnlyMassStorageDeviceReset+0x20>
   282a8:	e59f0050 	ldr	r0, [pc, #80]	; 28300 <USBBulkOnlyMassStorageDeviceReset+0x168>
   282ac:	e59f2050 	ldr	r2, [pc, #80]	; 28304 <USBBulkOnlyMassStorageDeviceReset+0x16c>
   282b0:	e3a01004 	mov	r1, #4
   282b4:	ebff853e 	bl	97b4 <LogWrite>
   282b8:	e3e00000 	mvn	r0, #0
   282bc:	eaffffea 	b	2826c <USBBulkOnlyMassStorageDeviceReset+0xd4>
   282c0:	e59f0038 	ldr	r0, [pc, #56]	; 28300 <USBBulkOnlyMassStorageDeviceReset+0x168>
   282c4:	e59f203c 	ldr	r2, [pc, #60]	; 28308 <USBBulkOnlyMassStorageDeviceReset+0x170>
   282c8:	e3a01004 	mov	r1, #4
   282cc:	ebff8538 	bl	97b4 <LogWrite>
   282d0:	e3e00000 	mvn	r0, #0
   282d4:	eaffffe4 	b	2826c <USBBulkOnlyMassStorageDeviceReset+0xd4>
   282d8:	e59f0020 	ldr	r0, [pc, #32]	; 28300 <USBBulkOnlyMassStorageDeviceReset+0x168>
   282dc:	e59f2028 	ldr	r2, [pc, #40]	; 2830c <USBBulkOnlyMassStorageDeviceReset+0x174>
   282e0:	e3a01004 	mov	r1, #4
   282e4:	ebff8532 	bl	97b4 <LogWrite>
   282e8:	e3e00000 	mvn	r0, #0
   282ec:	eaffffde 	b	2826c <USBBulkOnlyMassStorageDeviceReset+0xd4>
   282f0:	00031c3c 	.word	0x00031c3c
   282f4:	000306f0 	.word	0x000306f0
   282f8:	0000028b 	.word	0x0000028b
   282fc:	00031514 	.word	0x00031514
   28300:	00031c34 	.word	0x00031c34
   28304:	00031e48 	.word	0x00031e48
   28308:	00031e5c 	.word	0x00031e5c
   2830c:	00031e7c 	.word	0x00031e7c

00028310 <USBBulkOnlyMassStorageDeviceRead>:
   28310:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   28314:	e2507000 	subs	r7, r0, #0
   28318:	e1a08001 	mov	r8, r1
   2831c:	e1a05002 	mov	r5, r2
   28320:	0a000013 	beq	28374 <USBBulkOnlyMassStorageDeviceRead+0x64>
   28324:	e1a09005 	mov	r9, r5
   28328:	e3a04004 	mov	r4, #4
   2832c:	e1a02005 	mov	r2, r5
   28330:	e1a01008 	mov	r1, r8
   28334:	e1a00007 	mov	r0, r7
   28338:	ebfffeed 	bl	27ef4 <USBBulkOnlyMassStorageDeviceTryRead>
   2833c:	e1550000 	cmp	r5, r0
   28340:	e1a06000 	mov	r6, r0
   28344:	1a000001 	bne	28350 <USBBulkOnlyMassStorageDeviceRead+0x40>
   28348:	e1a00009 	mov	r0, r9
   2834c:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   28350:	e1a00007 	mov	r0, r7
   28354:	ebffff8f 	bl	28198 <USBBulkOnlyMassStorageDeviceReset>
   28358:	e3500000 	cmp	r0, #0
   2835c:	1a000009 	bne	28388 <USBBulkOnlyMassStorageDeviceRead+0x78>
   28360:	e2544001 	subs	r4, r4, #1
   28364:	1afffff0 	bne	2832c <USBBulkOnlyMassStorageDeviceRead+0x1c>
   28368:	e1a09006 	mov	r9, r6
   2836c:	e1a00009 	mov	r0, r9
   28370:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   28374:	e59f2014 	ldr	r2, [pc, #20]	; 28390 <USBBulkOnlyMassStorageDeviceRead+0x80>
   28378:	e59f1014 	ldr	r1, [pc, #20]	; 28394 <USBBulkOnlyMassStorageDeviceRead+0x84>
   2837c:	e59f0014 	ldr	r0, [pc, #20]	; 28398 <USBBulkOnlyMassStorageDeviceRead+0x88>
   28380:	ebffbd26 	bl	17820 <uspi_assertion_failed>
   28384:	eaffffe6 	b	28324 <USBBulkOnlyMassStorageDeviceRead+0x14>
   28388:	e1a09000 	mov	r9, r0
   2838c:	eaffffed 	b	28348 <USBBulkOnlyMassStorageDeviceRead+0x38>
   28390:	0000019d 	.word	0x0000019d
   28394:	00031c3c 	.word	0x00031c3c
   28398:	000306f0 	.word	0x000306f0

0002839c <USBBulkOnlyMassStorageDeviceWrite>:
   2839c:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   283a0:	e2507000 	subs	r7, r0, #0
   283a4:	e1a08001 	mov	r8, r1
   283a8:	e1a05002 	mov	r5, r2
   283ac:	0a000013 	beq	28400 <USBBulkOnlyMassStorageDeviceWrite+0x64>
   283b0:	e1a09005 	mov	r9, r5
   283b4:	e3a04004 	mov	r4, #4
   283b8:	e1a02005 	mov	r2, r5
   283bc:	e1a01008 	mov	r1, r8
   283c0:	e1a00007 	mov	r0, r7
   283c4:	ebffff1f 	bl	28048 <USBBulkOnlyMassStorageDeviceTryWrite>
   283c8:	e1550000 	cmp	r5, r0
   283cc:	e1a06000 	mov	r6, r0
   283d0:	1a000001 	bne	283dc <USBBulkOnlyMassStorageDeviceWrite+0x40>
   283d4:	e1a00009 	mov	r0, r9
   283d8:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   283dc:	e1a00007 	mov	r0, r7
   283e0:	ebffff6c 	bl	28198 <USBBulkOnlyMassStorageDeviceReset>
   283e4:	e3500000 	cmp	r0, #0
   283e8:	1a000009 	bne	28414 <USBBulkOnlyMassStorageDeviceWrite+0x78>
   283ec:	e2544001 	subs	r4, r4, #1
   283f0:	1afffff0 	bne	283b8 <USBBulkOnlyMassStorageDeviceWrite+0x1c>
   283f4:	e1a09006 	mov	r9, r6
   283f8:	e1a00009 	mov	r0, r9
   283fc:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   28400:	e3a02f6e 	mov	r2, #440	; 0x1b8
   28404:	e59f1010 	ldr	r1, [pc, #16]	; 2841c <USBBulkOnlyMassStorageDeviceWrite+0x80>
   28408:	e59f0010 	ldr	r0, [pc, #16]	; 28420 <USBBulkOnlyMassStorageDeviceWrite+0x84>
   2840c:	ebffbd03 	bl	17820 <uspi_assertion_failed>
   28410:	eaffffe6 	b	283b0 <USBBulkOnlyMassStorageDeviceWrite+0x14>
   28414:	e1a09000 	mov	r9, r0
   28418:	eaffffed 	b	283d4 <USBBulkOnlyMassStorageDeviceWrite+0x38>
   2841c:	00031c3c 	.word	0x00031c3c
   28420:	000306f0 	.word	0x000306f0

00028424 <DWHCIFrameSchedulerNonPeriodicWaitForFrame>:
   28424:	e12fff1e 	bx	lr

00028428 <DWHCIFrameSchedulerNonPeriodicIsOddFrame>:
   28428:	e3a00000 	mov	r0, #0
   2842c:	e12fff1e 	bx	lr

00028430 <_DWHCIFrameSchedulerNonPeriodic>:
   28430:	e92d4010 	push	{r4, lr}
   28434:	e2504000 	subs	r4, r0, #0
   28438:	0a000002 	beq	28448 <_DWHCIFrameSchedulerNonPeriodic+0x18>
   2843c:	e3a03006 	mov	r3, #6
   28440:	e5843018 	str	r3, [r4, #24]
   28444:	e8bd8010 	pop	{r4, pc}
   28448:	e3a0203a 	mov	r2, #58	; 0x3a
   2844c:	e59f1008 	ldr	r1, [pc, #8]	; 2845c <_DWHCIFrameSchedulerNonPeriodic+0x2c>
   28450:	e59f0008 	ldr	r0, [pc, #8]	; 28460 <_DWHCIFrameSchedulerNonPeriodic+0x30>
   28454:	ebffbcf1 	bl	17820 <uspi_assertion_failed>
   28458:	eafffff7 	b	2843c <_DWHCIFrameSchedulerNonPeriodic+0xc>
   2845c:	00031e9c 	.word	0x00031e9c
   28460:	000306f0 	.word	0x000306f0

00028464 <DWHCIFrameSchedulerNonPeriodicStartSplit>:
   28464:	e92d4010 	push	{r4, lr}
   28468:	e2504000 	subs	r4, r0, #0
   2846c:	0a000002 	beq	2847c <DWHCIFrameSchedulerNonPeriodicStartSplit+0x18>
   28470:	e3a03000 	mov	r3, #0
   28474:	e5843018 	str	r3, [r4, #24]
   28478:	e8bd8010 	pop	{r4, pc}
   2847c:	e3a02042 	mov	r2, #66	; 0x42
   28480:	e59f1008 	ldr	r1, [pc, #8]	; 28490 <DWHCIFrameSchedulerNonPeriodicStartSplit+0x2c>
   28484:	e59f0008 	ldr	r0, [pc, #8]	; 28494 <DWHCIFrameSchedulerNonPeriodicStartSplit+0x30>
   28488:	ebffbce4 	bl	17820 <uspi_assertion_failed>
   2848c:	eafffff7 	b	28470 <DWHCIFrameSchedulerNonPeriodicStartSplit+0xc>
   28490:	00031e9c 	.word	0x00031e9c
   28494:	000306f0 	.word	0x000306f0

00028498 <DWHCIFrameSchedulerNonPeriodicCompleteSplit>:
   28498:	e92d4010 	push	{r4, lr}
   2849c:	e2504000 	subs	r4, r0, #0
   284a0:	0a00001a 	beq	28510 <DWHCIFrameSchedulerNonPeriodicCompleteSplit+0x78>
   284a4:	e5943018 	ldr	r3, [r4, #24]
   284a8:	e2433001 	sub	r3, r3, #1
   284ac:	e3530004 	cmp	r3, #4
   284b0:	979ff103 	ldrls	pc, [pc, r3, lsl #2]
   284b4:	ea00000f 	b	284f8 <DWHCIFrameSchedulerNonPeriodicCompleteSplit+0x60>
   284b8:	000284e4 	.word	0x000284e4
   284bc:	000284d4 	.word	0x000284d4
   284c0:	000284d4 	.word	0x000284d4
   284c4:	000284cc 	.word	0x000284cc
   284c8:	000284cc 	.word	0x000284cc
   284cc:	e3a00000 	mov	r0, #0
   284d0:	e8bd8010 	pop	{r4, pc}
   284d4:	e59f0048 	ldr	r0, [pc, #72]	; 28524 <DWHCIFrameSchedulerNonPeriodicCompleteSplit+0x8c>
   284d8:	ebffbcb6 	bl	177b8 <usDelay>
   284dc:	e3a00001 	mov	r0, #1
   284e0:	e8bd8010 	pop	{r4, pc}
   284e4:	e3a02002 	mov	r2, #2
   284e8:	e3a03003 	mov	r3, #3
   284ec:	e3a00001 	mov	r0, #1
   284f0:	e1c421f8 	strd	r2, [r4, #24]
   284f4:	e8bd8010 	pop	{r4, pc}
   284f8:	e3a02061 	mov	r2, #97	; 0x61
   284fc:	e59f1024 	ldr	r1, [pc, #36]	; 28528 <DWHCIFrameSchedulerNonPeriodicCompleteSplit+0x90>
   28500:	e59f0024 	ldr	r0, [pc, #36]	; 2852c <DWHCIFrameSchedulerNonPeriodicCompleteSplit+0x94>
   28504:	ebffbcc5 	bl	17820 <uspi_assertion_failed>
   28508:	e3a00000 	mov	r0, #0
   2850c:	e8bd8010 	pop	{r4, pc}
   28510:	e3a0204a 	mov	r2, #74	; 0x4a
   28514:	e59f100c 	ldr	r1, [pc, #12]	; 28528 <DWHCIFrameSchedulerNonPeriodicCompleteSplit+0x90>
   28518:	e59f0010 	ldr	r0, [pc, #16]	; 28530 <DWHCIFrameSchedulerNonPeriodicCompleteSplit+0x98>
   2851c:	ebffbcbf 	bl	17820 <uspi_assertion_failed>
   28520:	eaffffdf 	b	284a4 <DWHCIFrameSchedulerNonPeriodicCompleteSplit+0xc>
   28524:	00000271 	.word	0x00000271
   28528:	00031e9c 	.word	0x00031e9c
   2852c:	00030678 	.word	0x00030678
   28530:	000306f0 	.word	0x000306f0

00028534 <DWHCIFrameSchedulerNonPeriodicTransactionComplete>:
   28534:	e92d4070 	push	{r4, r5, r6, lr}
   28538:	e2504000 	subs	r4, r0, #0
   2853c:	e1a05001 	mov	r5, r1
   28540:	0a00002c 	beq	285f8 <DWHCIFrameSchedulerNonPeriodicTransactionComplete+0xc4>
   28544:	e5942018 	ldr	r2, [r4, #24]
   28548:	e3520000 	cmp	r2, #0
   2854c:	0a000013 	beq	285a0 <DWHCIFrameSchedulerNonPeriodicTransactionComplete+0x6c>
   28550:	e2422002 	sub	r2, r2, #2
   28554:	e3520001 	cmp	r2, #1
   28558:	9a000004 	bls	28570 <DWHCIFrameSchedulerNonPeriodicTransactionComplete+0x3c>
   2855c:	e8bd4070 	pop	{r4, r5, r6, lr}
   28560:	e3a02099 	mov	r2, #153	; 0x99
   28564:	e59f10d4 	ldr	r1, [pc, #212]	; 28640 <DWHCIFrameSchedulerNonPeriodicTransactionComplete+0x10c>
   28568:	e59f00d4 	ldr	r0, [pc, #212]	; 28644 <DWHCIFrameSchedulerNonPeriodicTransactionComplete+0x110>
   2856c:	eaffbcab 	b	17820 <uspi_assertion_failed>
   28570:	e3150001 	tst	r5, #1
   28574:	1a000012 	bne	285c4 <DWHCIFrameSchedulerNonPeriodicTransactionComplete+0x90>
   28578:	e3150060 	tst	r5, #96	; 0x60
   2857c:	0a000013 	beq	285d0 <DWHCIFrameSchedulerNonPeriodicTransactionComplete+0x9c>
   28580:	e594301c 	ldr	r3, [r4, #28]
   28584:	e3530000 	cmp	r3, #0
   28588:	e2433001 	sub	r3, r3, #1
   2858c:	e584301c 	str	r3, [r4, #28]
   28590:	1a000015 	bne	285ec <DWHCIFrameSchedulerNonPeriodicTransactionComplete+0xb8>
   28594:	e3a03005 	mov	r3, #5
   28598:	e5843018 	str	r3, [r4, #24]
   2859c:	e8bd8070 	pop	{r4, r5, r6, pc}
   285a0:	e3150020 	tst	r5, #32
   285a4:	1a000003 	bne	285b8 <DWHCIFrameSchedulerNonPeriodicTransactionComplete+0x84>
   285a8:	e3a02070 	mov	r2, #112	; 0x70
   285ac:	e59f108c 	ldr	r1, [pc, #140]	; 28640 <DWHCIFrameSchedulerNonPeriodicTransactionComplete+0x10c>
   285b0:	e59f0090 	ldr	r0, [pc, #144]	; 28648 <DWHCIFrameSchedulerNonPeriodicTransactionComplete+0x114>
   285b4:	ebffbc99 	bl	17820 <uspi_assertion_failed>
   285b8:	e3a03001 	mov	r3, #1
   285bc:	e5843018 	str	r3, [r4, #24]
   285c0:	e8bd8070 	pop	{r4, r5, r6, pc}
   285c4:	e3a03004 	mov	r3, #4
   285c8:	e5843018 	str	r3, [r4, #24]
   285cc:	e8bd8070 	pop	{r4, r5, r6, pc}
   285d0:	e3150010 	tst	r5, #16
   285d4:	0a00000f 	beq	28618 <DWHCIFrameSchedulerNonPeriodicTransactionComplete+0xe4>
   285d8:	e594301c 	ldr	r3, [r4, #28]
   285dc:	e3530000 	cmp	r3, #0
   285e0:	e2433001 	sub	r3, r3, #1
   285e4:	e584301c 	str	r3, [r4, #28]
   285e8:	0a000007 	beq	2860c <DWHCIFrameSchedulerNonPeriodicTransactionComplete+0xd8>
   285ec:	e3a03003 	mov	r3, #3
   285f0:	e5843018 	str	r3, [r4, #24]
   285f4:	e8bd8070 	pop	{r4, r5, r6, pc}
   285f8:	e3a0206b 	mov	r2, #107	; 0x6b
   285fc:	e59f103c 	ldr	r1, [pc, #60]	; 28640 <DWHCIFrameSchedulerNonPeriodicTransactionComplete+0x10c>
   28600:	e59f0044 	ldr	r0, [pc, #68]	; 2864c <DWHCIFrameSchedulerNonPeriodicTransactionComplete+0x118>
   28604:	ebffbc85 	bl	17820 <uspi_assertion_failed>
   28608:	eaffffcd 	b	28544 <DWHCIFrameSchedulerNonPeriodicTransactionComplete+0x10>
   2860c:	e59f003c 	ldr	r0, [pc, #60]	; 28650 <DWHCIFrameSchedulerNonPeriodicTransactionComplete+0x11c>
   28610:	ebffbc68 	bl	177b8 <usDelay>
   28614:	eaffffde 	b	28594 <DWHCIFrameSchedulerNonPeriodicTransactionComplete+0x60>
   28618:	e1a03005 	mov	r3, r5
   2861c:	e59f2030 	ldr	r2, [pc, #48]	; 28654 <DWHCIFrameSchedulerNonPeriodicTransactionComplete+0x120>
   28620:	e3a01001 	mov	r1, #1
   28624:	e59f002c 	ldr	r0, [pc, #44]	; 28658 <DWHCIFrameSchedulerNonPeriodicTransactionComplete+0x124>
   28628:	ebff8461 	bl	97b4 <LogWrite>
   2862c:	e8bd4070 	pop	{r4, r5, r6, lr}
   28630:	e3a02094 	mov	r2, #148	; 0x94
   28634:	e59f1004 	ldr	r1, [pc, #4]	; 28640 <DWHCIFrameSchedulerNonPeriodicTransactionComplete+0x10c>
   28638:	e59f0004 	ldr	r0, [pc, #4]	; 28644 <DWHCIFrameSchedulerNonPeriodicTransactionComplete+0x110>
   2863c:	eaffbc77 	b	17820 <uspi_assertion_failed>
   28640:	00031e9c 	.word	0x00031e9c
   28644:	00030678 	.word	0x00030678
   28648:	00031eb4 	.word	0x00031eb4
   2864c:	000306f0 	.word	0x000306f0
   28650:	00000271 	.word	0x00000271
   28654:	00031ed8 	.word	0x00031ed8
   28658:	00031eec 	.word	0x00031eec

0002865c <DWHCIFrameSchedulerNonPeriodic>:
   2865c:	e92d4010 	push	{r4, lr}
   28660:	e2504000 	subs	r4, r0, #0
   28664:	0a00000c 	beq	2869c <DWHCIFrameSchedulerNonPeriodic+0x40>
   28668:	e3a02006 	mov	r2, #6
   2866c:	e59f303c 	ldr	r3, [pc, #60]	; 286b0 <DWHCIFrameSchedulerNonPeriodic+0x54>
   28670:	e59fc03c 	ldr	ip, [pc, #60]	; 286b4 <DWHCIFrameSchedulerNonPeriodic+0x58>
   28674:	e59f003c 	ldr	r0, [pc, #60]	; 286b8 <DWHCIFrameSchedulerNonPeriodic+0x5c>
   28678:	e59f103c 	ldr	r1, [pc, #60]	; 286bc <DWHCIFrameSchedulerNonPeriodic+0x60>
   2867c:	e5842018 	str	r2, [r4, #24]
   28680:	e5843000 	str	r3, [r4]
   28684:	e59f2034 	ldr	r2, [pc, #52]	; 286c0 <DWHCIFrameSchedulerNonPeriodic+0x64>
   28688:	e59f3034 	ldr	r3, [pc, #52]	; 286c4 <DWHCIFrameSchedulerNonPeriodic+0x68>
   2868c:	e584c004 	str	ip, [r4, #4]
   28690:	e1c400f8 	strd	r0, [r4, #8]
   28694:	e1c421f0 	strd	r2, [r4, #16]
   28698:	e8bd8010 	pop	{r4, pc}
   2869c:	e3a02029 	mov	r2, #41	; 0x29
   286a0:	e59f1020 	ldr	r1, [pc, #32]	; 286c8 <DWHCIFrameSchedulerNonPeriodic+0x6c>
   286a4:	e59f0020 	ldr	r0, [pc, #32]	; 286cc <DWHCIFrameSchedulerNonPeriodic+0x70>
   286a8:	ebffbc5c 	bl	17820 <uspi_assertion_failed>
   286ac:	eaffffed 	b	28668 <DWHCIFrameSchedulerNonPeriodic+0xc>
   286b0:	00028430 	.word	0x00028430
   286b4:	00028464 	.word	0x00028464
   286b8:	00028498 	.word	0x00028498
   286bc:	00028534 	.word	0x00028534
   286c0:	00028424 	.word	0x00028424
   286c4:	00028428 	.word	0x00028428
   286c8:	00031e9c 	.word	0x00031e9c
   286cc:	000306f0 	.word	0x000306f0

000286d0 <_DWHCIFrameSchedulerPeriodic>:
   286d0:	e92d4010 	push	{r4, lr}
   286d4:	e2504000 	subs	r4, r0, #0
   286d8:	0a000002 	beq	286e8 <_DWHCIFrameSchedulerPeriodic+0x18>
   286dc:	e3a03006 	mov	r3, #6
   286e0:	e5843018 	str	r3, [r4, #24]
   286e4:	e8bd8010 	pop	{r4, pc}
   286e8:	e3a0203e 	mov	r2, #62	; 0x3e
   286ec:	e59f1008 	ldr	r1, [pc, #8]	; 286fc <_DWHCIFrameSchedulerPeriodic+0x2c>
   286f0:	e59f0008 	ldr	r0, [pc, #8]	; 28700 <_DWHCIFrameSchedulerPeriodic+0x30>
   286f4:	ebffbc49 	bl	17820 <uspi_assertion_failed>
   286f8:	eafffff7 	b	286dc <_DWHCIFrameSchedulerPeriodic+0xc>
   286fc:	00031ef4 	.word	0x00031ef4
   28700:	000306f0 	.word	0x000306f0

00028704 <DWHCIFrameSchedulerPeriodicStartSplit>:
   28704:	e92d4010 	push	{r4, lr}
   28708:	e2504000 	subs	r4, r0, #0
   2870c:	0a000004 	beq	28724 <DWHCIFrameSchedulerPeriodicStartSplit+0x20>
   28710:	e3a02000 	mov	r2, #0
   28714:	e3a03008 	mov	r3, #8
   28718:	e5842018 	str	r2, [r4, #24]
   2871c:	e5843020 	str	r3, [r4, #32]
   28720:	e8bd8010 	pop	{r4, pc}
   28724:	e3a02046 	mov	r2, #70	; 0x46
   28728:	e59f1008 	ldr	r1, [pc, #8]	; 28738 <DWHCIFrameSchedulerPeriodicStartSplit+0x34>
   2872c:	e59f0008 	ldr	r0, [pc, #8]	; 2873c <DWHCIFrameSchedulerPeriodicStartSplit+0x38>
   28730:	ebffbc3a 	bl	17820 <uspi_assertion_failed>
   28734:	eafffff5 	b	28710 <DWHCIFrameSchedulerPeriodicStartSplit+0xc>
   28738:	00031ef4 	.word	0x00031ef4
   2873c:	000306f0 	.word	0x000306f0

00028740 <DWHCIFrameSchedulerPeriodicIsOddFrame>:
   28740:	e92d4010 	push	{r4, lr}
   28744:	e2504000 	subs	r4, r0, #0
   28748:	0a000002 	beq	28758 <DWHCIFrameSchedulerPeriodicIsOddFrame+0x18>
   2874c:	e5940020 	ldr	r0, [r4, #32]
   28750:	e2000001 	and	r0, r0, #1
   28754:	e8bd8010 	pop	{r4, pc}
   28758:	e3a020ba 	mov	r2, #186	; 0xba
   2875c:	e59f1008 	ldr	r1, [pc, #8]	; 2876c <DWHCIFrameSchedulerPeriodicIsOddFrame+0x2c>
   28760:	e59f0008 	ldr	r0, [pc, #8]	; 28770 <DWHCIFrameSchedulerPeriodicIsOddFrame+0x30>
   28764:	ebffbc2d 	bl	17820 <uspi_assertion_failed>
   28768:	eafffff7 	b	2874c <DWHCIFrameSchedulerPeriodicIsOddFrame+0xc>
   2876c:	00031ef4 	.word	0x00031ef4
   28770:	000306f0 	.word	0x000306f0

00028774 <DWHCIFrameSchedulerPeriodicWaitForFrame>:
   28774:	e92d4010 	push	{r4, lr}
   28778:	e2504000 	subs	r4, r0, #0
   2877c:	e24dd010 	sub	sp, sp, #16
   28780:	0a000018 	beq	287e8 <DWHCIFrameSchedulerPeriodicWaitForFrame+0x74>
   28784:	e28d0004 	add	r0, sp, #4
   28788:	e59f106c 	ldr	r1, [pc, #108]	; 287fc <DWHCIFrameSchedulerPeriodicWaitForFrame+0x88>
   2878c:	ebffde54 	bl	200e4 <DWHCIRegister>
   28790:	e5943020 	ldr	r3, [r4, #32]
   28794:	e3530008 	cmp	r3, #8
   28798:	0a000009 	beq	287c4 <DWHCIFrameSchedulerPeriodicWaitForFrame+0x50>
   2879c:	e28d0004 	add	r0, sp, #4
   287a0:	ebffde7b 	bl	20194 <DWHCIRegisterRead>
   287a4:	e5943020 	ldr	r3, [r4, #32]
   287a8:	e2000007 	and	r0, r0, #7
   287ac:	e1500003 	cmp	r0, r3
   287b0:	1afffff9 	bne	2879c <DWHCIFrameSchedulerPeriodicWaitForFrame+0x28>
   287b4:	e28d0004 	add	r0, sp, #4
   287b8:	ebffde68 	bl	20160 <_DWHCIRegister>
   287bc:	e28dd010 	add	sp, sp, #16
   287c0:	e8bd8010 	pop	{r4, pc}
   287c4:	e28d0004 	add	r0, sp, #4
   287c8:	ebffde71 	bl	20194 <DWHCIRegisterRead>
   287cc:	e2800001 	add	r0, r0, #1
   287d0:	e2000007 	and	r0, r0, #7
   287d4:	e3500006 	cmp	r0, #6
   287d8:	03a03007 	moveq	r3, #7
   287dc:	15840020 	strne	r0, [r4, #32]
   287e0:	05843020 	streq	r3, [r4, #32]
   287e4:	eaffffec 	b	2879c <DWHCIFrameSchedulerPeriodicWaitForFrame+0x28>
   287e8:	e3a020a1 	mov	r2, #161	; 0xa1
   287ec:	e59f100c 	ldr	r1, [pc, #12]	; 28800 <DWHCIFrameSchedulerPeriodicWaitForFrame+0x8c>
   287f0:	e59f000c 	ldr	r0, [pc, #12]	; 28804 <DWHCIFrameSchedulerPeriodicWaitForFrame+0x90>
   287f4:	ebffbc09 	bl	17820 <uspi_assertion_failed>
   287f8:	eaffffe1 	b	28784 <DWHCIFrameSchedulerPeriodicWaitForFrame+0x10>
   287fc:	20980408 	.word	0x20980408
   28800:	00031ef4 	.word	0x00031ef4
   28804:	000306f0 	.word	0x000306f0

00028808 <DWHCIFrameSchedulerPeriodicCompleteSplit>:
   28808:	e92d4010 	push	{r4, lr}
   2880c:	e2504000 	subs	r4, r0, #0
   28810:	0a000023 	beq	288a4 <DWHCIFrameSchedulerPeriodicCompleteSplit+0x9c>
   28814:	e5943018 	ldr	r3, [r4, #24]
   28818:	e2433001 	sub	r3, r3, #1
   2881c:	e3530004 	cmp	r3, #4
   28820:	979ff103 	ldrls	pc, [pc, r3, lsl #2]
   28824:	ea000018 	b	2888c <DWHCIFrameSchedulerPeriodicCompleteSplit+0x84>
   28828:	0002885c 	.word	0x0002885c
   2882c:	0002888c 	.word	0x0002888c
   28830:	00028844 	.word	0x00028844
   28834:	0002883c 	.word	0x0002883c
   28838:	0002883c 	.word	0x0002883c
   2883c:	e3a00000 	mov	r0, #0
   28840:	e8bd8010 	pop	{r4, pc}
   28844:	e3a00001 	mov	r0, #1
   28848:	e5943020 	ldr	r3, [r4, #32]
   2884c:	e0833000 	add	r3, r3, r0
   28850:	e2033007 	and	r3, r3, #7
   28854:	e5843020 	str	r3, [r4, #32]
   28858:	e8bd8010 	pop	{r4, pc}
   2885c:	e3a02002 	mov	r2, #2
   28860:	e5943020 	ldr	r3, [r4, #32]
   28864:	e5842018 	str	r2, [r4, #24]
   28868:	e3530005 	cmp	r3, #5
   2886c:	13a01003 	movne	r1, #3
   28870:	01a01002 	moveq	r1, r2
   28874:	e0833002 	add	r3, r3, r2
   28878:	e2033007 	and	r3, r3, #7
   2887c:	e5843020 	str	r3, [r4, #32]
   28880:	e584101c 	str	r1, [r4, #28]
   28884:	e3a00001 	mov	r0, #1
   28888:	e8bd8010 	pop	{r4, pc}
   2888c:	e3a02066 	mov	r2, #102	; 0x66
   28890:	e59f1020 	ldr	r1, [pc, #32]	; 288b8 <DWHCIFrameSchedulerPeriodicCompleteSplit+0xb0>
   28894:	e59f0020 	ldr	r0, [pc, #32]	; 288bc <DWHCIFrameSchedulerPeriodicCompleteSplit+0xb4>
   28898:	ebffbbe0 	bl	17820 <uspi_assertion_failed>
   2889c:	e3a00000 	mov	r0, #0
   288a0:	e8bd8010 	pop	{r4, pc}
   288a4:	e3a0204f 	mov	r2, #79	; 0x4f
   288a8:	e59f1008 	ldr	r1, [pc, #8]	; 288b8 <DWHCIFrameSchedulerPeriodicCompleteSplit+0xb0>
   288ac:	e59f000c 	ldr	r0, [pc, #12]	; 288c0 <DWHCIFrameSchedulerPeriodicCompleteSplit+0xb8>
   288b0:	ebffbbda 	bl	17820 <uspi_assertion_failed>
   288b4:	eaffffd6 	b	28814 <DWHCIFrameSchedulerPeriodicCompleteSplit+0xc>
   288b8:	00031ef4 	.word	0x00031ef4
   288bc:	00030678 	.word	0x00030678
   288c0:	000306f0 	.word	0x000306f0

000288c4 <DWHCIFrameSchedulerPeriodicTransactionComplete>:
   288c4:	e92d4070 	push	{r4, r5, r6, lr}
   288c8:	e2504000 	subs	r4, r0, #0
   288cc:	e1a05001 	mov	r5, r1
   288d0:	0a000022 	beq	28960 <DWHCIFrameSchedulerPeriodicTransactionComplete+0x9c>
   288d4:	e5942018 	ldr	r2, [r4, #24]
   288d8:	e3520000 	cmp	r2, #0
   288dc:	0a000013 	beq	28930 <DWHCIFrameSchedulerPeriodicTransactionComplete+0x6c>
   288e0:	e2422002 	sub	r2, r2, #2
   288e4:	e3520001 	cmp	r2, #1
   288e8:	9a000004 	bls	28900 <DWHCIFrameSchedulerPeriodicTransactionComplete+0x3c>
   288ec:	e8bd4070 	pop	{r4, r5, r6, lr}
   288f0:	e3a02099 	mov	r2, #153	; 0x99
   288f4:	e59f10d0 	ldr	r1, [pc, #208]	; 289cc <DWHCIFrameSchedulerPeriodicTransactionComplete+0x108>
   288f8:	e59f00d0 	ldr	r0, [pc, #208]	; 289d0 <DWHCIFrameSchedulerPeriodicTransactionComplete+0x10c>
   288fc:	eaffbbc7 	b	17820 <uspi_assertion_failed>
   28900:	e3150001 	tst	r5, #1
   28904:	1a000012 	bne	28954 <DWHCIFrameSchedulerPeriodicTransactionComplete+0x90>
   28908:	e3150060 	tst	r5, #96	; 0x60
   2890c:	0a000018 	beq	28974 <DWHCIFrameSchedulerPeriodicTransactionComplete+0xb0>
   28910:	e594301c 	ldr	r3, [r4, #28]
   28914:	e3530000 	cmp	r3, #0
   28918:	e2433001 	sub	r3, r3, #1
   2891c:	e584301c 	str	r3, [r4, #28]
   28920:	0a000024 	beq	289b8 <DWHCIFrameSchedulerPeriodicTransactionComplete+0xf4>
   28924:	e3a03003 	mov	r3, #3
   28928:	e5843018 	str	r3, [r4, #24]
   2892c:	e8bd8070 	pop	{r4, r5, r6, pc}
   28930:	e3150020 	tst	r5, #32
   28934:	1a000003 	bne	28948 <DWHCIFrameSchedulerPeriodicTransactionComplete+0x84>
   28938:	e3a02075 	mov	r2, #117	; 0x75
   2893c:	e59f1088 	ldr	r1, [pc, #136]	; 289cc <DWHCIFrameSchedulerPeriodicTransactionComplete+0x108>
   28940:	e59f008c 	ldr	r0, [pc, #140]	; 289d4 <DWHCIFrameSchedulerPeriodicTransactionComplete+0x110>
   28944:	ebffbbb5 	bl	17820 <uspi_assertion_failed>
   28948:	e3a03001 	mov	r3, #1
   2894c:	e5843018 	str	r3, [r4, #24]
   28950:	e8bd8070 	pop	{r4, r5, r6, pc}
   28954:	e3a03004 	mov	r3, #4
   28958:	e5843018 	str	r3, [r4, #24]
   2895c:	e8bd8070 	pop	{r4, r5, r6, pc}
   28960:	e3a02070 	mov	r2, #112	; 0x70
   28964:	e59f1060 	ldr	r1, [pc, #96]	; 289cc <DWHCIFrameSchedulerPeriodicTransactionComplete+0x108>
   28968:	e59f0068 	ldr	r0, [pc, #104]	; 289d8 <DWHCIFrameSchedulerPeriodicTransactionComplete+0x114>
   2896c:	ebffbbab 	bl	17820 <uspi_assertion_failed>
   28970:	eaffffd7 	b	288d4 <DWHCIFrameSchedulerPeriodicTransactionComplete+0x10>
   28974:	e3150010 	tst	r5, #16
   28978:	0a000004 	beq	28990 <DWHCIFrameSchedulerPeriodicTransactionComplete+0xcc>
   2897c:	e59f0058 	ldr	r0, [pc, #88]	; 289dc <DWHCIFrameSchedulerPeriodicTransactionComplete+0x118>
   28980:	ebffbb8c 	bl	177b8 <usDelay>
   28984:	e3a03005 	mov	r3, #5
   28988:	e5843018 	str	r3, [r4, #24]
   2898c:	e8bd8070 	pop	{r4, r5, r6, pc}
   28990:	e1a03005 	mov	r3, r5
   28994:	e59f2044 	ldr	r2, [pc, #68]	; 289e0 <DWHCIFrameSchedulerPeriodicTransactionComplete+0x11c>
   28998:	e3a01001 	mov	r1, #1
   2899c:	e59f0040 	ldr	r0, [pc, #64]	; 289e4 <DWHCIFrameSchedulerPeriodicTransactionComplete+0x120>
   289a0:	ebff8383 	bl	97b4 <LogWrite>
   289a4:	e8bd4070 	pop	{r4, r5, r6, lr}
   289a8:	e3a02094 	mov	r2, #148	; 0x94
   289ac:	e59f1018 	ldr	r1, [pc, #24]	; 289cc <DWHCIFrameSchedulerPeriodicTransactionComplete+0x108>
   289b0:	e59f0018 	ldr	r0, [pc, #24]	; 289d0 <DWHCIFrameSchedulerPeriodicTransactionComplete+0x10c>
   289b4:	eaffbb99 	b	17820 <uspi_assertion_failed>
   289b8:	e3a03005 	mov	r3, #5
   289bc:	e3a00ffa 	mov	r0, #1000	; 0x3e8
   289c0:	e5843018 	str	r3, [r4, #24]
   289c4:	e8bd4070 	pop	{r4, r5, r6, lr}
   289c8:	eaffbb7a 	b	177b8 <usDelay>
   289cc:	00031ef4 	.word	0x00031ef4
   289d0:	00030678 	.word	0x00030678
   289d4:	00031eb4 	.word	0x00031eb4
   289d8:	000306f0 	.word	0x000306f0
   289dc:	00000271 	.word	0x00000271
   289e0:	00031ed8 	.word	0x00031ed8
   289e4:	00031eec 	.word	0x00031eec

000289e8 <DWHCIFrameSchedulerPeriodic>:
   289e8:	e92d4010 	push	{r4, lr}
   289ec:	e2504000 	subs	r4, r0, #0
   289f0:	0a00000e 	beq	28a30 <DWHCIFrameSchedulerPeriodic+0x48>
   289f4:	e3a01006 	mov	r1, #6
   289f8:	e3a02008 	mov	r2, #8
   289fc:	e59f3040 	ldr	r3, [pc, #64]	; 28a44 <DWHCIFrameSchedulerPeriodic+0x5c>
   28a00:	e59fc040 	ldr	ip, [pc, #64]	; 28a48 <DWHCIFrameSchedulerPeriodic+0x60>
   28a04:	e59f0040 	ldr	r0, [pc, #64]	; 28a4c <DWHCIFrameSchedulerPeriodic+0x64>
   28a08:	e5841018 	str	r1, [r4, #24]
   28a0c:	e5842020 	str	r2, [r4, #32]
   28a10:	e59f1038 	ldr	r1, [pc, #56]	; 28a50 <DWHCIFrameSchedulerPeriodic+0x68>
   28a14:	e59f2038 	ldr	r2, [pc, #56]	; 28a54 <DWHCIFrameSchedulerPeriodic+0x6c>
   28a18:	e5843000 	str	r3, [r4]
   28a1c:	e59f3034 	ldr	r3, [pc, #52]	; 28a58 <DWHCIFrameSchedulerPeriodic+0x70>
   28a20:	e584c004 	str	ip, [r4, #4]
   28a24:	e1c400f8 	strd	r0, [r4, #8]
   28a28:	e1c421f0 	strd	r2, [r4, #16]
   28a2c:	e8bd8010 	pop	{r4, pc}
   28a30:	e3a0202c 	mov	r2, #44	; 0x2c
   28a34:	e59f1020 	ldr	r1, [pc, #32]	; 28a5c <DWHCIFrameSchedulerPeriodic+0x74>
   28a38:	e59f0020 	ldr	r0, [pc, #32]	; 28a60 <DWHCIFrameSchedulerPeriodic+0x78>
   28a3c:	ebffbb77 	bl	17820 <uspi_assertion_failed>
   28a40:	eaffffeb 	b	289f4 <DWHCIFrameSchedulerPeriodic+0xc>
   28a44:	000286d0 	.word	0x000286d0
   28a48:	00028704 	.word	0x00028704
   28a4c:	00028808 	.word	0x00028808
   28a50:	000288c4 	.word	0x000288c4
   28a54:	00028774 	.word	0x00028774
   28a58:	00028740 	.word	0x00028740
   28a5c:	00031ef4 	.word	0x00031ef4
   28a60:	000306f0 	.word	0x000306f0

00028a64 <USBKeyboardDeviceStartRequest>:
   28a64:	e92d4070 	push	{r4, r5, r6, lr}
   28a68:	e2504000 	subs	r4, r0, #0
   28a6c:	e24dd008 	sub	sp, sp, #8
   28a70:	0a00001d 	beq	28aec <USBKeyboardDeviceStartRequest+0x88>
   28a74:	e5943010 	ldr	r3, [r4, #16]
   28a78:	e3530000 	cmp	r3, #0
   28a7c:	0a000021 	beq	28b08 <USBKeyboardDeviceStartRequest+0xa4>
   28a80:	e5942048 	ldr	r2, [r4, #72]	; 0x48
   28a84:	e3520000 	cmp	r2, #0
   28a88:	0a000011 	beq	28ad4 <USBKeyboardDeviceStartRequest+0x70>
   28a8c:	e3a06000 	mov	r6, #0
   28a90:	e2845024 	add	r5, r4, #36	; 0x24
   28a94:	e5941010 	ldr	r1, [r4, #16]
   28a98:	e1a00005 	mov	r0, r5
   28a9c:	e58d6000 	str	r6, [sp]
   28aa0:	e3a03008 	mov	r3, #8
   28aa4:	ebffe8dd 	bl	22e20 <USBRequest>
   28aa8:	e1a03004 	mov	r3, r4
   28aac:	e1a02006 	mov	r2, r6
   28ab0:	e1a00005 	mov	r0, r5
   28ab4:	e59f1060 	ldr	r1, [pc, #96]	; 28b1c <USBKeyboardDeviceStartRequest+0xb8>
   28ab8:	ebffe9ab 	bl	2316c <USBRequestSetCompletionRoutine>
   28abc:	e1a00004 	mov	r0, r4
   28ac0:	ebffef34 	bl	24798 <USBFunctionGetHost>
   28ac4:	e1a01005 	mov	r1, r5
   28ac8:	e28dd008 	add	sp, sp, #8
   28acc:	e8bd4070 	pop	{r4, r5, r6, lr}
   28ad0:	eaffd6c3 	b	1e5e4 <DWHCIDeviceSubmitAsyncRequest>
   28ad4:	e3a02f46 	mov	r2, #280	; 0x118
   28ad8:	e59f1040 	ldr	r1, [pc, #64]	; 28b20 <USBKeyboardDeviceStartRequest+0xbc>
   28adc:	e59f0040 	ldr	r0, [pc, #64]	; 28b24 <USBKeyboardDeviceStartRequest+0xc0>
   28ae0:	ebffbb4e 	bl	17820 <uspi_assertion_failed>
   28ae4:	e5942048 	ldr	r2, [r4, #72]	; 0x48
   28ae8:	eaffffe7 	b	28a8c <USBKeyboardDeviceStartRequest+0x28>
   28aec:	e59f2034 	ldr	r2, [pc, #52]	; 28b28 <USBKeyboardDeviceStartRequest+0xc4>
   28af0:	e59f1028 	ldr	r1, [pc, #40]	; 28b20 <USBKeyboardDeviceStartRequest+0xbc>
   28af4:	e59f0030 	ldr	r0, [pc, #48]	; 28b2c <USBKeyboardDeviceStartRequest+0xc8>
   28af8:	ebffbb48 	bl	17820 <uspi_assertion_failed>
   28afc:	e5943010 	ldr	r3, [r4, #16]
   28b00:	e3530000 	cmp	r3, #0
   28b04:	1affffdd 	bne	28a80 <USBKeyboardDeviceStartRequest+0x1c>
   28b08:	e59f2020 	ldr	r2, [pc, #32]	; 28b30 <USBKeyboardDeviceStartRequest+0xcc>
   28b0c:	e59f100c 	ldr	r1, [pc, #12]	; 28b20 <USBKeyboardDeviceStartRequest+0xbc>
   28b10:	e59f001c 	ldr	r0, [pc, #28]	; 28b34 <USBKeyboardDeviceStartRequest+0xd0>
   28b14:	ebffbb41 	bl	17820 <uspi_assertion_failed>
   28b18:	eaffffd8 	b	28a80 <USBKeyboardDeviceStartRequest+0x1c>
   28b1c:	00028b38 	.word	0x00028b38
   28b20:	00031f14 	.word	0x00031f14
   28b24:	00031f44 	.word	0x00031f44
   28b28:	00000115 	.word	0x00000115
   28b2c:	000306f0 	.word	0x000306f0
   28b30:	00000117 	.word	0x00000117
   28b34:	00031f24 	.word	0x00031f24

00028b38 <USBKeyboardDeviceCompletionRoutine>:
   28b38:	e92d40f0 	push	{r4, r5, r6, r7, lr}
   28b3c:	e2525000 	subs	r5, r2, #0
   28b40:	e24dd00c 	sub	sp, sp, #12
   28b44:	e1a04000 	mov	r4, r0
   28b48:	0a00001e 	beq	28bc8 <USBKeyboardDeviceCompletionRoutine+0x90>
   28b4c:	e3540000 	cmp	r4, #0
   28b50:	0a000022 	beq	28be0 <USBKeyboardDeviceCompletionRoutine+0xa8>
   28b54:	e2856024 	add	r6, r5, #36	; 0x24
   28b58:	e1560004 	cmp	r6, r4
   28b5c:	0a000003 	beq	28b70 <USBKeyboardDeviceCompletionRoutine+0x38>
   28b60:	e59f21a8 	ldr	r2, [pc, #424]	; 28d10 <USBKeyboardDeviceCompletionRoutine+0x1d8>
   28b64:	e59f11a8 	ldr	r1, [pc, #424]	; 28d14 <USBKeyboardDeviceCompletionRoutine+0x1dc>
   28b68:	e59f01a8 	ldr	r0, [pc, #424]	; 28d18 <USBKeyboardDeviceCompletionRoutine+0x1e0>
   28b6c:	ebffbb2b 	bl	17820 <uspi_assertion_failed>
   28b70:	e1a00004 	mov	r0, r4
   28b74:	ebffe919 	bl	22fe0 <USBRequestGetStatus>
   28b78:	e3500000 	cmp	r0, #0
   28b7c:	1a000005 	bne	28b98 <USBKeyboardDeviceCompletionRoutine+0x60>
   28b80:	e1a00006 	mov	r0, r6
   28b84:	ebffe8d5 	bl	22ee0 <_USBRequest>
   28b88:	e1a00005 	mov	r0, r5
   28b8c:	ebffffb4 	bl	28a64 <USBKeyboardDeviceStartRequest>
   28b90:	e28dd00c 	add	sp, sp, #12
   28b94:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
   28b98:	e1a00004 	mov	r0, r4
   28b9c:	ebffe91c 	bl	23014 <USBRequestGetResultLength>
   28ba0:	e3500008 	cmp	r0, #8
   28ba4:	1afffff5 	bne	28b80 <USBKeyboardDeviceCompletionRoutine+0x48>
   28ba8:	e5952020 	ldr	r2, [r5, #32]
   28bac:	e5953048 	ldr	r3, [r5, #72]	; 0x48
   28bb0:	e3520000 	cmp	r2, #0
   28bb4:	0a00000e 	beq	28bf4 <USBKeyboardDeviceCompletionRoutine+0xbc>
   28bb8:	e2831002 	add	r1, r3, #2
   28bbc:	e5d30000 	ldrb	r0, [r3]
   28bc0:	e12fff32 	blx	r2
   28bc4:	eaffffed 	b	28b80 <USBKeyboardDeviceCompletionRoutine+0x48>
   28bc8:	e59f214c 	ldr	r2, [pc, #332]	; 28d1c <USBKeyboardDeviceCompletionRoutine+0x1e4>
   28bcc:	e59f1140 	ldr	r1, [pc, #320]	; 28d14 <USBKeyboardDeviceCompletionRoutine+0x1dc>
   28bd0:	e59f0148 	ldr	r0, [pc, #328]	; 28d20 <USBKeyboardDeviceCompletionRoutine+0x1e8>
   28bd4:	ebffbb11 	bl	17820 <uspi_assertion_failed>
   28bd8:	e3540000 	cmp	r4, #0
   28bdc:	1affffdc 	bne	28b54 <USBKeyboardDeviceCompletionRoutine+0x1c>
   28be0:	e59f213c 	ldr	r2, [pc, #316]	; 28d24 <USBKeyboardDeviceCompletionRoutine+0x1ec>
   28be4:	e59f1128 	ldr	r1, [pc, #296]	; 28d14 <USBKeyboardDeviceCompletionRoutine+0x1dc>
   28be8:	e59f0138 	ldr	r0, [pc, #312]	; 28d28 <USBKeyboardDeviceCompletionRoutine+0x1f0>
   28bec:	ebffbb0b 	bl	17820 <uspi_assertion_failed>
   28bf0:	eaffffd7 	b	28b54 <USBKeyboardDeviceCompletionRoutine+0x1c>
   28bf4:	e2832008 	add	r2, r3, #8
   28bf8:	e2830002 	add	r0, r3, #2
   28bfc:	e5721001 	ldrb	r1, [r2, #-1]!
   28c00:	e3510000 	cmp	r1, #0
   28c04:	1a00000b 	bne	28c38 <USBKeyboardDeviceCompletionRoutine+0x100>
   28c08:	e1500002 	cmp	r0, r2
   28c0c:	1afffffa 	bne	28bfc <USBKeyboardDeviceCompletionRoutine+0xc4>
   28c10:	e5d5304c 	ldrb	r3, [r5, #76]	; 0x4c
   28c14:	e3530000 	cmp	r3, #0
   28c18:	15c5104c 	strbne	r1, [r5, #76]	; 0x4c
   28c1c:	e5950050 	ldr	r0, [r5, #80]	; 0x50
   28c20:	e3500000 	cmp	r0, #0
   28c24:	0affffd5 	beq	28b80 <USBKeyboardDeviceCompletionRoutine+0x48>
   28c28:	ebffbae7 	bl	177cc <CancelKernelTimer>
   28c2c:	e3a03000 	mov	r3, #0
   28c30:	e5853050 	str	r3, [r5, #80]	; 0x50
   28c34:	eaffffd1 	b	28b80 <USBKeyboardDeviceCompletionRoutine+0x48>
   28c38:	e5d5204c 	ldrb	r2, [r5, #76]	; 0x4c
   28c3c:	e1520001 	cmp	r2, r1
   28c40:	0afffff5 	beq	28c1c <USBKeyboardDeviceCompletionRoutine+0xe4>
   28c44:	e5c5104c 	strb	r1, [r5, #76]	; 0x4c
   28c48:	e5d37000 	ldrb	r7, [r3]
   28c4c:	e2854054 	add	r4, r5, #84	; 0x54
   28c50:	e1a02007 	mov	r2, r7
   28c54:	e1a00004 	mov	r0, r4
   28c58:	eb000c4e 	bl	2bd98 <KeyMapTranslate>
   28c5c:	e2403e13 	sub	r3, r0, #304	; 0x130
   28c60:	e2433003 	sub	r3, r3, #3
   28c64:	e353000f 	cmp	r3, #15
   28c68:	979ff103 	ldrls	pc, [pc, r3, lsl #2]
   28c6c:	ea00001b 	b	28ce0 <USBKeyboardDeviceCompletionRoutine+0x1a8>
   28c70:	00028b80 	.word	0x00028b80
   28c74:	00028b80 	.word	0x00028b80
   28c78:	00028b80 	.word	0x00028b80
   28c7c:	00028cc4 	.word	0x00028cc4
   28c80:	00028cc4 	.word	0x00028cc4
   28c84:	00028cc4 	.word	0x00028cc4
   28c88:	00028cc4 	.word	0x00028cc4
   28c8c:	00028cc4 	.word	0x00028cc4
   28c90:	00028cc4 	.word	0x00028cc4
   28c94:	00028cc4 	.word	0x00028cc4
   28c98:	00028cc4 	.word	0x00028cc4
   28c9c:	00028cc4 	.word	0x00028cc4
   28ca0:	00028cc4 	.word	0x00028cc4
   28ca4:	00028cc4 	.word	0x00028cc4
   28ca8:	00028cc4 	.word	0x00028cc4
   28cac:	00028cb0 	.word	0x00028cb0
   28cb0:	e595301c 	ldr	r3, [r5, #28]
   28cb4:	e3530000 	cmp	r3, #0
   28cb8:	0affffb0 	beq	28b80 <USBKeyboardDeviceCompletionRoutine+0x48>
   28cbc:	e12fff33 	blx	r3
   28cc0:	eaffffae 	b	28b80 <USBKeyboardDeviceCompletionRoutine+0x48>
   28cc4:	e5953018 	ldr	r3, [r5, #24]
   28cc8:	e3530000 	cmp	r3, #0
   28ccc:	0affffab 	beq	28b80 <USBKeyboardDeviceCompletionRoutine+0x48>
   28cd0:	e2400f4d 	sub	r0, r0, #308	; 0x134
   28cd4:	e2400002 	sub	r0, r0, #2
   28cd8:	e12fff33 	blx	r3
   28cdc:	eaffffa7 	b	28b80 <USBKeyboardDeviceCompletionRoutine+0x48>
   28ce0:	e1a01000 	mov	r1, r0
   28ce4:	e1a02007 	mov	r2, r7
   28ce8:	e1a00004 	mov	r0, r4
   28cec:	e28d3004 	add	r3, sp, #4
   28cf0:	eb000c7c 	bl	2bee8 <KeyMapGetString>
   28cf4:	e3500000 	cmp	r0, #0
   28cf8:	0affffa0 	beq	28b80 <USBKeyboardDeviceCompletionRoutine+0x48>
   28cfc:	e5953014 	ldr	r3, [r5, #20]
   28d00:	e3530000 	cmp	r3, #0
   28d04:	0affff9d 	beq	28b80 <USBKeyboardDeviceCompletionRoutine+0x48>
   28d08:	e12fff33 	blx	r3
   28d0c:	eaffff9b 	b	28b80 <USBKeyboardDeviceCompletionRoutine+0x48>
   28d10:	00000126 	.word	0x00000126
   28d14:	00031f14 	.word	0x00031f14
   28d18:	00031f60 	.word	0x00031f60
   28d1c:	00000123 	.word	0x00000123
   28d20:	000306f0 	.word	0x000306f0
   28d24:	00000125 	.word	0x00000125
   28d28:	000307b8 	.word	0x000307b8

00028d2c <USBKeyboardDevice>:
   28d2c:	e92d4070 	push	{r4, r5, r6, lr}
   28d30:	e2504000 	subs	r4, r0, #0
   28d34:	e1a05001 	mov	r5, r1
   28d38:	0a00001a 	beq	28da8 <USBKeyboardDevice+0x7c>
   28d3c:	e1a01005 	mov	r1, r5
   28d40:	e1a00004 	mov	r0, r4
   28d44:	ebffedcd 	bl	24480 <USBFunctionCopy>
   28d48:	e3a03000 	mov	r3, #0
   28d4c:	e59f2068 	ldr	r2, [pc, #104]	; 28dbc <USBKeyboardDevice+0x90>
   28d50:	e5843010 	str	r3, [r4, #16]
   28d54:	e5843014 	str	r3, [r4, #20]
   28d58:	e5843018 	str	r3, [r4, #24]
   28d5c:	e584301c 	str	r3, [r4, #28]
   28d60:	e5843020 	str	r3, [r4, #32]
   28d64:	e5843048 	str	r3, [r4, #72]	; 0x48
   28d68:	e5c4304c 	strb	r3, [r4, #76]	; 0x4c
   28d6c:	e5843050 	str	r3, [r4, #80]	; 0x50
   28d70:	e5c43460 	strb	r3, [r4, #1120]	; 0x460
   28d74:	e5842000 	str	r2, [r4]
   28d78:	e2840054 	add	r0, r4, #84	; 0x54
   28d7c:	eb000bb7 	bl	2bc60 <KeyMap>
   28d80:	e3a00008 	mov	r0, #8
   28d84:	ebffba7e 	bl	17784 <malloc>
   28d88:	e3500000 	cmp	r0, #0
   28d8c:	e5840048 	str	r0, [r4, #72]	; 0x48
   28d90:	18bd8070 	popne	{r4, r5, r6, pc}
   28d94:	e3a02044 	mov	r2, #68	; 0x44
   28d98:	e8bd4070 	pop	{r4, r5, r6, lr}
   28d9c:	e59f101c 	ldr	r1, [pc, #28]	; 28dc0 <USBKeyboardDevice+0x94>
   28da0:	e59f001c 	ldr	r0, [pc, #28]	; 28dc4 <USBKeyboardDevice+0x98>
   28da4:	eaffba9d 	b	17820 <uspi_assertion_failed>
   28da8:	e3a02032 	mov	r2, #50	; 0x32
   28dac:	e59f100c 	ldr	r1, [pc, #12]	; 28dc0 <USBKeyboardDevice+0x94>
   28db0:	e59f0010 	ldr	r0, [pc, #16]	; 28dc8 <USBKeyboardDevice+0x9c>
   28db4:	ebffba99 	bl	17820 <uspi_assertion_failed>
   28db8:	eaffffdf 	b	28d3c <USBKeyboardDevice+0x10>
   28dbc:	00029054 	.word	0x00029054
   28dc0:	00031f14 	.word	0x00031f14
   28dc4:	00031f44 	.word	0x00031f44
   28dc8:	000306f0 	.word	0x000306f0

00028dcc <_CUSBKeyboardDevice>:
   28dcc:	e92d4010 	push	{r4, lr}
   28dd0:	e2504000 	subs	r4, r0, #0
   28dd4:	0a000012 	beq	28e24 <_CUSBKeyboardDevice+0x58>
   28dd8:	e5940048 	ldr	r0, [r4, #72]	; 0x48
   28ddc:	e3500000 	cmp	r0, #0
   28de0:	0a000002 	beq	28df0 <_CUSBKeyboardDevice+0x24>
   28de4:	ebffba67 	bl	17788 <free>
   28de8:	e3a03000 	mov	r3, #0
   28dec:	e5843048 	str	r3, [r4, #72]	; 0x48
   28df0:	e5940010 	ldr	r0, [r4, #16]
   28df4:	e3500000 	cmp	r0, #0
   28df8:	0a000004 	beq	28e10 <_CUSBKeyboardDevice+0x44>
   28dfc:	ebffe728 	bl	22aa4 <_USBEndpoint>
   28e00:	e5940010 	ldr	r0, [r4, #16]
   28e04:	ebffba5f 	bl	17788 <free>
   28e08:	e3a03000 	mov	r3, #0
   28e0c:	e5843010 	str	r3, [r4, #16]
   28e10:	e2840054 	add	r0, r4, #84	; 0x54
   28e14:	eb000ba6 	bl	2bcb4 <_KeyMap>
   28e18:	e1a00004 	mov	r0, r4
   28e1c:	e8bd4010 	pop	{r4, lr}
   28e20:	eaffedd8 	b	24588 <_USBFunction>
   28e24:	e3a02049 	mov	r2, #73	; 0x49
   28e28:	e59f1008 	ldr	r1, [pc, #8]	; 28e38 <_CUSBKeyboardDevice+0x6c>
   28e2c:	e59f0008 	ldr	r0, [pc, #8]	; 28e3c <_CUSBKeyboardDevice+0x70>
   28e30:	ebffba7a 	bl	17820 <uspi_assertion_failed>
   28e34:	eaffffe7 	b	28dd8 <_CUSBKeyboardDevice+0xc>
   28e38:	00031f14 	.word	0x00031f14
   28e3c:	000306f0 	.word	0x000306f0

00028e40 <USBKeyboardDeviceRegisterKeyPressedHandler>:
   28e40:	e92d4070 	push	{r4, r5, r6, lr}
   28e44:	e2505000 	subs	r5, r0, #0
   28e48:	e1a04001 	mov	r4, r1
   28e4c:	0a000009 	beq	28e78 <USBKeyboardDeviceRegisterKeyPressedHandler+0x38>
   28e50:	e3540000 	cmp	r4, #0
   28e54:	0a000001 	beq	28e60 <USBKeyboardDeviceRegisterKeyPressedHandler+0x20>
   28e58:	e5854014 	str	r4, [r5, #20]
   28e5c:	e8bd8070 	pop	{r4, r5, r6, pc}
   28e60:	e3a020a3 	mov	r2, #163	; 0xa3
   28e64:	e59f1020 	ldr	r1, [pc, #32]	; 28e8c <USBKeyboardDeviceRegisterKeyPressedHandler+0x4c>
   28e68:	e59f0020 	ldr	r0, [pc, #32]	; 28e90 <USBKeyboardDeviceRegisterKeyPressedHandler+0x50>
   28e6c:	ebffba6b 	bl	17820 <uspi_assertion_failed>
   28e70:	e5854014 	str	r4, [r5, #20]
   28e74:	e8bd8070 	pop	{r4, r5, r6, pc}
   28e78:	e3a020a2 	mov	r2, #162	; 0xa2
   28e7c:	e59f1008 	ldr	r1, [pc, #8]	; 28e8c <USBKeyboardDeviceRegisterKeyPressedHandler+0x4c>
   28e80:	e59f000c 	ldr	r0, [pc, #12]	; 28e94 <USBKeyboardDeviceRegisterKeyPressedHandler+0x54>
   28e84:	ebffba65 	bl	17820 <uspi_assertion_failed>
   28e88:	eafffff0 	b	28e50 <USBKeyboardDeviceRegisterKeyPressedHandler+0x10>
   28e8c:	00031f14 	.word	0x00031f14
   28e90:	00031f78 	.word	0x00031f78
   28e94:	000306f0 	.word	0x000306f0

00028e98 <USBKeyboardDeviceRegisterSelectConsoleHandler>:
   28e98:	e92d4070 	push	{r4, r5, r6, lr}
   28e9c:	e2505000 	subs	r5, r0, #0
   28ea0:	e1a04001 	mov	r4, r1
   28ea4:	0a000009 	beq	28ed0 <USBKeyboardDeviceRegisterSelectConsoleHandler+0x38>
   28ea8:	e3540000 	cmp	r4, #0
   28eac:	0a000001 	beq	28eb8 <USBKeyboardDeviceRegisterSelectConsoleHandler+0x20>
   28eb0:	e5854018 	str	r4, [r5, #24]
   28eb4:	e8bd8070 	pop	{r4, r5, r6, pc}
   28eb8:	e3a020aa 	mov	r2, #170	; 0xaa
   28ebc:	e59f1020 	ldr	r1, [pc, #32]	; 28ee4 <USBKeyboardDeviceRegisterSelectConsoleHandler+0x4c>
   28ec0:	e59f0020 	ldr	r0, [pc, #32]	; 28ee8 <USBKeyboardDeviceRegisterSelectConsoleHandler+0x50>
   28ec4:	ebffba55 	bl	17820 <uspi_assertion_failed>
   28ec8:	e5854018 	str	r4, [r5, #24]
   28ecc:	e8bd8070 	pop	{r4, r5, r6, pc}
   28ed0:	e3a020a9 	mov	r2, #169	; 0xa9
   28ed4:	e59f1008 	ldr	r1, [pc, #8]	; 28ee4 <USBKeyboardDeviceRegisterSelectConsoleHandler+0x4c>
   28ed8:	e59f000c 	ldr	r0, [pc, #12]	; 28eec <USBKeyboardDeviceRegisterSelectConsoleHandler+0x54>
   28edc:	ebffba4f 	bl	17820 <uspi_assertion_failed>
   28ee0:	eafffff0 	b	28ea8 <USBKeyboardDeviceRegisterSelectConsoleHandler+0x10>
   28ee4:	00031f14 	.word	0x00031f14
   28ee8:	00031f90 	.word	0x00031f90
   28eec:	000306f0 	.word	0x000306f0

00028ef0 <USBKeyboardDeviceRegisterShutdownHandler>:
   28ef0:	e92d4070 	push	{r4, r5, r6, lr}
   28ef4:	e2505000 	subs	r5, r0, #0
   28ef8:	e1a04001 	mov	r4, r1
   28efc:	0a000009 	beq	28f28 <USBKeyboardDeviceRegisterShutdownHandler+0x38>
   28f00:	e3540000 	cmp	r4, #0
   28f04:	0a000001 	beq	28f10 <USBKeyboardDeviceRegisterShutdownHandler+0x20>
   28f08:	e585401c 	str	r4, [r5, #28]
   28f0c:	e8bd8070 	pop	{r4, r5, r6, pc}
   28f10:	e3a020b1 	mov	r2, #177	; 0xb1
   28f14:	e59f1020 	ldr	r1, [pc, #32]	; 28f3c <USBKeyboardDeviceRegisterShutdownHandler+0x4c>
   28f18:	e59f0020 	ldr	r0, [pc, #32]	; 28f40 <USBKeyboardDeviceRegisterShutdownHandler+0x50>
   28f1c:	ebffba3f 	bl	17820 <uspi_assertion_failed>
   28f20:	e585401c 	str	r4, [r5, #28]
   28f24:	e8bd8070 	pop	{r4, r5, r6, pc}
   28f28:	e3a020b0 	mov	r2, #176	; 0xb0
   28f2c:	e59f1008 	ldr	r1, [pc, #8]	; 28f3c <USBKeyboardDeviceRegisterShutdownHandler+0x4c>
   28f30:	e59f000c 	ldr	r0, [pc, #12]	; 28f44 <USBKeyboardDeviceRegisterShutdownHandler+0x54>
   28f34:	ebffba39 	bl	17820 <uspi_assertion_failed>
   28f38:	eafffff0 	b	28f00 <USBKeyboardDeviceRegisterShutdownHandler+0x10>
   28f3c:	00031f14 	.word	0x00031f14
   28f40:	00031fac 	.word	0x00031fac
   28f44:	000306f0 	.word	0x000306f0

00028f48 <USBKeyboardDeviceRegisterKeyStatusHandlerRaw>:
   28f48:	e92d4070 	push	{r4, r5, r6, lr}
   28f4c:	e2505000 	subs	r5, r0, #0
   28f50:	e1a04001 	mov	r4, r1
   28f54:	0a000009 	beq	28f80 <USBKeyboardDeviceRegisterKeyStatusHandlerRaw+0x38>
   28f58:	e3540000 	cmp	r4, #0
   28f5c:	0a000001 	beq	28f68 <USBKeyboardDeviceRegisterKeyStatusHandlerRaw+0x20>
   28f60:	e5854020 	str	r4, [r5, #32]
   28f64:	e8bd8070 	pop	{r4, r5, r6, pc}
   28f68:	e3a020c4 	mov	r2, #196	; 0xc4
   28f6c:	e59f1020 	ldr	r1, [pc, #32]	; 28f94 <USBKeyboardDeviceRegisterKeyStatusHandlerRaw+0x4c>
   28f70:	e59f0020 	ldr	r0, [pc, #32]	; 28f98 <USBKeyboardDeviceRegisterKeyStatusHandlerRaw+0x50>
   28f74:	ebffba29 	bl	17820 <uspi_assertion_failed>
   28f78:	e5854020 	str	r4, [r5, #32]
   28f7c:	e8bd8070 	pop	{r4, r5, r6, pc}
   28f80:	e3a020c3 	mov	r2, #195	; 0xc3
   28f84:	e59f1008 	ldr	r1, [pc, #8]	; 28f94 <USBKeyboardDeviceRegisterKeyStatusHandlerRaw+0x4c>
   28f88:	e59f000c 	ldr	r0, [pc, #12]	; 28f9c <USBKeyboardDeviceRegisterKeyStatusHandlerRaw+0x54>
   28f8c:	ebffba23 	bl	17820 <uspi_assertion_failed>
   28f90:	eafffff0 	b	28f58 <USBKeyboardDeviceRegisterKeyStatusHandlerRaw+0x10>
   28f94:	00031f14 	.word	0x00031f14
   28f98:	00031fc4 	.word	0x00031fc4
   28f9c:	000306f0 	.word	0x000306f0

00028fa0 <USBKeyboardDeviceSetLEDs>:
   28fa0:	e92d40f0 	push	{r4, r5, r6, r7, lr}
   28fa4:	e2505000 	subs	r5, r0, #0
   28fa8:	e24dd01c 	sub	sp, sp, #28
   28fac:	e1a06001 	mov	r6, r1
   28fb0:	0a00001e 	beq	29030 <USBKeyboardDeviceSetLEDs+0x90>
   28fb4:	e28d4018 	add	r4, sp, #24
   28fb8:	e1a00005 	mov	r0, r5
   28fbc:	e5646004 	strb	r6, [r4, #-4]!
   28fc0:	ebffedf4 	bl	24798 <USBFunctionGetHost>
   28fc4:	e1a06000 	mov	r6, r0
   28fc8:	e1a00005 	mov	r0, r5
   28fcc:	ebffedda 	bl	2473c <USBFunctionGetEndpoint0>
   28fd0:	e1a07000 	mov	r7, r0
   28fd4:	e1a00005 	mov	r0, r5
   28fd8:	ebffeec1 	bl	24ae4 <USBFunctionGetInterfaceNumber>
   28fdc:	e3a02001 	mov	r2, #1
   28fe0:	e3a03c02 	mov	r3, #512	; 0x200
   28fe4:	e6ff0070 	uxth	r0, r0
   28fe8:	e98d0011 	stmib	sp, {r0, r4}
   28fec:	e58d200c 	str	r2, [sp, #12]
   28ff0:	e58d3000 	str	r3, [sp]
   28ff4:	e1a01007 	mov	r1, r7
   28ff8:	e1a00006 	mov	r0, r6
   28ffc:	e3a03009 	mov	r3, #9
   29000:	e3a02021 	mov	r2, #33	; 0x21
   29004:	ebffd687 	bl	1ea28 <DWHCIDeviceControlMessage>
   29008:	e3500000 	cmp	r0, #0
   2900c:	ba000001 	blt	29018 <USBKeyboardDeviceSetLEDs+0x78>
   29010:	e28dd01c 	add	sp, sp, #28
   29014:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
   29018:	e59f2024 	ldr	r2, [pc, #36]	; 29044 <USBKeyboardDeviceSetLEDs+0xa4>
   2901c:	e3a01002 	mov	r1, #2
   29020:	e59f0020 	ldr	r0, [pc, #32]	; 29048 <USBKeyboardDeviceSetLEDs+0xa8>
   29024:	ebff81e2 	bl	97b4 <LogWrite>
   29028:	e28dd01c 	add	sp, sp, #28
   2902c:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
   29030:	e3a020ca 	mov	r2, #202	; 0xca
   29034:	e59f1010 	ldr	r1, [pc, #16]	; 2904c <USBKeyboardDeviceSetLEDs+0xac>
   29038:	e59f0010 	ldr	r0, [pc, #16]	; 29050 <USBKeyboardDeviceSetLEDs+0xb0>
   2903c:	ebffb9f7 	bl	17820 <uspi_assertion_failed>
   29040:	eaffffdb 	b	28fb4 <USBKeyboardDeviceSetLEDs+0x14>
   29044:	00031fe0 	.word	0x00031fe0
   29048:	00031f0c 	.word	0x00031f0c
   2904c:	00031f14 	.word	0x00031f14
   29050:	000306f0 	.word	0x000306f0

00029054 <USBKeyboardDeviceConfigure>:
   29054:	e92d40f0 	push	{r4, r5, r6, r7, lr}
   29058:	e2504000 	subs	r4, r0, #0
   2905c:	e24dd024 	sub	sp, sp, #36	; 0x24
   29060:	0a000078 	beq	29248 <USBKeyboardDeviceConfigure+0x1f4>
   29064:	e1a00004 	mov	r0, r4
   29068:	ebffed88 	bl	24690 <USBFunctionGetNumEndpoints>
   2906c:	e2505000 	subs	r5, r0, #0
   29070:	0a00005e 	beq	291f0 <USBKeyboardDeviceConfigure+0x19c>
   29074:	e3a01005 	mov	r1, #5
   29078:	e1a00004 	mov	r0, r4
   2907c:	ebffee15 	bl	248d8 <USBFunctionGetDescriptor>
   29080:	e2505000 	subs	r5, r0, #0
   29084:	0a000019 	beq	290f0 <USBKeyboardDeviceConfigure+0x9c>
   29088:	e1d530d2 	ldrsb	r3, [r5, #2]
   2908c:	e3530000 	cmp	r3, #0
   29090:	aafffff7 	bge	29074 <USBKeyboardDeviceConfigure+0x20>
   29094:	e5d53003 	ldrb	r3, [r5, #3]
   29098:	e203303f 	and	r3, r3, #63	; 0x3f
   2909c:	e3530003 	cmp	r3, #3
   290a0:	1afffff3 	bne	29074 <USBKeyboardDeviceConfigure+0x20>
   290a4:	e5943010 	ldr	r3, [r4, #16]
   290a8:	e3530000 	cmp	r3, #0
   290ac:	0a000003 	beq	290c0 <USBKeyboardDeviceConfigure+0x6c>
   290b0:	e3a02072 	mov	r2, #114	; 0x72
   290b4:	e59f11a0 	ldr	r1, [pc, #416]	; 2925c <USBKeyboardDeviceConfigure+0x208>
   290b8:	e59f01a0 	ldr	r0, [pc, #416]	; 29260 <USBKeyboardDeviceConfigure+0x20c>
   290bc:	ebffb9d7 	bl	17820 <uspi_assertion_failed>
   290c0:	e3a00018 	mov	r0, #24
   290c4:	ebffb9ae 	bl	17784 <malloc>
   290c8:	e3500000 	cmp	r0, #0
   290cc:	e1a06000 	mov	r6, r0
   290d0:	e5840010 	str	r0, [r4, #16]
   290d4:	0a00004b 	beq	29208 <USBKeyboardDeviceConfigure+0x1b4>
   290d8:	e1a00004 	mov	r0, r4
   290dc:	ebffed82 	bl	246ec <USBFunctionGetDevice>
   290e0:	e1a02005 	mov	r2, r5
   290e4:	e1a01000 	mov	r1, r0
   290e8:	e1a00006 	mov	r0, r6
   290ec:	ebffe5cf 	bl	22830 <USBEndpoint2>
   290f0:	e5945010 	ldr	r5, [r4, #16]
   290f4:	e1a00004 	mov	r0, r4
   290f8:	e3550000 	cmp	r5, #0
   290fc:	0a00004c 	beq	29234 <USBKeyboardDeviceConfigure+0x1e0>
   29100:	ebffedbb 	bl	247f4 <USBFunctionConfigure>
   29104:	e2505000 	subs	r5, r0, #0
   29108:	0a000031 	beq	291d4 <USBKeyboardDeviceConfigure+0x180>
   2910c:	e1a00004 	mov	r0, r4
   29110:	ebffeda0 	bl	24798 <USBFunctionGetHost>
   29114:	e1a06000 	mov	r6, r0
   29118:	e1a00004 	mov	r0, r4
   2911c:	ebffed86 	bl	2473c <USBFunctionGetEndpoint0>
   29120:	e1a07000 	mov	r7, r0
   29124:	e1a00004 	mov	r0, r4
   29128:	ebffee6d 	bl	24ae4 <USBFunctionGetInterfaceNumber>
   2912c:	e3a05000 	mov	r5, #0
   29130:	e6ff0070 	uxth	r0, r0
   29134:	e58d0004 	str	r0, [sp, #4]
   29138:	e1a01007 	mov	r1, r7
   2913c:	e1a00006 	mov	r0, r6
   29140:	e58d500c 	str	r5, [sp, #12]
   29144:	e58d5008 	str	r5, [sp, #8]
   29148:	e58d5000 	str	r5, [sp]
   2914c:	e3a0300b 	mov	r3, #11
   29150:	e3a02021 	mov	r2, #33	; 0x21
   29154:	ebffd633 	bl	1ea28 <DWHCIDeviceControlMessage>
   29158:	e1500005 	cmp	r0, r5
   2915c:	ba00002f 	blt	29220 <USBKeyboardDeviceConfigure+0x1cc>
   29160:	e5d41460 	ldrb	r1, [r4, #1120]	; 0x460
   29164:	e1a00004 	mov	r0, r4
   29168:	ebffff8c 	bl	28fa0 <USBKeyboardDeviceSetLEDs>
   2916c:	e28d0014 	add	r0, sp, #20
   29170:	ebfff5d0 	bl	268b8 <String>
   29174:	e59f30e8 	ldr	r3, [pc, #232]	; 29264 <USBKeyboardDeviceConfigure+0x210>
   29178:	e59f10e8 	ldr	r1, [pc, #232]	; 29268 <USBKeyboardDeviceConfigure+0x214>
   2917c:	e5932000 	ldr	r2, [r3]
   29180:	e28d0014 	add	r0, sp, #20
   29184:	e282c001 	add	ip, r2, #1
   29188:	e583c000 	str	ip, [r3]
   2918c:	ebfff88a 	bl	273bc <StringFormat>
   29190:	ebffeb7a 	bl	23f80 <DeviceNameServiceGet>
   29194:	e1a06000 	mov	r6, r0
   29198:	e28d0014 	add	r0, sp, #20
   2919c:	ebfff5f8 	bl	26984 <StringGet>
   291a0:	e1a03005 	mov	r3, r5
   291a4:	e1a01000 	mov	r1, r0
   291a8:	e1a02004 	mov	r2, r4
   291ac:	e1a00006 	mov	r0, r6
   291b0:	ebffeaf6 	bl	23d90 <DeviceNameServiceAddDevice>
   291b4:	e28d0014 	add	r0, sp, #20
   291b8:	ebfff5e0 	bl	26940 <_String>
   291bc:	e1a00004 	mov	r0, r4
   291c0:	ebfffe27 	bl	28a64 <USBKeyboardDeviceStartRequest>
   291c4:	e1a05000 	mov	r5, r0
   291c8:	e1a00005 	mov	r0, r5
   291cc:	e28dd024 	add	sp, sp, #36	; 0x24
   291d0:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
   291d4:	e59f2090 	ldr	r2, [pc, #144]	; 2926c <USBKeyboardDeviceConfigure+0x218>
   291d8:	e3a01001 	mov	r1, #1
   291dc:	e59f008c 	ldr	r0, [pc, #140]	; 29270 <USBKeyboardDeviceConfigure+0x21c>
   291e0:	ebff8173 	bl	97b4 <LogWrite>
   291e4:	e1a00005 	mov	r0, r5
   291e8:	e28dd024 	add	sp, sp, #36	; 0x24
   291ec:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
   291f0:	e1a00004 	mov	r0, r4
   291f4:	e59f1074 	ldr	r1, [pc, #116]	; 29270 <USBKeyboardDeviceConfigure+0x21c>
   291f8:	ebffedd0 	bl	24940 <USBFunctionConfigurationError>
   291fc:	e1a00005 	mov	r0, r5
   29200:	e28dd024 	add	sp, sp, #36	; 0x24
   29204:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
   29208:	e3a02074 	mov	r2, #116	; 0x74
   2920c:	e59f1048 	ldr	r1, [pc, #72]	; 2925c <USBKeyboardDeviceConfigure+0x208>
   29210:	e59f005c 	ldr	r0, [pc, #92]	; 29274 <USBKeyboardDeviceConfigure+0x220>
   29214:	ebffb981 	bl	17820 <uspi_assertion_failed>
   29218:	e5946010 	ldr	r6, [r4, #16]
   2921c:	eaffffad 	b	290d8 <USBKeyboardDeviceConfigure+0x84>
   29220:	e59f2050 	ldr	r2, [pc, #80]	; 29278 <USBKeyboardDeviceConfigure+0x224>
   29224:	e3a01001 	mov	r1, #1
   29228:	e59f0040 	ldr	r0, [pc, #64]	; 29270 <USBKeyboardDeviceConfigure+0x21c>
   2922c:	ebff8160 	bl	97b4 <LogWrite>
   29230:	eaffffeb 	b	291e4 <USBKeyboardDeviceConfigure+0x190>
   29234:	e59f1034 	ldr	r1, [pc, #52]	; 29270 <USBKeyboardDeviceConfigure+0x21c>
   29238:	ebffedc0 	bl	24940 <USBFunctionConfigurationError>
   2923c:	e1a00005 	mov	r0, r5
   29240:	e28dd024 	add	sp, sp, #36	; 0x24
   29244:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
   29248:	e3a0205f 	mov	r2, #95	; 0x5f
   2924c:	e59f1008 	ldr	r1, [pc, #8]	; 2925c <USBKeyboardDeviceConfigure+0x208>
   29250:	e59f0024 	ldr	r0, [pc, #36]	; 2927c <USBKeyboardDeviceConfigure+0x228>
   29254:	ebffb971 	bl	17820 <uspi_assertion_failed>
   29258:	eaffff81 	b	29064 <USBKeyboardDeviceConfigure+0x10>
   2925c:	00031f14 	.word	0x00031f14
   29260:	00031ff0 	.word	0x00031ff0
   29264:	00042358 	.word	0x00042358
   29268:	0003202c 	.word	0x0003202c
   2926c:	0003171c 	.word	0x0003171c
   29270:	00031f0c 	.word	0x00031f0c
   29274:	00031f24 	.word	0x00031f24
   29278:	00032010 	.word	0x00032010
   2927c:	000306f0 	.word	0x000306f0

00029280 <USBKeyboardDeviceUpdateLEDs>:
   29280:	e92d4070 	push	{r4, r5, r6, lr}
   29284:	e2504000 	subs	r4, r0, #0
   29288:	0a00000a 	beq	292b8 <USBKeyboardDeviceUpdateLEDs+0x38>
   2928c:	e2840054 	add	r0, r4, #84	; 0x54
   29290:	eb000b57 	bl	2bff4 <KeyMapGetLEDStatus>
   29294:	e5d43460 	ldrb	r3, [r4, #1120]	; 0x460
   29298:	e1a05000 	mov	r5, r0
   2929c:	e1530000 	cmp	r3, r0
   292a0:	08bd8070 	popeq	{r4, r5, r6, pc}
   292a4:	e1a01000 	mov	r1, r0
   292a8:	e1a00004 	mov	r0, r4
   292ac:	ebffff3b 	bl	28fa0 <USBKeyboardDeviceSetLEDs>
   292b0:	e5c45460 	strb	r5, [r4, #1120]	; 0x460
   292b4:	e8bd8070 	pop	{r4, r5, r6, pc}
   292b8:	e3a020b7 	mov	r2, #183	; 0xb7
   292bc:	e59f1008 	ldr	r1, [pc, #8]	; 292cc <USBKeyboardDeviceUpdateLEDs+0x4c>
   292c0:	e59f0008 	ldr	r0, [pc, #8]	; 292d0 <USBKeyboardDeviceUpdateLEDs+0x50>
   292c4:	ebffb955 	bl	17820 <uspi_assertion_failed>
   292c8:	eaffffef 	b	2928c <USBKeyboardDeviceUpdateLEDs+0xc>
   292cc:	00031f14 	.word	0x00031f14
   292d0:	000306f0 	.word	0x000306f0

000292d4 <DWHCIRootPort>:
   292d4:	e92d4070 	push	{r4, r5, r6, lr}
   292d8:	e2504000 	subs	r4, r0, #0
   292dc:	e1a05001 	mov	r5, r1
   292e0:	0a000009 	beq	2930c <DWHCIRootPort+0x38>
   292e4:	e3a03000 	mov	r3, #0
   292e8:	e1550003 	cmp	r5, r3
   292ec:	e5845000 	str	r5, [r4]
   292f0:	e5843004 	str	r3, [r4, #4]
   292f4:	18bd8070 	popne	{r4, r5, r6, pc}
   292f8:	e3a02024 	mov	r2, #36	; 0x24
   292fc:	e8bd4070 	pop	{r4, r5, r6, lr}
   29300:	e59f1018 	ldr	r1, [pc, #24]	; 29320 <DWHCIRootPort+0x4c>
   29304:	e59f0018 	ldr	r0, [pc, #24]	; 29324 <DWHCIRootPort+0x50>
   29308:	eaffb944 	b	17820 <uspi_assertion_failed>
   2930c:	e3a0201f 	mov	r2, #31
   29310:	e59f1008 	ldr	r1, [pc, #8]	; 29320 <DWHCIRootPort+0x4c>
   29314:	e59f000c 	ldr	r0, [pc, #12]	; 29328 <DWHCIRootPort+0x54>
   29318:	ebffb940 	bl	17820 <uspi_assertion_failed>
   2931c:	eafffff0 	b	292e4 <DWHCIRootPort+0x10>
   29320:	0003203c 	.word	0x0003203c
   29324:	00030e30 	.word	0x00030e30
   29328:	000306f0 	.word	0x000306f0

0002932c <_DWHCIRootPort>:
   2932c:	e92d4010 	push	{r4, lr}
   29330:	e2504000 	subs	r4, r0, #0
   29334:	0a00000a 	beq	29364 <_DWHCIRootPort+0x38>
   29338:	e5940004 	ldr	r0, [r4, #4]
   2933c:	e3500000 	cmp	r0, #0
   29340:	0a000004 	beq	29358 <_DWHCIRootPort+0x2c>
   29344:	ebffe044 	bl	2145c <_USBDevice>
   29348:	e5940004 	ldr	r0, [r4, #4]
   2934c:	ebffb90d 	bl	17788 <free>
   29350:	e3a03000 	mov	r3, #0
   29354:	e5843004 	str	r3, [r4, #4]
   29358:	e3a03000 	mov	r3, #0
   2935c:	e5843000 	str	r3, [r4]
   29360:	e8bd8010 	pop	{r4, pc}
   29364:	e3a02029 	mov	r2, #41	; 0x29
   29368:	e59f1008 	ldr	r1, [pc, #8]	; 29378 <_DWHCIRootPort+0x4c>
   2936c:	e59f0008 	ldr	r0, [pc, #8]	; 2937c <_DWHCIRootPort+0x50>
   29370:	ebffb92a 	bl	17820 <uspi_assertion_failed>
   29374:	eaffffef 	b	29338 <_DWHCIRootPort+0xc>
   29378:	0003203c 	.word	0x0003203c
   2937c:	000306f0 	.word	0x000306f0

00029380 <DWHCIRootPortInitialize>:
   29380:	e92d40f0 	push	{r4, r5, r6, r7, lr}
   29384:	e2504000 	subs	r4, r0, #0
   29388:	e24dd00c 	sub	sp, sp, #12
   2938c:	0a000051 	beq	294d8 <DWHCIRootPortInitialize+0x158>
   29390:	e5940000 	ldr	r0, [r4]
   29394:	e3500000 	cmp	r0, #0
   29398:	0a000048 	beq	294c0 <DWHCIRootPortInitialize+0x140>
   2939c:	ebffda50 	bl	1fce4 <DWHCIDeviceGetPortSpeed>
   293a0:	e3500003 	cmp	r0, #3
   293a4:	e1a05000 	mov	r5, r0
   293a8:	0a00003c 	beq	294a0 <DWHCIRootPortInitialize+0x120>
   293ac:	e5943004 	ldr	r3, [r4, #4]
   293b0:	e3530000 	cmp	r3, #0
   293b4:	0a000003 	beq	293c8 <DWHCIRootPortInitialize+0x48>
   293b8:	e3a02043 	mov	r2, #67	; 0x43
   293bc:	e59f1140 	ldr	r1, [pc, #320]	; 29504 <DWHCIRootPortInitialize+0x184>
   293c0:	e59f0140 	ldr	r0, [pc, #320]	; 29508 <DWHCIRootPortInitialize+0x188>
   293c4:	ebffb915 	bl	17820 <uspi_assertion_failed>
   293c8:	e3a00060 	mov	r0, #96	; 0x60
   293cc:	ebffb8ec 	bl	17784 <malloc>
   293d0:	e3500000 	cmp	r0, #0
   293d4:	e5840004 	str	r0, [r4, #4]
   293d8:	0a000043 	beq	294ec <DWHCIRootPortInitialize+0x16c>
   293dc:	e3a06000 	mov	r6, #0
   293e0:	e3a07001 	mov	r7, #1
   293e4:	e5941000 	ldr	r1, [r4]
   293e8:	e1a02005 	mov	r2, r5
   293ec:	e1a03006 	mov	r3, r6
   293f0:	e1cd60f0 	strd	r6, [sp]
   293f4:	ebffdfc8 	bl	2131c <USBDevice>
   293f8:	e5940004 	ldr	r0, [r4, #4]
   293fc:	ebffe21e 	bl	21c7c <USBDeviceInitialize>
   29400:	e2505000 	subs	r5, r0, #0
   29404:	e5940004 	ldr	r0, [r4, #4]
   29408:	0a00001d 	beq	29484 <DWHCIRootPortInitialize+0x104>
   2940c:	ebffe3dd 	bl	22388 <USBDeviceConfigure>
   29410:	e2505000 	subs	r5, r0, #0
   29414:	0a000015 	beq	29470 <DWHCIRootPortInitialize+0xf0>
   29418:	e59f20ec 	ldr	r2, [pc, #236]	; 2950c <DWHCIRootPortInitialize+0x18c>
   2941c:	e3a01004 	mov	r1, #4
   29420:	e59f00e8 	ldr	r0, [pc, #232]	; 29510 <DWHCIRootPortInitialize+0x190>
   29424:	ebff80e2 	bl	97b4 <LogWrite>
   29428:	e5940000 	ldr	r0, [r4]
   2942c:	ebffda4b 	bl	1fd60 <DWHCIDeviceOvercurrentDetected>
   29430:	e3500000 	cmp	r0, #0
   29434:	01a05007 	moveq	r5, r7
   29438:	0a000015 	beq	29494 <DWHCIRootPortInitialize+0x114>
   2943c:	e1a01007 	mov	r1, r7
   29440:	e59f20cc 	ldr	r2, [pc, #204]	; 29514 <DWHCIRootPortInitialize+0x194>
   29444:	e59f00c4 	ldr	r0, [pc, #196]	; 29510 <DWHCIRootPortInitialize+0x190>
   29448:	ebff80d9 	bl	97b4 <LogWrite>
   2944c:	e5940000 	ldr	r0, [r4]
   29450:	ebffda5f 	bl	1fdd4 <DWHCIDeviceDisableRootPort>
   29454:	e5940004 	ldr	r0, [r4, #4]
   29458:	ebffdfff 	bl	2145c <_USBDevice>
   2945c:	e5940004 	ldr	r0, [r4, #4]
   29460:	ebffb8c8 	bl	17788 <free>
   29464:	e1a05006 	mov	r5, r6
   29468:	e5846004 	str	r6, [r4, #4]
   2946c:	ea000008 	b	29494 <DWHCIRootPortInitialize+0x114>
   29470:	e59f0098 	ldr	r0, [pc, #152]	; 29510 <DWHCIRootPortInitialize+0x190>
   29474:	e1a01007 	mov	r1, r7
   29478:	e59f2098 	ldr	r2, [pc, #152]	; 29518 <DWHCIRootPortInitialize+0x198>
   2947c:	ebff80cc 	bl	97b4 <LogWrite>
   29480:	e5940004 	ldr	r0, [r4, #4]
   29484:	ebffdff4 	bl	2145c <_USBDevice>
   29488:	e5940004 	ldr	r0, [r4, #4]
   2948c:	ebffb8bd 	bl	17788 <free>
   29490:	e5845004 	str	r5, [r4, #4]
   29494:	e1a00005 	mov	r0, r5
   29498:	e28dd00c 	add	sp, sp, #12
   2949c:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
   294a0:	e3a05000 	mov	r5, #0
   294a4:	e59f2070 	ldr	r2, [pc, #112]	; 2951c <DWHCIRootPortInitialize+0x19c>
   294a8:	e3a01001 	mov	r1, #1
   294ac:	e59f005c 	ldr	r0, [pc, #92]	; 29510 <DWHCIRootPortInitialize+0x190>
   294b0:	ebff80bf 	bl	97b4 <LogWrite>
   294b4:	e1a00005 	mov	r0, r5
   294b8:	e28dd00c 	add	sp, sp, #12
   294bc:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
   294c0:	e59f0058 	ldr	r0, [pc, #88]	; 29520 <DWHCIRootPortInitialize+0x1a0>
   294c4:	e3a02039 	mov	r2, #57	; 0x39
   294c8:	e59f1034 	ldr	r1, [pc, #52]	; 29504 <DWHCIRootPortInitialize+0x184>
   294cc:	ebffb8d3 	bl	17820 <uspi_assertion_failed>
   294d0:	e5940000 	ldr	r0, [r4]
   294d4:	eaffffb0 	b	2939c <DWHCIRootPortInitialize+0x1c>
   294d8:	e3a02037 	mov	r2, #55	; 0x37
   294dc:	e59f1020 	ldr	r1, [pc, #32]	; 29504 <DWHCIRootPortInitialize+0x184>
   294e0:	e59f003c 	ldr	r0, [pc, #60]	; 29524 <DWHCIRootPortInitialize+0x1a4>
   294e4:	ebffb8cd 	bl	17820 <uspi_assertion_failed>
   294e8:	eaffffa8 	b	29390 <DWHCIRootPortInitialize+0x10>
   294ec:	e59f0034 	ldr	r0, [pc, #52]	; 29528 <DWHCIRootPortInitialize+0x1a8>
   294f0:	e3a02045 	mov	r2, #69	; 0x45
   294f4:	e59f1008 	ldr	r1, [pc, #8]	; 29504 <DWHCIRootPortInitialize+0x184>
   294f8:	ebffb8c8 	bl	17820 <uspi_assertion_failed>
   294fc:	e5940004 	ldr	r0, [r4, #4]
   29500:	eaffffb5 	b	293dc <DWHCIRootPortInitialize+0x5c>
   29504:	0003203c 	.word	0x0003203c
   29508:	00032068 	.word	0x00032068
   2950c:	00032098 	.word	0x00032098
   29510:	00032034 	.word	0x00032034
   29514:	000320ac 	.word	0x000320ac
   29518:	00032080 	.word	0x00032080
   2951c:	0003204c 	.word	0x0003204c
   29520:	00030e30 	.word	0x00030e30
   29524:	000306f0 	.word	0x000306f0
   29528:	00030d90 	.word	0x00030d90

0002952c <USBMouseDeviceStartRequest>:
   2952c:	e92d4070 	push	{r4, r5, r6, lr}
   29530:	e2504000 	subs	r4, r0, #0
   29534:	e24dd008 	sub	sp, sp, #8
   29538:	0a00001d 	beq	295b4 <USBMouseDeviceStartRequest+0x88>
   2953c:	e5943010 	ldr	r3, [r4, #16]
   29540:	e3530000 	cmp	r3, #0
   29544:	0a000021 	beq	295d0 <USBMouseDeviceStartRequest+0xa4>
   29548:	e5942044 	ldr	r2, [r4, #68]	; 0x44
   2954c:	e3520000 	cmp	r2, #0
   29550:	0a000011 	beq	2959c <USBMouseDeviceStartRequest+0x70>
   29554:	e3a06000 	mov	r6, #0
   29558:	e2845020 	add	r5, r4, #32
   2955c:	e5941010 	ldr	r1, [r4, #16]
   29560:	e1a00005 	mov	r0, r5
   29564:	e58d6000 	str	r6, [sp]
   29568:	e3a03003 	mov	r3, #3
   2956c:	ebffe62b 	bl	22e20 <USBRequest>
   29570:	e1a03004 	mov	r3, r4
   29574:	e1a02006 	mov	r2, r6
   29578:	e1a00005 	mov	r0, r5
   2957c:	e59f1060 	ldr	r1, [pc, #96]	; 295e4 <USBMouseDeviceStartRequest+0xb8>
   29580:	ebffe6f9 	bl	2316c <USBRequestSetCompletionRoutine>
   29584:	e1a00004 	mov	r0, r4
   29588:	ebffec82 	bl	24798 <USBFunctionGetHost>
   2958c:	e1a01005 	mov	r1, r5
   29590:	e28dd008 	add	sp, sp, #8
   29594:	e8bd4070 	pop	{r4, r5, r6, lr}
   29598:	eaffd411 	b	1e5e4 <DWHCIDeviceSubmitAsyncRequest>
   2959c:	e3a020b7 	mov	r2, #183	; 0xb7
   295a0:	e59f1040 	ldr	r1, [pc, #64]	; 295e8 <USBMouseDeviceStartRequest+0xbc>
   295a4:	e59f0040 	ldr	r0, [pc, #64]	; 295ec <USBMouseDeviceStartRequest+0xc0>
   295a8:	ebffb89c 	bl	17820 <uspi_assertion_failed>
   295ac:	e5942044 	ldr	r2, [r4, #68]	; 0x44
   295b0:	eaffffe7 	b	29554 <USBMouseDeviceStartRequest+0x28>
   295b4:	e3a020b4 	mov	r2, #180	; 0xb4
   295b8:	e59f1028 	ldr	r1, [pc, #40]	; 295e8 <USBMouseDeviceStartRequest+0xbc>
   295bc:	e59f002c 	ldr	r0, [pc, #44]	; 295f0 <USBMouseDeviceStartRequest+0xc4>
   295c0:	ebffb896 	bl	17820 <uspi_assertion_failed>
   295c4:	e5943010 	ldr	r3, [r4, #16]
   295c8:	e3530000 	cmp	r3, #0
   295cc:	1affffdd 	bne	29548 <USBMouseDeviceStartRequest+0x1c>
   295d0:	e3a020b6 	mov	r2, #182	; 0xb6
   295d4:	e59f100c 	ldr	r1, [pc, #12]	; 295e8 <USBMouseDeviceStartRequest+0xbc>
   295d8:	e59f0014 	ldr	r0, [pc, #20]	; 295f4 <USBMouseDeviceStartRequest+0xc8>
   295dc:	ebffb88f 	bl	17820 <uspi_assertion_failed>
   295e0:	eaffffd8 	b	29548 <USBMouseDeviceStartRequest+0x1c>
   295e4:	000298f4 	.word	0x000298f4
   295e8:	000320cc 	.word	0x000320cc
   295ec:	00031f44 	.word	0x00031f44
   295f0:	000306f0 	.word	0x000306f0
   295f4:	00031f24 	.word	0x00031f24

000295f8 <USBMouseDeviceConfigure>:
   295f8:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   295fc:	e2504000 	subs	r4, r0, #0
   29600:	e24dd020 	sub	sp, sp, #32
   29604:	0a000064 	beq	2979c <USBMouseDeviceConfigure+0x1a4>
   29608:	e1a00004 	mov	r0, r4
   2960c:	ebffec1f 	bl	24690 <USBFunctionGetNumEndpoints>
   29610:	e2505000 	subs	r5, r0, #0
   29614:	0a000053 	beq	29768 <USBMouseDeviceConfigure+0x170>
   29618:	e3a01021 	mov	r1, #33	; 0x21
   2961c:	e1a00004 	mov	r0, r4
   29620:	ebffecac 	bl	248d8 <USBFunctionGetDescriptor>
   29624:	e2506000 	subs	r6, r0, #0
   29628:	0a000054 	beq	29780 <USBMouseDeviceConfigure+0x188>
   2962c:	e5d63007 	ldrb	r3, [r6, #7]
   29630:	e5d62008 	ldrb	r2, [r6, #8]
   29634:	e1933402 	orrs	r3, r3, r2, lsl #8
   29638:	0a000050 	beq	29780 <USBMouseDeviceConfigure+0x188>
   2963c:	e3a01005 	mov	r1, #5
   29640:	e1a00004 	mov	r0, r4
   29644:	ebffeca3 	bl	248d8 <USBFunctionGetDescriptor>
   29648:	e2505000 	subs	r5, r0, #0
   2964c:	0a000019 	beq	296b8 <USBMouseDeviceConfigure+0xc0>
   29650:	e1d530d2 	ldrsb	r3, [r5, #2]
   29654:	e3530000 	cmp	r3, #0
   29658:	aafffff7 	bge	2963c <USBMouseDeviceConfigure+0x44>
   2965c:	e5d53003 	ldrb	r3, [r5, #3]
   29660:	e203303f 	and	r3, r3, #63	; 0x3f
   29664:	e3530003 	cmp	r3, #3
   29668:	1afffff3 	bne	2963c <USBMouseDeviceConfigure+0x44>
   2966c:	e5943010 	ldr	r3, [r4, #16]
   29670:	e3530000 	cmp	r3, #0
   29674:	0a000003 	beq	29688 <USBMouseDeviceConfigure+0x90>
   29678:	e3a0206e 	mov	r2, #110	; 0x6e
   2967c:	e59f1244 	ldr	r1, [pc, #580]	; 298c8 <USBMouseDeviceConfigure+0x2d0>
   29680:	e59f0244 	ldr	r0, [pc, #580]	; 298cc <USBMouseDeviceConfigure+0x2d4>
   29684:	ebffb865 	bl	17820 <uspi_assertion_failed>
   29688:	e3a00018 	mov	r0, #24
   2968c:	ebffb83c 	bl	17784 <malloc>
   29690:	e3500000 	cmp	r0, #0
   29694:	e1a07000 	mov	r7, r0
   29698:	e5840010 	str	r0, [r4, #16]
   2969c:	0a000079 	beq	29888 <USBMouseDeviceConfigure+0x290>
   296a0:	e1a00004 	mov	r0, r4
   296a4:	ebffec10 	bl	246ec <USBFunctionGetDevice>
   296a8:	e1a02005 	mov	r2, r5
   296ac:	e1a01000 	mov	r1, r0
   296b0:	e1a00007 	mov	r0, r7
   296b4:	ebffe45d 	bl	22830 <USBEndpoint2>
   296b8:	e5945010 	ldr	r5, [r4, #16]
   296bc:	e3550000 	cmp	r5, #0
   296c0:	0a000028 	beq	29768 <USBMouseDeviceConfigure+0x170>
   296c4:	e5d60007 	ldrb	r0, [r6, #7]
   296c8:	e5d63008 	ldrb	r3, [r6, #8]
   296cc:	e1800403 	orr	r0, r0, r3, lsl #8
   296d0:	e1c401b8 	strh	r0, [r4, #24]
   296d4:	ebffb82a 	bl	17784 <malloc>
   296d8:	e3500000 	cmp	r0, #0
   296dc:	e584001c 	str	r0, [r4, #28]
   296e0:	0a00006e 	beq	298a0 <USBMouseDeviceConfigure+0x2a8>
   296e4:	e1a00004 	mov	r0, r4
   296e8:	ebffec2a 	bl	24798 <USBFunctionGetHost>
   296ec:	e1a07000 	mov	r7, r0
   296f0:	e1a00004 	mov	r0, r4
   296f4:	ebffec10 	bl	2473c <USBFunctionGetEndpoint0>
   296f8:	e1a08000 	mov	r8, r0
   296fc:	e1a00004 	mov	r0, r4
   29700:	e5d65006 	ldrb	r5, [r6, #6]
   29704:	ebffecf6 	bl	24ae4 <USBFunctionGetInterfaceNumber>
   29708:	e1d421b8 	ldrh	r2, [r4, #24]
   2970c:	e6ff3070 	uxth	r3, r0
   29710:	e58d200c 	str	r2, [sp, #12]
   29714:	e594201c 	ldr	r2, [r4, #28]
   29718:	e1a05405 	lsl	r5, r5, #8
   2971c:	e58d2008 	str	r2, [sp, #8]
   29720:	e58d3004 	str	r3, [sp, #4]
   29724:	e1a01008 	mov	r1, r8
   29728:	e3a03006 	mov	r3, #6
   2972c:	e1a00007 	mov	r0, r7
   29730:	e58d5000 	str	r5, [sp]
   29734:	e3a02081 	mov	r2, #129	; 0x81
   29738:	ebffd4ba 	bl	1ea28 <DWHCIDeviceControlMessage>
   2973c:	e1d431b8 	ldrh	r3, [r4, #24]
   29740:	e1500003 	cmp	r0, r3
   29744:	0a000019 	beq	297b0 <USBMouseDeviceConfigure+0x1b8>
   29748:	e3a05000 	mov	r5, #0
   2974c:	e59f217c 	ldr	r2, [pc, #380]	; 298d0 <USBMouseDeviceConfigure+0x2d8>
   29750:	e3a01001 	mov	r1, #1
   29754:	e59f0178 	ldr	r0, [pc, #376]	; 298d4 <USBMouseDeviceConfigure+0x2dc>
   29758:	ebff8015 	bl	97b4 <LogWrite>
   2975c:	e1a00005 	mov	r0, r5
   29760:	e28dd020 	add	sp, sp, #32
   29764:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   29768:	e1a00004 	mov	r0, r4
   2976c:	e59f1160 	ldr	r1, [pc, #352]	; 298d4 <USBMouseDeviceConfigure+0x2dc>
   29770:	ebffec72 	bl	24940 <USBFunctionConfigurationError>
   29774:	e1a00005 	mov	r0, r5
   29778:	e28dd020 	add	sp, sp, #32
   2977c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   29780:	e3a05000 	mov	r5, #0
   29784:	e1a00004 	mov	r0, r4
   29788:	e59f1144 	ldr	r1, [pc, #324]	; 298d4 <USBMouseDeviceConfigure+0x2dc>
   2978c:	ebffec6b 	bl	24940 <USBFunctionConfigurationError>
   29790:	e1a00005 	mov	r0, r5
   29794:	e28dd020 	add	sp, sp, #32
   29798:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   2979c:	e3a02051 	mov	r2, #81	; 0x51
   297a0:	e59f1120 	ldr	r1, [pc, #288]	; 298c8 <USBMouseDeviceConfigure+0x2d0>
   297a4:	e59f012c 	ldr	r0, [pc, #300]	; 298d8 <USBMouseDeviceConfigure+0x2e0>
   297a8:	ebffb81c 	bl	17820 <uspi_assertion_failed>
   297ac:	eaffff95 	b	29608 <USBMouseDeviceConfigure+0x10>
   297b0:	e1a00004 	mov	r0, r4
   297b4:	ebffec0e 	bl	247f4 <USBFunctionConfigure>
   297b8:	e2505000 	subs	r5, r0, #0
   297bc:	0a00002c 	beq	29874 <USBMouseDeviceConfigure+0x27c>
   297c0:	e1a00004 	mov	r0, r4
   297c4:	ebffebf3 	bl	24798 <USBFunctionGetHost>
   297c8:	e1a06000 	mov	r6, r0
   297cc:	e1a00004 	mov	r0, r4
   297d0:	ebffebd9 	bl	2473c <USBFunctionGetEndpoint0>
   297d4:	e1a07000 	mov	r7, r0
   297d8:	e1a00004 	mov	r0, r4
   297dc:	ebffecc0 	bl	24ae4 <USBFunctionGetInterfaceNumber>
   297e0:	e3a05000 	mov	r5, #0
   297e4:	e6ff0070 	uxth	r0, r0
   297e8:	e58d0004 	str	r0, [sp, #4]
   297ec:	e1a01007 	mov	r1, r7
   297f0:	e1a00006 	mov	r0, r6
   297f4:	e58d500c 	str	r5, [sp, #12]
   297f8:	e58d5008 	str	r5, [sp, #8]
   297fc:	e58d5000 	str	r5, [sp]
   29800:	e3a0300b 	mov	r3, #11
   29804:	e3a02021 	mov	r2, #33	; 0x21
   29808:	ebffd486 	bl	1ea28 <DWHCIDeviceControlMessage>
   2980c:	e1500005 	cmp	r0, r5
   29810:	ba000027 	blt	298b4 <USBMouseDeviceConfigure+0x2bc>
   29814:	e28d0014 	add	r0, sp, #20
   29818:	ebfff426 	bl	268b8 <String>
   2981c:	e59f30b8 	ldr	r3, [pc, #184]	; 298dc <USBMouseDeviceConfigure+0x2e4>
   29820:	e59f10b8 	ldr	r1, [pc, #184]	; 298e0 <USBMouseDeviceConfigure+0x2e8>
   29824:	e5932000 	ldr	r2, [r3]
   29828:	e28d0014 	add	r0, sp, #20
   2982c:	e282c001 	add	ip, r2, #1
   29830:	e583c000 	str	ip, [r3]
   29834:	ebfff6e0 	bl	273bc <StringFormat>
   29838:	ebffe9d0 	bl	23f80 <DeviceNameServiceGet>
   2983c:	e1a06000 	mov	r6, r0
   29840:	e28d0014 	add	r0, sp, #20
   29844:	ebfff44e 	bl	26984 <StringGet>
   29848:	e1a03005 	mov	r3, r5
   2984c:	e1a01000 	mov	r1, r0
   29850:	e1a02004 	mov	r2, r4
   29854:	e1a00006 	mov	r0, r6
   29858:	ebffe94c 	bl	23d90 <DeviceNameServiceAddDevice>
   2985c:	e28d0014 	add	r0, sp, #20
   29860:	ebfff436 	bl	26940 <_String>
   29864:	e1a00004 	mov	r0, r4
   29868:	ebffff2f 	bl	2952c <USBMouseDeviceStartRequest>
   2986c:	e1a05000 	mov	r5, r0
   29870:	eaffffbf 	b	29774 <USBMouseDeviceConfigure+0x17c>
   29874:	e59f2068 	ldr	r2, [pc, #104]	; 298e4 <USBMouseDeviceConfigure+0x2ec>
   29878:	e3a01001 	mov	r1, #1
   2987c:	e59f0050 	ldr	r0, [pc, #80]	; 298d4 <USBMouseDeviceConfigure+0x2dc>
   29880:	ebff7fcb 	bl	97b4 <LogWrite>
   29884:	eaffffba 	b	29774 <USBMouseDeviceConfigure+0x17c>
   29888:	e3a02070 	mov	r2, #112	; 0x70
   2988c:	e59f1034 	ldr	r1, [pc, #52]	; 298c8 <USBMouseDeviceConfigure+0x2d0>
   29890:	e59f0050 	ldr	r0, [pc, #80]	; 298e8 <USBMouseDeviceConfigure+0x2f0>
   29894:	ebffb7e1 	bl	17820 <uspi_assertion_failed>
   29898:	e5947010 	ldr	r7, [r4, #16]
   2989c:	eaffff7f 	b	296a0 <USBMouseDeviceConfigure+0xa8>
   298a0:	e3a0207f 	mov	r2, #127	; 0x7f
   298a4:	e59f101c 	ldr	r1, [pc, #28]	; 298c8 <USBMouseDeviceConfigure+0x2d0>
   298a8:	e59f003c 	ldr	r0, [pc, #60]	; 298ec <USBMouseDeviceConfigure+0x2f4>
   298ac:	ebffb7db 	bl	17820 <uspi_assertion_failed>
   298b0:	eaffff8b 	b	296e4 <USBMouseDeviceConfigure+0xec>
   298b4:	e59f2034 	ldr	r2, [pc, #52]	; 298f0 <USBMouseDeviceConfigure+0x2f8>
   298b8:	e3a01001 	mov	r1, #1
   298bc:	e59f0010 	ldr	r0, [pc, #16]	; 298d4 <USBMouseDeviceConfigure+0x2dc>
   298c0:	ebff7fbb 	bl	97b4 <LogWrite>
   298c4:	eaffffaa 	b	29774 <USBMouseDeviceConfigure+0x17c>
   298c8:	000320cc 	.word	0x000320cc
   298cc:	00031ff0 	.word	0x00031ff0
   298d0:	000320fc 	.word	0x000320fc
   298d4:	000320c4 	.word	0x000320c4
   298d8:	000306f0 	.word	0x000306f0
   298dc:	0004235c 	.word	0x0004235c
   298e0:	00032120 	.word	0x00032120
   298e4:	0003171c 	.word	0x0003171c
   298e8:	00031f24 	.word	0x00031f24
   298ec:	000320d8 	.word	0x000320d8
   298f0:	00032010 	.word	0x00032010

000298f4 <USBMouseDeviceCompletionRoutine>:
   298f4:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   298f8:	e2525000 	subs	r5, r2, #0
   298fc:	e1a04000 	mov	r4, r0
   29900:	0a000027 	beq	299a4 <USBMouseDeviceCompletionRoutine+0xb0>
   29904:	e3540000 	cmp	r4, #0
   29908:	0a00002b 	beq	299bc <USBMouseDeviceCompletionRoutine+0xc8>
   2990c:	e2856020 	add	r6, r5, #32
   29910:	e1560004 	cmp	r6, r4
   29914:	0a000003 	beq	29928 <USBMouseDeviceCompletionRoutine+0x34>
   29918:	e3a020c5 	mov	r2, #197	; 0xc5
   2991c:	e59f10c8 	ldr	r1, [pc, #200]	; 299ec <USBMouseDeviceCompletionRoutine+0xf8>
   29920:	e59f00c8 	ldr	r0, [pc, #200]	; 299f0 <USBMouseDeviceCompletionRoutine+0xfc>
   29924:	ebffb7bd 	bl	17820 <uspi_assertion_failed>
   29928:	e1a00004 	mov	r0, r4
   2992c:	ebffe5ab 	bl	22fe0 <USBRequestGetStatus>
   29930:	e3500000 	cmp	r0, #0
   29934:	1a000004 	bne	2994c <USBMouseDeviceCompletionRoutine+0x58>
   29938:	e1a00006 	mov	r0, r6
   2993c:	ebffe567 	bl	22ee0 <_USBRequest>
   29940:	e1a00005 	mov	r0, r5
   29944:	e8bd41f0 	pop	{r4, r5, r6, r7, r8, lr}
   29948:	eafffef7 	b	2952c <USBMouseDeviceStartRequest>
   2994c:	e1a00004 	mov	r0, r4
   29950:	ebffe5af 	bl	23014 <USBRequestGetResultLength>
   29954:	e3500003 	cmp	r0, #3
   29958:	1afffff6 	bne	29938 <USBMouseDeviceCompletionRoutine+0x44>
   2995c:	e5954014 	ldr	r4, [r5, #20]
   29960:	e3540000 	cmp	r4, #0
   29964:	0afffff3 	beq	29938 <USBMouseDeviceCompletionRoutine+0x44>
   29968:	e5953044 	ldr	r3, [r5, #68]	; 0x44
   2996c:	e3530000 	cmp	r3, #0
   29970:	0a000016 	beq	299d0 <USBMouseDeviceCompletionRoutine+0xdc>
   29974:	e1d300d1 	ldrsb	r0, [r3, #1]
   29978:	e5d37000 	ldrb	r7, [r3]
   2997c:	ebfff751 	bl	276c8 <uspi_char2int>
   29980:	e5953044 	ldr	r3, [r5, #68]	; 0x44
   29984:	e1a08000 	mov	r8, r0
   29988:	e1d300d2 	ldrsb	r0, [r3, #2]
   2998c:	ebfff74d 	bl	276c8 <uspi_char2int>
   29990:	e1a01008 	mov	r1, r8
   29994:	e1a02000 	mov	r2, r0
   29998:	e1a00007 	mov	r0, r7
   2999c:	e12fff34 	blx	r4
   299a0:	eaffffe4 	b	29938 <USBMouseDeviceCompletionRoutine+0x44>
   299a4:	e3a020c2 	mov	r2, #194	; 0xc2
   299a8:	e59f103c 	ldr	r1, [pc, #60]	; 299ec <USBMouseDeviceCompletionRoutine+0xf8>
   299ac:	e59f0040 	ldr	r0, [pc, #64]	; 299f4 <USBMouseDeviceCompletionRoutine+0x100>
   299b0:	ebffb79a 	bl	17820 <uspi_assertion_failed>
   299b4:	e3540000 	cmp	r4, #0
   299b8:	1affffd3 	bne	2990c <USBMouseDeviceCompletionRoutine+0x18>
   299bc:	e3a020c4 	mov	r2, #196	; 0xc4
   299c0:	e59f1024 	ldr	r1, [pc, #36]	; 299ec <USBMouseDeviceCompletionRoutine+0xf8>
   299c4:	e59f002c 	ldr	r0, [pc, #44]	; 299f8 <USBMouseDeviceCompletionRoutine+0x104>
   299c8:	ebffb794 	bl	17820 <uspi_assertion_failed>
   299cc:	eaffffce 	b	2990c <USBMouseDeviceCompletionRoutine+0x18>
   299d0:	e3a020cb 	mov	r2, #203	; 0xcb
   299d4:	e59f1010 	ldr	r1, [pc, #16]	; 299ec <USBMouseDeviceCompletionRoutine+0xf8>
   299d8:	e59f001c 	ldr	r0, [pc, #28]	; 299fc <USBMouseDeviceCompletionRoutine+0x108>
   299dc:	ebffb78f 	bl	17820 <uspi_assertion_failed>
   299e0:	e5954014 	ldr	r4, [r5, #20]
   299e4:	e5953044 	ldr	r3, [r5, #68]	; 0x44
   299e8:	eaffffe1 	b	29974 <USBMouseDeviceCompletionRoutine+0x80>
   299ec:	000320cc 	.word	0x000320cc
   299f0:	00031f60 	.word	0x00031f60
   299f4:	000306f0 	.word	0x000306f0
   299f8:	000307b8 	.word	0x000307b8
   299fc:	00031f44 	.word	0x00031f44

00029a00 <USBMouseDevice>:
   29a00:	e92d4070 	push	{r4, r5, r6, lr}
   29a04:	e2504000 	subs	r4, r0, #0
   29a08:	e1a05001 	mov	r5, r1
   29a0c:	0a000015 	beq	29a68 <USBMouseDevice+0x68>
   29a10:	e1a01005 	mov	r1, r5
   29a14:	e1a00004 	mov	r0, r4
   29a18:	ebffea98 	bl	24480 <USBFunctionCopy>
   29a1c:	e3a03000 	mov	r3, #0
   29a20:	e59f2054 	ldr	r2, [pc, #84]	; 29a7c <USBMouseDevice+0x7c>
   29a24:	e5843010 	str	r3, [r4, #16]
   29a28:	e5843014 	str	r3, [r4, #20]
   29a2c:	e5843044 	str	r3, [r4, #68]	; 0x44
   29a30:	e5842000 	str	r2, [r4]
   29a34:	e3a00003 	mov	r0, #3
   29a38:	ebffb751 	bl	17784 <malloc>
   29a3c:	e3500000 	cmp	r0, #0
   29a40:	e5840044 	str	r0, [r4, #68]	; 0x44
   29a44:	0a000002 	beq	29a54 <USBMouseDevice+0x54>
   29a48:	e3a03000 	mov	r3, #0
   29a4c:	e584301c 	str	r3, [r4, #28]
   29a50:	e8bd8070 	pop	{r4, r5, r6, pc}
   29a54:	e3a0202f 	mov	r2, #47	; 0x2f
   29a58:	e59f1020 	ldr	r1, [pc, #32]	; 29a80 <USBMouseDevice+0x80>
   29a5c:	e59f0020 	ldr	r0, [pc, #32]	; 29a84 <USBMouseDevice+0x84>
   29a60:	ebffb76e 	bl	17820 <uspi_assertion_failed>
   29a64:	eafffff7 	b	29a48 <USBMouseDevice+0x48>
   29a68:	e3a02025 	mov	r2, #37	; 0x25
   29a6c:	e59f100c 	ldr	r1, [pc, #12]	; 29a80 <USBMouseDevice+0x80>
   29a70:	e59f0010 	ldr	r0, [pc, #16]	; 29a88 <USBMouseDevice+0x88>
   29a74:	ebffb769 	bl	17820 <uspi_assertion_failed>
   29a78:	eaffffe4 	b	29a10 <USBMouseDevice+0x10>
   29a7c:	000295f8 	.word	0x000295f8
   29a80:	000320cc 	.word	0x000320cc
   29a84:	00031f44 	.word	0x00031f44
   29a88:	000306f0 	.word	0x000306f0

00029a8c <_CUSBMouseDevice>:
   29a8c:	e92d4010 	push	{r4, lr}
   29a90:	e2504000 	subs	r4, r0, #0
   29a94:	0a000016 	beq	29af4 <_CUSBMouseDevice+0x68>
   29a98:	e594001c 	ldr	r0, [r4, #28]
   29a9c:	e3500000 	cmp	r0, #0
   29aa0:	0a000002 	beq	29ab0 <_CUSBMouseDevice+0x24>
   29aa4:	ebffb737 	bl	17788 <free>
   29aa8:	e3a03000 	mov	r3, #0
   29aac:	e584301c 	str	r3, [r4, #28]
   29ab0:	e5940044 	ldr	r0, [r4, #68]	; 0x44
   29ab4:	e3500000 	cmp	r0, #0
   29ab8:	0a000002 	beq	29ac8 <_CUSBMouseDevice+0x3c>
   29abc:	ebffb731 	bl	17788 <free>
   29ac0:	e3a03000 	mov	r3, #0
   29ac4:	e5843044 	str	r3, [r4, #68]	; 0x44
   29ac8:	e5940010 	ldr	r0, [r4, #16]
   29acc:	e3500000 	cmp	r0, #0
   29ad0:	0a000004 	beq	29ae8 <_CUSBMouseDevice+0x5c>
   29ad4:	ebffe3f2 	bl	22aa4 <_USBEndpoint>
   29ad8:	e5940010 	ldr	r0, [r4, #16]
   29adc:	ebffb729 	bl	17788 <free>
   29ae0:	e3a03000 	mov	r3, #0
   29ae4:	e5843010 	str	r3, [r4, #16]
   29ae8:	e1a00004 	mov	r0, r4
   29aec:	e8bd4010 	pop	{r4, lr}
   29af0:	eaffeaa4 	b	24588 <_USBFunction>
   29af4:	e3a02036 	mov	r2, #54	; 0x36
   29af8:	e59f1008 	ldr	r1, [pc, #8]	; 29b08 <_CUSBMouseDevice+0x7c>
   29afc:	e59f0008 	ldr	r0, [pc, #8]	; 29b0c <_CUSBMouseDevice+0x80>
   29b00:	ebffb746 	bl	17820 <uspi_assertion_failed>
   29b04:	eaffffe3 	b	29a98 <_CUSBMouseDevice+0xc>
   29b08:	000320cc 	.word	0x000320cc
   29b0c:	000306f0 	.word	0x000306f0

00029b10 <USBMouseDeviceRegisterStatusHandler>:
   29b10:	e92d4070 	push	{r4, r5, r6, lr}
   29b14:	e2505000 	subs	r5, r0, #0
   29b18:	e1a04001 	mov	r4, r1
   29b1c:	0a000009 	beq	29b48 <USBMouseDeviceRegisterStatusHandler+0x38>
   29b20:	e3540000 	cmp	r4, #0
   29b24:	0a000001 	beq	29b30 <USBMouseDeviceRegisterStatusHandler+0x20>
   29b28:	e5854014 	str	r4, [r5, #20]
   29b2c:	e8bd8070 	pop	{r4, r5, r6, pc}
   29b30:	e3a020ae 	mov	r2, #174	; 0xae
   29b34:	e59f1020 	ldr	r1, [pc, #32]	; 29b5c <USBMouseDeviceRegisterStatusHandler+0x4c>
   29b38:	e59f0020 	ldr	r0, [pc, #32]	; 29b60 <USBMouseDeviceRegisterStatusHandler+0x50>
   29b3c:	ebffb737 	bl	17820 <uspi_assertion_failed>
   29b40:	e5854014 	str	r4, [r5, #20]
   29b44:	e8bd8070 	pop	{r4, r5, r6, pc}
   29b48:	e3a020ad 	mov	r2, #173	; 0xad
   29b4c:	e59f1008 	ldr	r1, [pc, #8]	; 29b5c <USBMouseDeviceRegisterStatusHandler+0x4c>
   29b50:	e59f000c 	ldr	r0, [pc, #12]	; 29b64 <USBMouseDeviceRegisterStatusHandler+0x54>
   29b54:	ebffb731 	bl	17820 <uspi_assertion_failed>
   29b58:	eafffff0 	b	29b20 <USBMouseDeviceRegisterStatusHandler+0x10>
   29b5c:	000320cc 	.word	0x000320cc
   29b60:	0003212c 	.word	0x0003212c
   29b64:	000306f0 	.word	0x000306f0

00029b68 <_DWHCIFrameSchedulerNoSplit>:
   29b68:	e12fff1e 	bx	lr

00029b6c <DWHCIFrameSchedulerNoSplitStartSplit>:
   29b6c:	e3a02032 	mov	r2, #50	; 0x32
   29b70:	e59f1004 	ldr	r1, [pc, #4]	; 29b7c <DWHCIFrameSchedulerNoSplitStartSplit+0x10>
   29b74:	e59f0004 	ldr	r0, [pc, #4]	; 29b80 <DWHCIFrameSchedulerNoSplitStartSplit+0x14>
   29b78:	eaffb728 	b	17820 <uspi_assertion_failed>
   29b7c:	00032140 	.word	0x00032140
   29b80:	00030678 	.word	0x00030678

00029b84 <DWHCIFrameSchedulerNoSplitCompleteSplit>:
   29b84:	e92d4010 	push	{r4, lr}
   29b88:	e3a02037 	mov	r2, #55	; 0x37
   29b8c:	e59f100c 	ldr	r1, [pc, #12]	; 29ba0 <DWHCIFrameSchedulerNoSplitCompleteSplit+0x1c>
   29b90:	e59f000c 	ldr	r0, [pc, #12]	; 29ba4 <DWHCIFrameSchedulerNoSplitCompleteSplit+0x20>
   29b94:	ebffb721 	bl	17820 <uspi_assertion_failed>
   29b98:	e3a00000 	mov	r0, #0
   29b9c:	e8bd8010 	pop	{r4, pc}
   29ba0:	00032140 	.word	0x00032140
   29ba4:	00030678 	.word	0x00030678

00029ba8 <DWHCIFrameSchedulerNoSplitTransactionComplete>:
   29ba8:	e3a0203d 	mov	r2, #61	; 0x3d
   29bac:	e59f1004 	ldr	r1, [pc, #4]	; 29bb8 <DWHCIFrameSchedulerNoSplitTransactionComplete+0x10>
   29bb0:	e59f0004 	ldr	r0, [pc, #4]	; 29bbc <DWHCIFrameSchedulerNoSplitTransactionComplete+0x14>
   29bb4:	eaffb719 	b	17820 <uspi_assertion_failed>
   29bb8:	00032140 	.word	0x00032140
   29bbc:	00030678 	.word	0x00030678

00029bc0 <DWHCIFrameSchedulerNoSplitIsOddFrame>:
   29bc0:	e92d4010 	push	{r4, lr}
   29bc4:	e2504000 	subs	r4, r0, #0
   29bc8:	0a000002 	beq	29bd8 <DWHCIFrameSchedulerNoSplitIsOddFrame+0x18>
   29bcc:	e594001c 	ldr	r0, [r4, #28]
   29bd0:	e2000001 	and	r0, r0, #1
   29bd4:	e8bd8010 	pop	{r4, pc}
   29bd8:	e3a02058 	mov	r2, #88	; 0x58
   29bdc:	e59f1008 	ldr	r1, [pc, #8]	; 29bec <DWHCIFrameSchedulerNoSplitIsOddFrame+0x2c>
   29be0:	e59f0008 	ldr	r0, [pc, #8]	; 29bf0 <DWHCIFrameSchedulerNoSplitIsOddFrame+0x30>
   29be4:	ebffb70d 	bl	17820 <uspi_assertion_failed>
   29be8:	eafffff7 	b	29bcc <DWHCIFrameSchedulerNoSplitIsOddFrame+0xc>
   29bec:	00032140 	.word	0x00032140
   29bf0:	000306f0 	.word	0x000306f0

00029bf4 <DWHCIFrameSchedulerNoSplitWaitForFrame>:
   29bf4:	e92d4030 	push	{r4, r5, lr}
   29bf8:	e2505000 	subs	r5, r0, #0
   29bfc:	e24dd014 	sub	sp, sp, #20
   29c00:	0a000015 	beq	29c5c <DWHCIFrameSchedulerNoSplitWaitForFrame+0x68>
   29c04:	e28d0004 	add	r0, sp, #4
   29c08:	e59f1060 	ldr	r1, [pc, #96]	; 29c70 <DWHCIFrameSchedulerNoSplitWaitForFrame+0x7c>
   29c0c:	ebffd934 	bl	200e4 <DWHCIRegister>
   29c10:	e28d0004 	add	r0, sp, #4
   29c14:	ebffd95e 	bl	20194 <DWHCIRegisterRead>
   29c18:	e59f4054 	ldr	r4, [pc, #84]	; 29c74 <DWHCIFrameSchedulerNoSplitWaitForFrame+0x80>
   29c1c:	e5953018 	ldr	r3, [r5, #24]
   29c20:	e2800001 	add	r0, r0, #1
   29c24:	e0000004 	and	r0, r0, r4
   29c28:	e3530000 	cmp	r3, #0
   29c2c:	e585001c 	str	r0, [r5, #28]
   29c30:	1a000005 	bne	29c4c <DWHCIFrameSchedulerNoSplitWaitForFrame+0x58>
   29c34:	e28d0004 	add	r0, sp, #4
   29c38:	ebffd955 	bl	20194 <DWHCIRegisterRead>
   29c3c:	e595301c 	ldr	r3, [r5, #28]
   29c40:	e0000004 	and	r0, r0, r4
   29c44:	e1500003 	cmp	r0, r3
   29c48:	1afffff9 	bne	29c34 <DWHCIFrameSchedulerNoSplitWaitForFrame+0x40>
   29c4c:	e28d0004 	add	r0, sp, #4
   29c50:	ebffd942 	bl	20160 <_DWHCIRegister>
   29c54:	e28dd014 	add	sp, sp, #20
   29c58:	e8bd8030 	pop	{r4, r5, pc}
   29c5c:	e3a02043 	mov	r2, #67	; 0x43
   29c60:	e59f1010 	ldr	r1, [pc, #16]	; 29c78 <DWHCIFrameSchedulerNoSplitWaitForFrame+0x84>
   29c64:	e59f0010 	ldr	r0, [pc, #16]	; 29c7c <DWHCIFrameSchedulerNoSplitWaitForFrame+0x88>
   29c68:	ebffb6ec 	bl	17820 <uspi_assertion_failed>
   29c6c:	eaffffe4 	b	29c04 <DWHCIFrameSchedulerNoSplitWaitForFrame+0x10>
   29c70:	20980408 	.word	0x20980408
   29c74:	00003fff 	.word	0x00003fff
   29c78:	00032140 	.word	0x00032140
   29c7c:	000306f0 	.word	0x000306f0

00029c80 <DWHCIFrameSchedulerNoSplit>:
   29c80:	e92d4070 	push	{r4, r5, r6, lr}
   29c84:	e2504000 	subs	r4, r0, #0
   29c88:	e1a05001 	mov	r5, r1
   29c8c:	0a00000d 	beq	29cc8 <DWHCIFrameSchedulerNoSplit+0x48>
   29c90:	e3a02901 	mov	r2, #16384	; 0x4000
   29c94:	e59f3040 	ldr	r3, [pc, #64]	; 29cdc <DWHCIFrameSchedulerNoSplit+0x5c>
   29c98:	e59fc040 	ldr	ip, [pc, #64]	; 29ce0 <DWHCIFrameSchedulerNoSplit+0x60>
   29c9c:	e59f0040 	ldr	r0, [pc, #64]	; 29ce4 <DWHCIFrameSchedulerNoSplit+0x64>
   29ca0:	e59f1040 	ldr	r1, [pc, #64]	; 29ce8 <DWHCIFrameSchedulerNoSplit+0x68>
   29ca4:	e584201c 	str	r2, [r4, #28]
   29ca8:	e5843000 	str	r3, [r4]
   29cac:	e59f2038 	ldr	r2, [pc, #56]	; 29cec <DWHCIFrameSchedulerNoSplit+0x6c>
   29cb0:	e59f3038 	ldr	r3, [pc, #56]	; 29cf0 <DWHCIFrameSchedulerNoSplit+0x70>
   29cb4:	e5845018 	str	r5, [r4, #24]
   29cb8:	e584c004 	str	ip, [r4, #4]
   29cbc:	e1c400f8 	strd	r0, [r4, #8]
   29cc0:	e1c421f0 	strd	r2, [r4, #16]
   29cc4:	e8bd8070 	pop	{r4, r5, r6, pc}
   29cc8:	e3a0201c 	mov	r2, #28
   29ccc:	e59f1020 	ldr	r1, [pc, #32]	; 29cf4 <DWHCIFrameSchedulerNoSplit+0x74>
   29cd0:	e59f0020 	ldr	r0, [pc, #32]	; 29cf8 <DWHCIFrameSchedulerNoSplit+0x78>
   29cd4:	ebffb6d1 	bl	17820 <uspi_assertion_failed>
   29cd8:	eaffffec 	b	29c90 <DWHCIFrameSchedulerNoSplit+0x10>
   29cdc:	00029b68 	.word	0x00029b68
   29ce0:	00029b6c 	.word	0x00029b6c
   29ce4:	00029b84 	.word	0x00029b84
   29ce8:	00029ba8 	.word	0x00029ba8
   29cec:	00029bf4 	.word	0x00029bf4
   29cf0:	00029bc0 	.word	0x00029bc0
   29cf4:	00032140 	.word	0x00032140
   29cf8:	000306f0 	.word	0x000306f0

00029cfc <BitGetUnsigned>:
   29cfc:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   29d00:	e081e002 	add	lr, r1, r2
   29d04:	e28e9007 	add	r9, lr, #7
   29d08:	e1a031a9 	lsr	r3, r9, #3
   29d0c:	e1a041a1 	lsr	r4, r1, #3
   29d10:	e1540003 	cmp	r4, r3
   29d14:	e24dd00c 	sub	sp, sp, #12
   29d18:	23a00000 	movcs	r0, #0
   29d1c:	2a000030 	bcs	29de4 <BitGetUnsigned+0xe8>
   29d20:	e3a05001 	mov	r5, #1
   29d24:	e1a0a000 	mov	sl, r0
   29d28:	e3a07000 	mov	r7, #0
   29d2c:	e2011007 	and	r1, r1, #7
   29d30:	e0816002 	add	r6, r1, r2
   29d34:	e1a06615 	lsl	r6, r5, r6
   29d38:	e6ef6076 	uxtb	r6, r6
   29d3c:	e1a05115 	lsl	r5, r5, r1
   29d40:	e6ef5075 	uxtb	r5, r5
   29d44:	e2468001 	sub	r8, r6, #1
   29d48:	e24ee001 	sub	lr, lr, #1
   29d4c:	e0466005 	sub	r6, r6, r5
   29d50:	e244c001 	sub	ip, r4, #1
   29d54:	e2655000 	rsb	r5, r5, #0
   29d58:	e24a9001 	sub	r9, sl, #1
   29d5c:	e6ef8078 	uxtb	r8, r8
   29d60:	e1a00007 	mov	r0, r7
   29d64:	e1a0e1ae 	lsr	lr, lr, #3
   29d68:	e58d8004 	str	r8, [sp, #4]
   29d6c:	e6ef6076 	uxtb	r6, r6
   29d70:	e6ef5075 	uxtb	r5, r5
   29d74:	e261b008 	rsb	fp, r1, #8
   29d78:	e08ac00c 	add	ip, sl, ip
   29d7c:	e0899003 	add	r9, r9, r3
   29d80:	ea000008 	b	29da8 <BitGetUnsigned+0xac>
   29d84:	e15e0003 	cmp	lr, r3
   29d88:	059d3004 	ldreq	r3, [sp, #4]
   29d8c:	12877008 	addne	r7, r7, #8
   29d90:	00088003 	andeq	r8, r8, r3
   29d94:	10423007 	subne	r3, r2, r7
   29d98:	01800008 	orreq	r0, r0, r8
   29d9c:	11800318 	orrne	r0, r0, r8, lsl r3
   29da0:	e15c0009 	cmp	ip, r9
   29da4:	0a00000e 	beq	29de4 <BitGetUnsigned+0xe8>
   29da8:	e5fc8001 	ldrb	r8, [ip, #1]!
   29dac:	e15e0004 	cmp	lr, r4
   29db0:	00060008 	andeq	r0, r6, r8
   29db4:	01a00150 	asreq	r0, r0, r1
   29db8:	0afffff8 	beq	29da0 <BitGetUnsigned+0xa4>
   29dbc:	e04c300a 	sub	r3, ip, sl
   29dc0:	e1530004 	cmp	r3, r4
   29dc4:	1affffee 	bne	29d84 <BitGetUnsigned+0x88>
   29dc8:	e087700b 	add	r7, r7, fp
   29dcc:	e0050008 	and	r0, r5, r8
   29dd0:	e1a00150 	asr	r0, r0, r1
   29dd4:	e0423007 	sub	r3, r2, r7
   29dd8:	e15c0009 	cmp	ip, r9
   29ddc:	e1a00310 	lsl	r0, r0, r3
   29de0:	1afffff0 	bne	29da8 <BitGetUnsigned+0xac>
   29de4:	e28dd00c 	add	sp, sp, #12
   29de8:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00029dec <USBGamePadDeviceDecodeReport>:
   29dec:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   29df0:	e1d069b0 	ldrh	r6, [r0, #144]	; 0x90
   29df4:	e24dd044 	sub	sp, sp, #68	; 0x44
   29df8:	e3560000 	cmp	r6, #0
   29dfc:	e1a0b000 	mov	fp, r0
   29e00:	e59090bc 	ldr	r9, [r0, #188]	; 0xbc
   29e04:	e5904094 	ldr	r4, [r0, #148]	; 0x94
   29e08:	0a00010b 	beq	2a23c <USBGamePadDeviceDecodeReport+0x450>
   29e0c:	e3a05000 	mov	r5, #0
   29e10:	e59fa43c 	ldr	sl, [pc, #1084]	; 2a254 <USBGamePadDeviceDecodeReport+0x468>
   29e14:	e1a07005 	mov	r7, r5
   29e18:	e58da010 	str	sl, [sp, #16]
   29e1c:	e58da020 	str	sl, [sp, #32]
   29e20:	e58da004 	str	sl, [sp, #4]
   29e24:	e58da008 	str	sl, [sp, #8]
   29e28:	e58d501c 	str	r5, [sp, #28]
   29e2c:	e58d5018 	str	r5, [sp, #24]
   29e30:	e1a08005 	mov	r8, r5
   29e34:	e1a0a005 	mov	sl, r5
   29e38:	e58d0014 	str	r0, [sp, #20]
   29e3c:	e1a0b005 	mov	fp, r5
   29e40:	ea00000e 	b	29e80 <USBGamePadDeviceDecodeReport+0x94>
   29e44:	e3520034 	cmp	r2, #52	; 0x34
   29e48:	0a00005a 	beq	29fb8 <USBGamePadDeviceDecodeReport+0x1cc>
   29e4c:	ca00003c 	bgt	29f44 <USBGamePadDeviceDecodeReport+0x158>
   29e50:	e3520008 	cmp	r2, #8
   29e54:	0a00004f 	beq	29f98 <USBGamePadDeviceDecodeReport+0x1ac>
   29e58:	da000060 	ble	29fe0 <USBGamePadDeviceDecodeReport+0x1f4>
   29e5c:	e3520014 	cmp	r2, #20
   29e60:	058d3020 	streq	r3, [sp, #32]
   29e64:	0a000003 	beq	29e78 <USBGamePadDeviceDecodeReport+0x8c>
   29e68:	e3520024 	cmp	r2, #36	; 0x24
   29e6c:	e59d1004 	ldr	r1, [sp, #4]
   29e70:	01a01003 	moveq	r1, r3
   29e74:	e58d1004 	str	r1, [sp, #4]
   29e78:	e3560000 	cmp	r6, #0
   29e7c:	0a000025 	beq	29f18 <USBGamePadDeviceDecodeReport+0x12c>
   29e80:	e1d420d0 	ldrsb	r2, [r4]
   29e84:	e2023003 	and	r3, r2, #3
   29e88:	e3530001 	cmp	r3, #1
   29e8c:	0a00003c 	beq	29f84 <USBGamePadDeviceDecodeReport+0x198>
   29e90:	e3530002 	cmp	r3, #2
   29e94:	0a000033 	beq	29f68 <USBGamePadDeviceDecodeReport+0x17c>
   29e98:	e3530000 	cmp	r3, #0
   29e9c:	02466001 	subeq	r6, r6, #1
   29ea0:	06ff6076 	uxtheq	r6, r6
   29ea4:	02844001 	addeq	r4, r4, #1
   29ea8:	0a00000a 	beq	29ed8 <USBGamePadDeviceDecodeReport+0xec>
   29eac:	e1d430d3 	ldrsb	r3, [r4, #3]
   29eb0:	e1d410d2 	ldrsb	r1, [r4, #2]
   29eb4:	e1d400d1 	ldrsb	r0, [r4, #1]
   29eb8:	e1a03803 	lsl	r3, r3, #16
   29ebc:	e1833401 	orr	r3, r3, r1, lsl #8
   29ec0:	e1d410d4 	ldrsb	r1, [r4, #4]
   29ec4:	e2466005 	sub	r6, r6, #5
   29ec8:	e1833000 	orr	r3, r3, r0
   29ecc:	e6ff6076 	uxth	r6, r6
   29ed0:	e1833c01 	orr	r3, r3, r1, lsl #24
   29ed4:	e2844005 	add	r4, r4, #5
   29ed8:	e20220fc 	and	r2, r2, #252	; 0xfc
   29edc:	e3520084 	cmp	r2, #132	; 0x84
   29ee0:	1affffd7 	bne	29e44 <USBGamePadDeviceDecodeReport+0x58>
   29ee4:	e3570000 	cmp	r7, #0
   29ee8:	1a00000a 	bne	29f18 <USBGamePadDeviceDecodeReport+0x12c>
   29eec:	e1a01007 	mov	r1, r7
   29ef0:	e3a02008 	mov	r2, #8
   29ef4:	e1a00009 	mov	r0, r9
   29ef8:	e1a07003 	mov	r7, r3
   29efc:	ebffff7e 	bl	29cfc <BitGetUnsigned>
   29f00:	e3500000 	cmp	r0, #0
   29f04:	11570000 	cmpne	r7, r0
   29f08:	1a00000b 	bne	29f3c <USBGamePadDeviceDecodeReport+0x150>
   29f0c:	e3560000 	cmp	r6, #0
   29f10:	e3a08008 	mov	r8, #8
   29f14:	1affffd9 	bne	29e80 <USBGamePadDeviceDecodeReport+0x94>
   29f18:	e2883007 	add	r3, r8, #7
   29f1c:	e1a031a3 	lsr	r3, r3, #3
   29f20:	e59db014 	ldr	fp, [sp, #20]
   29f24:	e6ff3073 	uxth	r3, r3
   29f28:	e59d2018 	ldr	r2, [sp, #24]
   29f2c:	e1cb3cb0 	strh	r3, [fp, #192]	; 0xc0
   29f30:	e58b201c 	str	r2, [fp, #28]
   29f34:	e59d201c 	ldr	r2, [sp, #28]
   29f38:	e58b2068 	str	r2, [fp, #104]	; 0x68
   29f3c:	e28dd044 	add	sp, sp, #68	; 0x44
   29f40:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   29f44:	e3520074 	cmp	r2, #116	; 0x74
   29f48:	01a0b003 	moveq	fp, r3
   29f4c:	0affffc9 	beq	29e78 <USBGamePadDeviceDecodeReport+0x8c>
   29f50:	da000029 	ble	29ffc <USBGamePadDeviceDecodeReport+0x210>
   29f54:	e3520080 	cmp	r2, #128	; 0x80
   29f58:	0a000018 	beq	29fc0 <USBGamePadDeviceDecodeReport+0x1d4>
   29f5c:	e3520094 	cmp	r2, #148	; 0x94
   29f60:	01a0a003 	moveq	sl, r3
   29f64:	eaffffc3 	b	29e78 <USBGamePadDeviceDecodeReport+0x8c>
   29f68:	e5d43001 	ldrb	r3, [r4, #1]
   29f6c:	e1d410d2 	ldrsb	r1, [r4, #2]
   29f70:	e2466003 	sub	r6, r6, #3
   29f74:	e6ff6076 	uxth	r6, r6
   29f78:	e1833401 	orr	r3, r3, r1, lsl #8
   29f7c:	e2844003 	add	r4, r4, #3
   29f80:	eaffffd4 	b	29ed8 <USBGamePadDeviceDecodeReport+0xec>
   29f84:	e2466002 	sub	r6, r6, #2
   29f88:	e1d430d1 	ldrsb	r3, [r4, #1]
   29f8c:	e6ff6076 	uxth	r6, r6
   29f90:	e2844002 	add	r4, r4, #2
   29f94:	eaffffcf 	b	29ed8 <USBGamePadDeviceDecodeReport+0xec>
   29f98:	e3530036 	cmp	r3, #54	; 0x36
   29f9c:	ca00001b 	bgt	2a010 <USBGamePadDeviceDecodeReport+0x224>
   29fa0:	e3530030 	cmp	r3, #48	; 0x30
   29fa4:	aa00002e 	bge	2a064 <USBGamePadDeviceDecodeReport+0x278>
   29fa8:	e2433004 	sub	r3, r3, #4
   29fac:	e3530001 	cmp	r3, #1
   29fb0:	93a05001 	movls	r5, #1
   29fb4:	eaffffaf 	b	29e78 <USBGamePadDeviceDecodeReport+0x8c>
   29fb8:	e58d3010 	str	r3, [sp, #16]
   29fbc:	eaffffad 	b	29e78 <USBGamePadDeviceDecodeReport+0x8c>
   29fc0:	e2033003 	and	r3, r3, #3
   29fc4:	e3530002 	cmp	r3, #2
   29fc8:	e0030a9b 	mul	r3, fp, sl
   29fcc:	e58d300c 	str	r3, [sp, #12]
   29fd0:	0a000013 	beq	2a024 <USBGamePadDeviceDecodeReport+0x238>
   29fd4:	e59d300c 	ldr	r3, [sp, #12]
   29fd8:	e0888003 	add	r8, r8, r3
   29fdc:	eaffffa5 	b	29e78 <USBGamePadDeviceDecodeReport+0x8c>
   29fe0:	e3520004 	cmp	r2, #4
   29fe4:	1affffa3 	bne	29e78 <USBGamePadDeviceDecodeReport+0x8c>
   29fe8:	e3530009 	cmp	r3, #9
   29fec:	1affffa1 	bne	29e78 <USBGamePadDeviceDecodeReport+0x8c>
   29ff0:	e3550001 	cmp	r5, #1
   29ff4:	03a05002 	moveq	r5, #2
   29ff8:	eaffff9e 	b	29e78 <USBGamePadDeviceDecodeReport+0x8c>
   29ffc:	e3520044 	cmp	r2, #68	; 0x44
   2a000:	e59d1008 	ldr	r1, [sp, #8]
   2a004:	01a01003 	moveq	r1, r3
   2a008:	e58d1008 	str	r1, [sp, #8]
   2a00c:	eaffff99 	b	29e78 <USBGamePadDeviceDecodeReport+0x8c>
   2a010:	e3530039 	cmp	r3, #57	; 0x39
   2a014:	1affff97 	bne	29e78 <USBGamePadDeviceDecodeReport+0x8c>
   2a018:	e3550001 	cmp	r5, #1
   2a01c:	03a05004 	moveq	r5, #4
   2a020:	eaffff94 	b	29e78 <USBGamePadDeviceDecodeReport+0x8c>
   2a024:	e3550003 	cmp	r5, #3
   2a028:	0a000010 	beq	2a070 <USBGamePadDeviceDecodeReport+0x284>
   2a02c:	e3550004 	cmp	r5, #4
   2a030:	0a000059 	beq	2a19c <USBGamePadDeviceDecodeReport+0x3b0>
   2a034:	e3550002 	cmp	r5, #2
   2a038:	1affffe5 	bne	29fd4 <USBGamePadDeviceDecodeReport+0x1e8>
   2a03c:	e59d3014 	ldr	r3, [sp, #20]
   2a040:	e0020a9b 	mul	r2, fp, sl
   2a044:	e583a084 	str	sl, [r3, #132]	; 0x84
   2a048:	e1a01008 	mov	r1, r8
   2a04c:	e1a00009 	mov	r0, r9
   2a050:	ebffff29 	bl	29cfc <BitGetUnsigned>
   2a054:	e59d3014 	ldr	r3, [sp, #20]
   2a058:	e3a05001 	mov	r5, #1
   2a05c:	e5830088 	str	r0, [r3, #136]	; 0x88
   2a060:	eaffffdb 	b	29fd4 <USBGamePadDeviceDecodeReport+0x1e8>
   2a064:	e3550001 	cmp	r5, #1
   2a068:	03a05003 	moveq	r5, #3
   2a06c:	eaffff81 	b	29e78 <USBGamePadDeviceDecodeReport+0x8c>
   2a070:	e35a0000 	cmp	sl, #0
   2a074:	0a000074 	beq	2a24c <USBGamePadDeviceDecodeReport+0x460>
   2a078:	e59d3020 	ldr	r3, [sp, #32]
   2a07c:	e59f11d0 	ldr	r1, [pc, #464]	; 2a254 <USBGamePadDeviceDecodeReport+0x468>
   2a080:	e59d2010 	ldr	r2, [sp, #16]
   2a084:	e1530001 	cmp	r3, r1
   2a088:	e1a00003 	mov	r0, r3
   2a08c:	01a00002 	moveq	r0, r2
   2a090:	e59d2004 	ldr	r2, [sp, #4]
   2a094:	e59dc008 	ldr	ip, [sp, #8]
   2a098:	e1520001 	cmp	r2, r1
   2a09c:	e1a03002 	mov	r3, r2
   2a0a0:	01a0300c 	moveq	r3, ip
   2a0a4:	e3a0c001 	mov	ip, #1
   2a0a8:	e1a02b1c 	lsl	r2, ip, fp
   2a0ac:	e59de018 	ldr	lr, [sp, #24]
   2a0b0:	e2622000 	rsb	r2, r2, #0
   2a0b4:	e58d2028 	str	r2, [sp, #40]	; 0x28
   2a0b8:	e59d2014 	ldr	r2, [sp, #20]
   2a0bc:	e08e5c1e 	add	r5, lr, lr, lsl ip
   2a0c0:	e58d3024 	str	r3, [sp, #36]	; 0x24
   2a0c4:	e0825105 	add	r5, r2, r5, lsl #2
   2a0c8:	e3a03000 	mov	r3, #0
   2a0cc:	e1a02009 	mov	r2, r9
   2a0d0:	e24b1001 	sub	r1, fp, #1
   2a0d4:	e58d802c 	str	r8, [sp, #44]	; 0x2c
   2a0d8:	e1a0111c 	lsl	r1, ip, r1
   2a0dc:	e58d7030 	str	r7, [sp, #48]	; 0x30
   2a0e0:	e58d4034 	str	r4, [sp, #52]	; 0x34
   2a0e4:	e58d6038 	str	r6, [sp, #56]	; 0x38
   2a0e8:	e58d803c 	str	r8, [sp, #60]	; 0x3c
   2a0ec:	e1a0900b 	mov	r9, fp
   2a0f0:	e58d1018 	str	r1, [sp, #24]
   2a0f4:	e1a0700e 	mov	r7, lr
   2a0f8:	e1a08000 	mov	r8, r0
   2a0fc:	e59d602c 	ldr	r6, [sp, #44]	; 0x2c
   2a100:	e1a04003 	mov	r4, r3
   2a104:	e1a0b002 	mov	fp, r2
   2a108:	ea00000c 	b	2a140 <USBGamePadDeviceDecodeReport+0x354>
   2a10c:	ebfffefa 	bl	29cfc <BitGetUnsigned>
   2a110:	e2844001 	add	r4, r4, #1
   2a114:	e154000a 	cmp	r4, sl
   2a118:	23a02000 	movcs	r2, #0
   2a11c:	33a02001 	movcc	r2, #1
   2a120:	e3540005 	cmp	r4, #5
   2a124:	c3a02000 	movgt	r2, #0
   2a128:	e3520000 	cmp	r2, #0
   2a12c:	e5850020 	str	r0, [r5, #32]
   2a130:	e2877001 	add	r7, r7, #1
   2a134:	e285500c 	add	r5, r5, #12
   2a138:	e0866009 	add	r6, r6, r9
   2a13c:	0a00000d 	beq	2a178 <USBGamePadDeviceDecodeReport+0x38c>
   2a140:	e59d3024 	ldr	r3, [sp, #36]	; 0x24
   2a144:	e3580000 	cmp	r8, #0
   2a148:	e1a02009 	mov	r2, r9
   2a14c:	e1a01006 	mov	r1, r6
   2a150:	e1a0000b 	mov	r0, fp
   2a154:	e5858024 	str	r8, [r5, #36]	; 0x24
   2a158:	e5853028 	str	r3, [r5, #40]	; 0x28
   2a15c:	aaffffea 	bge	2a10c <USBGamePadDeviceDecodeReport+0x320>
   2a160:	ebfffee5 	bl	29cfc <BitGetUnsigned>
   2a164:	e59d3018 	ldr	r3, [sp, #24]
   2a168:	e1100003 	tst	r0, r3
   2a16c:	159d3028 	ldrne	r3, [sp, #40]	; 0x28
   2a170:	11800003 	orrne	r0, r0, r3
   2a174:	eaffffe5 	b	2a110 <USBGamePadDeviceDecodeReport+0x324>
   2a178:	e1a0300b 	mov	r3, fp
   2a17c:	e28d4034 	add	r4, sp, #52	; 0x34
   2a180:	e58d7018 	str	r7, [sp, #24]
   2a184:	e1a0b009 	mov	fp, r9
   2a188:	e8940150 	ldm	r4, {r4, r6, r8}
   2a18c:	e59d7030 	ldr	r7, [sp, #48]	; 0x30
   2a190:	e1a09003 	mov	r9, r3
   2a194:	e3a05001 	mov	r5, #1
   2a198:	eaffff8d 	b	29fd4 <USBGamePadDeviceDecodeReport+0x1e8>
   2a19c:	e35a0000 	cmp	sl, #0
   2a1a0:	0a000029 	beq	2a24c <USBGamePadDeviceDecodeReport+0x460>
   2a1a4:	e1a00008 	mov	r0, r8
   2a1a8:	e59d201c 	ldr	r2, [sp, #28]
   2a1ac:	e59d1014 	ldr	r1, [sp, #20]
   2a1b0:	e282301b 	add	r3, r2, #27
   2a1b4:	e0813103 	add	r3, r1, r3, lsl #2
   2a1b8:	e58d7024 	str	r7, [sp, #36]	; 0x24
   2a1bc:	e58d4028 	str	r4, [sp, #40]	; 0x28
   2a1c0:	e58d602c 	str	r6, [sp, #44]	; 0x2c
   2a1c4:	e1a04008 	mov	r4, r8
   2a1c8:	e3a05000 	mov	r5, #0
   2a1cc:	e1a0800b 	mov	r8, fp
   2a1d0:	e1a07002 	mov	r7, r2
   2a1d4:	e1a06003 	mov	r6, r3
   2a1d8:	e1a0b000 	mov	fp, r0
   2a1dc:	e1a02008 	mov	r2, r8
   2a1e0:	e2855001 	add	r5, r5, #1
   2a1e4:	e1a01004 	mov	r1, r4
   2a1e8:	e1a00009 	mov	r0, r9
   2a1ec:	ebfffec2 	bl	29cfc <BitGetUnsigned>
   2a1f0:	e15a0005 	cmp	sl, r5
   2a1f4:	93a02000 	movls	r2, #0
   2a1f8:	83a02001 	movhi	r2, #1
   2a1fc:	e3550005 	cmp	r5, #5
   2a200:	c3a02000 	movgt	r2, #0
   2a204:	e3520000 	cmp	r2, #0
   2a208:	e2877001 	add	r7, r7, #1
   2a20c:	e0844008 	add	r4, r4, r8
   2a210:	e4860004 	str	r0, [r6], #4
   2a214:	1afffff0 	bne	2a1dc <USBGamePadDeviceDecodeReport+0x3f0>
   2a218:	e1a0300b 	mov	r3, fp
   2a21c:	e58d701c 	str	r7, [sp, #28]
   2a220:	e1a0b008 	mov	fp, r8
   2a224:	e59d7024 	ldr	r7, [sp, #36]	; 0x24
   2a228:	e59d4028 	ldr	r4, [sp, #40]	; 0x28
   2a22c:	e59d602c 	ldr	r6, [sp, #44]	; 0x2c
   2a230:	e1a08003 	mov	r8, r3
   2a234:	e3a05001 	mov	r5, #1
   2a238:	eaffff65 	b	29fd4 <USBGamePadDeviceDecodeReport+0x1e8>
   2a23c:	e1a03006 	mov	r3, r6
   2a240:	e58d601c 	str	r6, [sp, #28]
   2a244:	e58d6018 	str	r6, [sp, #24]
   2a248:	eaffff36 	b	29f28 <USBGamePadDeviceDecodeReport+0x13c>
   2a24c:	e3a05001 	mov	r5, #1
   2a250:	eaffff5f 	b	29fd4 <USBGamePadDeviceDecodeReport+0x1e8>
   2a254:	f8a432eb 	.word	0xf8a432eb

0002a258 <USBGamePadDeviceStartRequest>:
   2a258:	e92d4070 	push	{r4, r5, r6, lr}
   2a25c:	e2504000 	subs	r4, r0, #0
   2a260:	e24dd008 	sub	sp, sp, #8
   2a264:	0a00001d 	beq	2a2e0 <USBGamePadDeviceStartRequest+0x88>
   2a268:	e5943014 	ldr	r3, [r4, #20]
   2a26c:	e3530000 	cmp	r3, #0
   2a270:	0a000021 	beq	2a2fc <USBGamePadDeviceStartRequest+0xa4>
   2a274:	e59420bc 	ldr	r2, [r4, #188]	; 0xbc
   2a278:	e3520000 	cmp	r2, #0
   2a27c:	0a000011 	beq	2a2c8 <USBGamePadDeviceStartRequest+0x70>
   2a280:	e3a06000 	mov	r6, #0
   2a284:	e2845098 	add	r5, r4, #152	; 0x98
   2a288:	e1d43cb0 	ldrh	r3, [r4, #192]	; 0xc0
   2a28c:	e5941014 	ldr	r1, [r4, #20]
   2a290:	e1a00005 	mov	r0, r5
   2a294:	e58d6000 	str	r6, [sp]
   2a298:	ebffe2e0 	bl	22e20 <USBRequest>
   2a29c:	e1a03004 	mov	r3, r4
   2a2a0:	e1a02006 	mov	r2, r6
   2a2a4:	e1a00005 	mov	r0, r5
   2a2a8:	e59f1060 	ldr	r1, [pc, #96]	; 2a310 <USBGamePadDeviceStartRequest+0xb8>
   2a2ac:	ebffe3ae 	bl	2316c <USBRequestSetCompletionRoutine>
   2a2b0:	e1a00004 	mov	r0, r4
   2a2b4:	ebffe937 	bl	24798 <USBFunctionGetHost>
   2a2b8:	e1a01005 	mov	r1, r5
   2a2bc:	e28dd008 	add	sp, sp, #8
   2a2c0:	e8bd4070 	pop	{r4, r5, r6, lr}
   2a2c4:	eaffd0c6 	b	1e5e4 <DWHCIDeviceSubmitAsyncRequest>
   2a2c8:	e3a02e1d 	mov	r2, #464	; 0x1d0
   2a2cc:	e59f1040 	ldr	r1, [pc, #64]	; 2a314 <USBGamePadDeviceStartRequest+0xbc>
   2a2d0:	e59f0040 	ldr	r0, [pc, #64]	; 2a318 <USBGamePadDeviceStartRequest+0xc0>
   2a2d4:	ebffb551 	bl	17820 <uspi_assertion_failed>
   2a2d8:	e59420bc 	ldr	r2, [r4, #188]	; 0xbc
   2a2dc:	eaffffe7 	b	2a280 <USBGamePadDeviceStartRequest+0x28>
   2a2e0:	e59f2034 	ldr	r2, [pc, #52]	; 2a31c <USBGamePadDeviceStartRequest+0xc4>
   2a2e4:	e59f1028 	ldr	r1, [pc, #40]	; 2a314 <USBGamePadDeviceStartRequest+0xbc>
   2a2e8:	e59f0030 	ldr	r0, [pc, #48]	; 2a320 <USBGamePadDeviceStartRequest+0xc8>
   2a2ec:	ebffb54b 	bl	17820 <uspi_assertion_failed>
   2a2f0:	e5943014 	ldr	r3, [r4, #20]
   2a2f4:	e3530000 	cmp	r3, #0
   2a2f8:	1affffdd 	bne	2a274 <USBGamePadDeviceStartRequest+0x1c>
   2a2fc:	e59f2020 	ldr	r2, [pc, #32]	; 2a324 <USBGamePadDeviceStartRequest+0xcc>
   2a300:	e59f100c 	ldr	r1, [pc, #12]	; 2a314 <USBGamePadDeviceStartRequest+0xbc>
   2a304:	e59f001c 	ldr	r0, [pc, #28]	; 2a328 <USBGamePadDeviceStartRequest+0xd0>
   2a308:	ebffb544 	bl	17820 <uspi_assertion_failed>
   2a30c:	eaffffd8 	b	2a274 <USBGamePadDeviceStartRequest+0x1c>
   2a310:	0002a790 	.word	0x0002a790
   2a314:	00032168 	.word	0x00032168
   2a318:	00031f44 	.word	0x00031f44
   2a31c:	000001cd 	.word	0x000001cd
   2a320:	000306f0 	.word	0x000306f0
   2a324:	000001cf 	.word	0x000001cf
   2a328:	00031d24 	.word	0x00031d24

0002a32c <USBGamePadDeviceConfigure>:
   2a32c:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2a330:	e2504000 	subs	r4, r0, #0
   2a334:	e24dd020 	sub	sp, sp, #32
   2a338:	0a000077 	beq	2a51c <USBGamePadDeviceConfigure+0x1f0>
   2a33c:	e1a00004 	mov	r0, r4
   2a340:	ebffe8d2 	bl	24690 <USBFunctionGetNumEndpoints>
   2a344:	e2505000 	subs	r5, r0, #0
   2a348:	0a000044 	beq	2a460 <USBGamePadDeviceConfigure+0x134>
   2a34c:	e3a01021 	mov	r1, #33	; 0x21
   2a350:	e1a00004 	mov	r0, r4
   2a354:	ebffe95f 	bl	248d8 <USBFunctionGetDescriptor>
   2a358:	e2506000 	subs	r6, r0, #0
   2a35c:	0a000045 	beq	2a478 <USBGamePadDeviceConfigure+0x14c>
   2a360:	e5d63007 	ldrb	r3, [r6, #7]
   2a364:	e5d62008 	ldrb	r2, [r6, #8]
   2a368:	e1933402 	orrs	r3, r3, r2, lsl #8
   2a36c:	0a000041 	beq	2a478 <USBGamePadDeviceConfigure+0x14c>
   2a370:	e59f73e0 	ldr	r7, [pc, #992]	; 2a758 <USBGamePadDeviceConfigure+0x42c>
   2a374:	e59f83e0 	ldr	r8, [pc, #992]	; 2a75c <USBGamePadDeviceConfigure+0x430>
   2a378:	e59f93e0 	ldr	r9, [pc, #992]	; 2a760 <USBGamePadDeviceConfigure+0x434>
   2a37c:	ea000003 	b	2a390 <USBGamePadDeviceConfigure+0x64>
   2a380:	e5d53003 	ldrb	r3, [r5, #3]
   2a384:	e203303f 	and	r3, r3, #63	; 0x3f
   2a388:	e3530003 	cmp	r3, #3
   2a38c:	0a000040 	beq	2a494 <USBGamePadDeviceConfigure+0x168>
   2a390:	e3a01005 	mov	r1, #5
   2a394:	e1a00004 	mov	r0, r4
   2a398:	ebffe94e 	bl	248d8 <USBFunctionGetDescriptor>
   2a39c:	e2505000 	subs	r5, r0, #0
   2a3a0:	1afffff6 	bne	2a380 <USBGamePadDeviceConfigure+0x54>
   2a3a4:	e5945014 	ldr	r5, [r4, #20]
   2a3a8:	e3550000 	cmp	r5, #0
   2a3ac:	0a00002b 	beq	2a460 <USBGamePadDeviceConfigure+0x134>
   2a3b0:	e5d60007 	ldrb	r0, [r6, #7]
   2a3b4:	e5d63008 	ldrb	r3, [r6, #8]
   2a3b8:	e1800403 	orr	r0, r0, r3, lsl #8
   2a3bc:	e1c409b0 	strh	r0, [r4, #144]	; 0x90
   2a3c0:	ebffb4ef 	bl	17784 <malloc>
   2a3c4:	e3500000 	cmp	r0, #0
   2a3c8:	e5840094 	str	r0, [r4, #148]	; 0x94
   2a3cc:	0a000091 	beq	2a618 <USBGamePadDeviceConfigure+0x2ec>
   2a3d0:	e1a00004 	mov	r0, r4
   2a3d4:	ebffe8ef 	bl	24798 <USBFunctionGetHost>
   2a3d8:	e1a07000 	mov	r7, r0
   2a3dc:	e1a00004 	mov	r0, r4
   2a3e0:	ebffe8d5 	bl	2473c <USBFunctionGetEndpoint0>
   2a3e4:	e1a08000 	mov	r8, r0
   2a3e8:	e1a00004 	mov	r0, r4
   2a3ec:	e5d65006 	ldrb	r5, [r6, #6]
   2a3f0:	ebffe9bb 	bl	24ae4 <USBFunctionGetInterfaceNumber>
   2a3f4:	e5d61008 	ldrb	r1, [r6, #8]
   2a3f8:	e5d63007 	ldrb	r3, [r6, #7]
   2a3fc:	e6ff2070 	uxth	r2, r0
   2a400:	e1833401 	orr	r3, r3, r1, lsl #8
   2a404:	e58d300c 	str	r3, [sp, #12]
   2a408:	e5943094 	ldr	r3, [r4, #148]	; 0x94
   2a40c:	e1a05405 	lsl	r5, r5, #8
   2a410:	e1cd20f4 	strd	r2, [sp, #4]
   2a414:	e1a01008 	mov	r1, r8
   2a418:	e3a03006 	mov	r3, #6
   2a41c:	e3a02081 	mov	r2, #129	; 0x81
   2a420:	e1a00007 	mov	r0, r7
   2a424:	e58d5000 	str	r5, [sp]
   2a428:	ebffd17e 	bl	1ea28 <DWHCIDeviceControlMessage>
   2a42c:	e5d63007 	ldrb	r3, [r6, #7]
   2a430:	e5d62008 	ldrb	r2, [r6, #8]
   2a434:	e1833402 	orr	r3, r3, r2, lsl #8
   2a438:	e1500003 	cmp	r0, r3
   2a43c:	0a00003b 	beq	2a530 <USBGamePadDeviceConfigure+0x204>
   2a440:	e3a05000 	mov	r5, #0
   2a444:	e59f2318 	ldr	r2, [pc, #792]	; 2a764 <USBGamePadDeviceConfigure+0x438>
   2a448:	e3a01001 	mov	r1, #1
   2a44c:	e59f0314 	ldr	r0, [pc, #788]	; 2a768 <USBGamePadDeviceConfigure+0x43c>
   2a450:	ebff7cd7 	bl	97b4 <LogWrite>
   2a454:	e1a00005 	mov	r0, r5
   2a458:	e28dd020 	add	sp, sp, #32
   2a45c:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2a460:	e1a00004 	mov	r0, r4
   2a464:	e59f12fc 	ldr	r1, [pc, #764]	; 2a768 <USBGamePadDeviceConfigure+0x43c>
   2a468:	ebffe934 	bl	24940 <USBFunctionConfigurationError>
   2a46c:	e1a00005 	mov	r0, r5
   2a470:	e28dd020 	add	sp, sp, #32
   2a474:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2a478:	e3a05000 	mov	r5, #0
   2a47c:	e1a00004 	mov	r0, r4
   2a480:	e59f12e0 	ldr	r1, [pc, #736]	; 2a768 <USBGamePadDeviceConfigure+0x43c>
   2a484:	ebffe92d 	bl	24940 <USBFunctionConfigurationError>
   2a488:	e1a00005 	mov	r0, r5
   2a48c:	e28dd020 	add	sp, sp, #32
   2a490:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2a494:	e1d530d2 	ldrsb	r3, [r5, #2]
   2a498:	e3530000 	cmp	r3, #0
   2a49c:	ba00000f 	blt	2a4e0 <USBGamePadDeviceConfigure+0x1b4>
   2a4a0:	e5943018 	ldr	r3, [r4, #24]
   2a4a4:	e3530000 	cmp	r3, #0
   2a4a8:	1afffff2 	bne	2a478 <USBGamePadDeviceConfigure+0x14c>
   2a4ac:	e3a00018 	mov	r0, #24
   2a4b0:	ebffb4b3 	bl	17784 <malloc>
   2a4b4:	e3500000 	cmp	r0, #0
   2a4b8:	e1a0a000 	mov	sl, r0
   2a4bc:	e5840018 	str	r0, [r4, #24]
   2a4c0:	0a000059 	beq	2a62c <USBGamePadDeviceConfigure+0x300>
   2a4c4:	e1a00004 	mov	r0, r4
   2a4c8:	ebffe887 	bl	246ec <USBFunctionGetDevice>
   2a4cc:	e1a02005 	mov	r2, r5
   2a4d0:	e1a01000 	mov	r1, r0
   2a4d4:	e1a0000a 	mov	r0, sl
   2a4d8:	ebffe0d4 	bl	22830 <USBEndpoint2>
   2a4dc:	eaffffab 	b	2a390 <USBGamePadDeviceConfigure+0x64>
   2a4e0:	e5943014 	ldr	r3, [r4, #20]
   2a4e4:	e3530000 	cmp	r3, #0
   2a4e8:	1affffe2 	bne	2a478 <USBGamePadDeviceConfigure+0x14c>
   2a4ec:	e3a00018 	mov	r0, #24
   2a4f0:	ebffb4a3 	bl	17784 <malloc>
   2a4f4:	e3500000 	cmp	r0, #0
   2a4f8:	e1a0a000 	mov	sl, r0
   2a4fc:	e5840014 	str	r0, [r4, #20]
   2a500:	1affffef 	bne	2a4c4 <USBGamePadDeviceConfigure+0x198>
   2a504:	e3a02f5d 	mov	r2, #372	; 0x174
   2a508:	e1a01007 	mov	r1, r7
   2a50c:	e1a00009 	mov	r0, r9
   2a510:	ebffb4c2 	bl	17820 <uspi_assertion_failed>
   2a514:	e594a014 	ldr	sl, [r4, #20]
   2a518:	eaffffe9 	b	2a4c4 <USBGamePadDeviceConfigure+0x198>
   2a51c:	e59f2248 	ldr	r2, [pc, #584]	; 2a76c <USBGamePadDeviceConfigure+0x440>
   2a520:	e59f1230 	ldr	r1, [pc, #560]	; 2a758 <USBGamePadDeviceConfigure+0x42c>
   2a524:	e59f0244 	ldr	r0, [pc, #580]	; 2a770 <USBGamePadDeviceConfigure+0x444>
   2a528:	ebffb4bc 	bl	17820 <uspi_assertion_failed>
   2a52c:	eaffff82 	b	2a33c <USBGamePadDeviceConfigure+0x10>
   2a530:	e3a02000 	mov	r2, #0
   2a534:	e59430bc 	ldr	r3, [r4, #188]	; 0xbc
   2a538:	e1a00004 	mov	r0, r4
   2a53c:	e5c32000 	strb	r2, [r3]
   2a540:	ebfffe29 	bl	29dec <USBGamePadDeviceDecodeReport>
   2a544:	e594301c 	ldr	r3, [r4, #28]
   2a548:	e3530000 	cmp	r3, #0
   2a54c:	1a000005 	bne	2a568 <USBGamePadDeviceConfigure+0x23c>
   2a550:	e5943068 	ldr	r3, [r4, #104]	; 0x68
   2a554:	e3530000 	cmp	r3, #0
   2a558:	1a000002 	bne	2a568 <USBGamePadDeviceConfigure+0x23c>
   2a55c:	e5945084 	ldr	r5, [r4, #132]	; 0x84
   2a560:	e3550000 	cmp	r5, #0
   2a564:	0affffc0 	beq	2a46c <USBGamePadDeviceConfigure+0x140>
   2a568:	e1a00004 	mov	r0, r4
   2a56c:	ebffe8a0 	bl	247f4 <USBFunctionConfigure>
   2a570:	e2505000 	subs	r5, r0, #0
   2a574:	0a000022 	beq	2a604 <USBGamePadDeviceConfigure+0x2d8>
   2a578:	e59f51f4 	ldr	r5, [pc, #500]	; 2a774 <USBGamePadDeviceConfigure+0x448>
   2a57c:	e1a00004 	mov	r0, r4
   2a580:	e5953000 	ldr	r3, [r5]
   2a584:	e5843010 	str	r3, [r4, #16]
   2a588:	e2833001 	add	r3, r3, #1
   2a58c:	e5853000 	str	r3, [r5]
   2a590:	ebffe855 	bl	246ec <USBFunctionGetDevice>
   2a594:	e5902014 	ldr	r2, [r0, #20]
   2a598:	e59f11d8 	ldr	r1, [pc, #472]	; 2a778 <USBGamePadDeviceConfigure+0x44c>
   2a59c:	e5d23008 	ldrb	r3, [r2, #8]
   2a5a0:	e5d22009 	ldrb	r2, [r2, #9]
   2a5a4:	e1833402 	orr	r3, r3, r2, lsl #8
   2a5a8:	e1530001 	cmp	r3, r1
   2a5ac:	0a000024 	beq	2a644 <USBGamePadDeviceConfigure+0x318>
   2a5b0:	e28d0014 	add	r0, sp, #20
   2a5b4:	ebfff0bf 	bl	268b8 <String>
   2a5b8:	e5942010 	ldr	r2, [r4, #16]
   2a5bc:	e59f11b8 	ldr	r1, [pc, #440]	; 2a77c <USBGamePadDeviceConfigure+0x450>
   2a5c0:	e28d0014 	add	r0, sp, #20
   2a5c4:	ebfff37c 	bl	273bc <StringFormat>
   2a5c8:	ebffe66c 	bl	23f80 <DeviceNameServiceGet>
   2a5cc:	e1a05000 	mov	r5, r0
   2a5d0:	e28d0014 	add	r0, sp, #20
   2a5d4:	ebfff0ea 	bl	26984 <StringGet>
   2a5d8:	e3a03000 	mov	r3, #0
   2a5dc:	e1a01000 	mov	r1, r0
   2a5e0:	e1a02004 	mov	r2, r4
   2a5e4:	e1a00005 	mov	r0, r5
   2a5e8:	ebffe5e8 	bl	23d90 <DeviceNameServiceAddDevice>
   2a5ec:	e28d0014 	add	r0, sp, #20
   2a5f0:	ebfff0d2 	bl	26940 <_String>
   2a5f4:	e1a00004 	mov	r0, r4
   2a5f8:	ebffff16 	bl	2a258 <USBGamePadDeviceStartRequest>
   2a5fc:	e1a05000 	mov	r5, r0
   2a600:	eaffff99 	b	2a46c <USBGamePadDeviceConfigure+0x140>
   2a604:	e59f2174 	ldr	r2, [pc, #372]	; 2a780 <USBGamePadDeviceConfigure+0x454>
   2a608:	e3a01001 	mov	r1, #1
   2a60c:	e59f0154 	ldr	r0, [pc, #340]	; 2a768 <USBGamePadDeviceConfigure+0x43c>
   2a610:	ebff7c67 	bl	97b4 <LogWrite>
   2a614:	eaffff94 	b	2a46c <USBGamePadDeviceConfigure+0x140>
   2a618:	e3a02e19 	mov	r2, #400	; 0x190
   2a61c:	e59f1134 	ldr	r1, [pc, #308]	; 2a758 <USBGamePadDeviceConfigure+0x42c>
   2a620:	e59f015c 	ldr	r0, [pc, #348]	; 2a784 <USBGamePadDeviceConfigure+0x458>
   2a624:	ebffb47d 	bl	17820 <uspi_assertion_failed>
   2a628:	eaffff68 	b	2a3d0 <USBGamePadDeviceConfigure+0xa4>
   2a62c:	e59f2154 	ldr	r2, [pc, #340]	; 2a788 <USBGamePadDeviceConfigure+0x45c>
   2a630:	e1a01007 	mov	r1, r7
   2a634:	e1a00008 	mov	r0, r8
   2a638:	ebffb478 	bl	17820 <uspi_assertion_failed>
   2a63c:	e594a018 	ldr	sl, [r4, #24]
   2a640:	eaffff9f 	b	2a4c4 <USBGamePadDeviceConfigure+0x198>
   2a644:	e1a00004 	mov	r0, r4
   2a648:	ebffe827 	bl	246ec <USBFunctionGetDevice>
   2a64c:	e5902014 	ldr	r2, [r0, #20]
   2a650:	e5d2300a 	ldrb	r3, [r2, #10]
   2a654:	e5d2200b 	ldrb	r2, [r2, #11]
   2a658:	e1833402 	orr	r3, r3, r2, lsl #8
   2a65c:	e3530f9a 	cmp	r3, #616	; 0x268
   2a660:	1affffd2 	bne	2a5b0 <USBGamePadDeviceConfigure+0x284>
   2a664:	e3a0c042 	mov	ip, #66	; 0x42
   2a668:	e3a0100c 	mov	r1, #12
   2a66c:	e3a03000 	mov	r3, #0
   2a670:	e59420bc 	ldr	r2, [r4, #188]	; 0xbc
   2a674:	e1a00004 	mov	r0, r4
   2a678:	e5c2c000 	strb	ip, [r2]
   2a67c:	e59420bc 	ldr	r2, [r4, #188]	; 0xbc
   2a680:	e2855004 	add	r5, r5, #4
   2a684:	e5c21001 	strb	r1, [r2, #1]
   2a688:	e59420bc 	ldr	r2, [r4, #188]	; 0xbc
   2a68c:	e5c23002 	strb	r3, [r2, #2]
   2a690:	e59420bc 	ldr	r2, [r4, #188]	; 0xbc
   2a694:	e5c23003 	strb	r3, [r2, #3]
   2a698:	ebffe83e 	bl	24798 <USBFunctionGetHost>
   2a69c:	e1a06000 	mov	r6, r0
   2a6a0:	e1a00004 	mov	r0, r4
   2a6a4:	ebffe824 	bl	2473c <USBFunctionGetEndpoint0>
   2a6a8:	e1a07000 	mov	r7, r0
   2a6ac:	e1a00004 	mov	r0, r4
   2a6b0:	ebffe90b 	bl	24ae4 <USBFunctionGetInterfaceNumber>
   2a6b4:	e3a02004 	mov	r2, #4
   2a6b8:	e3a03ffd 	mov	r3, #1012	; 0x3f4
   2a6bc:	e58d200c 	str	r2, [sp, #12]
   2a6c0:	e59420bc 	ldr	r2, [r4, #188]	; 0xbc
   2a6c4:	e6ffc070 	uxth	ip, r0
   2a6c8:	e58dc004 	str	ip, [sp, #4]
   2a6cc:	e1a01007 	mov	r1, r7
   2a6d0:	e58d2008 	str	r2, [sp, #8]
   2a6d4:	e58d3000 	str	r3, [sp]
   2a6d8:	e1a00006 	mov	r0, r6
   2a6dc:	e3a03009 	mov	r3, #9
   2a6e0:	e3a02021 	mov	r2, #33	; 0x21
   2a6e4:	ebffd0cf 	bl	1ea28 <DWHCIDeviceControlMessage>
   2a6e8:	e5941010 	ldr	r1, [r4, #16]
   2a6ec:	e59f2074 	ldr	r2, [pc, #116]	; 2a768 <USBGamePadDeviceConfigure+0x43c>
   2a6f0:	e5d53009 	ldrb	r3, [r5, #9]
   2a6f4:	e0822001 	add	r2, r2, r1
   2a6f8:	e5d22008 	ldrb	r2, [r2, #8]
   2a6fc:	e1a00004 	mov	r0, r4
   2a700:	e1833082 	orr	r3, r3, r2, lsl #1
   2a704:	e5c53009 	strb	r3, [r5, #9]
   2a708:	ebffe822 	bl	24798 <USBFunctionGetHost>
   2a70c:	e1a06000 	mov	r6, r0
   2a710:	e1a00004 	mov	r0, r4
   2a714:	ebffe808 	bl	2473c <USBFunctionGetEndpoint0>
   2a718:	e1a07000 	mov	r7, r0
   2a71c:	e1a00004 	mov	r0, r4
   2a720:	ebffe8ef 	bl	24ae4 <USBFunctionGetInterfaceNumber>
   2a724:	e3a02030 	mov	r2, #48	; 0x30
   2a728:	e59f305c 	ldr	r3, [pc, #92]	; 2a78c <USBGamePadDeviceConfigure+0x460>
   2a72c:	e6ff0070 	uxth	r0, r0
   2a730:	e58d0004 	str	r0, [sp, #4]
   2a734:	e58d200c 	str	r2, [sp, #12]
   2a738:	e58d3000 	str	r3, [sp]
   2a73c:	e1a01007 	mov	r1, r7
   2a740:	e1a00006 	mov	r0, r6
   2a744:	e58d5008 	str	r5, [sp, #8]
   2a748:	e3a03009 	mov	r3, #9
   2a74c:	e3a02021 	mov	r2, #33	; 0x21
   2a750:	ebffd0b4 	bl	1ea28 <DWHCIDeviceControlMessage>
   2a754:	eaffff95 	b	2a5b0 <USBGamePadDeviceConfigure+0x284>
   2a758:	00032168 	.word	0x00032168
   2a75c:	00031d40 	.word	0x00031d40
   2a760:	00031d24 	.word	0x00031d24
   2a764:	000320fc 	.word	0x000320fc
   2a768:	00032158 	.word	0x00032158
   2a76c:	00000153 	.word	0x00000153
   2a770:	000306f0 	.word	0x000306f0
   2a774:	00042360 	.word	0x00042360
   2a778:	0000054c 	.word	0x0000054c
   2a77c:	00030618 	.word	0x00030618
   2a780:	0003171c 	.word	0x0003171c
   2a784:	000320d8 	.word	0x000320d8
   2a788:	00000181 	.word	0x00000181
   2a78c:	00000201 	.word	0x00000201

0002a790 <USBGamePadDeviceCompletionRoutine>:
   2a790:	e92d4070 	push	{r4, r5, r6, lr}
   2a794:	e2525000 	subs	r5, r2, #0
   2a798:	e1a04000 	mov	r4, r0
   2a79c:	0a000023 	beq	2a830 <USBGamePadDeviceCompletionRoutine+0xa0>
   2a7a0:	e3540000 	cmp	r4, #0
   2a7a4:	0a000027 	beq	2a848 <USBGamePadDeviceCompletionRoutine+0xb8>
   2a7a8:	e2856098 	add	r6, r5, #152	; 0x98
   2a7ac:	e1560004 	cmp	r6, r4
   2a7b0:	0a000003 	beq	2a7c4 <USBGamePadDeviceCompletionRoutine+0x34>
   2a7b4:	e59f20a0 	ldr	r2, [pc, #160]	; 2a85c <USBGamePadDeviceCompletionRoutine+0xcc>
   2a7b8:	e59f10a0 	ldr	r1, [pc, #160]	; 2a860 <USBGamePadDeviceCompletionRoutine+0xd0>
   2a7bc:	e59f00a0 	ldr	r0, [pc, #160]	; 2a864 <USBGamePadDeviceCompletionRoutine+0xd4>
   2a7c0:	ebffb416 	bl	17820 <uspi_assertion_failed>
   2a7c4:	e1a00004 	mov	r0, r4
   2a7c8:	ebffe204 	bl	22fe0 <USBRequestGetStatus>
   2a7cc:	e3500000 	cmp	r0, #0
   2a7d0:	1a000004 	bne	2a7e8 <USBGamePadDeviceCompletionRoutine+0x58>
   2a7d4:	e1a00006 	mov	r0, r6
   2a7d8:	ebffe1c0 	bl	22ee0 <_USBRequest>
   2a7dc:	e1a00005 	mov	r0, r5
   2a7e0:	e8bd4070 	pop	{r4, r5, r6, lr}
   2a7e4:	eafffe9b 	b	2a258 <USBGamePadDeviceStartRequest>
   2a7e8:	e1a00004 	mov	r0, r4
   2a7ec:	ebffe208 	bl	23014 <USBRequestGetResultLength>
   2a7f0:	e3500000 	cmp	r0, #0
   2a7f4:	0afffff6 	beq	2a7d4 <USBGamePadDeviceCompletionRoutine+0x44>
   2a7f8:	e5953094 	ldr	r3, [r5, #148]	; 0x94
   2a7fc:	e3530000 	cmp	r3, #0
   2a800:	0afffff3 	beq	2a7d4 <USBGamePadDeviceCompletionRoutine+0x44>
   2a804:	e595308c 	ldr	r3, [r5, #140]	; 0x8c
   2a808:	e3530000 	cmp	r3, #0
   2a80c:	0afffff0 	beq	2a7d4 <USBGamePadDeviceCompletionRoutine+0x44>
   2a810:	e1a00005 	mov	r0, r5
   2a814:	ebfffd74 	bl	29dec <USBGamePadDeviceDecodeReport>
   2a818:	e5950010 	ldr	r0, [r5, #16]
   2a81c:	e595308c 	ldr	r3, [r5, #140]	; 0x8c
   2a820:	e2400001 	sub	r0, r0, #1
   2a824:	e285101c 	add	r1, r5, #28
   2a828:	e12fff33 	blx	r3
   2a82c:	eaffffe8 	b	2a7d4 <USBGamePadDeviceCompletionRoutine+0x44>
   2a830:	e59f2030 	ldr	r2, [pc, #48]	; 2a868 <USBGamePadDeviceCompletionRoutine+0xd8>
   2a834:	e59f1024 	ldr	r1, [pc, #36]	; 2a860 <USBGamePadDeviceCompletionRoutine+0xd0>
   2a838:	e59f002c 	ldr	r0, [pc, #44]	; 2a86c <USBGamePadDeviceCompletionRoutine+0xdc>
   2a83c:	ebffb3f7 	bl	17820 <uspi_assertion_failed>
   2a840:	e3540000 	cmp	r4, #0
   2a844:	1affffd7 	bne	2a7a8 <USBGamePadDeviceCompletionRoutine+0x18>
   2a848:	e59f2020 	ldr	r2, [pc, #32]	; 2a870 <USBGamePadDeviceCompletionRoutine+0xe0>
   2a84c:	e59f100c 	ldr	r1, [pc, #12]	; 2a860 <USBGamePadDeviceCompletionRoutine+0xd0>
   2a850:	e59f001c 	ldr	r0, [pc, #28]	; 2a874 <USBGamePadDeviceCompletionRoutine+0xe4>
   2a854:	ebffb3f1 	bl	17820 <uspi_assertion_failed>
   2a858:	eaffffd2 	b	2a7a8 <USBGamePadDeviceCompletionRoutine+0x18>
   2a85c:	000001de 	.word	0x000001de
   2a860:	00032168 	.word	0x00032168
   2a864:	00031f60 	.word	0x00031f60
   2a868:	000001db 	.word	0x000001db
   2a86c:	000306f0 	.word	0x000306f0
   2a870:	000001dd 	.word	0x000001dd
   2a874:	000307b8 	.word	0x000307b8

0002a878 <USBGamePadDevice>:
   2a878:	e92d4070 	push	{r4, r5, r6, lr}
   2a87c:	e2504000 	subs	r4, r0, #0
   2a880:	e1a05001 	mov	r5, r1
   2a884:	0a000028 	beq	2a92c <USBGamePadDevice+0xb4>
   2a888:	e1a01005 	mov	r1, r5
   2a88c:	e1a00004 	mov	r0, r4
   2a890:	ebffe6fa 	bl	24480 <USBFunctionCopy>
   2a894:	e3a01000 	mov	r1, #0
   2a898:	e1a03004 	mov	r3, r4
   2a89c:	e59f009c 	ldr	r0, [pc, #156]	; 2a940 <USBGamePadDevice+0xc8>
   2a8a0:	e1a02001 	mov	r2, r1
   2a8a4:	e5841014 	str	r1, [r4, #20]
   2a8a8:	e5841018 	str	r1, [r4, #24]
   2a8ac:	e584108c 	str	r1, [r4, #140]	; 0x8c
   2a8b0:	e5841094 	str	r1, [r4, #148]	; 0x94
   2a8b4:	e1c419b0 	strh	r1, [r4, #144]	; 0x90
   2a8b8:	e1c41cb0 	strh	r1, [r4, #192]	; 0xc0
   2a8bc:	e584101c 	str	r1, [r4, #28]
   2a8c0:	e5840000 	str	r0, [r4]
   2a8c4:	e2841048 	add	r1, r4, #72	; 0x48
   2a8c8:	e5832020 	str	r2, [r3, #32]
   2a8cc:	e5832024 	str	r2, [r3, #36]	; 0x24
   2a8d0:	e5832028 	str	r2, [r3, #40]	; 0x28
   2a8d4:	e283300c 	add	r3, r3, #12
   2a8d8:	e1530001 	cmp	r3, r1
   2a8dc:	1afffff9 	bne	2a8c8 <USBGamePadDevice+0x50>
   2a8e0:	e5842068 	str	r2, [r4, #104]	; 0x68
   2a8e4:	e584206c 	str	r2, [r4, #108]	; 0x6c
   2a8e8:	e5842070 	str	r2, [r4, #112]	; 0x70
   2a8ec:	e5842074 	str	r2, [r4, #116]	; 0x74
   2a8f0:	e5842078 	str	r2, [r4, #120]	; 0x78
   2a8f4:	e584207c 	str	r2, [r4, #124]	; 0x7c
   2a8f8:	e5842080 	str	r2, [r4, #128]	; 0x80
   2a8fc:	e5842084 	str	r2, [r4, #132]	; 0x84
   2a900:	e5842088 	str	r2, [r4, #136]	; 0x88
   2a904:	e3a00040 	mov	r0, #64	; 0x40
   2a908:	ebffb39d 	bl	17784 <malloc>
   2a90c:	e3500000 	cmp	r0, #0
   2a910:	e58400bc 	str	r0, [r4, #188]	; 0xbc
   2a914:	18bd8070 	popne	{r4, r5, r6, pc}
   2a918:	e3a02071 	mov	r2, #113	; 0x71
   2a91c:	e8bd4070 	pop	{r4, r5, r6, lr}
   2a920:	e59f101c 	ldr	r1, [pc, #28]	; 2a944 <USBGamePadDevice+0xcc>
   2a924:	e59f001c 	ldr	r0, [pc, #28]	; 2a948 <USBGamePadDevice+0xd0>
   2a928:	eaffb3bc 	b	17820 <uspi_assertion_failed>
   2a92c:	e3a02056 	mov	r2, #86	; 0x56
   2a930:	e59f100c 	ldr	r1, [pc, #12]	; 2a944 <USBGamePadDevice+0xcc>
   2a934:	e59f0010 	ldr	r0, [pc, #16]	; 2a94c <USBGamePadDevice+0xd4>
   2a938:	ebffb3b8 	bl	17820 <uspi_assertion_failed>
   2a93c:	eaffffd1 	b	2a888 <USBGamePadDevice+0x10>
   2a940:	0002a32c 	.word	0x0002a32c
   2a944:	00032168 	.word	0x00032168
   2a948:	00031f44 	.word	0x00031f44
   2a94c:	000306f0 	.word	0x000306f0

0002a950 <_CUSBGamePadDevice>:
   2a950:	e92d4010 	push	{r4, lr}
   2a954:	e2504000 	subs	r4, r0, #0
   2a958:	0a00001e 	beq	2a9d8 <_CUSBGamePadDevice+0x88>
   2a95c:	e5940094 	ldr	r0, [r4, #148]	; 0x94
   2a960:	e3500000 	cmp	r0, #0
   2a964:	0a000002 	beq	2a974 <_CUSBGamePadDevice+0x24>
   2a968:	ebffb386 	bl	17788 <free>
   2a96c:	e3a03000 	mov	r3, #0
   2a970:	e5843094 	str	r3, [r4, #148]	; 0x94
   2a974:	e59400bc 	ldr	r0, [r4, #188]	; 0xbc
   2a978:	e3500000 	cmp	r0, #0
   2a97c:	0a000002 	beq	2a98c <_CUSBGamePadDevice+0x3c>
   2a980:	ebffb380 	bl	17788 <free>
   2a984:	e3a03000 	mov	r3, #0
   2a988:	e58430bc 	str	r3, [r4, #188]	; 0xbc
   2a98c:	e5940014 	ldr	r0, [r4, #20]
   2a990:	e3500000 	cmp	r0, #0
   2a994:	0a000004 	beq	2a9ac <_CUSBGamePadDevice+0x5c>
   2a998:	ebffe041 	bl	22aa4 <_USBEndpoint>
   2a99c:	e5940014 	ldr	r0, [r4, #20]
   2a9a0:	ebffb378 	bl	17788 <free>
   2a9a4:	e3a03000 	mov	r3, #0
   2a9a8:	e5843014 	str	r3, [r4, #20]
   2a9ac:	e5940018 	ldr	r0, [r4, #24]
   2a9b0:	e3500000 	cmp	r0, #0
   2a9b4:	0a000004 	beq	2a9cc <_CUSBGamePadDevice+0x7c>
   2a9b8:	ebffe039 	bl	22aa4 <_USBEndpoint>
   2a9bc:	e5940018 	ldr	r0, [r4, #24]
   2a9c0:	ebffb370 	bl	17788 <free>
   2a9c4:	e3a03000 	mov	r3, #0
   2a9c8:	e5843018 	str	r3, [r4, #24]
   2a9cc:	e1a00004 	mov	r0, r4
   2a9d0:	e8bd4010 	pop	{r4, lr}
   2a9d4:	eaffe6eb 	b	24588 <_USBFunction>
   2a9d8:	e3a02076 	mov	r2, #118	; 0x76
   2a9dc:	e59f1008 	ldr	r1, [pc, #8]	; 2a9ec <_CUSBGamePadDevice+0x9c>
   2a9e0:	e59f0008 	ldr	r0, [pc, #8]	; 2a9f0 <_CUSBGamePadDevice+0xa0>
   2a9e4:	ebffb38d 	bl	17820 <uspi_assertion_failed>
   2a9e8:	eaffffdb 	b	2a95c <_CUSBGamePadDevice+0xc>
   2a9ec:	00032168 	.word	0x00032168
   2a9f0:	000306f0 	.word	0x000306f0

0002a9f4 <USBGamePadDeviceRegisterStatusHandler>:
   2a9f4:	e92d4070 	push	{r4, r5, r6, lr}
   2a9f8:	e2505000 	subs	r5, r0, #0
   2a9fc:	e1a04001 	mov	r4, r1
   2aa00:	0a000009 	beq	2aa2c <USBGamePadDeviceRegisterStatusHandler+0x38>
   2aa04:	e3540000 	cmp	r4, #0
   2aa08:	0a000001 	beq	2aa14 <USBGamePadDeviceRegisterStatusHandler+0x20>
   2aa0c:	e585408c 	str	r4, [r5, #140]	; 0x8c
   2aa10:	e8bd8070 	pop	{r4, r5, r6, pc}
   2aa14:	e59f2024 	ldr	r2, [pc, #36]	; 2aa40 <USBGamePadDeviceRegisterStatusHandler+0x4c>
   2aa18:	e59f1024 	ldr	r1, [pc, #36]	; 2aa44 <USBGamePadDeviceRegisterStatusHandler+0x50>
   2aa1c:	e59f0024 	ldr	r0, [pc, #36]	; 2aa48 <USBGamePadDeviceRegisterStatusHandler+0x54>
   2aa20:	ebffb37e 	bl	17820 <uspi_assertion_failed>
   2aa24:	e585408c 	str	r4, [r5, #140]	; 0x8c
   2aa28:	e8bd8070 	pop	{r4, r5, r6, pc}
   2aa2c:	e59f2018 	ldr	r2, [pc, #24]	; 2aa4c <USBGamePadDeviceRegisterStatusHandler+0x58>
   2aa30:	e59f100c 	ldr	r1, [pc, #12]	; 2aa44 <USBGamePadDeviceRegisterStatusHandler+0x50>
   2aa34:	e59f0014 	ldr	r0, [pc, #20]	; 2aa50 <USBGamePadDeviceRegisterStatusHandler+0x5c>
   2aa38:	ebffb378 	bl	17820 <uspi_assertion_failed>
   2aa3c:	eafffff0 	b	2aa04 <USBGamePadDeviceRegisterStatusHandler+0x10>
   2aa40:	000001c7 	.word	0x000001c7
   2aa44:	00032168 	.word	0x00032168
   2aa48:	0003212c 	.word	0x0003212c
   2aa4c:	000001c6 	.word	0x000001c6
   2aa50:	000306f0 	.word	0x000306f0

0002aa54 <USBGamePadDeviceGetReport>:
   2aa54:	e92d4070 	push	{r4, r5, r6, lr}
   2aa58:	e24dd010 	sub	sp, sp, #16
   2aa5c:	e1a04000 	mov	r4, r0
   2aa60:	ebffe74c 	bl	24798 <USBFunctionGetHost>
   2aa64:	e1a05000 	mov	r5, r0
   2aa68:	e1a00004 	mov	r0, r4
   2aa6c:	ebffe732 	bl	2473c <USBFunctionGetEndpoint0>
   2aa70:	e1a06000 	mov	r6, r0
   2aa74:	e1a00004 	mov	r0, r4
   2aa78:	ebffe819 	bl	24ae4 <USBFunctionGetInterfaceNumber>
   2aa7c:	e3a03c01 	mov	r3, #256	; 0x100
   2aa80:	e6ff0070 	uxth	r0, r0
   2aa84:	e1d4ccb0 	ldrh	ip, [r4, #192]	; 0xc0
   2aa88:	e58d0004 	str	r0, [sp, #4]
   2aa8c:	e59420bc 	ldr	r2, [r4, #188]	; 0xbc
   2aa90:	e1a01006 	mov	r1, r6
   2aa94:	e58d2008 	str	r2, [sp, #8]
   2aa98:	e58d3000 	str	r3, [sp]
   2aa9c:	e1a00005 	mov	r0, r5
   2aaa0:	e58dc00c 	str	ip, [sp, #12]
   2aaa4:	e3a03001 	mov	r3, #1
   2aaa8:	e3a020a1 	mov	r2, #161	; 0xa1
   2aaac:	ebffcfdd 	bl	1ea28 <DWHCIDeviceControlMessage>
   2aab0:	e3500000 	cmp	r0, #0
   2aab4:	da000003 	ble	2aac8 <USBGamePadDeviceGetReport+0x74>
   2aab8:	e1a00004 	mov	r0, r4
   2aabc:	e28dd010 	add	sp, sp, #16
   2aac0:	e8bd4070 	pop	{r4, r5, r6, lr}
   2aac4:	eafffcc8 	b	29dec <USBGamePadDeviceDecodeReport>
   2aac8:	e28dd010 	add	sp, sp, #16
   2aacc:	e8bd8070 	pop	{r4, r5, r6, pc}

0002aad0 <uspi_EnterCritical>:
   2aad0:	e10f2000 	mrs	r2, CPSR
   2aad4:	f10c0080 	cpsid	i
   2aad8:	e59f1028 	ldr	r1, [pc, #40]	; 2ab08 <uspi_EnterCritical+0x38>
   2aadc:	e5913000 	ldr	r3, [r1]
   2aae0:	e3530000 	cmp	r3, #0
   2aae4:	01a023a2 	lsreq	r2, r2, #7
   2aae8:	02222001 	eoreq	r2, r2, #1
   2aaec:	e2833001 	add	r3, r3, #1
   2aaf0:	02022001 	andeq	r2, r2, #1
   2aaf4:	e5813000 	str	r3, [r1]
   2aaf8:	05812004 	streq	r2, [r1, #4]
   2aafc:	e3a03000 	mov	r3, #0
   2ab00:	ee073fba 	mcr	15, 0, r3, cr7, cr10, {5}
   2ab04:	e12fff1e 	bx	lr
   2ab08:	00080b08 	.word	0x00080b08

0002ab0c <uspi_LeaveCritical>:
   2ab0c:	e92d4010 	push	{r4, lr}
   2ab10:	e3a03000 	mov	r3, #0
   2ab14:	ee073fba 	mcr	15, 0, r3, cr7, cr10, {5}
   2ab18:	e59f4044 	ldr	r4, [pc, #68]	; 2ab64 <uspi_LeaveCritical+0x58>
   2ab1c:	e5943000 	ldr	r3, [r4]
   2ab20:	e3530000 	cmp	r3, #0
   2ab24:	0a000009 	beq	2ab50 <uspi_LeaveCritical+0x44>
   2ab28:	e5943000 	ldr	r3, [r4]
   2ab2c:	e2433001 	sub	r3, r3, #1
   2ab30:	e3530000 	cmp	r3, #0
   2ab34:	e5843000 	str	r3, [r4]
   2ab38:	18bd8010 	popne	{r4, pc}
   2ab3c:	e5943004 	ldr	r3, [r4, #4]
   2ab40:	e3530000 	cmp	r3, #0
   2ab44:	08bd8010 	popeq	{r4, pc}
   2ab48:	f1080080 	cpsie	i
   2ab4c:	e8bd8010 	pop	{r4, pc}
   2ab50:	e3a0203b 	mov	r2, #59	; 0x3b
   2ab54:	e59f100c 	ldr	r1, [pc, #12]	; 2ab68 <uspi_LeaveCritical+0x5c>
   2ab58:	e59f000c 	ldr	r0, [pc, #12]	; 2ab6c <uspi_LeaveCritical+0x60>
   2ab5c:	ebffb32f 	bl	17820 <uspi_assertion_failed>
   2ab60:	eafffff0 	b	2ab28 <uspi_LeaveCritical+0x1c>
   2ab64:	00080b08 	.word	0x00080b08
   2ab68:	00032178 	.word	0x00032178
   2ab6c:	00032188 	.word	0x00032188

0002ab70 <uspi_CleanAndInvalidateDataCacheRange>:
   2ab70:	ee070f3e 	mcr	15, 0, r0, cr7, cr14, {1}
   2ab74:	e2813020 	add	r3, r1, #32
   2ab78:	e353001f 	cmp	r3, #31
   2ab7c:	912fff1e 	bxls	lr
   2ab80:	e2800020 	add	r0, r0, #32
   2ab84:	e3c1101f 	bic	r1, r1, #31
   2ab88:	e0801001 	add	r1, r0, r1
   2ab8c:	ee070f3e 	mcr	15, 0, r0, cr7, cr14, {1}
   2ab90:	e1510000 	cmp	r1, r0
   2ab94:	012fff1e 	bxeq	lr
   2ab98:	e2800020 	add	r0, r0, #32
   2ab9c:	eafffffa 	b	2ab8c <uspi_CleanAndInvalidateDataCacheRange+0x1c>

0002aba0 <USBString>:
   2aba0:	e92d4070 	push	{r4, r5, r6, lr}
   2aba4:	e2504000 	subs	r4, r0, #0
   2aba8:	e1a05001 	mov	r5, r1
   2abac:	0a000012 	beq	2abfc <USBString+0x5c>
   2abb0:	e3550000 	cmp	r5, #0
   2abb4:	e5845000 	str	r5, [r4]
   2abb8:	0a000016 	beq	2ac18 <USBString+0x78>
   2abbc:	e3a03000 	mov	r3, #0
   2abc0:	e3a0000c 	mov	r0, #12
   2abc4:	e5843004 	str	r3, [r4, #4]
   2abc8:	ebffb2ed 	bl	17784 <malloc>
   2abcc:	e3500000 	cmp	r0, #0
   2abd0:	e5840008 	str	r0, [r4, #8]
   2abd4:	0a000001 	beq	2abe0 <USBString+0x40>
   2abd8:	e8bd4070 	pop	{r4, r5, r6, lr}
   2abdc:	eaffef35 	b	268b8 <String>
   2abe0:	e59f0044 	ldr	r0, [pc, #68]	; 2ac2c <USBString+0x8c>
   2abe4:	e3a02029 	mov	r2, #41	; 0x29
   2abe8:	e59f1040 	ldr	r1, [pc, #64]	; 2ac30 <USBString+0x90>
   2abec:	ebffb30b 	bl	17820 <uspi_assertion_failed>
   2abf0:	e5940008 	ldr	r0, [r4, #8]
   2abf4:	e8bd4070 	pop	{r4, r5, r6, lr}
   2abf8:	eaffef2e 	b	268b8 <String>
   2abfc:	e3a02021 	mov	r2, #33	; 0x21
   2ac00:	e59f1028 	ldr	r1, [pc, #40]	; 2ac30 <USBString+0x90>
   2ac04:	e59f0028 	ldr	r0, [pc, #40]	; 2ac34 <USBString+0x94>
   2ac08:	ebffb304 	bl	17820 <uspi_assertion_failed>
   2ac0c:	e3550000 	cmp	r5, #0
   2ac10:	e5845000 	str	r5, [r4]
   2ac14:	1affffe8 	bne	2abbc <USBString+0x1c>
   2ac18:	e3a02024 	mov	r2, #36	; 0x24
   2ac1c:	e59f100c 	ldr	r1, [pc, #12]	; 2ac30 <USBString+0x90>
   2ac20:	e59f0010 	ldr	r0, [pc, #16]	; 2ac38 <USBString+0x98>
   2ac24:	ebffb2fd 	bl	17820 <uspi_assertion_failed>
   2ac28:	eaffffe3 	b	2abbc <USBString+0x1c>
   2ac2c:	000321ac 	.word	0x000321ac
   2ac30:	000321a0 	.word	0x000321a0
   2ac34:	000306f0 	.word	0x000306f0
   2ac38:	00030d90 	.word	0x00030d90

0002ac3c <USBStringCopy>:
   2ac3c:	e92d4070 	push	{r4, r5, r6, lr}
   2ac40:	e2505000 	subs	r5, r0, #0
   2ac44:	e1a04001 	mov	r4, r1
   2ac48:	0a000030 	beq	2ad10 <USBStringCopy+0xd4>
   2ac4c:	e3540000 	cmp	r4, #0
   2ac50:	0a000034 	beq	2ad28 <USBStringCopy+0xec>
   2ac54:	e3a03000 	mov	r3, #0
   2ac58:	e5942000 	ldr	r2, [r4]
   2ac5c:	e5853004 	str	r3, [r5, #4]
   2ac60:	e5943004 	ldr	r3, [r4, #4]
   2ac64:	e5852000 	str	r2, [r5]
   2ac68:	e3530000 	cmp	r3, #0
   2ac6c:	0a000007 	beq	2ac90 <USBStringCopy+0x54>
   2ac70:	e5d30000 	ldrb	r0, [r3]
   2ac74:	ebffb2c2 	bl	17784 <malloc>
   2ac78:	e3500000 	cmp	r0, #0
   2ac7c:	e5850004 	str	r0, [r5, #4]
   2ac80:	0a000011 	beq	2accc <USBStringCopy+0x90>
   2ac84:	e5941004 	ldr	r1, [r4, #4]
   2ac88:	e5d12000 	ldrb	r2, [r1]
   2ac8c:	ebfff219 	bl	274f8 <uspi_memcpy>
   2ac90:	e5943008 	ldr	r3, [r4, #8]
   2ac94:	e3530000 	cmp	r3, #0
   2ac98:	0a000017 	beq	2acfc <USBStringCopy+0xc0>
   2ac9c:	e3a0000c 	mov	r0, #12
   2aca0:	ebffb2b7 	bl	17784 <malloc>
   2aca4:	e3500000 	cmp	r0, #0
   2aca8:	e1a06000 	mov	r6, r0
   2acac:	e5850008 	str	r0, [r5, #8]
   2acb0:	0a00000b 	beq	2ace4 <USBStringCopy+0xa8>
   2acb4:	e5940008 	ldr	r0, [r4, #8]
   2acb8:	ebffef31 	bl	26984 <StringGet>
   2acbc:	e1a01000 	mov	r1, r0
   2acc0:	e1a00006 	mov	r0, r6
   2acc4:	e8bd4070 	pop	{r4, r5, r6, lr}
   2acc8:	eaffef08 	b	268f0 <String2>
   2accc:	e59f0068 	ldr	r0, [pc, #104]	; 2ad3c <USBStringCopy+0x100>
   2acd0:	e3a02037 	mov	r2, #55	; 0x37
   2acd4:	e59f1064 	ldr	r1, [pc, #100]	; 2ad40 <USBStringCopy+0x104>
   2acd8:	ebffb2d0 	bl	17820 <uspi_assertion_failed>
   2acdc:	e5950004 	ldr	r0, [r5, #4]
   2ace0:	eaffffe7 	b	2ac84 <USBStringCopy+0x48>
   2ace4:	e3a0203d 	mov	r2, #61	; 0x3d
   2ace8:	e59f1050 	ldr	r1, [pc, #80]	; 2ad40 <USBStringCopy+0x104>
   2acec:	e59f0050 	ldr	r0, [pc, #80]	; 2ad44 <USBStringCopy+0x108>
   2acf0:	ebffb2ca 	bl	17820 <uspi_assertion_failed>
   2acf4:	e5956008 	ldr	r6, [r5, #8]
   2acf8:	eaffffed 	b	2acb4 <USBStringCopy+0x78>
   2acfc:	e3a0203b 	mov	r2, #59	; 0x3b
   2ad00:	e59f1038 	ldr	r1, [pc, #56]	; 2ad40 <USBStringCopy+0x104>
   2ad04:	e59f003c 	ldr	r0, [pc, #60]	; 2ad48 <USBStringCopy+0x10c>
   2ad08:	ebffb2c4 	bl	17820 <uspi_assertion_failed>
   2ad0c:	eaffffe2 	b	2ac9c <USBStringCopy+0x60>
   2ad10:	e3a0202f 	mov	r2, #47	; 0x2f
   2ad14:	e59f1024 	ldr	r1, [pc, #36]	; 2ad40 <USBStringCopy+0x104>
   2ad18:	e59f002c 	ldr	r0, [pc, #44]	; 2ad4c <USBStringCopy+0x110>
   2ad1c:	ebffb2bf 	bl	17820 <uspi_assertion_failed>
   2ad20:	e3540000 	cmp	r4, #0
   2ad24:	1affffca 	bne	2ac54 <USBStringCopy+0x18>
   2ad28:	e3a02030 	mov	r2, #48	; 0x30
   2ad2c:	e59f100c 	ldr	r1, [pc, #12]	; 2ad40 <USBStringCopy+0x104>
   2ad30:	e59f0018 	ldr	r0, [pc, #24]	; 2ad50 <USBStringCopy+0x114>
   2ad34:	ebffb2b9 	bl	17820 <uspi_assertion_failed>
   2ad38:	eaffffc5 	b	2ac54 <USBStringCopy+0x18>
   2ad3c:	000321c4 	.word	0x000321c4
   2ad40:	000321a0 	.word	0x000321a0
   2ad44:	000321ac 	.word	0x000321ac
   2ad48:	000321e0 	.word	0x000321e0
   2ad4c:	000306f0 	.word	0x000306f0
   2ad50:	000311e0 	.word	0x000311e0

0002ad54 <_USBString>:
   2ad54:	e92d4070 	push	{r4, r5, r6, lr}
   2ad58:	e2504000 	subs	r4, r0, #0
   2ad5c:	0a00000f 	beq	2ada0 <_USBString+0x4c>
   2ad60:	e5940008 	ldr	r0, [r4, #8]
   2ad64:	e3500000 	cmp	r0, #0
   2ad68:	0a000013 	beq	2adbc <_USBString+0x68>
   2ad6c:	e3a05000 	mov	r5, #0
   2ad70:	ebffeef2 	bl	26940 <_String>
   2ad74:	e5940008 	ldr	r0, [r4, #8]
   2ad78:	ebffb282 	bl	17788 <free>
   2ad7c:	e5940004 	ldr	r0, [r4, #4]
   2ad80:	e5845008 	str	r5, [r4, #8]
   2ad84:	e1500005 	cmp	r0, r5
   2ad88:	0a000001 	beq	2ad94 <_USBString+0x40>
   2ad8c:	ebffb27d 	bl	17788 <free>
   2ad90:	e5845004 	str	r5, [r4, #4]
   2ad94:	e3a03000 	mov	r3, #0
   2ad98:	e5843000 	str	r3, [r4]
   2ad9c:	e8bd8070 	pop	{r4, r5, r6, pc}
   2ada0:	e59f002c 	ldr	r0, [pc, #44]	; 2add4 <_USBString+0x80>
   2ada4:	e3a02043 	mov	r2, #67	; 0x43
   2ada8:	e59f1028 	ldr	r1, [pc, #40]	; 2add8 <_USBString+0x84>
   2adac:	ebffb29b 	bl	17820 <uspi_assertion_failed>
   2adb0:	e5940008 	ldr	r0, [r4, #8]
   2adb4:	e3500000 	cmp	r0, #0
   2adb8:	1affffeb 	bne	2ad6c <_USBString+0x18>
   2adbc:	e59f0018 	ldr	r0, [pc, #24]	; 2addc <_USBString+0x88>
   2adc0:	e3a02045 	mov	r2, #69	; 0x45
   2adc4:	e59f100c 	ldr	r1, [pc, #12]	; 2add8 <_USBString+0x84>
   2adc8:	ebffb294 	bl	17820 <uspi_assertion_failed>
   2adcc:	e5940008 	ldr	r0, [r4, #8]
   2add0:	eaffffe5 	b	2ad6c <_USBString+0x18>
   2add4:	000306f0 	.word	0x000306f0
   2add8:	000321a0 	.word	0x000321a0
   2addc:	000321ac 	.word	0x000321ac

0002ade0 <USBStringGetFromDescriptor>:
   2ade0:	e92d49f0 	push	{r4, r5, r6, r7, r8, fp, lr}
   2ade4:	e2504000 	subs	r4, r0, #0
   2ade8:	e28db018 	add	fp, sp, #24
   2adec:	e24dd014 	sub	sp, sp, #20
   2adf0:	e1a05001 	mov	r5, r1
   2adf4:	e1a07002 	mov	r7, r2
   2adf8:	0a000064 	beq	2af90 <USBStringGetFromDescriptor+0x1b0>
   2adfc:	e3550000 	cmp	r5, #0
   2ae00:	0a000028 	beq	2aea8 <USBStringGetFromDescriptor+0xc8>
   2ae04:	e5940004 	ldr	r0, [r4, #4]
   2ae08:	e3500000 	cmp	r0, #0
   2ae0c:	0a000000 	beq	2ae14 <USBStringGetFromDescriptor+0x34>
   2ae10:	ebffb25c 	bl	17788 <free>
   2ae14:	e3a00004 	mov	r0, #4
   2ae18:	ebffb259 	bl	17784 <malloc>
   2ae1c:	e3500000 	cmp	r0, #0
   2ae20:	e5840004 	str	r0, [r4, #4]
   2ae24:	0a00004c 	beq	2af5c <USBStringGetFromDescriptor+0x17c>
   2ae28:	e5940000 	ldr	r0, [r4]
   2ae2c:	e3500000 	cmp	r0, #0
   2ae30:	0a000050 	beq	2af78 <USBStringGetFromDescriptor+0x198>
   2ae34:	ebffdac5 	bl	21950 <USBDeviceGetHost>
   2ae38:	e1a06000 	mov	r6, r0
   2ae3c:	e5940000 	ldr	r0, [r4]
   2ae40:	ebffdaac 	bl	218f8 <USBDeviceGetEndpoint0>
   2ae44:	e3a03004 	mov	r3, #4
   2ae48:	e58d300c 	str	r3, [sp, #12]
   2ae4c:	e5943004 	ldr	r3, [r4, #4]
   2ae50:	e3855c03 	orr	r5, r5, #768	; 0x300
   2ae54:	e1a01000 	mov	r1, r0
   2ae58:	e58d3008 	str	r3, [sp, #8]
   2ae5c:	e1a00006 	mov	r0, r6
   2ae60:	e88d00a0 	stm	sp, {r5, r7}
   2ae64:	e3a03006 	mov	r3, #6
   2ae68:	e3a02080 	mov	r2, #128	; 0x80
   2ae6c:	ebffceed 	bl	1ea28 <DWHCIDeviceControlMessage>
   2ae70:	e3500000 	cmp	r0, #0
   2ae74:	ba000008 	blt	2ae9c <USBStringGetFromDescriptor+0xbc>
   2ae78:	e5940004 	ldr	r0, [r4, #4]
   2ae7c:	e5d06000 	ldrb	r6, [r0]
   2ae80:	e3560001 	cmp	r6, #1
   2ae84:	9a000004 	bls	2ae9c <USBStringGetFromDescriptor+0xbc>
   2ae88:	e3160001 	tst	r6, #1
   2ae8c:	1a000002 	bne	2ae9c <USBStringGetFromDescriptor+0xbc>
   2ae90:	e5d03001 	ldrb	r3, [r0, #1]
   2ae94:	e3530003 	cmp	r3, #3
   2ae98:	0a000007 	beq	2aebc <USBStringGetFromDescriptor+0xdc>
   2ae9c:	e3a00000 	mov	r0, #0
   2aea0:	e24bd018 	sub	sp, fp, #24
   2aea4:	e8bd89f0 	pop	{r4, r5, r6, r7, r8, fp, pc}
   2aea8:	e3a02056 	mov	r2, #86	; 0x56
   2aeac:	e59f11ac 	ldr	r1, [pc, #428]	; 2b060 <USBStringGetFromDescriptor+0x280>
   2aeb0:	e59f01ac 	ldr	r0, [pc, #428]	; 2b064 <USBStringGetFromDescriptor+0x284>
   2aeb4:	ebffb259 	bl	17820 <uspi_assertion_failed>
   2aeb8:	eaffffd1 	b	2ae04 <USBStringGetFromDescriptor+0x24>
   2aebc:	e3560004 	cmp	r6, #4
   2aec0:	8a000037 	bhi	2afa4 <USBStringGetFromDescriptor+0x1c4>
   2aec4:	e2466002 	sub	r6, r6, #2
   2aec8:	e1a0e0c6 	asr	lr, r6, #1
   2aecc:	e28e3008 	add	r3, lr, #8
   2aed0:	e3c33007 	bic	r3, r3, #7
   2aed4:	e35e0000 	cmp	lr, #0
   2aed8:	e04dd003 	sub	sp, sp, r3
   2aedc:	e28d5010 	add	r5, sp, #16
   2aee0:	13a02000 	movne	r2, #0
   2aee4:	128dc00f 	addne	ip, sp, #15
   2aee8:	0a00000a 	beq	2af18 <USBStringGetFromDescriptor+0x138>
   2aeec:	e0801082 	add	r1, r0, r2, lsl #1
   2aef0:	e5d13002 	ldrb	r3, [r1, #2]
   2aef4:	e5d11003 	ldrb	r1, [r1, #3]
   2aef8:	e2822001 	add	r2, r2, #1
   2aefc:	e1833401 	orr	r3, r3, r1, lsl #8
   2af00:	e2431020 	sub	r1, r3, #32
   2af04:	e351005e 	cmp	r1, #94	; 0x5e
   2af08:	83a0305f 	movhi	r3, #95	; 0x5f
   2af0c:	e152000e 	cmp	r2, lr
   2af10:	e5ec3001 	strb	r3, [ip, #1]!
   2af14:	1afffff4 	bne	2aeec <USBStringGetFromDescriptor+0x10c>
   2af18:	e3a03000 	mov	r3, #0
   2af1c:	e5940008 	ldr	r0, [r4, #8]
   2af20:	e7c530c6 	strb	r3, [r5, r6, asr #1]
   2af24:	e1500003 	cmp	r0, r3
   2af28:	0a000041 	beq	2b034 <USBStringGetFromDescriptor+0x254>
   2af2c:	ebffee83 	bl	26940 <_String>
   2af30:	e5940008 	ldr	r0, [r4, #8]
   2af34:	ebffb213 	bl	17788 <free>
   2af38:	e3a0000c 	mov	r0, #12
   2af3c:	ebffb210 	bl	17784 <malloc>
   2af40:	e3500000 	cmp	r0, #0
   2af44:	e5840008 	str	r0, [r4, #8]
   2af48:	0a000033 	beq	2b01c <USBStringGetFromDescriptor+0x23c>
   2af4c:	e1a01005 	mov	r1, r5
   2af50:	ebffee66 	bl	268f0 <String2>
   2af54:	e3a00001 	mov	r0, #1
   2af58:	eaffffd0 	b	2aea0 <USBStringGetFromDescriptor+0xc0>
   2af5c:	e59f0104 	ldr	r0, [pc, #260]	; 2b068 <USBStringGetFromDescriptor+0x288>
   2af60:	e3a0205d 	mov	r2, #93	; 0x5d
   2af64:	e59f10f4 	ldr	r1, [pc, #244]	; 2b060 <USBStringGetFromDescriptor+0x280>
   2af68:	ebffb22c 	bl	17820 <uspi_assertion_failed>
   2af6c:	e5940000 	ldr	r0, [r4]
   2af70:	e3500000 	cmp	r0, #0
   2af74:	1affffae 	bne	2ae34 <USBStringGetFromDescriptor+0x54>
   2af78:	e59f00ec 	ldr	r0, [pc, #236]	; 2b06c <USBStringGetFromDescriptor+0x28c>
   2af7c:	e3a0205f 	mov	r2, #95	; 0x5f
   2af80:	e59f10d8 	ldr	r1, [pc, #216]	; 2b060 <USBStringGetFromDescriptor+0x280>
   2af84:	ebffb225 	bl	17820 <uspi_assertion_failed>
   2af88:	e5940000 	ldr	r0, [r4]
   2af8c:	eaffffa8 	b	2ae34 <USBStringGetFromDescriptor+0x54>
   2af90:	e3a02055 	mov	r2, #85	; 0x55
   2af94:	e59f10c4 	ldr	r1, [pc, #196]	; 2b060 <USBStringGetFromDescriptor+0x280>
   2af98:	e59f00d0 	ldr	r0, [pc, #208]	; 2b070 <USBStringGetFromDescriptor+0x290>
   2af9c:	ebffb21f 	bl	17820 <uspi_assertion_failed>
   2afa0:	eaffff95 	b	2adfc <USBStringGetFromDescriptor+0x1c>
   2afa4:	ebffb1f7 	bl	17788 <free>
   2afa8:	e1a00006 	mov	r0, r6
   2afac:	ebffb1f4 	bl	17784 <malloc>
   2afb0:	e3500000 	cmp	r0, #0
   2afb4:	e5840004 	str	r0, [r4, #4]
   2afb8:	0a000023 	beq	2b04c <USBStringGetFromDescriptor+0x26c>
   2afbc:	e5940000 	ldr	r0, [r4]
   2afc0:	ebffda62 	bl	21950 <USBDeviceGetHost>
   2afc4:	e1a08000 	mov	r8, r0
   2afc8:	e5940000 	ldr	r0, [r4]
   2afcc:	ebffda49 	bl	218f8 <USBDeviceGetEndpoint0>
   2afd0:	e58d600c 	str	r6, [sp, #12]
   2afd4:	e5943004 	ldr	r3, [r4, #4]
   2afd8:	e1a01000 	mov	r1, r0
   2afdc:	e58d3008 	str	r3, [sp, #8]
   2afe0:	e1a00008 	mov	r0, r8
   2afe4:	e88d00a0 	stm	sp, {r5, r7}
   2afe8:	e3a03006 	mov	r3, #6
   2afec:	e3a02080 	mov	r2, #128	; 0x80
   2aff0:	ebffce8c 	bl	1ea28 <DWHCIDeviceControlMessage>
   2aff4:	e1560000 	cmp	r6, r0
   2aff8:	1affffa7 	bne	2ae9c <USBStringGetFromDescriptor+0xbc>
   2affc:	e5940004 	ldr	r0, [r4, #4]
   2b000:	e5d03000 	ldrb	r3, [r0]
   2b004:	e1530006 	cmp	r3, r6
   2b008:	1affffa3 	bne	2ae9c <USBStringGetFromDescriptor+0xbc>
   2b00c:	e5d03001 	ldrb	r3, [r0, #1]
   2b010:	e3530003 	cmp	r3, #3
   2b014:	1affffa0 	bne	2ae9c <USBStringGetFromDescriptor+0xbc>
   2b018:	eaffffa9 	b	2aec4 <USBStringGetFromDescriptor+0xe4>
   2b01c:	e59f0050 	ldr	r0, [pc, #80]	; 2b074 <USBStringGetFromDescriptor+0x294>
   2b020:	e3a020a2 	mov	r2, #162	; 0xa2
   2b024:	e59f1034 	ldr	r1, [pc, #52]	; 2b060 <USBStringGetFromDescriptor+0x280>
   2b028:	ebffb1fc 	bl	17820 <uspi_assertion_failed>
   2b02c:	e5940008 	ldr	r0, [r4, #8]
   2b030:	eaffffc5 	b	2af4c <USBStringGetFromDescriptor+0x16c>
   2b034:	e59f0038 	ldr	r0, [pc, #56]	; 2b074 <USBStringGetFromDescriptor+0x294>
   2b038:	e3a0209d 	mov	r2, #157	; 0x9d
   2b03c:	e59f101c 	ldr	r1, [pc, #28]	; 2b060 <USBStringGetFromDescriptor+0x280>
   2b040:	ebffb1f6 	bl	17820 <uspi_assertion_failed>
   2b044:	e5940008 	ldr	r0, [r4, #8]
   2b048:	eaffffb7 	b	2af2c <USBStringGetFromDescriptor+0x14c>
   2b04c:	e3a02075 	mov	r2, #117	; 0x75
   2b050:	e59f1008 	ldr	r1, [pc, #8]	; 2b060 <USBStringGetFromDescriptor+0x280>
   2b054:	e59f000c 	ldr	r0, [pc, #12]	; 2b068 <USBStringGetFromDescriptor+0x288>
   2b058:	ebffb1f0 	bl	17820 <uspi_assertion_failed>
   2b05c:	eaffffd6 	b	2afbc <USBStringGetFromDescriptor+0x1dc>
   2b060:	000321a0 	.word	0x000321a0
   2b064:	000321f8 	.word	0x000321f8
   2b068:	000321c4 	.word	0x000321c4
   2b06c:	00030d90 	.word	0x00030d90
   2b070:	000306f0 	.word	0x000306f0
   2b074:	000321ac 	.word	0x000321ac

0002b078 <USBStringGet>:
   2b078:	e92d4010 	push	{r4, lr}
   2b07c:	e2504000 	subs	r4, r0, #0
   2b080:	0a000002 	beq	2b090 <USBStringGet+0x18>
   2b084:	e5940008 	ldr	r0, [r4, #8]
   2b088:	e8bd4010 	pop	{r4, lr}
   2b08c:	eaffee3c 	b	26984 <StringGet>
   2b090:	e59f0014 	ldr	r0, [pc, #20]	; 2b0ac <USBStringGet+0x34>
   2b094:	e3a020aa 	mov	r2, #170	; 0xaa
   2b098:	e59f1010 	ldr	r1, [pc, #16]	; 2b0b0 <USBStringGet+0x38>
   2b09c:	ebffb1df 	bl	17820 <uspi_assertion_failed>
   2b0a0:	e5940008 	ldr	r0, [r4, #8]
   2b0a4:	e8bd4010 	pop	{r4, lr}
   2b0a8:	eaffee35 	b	26984 <StringGet>
   2b0ac:	000306f0 	.word	0x000306f0
   2b0b0:	000321a0 	.word	0x000321a0

0002b0b4 <USBStringGetLanguageID>:
   2b0b4:	e92d40f0 	push	{r4, r5, r6, r7, lr}
   2b0b8:	e2506000 	subs	r6, r0, #0
   2b0bc:	e24dd014 	sub	sp, sp, #20
   2b0c0:	0a000056 	beq	2b220 <USBStringGetLanguageID+0x16c>
   2b0c4:	e3a00004 	mov	r0, #4
   2b0c8:	ebffb1ad 	bl	17784 <malloc>
   2b0cc:	e2504000 	subs	r4, r0, #0
   2b0d0:	0a00005a 	beq	2b240 <USBStringGetLanguageID+0x18c>
   2b0d4:	e5960000 	ldr	r0, [r6]
   2b0d8:	e3500000 	cmp	r0, #0
   2b0dc:	0a00005e 	beq	2b25c <USBStringGetLanguageID+0x1a8>
   2b0e0:	ebffda1a 	bl	21950 <USBDeviceGetHost>
   2b0e4:	e1a05000 	mov	r5, r0
   2b0e8:	e5960000 	ldr	r0, [r6]
   2b0ec:	ebffda01 	bl	218f8 <USBDeviceGetEndpoint0>
   2b0f0:	e3a02080 	mov	r2, #128	; 0x80
   2b0f4:	e3a03004 	mov	r3, #4
   2b0f8:	e1a01000 	mov	r1, r0
   2b0fc:	e58d2008 	str	r2, [sp, #8]
   2b100:	e58d3004 	str	r3, [sp, #4]
   2b104:	e58d4000 	str	r4, [sp]
   2b108:	e1a00005 	mov	r0, r5
   2b10c:	e3a03000 	mov	r3, #0
   2b110:	e3a02003 	mov	r2, #3
   2b114:	ebffce6f 	bl	1ead8 <DWHCIDeviceGetDescriptor>
   2b118:	e3500000 	cmp	r0, #0
   2b11c:	ba000039 	blt	2b208 <USBStringGetLanguageID+0x154>
   2b120:	e5d45000 	ldrb	r5, [r4]
   2b124:	e3550003 	cmp	r5, #3
   2b128:	9a000036 	bls	2b208 <USBStringGetLanguageID+0x154>
   2b12c:	e3150001 	tst	r5, #1
   2b130:	1a000034 	bne	2b208 <USBStringGetLanguageID+0x154>
   2b134:	e5d43001 	ldrb	r3, [r4, #1]
   2b138:	e3530003 	cmp	r3, #3
   2b13c:	1a000031 	bne	2b208 <USBStringGetLanguageID+0x154>
   2b140:	e3550004 	cmp	r5, #4
   2b144:	1a000016 	bne	2b1a4 <USBStringGetLanguageID+0xf0>
   2b148:	e3a02001 	mov	r2, #1
   2b14c:	e5d45002 	ldrb	r5, [r4, #2]
   2b150:	e5d43003 	ldrb	r3, [r4, #3]
   2b154:	e1855403 	orr	r5, r5, r3, lsl #8
   2b158:	e59fc154 	ldr	ip, [pc, #340]	; 2b2b4 <USBStringGetLanguageID+0x200>
   2b15c:	e155000c 	cmp	r5, ip
   2b160:	0a000028 	beq	2b208 <USBStringGetLanguageID+0x154>
   2b164:	e3a03000 	mov	r3, #0
   2b168:	ea000004 	b	2b180 <USBStringGetLanguageID+0xcc>
   2b16c:	e5d01002 	ldrb	r1, [r0, #2]
   2b170:	e5d00003 	ldrb	r0, [r0, #3]
   2b174:	e1811400 	orr	r1, r1, r0, lsl #8
   2b178:	e151000c 	cmp	r1, ip
   2b17c:	0a000021 	beq	2b208 <USBStringGetLanguageID+0x154>
   2b180:	e2833001 	add	r3, r3, #1
   2b184:	e1530002 	cmp	r3, r2
   2b188:	e0840083 	add	r0, r4, r3, lsl #1
   2b18c:	1afffff6 	bne	2b16c <USBStringGetLanguageID+0xb8>
   2b190:	e1a00004 	mov	r0, r4
   2b194:	ebffb17b 	bl	17788 <free>
   2b198:	e1a00005 	mov	r0, r5
   2b19c:	e28dd014 	add	sp, sp, #20
   2b1a0:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
   2b1a4:	e1a00004 	mov	r0, r4
   2b1a8:	ebffb176 	bl	17788 <free>
   2b1ac:	e1a00005 	mov	r0, r5
   2b1b0:	ebffb173 	bl	17784 <malloc>
   2b1b4:	e2504000 	subs	r4, r0, #0
   2b1b8:	0a000038 	beq	2b2a0 <USBStringGetLanguageID+0x1ec>
   2b1bc:	e5960000 	ldr	r0, [r6]
   2b1c0:	ebffd9e2 	bl	21950 <USBDeviceGetHost>
   2b1c4:	e1a07000 	mov	r7, r0
   2b1c8:	e5960000 	ldr	r0, [r6]
   2b1cc:	ebffd9c9 	bl	218f8 <USBDeviceGetEndpoint0>
   2b1d0:	e3a03080 	mov	r3, #128	; 0x80
   2b1d4:	e1a01000 	mov	r1, r0
   2b1d8:	e58d3008 	str	r3, [sp, #8]
   2b1dc:	e58d5004 	str	r5, [sp, #4]
   2b1e0:	e1a00007 	mov	r0, r7
   2b1e4:	e58d4000 	str	r4, [sp]
   2b1e8:	e3a03000 	mov	r3, #0
   2b1ec:	e3a02003 	mov	r2, #3
   2b1f0:	ebffce38 	bl	1ead8 <DWHCIDeviceGetDescriptor>
   2b1f4:	e1550000 	cmp	r5, r0
   2b1f8:	1a000002 	bne	2b208 <USBStringGetLanguageID+0x154>
   2b1fc:	e5d43000 	ldrb	r3, [r4]
   2b200:	e1530005 	cmp	r3, r5
   2b204:	0a00001a 	beq	2b274 <USBStringGetLanguageID+0x1c0>
   2b208:	e59f50a4 	ldr	r5, [pc, #164]	; 2b2b4 <USBStringGetLanguageID+0x200>
   2b20c:	e1a00004 	mov	r0, r4
   2b210:	ebffb15c 	bl	17788 <free>
   2b214:	e1a00005 	mov	r0, r5
   2b218:	e28dd014 	add	sp, sp, #20
   2b21c:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
   2b220:	e3a020b0 	mov	r2, #176	; 0xb0
   2b224:	e59f108c 	ldr	r1, [pc, #140]	; 2b2b8 <USBStringGetLanguageID+0x204>
   2b228:	e59f008c 	ldr	r0, [pc, #140]	; 2b2bc <USBStringGetLanguageID+0x208>
   2b22c:	ebffb17b 	bl	17820 <uspi_assertion_failed>
   2b230:	e3a00004 	mov	r0, #4
   2b234:	ebffb152 	bl	17784 <malloc>
   2b238:	e2504000 	subs	r4, r0, #0
   2b23c:	1affffa4 	bne	2b0d4 <USBStringGetLanguageID+0x20>
   2b240:	e59f0078 	ldr	r0, [pc, #120]	; 2b2c0 <USBStringGetLanguageID+0x20c>
   2b244:	e3a020b3 	mov	r2, #179	; 0xb3
   2b248:	e59f1068 	ldr	r1, [pc, #104]	; 2b2b8 <USBStringGetLanguageID+0x204>
   2b24c:	ebffb173 	bl	17820 <uspi_assertion_failed>
   2b250:	e5960000 	ldr	r0, [r6]
   2b254:	e3500000 	cmp	r0, #0
   2b258:	1affffa0 	bne	2b0e0 <USBStringGetLanguageID+0x2c>
   2b25c:	e59f0060 	ldr	r0, [pc, #96]	; 2b2c4 <USBStringGetLanguageID+0x210>
   2b260:	e3a020b5 	mov	r2, #181	; 0xb5
   2b264:	e59f104c 	ldr	r1, [pc, #76]	; 2b2b8 <USBStringGetLanguageID+0x204>
   2b268:	ebffb16c 	bl	17820 <uspi_assertion_failed>
   2b26c:	e5960000 	ldr	r0, [r6]
   2b270:	eaffff9a 	b	2b0e0 <USBStringGetLanguageID+0x2c>
   2b274:	e5d43001 	ldrb	r3, [r4, #1]
   2b278:	e3530003 	cmp	r3, #3
   2b27c:	1affffe1 	bne	2b208 <USBStringGetLanguageID+0x154>
   2b280:	e2452002 	sub	r2, r5, #2
   2b284:	e0822fa2 	add	r2, r2, r2, lsr #31
   2b288:	e5d45002 	ldrb	r5, [r4, #2]
   2b28c:	e5d43003 	ldrb	r3, [r4, #3]
   2b290:	e1b020c2 	asrs	r2, r2, #1
   2b294:	e1855403 	orr	r5, r5, r3, lsl #8
   2b298:	0affffbc 	beq	2b190 <USBStringGetLanguageID+0xdc>
   2b29c:	eaffffad 	b	2b158 <USBStringGetLanguageID+0xa4>
   2b2a0:	e3a020ce 	mov	r2, #206	; 0xce
   2b2a4:	e59f100c 	ldr	r1, [pc, #12]	; 2b2b8 <USBStringGetLanguageID+0x204>
   2b2a8:	e59f0010 	ldr	r0, [pc, #16]	; 2b2c0 <USBStringGetLanguageID+0x20c>
   2b2ac:	ebffb15b 	bl	17820 <uspi_assertion_failed>
   2b2b0:	eaffffc1 	b	2b1bc <USBStringGetLanguageID+0x108>
   2b2b4:	00000409 	.word	0x00000409
   2b2b8:	000321a0 	.word	0x000321a0
   2b2bc:	000306f0 	.word	0x000306f0
   2b2c0:	00032204 	.word	0x00032204
   2b2c4:	00030d90 	.word	0x00030d90

0002b2c8 <USBMIDIDeviceStartRequest>:
   2b2c8:	e92d4070 	push	{r4, r5, r6, lr}
   2b2cc:	e2504000 	subs	r4, r0, #0
   2b2d0:	e24dd008 	sub	sp, sp, #8
   2b2d4:	0a00001d 	beq	2b350 <USBMIDIDeviceStartRequest+0x88>
   2b2d8:	e5943010 	ldr	r3, [r4, #16]
   2b2dc:	e3530000 	cmp	r3, #0
   2b2e0:	0a000021 	beq	2b36c <USBMIDIDeviceStartRequest+0xa4>
   2b2e4:	e5942040 	ldr	r2, [r4, #64]	; 0x40
   2b2e8:	e3520000 	cmp	r2, #0
   2b2ec:	0a000011 	beq	2b338 <USBMIDIDeviceStartRequest+0x70>
   2b2f0:	e3a06000 	mov	r6, #0
   2b2f4:	e2845018 	add	r5, r4, #24
   2b2f8:	e1d433bc 	ldrh	r3, [r4, #60]	; 0x3c
   2b2fc:	e5941010 	ldr	r1, [r4, #16]
   2b300:	e1a00005 	mov	r0, r5
   2b304:	e58d6000 	str	r6, [sp]
   2b308:	ebffdec4 	bl	22e20 <USBRequest>
   2b30c:	e1a03004 	mov	r3, r4
   2b310:	e1a02006 	mov	r2, r6
   2b314:	e1a00005 	mov	r0, r5
   2b318:	e59f1060 	ldr	r1, [pc, #96]	; 2b380 <USBMIDIDeviceStartRequest+0xb8>
   2b31c:	ebffdf92 	bl	2316c <USBRequestSetCompletionRoutine>
   2b320:	e1a00004 	mov	r0, r4
   2b324:	ebffe51b 	bl	24798 <USBFunctionGetHost>
   2b328:	e1a01005 	mov	r1, r5
   2b32c:	e28dd008 	add	sp, sp, #8
   2b330:	e8bd4070 	pop	{r4, r5, r6, lr}
   2b334:	eaffccaa 	b	1e5e4 <DWHCIDeviceSubmitAsyncRequest>
   2b338:	e3a020a1 	mov	r2, #161	; 0xa1
   2b33c:	e59f1040 	ldr	r1, [pc, #64]	; 2b384 <USBMIDIDeviceStartRequest+0xbc>
   2b340:	e59f0040 	ldr	r0, [pc, #64]	; 2b388 <USBMIDIDeviceStartRequest+0xc0>
   2b344:	ebffb135 	bl	17820 <uspi_assertion_failed>
   2b348:	e5942040 	ldr	r2, [r4, #64]	; 0x40
   2b34c:	eaffffe7 	b	2b2f0 <USBMIDIDeviceStartRequest+0x28>
   2b350:	e3a0209e 	mov	r2, #158	; 0x9e
   2b354:	e59f1028 	ldr	r1, [pc, #40]	; 2b384 <USBMIDIDeviceStartRequest+0xbc>
   2b358:	e59f002c 	ldr	r0, [pc, #44]	; 2b38c <USBMIDIDeviceStartRequest+0xc4>
   2b35c:	ebffb12f 	bl	17820 <uspi_assertion_failed>
   2b360:	e5943010 	ldr	r3, [r4, #16]
   2b364:	e3530000 	cmp	r3, #0
   2b368:	1affffdd 	bne	2b2e4 <USBMIDIDeviceStartRequest+0x1c>
   2b36c:	e3a020a0 	mov	r2, #160	; 0xa0
   2b370:	e59f100c 	ldr	r1, [pc, #12]	; 2b384 <USBMIDIDeviceStartRequest+0xbc>
   2b374:	e59f0014 	ldr	r0, [pc, #20]	; 2b390 <USBMIDIDeviceStartRequest+0xc8>
   2b378:	ebffb128 	bl	17820 <uspi_assertion_failed>
   2b37c:	eaffffd8 	b	2b2e4 <USBMIDIDeviceStartRequest+0x1c>
   2b380:	0002b5e4 	.word	0x0002b5e4
   2b384:	00032260 	.word	0x00032260
   2b388:	0003226c 	.word	0x0003226c
   2b38c:	000306f0 	.word	0x000306f0
   2b390:	00031d24 	.word	0x00031d24

0002b394 <USBMIDIDeviceConfigure>:
   2b394:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2b398:	e2505000 	subs	r5, r0, #0
   2b39c:	e24dd014 	sub	sp, sp, #20
   2b3a0:	0a000076 	beq	2b580 <USBMIDIDeviceConfigure+0x1ec>
   2b3a4:	e1a00005 	mov	r0, r5
   2b3a8:	ebffe4b8 	bl	24690 <USBFunctionGetNumEndpoints>
   2b3ac:	e2506000 	subs	r6, r0, #0
   2b3b0:	0a000067 	beq	2b554 <USBMIDIDeviceConfigure+0x1c0>
   2b3b4:	e59f6200 	ldr	r6, [pc, #512]	; 2b5bc <USBMIDIDeviceConfigure+0x228>
   2b3b8:	e59fa200 	ldr	sl, [pc, #512]	; 2b5c0 <USBMIDIDeviceConfigure+0x22c>
   2b3bc:	e59f8200 	ldr	r8, [pc, #512]	; 2b5c4 <USBMIDIDeviceConfigure+0x230>
   2b3c0:	e59f9200 	ldr	r9, [pc, #512]	; 2b5c8 <USBMIDIDeviceConfigure+0x234>
   2b3c4:	e59f7200 	ldr	r7, [pc, #512]	; 2b5cc <USBMIDIDeviceConfigure+0x238>
   2b3c8:	e3a01005 	mov	r1, #5
   2b3cc:	e1a00005 	mov	r0, r5
   2b3d0:	ebffe540 	bl	248d8 <USBFunctionGetDescriptor>
   2b3d4:	e2504000 	subs	r4, r0, #0
   2b3d8:	0a000035 	beq	2b4b4 <USBMIDIDeviceConfigure+0x120>
   2b3dc:	e1d430d2 	ldrsb	r3, [r4, #2]
   2b3e0:	e3530000 	cmp	r3, #0
   2b3e4:	aafffff7 	bge	2b3c8 <USBMIDIDeviceConfigure+0x34>
   2b3e8:	e5d43003 	ldrb	r3, [r4, #3]
   2b3ec:	e203303f 	and	r3, r3, #63	; 0x3f
   2b3f0:	e3530002 	cmp	r3, #2
   2b3f4:	1afffff3 	bne	2b3c8 <USBMIDIDeviceConfigure+0x34>
   2b3f8:	e3a01025 	mov	r1, #37	; 0x25
   2b3fc:	e1a00005 	mov	r0, r5
   2b400:	ebffe534 	bl	248d8 <USBFunctionGetDescriptor>
   2b404:	e3500000 	cmp	r0, #0
   2b408:	0affffee 	beq	2b3c8 <USBMIDIDeviceConfigure+0x34>
   2b40c:	e5d43000 	ldrb	r3, [r4]
   2b410:	e0843003 	add	r3, r4, r3
   2b414:	e1500003 	cmp	r0, r3
   2b418:	1affffea 	bne	2b3c8 <USBMIDIDeviceConfigure+0x34>
   2b41c:	e5953010 	ldr	r3, [r5, #16]
   2b420:	e3530000 	cmp	r3, #0
   2b424:	0a000003 	beq	2b438 <USBMIDIDeviceConfigure+0xa4>
   2b428:	e3a02070 	mov	r2, #112	; 0x70
   2b42c:	e1a01006 	mov	r1, r6
   2b430:	e1a00007 	mov	r0, r7
   2b434:	ebffb0f9 	bl	17820 <uspi_assertion_failed>
   2b438:	e3a00018 	mov	r0, #24
   2b43c:	ebffb0d0 	bl	17784 <malloc>
   2b440:	e3500000 	cmp	r0, #0
   2b444:	e5850010 	str	r0, [r5, #16]
   2b448:	0a000056 	beq	2b5a8 <USBMIDIDeviceConfigure+0x214>
   2b44c:	e5d40004 	ldrb	r0, [r4, #4]
   2b450:	e5d42005 	ldrb	r2, [r4, #5]
   2b454:	e5953040 	ldr	r3, [r5, #64]	; 0x40
   2b458:	e1800402 	orr	r0, r0, r2, lsl #8
   2b45c:	e3c00003 	bic	r0, r0, #3
   2b460:	e6ff0070 	uxth	r0, r0
   2b464:	e3530000 	cmp	r3, #0
   2b468:	e1c503bc 	strh	r0, [r5, #60]	; 0x3c
   2b46c:	0a000004 	beq	2b484 <USBMIDIDeviceConfigure+0xf0>
   2b470:	e1a00008 	mov	r0, r8
   2b474:	e3a02076 	mov	r2, #118	; 0x76
   2b478:	e1a01006 	mov	r1, r6
   2b47c:	ebffb0e7 	bl	17820 <uspi_assertion_failed>
   2b480:	e1d503bc 	ldrh	r0, [r5, #60]	; 0x3c
   2b484:	ebffb0be 	bl	17784 <malloc>
   2b488:	e3500000 	cmp	r0, #0
   2b48c:	e5850040 	str	r0, [r5, #64]	; 0x40
   2b490:	0a00003f 	beq	2b594 <USBMIDIDeviceConfigure+0x200>
   2b494:	e1a00005 	mov	r0, r5
   2b498:	e595b010 	ldr	fp, [r5, #16]
   2b49c:	ebffe492 	bl	246ec <USBFunctionGetDevice>
   2b4a0:	e1a02004 	mov	r2, r4
   2b4a4:	e1a01000 	mov	r1, r0
   2b4a8:	e1a0000b 	mov	r0, fp
   2b4ac:	ebffdcdf 	bl	22830 <USBEndpoint2>
   2b4b0:	eaffffc4 	b	2b3c8 <USBMIDIDeviceConfigure+0x34>
   2b4b4:	e5956010 	ldr	r6, [r5, #16]
   2b4b8:	e1a00005 	mov	r0, r5
   2b4bc:	e3560000 	cmp	r6, #0
   2b4c0:	0a000029 	beq	2b56c <USBMIDIDeviceConfigure+0x1d8>
   2b4c4:	ebffe4ca 	bl	247f4 <USBFunctionConfigure>
   2b4c8:	e2506000 	subs	r6, r0, #0
   2b4cc:	0a000019 	beq	2b538 <USBMIDIDeviceConfigure+0x1a4>
   2b4d0:	e28d0004 	add	r0, sp, #4
   2b4d4:	ebffecf7 	bl	268b8 <String>
   2b4d8:	e59f30f0 	ldr	r3, [pc, #240]	; 2b5d0 <USBMIDIDeviceConfigure+0x23c>
   2b4dc:	e59f10f0 	ldr	r1, [pc, #240]	; 2b5d4 <USBMIDIDeviceConfigure+0x240>
   2b4e0:	e5932000 	ldr	r2, [r3]
   2b4e4:	e28d0004 	add	r0, sp, #4
   2b4e8:	e282c001 	add	ip, r2, #1
   2b4ec:	e583c000 	str	ip, [r3]
   2b4f0:	ebffefb1 	bl	273bc <StringFormat>
   2b4f4:	ebffe2a1 	bl	23f80 <DeviceNameServiceGet>
   2b4f8:	e1a06000 	mov	r6, r0
   2b4fc:	e28d0004 	add	r0, sp, #4
   2b500:	ebffed1f 	bl	26984 <StringGet>
   2b504:	e1a03004 	mov	r3, r4
   2b508:	e1a01000 	mov	r1, r0
   2b50c:	e1a02005 	mov	r2, r5
   2b510:	e1a00006 	mov	r0, r6
   2b514:	ebffe21d 	bl	23d90 <DeviceNameServiceAddDevice>
   2b518:	e28d0004 	add	r0, sp, #4
   2b51c:	ebffed07 	bl	26940 <_String>
   2b520:	e1a00005 	mov	r0, r5
   2b524:	ebffff67 	bl	2b2c8 <USBMIDIDeviceStartRequest>
   2b528:	e1a06000 	mov	r6, r0
   2b52c:	e1a00006 	mov	r0, r6
   2b530:	e28dd014 	add	sp, sp, #20
   2b534:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2b538:	e59f2098 	ldr	r2, [pc, #152]	; 2b5d8 <USBMIDIDeviceConfigure+0x244>
   2b53c:	e3a01001 	mov	r1, #1
   2b540:	e59f0094 	ldr	r0, [pc, #148]	; 2b5dc <USBMIDIDeviceConfigure+0x248>
   2b544:	ebff789a 	bl	97b4 <LogWrite>
   2b548:	e1a00006 	mov	r0, r6
   2b54c:	e28dd014 	add	sp, sp, #20
   2b550:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2b554:	e1a00005 	mov	r0, r5
   2b558:	e59f107c 	ldr	r1, [pc, #124]	; 2b5dc <USBMIDIDeviceConfigure+0x248>
   2b55c:	ebffe4f7 	bl	24940 <USBFunctionConfigurationError>
   2b560:	e1a00006 	mov	r0, r6
   2b564:	e28dd014 	add	sp, sp, #20
   2b568:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2b56c:	e59f1068 	ldr	r1, [pc, #104]	; 2b5dc <USBMIDIDeviceConfigure+0x248>
   2b570:	ebffe4f2 	bl	24940 <USBFunctionConfigurationError>
   2b574:	e1a00006 	mov	r0, r6
   2b578:	e28dd014 	add	sp, sp, #20
   2b57c:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2b580:	e3a0204f 	mov	r2, #79	; 0x4f
   2b584:	e59f1030 	ldr	r1, [pc, #48]	; 2b5bc <USBMIDIDeviceConfigure+0x228>
   2b588:	e59f0050 	ldr	r0, [pc, #80]	; 2b5e0 <USBMIDIDeviceConfigure+0x24c>
   2b58c:	ebffb0a3 	bl	17820 <uspi_assertion_failed>
   2b590:	eaffff83 	b	2b3a4 <USBMIDIDeviceConfigure+0x10>
   2b594:	e3a02078 	mov	r2, #120	; 0x78
   2b598:	e1a01006 	mov	r1, r6
   2b59c:	e1a0000a 	mov	r0, sl
   2b5a0:	ebffb09e 	bl	17820 <uspi_assertion_failed>
   2b5a4:	eaffffba 	b	2b494 <USBMIDIDeviceConfigure+0x100>
   2b5a8:	e3a02072 	mov	r2, #114	; 0x72
   2b5ac:	e1a01006 	mov	r1, r6
   2b5b0:	e1a00009 	mov	r0, r9
   2b5b4:	ebffb099 	bl	17820 <uspi_assertion_failed>
   2b5b8:	eaffffa3 	b	2b44c <USBMIDIDeviceConfigure+0xb8>
   2b5bc:	00032260 	.word	0x00032260
   2b5c0:	0003226c 	.word	0x0003226c
   2b5c4:	000322a4 	.word	0x000322a4
   2b5c8:	00031d24 	.word	0x00031d24
   2b5cc:	00032288 	.word	0x00032288
   2b5d0:	00042394 	.word	0x00042394
   2b5d4:	000322c0 	.word	0x000322c0
   2b5d8:	0003171c 	.word	0x0003171c
   2b5dc:	00032218 	.word	0x00032218
   2b5e0:	000306f0 	.word	0x000306f0

0002b5e4 <USBMIDIDeviceCompletionRoutine>:
   2b5e4:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2b5e8:	e2525000 	subs	r5, r2, #0
   2b5ec:	e1a04000 	mov	r4, r0
   2b5f0:	0a000035 	beq	2b6cc <USBMIDIDeviceCompletionRoutine+0xe8>
   2b5f4:	e3540000 	cmp	r4, #0
   2b5f8:	0a000039 	beq	2b6e4 <USBMIDIDeviceCompletionRoutine+0x100>
   2b5fc:	e2856018 	add	r6, r5, #24
   2b600:	e1560004 	cmp	r6, r4
   2b604:	0a000003 	beq	2b618 <USBMIDIDeviceCompletionRoutine+0x34>
   2b608:	e3a020af 	mov	r2, #175	; 0xaf
   2b60c:	e59f10fc 	ldr	r1, [pc, #252]	; 2b710 <USBMIDIDeviceCompletionRoutine+0x12c>
   2b610:	e59f00fc 	ldr	r0, [pc, #252]	; 2b714 <USBMIDIDeviceCompletionRoutine+0x130>
   2b614:	ebffb081 	bl	17820 <uspi_assertion_failed>
   2b618:	e1a00004 	mov	r0, r4
   2b61c:	ebffde6f 	bl	22fe0 <USBRequestGetStatus>
   2b620:	e3500000 	cmp	r0, #0
   2b624:	1a000004 	bne	2b63c <USBMIDIDeviceCompletionRoutine+0x58>
   2b628:	e1a00006 	mov	r0, r6
   2b62c:	ebffde2b 	bl	22ee0 <_USBRequest>
   2b630:	e1a00005 	mov	r0, r5
   2b634:	e8bd47f0 	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   2b638:	eaffff22 	b	2b2c8 <USBMIDIDeviceStartRequest>
   2b63c:	e1a00004 	mov	r0, r4
   2b640:	ebffde73 	bl	23014 <USBRequestGetResultLength>
   2b644:	e3100003 	tst	r0, #3
   2b648:	1afffff6 	bne	2b628 <USBMIDIDeviceCompletionRoutine+0x44>
   2b64c:	e5957040 	ldr	r7, [r5, #64]	; 0x40
   2b650:	e3570000 	cmp	r7, #0
   2b654:	0a000027 	beq	2b6f8 <USBMIDIDeviceCompletionRoutine+0x114>
   2b658:	e1a00004 	mov	r0, r4
   2b65c:	ebffde6c 	bl	23014 <USBRequestGetResultLength>
   2b660:	e5954040 	ldr	r4, [r5, #64]	; 0x40
   2b664:	e0870000 	add	r0, r7, r0
   2b668:	e1500004 	cmp	r0, r4
   2b66c:	9affffed 	bls	2b628 <USBMIDIDeviceCompletionRoutine+0x44>
   2b670:	e1e07004 	mvn	r7, r4
   2b674:	e0807007 	add	r7, r0, r7
   2b678:	e2843005 	add	r3, r4, #5
   2b67c:	e3c77003 	bic	r7, r7, #3
   2b680:	e59f8090 	ldr	r8, [pc, #144]	; 2b718 <USBMIDIDeviceCompletionRoutine+0x134>
   2b684:	e0877003 	add	r7, r7, r3
   2b688:	e2844001 	add	r4, r4, #1
   2b68c:	e5540001 	ldrb	r0, [r4, #-1]
   2b690:	e200300f 	and	r3, r0, #15
   2b694:	e3500000 	cmp	r0, #0
   2b698:	e0883103 	add	r3, r8, r3, lsl #2
   2b69c:	e1a00220 	lsr	r0, r0, #4
   2b6a0:	0a000005 	beq	2b6bc <USBMIDIDeviceCompletionRoutine+0xd8>
   2b6a4:	e5959014 	ldr	r9, [r5, #20]
   2b6a8:	e3590000 	cmp	r9, #0
   2b6ac:	0a000002 	beq	2b6bc <USBMIDIDeviceCompletionRoutine+0xd8>
   2b6b0:	e5931008 	ldr	r1, [r3, #8]
   2b6b4:	e1a02004 	mov	r2, r4
   2b6b8:	e12fff39 	blx	r9
   2b6bc:	e2844004 	add	r4, r4, #4
   2b6c0:	e1540007 	cmp	r4, r7
   2b6c4:	1afffff0 	bne	2b68c <USBMIDIDeviceCompletionRoutine+0xa8>
   2b6c8:	eaffffd6 	b	2b628 <USBMIDIDeviceCompletionRoutine+0x44>
   2b6cc:	e3a020ac 	mov	r2, #172	; 0xac
   2b6d0:	e59f1038 	ldr	r1, [pc, #56]	; 2b710 <USBMIDIDeviceCompletionRoutine+0x12c>
   2b6d4:	e59f0040 	ldr	r0, [pc, #64]	; 2b71c <USBMIDIDeviceCompletionRoutine+0x138>
   2b6d8:	ebffb050 	bl	17820 <uspi_assertion_failed>
   2b6dc:	e3540000 	cmp	r4, #0
   2b6e0:	1affffc5 	bne	2b5fc <USBMIDIDeviceCompletionRoutine+0x18>
   2b6e4:	e3a020ae 	mov	r2, #174	; 0xae
   2b6e8:	e59f1020 	ldr	r1, [pc, #32]	; 2b710 <USBMIDIDeviceCompletionRoutine+0x12c>
   2b6ec:	e59f002c 	ldr	r0, [pc, #44]	; 2b720 <USBMIDIDeviceCompletionRoutine+0x13c>
   2b6f0:	ebffb04a 	bl	17820 <uspi_assertion_failed>
   2b6f4:	eaffffc0 	b	2b5fc <USBMIDIDeviceCompletionRoutine+0x18>
   2b6f8:	e3a020b4 	mov	r2, #180	; 0xb4
   2b6fc:	e59f100c 	ldr	r1, [pc, #12]	; 2b710 <USBMIDIDeviceCompletionRoutine+0x12c>
   2b700:	e59f001c 	ldr	r0, [pc, #28]	; 2b724 <USBMIDIDeviceCompletionRoutine+0x140>
   2b704:	ebffb045 	bl	17820 <uspi_assertion_failed>
   2b708:	e5957040 	ldr	r7, [r5, #64]	; 0x40
   2b70c:	eaffffd1 	b	2b658 <USBMIDIDeviceCompletionRoutine+0x74>
   2b710:	00032260 	.word	0x00032260
   2b714:	00031f60 	.word	0x00031f60
   2b718:	00032218 	.word	0x00032218
   2b71c:	000306f0 	.word	0x000306f0
   2b720:	000307b8 	.word	0x000307b8
   2b724:	0003226c 	.word	0x0003226c

0002b728 <USBMIDIDevice>:
   2b728:	e92d4070 	push	{r4, r5, r6, lr}
   2b72c:	e2504000 	subs	r4, r0, #0
   2b730:	e1a05001 	mov	r5, r1
   2b734:	0a000009 	beq	2b760 <USBMIDIDevice+0x38>
   2b738:	e1a01005 	mov	r1, r5
   2b73c:	e1a00004 	mov	r0, r4
   2b740:	ebffe34e 	bl	24480 <USBFunctionCopy>
   2b744:	e3a03000 	mov	r3, #0
   2b748:	e59f2024 	ldr	r2, [pc, #36]	; 2b774 <USBMIDIDevice+0x4c>
   2b74c:	e5843010 	str	r3, [r4, #16]
   2b750:	e5843014 	str	r3, [r4, #20]
   2b754:	e5843040 	str	r3, [r4, #64]	; 0x40
   2b758:	e5842000 	str	r2, [r4]
   2b75c:	e8bd8070 	pop	{r4, r5, r6, pc}
   2b760:	e3a0202e 	mov	r2, #46	; 0x2e
   2b764:	e59f100c 	ldr	r1, [pc, #12]	; 2b778 <USBMIDIDevice+0x50>
   2b768:	e59f000c 	ldr	r0, [pc, #12]	; 2b77c <USBMIDIDevice+0x54>
   2b76c:	ebffb02b 	bl	17820 <uspi_assertion_failed>
   2b770:	eafffff0 	b	2b738 <USBMIDIDevice+0x10>
   2b774:	0002b394 	.word	0x0002b394
   2b778:	00032260 	.word	0x00032260
   2b77c:	000306f0 	.word	0x000306f0

0002b780 <_CUSBMIDIDevice>:
   2b780:	e92d4010 	push	{r4, lr}
   2b784:	e2504000 	subs	r4, r0, #0
   2b788:	0a000010 	beq	2b7d0 <_CUSBMIDIDevice+0x50>
   2b78c:	e5940040 	ldr	r0, [r4, #64]	; 0x40
   2b790:	e3500000 	cmp	r0, #0
   2b794:	0a000002 	beq	2b7a4 <_CUSBMIDIDevice+0x24>
   2b798:	ebffaffa 	bl	17788 <free>
   2b79c:	e3a03000 	mov	r3, #0
   2b7a0:	e5843040 	str	r3, [r4, #64]	; 0x40
   2b7a4:	e5940010 	ldr	r0, [r4, #16]
   2b7a8:	e3500000 	cmp	r0, #0
   2b7ac:	0a000004 	beq	2b7c4 <_CUSBMIDIDevice+0x44>
   2b7b0:	ebffdcbb 	bl	22aa4 <_USBEndpoint>
   2b7b4:	e5940010 	ldr	r0, [r4, #16]
   2b7b8:	ebffaff2 	bl	17788 <free>
   2b7bc:	e3a03000 	mov	r3, #0
   2b7c0:	e5843010 	str	r3, [r4, #16]
   2b7c4:	e1a00004 	mov	r0, r4
   2b7c8:	e8bd4010 	pop	{r4, lr}
   2b7cc:	eaffe36d 	b	24588 <_USBFunction>
   2b7d0:	e3a0203a 	mov	r2, #58	; 0x3a
   2b7d4:	e59f1008 	ldr	r1, [pc, #8]	; 2b7e4 <_CUSBMIDIDevice+0x64>
   2b7d8:	e59f0008 	ldr	r0, [pc, #8]	; 2b7e8 <_CUSBMIDIDevice+0x68>
   2b7dc:	ebffb00f 	bl	17820 <uspi_assertion_failed>
   2b7e0:	eaffffe9 	b	2b78c <_CUSBMIDIDevice+0xc>
   2b7e4:	00032260 	.word	0x00032260
   2b7e8:	000306f0 	.word	0x000306f0

0002b7ec <USBMIDIDeviceRegisterPacketHandler>:
   2b7ec:	e92d4070 	push	{r4, r5, r6, lr}
   2b7f0:	e2505000 	subs	r5, r0, #0
   2b7f4:	e1a04001 	mov	r4, r1
   2b7f8:	0a000009 	beq	2b824 <USBMIDIDeviceRegisterPacketHandler+0x38>
   2b7fc:	e3540000 	cmp	r4, #0
   2b800:	0a000001 	beq	2b80c <USBMIDIDeviceRegisterPacketHandler+0x20>
   2b804:	e5854014 	str	r4, [r5, #20]
   2b808:	e8bd8070 	pop	{r4, r5, r6, pc}
   2b80c:	e3a02098 	mov	r2, #152	; 0x98
   2b810:	e59f1020 	ldr	r1, [pc, #32]	; 2b838 <USBMIDIDeviceRegisterPacketHandler+0x4c>
   2b814:	e59f0020 	ldr	r0, [pc, #32]	; 2b83c <USBMIDIDeviceRegisterPacketHandler+0x50>
   2b818:	ebffb000 	bl	17820 <uspi_assertion_failed>
   2b81c:	e5854014 	str	r4, [r5, #20]
   2b820:	e8bd8070 	pop	{r4, r5, r6, pc}
   2b824:	e3a02097 	mov	r2, #151	; 0x97
   2b828:	e59f1008 	ldr	r1, [pc, #8]	; 2b838 <USBMIDIDeviceRegisterPacketHandler+0x4c>
   2b82c:	e59f000c 	ldr	r0, [pc, #12]	; 2b840 <USBMIDIDeviceRegisterPacketHandler+0x54>
   2b830:	ebffaffa 	bl	17820 <uspi_assertion_failed>
   2b834:	eafffff0 	b	2b7fc <USBMIDIDeviceRegisterPacketHandler+0x10>
   2b838:	00032260 	.word	0x00032260
   2b83c:	000322c8 	.word	0x000322c8
   2b840:	000306f0 	.word	0x000306f0

0002b844 <USBConfigurationParser>:
   2b844:	e92d4070 	push	{r4, r5, r6, lr}
   2b848:	e2504000 	subs	r4, r0, #0
   2b84c:	e1a05001 	mov	r5, r1
   2b850:	e1a06002 	mov	r6, r2
   2b854:	0a00003a 	beq	2b944 <USBConfigurationParser+0x100>
   2b858:	e3a03000 	mov	r3, #0
   2b85c:	e0852006 	add	r2, r5, r6
   2b860:	e1550003 	cmp	r5, r3
   2b864:	e5843008 	str	r3, [r4, #8]
   2b868:	e5843014 	str	r3, [r4, #20]
   2b86c:	e8840060 	stm	r4, {r5, r6}
   2b870:	e5845010 	str	r5, [r4, #16]
   2b874:	e5845018 	str	r5, [r4, #24]
   2b878:	e584200c 	str	r2, [r4, #12]
   2b87c:	11a03006 	movne	r3, r6
   2b880:	0a000034 	beq	2b958 <USBConfigurationParser+0x114>
   2b884:	e2433004 	sub	r3, r3, #4
   2b888:	e3530f7f 	cmp	r3, #508	; 0x1fc
   2b88c:	88bd8070 	pophi	{r4, r5, r6, pc}
   2b890:	e5943000 	ldr	r3, [r4]
   2b894:	e5d32000 	ldrb	r2, [r3]
   2b898:	e3520009 	cmp	r2, #9
   2b89c:	18bd8070 	popne	{r4, r5, r6, pc}
   2b8a0:	e5d32001 	ldrb	r2, [r3, #1]
   2b8a4:	e3520002 	cmp	r2, #2
   2b8a8:	18bd8070 	popne	{r4, r5, r6, pc}
   2b8ac:	e5d30002 	ldrb	r0, [r3, #2]
   2b8b0:	e5d32003 	ldrb	r2, [r3, #3]
   2b8b4:	e1800402 	orr	r0, r0, r2, lsl #8
   2b8b8:	e1500006 	cmp	r0, r6
   2b8bc:	88bd8070 	pophi	{r4, r5, r6, pc}
   2b8c0:	e3a05000 	mov	r5, #0
   2b8c4:	30830000 	addcc	r0, r3, r0
   2b8c8:	2594000c 	ldrcs	r0, [r4, #12]
   2b8cc:	3584000c 	strcc	r0, [r4, #12]
   2b8d0:	e1a0e005 	mov	lr, r5
   2b8d4:	ea000005 	b	2b8f0 <USBConfigurationParser+0xac>
   2b8d8:	e3520005 	cmp	r2, #5
   2b8dc:	0a000027 	beq	2b980 <USBConfigurationParser+0x13c>
   2b8e0:	e3520002 	cmp	r2, #2
   2b8e4:	0a000021 	beq	2b970 <USBConfigurationParser+0x12c>
   2b8e8:	e1a0e002 	mov	lr, r2
   2b8ec:	e1a03001 	mov	r3, r1
   2b8f0:	e2832002 	add	r2, r3, #2
   2b8f4:	e1500002 	cmp	r0, r2
   2b8f8:	9a000026 	bls	2b998 <USBConfigurationParser+0x154>
   2b8fc:	e5d3c000 	ldrb	ip, [r3]
   2b900:	e5d32001 	ldrb	r2, [r3, #1]
   2b904:	e083100c 	add	r1, r3, ip
   2b908:	e1500001 	cmp	r0, r1
   2b90c:	3a00000a 	bcc	2b93c <USBConfigurationParser+0xf8>
   2b910:	e3520004 	cmp	r2, #4
   2b914:	1affffef 	bne	2b8d8 <USBConfigurationParser+0x94>
   2b918:	e35e0000 	cmp	lr, #0
   2b91c:	0a000006 	beq	2b93c <USBConfigurationParser+0xf8>
   2b920:	e5d35005 	ldrb	r5, [r3, #5]
   2b924:	e3a0e009 	mov	lr, #9
   2b928:	e2455001 	sub	r5, r5, #1
   2b92c:	e16f5f15 	clz	r5, r5
   2b930:	e1a052a5 	lsr	r5, r5, #5
   2b934:	e15e000c 	cmp	lr, ip
   2b938:	0affffea 	beq	2b8e8 <USBConfigurationParser+0xa4>
   2b93c:	e5843018 	str	r3, [r4, #24]
   2b940:	e8bd8070 	pop	{r4, r5, r6, pc}
   2b944:	e3a0201c 	mov	r2, #28
   2b948:	e59f105c 	ldr	r1, [pc, #92]	; 2b9ac <USBConfigurationParser+0x168>
   2b94c:	e59f005c 	ldr	r0, [pc, #92]	; 2b9b0 <USBConfigurationParser+0x16c>
   2b950:	ebffafb2 	bl	17820 <uspi_assertion_failed>
   2b954:	eaffffbf 	b	2b858 <USBConfigurationParser+0x14>
   2b958:	e3a02025 	mov	r2, #37	; 0x25
   2b95c:	e59f1048 	ldr	r1, [pc, #72]	; 2b9ac <USBConfigurationParser+0x168>
   2b960:	e59f004c 	ldr	r0, [pc, #76]	; 2b9b4 <USBConfigurationParser+0x170>
   2b964:	ebffafad 	bl	17820 <uspi_assertion_failed>
   2b968:	e5943004 	ldr	r3, [r4, #4]
   2b96c:	eaffffc4 	b	2b884 <USBConfigurationParser+0x40>
   2b970:	e35e0000 	cmp	lr, #0
   2b974:	1afffff0 	bne	2b93c <USBConfigurationParser+0xf8>
   2b978:	e3a0e009 	mov	lr, #9
   2b97c:	eaffffec 	b	2b934 <USBConfigurationParser+0xf0>
   2b980:	e31e00fd 	tst	lr, #253	; 0xfd
   2b984:	0affffec 	beq	2b93c <USBConfigurationParser+0xf8>
   2b988:	e3550000 	cmp	r5, #0
   2b98c:	03a0e007 	moveq	lr, #7
   2b990:	13a0e009 	movne	lr, #9
   2b994:	eaffffe6 	b	2b934 <USBConfigurationParser+0xf0>
   2b998:	e1500003 	cmp	r0, r3
   2b99c:	1affffe6 	bne	2b93c <USBConfigurationParser+0xf8>
   2b9a0:	e3a03001 	mov	r3, #1
   2b9a4:	e5843008 	str	r3, [r4, #8]
   2b9a8:	e8bd8070 	pop	{r4, r5, r6, pc}
   2b9ac:	000322dc 	.word	0x000322dc
   2b9b0:	000306f0 	.word	0x000306f0
   2b9b4:	000322f0 	.word	0x000322f0

0002b9b8 <USBConfigurationParserCopy>:
   2b9b8:	e92d4070 	push	{r4, r5, r6, lr}
   2b9bc:	e2505000 	subs	r5, r0, #0
   2b9c0:	e1a04001 	mov	r4, r1
   2b9c4:	0a000011 	beq	2ba10 <USBConfigurationParserCopy+0x58>
   2b9c8:	e3540000 	cmp	r4, #0
   2b9cc:	0a00000a 	beq	2b9fc <USBConfigurationParserCopy+0x44>
   2b9d0:	e1c420d0 	ldrd	r2, [r4]
   2b9d4:	e594c008 	ldr	ip, [r4, #8]
   2b9d8:	e594000c 	ldr	r0, [r4, #12]
   2b9dc:	e5941010 	ldr	r1, [r4, #16]
   2b9e0:	e5852000 	str	r2, [r5]
   2b9e4:	e5853004 	str	r3, [r5, #4]
   2b9e8:	e1c421d4 	ldrd	r2, [r4, #20]
   2b9ec:	e585c008 	str	ip, [r5, #8]
   2b9f0:	e1c500fc 	strd	r0, [r5, #12]
   2b9f4:	e1c521f4 	strd	r2, [r5, #20]
   2b9f8:	e8bd8070 	pop	{r4, r5, r6, pc}
   2b9fc:	e3a02083 	mov	r2, #131	; 0x83
   2ba00:	e59f101c 	ldr	r1, [pc, #28]	; 2ba24 <USBConfigurationParserCopy+0x6c>
   2ba04:	e59f001c 	ldr	r0, [pc, #28]	; 2ba28 <USBConfigurationParserCopy+0x70>
   2ba08:	ebffaf84 	bl	17820 <uspi_assertion_failed>
   2ba0c:	eaffffef 	b	2b9d0 <USBConfigurationParserCopy+0x18>
   2ba10:	e3a02082 	mov	r2, #130	; 0x82
   2ba14:	e59f1008 	ldr	r1, [pc, #8]	; 2ba24 <USBConfigurationParserCopy+0x6c>
   2ba18:	e59f000c 	ldr	r0, [pc, #12]	; 2ba2c <USBConfigurationParserCopy+0x74>
   2ba1c:	ebffaf7f 	bl	17820 <uspi_assertion_failed>
   2ba20:	eaffffe8 	b	2b9c8 <USBConfigurationParserCopy+0x10>
   2ba24:	000322dc 	.word	0x000322dc
   2ba28:	00032308 	.word	0x00032308
   2ba2c:	000306f0 	.word	0x000306f0

0002ba30 <_USBConfigurationParser>:
   2ba30:	e92d4010 	push	{r4, lr}
   2ba34:	e2504000 	subs	r4, r0, #0
   2ba38:	0a000002 	beq	2ba48 <_USBConfigurationParser+0x18>
   2ba3c:	e3a03000 	mov	r3, #0
   2ba40:	e5843000 	str	r3, [r4]
   2ba44:	e8bd8010 	pop	{r4, pc}
   2ba48:	e3a02090 	mov	r2, #144	; 0x90
   2ba4c:	e59f1008 	ldr	r1, [pc, #8]	; 2ba5c <_USBConfigurationParser+0x2c>
   2ba50:	e59f0008 	ldr	r0, [pc, #8]	; 2ba60 <_USBConfigurationParser+0x30>
   2ba54:	ebffaf71 	bl	17820 <uspi_assertion_failed>
   2ba58:	eafffff7 	b	2ba3c <_USBConfigurationParser+0xc>
   2ba5c:	000322dc 	.word	0x000322dc
   2ba60:	000306f0 	.word	0x000306f0

0002ba64 <USBConfigurationParserIsValid>:
   2ba64:	e92d4010 	push	{r4, lr}
   2ba68:	e2504000 	subs	r4, r0, #0
   2ba6c:	0a000001 	beq	2ba78 <USBConfigurationParserIsValid+0x14>
   2ba70:	e5940008 	ldr	r0, [r4, #8]
   2ba74:	e8bd8010 	pop	{r4, pc}
   2ba78:	e3a02096 	mov	r2, #150	; 0x96
   2ba7c:	e59f100c 	ldr	r1, [pc, #12]	; 2ba90 <USBConfigurationParserIsValid+0x2c>
   2ba80:	e59f000c 	ldr	r0, [pc, #12]	; 2ba94 <USBConfigurationParserIsValid+0x30>
   2ba84:	ebffaf65 	bl	17820 <uspi_assertion_failed>
   2ba88:	e5940008 	ldr	r0, [r4, #8]
   2ba8c:	e8bd8010 	pop	{r4, pc}
   2ba90:	000322dc 	.word	0x000322dc
   2ba94:	000306f0 	.word	0x000306f0

0002ba98 <USBConfigurationParserGetDescriptor>:
   2ba98:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2ba9c:	e2506000 	subs	r6, r0, #0
   2baa0:	e1a07001 	mov	r7, r1
   2baa4:	0a00002f 	beq	2bb68 <USBConfigurationParserGetDescriptor+0xd0>
   2baa8:	e5963008 	ldr	r3, [r6, #8]
   2baac:	e3530000 	cmp	r3, #0
   2bab0:	0a000021 	beq	2bb3c <USBConfigurationParserGetDescriptor+0xa4>
   2bab4:	e5964010 	ldr	r4, [r6, #16]
   2bab8:	e596300c 	ldr	r3, [r6, #12]
   2babc:	e1540003 	cmp	r4, r3
   2bac0:	2a00001a 	bcs	2bb30 <USBConfigurationParserGetDescriptor+0x98>
   2bac4:	e247a005 	sub	sl, r7, #5
   2bac8:	e16faf1a 	clz	sl, sl
   2bacc:	e59f90a8 	ldr	r9, [pc, #168]	; 2bb7c <USBConfigurationParserGetDescriptor+0xe4>
   2bad0:	e1a0a2aa 	lsr	sl, sl, #5
   2bad4:	e59f80a4 	ldr	r8, [pc, #164]	; 2bb80 <USBConfigurationParserGetDescriptor+0xe8>
   2bad8:	ea00000a 	b	2bb08 <USBConfigurationParserGetDescriptor+0x70>
   2badc:	e3550004 	cmp	r5, #4
   2bae0:	13a03000 	movne	r3, #0
   2bae4:	020a3001 	andeq	r3, sl, #1
   2bae8:	e3530000 	cmp	r3, #0
   2baec:	1a00000f 	bne	2bb30 <USBConfigurationParserGetDescriptor+0x98>
   2baf0:	e1550007 	cmp	r5, r7
   2baf4:	0a000015 	beq	2bb50 <USBConfigurationParserGetDescriptor+0xb8>
   2baf8:	e596300c 	ldr	r3, [r6, #12]
   2bafc:	e5864010 	str	r4, [r6, #16]
   2bb00:	e1530004 	cmp	r3, r4
   2bb04:	9a000009 	bls	2bb30 <USBConfigurationParserGetDescriptor+0x98>
   2bb08:	e5d42000 	ldrb	r2, [r4]
   2bb0c:	e5d45001 	ldrb	r5, [r4, #1]
   2bb10:	e0844002 	add	r4, r4, r2
   2bb14:	e1530004 	cmp	r3, r4
   2bb18:	2affffef 	bcs	2badc <USBConfigurationParserGetDescriptor+0x44>
   2bb1c:	e3a020a7 	mov	r2, #167	; 0xa7
   2bb20:	e1a01009 	mov	r1, r9
   2bb24:	e1a00008 	mov	r0, r8
   2bb28:	ebffaf3c 	bl	17820 <uspi_assertion_failed>
   2bb2c:	eaffffea 	b	2badc <USBConfigurationParserGetDescriptor+0x44>
   2bb30:	e3a00000 	mov	r0, #0
   2bb34:	e5860014 	str	r0, [r6, #20]
   2bb38:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2bb3c:	e3a0209d 	mov	r2, #157	; 0x9d
   2bb40:	e59f1034 	ldr	r1, [pc, #52]	; 2bb7c <USBConfigurationParserGetDescriptor+0xe4>
   2bb44:	e59f0038 	ldr	r0, [pc, #56]	; 2bb84 <USBConfigurationParserGetDescriptor+0xec>
   2bb48:	ebffaf34 	bl	17820 <uspi_assertion_failed>
   2bb4c:	eaffffd8 	b	2bab4 <USBConfigurationParserGetDescriptor+0x1c>
   2bb50:	e5960010 	ldr	r0, [r6, #16]
   2bb54:	e5864010 	str	r4, [r6, #16]
   2bb58:	e3500000 	cmp	r0, #0
   2bb5c:	15860018 	strne	r0, [r6, #24]
   2bb60:	e5860014 	str	r0, [r6, #20]
   2bb64:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2bb68:	e3a0209c 	mov	r2, #156	; 0x9c
   2bb6c:	e59f1008 	ldr	r1, [pc, #8]	; 2bb7c <USBConfigurationParserGetDescriptor+0xe4>
   2bb70:	e59f0010 	ldr	r0, [pc, #16]	; 2bb88 <USBConfigurationParserGetDescriptor+0xf0>
   2bb74:	ebffaf29 	bl	17820 <uspi_assertion_failed>
   2bb78:	eaffffca 	b	2baa8 <USBConfigurationParserGetDescriptor+0x10>
   2bb7c:	000322dc 	.word	0x000322dc
   2bb80:	00032318 	.word	0x00032318
   2bb84:	00030c54 	.word	0x00030c54
   2bb88:	000306f0 	.word	0x000306f0

0002bb8c <USBConfigurationParserGetCurrentDescriptor>:
   2bb8c:	e5903008 	ldr	r3, [r0, #8]
   2bb90:	e92d4010 	push	{r4, lr}
   2bb94:	e3530000 	cmp	r3, #0
   2bb98:	e1a04000 	mov	r4, r0
   2bb9c:	0a000008 	beq	2bbc4 <USBConfigurationParserGetCurrentDescriptor+0x38>
   2bba0:	e5940014 	ldr	r0, [r4, #20]
   2bba4:	e3500000 	cmp	r0, #0
   2bba8:	18bd8010 	popne	{r4, pc}
   2bbac:	e3a020c6 	mov	r2, #198	; 0xc6
   2bbb0:	e59f1020 	ldr	r1, [pc, #32]	; 2bbd8 <USBConfigurationParserGetCurrentDescriptor+0x4c>
   2bbb4:	e59f0020 	ldr	r0, [pc, #32]	; 2bbdc <USBConfigurationParserGetCurrentDescriptor+0x50>
   2bbb8:	ebffaf18 	bl	17820 <uspi_assertion_failed>
   2bbbc:	e5940014 	ldr	r0, [r4, #20]
   2bbc0:	e8bd8010 	pop	{r4, pc}
   2bbc4:	e3a020c5 	mov	r2, #197	; 0xc5
   2bbc8:	e59f1008 	ldr	r1, [pc, #8]	; 2bbd8 <USBConfigurationParserGetCurrentDescriptor+0x4c>
   2bbcc:	e59f000c 	ldr	r0, [pc, #12]	; 2bbe0 <USBConfigurationParserGetCurrentDescriptor+0x54>
   2bbd0:	ebffaf12 	bl	17820 <uspi_assertion_failed>
   2bbd4:	eafffff1 	b	2bba0 <USBConfigurationParserGetCurrentDescriptor+0x14>
   2bbd8:	000322dc 	.word	0x000322dc
   2bbdc:	0003233c 	.word	0x0003233c
   2bbe0:	00030c54 	.word	0x00030c54

0002bbe4 <USBConfigurationParserError>:
   2bbe4:	e92d4070 	push	{r4, r5, r6, lr}
   2bbe8:	e2504000 	subs	r4, r0, #0
   2bbec:	e1a05001 	mov	r5, r1
   2bbf0:	0a000011 	beq	2bc3c <USBConfigurationParserError+0x58>
   2bbf4:	e3550000 	cmp	r5, #0
   2bbf8:	0a00000a 	beq	2bc28 <USBConfigurationParserError+0x44>
   2bbfc:	e5941018 	ldr	r1, [r4, #24]
   2bc00:	e5943000 	ldr	r3, [r4]
   2bc04:	e1a00005 	mov	r0, r5
   2bc08:	e59f2040 	ldr	r2, [pc, #64]	; 2bc50 <USBConfigurationParserError+0x6c>
   2bc0c:	e0413003 	sub	r3, r1, r3
   2bc10:	e3a01001 	mov	r1, #1
   2bc14:	ebff76e6 	bl	97b4 <LogWrite>
   2bc18:	e1c400d0 	ldrd	r0, [r4]
   2bc1c:	e1a02005 	mov	r2, r5
   2bc20:	e8bd4070 	pop	{r4, r5, r6, lr}
   2bc24:	eaffaf09 	b	17850 <DebugHexdump>
   2bc28:	e3a020ce 	mov	r2, #206	; 0xce
   2bc2c:	e59f1020 	ldr	r1, [pc, #32]	; 2bc54 <USBConfigurationParserError+0x70>
   2bc30:	e59f0020 	ldr	r0, [pc, #32]	; 2bc58 <USBConfigurationParserError+0x74>
   2bc34:	ebffaef9 	bl	17820 <uspi_assertion_failed>
   2bc38:	eaffffef 	b	2bbfc <USBConfigurationParserError+0x18>
   2bc3c:	e3a020cd 	mov	r2, #205	; 0xcd
   2bc40:	e59f100c 	ldr	r1, [pc, #12]	; 2bc54 <USBConfigurationParserError+0x70>
   2bc44:	e59f0010 	ldr	r0, [pc, #16]	; 2bc5c <USBConfigurationParserError+0x78>
   2bc48:	ebffaef4 	bl	17820 <uspi_assertion_failed>
   2bc4c:	eaffffe8 	b	2bbf4 <USBConfigurationParserError+0x10>
   2bc50:	00032360 	.word	0x00032360
   2bc54:	000322dc 	.word	0x000322dc
   2bc58:	000318ec 	.word	0x000318ec
   2bc5c:	000306f0 	.word	0x000306f0

0002bc60 <KeyMap>:
   2bc60:	e92d4010 	push	{r4, lr}
   2bc64:	e2504000 	subs	r4, r0, #0
   2bc68:	0a000009 	beq	2bc94 <KeyMap+0x34>
   2bc6c:	e3a03000 	mov	r3, #0
   2bc70:	e3a02001 	mov	r2, #1
   2bc74:	e5843400 	str	r3, [r4, #1024]	; 0x400
   2bc78:	e5842404 	str	r2, [r4, #1028]	; 0x404
   2bc7c:	e5843408 	str	r3, [r4, #1032]	; 0x408
   2bc80:	e1a00004 	mov	r0, r4
   2bc84:	e8bd4010 	pop	{r4, lr}
   2bc88:	e3a02b01 	mov	r2, #1024	; 0x400
   2bc8c:	e59f1014 	ldr	r1, [pc, #20]	; 2bca8 <KeyMap+0x48>
   2bc90:	eaffee18 	b	274f8 <uspi_memcpy>
   2bc94:	e3a0206c 	mov	r2, #108	; 0x6c
   2bc98:	e59f100c 	ldr	r1, [pc, #12]	; 2bcac <KeyMap+0x4c>
   2bc9c:	e59f000c 	ldr	r0, [pc, #12]	; 2bcb0 <KeyMap+0x50>
   2bca0:	ebffaede 	bl	17820 <uspi_assertion_failed>
   2bca4:	eafffff0 	b	2bc6c <KeyMap+0xc>
   2bca8:	00032390 	.word	0x00032390
   2bcac:	0003285c 	.word	0x0003285c
   2bcb0:	000306f0 	.word	0x000306f0

0002bcb4 <_KeyMap>:
   2bcb4:	e12fff1e 	bx	lr

0002bcb8 <KeyMapClearTable>:
   2bcb8:	e92d4070 	push	{r4, r5, r6, lr}
   2bcbc:	e2504000 	subs	r4, r0, #0
   2bcc0:	e1a05001 	mov	r5, r1
   2bcc4:	0a00000b 	beq	2bcf8 <KeyMapClearTable+0x40>
   2bcc8:	e3550003 	cmp	r5, #3
   2bccc:	8a000007 	bhi	2bcf0 <KeyMapClearTable+0x38>
   2bcd0:	e3a01000 	mov	r1, #0
   2bcd4:	e0843085 	add	r3, r4, r5, lsl #1
   2bcd8:	e2832b01 	add	r2, r3, #1024	; 0x400
   2bcdc:	e0c310b8 	strh	r1, [r3], #8
   2bce0:	e1530002 	cmp	r3, r2
   2bce4:	1afffffc 	bne	2bcdc <KeyMapClearTable+0x24>
   2bce8:	e3a00001 	mov	r0, #1
   2bcec:	e8bd8070 	pop	{r4, r5, r6, pc}
   2bcf0:	e3a00000 	mov	r0, #0
   2bcf4:	e8bd8070 	pop	{r4, r5, r6, pc}
   2bcf8:	e3a0207c 	mov	r2, #124	; 0x7c
   2bcfc:	e59f1008 	ldr	r1, [pc, #8]	; 2bd0c <KeyMapClearTable+0x54>
   2bd00:	e59f0008 	ldr	r0, [pc, #8]	; 2bd10 <KeyMapClearTable+0x58>
   2bd04:	ebffaec5 	bl	17820 <uspi_assertion_failed>
   2bd08:	eaffffee 	b	2bcc8 <KeyMapClearTable+0x10>
   2bd0c:	0003285c 	.word	0x0003285c
   2bd10:	000306f0 	.word	0x000306f0

0002bd14 <KeyMapSetEntry>:
   2bd14:	e92d4070 	push	{r4, r5, r6, lr}
   2bd18:	e2506000 	subs	r6, r0, #0
   2bd1c:	e24dd008 	sub	sp, sp, #8
   2bd20:	e1a04001 	mov	r4, r1
   2bd24:	e1a05002 	mov	r5, r2
   2bd28:	0a000010 	beq	2bd70 <KeyMapSetEntry+0x5c>
   2bd2c:	e6af0075 	sxtb	r0, r5
   2bd30:	e3500000 	cmp	r0, #0
   2bd34:	c3a00000 	movgt	r0, #0
   2bd38:	d3a00001 	movle	r0, #1
   2bd3c:	e3540003 	cmp	r4, #3
   2bd40:	83800001 	orrhi	r0, r0, #1
   2bd44:	e3500000 	cmp	r0, #0
   2bd48:	13a00000 	movne	r0, #0
   2bd4c:	1a000005 	bne	2bd68 <KeyMapSetEntry+0x54>
   2bd50:	e59f2034 	ldr	r2, [pc, #52]	; 2bd8c <KeyMapSetEntry+0x78>
   2bd54:	e1530002 	cmp	r3, r2
   2bd58:	93a00001 	movls	r0, #1
   2bd5c:	90844105 	addls	r4, r4, r5, lsl #2
   2bd60:	91a04084 	lslls	r4, r4, #1
   2bd64:	918630b4 	strhls	r3, [r6, r4]
   2bd68:	e28dd008 	add	sp, sp, #8
   2bd6c:	e8bd8070 	pop	{r4, r5, r6, pc}
   2bd70:	e3a0208d 	mov	r2, #141	; 0x8d
   2bd74:	e59f1014 	ldr	r1, [pc, #20]	; 2bd90 <KeyMapSetEntry+0x7c>
   2bd78:	e59f0014 	ldr	r0, [pc, #20]	; 2bd94 <KeyMapSetEntry+0x80>
   2bd7c:	e58d3004 	str	r3, [sp, #4]
   2bd80:	ebffaea6 	bl	17820 <uspi_assertion_failed>
   2bd84:	e59d3004 	ldr	r3, [sp, #4]
   2bd88:	eaffffe7 	b	2bd2c <KeyMapSetEntry+0x18>
   2bd8c:	00000132 	.word	0x00000132
   2bd90:	0003285c 	.word	0x0003285c
   2bd94:	000306f0 	.word	0x000306f0

0002bd98 <KeyMapTranslate>:
   2bd98:	e92d4070 	push	{r4, r5, r6, lr}
   2bd9c:	e2505000 	subs	r5, r0, #0
   2bda0:	e1a06001 	mov	r6, r1
   2bda4:	e1a04002 	mov	r4, r2
   2bda8:	0a000035 	beq	2be84 <KeyMapTranslate+0xec>
   2bdac:	e6af3076 	sxtb	r3, r6
   2bdb0:	e3530000 	cmp	r3, #0
   2bdb4:	da000023 	ble	2be48 <KeyMapTranslate+0xb0>
   2bdb8:	e1a03186 	lsl	r3, r6, #3
   2bdbc:	e19500b3 	ldrh	r0, [r5, r3]
   2bdc0:	e3500f42 	cmp	r0, #264	; 0x108
   2bdc4:	0a000021 	beq	2be50 <KeyMapTranslate+0xb8>
   2bdc8:	e2403f43 	sub	r3, r0, #268	; 0x10c
   2bdcc:	e2433003 	sub	r3, r3, #3
   2bdd0:	e353000b 	cmp	r3, #11
   2bdd4:	8a000001 	bhi	2bde0 <KeyMapTranslate+0x48>
   2bdd8:	e3140004 	tst	r4, #4
   2bddc:	1a000021 	bne	2be68 <KeyMapTranslate+0xd0>
   2bde0:	e314008c 	tst	r4, #140	; 0x8c
   2bde4:	1a000017 	bne	2be48 <KeyMapTranslate+0xb0>
   2bde8:	e2463053 	sub	r3, r6, #83	; 0x53
   2bdec:	e3530010 	cmp	r3, #16
   2bdf0:	9a00001f 	bls	2be74 <KeyMapTranslate+0xdc>
   2bdf4:	e3140040 	tst	r4, #64	; 0x40
   2bdf8:	e2044022 	and	r4, r4, #34	; 0x22
   2bdfc:	0a000031 	beq	2bec8 <KeyMapTranslate+0x130>
   2be00:	e3540000 	cmp	r4, #0
   2be04:	03a04002 	moveq	r4, #2
   2be08:	13a04003 	movne	r4, #3
   2be0c:	e0844106 	add	r4, r4, r6, lsl #2
   2be10:	e1a04084 	lsl	r4, r4, #1
   2be14:	e19500b4 	ldrh	r0, [r5, r4]
   2be18:	e59f30b4 	ldr	r3, [pc, #180]	; 2bed4 <KeyMapTranslate+0x13c>
   2be1c:	e1500003 	cmp	r0, r3
   2be20:	0a000022 	beq	2beb0 <KeyMapTranslate+0x118>
   2be24:	e3500e12 	cmp	r0, #288	; 0x120
   2be28:	0a00001a 	beq	2be98 <KeyMapTranslate+0x100>
   2be2c:	e3500f47 	cmp	r0, #284	; 0x11c
   2be30:	05953400 	ldreq	r3, [r5, #1024]	; 0x400
   2be34:	02800017 	addeq	r0, r0, #23
   2be38:	016f3f13 	clzeq	r3, r3
   2be3c:	01a032a3 	lsreq	r3, r3, #5
   2be40:	05853400 	streq	r3, [r5, #1024]	; 0x400
   2be44:	e8bd8070 	pop	{r4, r5, r6, pc}
   2be48:	e3a00000 	mov	r0, #0
   2be4c:	e8bd8070 	pop	{r4, r5, r6, pc}
   2be50:	e3140011 	tst	r4, #17
   2be54:	0affffe1 	beq	2bde0 <KeyMapTranslate+0x48>
   2be58:	e3140004 	tst	r4, #4
   2be5c:	0affffdf 	beq	2bde0 <KeyMapTranslate+0x48>
   2be60:	e59f0070 	ldr	r0, [pc, #112]	; 2bed8 <KeyMapTranslate+0x140>
   2be64:	e8bd8070 	pop	{r4, r5, r6, pc}
   2be68:	e2800027 	add	r0, r0, #39	; 0x27
   2be6c:	e6ff0070 	uxth	r0, r0
   2be70:	e8bd8070 	pop	{r4, r5, r6, pc}
   2be74:	e5954404 	ldr	r4, [r5, #1028]	; 0x404
   2be78:	e2944000 	adds	r4, r4, #0
   2be7c:	13a04001 	movne	r4, #1
   2be80:	eaffffe1 	b	2be0c <KeyMapTranslate+0x74>
   2be84:	e3a0209e 	mov	r2, #158	; 0x9e
   2be88:	e59f104c 	ldr	r1, [pc, #76]	; 2bedc <KeyMapTranslate+0x144>
   2be8c:	e59f004c 	ldr	r0, [pc, #76]	; 2bee0 <KeyMapTranslate+0x148>
   2be90:	ebffae62 	bl	17820 <uspi_assertion_failed>
   2be94:	eaffffc4 	b	2bdac <KeyMapTranslate+0x14>
   2be98:	e5953404 	ldr	r3, [r5, #1028]	; 0x404
   2be9c:	e3a00f4d 	mov	r0, #308	; 0x134
   2bea0:	e16f3f13 	clz	r3, r3
   2bea4:	e1a032a3 	lsr	r3, r3, #5
   2bea8:	e5853404 	str	r3, [r5, #1028]	; 0x404
   2beac:	e8bd8070 	pop	{r4, r5, r6, pc}
   2beb0:	e5953408 	ldr	r3, [r5, #1032]	; 0x408
   2beb4:	e59f0028 	ldr	r0, [pc, #40]	; 2bee4 <KeyMapTranslate+0x14c>
   2beb8:	e16f3f13 	clz	r3, r3
   2bebc:	e1a032a3 	lsr	r3, r3, #5
   2bec0:	e5853408 	str	r3, [r5, #1032]	; 0x408
   2bec4:	e8bd8070 	pop	{r4, r5, r6, pc}
   2bec8:	e2944000 	adds	r4, r4, #0
   2becc:	13a04001 	movne	r4, #1
   2bed0:	eaffffcd 	b	2be0c <KeyMapTranslate+0x74>
   2bed4:	0000011e 	.word	0x0000011e
   2bed8:	00000142 	.word	0x00000142
   2bedc:	0003285c 	.word	0x0003285c
   2bee0:	000306f0 	.word	0x000306f0
   2bee4:	00000135 	.word	0x00000135

0002bee8 <KeyMapGetString>:
   2bee8:	e92d4070 	push	{r4, r5, r6, lr}
   2beec:	e2506000 	subs	r6, r0, #0
   2bef0:	e24dd008 	sub	sp, sp, #8
   2bef4:	e1a04001 	mov	r4, r1
   2bef8:	e1a05002 	mov	r5, r2
   2befc:	0a00002e 	beq	2bfbc <KeyMapGetString+0xd4>
   2bf00:	e2442021 	sub	r2, r4, #33	; 0x21
   2bf04:	e59f10d8 	ldr	r1, [pc, #216]	; 2bfe4 <KeyMapGetString+0xfc>
   2bf08:	e6ff2072 	uxth	r2, r2
   2bf0c:	e1520001 	cmp	r2, r1
   2bf10:	8a000030 	bhi	2bfd8 <KeyMapGetString+0xf0>
   2bf14:	e2442c01 	sub	r2, r4, #256	; 0x100
   2bf18:	e6ff1072 	uxth	r1, r2
   2bf1c:	e3510032 	cmp	r1, #50	; 0x32
   2bf20:	9a00000d 	bls	2bf5c <KeyMapGetString+0x74>
   2bf24:	e3150011 	tst	r5, #17
   2bf28:	e6af2074 	sxtb	r2, r4
   2bf2c:	0a00000f 	beq	2bf70 <KeyMapGetString+0x88>
   2bf30:	e6ef4074 	uxtb	r4, r4
   2bf34:	e2442061 	sub	r2, r4, #97	; 0x61
   2bf38:	e3520019 	cmp	r2, #25
   2bf3c:	8a000025 	bhi	2bfd8 <KeyMapGetString+0xf0>
   2bf40:	e3a02000 	mov	r2, #0
   2bf44:	e1a00003 	mov	r0, r3
   2bf48:	e2444060 	sub	r4, r4, #96	; 0x60
   2bf4c:	e5c34000 	strb	r4, [r3]
   2bf50:	e5c32001 	strb	r2, [r3, #1]
   2bf54:	e28dd008 	add	sp, sp, #8
   2bf58:	e8bd8070 	pop	{r4, r5, r6, pc}
   2bf5c:	e59f3084 	ldr	r3, [pc, #132]	; 2bfe8 <KeyMapGetString+0x100>
   2bf60:	e0832102 	add	r2, r3, r2, lsl #2
   2bf64:	e5920400 	ldr	r0, [r2, #1024]	; 0x400
   2bf68:	e28dd008 	add	sp, sp, #8
   2bf6c:	e8bd8070 	pop	{r4, r5, r6, pc}
   2bf70:	e5961400 	ldr	r1, [r6, #1024]	; 0x400
   2bf74:	e3510000 	cmp	r1, #0
   2bf78:	0a000009 	beq	2bfa4 <KeyMapGetString+0xbc>
   2bf7c:	e6ef4074 	uxtb	r4, r4
   2bf80:	e2441041 	sub	r1, r4, #65	; 0x41
   2bf84:	e3510019 	cmp	r1, #25
   2bf88:	92844020 	addls	r4, r4, #32
   2bf8c:	96af2074 	sxtbls	r2, r4
   2bf90:	9a000003 	bls	2bfa4 <KeyMapGetString+0xbc>
   2bf94:	e2441061 	sub	r1, r4, #97	; 0x61
   2bf98:	e3510019 	cmp	r1, #25
   2bf9c:	92444020 	subls	r4, r4, #32
   2bfa0:	96af2074 	sxtbls	r2, r4
   2bfa4:	e3a01000 	mov	r1, #0
   2bfa8:	e1a00003 	mov	r0, r3
   2bfac:	e5c32000 	strb	r2, [r3]
   2bfb0:	e5c31001 	strb	r1, [r3, #1]
   2bfb4:	e28dd008 	add	sp, sp, #8
   2bfb8:	e8bd8070 	pop	{r4, r5, r6, pc}
   2bfbc:	e3a020ea 	mov	r2, #234	; 0xea
   2bfc0:	e59f1024 	ldr	r1, [pc, #36]	; 2bfec <KeyMapGetString+0x104>
   2bfc4:	e59f0024 	ldr	r0, [pc, #36]	; 2bff0 <KeyMapGetString+0x108>
   2bfc8:	e58d3004 	str	r3, [sp, #4]
   2bfcc:	ebffae13 	bl	17820 <uspi_assertion_failed>
   2bfd0:	e59d3004 	ldr	r3, [sp, #4]
   2bfd4:	eaffffc9 	b	2bf00 <KeyMapGetString+0x18>
   2bfd8:	e3a00000 	mov	r0, #0
   2bfdc:	e28dd008 	add	sp, sp, #8
   2bfe0:	e8bd8070 	pop	{r4, r5, r6, pc}
   2bfe4:	00000111 	.word	0x00000111
   2bfe8:	00032390 	.word	0x00032390
   2bfec:	0003285c 	.word	0x0003285c
   2bff0:	000306f0 	.word	0x000306f0

0002bff4 <KeyMapGetLEDStatus>:
   2bff4:	e92d4010 	push	{r4, lr}
   2bff8:	e2504000 	subs	r4, r0, #0
   2bffc:	0a00000a 	beq	2c02c <KeyMapGetLEDStatus+0x38>
   2c000:	e5942400 	ldr	r2, [r4, #1024]	; 0x400
   2c004:	e5943404 	ldr	r3, [r4, #1028]	; 0x404
   2c008:	e3520000 	cmp	r2, #0
   2c00c:	13a00002 	movne	r0, #2
   2c010:	03a00000 	moveq	r0, #0
   2c014:	e3530000 	cmp	r3, #0
   2c018:	e5943408 	ldr	r3, [r4, #1032]	; 0x408
   2c01c:	13800001 	orrne	r0, r0, #1
   2c020:	e3530000 	cmp	r3, #0
   2c024:	13800004 	orrne	r0, r0, #4
   2c028:	e8bd8010 	pop	{r4, pc}
   2c02c:	e59f200c 	ldr	r2, [pc, #12]	; 2c040 <KeyMapGetLEDStatus+0x4c>
   2c030:	e59f100c 	ldr	r1, [pc, #12]	; 2c044 <KeyMapGetLEDStatus+0x50>
   2c034:	e59f000c 	ldr	r0, [pc, #12]	; 2c048 <KeyMapGetLEDStatus+0x54>
   2c038:	ebffadf8 	bl	17820 <uspi_assertion_failed>
   2c03c:	eaffffef 	b	2c000 <KeyMapGetLEDStatus+0xc>
   2c040:	0000011b 	.word	0x0000011b
   2c044:	0003285c 	.word	0x0003285c
   2c048:	000306f0 	.word	0x000306f0

0002c04c <memcpy>:
   2c04c:	e352000f 	cmp	r2, #15
   2c050:	9a00000a 	bls	2c080 <memcpy+0x34>
   2c054:	e1803001 	orr	r3, r0, r1
   2c058:	e3130003 	tst	r3, #3
   2c05c:	11a03000 	movne	r3, r0
   2c060:	0a00000a 	beq	2c090 <memcpy+0x44>
   2c064:	e2433001 	sub	r3, r3, #1
   2c068:	e0812002 	add	r2, r1, r2
   2c06c:	e4d1c001 	ldrb	ip, [r1], #1
   2c070:	e1510002 	cmp	r1, r2
   2c074:	e5e3c001 	strb	ip, [r3, #1]!
   2c078:	1afffffb 	bne	2c06c <memcpy+0x20>
   2c07c:	e12fff1e 	bx	lr
   2c080:	e3520000 	cmp	r2, #0
   2c084:	e1a03000 	mov	r3, r0
   2c088:	1afffff5 	bne	2c064 <memcpy+0x18>
   2c08c:	e12fff1e 	bx	lr
   2c090:	e2423010 	sub	r3, r2, #16
   2c094:	e92d4070 	push	{r4, r5, r6, lr}
   2c098:	e1a03223 	lsr	r3, r3, #4
   2c09c:	e2816020 	add	r6, r1, #32
   2c0a0:	e0866203 	add	r6, r6, r3, lsl #4
   2c0a4:	e281c010 	add	ip, r1, #16
   2c0a8:	e280e010 	add	lr, r0, #16
   2c0ac:	e51c5010 	ldr	r5, [ip, #-16]
   2c0b0:	e51c400c 	ldr	r4, [ip, #-12]
   2c0b4:	e50e5010 	str	r5, [lr, #-16]
   2c0b8:	e50e400c 	str	r4, [lr, #-12]
   2c0bc:	e51c5008 	ldr	r5, [ip, #-8]
   2c0c0:	e51c4004 	ldr	r4, [ip, #-4]
   2c0c4:	e28cc010 	add	ip, ip, #16
   2c0c8:	e15c0006 	cmp	ip, r6
   2c0cc:	e50e5008 	str	r5, [lr, #-8]
   2c0d0:	e50e4004 	str	r4, [lr, #-4]
   2c0d4:	e28ee010 	add	lr, lr, #16
   2c0d8:	1afffff3 	bne	2c0ac <memcpy+0x60>
   2c0dc:	e202e00f 	and	lr, r2, #15
   2c0e0:	e2833001 	add	r3, r3, #1
   2c0e4:	e1a03203 	lsl	r3, r3, #4
   2c0e8:	e35e0003 	cmp	lr, #3
   2c0ec:	e0811003 	add	r1, r1, r3
   2c0f0:	91a0200e 	movls	r2, lr
   2c0f4:	e0803003 	add	r3, r0, r3
   2c0f8:	9a00000d 	bls	2c134 <memcpy+0xe8>
   2c0fc:	e1a05001 	mov	r5, r1
   2c100:	e1a0c00e 	mov	ip, lr
   2c104:	e2434004 	sub	r4, r3, #4
   2c108:	e24cc004 	sub	ip, ip, #4
   2c10c:	e4956004 	ldr	r6, [r5], #4
   2c110:	e35c0003 	cmp	ip, #3
   2c114:	e5a46004 	str	r6, [r4, #4]!
   2c118:	8afffffa 	bhi	2c108 <memcpy+0xbc>
   2c11c:	e24ec004 	sub	ip, lr, #4
   2c120:	e3ccc003 	bic	ip, ip, #3
   2c124:	e28cc004 	add	ip, ip, #4
   2c128:	e083300c 	add	r3, r3, ip
   2c12c:	e081100c 	add	r1, r1, ip
   2c130:	e2022003 	and	r2, r2, #3
   2c134:	e3520000 	cmp	r2, #0
   2c138:	12433001 	subne	r3, r3, #1
   2c13c:	10812002 	addne	r2, r1, r2
   2c140:	0a000003 	beq	2c154 <memcpy+0x108>
   2c144:	e4d1c001 	ldrb	ip, [r1], #1
   2c148:	e1510002 	cmp	r1, r2
   2c14c:	e5e3c001 	strb	ip, [r3, #1]!
   2c150:	1afffffb 	bne	2c144 <memcpy+0xf8>
   2c154:	e8bd4070 	pop	{r4, r5, r6, lr}
   2c158:	e12fff1e 	bx	lr

0002c15c <memset>:
   2c15c:	e3100003 	tst	r0, #3
   2c160:	0a000040 	beq	2c268 <memset+0x10c>
   2c164:	e3520000 	cmp	r2, #0
   2c168:	e2422001 	sub	r2, r2, #1
   2c16c:	012fff1e 	bxeq	lr
   2c170:	e201c0ff 	and	ip, r1, #255	; 0xff
   2c174:	e1a03000 	mov	r3, r0
   2c178:	ea000002 	b	2c188 <memset+0x2c>
   2c17c:	e2422001 	sub	r2, r2, #1
   2c180:	e3720001 	cmn	r2, #1
   2c184:	012fff1e 	bxeq	lr
   2c188:	e4c3c001 	strb	ip, [r3], #1
   2c18c:	e3130003 	tst	r3, #3
   2c190:	1afffff9 	bne	2c17c <memset+0x20>
   2c194:	e3520003 	cmp	r2, #3
   2c198:	9a00002a 	bls	2c248 <memset+0xec>
   2c19c:	e92d4030 	push	{r4, r5, lr}
   2c1a0:	e201e0ff 	and	lr, r1, #255	; 0xff
   2c1a4:	e18ee40e 	orr	lr, lr, lr, lsl #8
   2c1a8:	e352000f 	cmp	r2, #15
   2c1ac:	e18ee80e 	orr	lr, lr, lr, lsl #16
   2c1b0:	9a000010 	bls	2c1f8 <memset+0x9c>
   2c1b4:	e2425010 	sub	r5, r2, #16
   2c1b8:	e1a05225 	lsr	r5, r5, #4
   2c1bc:	e2834020 	add	r4, r3, #32
   2c1c0:	e0844205 	add	r4, r4, r5, lsl #4
   2c1c4:	e283c010 	add	ip, r3, #16
   2c1c8:	e50ce010 	str	lr, [ip, #-16]
   2c1cc:	e50ce00c 	str	lr, [ip, #-12]
   2c1d0:	e50ce008 	str	lr, [ip, #-8]
   2c1d4:	e50ce004 	str	lr, [ip, #-4]
   2c1d8:	e28cc010 	add	ip, ip, #16
   2c1dc:	e15c0004 	cmp	ip, r4
   2c1e0:	1afffff8 	bne	2c1c8 <memset+0x6c>
   2c1e4:	e202200f 	and	r2, r2, #15
   2c1e8:	e2855001 	add	r5, r5, #1
   2c1ec:	e3520003 	cmp	r2, #3
   2c1f0:	e0833205 	add	r3, r3, r5, lsl #4
   2c1f4:	9a00000a 	bls	2c224 <memset+0xc8>
   2c1f8:	e1a04003 	mov	r4, r3
   2c1fc:	e1a0c002 	mov	ip, r2
   2c200:	e24cc004 	sub	ip, ip, #4
   2c204:	e35c0003 	cmp	ip, #3
   2c208:	e484e004 	str	lr, [r4], #4
   2c20c:	8afffffb 	bhi	2c200 <memset+0xa4>
   2c210:	e242c004 	sub	ip, r2, #4
   2c214:	e3ccc003 	bic	ip, ip, #3
   2c218:	e28cc004 	add	ip, ip, #4
   2c21c:	e083300c 	add	r3, r3, ip
   2c220:	e2022003 	and	r2, r2, #3
   2c224:	e3520000 	cmp	r2, #0
   2c228:	120110ff 	andne	r1, r1, #255	; 0xff
   2c22c:	10832002 	addne	r2, r3, r2
   2c230:	0a000002 	beq	2c240 <memset+0xe4>
   2c234:	e4c31001 	strb	r1, [r3], #1
   2c238:	e1520003 	cmp	r2, r3
   2c23c:	1afffffc 	bne	2c234 <memset+0xd8>
   2c240:	e8bd4030 	pop	{r4, r5, lr}
   2c244:	e12fff1e 	bx	lr
   2c248:	e3520000 	cmp	r2, #0
   2c24c:	012fff1e 	bxeq	lr
   2c250:	e20110ff 	and	r1, r1, #255	; 0xff
   2c254:	e0832002 	add	r2, r3, r2
   2c258:	e4c31001 	strb	r1, [r3], #1
   2c25c:	e1520003 	cmp	r2, r3
   2c260:	1afffffc 	bne	2c258 <memset+0xfc>
   2c264:	e12fff1e 	bx	lr
   2c268:	e1a03000 	mov	r3, r0
   2c26c:	eaffffc8 	b	2c194 <memset+0x38>

0002c270 <strcasecmp>:
   2c270:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   2c274:	e1a07000 	mov	r7, r0
   2c278:	e1a06001 	mov	r6, r1
   2c27c:	e4d74001 	ldrb	r4, [r7], #1
   2c280:	eb00056d 	bl	2d83c <__locale_ctype_ptr>
   2c284:	e0800004 	add	r0, r0, r4
   2c288:	e5d03001 	ldrb	r3, [r0, #1]
   2c28c:	e2033003 	and	r3, r3, #3
   2c290:	e3530001 	cmp	r3, #1
   2c294:	02844020 	addeq	r4, r4, #32
   2c298:	e4d65001 	ldrb	r5, [r6], #1
   2c29c:	eb000566 	bl	2d83c <__locale_ctype_ptr>
   2c2a0:	e0800005 	add	r0, r0, r5
   2c2a4:	e5d03001 	ldrb	r3, [r0, #1]
   2c2a8:	e2033003 	and	r3, r3, #3
   2c2ac:	e3530001 	cmp	r3, #1
   2c2b0:	0a000005 	beq	2c2cc <strcasecmp+0x5c>
   2c2b4:	e0540005 	subs	r0, r4, r5
   2c2b8:	1a000001 	bne	2c2c4 <strcasecmp+0x54>
   2c2bc:	e3550000 	cmp	r5, #0
   2c2c0:	1affffed 	bne	2c27c <strcasecmp+0xc>
   2c2c4:	e8bd41f0 	pop	{r4, r5, r6, r7, r8, lr}
   2c2c8:	e12fff1e 	bx	lr
   2c2cc:	e2850020 	add	r0, r5, #32
   2c2d0:	e0540000 	subs	r0, r4, r0
   2c2d4:	0affffe8 	beq	2c27c <strcasecmp+0xc>
   2c2d8:	e8bd41f0 	pop	{r4, r5, r6, r7, r8, lr}
   2c2dc:	e12fff1e 	bx	lr

0002c2e0 <strchr>:
   2c2e0:	e20110ff 	and	r1, r1, #255	; 0xff
   2c2e4:	e3510000 	cmp	r1, #0
   2c2e8:	e2003003 	and	r3, r0, #3
   2c2ec:	0a000035 	beq	2c3c8 <strchr+0xe8>
   2c2f0:	e3530000 	cmp	r3, #0
   2c2f4:	0a00000e 	beq	2c334 <strchr+0x54>
   2c2f8:	e5d03000 	ldrb	r3, [r0]
   2c2fc:	e3530000 	cmp	r3, #0
   2c300:	0a000053 	beq	2c454 <strchr+0x174>
   2c304:	e1510003 	cmp	r1, r3
   2c308:	012fff1e 	bxeq	lr
   2c30c:	e2803001 	add	r3, r0, #1
   2c310:	ea000004 	b	2c328 <strchr+0x48>
   2c314:	e4d32001 	ldrb	r2, [r3], #1
   2c318:	e3520000 	cmp	r2, #0
   2c31c:	0a00004a 	beq	2c44c <strchr+0x16c>
   2c320:	e1520001 	cmp	r2, r1
   2c324:	012fff1e 	bxeq	lr
   2c328:	e3130003 	tst	r3, #3
   2c32c:	e1a00003 	mov	r0, r3
   2c330:	1afffff7 	bne	2c314 <strchr+0x34>
   2c334:	e92d4070 	push	{r4, r5, r6, lr}
   2c338:	e590c000 	ldr	ip, [r0]
   2c33c:	e1815401 	orr	r5, r1, r1, lsl #8
   2c340:	e59f4114 	ldr	r4, [pc, #276]	; 2c45c <strchr+0x17c>
   2c344:	e1855805 	orr	r5, r5, r5, lsl #16
   2c348:	e025e00c 	eor	lr, r5, ip
   2c34c:	e08e3004 	add	r3, lr, r4
   2c350:	e08c2004 	add	r2, ip, r4
   2c354:	e1c3300e 	bic	r3, r3, lr
   2c358:	e1c2200c 	bic	r2, r2, ip
   2c35c:	e59f60fc 	ldr	r6, [pc, #252]	; 2c460 <strchr+0x180>
   2c360:	e1833002 	orr	r3, r3, r2
   2c364:	e1130006 	tst	r3, r6
   2c368:	1a000008 	bne	2c390 <strchr+0xb0>
   2c36c:	e5b0c004 	ldr	ip, [r0, #4]!
   2c370:	e02ce005 	eor	lr, ip, r5
   2c374:	e08e2004 	add	r2, lr, r4
   2c378:	e08c3004 	add	r3, ip, r4
   2c37c:	e1c2200e 	bic	r2, r2, lr
   2c380:	e1c3300c 	bic	r3, r3, ip
   2c384:	e1833002 	orr	r3, r3, r2
   2c388:	e1130006 	tst	r3, r6
   2c38c:	0afffff6 	beq	2c36c <strchr+0x8c>
   2c390:	e5d03000 	ldrb	r3, [r0]
   2c394:	e3530000 	cmp	r3, #0
   2c398:	0a000007 	beq	2c3bc <strchr+0xdc>
   2c39c:	e1510003 	cmp	r1, r3
   2c3a0:	1a000002 	bne	2c3b0 <strchr+0xd0>
   2c3a4:	ea000005 	b	2c3c0 <strchr+0xe0>
   2c3a8:	e1530001 	cmp	r3, r1
   2c3ac:	0a000003 	beq	2c3c0 <strchr+0xe0>
   2c3b0:	e5f03001 	ldrb	r3, [r0, #1]!
   2c3b4:	e3530000 	cmp	r3, #0
   2c3b8:	1afffffa 	bne	2c3a8 <strchr+0xc8>
   2c3bc:	e1a00003 	mov	r0, r3
   2c3c0:	e8bd4070 	pop	{r4, r5, r6, lr}
   2c3c4:	e12fff1e 	bx	lr
   2c3c8:	e3530000 	cmp	r3, #0
   2c3cc:	0a00000b 	beq	2c400 <strchr+0x120>
   2c3d0:	e5d03000 	ldrb	r3, [r0]
   2c3d4:	e3530000 	cmp	r3, #0
   2c3d8:	012fff1e 	bxeq	lr
   2c3dc:	e2803001 	add	r3, r0, #1
   2c3e0:	ea000003 	b	2c3f4 <strchr+0x114>
   2c3e4:	e5d02000 	ldrb	r2, [r0]
   2c3e8:	e3520000 	cmp	r2, #0
   2c3ec:	e2833001 	add	r3, r3, #1
   2c3f0:	012fff1e 	bxeq	lr
   2c3f4:	e3130003 	tst	r3, #3
   2c3f8:	e1a00003 	mov	r0, r3
   2c3fc:	1afffff8 	bne	2c3e4 <strchr+0x104>
   2c400:	e5902000 	ldr	r2, [r0]
   2c404:	e59fc050 	ldr	ip, [pc, #80]	; 2c45c <strchr+0x17c>
   2c408:	e59f1050 	ldr	r1, [pc, #80]	; 2c460 <strchr+0x180>
   2c40c:	e082300c 	add	r3, r2, ip
   2c410:	e1c33002 	bic	r3, r3, r2
   2c414:	e1130001 	tst	r3, r1
   2c418:	1a000004 	bne	2c430 <strchr+0x150>
   2c41c:	e5b02004 	ldr	r2, [r0, #4]!
   2c420:	e082300c 	add	r3, r2, ip
   2c424:	e1c33002 	bic	r3, r3, r2
   2c428:	e1130001 	tst	r3, r1
   2c42c:	0afffffa 	beq	2c41c <strchr+0x13c>
   2c430:	e5d03000 	ldrb	r3, [r0]
   2c434:	e3530000 	cmp	r3, #0
   2c438:	012fff1e 	bxeq	lr
   2c43c:	e5f03001 	ldrb	r3, [r0, #1]!
   2c440:	e3530000 	cmp	r3, #0
   2c444:	1afffffc 	bne	2c43c <strchr+0x15c>
   2c448:	e12fff1e 	bx	lr
   2c44c:	e1a00002 	mov	r0, r2
   2c450:	e12fff1e 	bx	lr
   2c454:	e1a00003 	mov	r0, r3
   2c458:	e12fff1e 	bx	lr
   2c45c:	fefefeff 	.word	0xfefefeff
   2c460:	80808080 	.word	0x80808080

0002c464 <strcmp>:
   2c464:	e020c001 	eor	ip, r0, r1
   2c468:	e31c0003 	tst	ip, #3
   2c46c:	1a000021 	bne	2c4f8 <strcmp+0x94>
   2c470:	e210c003 	ands	ip, r0, #3
   2c474:	e3c00003 	bic	r0, r0, #3
   2c478:	e3c11003 	bic	r1, r1, #3
   2c47c:	e4902004 	ldr	r2, [r0], #4
   2c480:	04913004 	ldreq	r3, [r1], #4
   2c484:	0a000006 	beq	2c4a4 <strcmp+0x40>
   2c488:	e22cc003 	eor	ip, ip, #3
   2c48c:	e3e034ff 	mvn	r3, #-16777216	; 0xff000000
   2c490:	e1a0c18c 	lsl	ip, ip, #3
   2c494:	e1a0cc33 	lsr	ip, r3, ip
   2c498:	e4913004 	ldr	r3, [r1], #4
   2c49c:	e182200c 	orr	r2, r2, ip
   2c4a0:	e183300c 	orr	r3, r3, ip
   2c4a4:	e52d4004 	push	{r4}		; (str r4, [sp, #-4]!)
   2c4a8:	e3a04001 	mov	r4, #1
   2c4ac:	e1844404 	orr	r4, r4, r4, lsl #8
   2c4b0:	e1844804 	orr	r4, r4, r4, lsl #16
   2c4b4:	e042c004 	sub	ip, r2, r4
   2c4b8:	e1520003 	cmp	r2, r3
   2c4bc:	01ccc002 	biceq	ip, ip, r2
   2c4c0:	011c0384 	tsteq	ip, r4, lsl #7
   2c4c4:	04902004 	ldreq	r2, [r0], #4
   2c4c8:	04913004 	ldreq	r3, [r1], #4
   2c4cc:	0afffff8 	beq	2c4b4 <strcmp+0x50>
   2c4d0:	e1a00c02 	lsl	r0, r2, #24
   2c4d4:	e1a02422 	lsr	r2, r2, #8
   2c4d8:	e3500001 	cmp	r0, #1
   2c4dc:	21500c03 	cmpcs	r0, r3, lsl #24
   2c4e0:	01a03423 	lsreq	r3, r3, #8
   2c4e4:	0afffff9 	beq	2c4d0 <strcmp+0x6c>
   2c4e8:	e20330ff 	and	r3, r3, #255	; 0xff
   2c4ec:	e0630c20 	rsb	r0, r3, r0, lsr #24
   2c4f0:	e49d4004 	pop	{r4}		; (ldr r4, [sp], #4)
   2c4f4:	e12fff1e 	bx	lr
   2c4f8:	e3100003 	tst	r0, #3
   2c4fc:	0a000006 	beq	2c51c <strcmp+0xb8>
   2c500:	e4d02001 	ldrb	r2, [r0], #1
   2c504:	e4d13001 	ldrb	r3, [r1], #1
   2c508:	e3520001 	cmp	r2, #1
   2c50c:	21520003 	cmpcs	r2, r3
   2c510:	0afffff8 	beq	2c4f8 <strcmp+0x94>
   2c514:	e0420003 	sub	r0, r2, r3
   2c518:	e12fff1e 	bx	lr
   2c51c:	e92d0030 	push	{r4, r5}
   2c520:	e3a04001 	mov	r4, #1
   2c524:	e1844404 	orr	r4, r4, r4, lsl #8
   2c528:	e1844804 	orr	r4, r4, r4, lsl #16
   2c52c:	e4902004 	ldr	r2, [r0], #4
   2c530:	e2015003 	and	r5, r1, #3
   2c534:	e3c11003 	bic	r1, r1, #3
   2c538:	e4913004 	ldr	r3, [r1], #4
   2c53c:	e3550002 	cmp	r5, #2
   2c540:	0a000017 	beq	2c5a4 <strcmp+0x140>
   2c544:	8a00002d 	bhi	2c600 <strcmp+0x19c>
   2c548:	e3c254ff 	bic	r5, r2, #-16777216	; 0xff000000
   2c54c:	e1550423 	cmp	r5, r3, lsr #8
   2c550:	e042c004 	sub	ip, r2, r4
   2c554:	e1ccc002 	bic	ip, ip, r2
   2c558:	1a000007 	bne	2c57c <strcmp+0x118>
   2c55c:	e01cc384 	ands	ip, ip, r4, lsl #7
   2c560:	04913004 	ldreq	r3, [r1], #4
   2c564:	1a000006 	bne	2c584 <strcmp+0x120>
   2c568:	e0255002 	eor	r5, r5, r2
   2c56c:	e1550c03 	cmp	r5, r3, lsl #24
   2c570:	1a000008 	bne	2c598 <strcmp+0x134>
   2c574:	e4902004 	ldr	r2, [r0], #4
   2c578:	eafffff2 	b	2c548 <strcmp+0xe4>
   2c57c:	e1a03423 	lsr	r3, r3, #8
   2c580:	ea000036 	b	2c660 <strcmp+0x1fc>
   2c584:	e3dcc4ff 	bics	ip, ip, #-16777216	; 0xff000000
   2c588:	1a000031 	bne	2c654 <strcmp+0x1f0>
   2c58c:	e5d13000 	ldrb	r3, [r1]
   2c590:	e1a05c22 	lsr	r5, r2, #24
   2c594:	ea000031 	b	2c660 <strcmp+0x1fc>
   2c598:	e1a05c22 	lsr	r5, r2, #24
   2c59c:	e20330ff 	and	r3, r3, #255	; 0xff
   2c5a0:	ea00002e 	b	2c660 <strcmp+0x1fc>
   2c5a4:	e1a05802 	lsl	r5, r2, #16
   2c5a8:	e042c004 	sub	ip, r2, r4
   2c5ac:	e1a05825 	lsr	r5, r5, #16
   2c5b0:	e1ccc002 	bic	ip, ip, r2
   2c5b4:	e1550823 	cmp	r5, r3, lsr #16
   2c5b8:	1a00000e 	bne	2c5f8 <strcmp+0x194>
   2c5bc:	e01cc384 	ands	ip, ip, r4, lsl #7
   2c5c0:	04913004 	ldreq	r3, [r1], #4
   2c5c4:	1a000004 	bne	2c5dc <strcmp+0x178>
   2c5c8:	e0255002 	eor	r5, r5, r2
   2c5cc:	e1550803 	cmp	r5, r3, lsl #16
   2c5d0:	1a000006 	bne	2c5f0 <strcmp+0x18c>
   2c5d4:	e4902004 	ldr	r2, [r0], #4
   2c5d8:	eafffff1 	b	2c5a4 <strcmp+0x140>
   2c5dc:	e1b0c80c 	lsls	ip, ip, #16
   2c5e0:	1a00001b 	bne	2c654 <strcmp+0x1f0>
   2c5e4:	e1d130b0 	ldrh	r3, [r1]
   2c5e8:	e1a05822 	lsr	r5, r2, #16
   2c5ec:	ea00001b 	b	2c660 <strcmp+0x1fc>
   2c5f0:	e1a03803 	lsl	r3, r3, #16
   2c5f4:	e1a05822 	lsr	r5, r2, #16
   2c5f8:	e1a03823 	lsr	r3, r3, #16
   2c5fc:	ea000017 	b	2c660 <strcmp+0x1fc>
   2c600:	e20250ff 	and	r5, r2, #255	; 0xff
   2c604:	e1550c23 	cmp	r5, r3, lsr #24
   2c608:	e042c004 	sub	ip, r2, r4
   2c60c:	e1ccc002 	bic	ip, ip, r2
   2c610:	1a000007 	bne	2c634 <strcmp+0x1d0>
   2c614:	e01cc384 	ands	ip, ip, r4, lsl #7
   2c618:	04913004 	ldreq	r3, [r1], #4
   2c61c:	1a000006 	bne	2c63c <strcmp+0x1d8>
   2c620:	e0255002 	eor	r5, r5, r2
   2c624:	e1550403 	cmp	r5, r3, lsl #8
   2c628:	1a000006 	bne	2c648 <strcmp+0x1e4>
   2c62c:	e4902004 	ldr	r2, [r0], #4
   2c630:	eafffff2 	b	2c600 <strcmp+0x19c>
   2c634:	e1a03c23 	lsr	r3, r3, #24
   2c638:	ea000008 	b	2c660 <strcmp+0x1fc>
   2c63c:	e31200ff 	tst	r2, #255	; 0xff
   2c640:	0a000003 	beq	2c654 <strcmp+0x1f0>
   2c644:	e4913004 	ldr	r3, [r1], #4
   2c648:	e1a05422 	lsr	r5, r2, #8
   2c64c:	e3c334ff 	bic	r3, r3, #-16777216	; 0xff000000
   2c650:	ea000002 	b	2c660 <strcmp+0x1fc>
   2c654:	e3a00000 	mov	r0, #0
   2c658:	e8bd0030 	pop	{r4, r5}
   2c65c:	e12fff1e 	bx	lr
   2c660:	e20520ff 	and	r2, r5, #255	; 0xff
   2c664:	e20300ff 	and	r0, r3, #255	; 0xff
   2c668:	e3500001 	cmp	r0, #1
   2c66c:	21500002 	cmpcs	r0, r2
   2c670:	01a05425 	lsreq	r5, r5, #8
   2c674:	01a03423 	lsreq	r3, r3, #8
   2c678:	0afffff8 	beq	2c660 <strcmp+0x1fc>
   2c67c:	e0420000 	sub	r0, r2, r0
   2c680:	e8bd0030 	pop	{r4, r5}
   2c684:	e12fff1e 	bx	lr

0002c688 <strlcat>:
   2c688:	e3520000 	cmp	r2, #0
   2c68c:	e92d4010 	push	{r4, lr}
   2c690:	0a000023 	beq	2c724 <strlcat+0x9c>
   2c694:	e5d03000 	ldrb	r3, [r0]
   2c698:	e3530000 	cmp	r3, #0
   2c69c:	e1a04000 	mov	r4, r0
   2c6a0:	0a000026 	beq	2c740 <strlcat+0xb8>
   2c6a4:	e2803001 	add	r3, r0, #1
   2c6a8:	e080c002 	add	ip, r0, r2
   2c6ac:	ea000003 	b	2c6c0 <strlcat+0x38>
   2c6b0:	e5d33000 	ldrb	r3, [r3]
   2c6b4:	e3530000 	cmp	r3, #0
   2c6b8:	e2803001 	add	r3, r0, #1
   2c6bc:	0a000002 	beq	2c6cc <strlcat+0x44>
   2c6c0:	e15c0003 	cmp	ip, r3
   2c6c4:	e1a00003 	mov	r0, r3
   2c6c8:	1afffff8 	bne	2c6b0 <strlcat+0x28>
   2c6cc:	e0404004 	sub	r4, r0, r4
   2c6d0:	e0422004 	sub	r2, r2, r4
   2c6d4:	e3520000 	cmp	r2, #0
   2c6d8:	0a000012 	beq	2c728 <strlcat+0xa0>
   2c6dc:	e5d13000 	ldrb	r3, [r1]
   2c6e0:	e3530000 	cmp	r3, #0
   2c6e4:	e1a0c001 	mov	ip, r1
   2c6e8:	0a000008 	beq	2c710 <strlcat+0x88>
   2c6ec:	e3520001 	cmp	r2, #1
   2c6f0:	15c03000 	strbne	r3, [r0]
   2c6f4:	e5f13001 	ldrb	r3, [r1, #1]!
   2c6f8:	12422001 	subne	r2, r2, #1
   2c6fc:	12800001 	addne	r0, r0, #1
   2c700:	e3530000 	cmp	r3, #0
   2c704:	1afffff8 	bne	2c6ec <strlcat+0x64>
   2c708:	e041100c 	sub	r1, r1, ip
   2c70c:	e0844001 	add	r4, r4, r1
   2c710:	e3a03000 	mov	r3, #0
   2c714:	e5c03000 	strb	r3, [r0]
   2c718:	e1a00004 	mov	r0, r4
   2c71c:	e8bd4010 	pop	{r4, lr}
   2c720:	e12fff1e 	bx	lr
   2c724:	e1a04002 	mov	r4, r2
   2c728:	e1a00001 	mov	r0, r1
   2c72c:	eb00001a 	bl	2c79c <strlen>
   2c730:	e0844000 	add	r4, r4, r0
   2c734:	e1a00004 	mov	r0, r4
   2c738:	e8bd4010 	pop	{r4, lr}
   2c73c:	e12fff1e 	bx	lr
   2c740:	e1a04003 	mov	r4, r3
   2c744:	eaffffe4 	b	2c6dc <strlcat+0x54>

0002c748 <strlcpy>:
   2c748:	e3520000 	cmp	r2, #0
   2c74c:	e1a03001 	mov	r3, r1
   2c750:	0a00000a 	beq	2c780 <strlcpy+0x38>
   2c754:	e2522001 	subs	r2, r2, #1
   2c758:	0a000006 	beq	2c778 <strlcpy+0x30>
   2c75c:	e4d3c001 	ldrb	ip, [r3], #1
   2c760:	e35c0000 	cmp	ip, #0
   2c764:	e4c0c001 	strb	ip, [r0], #1
   2c768:	1afffff9 	bne	2c754 <strlcpy+0xc>
   2c76c:	e0430001 	sub	r0, r3, r1
   2c770:	e2400001 	sub	r0, r0, #1
   2c774:	e12fff1e 	bx	lr
   2c778:	e3a02000 	mov	r2, #0
   2c77c:	e5c02000 	strb	r2, [r0]
   2c780:	e4d32001 	ldrb	r2, [r3], #1
   2c784:	e3520000 	cmp	r2, #0
   2c788:	0afffff7 	beq	2c76c <strlcpy+0x24>
   2c78c:	e4d32001 	ldrb	r2, [r3], #1
   2c790:	e3520000 	cmp	r2, #0
   2c794:	1afffff9 	bne	2c780 <strlcpy+0x38>
   2c798:	eafffff3 	b	2c76c <strlcpy+0x24>

0002c79c <strlen>:
   2c79c:	e3c01003 	bic	r1, r0, #3
   2c7a0:	e2100003 	ands	r0, r0, #3
   2c7a4:	e2600000 	rsb	r0, r0, #0
   2c7a8:	e4913004 	ldr	r3, [r1], #4
   2c7ac:	e280c004 	add	ip, r0, #4
   2c7b0:	e1a0c18c 	lsl	ip, ip, #3
   2c7b4:	e3e02000 	mvn	r2, #0
   2c7b8:	11833c32 	orrne	r3, r3, r2, lsr ip
   2c7bc:	e3a0c001 	mov	ip, #1
   2c7c0:	e18cc40c 	orr	ip, ip, ip, lsl #8
   2c7c4:	e18cc80c 	orr	ip, ip, ip, lsl #16
   2c7c8:	e043200c 	sub	r2, r3, ip
   2c7cc:	e1c22003 	bic	r2, r2, r3
   2c7d0:	e012238c 	ands	r2, r2, ip, lsl #7
   2c7d4:	04913004 	ldreq	r3, [r1], #4
   2c7d8:	02800004 	addeq	r0, r0, #4
   2c7dc:	0afffff9 	beq	2c7c8 <strlen+0x2c>
   2c7e0:	e31300ff 	tst	r3, #255	; 0xff
   2c7e4:	12800001 	addne	r0, r0, #1
   2c7e8:	13130cff 	tstne	r3, #65280	; 0xff00
   2c7ec:	12800001 	addne	r0, r0, #1
   2c7f0:	131308ff 	tstne	r3, #16711680	; 0xff0000
   2c7f4:	12800001 	addne	r0, r0, #1
   2c7f8:	e12fff1e 	bx	lr

0002c7fc <strncasecmp>:
   2c7fc:	e3520000 	cmp	r2, #0
   2c800:	0a000020 	beq	2c888 <strncasecmp+0x8c>
   2c804:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   2c808:	e1a07000 	mov	r7, r0
   2c80c:	e1a06001 	mov	r6, r1
   2c810:	e0818002 	add	r8, r1, r2
   2c814:	ea000005 	b	2c830 <strncasecmp+0x34>
   2c818:	e0540005 	subs	r0, r4, r5
   2c81c:	1a000014 	bne	2c874 <strncasecmp+0x78>
   2c820:	e3550000 	cmp	r5, #0
   2c824:	0a000014 	beq	2c87c <strncasecmp+0x80>
   2c828:	e1580006 	cmp	r8, r6
   2c82c:	0a000012 	beq	2c87c <strncasecmp+0x80>
   2c830:	e4d74001 	ldrb	r4, [r7], #1
   2c834:	eb000400 	bl	2d83c <__locale_ctype_ptr>
   2c838:	e0800004 	add	r0, r0, r4
   2c83c:	e5d03001 	ldrb	r3, [r0, #1]
   2c840:	e2033003 	and	r3, r3, #3
   2c844:	e3530001 	cmp	r3, #1
   2c848:	02844020 	addeq	r4, r4, #32
   2c84c:	e4d65001 	ldrb	r5, [r6], #1
   2c850:	eb0003f9 	bl	2d83c <__locale_ctype_ptr>
   2c854:	e0800005 	add	r0, r0, r5
   2c858:	e5d03001 	ldrb	r3, [r0, #1]
   2c85c:	e2033003 	and	r3, r3, #3
   2c860:	e3530001 	cmp	r3, #1
   2c864:	1affffeb 	bne	2c818 <strncasecmp+0x1c>
   2c868:	e2850020 	add	r0, r5, #32
   2c86c:	e0540000 	subs	r0, r4, r0
   2c870:	0affffec 	beq	2c828 <strncasecmp+0x2c>
   2c874:	e8bd41f0 	pop	{r4, r5, r6, r7, r8, lr}
   2c878:	e12fff1e 	bx	lr
   2c87c:	e3a00000 	mov	r0, #0
   2c880:	e8bd41f0 	pop	{r4, r5, r6, r7, r8, lr}
   2c884:	e12fff1e 	bx	lr
   2c888:	e3a00000 	mov	r0, #0
   2c88c:	e12fff1e 	bx	lr

0002c890 <strncmp>:
   2c890:	e3520000 	cmp	r2, #0
   2c894:	0a000036 	beq	2c974 <strncmp+0xe4>
   2c898:	e1803001 	orr	r3, r0, r1
   2c89c:	e2133003 	ands	r3, r3, #3
   2c8a0:	e92d40f0 	push	{r4, r5, r6, r7, lr}
   2c8a4:	1a00001f 	bne	2c928 <strncmp+0x98>
   2c8a8:	e3520003 	cmp	r2, #3
   2c8ac:	9a00001d 	bls	2c928 <strncmp+0x98>
   2c8b0:	e590c000 	ldr	ip, [r0]
   2c8b4:	e591e000 	ldr	lr, [r1]
   2c8b8:	e15c000e 	cmp	ip, lr
   2c8bc:	1a000019 	bne	2c928 <strncmp+0x98>
   2c8c0:	e2522004 	subs	r2, r2, #4
   2c8c4:	0a000027 	beq	2c968 <strncmp+0xd8>
   2c8c8:	e59f60b8 	ldr	r6, [pc, #184]	; 2c988 <strncmp+0xf8>
   2c8cc:	e59f70b8 	ldr	r7, [pc, #184]	; 2c98c <strncmp+0xfc>
   2c8d0:	e08ce006 	add	lr, ip, r6
   2c8d4:	e1cec00c 	bic	ip, lr, ip
   2c8d8:	e11c0007 	tst	ip, r7
   2c8dc:	1a000021 	bne	2c968 <strncmp+0xd8>
   2c8e0:	e2804004 	add	r4, r0, #4
   2c8e4:	e281e004 	add	lr, r1, #4
   2c8e8:	ea00000a 	b	2c918 <strncmp+0x88>
   2c8ec:	e4943004 	ldr	r3, [r4], #4
   2c8f0:	e59e5000 	ldr	r5, [lr]
   2c8f4:	e083c006 	add	ip, r3, r6
   2c8f8:	e1530005 	cmp	r3, r5
   2c8fc:	e1ccc003 	bic	ip, ip, r3
   2c900:	e28ee004 	add	lr, lr, #4
   2c904:	1a000007 	bne	2c928 <strncmp+0x98>
   2c908:	e2522004 	subs	r2, r2, #4
   2c90c:	0a000015 	beq	2c968 <strncmp+0xd8>
   2c910:	e11c0007 	tst	ip, r7
   2c914:	1a000013 	bne	2c968 <strncmp+0xd8>
   2c918:	e3520003 	cmp	r2, #3
   2c91c:	e1a00004 	mov	r0, r4
   2c920:	e1a0100e 	mov	r1, lr
   2c924:	8afffff0 	bhi	2c8ec <strncmp+0x5c>
   2c928:	e5d03000 	ldrb	r3, [r0]
   2c92c:	e5d1c000 	ldrb	ip, [r1]
   2c930:	e15c0003 	cmp	ip, r3
   2c934:	e2422001 	sub	r2, r2, #1
   2c938:	1a00000f 	bne	2c97c <strncmp+0xec>
   2c93c:	e3520000 	cmp	r2, #0
   2c940:	135c0000 	cmpne	ip, #0
   2c944:	0a000007 	beq	2c968 <strncmp+0xd8>
   2c948:	e5f03001 	ldrb	r3, [r0, #1]!
   2c94c:	e5f1c001 	ldrb	ip, [r1, #1]!
   2c950:	e153000c 	cmp	r3, ip
   2c954:	e2422001 	sub	r2, r2, #1
   2c958:	1a000007 	bne	2c97c <strncmp+0xec>
   2c95c:	e3520000 	cmp	r2, #0
   2c960:	13530000 	cmpne	r3, #0
   2c964:	1afffff7 	bne	2c948 <strncmp+0xb8>
   2c968:	e3a00000 	mov	r0, #0
   2c96c:	e8bd40f0 	pop	{r4, r5, r6, r7, lr}
   2c970:	e12fff1e 	bx	lr
   2c974:	e1a00002 	mov	r0, r2
   2c978:	e12fff1e 	bx	lr
   2c97c:	e043000c 	sub	r0, r3, ip
   2c980:	e8bd40f0 	pop	{r4, r5, r6, r7, lr}
   2c984:	e12fff1e 	bx	lr
   2c988:	fefefeff 	.word	0xfefefeff
   2c98c:	80808080 	.word	0x80808080

0002c990 <critical_factorization>:
   2c990:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   2c994:	e3a06001 	mov	r6, #1
   2c998:	e3a04000 	mov	r4, #0
   2c99c:	e1a0c006 	mov	ip, r6
   2c9a0:	e3e0e000 	mvn	lr, #0
   2c9a4:	e084300c 	add	r3, r4, ip
   2c9a8:	e1530001 	cmp	r3, r1
   2c9ac:	e080500e 	add	r5, r0, lr
   2c9b0:	2a00000a 	bcs	2c9e0 <critical_factorization+0x50>
   2c9b4:	e7d5500c 	ldrb	r5, [r5, ip]
   2c9b8:	e7d07003 	ldrb	r7, [r0, r3]
   2c9bc:	e1570005 	cmp	r7, r5
   2c9c0:	2a000021 	bcs	2ca4c <critical_factorization+0xbc>
   2c9c4:	e1a04003 	mov	r4, r3
   2c9c8:	e3a0c001 	mov	ip, #1
   2c9cc:	e043600e 	sub	r6, r3, lr
   2c9d0:	e084300c 	add	r3, r4, ip
   2c9d4:	e1530001 	cmp	r3, r1
   2c9d8:	e080500e 	add	r5, r0, lr
   2c9dc:	3afffff4 	bcc	2c9b4 <critical_factorization+0x24>
   2c9e0:	e3a08001 	mov	r8, #1
   2c9e4:	e3a04000 	mov	r4, #0
   2c9e8:	e1a0c008 	mov	ip, r8
   2c9ec:	e3e05000 	mvn	r5, #0
   2c9f0:	e5826000 	str	r6, [r2]
   2c9f4:	e084300c 	add	r3, r4, ip
   2c9f8:	e1530001 	cmp	r3, r1
   2c9fc:	e0806005 	add	r6, r0, r5
   2ca00:	2a00000a 	bcs	2ca30 <critical_factorization+0xa0>
   2ca04:	e7d6600c 	ldrb	r6, [r6, ip]
   2ca08:	e7d07003 	ldrb	r7, [r0, r3]
   2ca0c:	e1570006 	cmp	r7, r6
   2ca10:	9a000013 	bls	2ca64 <critical_factorization+0xd4>
   2ca14:	e1a04003 	mov	r4, r3
   2ca18:	e3a0c001 	mov	ip, #1
   2ca1c:	e0438005 	sub	r8, r3, r5
   2ca20:	e084300c 	add	r3, r4, ip
   2ca24:	e1530001 	cmp	r3, r1
   2ca28:	e0806005 	add	r6, r0, r5
   2ca2c:	3afffff4 	bcc	2ca04 <critical_factorization+0x74>
   2ca30:	e28e0001 	add	r0, lr, #1
   2ca34:	e2855001 	add	r5, r5, #1
   2ca38:	e1550000 	cmp	r5, r0
   2ca3c:	21a00005 	movcs	r0, r5
   2ca40:	25828000 	strcs	r8, [r2]
   2ca44:	e8bd41f0 	pop	{r4, r5, r6, r7, r8, lr}
   2ca48:	e12fff1e 	bx	lr
   2ca4c:	0a00000a 	beq	2ca7c <critical_factorization+0xec>
   2ca50:	e3a06001 	mov	r6, #1
   2ca54:	e1a0e004 	mov	lr, r4
   2ca58:	e1a0c006 	mov	ip, r6
   2ca5c:	e0844006 	add	r4, r4, r6
   2ca60:	eaffffcf 	b	2c9a4 <critical_factorization+0x14>
   2ca64:	0a000009 	beq	2ca90 <critical_factorization+0x100>
   2ca68:	e3a08001 	mov	r8, #1
   2ca6c:	e1a05004 	mov	r5, r4
   2ca70:	e1a0c008 	mov	ip, r8
   2ca74:	e0844008 	add	r4, r4, r8
   2ca78:	eaffffdd 	b	2c9f4 <critical_factorization+0x64>
   2ca7c:	e15c0006 	cmp	ip, r6
   2ca80:	128cc001 	addne	ip, ip, #1
   2ca84:	01a04003 	moveq	r4, r3
   2ca88:	03a0c001 	moveq	ip, #1
   2ca8c:	eaffffc4 	b	2c9a4 <critical_factorization+0x14>
   2ca90:	e15c0008 	cmp	ip, r8
   2ca94:	128cc001 	addne	ip, ip, #1
   2ca98:	01a04003 	moveq	r4, r3
   2ca9c:	03a0c001 	moveq	ip, #1
   2caa0:	eaffffd3 	b	2c9f4 <critical_factorization+0x64>

0002caa4 <two_way_long_needle>:
   2caa4:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2caa8:	e24dde41 	sub	sp, sp, #1040	; 0x410
   2caac:	e24dd00c 	sub	sp, sp, #12
   2cab0:	e1a09002 	mov	r9, r2
   2cab4:	e1a05000 	mov	r5, r0
   2cab8:	e1a0b001 	mov	fp, r1
   2cabc:	e1a00002 	mov	r0, r2
   2cac0:	e1a01003 	mov	r1, r3
   2cac4:	e28d2014 	add	r2, sp, #20
   2cac8:	e1a04003 	mov	r4, r3
   2cacc:	ebffffaf 	bl	2c990 <critical_factorization>
   2cad0:	e1a06000 	mov	r6, r0
   2cad4:	e28d2e41 	add	r2, sp, #1040	; 0x410
   2cad8:	e28d3014 	add	r3, sp, #20
   2cadc:	e2822004 	add	r2, r2, #4
   2cae0:	e5a34004 	str	r4, [r3, #4]!
   2cae4:	e1530002 	cmp	r3, r2
   2cae8:	1afffffc 	bne	2cae0 <two_way_long_needle+0x3c>
   2caec:	e59d3014 	ldr	r3, [sp, #20]
   2caf0:	e3540000 	cmp	r4, #0
   2caf4:	e0891003 	add	r1, r9, r3
   2caf8:	0a0000bc 	beq	2cdf0 <two_way_long_needle+0x34c>
   2cafc:	e244a001 	sub	sl, r4, #1
   2cb00:	e1a0300a 	mov	r3, sl
   2cb04:	e2490001 	sub	r0, r9, #1
   2cb08:	e5f02001 	ldrb	r2, [r0, #1]!
   2cb0c:	e28dce41 	add	ip, sp, #1040	; 0x410
   2cb10:	e28cc008 	add	ip, ip, #8
   2cb14:	e08c2102 	add	r2, ip, r2, lsl #2
   2cb18:	e5023400 	str	r3, [r2, #-1024]	; 0xfffffc00
   2cb1c:	e2533001 	subs	r3, r3, #1
   2cb20:	2afffff8 	bcs	2cb08 <two_way_long_needle+0x64>
   2cb24:	e1a02006 	mov	r2, r6
   2cb28:	e1a00009 	mov	r0, r9
   2cb2c:	eb0003b4 	bl	2da04 <memcmp>
   2cb30:	e3500000 	cmp	r0, #0
   2cb34:	1a000057 	bne	2cc98 <two_way_long_needle+0x1f4>
   2cb38:	e1a02000 	mov	r2, r0
   2cb3c:	e2463001 	sub	r3, r6, #1
   2cb40:	e58d3008 	str	r3, [sp, #8]
   2cb44:	e0893003 	add	r3, r9, r3
   2cb48:	e1a08000 	mov	r8, r0
   2cb4c:	e58d9004 	str	r9, [sp, #4]
   2cb50:	e58d300c 	str	r3, [sp, #12]
   2cb54:	e1a0000b 	mov	r0, fp
   2cb58:	e1a09002 	mov	r9, r2
   2cb5c:	ea000007 	b	2cb80 <two_way_long_needle+0xdc>
   2cb60:	e3590000 	cmp	r9, #0
   2cb64:	0a000002 	beq	2cb74 <two_way_long_needle+0xd0>
   2cb68:	e59d2014 	ldr	r2, [sp, #20]
   2cb6c:	e1520003 	cmp	r2, r3
   2cb70:	80443002 	subhi	r3, r4, r2
   2cb74:	e3a09000 	mov	r9, #0
   2cb78:	e0888003 	add	r8, r8, r3
   2cb7c:	e1a00007 	mov	r0, r7
   2cb80:	e0887004 	add	r7, r8, r4
   2cb84:	e0472000 	sub	r2, r7, r0
   2cb88:	e3a01000 	mov	r1, #0
   2cb8c:	e0850000 	add	r0, r5, r0
   2cb90:	eb000357 	bl	2d8f4 <memchr>
   2cb94:	e2973000 	adds	r3, r7, #0
   2cb98:	13a03001 	movne	r3, #1
   2cb9c:	e3500000 	cmp	r0, #0
   2cba0:	01a00003 	moveq	r0, r3
   2cba4:	13a00000 	movne	r0, #0
   2cba8:	e3500000 	cmp	r0, #0
   2cbac:	0a000087 	beq	2cdd0 <two_way_long_needle+0x32c>
   2cbb0:	e0853007 	add	r3, r5, r7
   2cbb4:	e5533001 	ldrb	r3, [r3, #-1]
   2cbb8:	e28d2e41 	add	r2, sp, #1040	; 0x410
   2cbbc:	e2822008 	add	r2, r2, #8
   2cbc0:	e0823103 	add	r3, r2, r3, lsl #2
   2cbc4:	e5133400 	ldr	r3, [r3, #-1024]	; 0xfffffc00
   2cbc8:	e3530000 	cmp	r3, #0
   2cbcc:	1affffe3 	bne	2cb60 <two_way_long_needle+0xbc>
   2cbd0:	e1590006 	cmp	r9, r6
   2cbd4:	21a03009 	movcs	r3, r9
   2cbd8:	31a03006 	movcc	r3, r6
   2cbdc:	e153000a 	cmp	r3, sl
   2cbe0:	2a00000f 	bcs	2cc24 <two_way_long_needle+0x180>
   2cbe4:	e59dc004 	ldr	ip, [sp, #4]
   2cbe8:	e0882003 	add	r2, r8, r3
   2cbec:	e7d51002 	ldrb	r1, [r5, r2]
   2cbf0:	e7dc0003 	ldrb	r0, [ip, r3]
   2cbf4:	e1500001 	cmp	r0, r1
   2cbf8:	e0852002 	add	r2, r5, r2
   2cbfc:	e08c1003 	add	r1, ip, r3
   2cc00:	0a000004 	beq	2cc18 <two_way_long_needle+0x174>
   2cc04:	ea000076 	b	2cde4 <two_way_long_needle+0x340>
   2cc08:	e5f1c001 	ldrb	ip, [r1, #1]!
   2cc0c:	e5f20001 	ldrb	r0, [r2, #1]!
   2cc10:	e15c0000 	cmp	ip, r0
   2cc14:	1a000072 	bne	2cde4 <two_way_long_needle+0x340>
   2cc18:	e2833001 	add	r3, r3, #1
   2cc1c:	e153000a 	cmp	r3, sl
   2cc20:	1afffff8 	bne	2cc08 <two_way_long_needle+0x164>
   2cc24:	e59d3008 	ldr	r3, [sp, #8]
   2cc28:	e1590006 	cmp	r9, r6
   2cc2c:	e1a01003 	mov	r1, r3
   2cc30:	2a000079 	bcs	2ce1c <two_way_long_needle+0x378>
   2cc34:	e59dc00c 	ldr	ip, [sp, #12]
   2cc38:	e0883003 	add	r3, r8, r3
   2cc3c:	e5dc2000 	ldrb	r2, [ip]
   2cc40:	e7d50003 	ldrb	r0, [r5, r3]
   2cc44:	e1500002 	cmp	r0, r2
   2cc48:	e0852003 	add	r2, r5, r3
   2cc4c:	1a000072 	bne	2ce1c <two_way_long_needle+0x378>
   2cc50:	e1a0000c 	mov	r0, ip
   2cc54:	e249b001 	sub	fp, r9, #1
   2cc58:	ea000004 	b	2cc70 <two_way_long_needle+0x1cc>
   2cc5c:	e570e001 	ldrb	lr, [r0, #-1]!
   2cc60:	e572c001 	ldrb	ip, [r2, #-1]!
   2cc64:	e15e000c 	cmp	lr, ip
   2cc68:	1a000003 	bne	2cc7c <two_way_long_needle+0x1d8>
   2cc6c:	e1a01003 	mov	r1, r3
   2cc70:	e2413001 	sub	r3, r1, #1
   2cc74:	e15b0003 	cmp	fp, r3
   2cc78:	1afffff7 	bne	2cc5c <two_way_long_needle+0x1b8>
   2cc7c:	e2899001 	add	r9, r9, #1
   2cc80:	e1590001 	cmp	r9, r1
   2cc84:	8a000066 	bhi	2ce24 <two_way_long_needle+0x380>
   2cc88:	e59d9014 	ldr	r9, [sp, #20]
   2cc8c:	e0888009 	add	r8, r8, r9
   2cc90:	e0449009 	sub	r9, r4, r9
   2cc94:	eaffffb8 	b	2cb7c <two_way_long_needle+0xd8>
   2cc98:	e0443006 	sub	r3, r4, r6
   2cc9c:	e1530006 	cmp	r3, r6
   2cca0:	31a03006 	movcc	r3, r6
   2cca4:	e2468001 	sub	r8, r6, #1
   2cca8:	e2833001 	add	r3, r3, #1
   2ccac:	e58d3014 	str	r3, [sp, #20]
   2ccb0:	e0893008 	add	r3, r9, r8
   2ccb4:	e1a0000b 	mov	r0, fp
   2ccb8:	e3a0a000 	mov	sl, #0
   2ccbc:	e1a0b006 	mov	fp, r6
   2ccc0:	e1a06003 	mov	r6, r3
   2ccc4:	e08a7004 	add	r7, sl, r4
   2ccc8:	e0472000 	sub	r2, r7, r0
   2cccc:	e3a01000 	mov	r1, #0
   2ccd0:	e0850000 	add	r0, r5, r0
   2ccd4:	eb000306 	bl	2d8f4 <memchr>
   2ccd8:	e2700001 	rsbs	r0, r0, #1
   2ccdc:	33a00000 	movcc	r0, #0
   2cce0:	e3570000 	cmp	r7, #0
   2cce4:	03a00000 	moveq	r0, #0
   2cce8:	e3500000 	cmp	r0, #0
   2ccec:	0a000037 	beq	2cdd0 <two_way_long_needle+0x32c>
   2ccf0:	e0853007 	add	r3, r5, r7
   2ccf4:	e5533001 	ldrb	r3, [r3, #-1]
   2ccf8:	e28d2e41 	add	r2, sp, #1040	; 0x410
   2ccfc:	e2822008 	add	r2, r2, #8
   2cd00:	e0823103 	add	r3, r2, r3, lsl #2
   2cd04:	e5133400 	ldr	r3, [r3, #-1024]	; 0xfffffc00
   2cd08:	e3530000 	cmp	r3, #0
   2cd0c:	1a000028 	bne	2cdb4 <two_way_long_needle+0x310>
   2cd10:	e2440001 	sub	r0, r4, #1
   2cd14:	e15b0000 	cmp	fp, r0
   2cd18:	2a00000f 	bcs	2cd5c <two_way_long_needle+0x2b8>
   2cd1c:	e08a200b 	add	r2, sl, fp
   2cd20:	e7d53002 	ldrb	r3, [r5, r2]
   2cd24:	e7d9100b 	ldrb	r1, [r9, fp]
   2cd28:	e1510003 	cmp	r1, r3
   2cd2c:	e0852002 	add	r2, r5, r2
   2cd30:	e089100b 	add	r1, r9, fp
   2cd34:	e1a0300b 	mov	r3, fp
   2cd38:	0a000004 	beq	2cd50 <two_way_long_needle+0x2ac>
   2cd3c:	ea00001f 	b	2cdc0 <two_way_long_needle+0x31c>
   2cd40:	e5f1e001 	ldrb	lr, [r1, #1]!
   2cd44:	e5f2c001 	ldrb	ip, [r2, #1]!
   2cd48:	e15e000c 	cmp	lr, ip
   2cd4c:	1a00001b 	bne	2cdc0 <two_way_long_needle+0x31c>
   2cd50:	e2833001 	add	r3, r3, #1
   2cd54:	e1530000 	cmp	r3, r0
   2cd58:	3afffff8 	bcc	2cd40 <two_way_long_needle+0x29c>
   2cd5c:	e3780001 	cmn	r8, #1
   2cd60:	0a00000d 	beq	2cd9c <two_way_long_needle+0x2f8>
   2cd64:	e08a3008 	add	r3, sl, r8
   2cd68:	e7d52003 	ldrb	r2, [r5, r3]
   2cd6c:	e5d61000 	ldrb	r1, [r6]
   2cd70:	e1510002 	cmp	r1, r2
   2cd74:	e0852003 	add	r2, r5, r3
   2cd78:	1a00000c 	bne	2cdb0 <two_way_long_needle+0x30c>
   2cd7c:	e1a03006 	mov	r3, r6
   2cd80:	ea000003 	b	2cd94 <two_way_long_needle+0x2f0>
   2cd84:	e5730001 	ldrb	r0, [r3, #-1]!
   2cd88:	e5721001 	ldrb	r1, [r2, #-1]!
   2cd8c:	e1500001 	cmp	r0, r1
   2cd90:	1a000006 	bne	2cdb0 <two_way_long_needle+0x30c>
   2cd94:	e1590003 	cmp	r9, r3
   2cd98:	1afffff9 	bne	2cd84 <two_way_long_needle+0x2e0>
   2cd9c:	e085000a 	add	r0, r5, sl
   2cda0:	e28dde41 	add	sp, sp, #1040	; 0x410
   2cda4:	e28dd00c 	add	sp, sp, #12
   2cda8:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2cdac:	e12fff1e 	bx	lr
   2cdb0:	e59d3014 	ldr	r3, [sp, #20]
   2cdb4:	e08aa003 	add	sl, sl, r3
   2cdb8:	e1a00007 	mov	r0, r7
   2cdbc:	eaffffc0 	b	2ccc4 <two_way_long_needle+0x220>
   2cdc0:	e26b2001 	rsb	r2, fp, #1
   2cdc4:	e082a00a 	add	sl, r2, sl
   2cdc8:	e08aa003 	add	sl, sl, r3
   2cdcc:	eafffff9 	b	2cdb8 <two_way_long_needle+0x314>
   2cdd0:	e3a00000 	mov	r0, #0
   2cdd4:	e28dde41 	add	sp, sp, #1040	; 0x410
   2cdd8:	e28dd00c 	add	sp, sp, #12
   2cddc:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2cde0:	e12fff1e 	bx	lr
   2cde4:	e2662001 	rsb	r2, r6, #1
   2cde8:	e0828008 	add	r8, r2, r8
   2cdec:	eaffff60 	b	2cb74 <two_way_long_needle+0xd0>
   2cdf0:	e1a02006 	mov	r2, r6
   2cdf4:	e1a00009 	mov	r0, r9
   2cdf8:	eb000301 	bl	2da04 <memcmp>
   2cdfc:	e3500000 	cmp	r0, #0
   2ce00:	1affffa4 	bne	2cc98 <two_way_long_needle+0x1f4>
   2ce04:	e085000b 	add	r0, r5, fp
   2ce08:	e26b2000 	rsb	r2, fp, #0
   2ce0c:	e1a01004 	mov	r1, r4
   2ce10:	eb0002b7 	bl	2d8f4 <memchr>
   2ce14:	e1a00004 	mov	r0, r4
   2ce18:	eaffffed 	b	2cdd4 <two_way_long_needle+0x330>
   2ce1c:	e1a01006 	mov	r1, r6
   2ce20:	eaffff95 	b	2cc7c <two_way_long_needle+0x1d8>
   2ce24:	e0850008 	add	r0, r5, r8
   2ce28:	eaffffe9 	b	2cdd4 <two_way_long_needle+0x330>

0002ce2c <strstr>:
   2ce2c:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2ce30:	e5d02000 	ldrb	r2, [r0]
   2ce34:	e3520000 	cmp	r2, #0
   2ce38:	e1a06001 	mov	r6, r1
   2ce3c:	e24dd014 	sub	sp, sp, #20
   2ce40:	e1a05000 	mov	r5, r0
   2ce44:	e5d11000 	ldrb	r1, [r1]
   2ce48:	0a000082 	beq	2d058 <strstr+0x22c>
   2ce4c:	e3510000 	cmp	r1, #0
   2ce50:	0a000013 	beq	2cea4 <strstr+0x78>
   2ce54:	e1a0e000 	mov	lr, r0
   2ce58:	e2864001 	add	r4, r6, #1
   2ce5c:	e1a00001 	mov	r0, r1
   2ce60:	e3a0c001 	mov	ip, #1
   2ce64:	ea000002 	b	2ce74 <strstr+0x48>
   2ce68:	e3500000 	cmp	r0, #0
   2ce6c:	0a00000a 	beq	2ce9c <strstr+0x70>
   2ce70:	e1a04003 	mov	r4, r3
   2ce74:	e1a03004 	mov	r3, r4
   2ce78:	e1500002 	cmp	r0, r2
   2ce7c:	13a0c000 	movne	ip, #0
   2ce80:	020cc001 	andeq	ip, ip, #1
   2ce84:	e5fe2001 	ldrb	r2, [lr, #1]!
   2ce88:	e3520000 	cmp	r2, #0
   2ce8c:	e4d30001 	ldrb	r0, [r3], #1
   2ce90:	1afffff4 	bne	2ce68 <strstr+0x3c>
   2ce94:	e3500000 	cmp	r0, #0
   2ce98:	1a000019 	bne	2cf04 <strstr+0xd8>
   2ce9c:	e35c0000 	cmp	ip, #0
   2cea0:	0a000003 	beq	2ceb4 <strstr+0x88>
   2cea4:	e1a00005 	mov	r0, r5
   2cea8:	e28dd014 	add	sp, sp, #20
   2ceac:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2ceb0:	e12fff1e 	bx	lr
   2ceb4:	e2850001 	add	r0, r5, #1
   2ceb8:	ebfffd08 	bl	2c2e0 <strchr>
   2cebc:	e0444006 	sub	r4, r4, r6
   2cec0:	e3540001 	cmp	r4, #1
   2cec4:	13500000 	cmpne	r0, #0
   2cec8:	e1a07000 	mov	r7, r0
   2cecc:	01a05000 	moveq	r5, r0
   2ced0:	0afffff3 	beq	2cea4 <strstr+0x78>
   2ced4:	e0855004 	add	r5, r5, r4
   2ced8:	e1550000 	cmp	r5, r0
   2cedc:	20459000 	subcs	r9, r5, r0
   2cee0:	33a09001 	movcc	r9, #1
   2cee4:	e354001f 	cmp	r4, #31
   2cee8:	9a00000a 	bls	2cf18 <strstr+0xec>
   2ceec:	e1a03004 	mov	r3, r4
   2cef0:	e1a02006 	mov	r2, r6
   2cef4:	e1a01009 	mov	r1, r9
   2cef8:	ebfffee9 	bl	2caa4 <two_way_long_needle>
   2cefc:	e1a05000 	mov	r5, r0
   2cf00:	eaffffe7 	b	2cea4 <strstr+0x78>
   2cf04:	e3a05000 	mov	r5, #0
   2cf08:	e1a00005 	mov	r0, r5
   2cf0c:	e28dd014 	add	sp, sp, #20
   2cf10:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2cf14:	e12fff1e 	bx	lr
   2cf18:	e28d200c 	add	r2, sp, #12
   2cf1c:	e1a01004 	mov	r1, r4
   2cf20:	e1a00006 	mov	r0, r6
   2cf24:	ebfffe99 	bl	2c990 <critical_factorization>
   2cf28:	e59d100c 	ldr	r1, [sp, #12]
   2cf2c:	e1a02000 	mov	r2, r0
   2cf30:	e1a08000 	mov	r8, r0
   2cf34:	e0861001 	add	r1, r6, r1
   2cf38:	e1a00006 	mov	r0, r6
   2cf3c:	eb0002b0 	bl	2da04 <memcmp>
   2cf40:	e250a000 	subs	sl, r0, #0
   2cf44:	1a000046 	bne	2d064 <strstr+0x238>
   2cf48:	e1a0500a 	mov	r5, sl
   2cf4c:	e1a00009 	mov	r0, r9
   2cf50:	e2483001 	sub	r3, r8, #1
   2cf54:	e58d3000 	str	r3, [sp]
   2cf58:	e0863003 	add	r3, r6, r3
   2cf5c:	e58d3004 	str	r3, [sp, #4]
   2cf60:	e084b005 	add	fp, r4, r5
   2cf64:	e04b2000 	sub	r2, fp, r0
   2cf68:	e3a01000 	mov	r1, #0
   2cf6c:	e0870000 	add	r0, r7, r0
   2cf70:	eb00025f 	bl	2d8f4 <memchr>
   2cf74:	e29b3000 	adds	r3, fp, #0
   2cf78:	13a03001 	movne	r3, #1
   2cf7c:	e3500000 	cmp	r0, #0
   2cf80:	01a00003 	moveq	r0, r3
   2cf84:	13a00000 	movne	r0, #0
   2cf88:	e3500000 	cmp	r0, #0
   2cf8c:	0affffdc 	beq	2cf04 <strstr+0xd8>
   2cf90:	e158000a 	cmp	r8, sl
   2cf94:	21a03008 	movcs	r3, r8
   2cf98:	31a0300a 	movcc	r3, sl
   2cf9c:	e1540003 	cmp	r4, r3
   2cfa0:	9a00000e 	bls	2cfe0 <strstr+0x1b4>
   2cfa4:	e0832005 	add	r2, r3, r5
   2cfa8:	e7d70002 	ldrb	r0, [r7, r2]
   2cfac:	e7d61003 	ldrb	r1, [r6, r3]
   2cfb0:	e1500001 	cmp	r0, r1
   2cfb4:	e0872002 	add	r2, r7, r2
   2cfb8:	e0861003 	add	r1, r6, r3
   2cfbc:	0a000004 	beq	2cfd4 <strstr+0x1a8>
   2cfc0:	ea000060 	b	2d148 <strstr+0x31c>
   2cfc4:	e5f1c001 	ldrb	ip, [r1, #1]!
   2cfc8:	e5f20001 	ldrb	r0, [r2, #1]!
   2cfcc:	e15c0000 	cmp	ip, r0
   2cfd0:	1a00005c 	bne	2d148 <strstr+0x31c>
   2cfd4:	e2833001 	add	r3, r3, #1
   2cfd8:	e1540003 	cmp	r4, r3
   2cfdc:	1afffff8 	bne	2cfc4 <strstr+0x198>
   2cfe0:	e59d3000 	ldr	r3, [sp]
   2cfe4:	e158000a 	cmp	r8, sl
   2cfe8:	e1a01003 	mov	r1, r3
   2cfec:	9a000062 	bls	2d17c <strstr+0x350>
   2cff0:	e59dc004 	ldr	ip, [sp, #4]
   2cff4:	e0853003 	add	r3, r5, r3
   2cff8:	e7d72003 	ldrb	r2, [r7, r3]
   2cffc:	e5dc0000 	ldrb	r0, [ip]
   2d000:	e1500002 	cmp	r0, r2
   2d004:	e0872003 	add	r2, r7, r3
   2d008:	1a00005b 	bne	2d17c <strstr+0x350>
   2d00c:	e1a0000c 	mov	r0, ip
   2d010:	e24a9001 	sub	r9, sl, #1
   2d014:	ea000004 	b	2d02c <strstr+0x200>
   2d018:	e570e001 	ldrb	lr, [r0, #-1]!
   2d01c:	e572c001 	ldrb	ip, [r2, #-1]!
   2d020:	e15e000c 	cmp	lr, ip
   2d024:	1a000003 	bne	2d038 <strstr+0x20c>
   2d028:	e1a01003 	mov	r1, r3
   2d02c:	e2413001 	sub	r3, r1, #1
   2d030:	e1530009 	cmp	r3, r9
   2d034:	1afffff7 	bne	2d018 <strstr+0x1ec>
   2d038:	e28aa001 	add	sl, sl, #1
   2d03c:	e15a0001 	cmp	sl, r1
   2d040:	8a00003e 	bhi	2d140 <strstr+0x314>
   2d044:	e59da00c 	ldr	sl, [sp, #12]
   2d048:	e085500a 	add	r5, r5, sl
   2d04c:	e044a00a 	sub	sl, r4, sl
   2d050:	e1a0000b 	mov	r0, fp
   2d054:	eaffffc1 	b	2cf60 <strstr+0x134>
   2d058:	e3510000 	cmp	r1, #0
   2d05c:	13a05000 	movne	r5, #0
   2d060:	eaffff8f 	b	2cea4 <strstr+0x78>
   2d064:	e0443008 	sub	r3, r4, r8
   2d068:	e1530008 	cmp	r3, r8
   2d06c:	31a03008 	movcc	r3, r8
   2d070:	e248a001 	sub	sl, r8, #1
   2d074:	e2833001 	add	r3, r3, #1
   2d078:	e58d300c 	str	r3, [sp, #12]
   2d07c:	e086300a 	add	r3, r6, sl
   2d080:	e1a00009 	mov	r0, r9
   2d084:	e3a05000 	mov	r5, #0
   2d088:	e1a09003 	mov	r9, r3
   2d08c:	e084b005 	add	fp, r4, r5
   2d090:	e04b2000 	sub	r2, fp, r0
   2d094:	e3a01000 	mov	r1, #0
   2d098:	e0870000 	add	r0, r7, r0
   2d09c:	eb000214 	bl	2d8f4 <memchr>
   2d0a0:	e2700001 	rsbs	r0, r0, #1
   2d0a4:	33a00000 	movcc	r0, #0
   2d0a8:	e35b0000 	cmp	fp, #0
   2d0ac:	03a00000 	moveq	r0, #0
   2d0b0:	e3500000 	cmp	r0, #0
   2d0b4:	0affff92 	beq	2cf04 <strstr+0xd8>
   2d0b8:	e1540008 	cmp	r4, r8
   2d0bc:	9a00000f 	bls	2d100 <strstr+0x2d4>
   2d0c0:	e0882005 	add	r2, r8, r5
   2d0c4:	e7d73002 	ldrb	r3, [r7, r2]
   2d0c8:	e7d61008 	ldrb	r1, [r6, r8]
   2d0cc:	e1510003 	cmp	r1, r3
   2d0d0:	e0872002 	add	r2, r7, r2
   2d0d4:	e0861008 	add	r1, r6, r8
   2d0d8:	e1a03008 	mov	r3, r8
   2d0dc:	0a000004 	beq	2d0f4 <strstr+0x2c8>
   2d0e0:	ea00001d 	b	2d15c <strstr+0x330>
   2d0e4:	e5f1c001 	ldrb	ip, [r1, #1]!
   2d0e8:	e5f20001 	ldrb	r0, [r2, #1]!
   2d0ec:	e15c0000 	cmp	ip, r0
   2d0f0:	1a000019 	bne	2d15c <strstr+0x330>
   2d0f4:	e2833001 	add	r3, r3, #1
   2d0f8:	e1540003 	cmp	r4, r3
   2d0fc:	1afffff8 	bne	2d0e4 <strstr+0x2b8>
   2d100:	e37a0001 	cmn	sl, #1
   2d104:	0a00000d 	beq	2d140 <strstr+0x314>
   2d108:	e085300a 	add	r3, r5, sl
   2d10c:	e5d92000 	ldrb	r2, [r9]
   2d110:	e7d71003 	ldrb	r1, [r7, r3]
   2d114:	e1510002 	cmp	r1, r2
   2d118:	e0872003 	add	r2, r7, r3
   2d11c:	1a000013 	bne	2d170 <strstr+0x344>
   2d120:	e1a03009 	mov	r3, r9
   2d124:	ea000003 	b	2d138 <strstr+0x30c>
   2d128:	e5730001 	ldrb	r0, [r3, #-1]!
   2d12c:	e5721001 	ldrb	r1, [r2, #-1]!
   2d130:	e1500001 	cmp	r0, r1
   2d134:	1a00000d 	bne	2d170 <strstr+0x344>
   2d138:	e1530006 	cmp	r3, r6
   2d13c:	1afffff9 	bne	2d128 <strstr+0x2fc>
   2d140:	e0875005 	add	r5, r7, r5
   2d144:	eaffff56 	b	2cea4 <strstr+0x78>
   2d148:	e2682001 	rsb	r2, r8, #1
   2d14c:	e0825005 	add	r5, r2, r5
   2d150:	e0835005 	add	r5, r3, r5
   2d154:	e3a0a000 	mov	sl, #0
   2d158:	eaffffbc 	b	2d050 <strstr+0x224>
   2d15c:	e2682001 	rsb	r2, r8, #1
   2d160:	e0825005 	add	r5, r2, r5
   2d164:	e0835005 	add	r5, r3, r5
   2d168:	e1a0000b 	mov	r0, fp
   2d16c:	eaffffc6 	b	2d08c <strstr+0x260>
   2d170:	e59d300c 	ldr	r3, [sp, #12]
   2d174:	e0855003 	add	r5, r5, r3
   2d178:	eafffffa 	b	2d168 <strstr+0x33c>
   2d17c:	e1a01008 	mov	r1, r8
   2d180:	eaffffac 	b	2d038 <strstr+0x20c>

0002d184 <strtok>:
   2d184:	e92d4010 	push	{r4, lr}
   2d188:	e59f3014 	ldr	r3, [pc, #20]	; 2d1a4 <strtok+0x20>
   2d18c:	e5932000 	ldr	r2, [r3]
   2d190:	e3a03001 	mov	r3, #1
   2d194:	e282205c 	add	r2, r2, #92	; 0x5c
   2d198:	eb000002 	bl	2d1a8 <__strtok_r>
   2d19c:	e8bd4010 	pop	{r4, lr}
   2d1a0:	e12fff1e 	bx	lr
   2d1a4:	00042398 	.word	0x00042398

0002d1a8 <__strtok_r>:
   2d1a8:	e92d4070 	push	{r4, r5, r6, lr}
   2d1ac:	e2506000 	subs	r6, r0, #0
   2d1b0:	0a000023 	beq	2d244 <__strtok_r+0x9c>
   2d1b4:	e1a05006 	mov	r5, r6
   2d1b8:	e1a0e001 	mov	lr, r1
   2d1bc:	e4d54001 	ldrb	r4, [r5], #1
   2d1c0:	ea000001 	b	2d1cc <__strtok_r+0x24>
   2d1c4:	e154000c 	cmp	r4, ip
   2d1c8:	0a000017 	beq	2d22c <__strtok_r+0x84>
   2d1cc:	e4dec001 	ldrb	ip, [lr], #1
   2d1d0:	e35c0000 	cmp	ip, #0
   2d1d4:	1afffffa 	bne	2d1c4 <__strtok_r+0x1c>
   2d1d8:	e3540000 	cmp	r4, #0
   2d1dc:	05824000 	streq	r4, [r2]
   2d1e0:	01a00004 	moveq	r0, r4
   2d1e4:	0a00000e 	beq	2d224 <__strtok_r+0x7c>
   2d1e8:	e1a04005 	mov	r4, r5
   2d1ec:	e1a0c001 	mov	ip, r1
   2d1f0:	e4d4e001 	ldrb	lr, [r4], #1
   2d1f4:	ea000001 	b	2d200 <__strtok_r+0x58>
   2d1f8:	e3530000 	cmp	r3, #0
   2d1fc:	0a00000e 	beq	2d23c <__strtok_r+0x94>
   2d200:	e4dc3001 	ldrb	r3, [ip], #1
   2d204:	e15e0003 	cmp	lr, r3
   2d208:	1afffffa 	bne	2d1f8 <__strtok_r+0x50>
   2d20c:	e35e0000 	cmp	lr, #0
   2d210:	13a03000 	movne	r3, #0
   2d214:	01a0400e 	moveq	r4, lr
   2d218:	e1a00006 	mov	r0, r6
   2d21c:	15c53000 	strbne	r3, [r5]
   2d220:	e5824000 	str	r4, [r2]
   2d224:	e8bd4070 	pop	{r4, r5, r6, lr}
   2d228:	e12fff1e 	bx	lr
   2d22c:	e3530000 	cmp	r3, #0
   2d230:	0a000008 	beq	2d258 <__strtok_r+0xb0>
   2d234:	e1a06005 	mov	r6, r5
   2d238:	eaffffdd 	b	2d1b4 <__strtok_r+0xc>
   2d23c:	e1a05004 	mov	r5, r4
   2d240:	eaffffe8 	b	2d1e8 <__strtok_r+0x40>
   2d244:	e5926000 	ldr	r6, [r2]
   2d248:	e3560000 	cmp	r6, #0
   2d24c:	1affffd8 	bne	2d1b4 <__strtok_r+0xc>
   2d250:	e1a00006 	mov	r0, r6
   2d254:	eafffff2 	b	2d224 <__strtok_r+0x7c>
   2d258:	e5825000 	str	r5, [r2]
   2d25c:	e1a00006 	mov	r0, r6
   2d260:	e5c63000 	strb	r3, [r6]
   2d264:	eaffffee 	b	2d224 <__strtok_r+0x7c>

0002d268 <strtok_r>:
   2d268:	e3a03001 	mov	r3, #1
   2d26c:	eaffffcd 	b	2d1a8 <__strtok_r>

0002d270 <_strtol_l.isra.0>:
   2d270:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2d274:	e24dd00c 	sub	sp, sp, #12
   2d278:	e1a07001 	mov	r7, r1
   2d27c:	e58d0004 	str	r0, [sp, #4]
   2d280:	e1a08002 	mov	r8, r2
   2d284:	e1a06003 	mov	r6, r3
   2d288:	e1a0b001 	mov	fp, r1
   2d28c:	ea000000 	b	2d294 <_strtol_l.isra.0+0x24>
   2d290:	e1a0b005 	mov	fp, r5
   2d294:	e1a0500b 	mov	r5, fp
   2d298:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
   2d29c:	e4d54001 	ldrb	r4, [r5], #1
   2d2a0:	eb000163 	bl	2d834 <__locale_ctype_ptr_l>
   2d2a4:	e0800004 	add	r0, r0, r4
   2d2a8:	e5d02001 	ldrb	r2, [r0, #1]
   2d2ac:	e2122008 	ands	r2, r2, #8
   2d2b0:	1afffff6 	bne	2d290 <_strtol_l.isra.0+0x20>
   2d2b4:	e354002d 	cmp	r4, #45	; 0x2d
   2d2b8:	0a000047 	beq	2d3dc <_strtol_l.isra.0+0x16c>
   2d2bc:	e1a0a002 	mov	sl, r2
   2d2c0:	e354002b 	cmp	r4, #43	; 0x2b
   2d2c4:	05db4001 	ldrbeq	r4, [fp, #1]
   2d2c8:	028b5002 	addeq	r5, fp, #2
   2d2cc:	e3d63010 	bics	r3, r6, #16
   2d2d0:	1a000003 	bne	2d2e4 <_strtol_l.isra.0+0x74>
   2d2d4:	e3540030 	cmp	r4, #48	; 0x30
   2d2d8:	0a000043 	beq	2d3ec <_strtol_l.isra.0+0x17c>
   2d2dc:	e3560000 	cmp	r6, #0
   2d2e0:	03a0600a 	moveq	r6, #10
   2d2e4:	e1a0b006 	mov	fp, r6
   2d2e8:	e35a0000 	cmp	sl, #0
   2d2ec:	03e09102 	mvneq	r9, #-2147483648	; 0x80000000
   2d2f0:	13a09102 	movne	r9, #-2147483648	; 0x80000000
   2d2f4:	e1a0100b 	mov	r1, fp
   2d2f8:	e1a00009 	mov	r0, r9
   2d2fc:	eb000255 	bl	2dc58 <__aeabi_uidivmod>
   2d300:	e3a0c000 	mov	ip, #0
   2d304:	e1a0e000 	mov	lr, r0
   2d308:	e1a0000c 	mov	r0, ip
   2d30c:	ea000009 	b	2d338 <_strtol_l.isra.0+0xc8>
   2d310:	e04e2000 	sub	r2, lr, r0
   2d314:	e272c000 	rsbs	ip, r2, #0
   2d318:	e0acc002 	adc	ip, ip, r2
   2d31c:	e1510003 	cmp	r1, r3
   2d320:	a3a0c000 	movge	ip, #0
   2d324:	e35c0000 	cmp	ip, #0
   2d328:	1a000014 	bne	2d380 <_strtol_l.isra.0+0x110>
   2d32c:	e3a0c001 	mov	ip, #1
   2d330:	e020309b 	mla	r0, fp, r0, r3
   2d334:	e4d54001 	ldrb	r4, [r5], #1
   2d338:	e2443030 	sub	r3, r4, #48	; 0x30
   2d33c:	e3530009 	cmp	r3, #9
   2d340:	9a000007 	bls	2d364 <_strtol_l.isra.0+0xf4>
   2d344:	e2443041 	sub	r3, r4, #65	; 0x41
   2d348:	e3530019 	cmp	r3, #25
   2d34c:	92443037 	subls	r3, r4, #55	; 0x37
   2d350:	9a000003 	bls	2d364 <_strtol_l.isra.0+0xf4>
   2d354:	e2443061 	sub	r3, r4, #97	; 0x61
   2d358:	e3530019 	cmp	r3, #25
   2d35c:	8a000009 	bhi	2d388 <_strtol_l.isra.0+0x118>
   2d360:	e2443057 	sub	r3, r4, #87	; 0x57
   2d364:	e1560003 	cmp	r6, r3
   2d368:	da000006 	ble	2d388 <_strtol_l.isra.0+0x118>
   2d36c:	e15e0000 	cmp	lr, r0
   2d370:	23a04000 	movcs	r4, #0
   2d374:	33a04001 	movcc	r4, #1
   2d378:	e1942fac 	orrs	r2, r4, ip, lsr #31
   2d37c:	0affffe3 	beq	2d310 <_strtol_l.isra.0+0xa0>
   2d380:	e3e0c000 	mvn	ip, #0
   2d384:	eaffffea 	b	2d334 <_strtol_l.isra.0+0xc4>
   2d388:	e37c0001 	cmn	ip, #1
   2d38c:	0a000009 	beq	2d3b8 <_strtol_l.isra.0+0x148>
   2d390:	e35a0000 	cmp	sl, #0
   2d394:	12600000 	rsbne	r0, r0, #0
   2d398:	e3580000 	cmp	r8, #0
   2d39c:	0a000002 	beq	2d3ac <_strtol_l.isra.0+0x13c>
   2d3a0:	e35c0000 	cmp	ip, #0
   2d3a4:	1a000019 	bne	2d410 <_strtol_l.isra.0+0x1a0>
   2d3a8:	e5887000 	str	r7, [r8]
   2d3ac:	e28dd00c 	add	sp, sp, #12
   2d3b0:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2d3b4:	e12fff1e 	bx	lr
   2d3b8:	e3a03022 	mov	r3, #34	; 0x22
   2d3bc:	e59d2004 	ldr	r2, [sp, #4]
   2d3c0:	e3580000 	cmp	r8, #0
   2d3c4:	e5823000 	str	r3, [r2]
   2d3c8:	01a00009 	moveq	r0, r9
   2d3cc:	0afffff6 	beq	2d3ac <_strtol_l.isra.0+0x13c>
   2d3d0:	e1a00009 	mov	r0, r9
   2d3d4:	e2457001 	sub	r7, r5, #1
   2d3d8:	eafffff2 	b	2d3a8 <_strtol_l.isra.0+0x138>
   2d3dc:	e28b5002 	add	r5, fp, #2
   2d3e0:	e5db4001 	ldrb	r4, [fp, #1]
   2d3e4:	e3a0a001 	mov	sl, #1
   2d3e8:	eaffffb7 	b	2d2cc <_strtol_l.isra.0+0x5c>
   2d3ec:	e5d53000 	ldrb	r3, [r5]
   2d3f0:	e20330df 	and	r3, r3, #223	; 0xdf
   2d3f4:	e3530058 	cmp	r3, #88	; 0x58
   2d3f8:	1a000006 	bne	2d418 <_strtol_l.isra.0+0x1a8>
   2d3fc:	e3a06010 	mov	r6, #16
   2d400:	e5d54001 	ldrb	r4, [r5, #1]
   2d404:	e1a0b006 	mov	fp, r6
   2d408:	e2855002 	add	r5, r5, #2
   2d40c:	eaffffb5 	b	2d2e8 <_strtol_l.isra.0+0x78>
   2d410:	e1a09000 	mov	r9, r0
   2d414:	eaffffed 	b	2d3d0 <_strtol_l.isra.0+0x160>
   2d418:	e3560000 	cmp	r6, #0
   2d41c:	03a06008 	moveq	r6, #8
   2d420:	01a0b006 	moveq	fp, r6
   2d424:	0affffaf 	beq	2d2e8 <_strtol_l.isra.0+0x78>
   2d428:	eaffffad 	b	2d2e4 <_strtol_l.isra.0+0x74>

0002d42c <_strtol_r>:
   2d42c:	e59fc02c 	ldr	ip, [pc, #44]	; 2d460 <_strtol_r+0x34>
   2d430:	e59cc000 	ldr	ip, [ip]
   2d434:	e59cc034 	ldr	ip, [ip, #52]	; 0x34
   2d438:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
   2d43c:	e59fe020 	ldr	lr, [pc, #32]	; 2d464 <_strtol_r+0x38>
   2d440:	e35c0000 	cmp	ip, #0
   2d444:	01a0c00e 	moveq	ip, lr
   2d448:	e24dd00c 	sub	sp, sp, #12
   2d44c:	e58dc000 	str	ip, [sp]
   2d450:	ebffff86 	bl	2d270 <_strtol_l.isra.0>
   2d454:	e28dd00c 	add	sp, sp, #12
   2d458:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
   2d45c:	e12fff1e 	bx	lr
   2d460:	00042398 	.word	0x00042398
   2d464:	000427c8 	.word	0x000427c8

0002d468 <strtol_l>:
   2d468:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
   2d46c:	e59fc028 	ldr	ip, [pc, #40]	; 2d49c <strtol_l+0x34>
   2d470:	e59cc000 	ldr	ip, [ip]
   2d474:	e24dd00c 	sub	sp, sp, #12
   2d478:	e58d3000 	str	r3, [sp]
   2d47c:	e1a03002 	mov	r3, r2
   2d480:	e1a02001 	mov	r2, r1
   2d484:	e1a01000 	mov	r1, r0
   2d488:	e1a0000c 	mov	r0, ip
   2d48c:	ebffff77 	bl	2d270 <_strtol_l.isra.0>
   2d490:	e28dd00c 	add	sp, sp, #12
   2d494:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
   2d498:	e12fff1e 	bx	lr
   2d49c:	00042398 	.word	0x00042398

0002d4a0 <strtol>:
   2d4a0:	e59f303c 	ldr	r3, [pc, #60]	; 2d4e4 <strtol+0x44>
   2d4a4:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
   2d4a8:	e593e000 	ldr	lr, [r3]
   2d4ac:	e59ec034 	ldr	ip, [lr, #52]	; 0x34
   2d4b0:	e59f3030 	ldr	r3, [pc, #48]	; 2d4e8 <strtol+0x48>
   2d4b4:	e35c0000 	cmp	ip, #0
   2d4b8:	01a0c003 	moveq	ip, r3
   2d4bc:	e24dd00c 	sub	sp, sp, #12
   2d4c0:	e1a03002 	mov	r3, r2
   2d4c4:	e58dc000 	str	ip, [sp]
   2d4c8:	e1a02001 	mov	r2, r1
   2d4cc:	e1a01000 	mov	r1, r0
   2d4d0:	e1a0000e 	mov	r0, lr
   2d4d4:	ebffff65 	bl	2d270 <_strtol_l.isra.0>
   2d4d8:	e28dd00c 	add	sp, sp, #12
   2d4dc:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
   2d4e0:	e12fff1e 	bx	lr
   2d4e4:	00042398 	.word	0x00042398
   2d4e8:	000427c8 	.word	0x000427c8

0002d4ec <_strtoul_l.isra.0>:
   2d4ec:	e92d4ff8 	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2d4f0:	e1a06001 	mov	r6, r1
   2d4f4:	e1a08000 	mov	r8, r0
   2d4f8:	e1a07002 	mov	r7, r2
   2d4fc:	e1a09003 	mov	r9, r3
   2d500:	e1a0b001 	mov	fp, r1
   2d504:	ea000000 	b	2d50c <_strtoul_l.isra.0+0x20>
   2d508:	e1a0b005 	mov	fp, r5
   2d50c:	e1a0500b 	mov	r5, fp
   2d510:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
   2d514:	e4d54001 	ldrb	r4, [r5], #1
   2d518:	eb0000c5 	bl	2d834 <__locale_ctype_ptr_l>
   2d51c:	e0800004 	add	r0, r0, r4
   2d520:	e5d01001 	ldrb	r1, [r0, #1]
   2d524:	e2111008 	ands	r1, r1, #8
   2d528:	1afffff6 	bne	2d508 <_strtoul_l.isra.0+0x1c>
   2d52c:	e354002d 	cmp	r4, #45	; 0x2d
   2d530:	0a00004b 	beq	2d664 <_strtoul_l.isra.0+0x178>
   2d534:	e1a0a001 	mov	sl, r1
   2d538:	e354002b 	cmp	r4, #43	; 0x2b
   2d53c:	05db4001 	ldrbeq	r4, [fp, #1]
   2d540:	028b5002 	addeq	r5, fp, #2
   2d544:	e3d93010 	bics	r3, r9, #16
   2d548:	1a00000a 	bne	2d578 <_strtoul_l.isra.0+0x8c>
   2d54c:	e3540030 	cmp	r4, #48	; 0x30
   2d550:	0a000047 	beq	2d674 <_strtoul_l.isra.0+0x188>
   2d554:	e3590000 	cmp	r9, #0
   2d558:	1a000006 	bne	2d578 <_strtoul_l.isra.0+0x8c>
   2d55c:	e3a0900a 	mov	r9, #10
   2d560:	e3a01005 	mov	r1, #5
   2d564:	e1a0c009 	mov	ip, r9
   2d568:	e59fb144 	ldr	fp, [pc, #324]	; 2d6b4 <_strtoul_l.isra.0+0x1c8>
   2d56c:	ea000009 	b	2d598 <_strtoul_l.isra.0+0xac>
   2d570:	e3590000 	cmp	r9, #0
   2d574:	0a000049 	beq	2d6a0 <_strtoul_l.isra.0+0x1b4>
   2d578:	e1a01009 	mov	r1, r9
   2d57c:	e3e00000 	mvn	r0, #0
   2d580:	eb000177 	bl	2db64 <__udivsi3>
   2d584:	e1a01009 	mov	r1, r9
   2d588:	e1a0b000 	mov	fp, r0
   2d58c:	e3e00000 	mvn	r0, #0
   2d590:	eb0001b0 	bl	2dc58 <__aeabi_uidivmod>
   2d594:	e1a0c009 	mov	ip, r9
   2d598:	e3a03000 	mov	r3, #0
   2d59c:	e1a00003 	mov	r0, r3
   2d5a0:	ea000009 	b	2d5cc <_strtoul_l.isra.0+0xe0>
   2d5a4:	e040400b 	sub	r4, r0, fp
   2d5a8:	e2743000 	rsbs	r3, r4, #0
   2d5ac:	e0a33004 	adc	r3, r3, r4
   2d5b0:	e1520001 	cmp	r2, r1
   2d5b4:	d3a03000 	movle	r3, #0
   2d5b8:	e3530000 	cmp	r3, #0
   2d5bc:	1a000014 	bne	2d614 <_strtoul_l.isra.0+0x128>
   2d5c0:	e3a03001 	mov	r3, #1
   2d5c4:	e020209c 	mla	r0, ip, r0, r2
   2d5c8:	e4d54001 	ldrb	r4, [r5], #1
   2d5cc:	e2442030 	sub	r2, r4, #48	; 0x30
   2d5d0:	e3520009 	cmp	r2, #9
   2d5d4:	9a000007 	bls	2d5f8 <_strtoul_l.isra.0+0x10c>
   2d5d8:	e2442041 	sub	r2, r4, #65	; 0x41
   2d5dc:	e3520019 	cmp	r2, #25
   2d5e0:	92442037 	subls	r2, r4, #55	; 0x37
   2d5e4:	9a000003 	bls	2d5f8 <_strtoul_l.isra.0+0x10c>
   2d5e8:	e2442061 	sub	r2, r4, #97	; 0x61
   2d5ec:	e3520019 	cmp	r2, #25
   2d5f0:	8a000009 	bhi	2d61c <_strtoul_l.isra.0+0x130>
   2d5f4:	e2442057 	sub	r2, r4, #87	; 0x57
   2d5f8:	e1590002 	cmp	r9, r2
   2d5fc:	da000006 	ble	2d61c <_strtoul_l.isra.0+0x130>
   2d600:	e150000b 	cmp	r0, fp
   2d604:	93a0e000 	movls	lr, #0
   2d608:	83a0e001 	movhi	lr, #1
   2d60c:	e19e3fa3 	orrs	r3, lr, r3, lsr #31
   2d610:	0affffe3 	beq	2d5a4 <_strtoul_l.isra.0+0xb8>
   2d614:	e3e03000 	mvn	r3, #0
   2d618:	eaffffea 	b	2d5c8 <_strtoul_l.isra.0+0xdc>
   2d61c:	e3530000 	cmp	r3, #0
   2d620:	ba000008 	blt	2d648 <_strtoul_l.isra.0+0x15c>
   2d624:	e35a0000 	cmp	sl, #0
   2d628:	12600000 	rsbne	r0, r0, #0
   2d62c:	e3570000 	cmp	r7, #0
   2d630:	0a000002 	beq	2d640 <_strtoul_l.isra.0+0x154>
   2d634:	e3530000 	cmp	r3, #0
   2d638:	1a000007 	bne	2d65c <_strtoul_l.isra.0+0x170>
   2d63c:	e5876000 	str	r6, [r7]
   2d640:	e8bd4ff8 	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2d644:	e12fff1e 	bx	lr
   2d648:	e3a03022 	mov	r3, #34	; 0x22
   2d64c:	e3570000 	cmp	r7, #0
   2d650:	e3e00000 	mvn	r0, #0
   2d654:	e5883000 	str	r3, [r8]
   2d658:	0afffff8 	beq	2d640 <_strtoul_l.isra.0+0x154>
   2d65c:	e2456001 	sub	r6, r5, #1
   2d660:	eafffff5 	b	2d63c <_strtoul_l.isra.0+0x150>
   2d664:	e28b5002 	add	r5, fp, #2
   2d668:	e5db4001 	ldrb	r4, [fp, #1]
   2d66c:	e3a0a001 	mov	sl, #1
   2d670:	eaffffb3 	b	2d544 <_strtoul_l.isra.0+0x58>
   2d674:	e5d53000 	ldrb	r3, [r5]
   2d678:	e20330df 	and	r3, r3, #223	; 0xdf
   2d67c:	e3530058 	cmp	r3, #88	; 0x58
   2d680:	1affffba 	bne	2d570 <_strtoul_l.isra.0+0x84>
   2d684:	e3a09010 	mov	r9, #16
   2d688:	e5d54001 	ldrb	r4, [r5, #1]
   2d68c:	e1a0c009 	mov	ip, r9
   2d690:	e2855002 	add	r5, r5, #2
   2d694:	e3a0100f 	mov	r1, #15
   2d698:	e3e0b20f 	mvn	fp, #-268435456	; 0xf0000000
   2d69c:	eaffffbd 	b	2d598 <_strtoul_l.isra.0+0xac>
   2d6a0:	e3a09008 	mov	r9, #8
   2d6a4:	e3a01007 	mov	r1, #7
   2d6a8:	e1a0c009 	mov	ip, r9
   2d6ac:	e3e0b20e 	mvn	fp, #-536870912	; 0xe0000000
   2d6b0:	eaffffb8 	b	2d598 <_strtoul_l.isra.0+0xac>
   2d6b4:	19999999 	.word	0x19999999

0002d6b8 <_strtoul_r>:
   2d6b8:	e59fc02c 	ldr	ip, [pc, #44]	; 2d6ec <_strtoul_r+0x34>
   2d6bc:	e59cc000 	ldr	ip, [ip]
   2d6c0:	e59cc034 	ldr	ip, [ip, #52]	; 0x34
   2d6c4:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
   2d6c8:	e59fe020 	ldr	lr, [pc, #32]	; 2d6f0 <_strtoul_r+0x38>
   2d6cc:	e35c0000 	cmp	ip, #0
   2d6d0:	01a0c00e 	moveq	ip, lr
   2d6d4:	e24dd00c 	sub	sp, sp, #12
   2d6d8:	e58dc000 	str	ip, [sp]
   2d6dc:	ebffff82 	bl	2d4ec <_strtoul_l.isra.0>
   2d6e0:	e28dd00c 	add	sp, sp, #12
   2d6e4:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
   2d6e8:	e12fff1e 	bx	lr
   2d6ec:	00042398 	.word	0x00042398
   2d6f0:	000427c8 	.word	0x000427c8

0002d6f4 <strtoul_l>:
   2d6f4:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
   2d6f8:	e59fc028 	ldr	ip, [pc, #40]	; 2d728 <strtoul_l+0x34>
   2d6fc:	e59cc000 	ldr	ip, [ip]
   2d700:	e24dd00c 	sub	sp, sp, #12
   2d704:	e58d3000 	str	r3, [sp]
   2d708:	e1a03002 	mov	r3, r2
   2d70c:	e1a02001 	mov	r2, r1
   2d710:	e1a01000 	mov	r1, r0
   2d714:	e1a0000c 	mov	r0, ip
   2d718:	ebffff73 	bl	2d4ec <_strtoul_l.isra.0>
   2d71c:	e28dd00c 	add	sp, sp, #12
   2d720:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
   2d724:	e12fff1e 	bx	lr
   2d728:	00042398 	.word	0x00042398

0002d72c <strtoul>:
   2d72c:	e59f303c 	ldr	r3, [pc, #60]	; 2d770 <strtoul+0x44>
   2d730:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
   2d734:	e593e000 	ldr	lr, [r3]
   2d738:	e59ec034 	ldr	ip, [lr, #52]	; 0x34
   2d73c:	e59f3030 	ldr	r3, [pc, #48]	; 2d774 <strtoul+0x48>
   2d740:	e35c0000 	cmp	ip, #0
   2d744:	01a0c003 	moveq	ip, r3
   2d748:	e24dd00c 	sub	sp, sp, #12
   2d74c:	e1a03002 	mov	r3, r2
   2d750:	e58dc000 	str	ip, [sp]
   2d754:	e1a02001 	mov	r2, r1
   2d758:	e1a01000 	mov	r1, r0
   2d75c:	e1a0000e 	mov	r0, lr
   2d760:	ebffff61 	bl	2d4ec <_strtoul_l.isra.0>
   2d764:	e28dd00c 	add	sp, sp, #12
   2d768:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
   2d76c:	e12fff1e 	bx	lr
   2d770:	00042398 	.word	0x00042398
   2d774:	000427c8 	.word	0x000427c8

0002d778 <toupper>:
   2d778:	e92d4010 	push	{r4, lr}
   2d77c:	e1a04000 	mov	r4, r0
   2d780:	eb00002d 	bl	2d83c <__locale_ctype_ptr>
   2d784:	e0800004 	add	r0, r0, r4
   2d788:	e5d03001 	ldrb	r3, [r0, #1]
   2d78c:	e2033003 	and	r3, r3, #3
   2d790:	e3530002 	cmp	r3, #2
   2d794:	02444020 	subeq	r4, r4, #32
   2d798:	e1a00004 	mov	r0, r4
   2d79c:	e8bd4010 	pop	{r4, lr}
   2d7a0:	e12fff1e 	bx	lr

0002d7a4 <_setlocale_r>:
   2d7a4:	e92d4010 	push	{r4, lr}
   2d7a8:	e2524000 	subs	r4, r2, #0
   2d7ac:	0a000004 	beq	2d7c4 <_setlocale_r+0x20>
   2d7b0:	e59f1048 	ldr	r1, [pc, #72]	; 2d800 <_setlocale_r+0x5c>
   2d7b4:	e1a00004 	mov	r0, r4
   2d7b8:	ebfffb29 	bl	2c464 <strcmp>
   2d7bc:	e3500000 	cmp	r0, #0
   2d7c0:	1a000002 	bne	2d7d0 <_setlocale_r+0x2c>
   2d7c4:	e59f0038 	ldr	r0, [pc, #56]	; 2d804 <_setlocale_r+0x60>
   2d7c8:	e8bd4010 	pop	{r4, lr}
   2d7cc:	e12fff1e 	bx	lr
   2d7d0:	e59f102c 	ldr	r1, [pc, #44]	; 2d804 <_setlocale_r+0x60>
   2d7d4:	e1a00004 	mov	r0, r4
   2d7d8:	ebfffb21 	bl	2c464 <strcmp>
   2d7dc:	e3500000 	cmp	r0, #0
   2d7e0:	0afffff7 	beq	2d7c4 <_setlocale_r+0x20>
   2d7e4:	e1a00004 	mov	r0, r4
   2d7e8:	e59f1018 	ldr	r1, [pc, #24]	; 2d808 <_setlocale_r+0x64>
   2d7ec:	ebfffb1c 	bl	2c464 <strcmp>
   2d7f0:	e3500000 	cmp	r0, #0
   2d7f4:	0afffff2 	beq	2d7c4 <_setlocale_r+0x20>
   2d7f8:	e3a00000 	mov	r0, #0
   2d7fc:	eafffff1 	b	2d7c8 <_setlocale_r+0x24>
   2d800:	0003291c 	.word	0x0003291c
   2d804:	00032918 	.word	0x00032918
   2d808:	00030310 	.word	0x00030310

0002d80c <__locale_mb_cur_max>:
   2d80c:	e59f3018 	ldr	r3, [pc, #24]	; 2d82c <__locale_mb_cur_max+0x20>
   2d810:	e5933000 	ldr	r3, [r3]
   2d814:	e5933034 	ldr	r3, [r3, #52]	; 0x34
   2d818:	e59f2010 	ldr	r2, [pc, #16]	; 2d830 <__locale_mb_cur_max+0x24>
   2d81c:	e3530000 	cmp	r3, #0
   2d820:	01a03002 	moveq	r3, r2
   2d824:	e5d30128 	ldrb	r0, [r3, #296]	; 0x128
   2d828:	e12fff1e 	bx	lr
   2d82c:	00042398 	.word	0x00042398
   2d830:	000427c8 	.word	0x000427c8

0002d834 <__locale_ctype_ptr_l>:
   2d834:	e59000ec 	ldr	r0, [r0, #236]	; 0xec
   2d838:	e12fff1e 	bx	lr

0002d83c <__locale_ctype_ptr>:
   2d83c:	e59f3018 	ldr	r3, [pc, #24]	; 2d85c <__locale_ctype_ptr+0x20>
   2d840:	e5933000 	ldr	r3, [r3]
   2d844:	e5933034 	ldr	r3, [r3, #52]	; 0x34
   2d848:	e59f2010 	ldr	r2, [pc, #16]	; 2d860 <__locale_ctype_ptr+0x24>
   2d84c:	e3530000 	cmp	r3, #0
   2d850:	01a03002 	moveq	r3, r2
   2d854:	e59300ec 	ldr	r0, [r3, #236]	; 0xec
   2d858:	e12fff1e 	bx	lr
   2d85c:	00042398 	.word	0x00042398
   2d860:	000427c8 	.word	0x000427c8

0002d864 <setlocale>:
   2d864:	e59f300c 	ldr	r3, [pc, #12]	; 2d878 <setlocale+0x14>
   2d868:	e1a02001 	mov	r2, r1
   2d86c:	e1a01000 	mov	r1, r0
   2d870:	e5930000 	ldr	r0, [r3]
   2d874:	eaffffca 	b	2d7a4 <_setlocale_r>
   2d878:	00042398 	.word	0x00042398

0002d87c <_mbtowc_r>:
   2d87c:	e59fc024 	ldr	ip, [pc, #36]	; 2d8a8 <_mbtowc_r+0x2c>
   2d880:	e59cc000 	ldr	ip, [ip]
   2d884:	e59cc034 	ldr	ip, [ip, #52]	; 0x34
   2d888:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
   2d88c:	e59fe018 	ldr	lr, [pc, #24]	; 2d8ac <_mbtowc_r+0x30>
   2d890:	e35c0000 	cmp	ip, #0
   2d894:	01a0c00e 	moveq	ip, lr
   2d898:	e59ce0e4 	ldr	lr, [ip, #228]	; 0xe4
   2d89c:	e1a0c00e 	mov	ip, lr
   2d8a0:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
   2d8a4:	e12fff1c 	bx	ip
   2d8a8:	00042398 	.word	0x00042398
   2d8ac:	000427c8 	.word	0x000427c8

0002d8b0 <__ascii_mbtowc>:
   2d8b0:	e3510000 	cmp	r1, #0
   2d8b4:	e24dd008 	sub	sp, sp, #8
   2d8b8:	028d1004 	addeq	r1, sp, #4
   2d8bc:	e3520000 	cmp	r2, #0
   2d8c0:	01a00002 	moveq	r0, r2
   2d8c4:	0a000006 	beq	2d8e4 <__ascii_mbtowc+0x34>
   2d8c8:	e3530000 	cmp	r3, #0
   2d8cc:	0a000006 	beq	2d8ec <__ascii_mbtowc+0x3c>
   2d8d0:	e5d23000 	ldrb	r3, [r2]
   2d8d4:	e5813000 	str	r3, [r1]
   2d8d8:	e5d22000 	ldrb	r2, [r2]
   2d8dc:	e2920000 	adds	r0, r2, #0
   2d8e0:	13a00001 	movne	r0, #1
   2d8e4:	e28dd008 	add	sp, sp, #8
   2d8e8:	e12fff1e 	bx	lr
   2d8ec:	e3e00001 	mvn	r0, #1
   2d8f0:	eafffffb 	b	2d8e4 <__ascii_mbtowc+0x34>

0002d8f4 <memchr>:
   2d8f4:	e3100003 	tst	r0, #3
   2d8f8:	e92d4070 	push	{r4, r5, r6, lr}
   2d8fc:	e201e0ff 	and	lr, r1, #255	; 0xff
   2d900:	0a000038 	beq	2d9e8 <memchr+0xf4>
   2d904:	e3520000 	cmp	r2, #0
   2d908:	e242c001 	sub	ip, r2, #1
   2d90c:	0a00001e 	beq	2d98c <memchr+0x98>
   2d910:	e5d03000 	ldrb	r3, [r0]
   2d914:	e153000e 	cmp	r3, lr
   2d918:	0a00001c 	beq	2d990 <memchr+0x9c>
   2d91c:	e2803001 	add	r3, r0, #1
   2d920:	ea000005 	b	2d93c <memchr+0x48>
   2d924:	e25cc001 	subs	ip, ip, #1
   2d928:	3a000017 	bcc	2d98c <memchr+0x98>
   2d92c:	e5d02000 	ldrb	r2, [r0]
   2d930:	e152000e 	cmp	r2, lr
   2d934:	e2833001 	add	r3, r3, #1
   2d938:	0a000014 	beq	2d990 <memchr+0x9c>
   2d93c:	e3130003 	tst	r3, #3
   2d940:	e1a00003 	mov	r0, r3
   2d944:	1afffff6 	bne	2d924 <memchr+0x30>
   2d948:	e35c0003 	cmp	ip, #3
   2d94c:	8a000011 	bhi	2d998 <memchr+0xa4>
   2d950:	e35c0000 	cmp	ip, #0
   2d954:	0a000025 	beq	2d9f0 <memchr+0xfc>
   2d958:	e5d03000 	ldrb	r3, [r0]
   2d95c:	e153000e 	cmp	r3, lr
   2d960:	0a00000a 	beq	2d990 <memchr+0x9c>
   2d964:	e080c00c 	add	ip, r0, ip
   2d968:	e2803001 	add	r3, r0, #1
   2d96c:	ea000003 	b	2d980 <memchr+0x8c>
   2d970:	e5d02000 	ldrb	r2, [r0]
   2d974:	e152000e 	cmp	r2, lr
   2d978:	e2833001 	add	r3, r3, #1
   2d97c:	0a000003 	beq	2d990 <memchr+0x9c>
   2d980:	e15c0003 	cmp	ip, r3
   2d984:	e1a00003 	mov	r0, r3
   2d988:	1afffff8 	bne	2d970 <memchr+0x7c>
   2d98c:	e3a00000 	mov	r0, #0
   2d990:	e8bd4070 	pop	{r4, r5, r6, lr}
   2d994:	e12fff1e 	bx	lr
   2d998:	e1a02000 	mov	r2, r0
   2d99c:	e59f4054 	ldr	r4, [pc, #84]	; 2d9f8 <memchr+0x104>
   2d9a0:	e0044401 	and	r4, r4, r1, lsl #8
   2d9a4:	e184400e 	orr	r4, r4, lr
   2d9a8:	e59f604c 	ldr	r6, [pc, #76]	; 2d9fc <memchr+0x108>
   2d9ac:	e59f504c 	ldr	r5, [pc, #76]	; 2da00 <memchr+0x10c>
   2d9b0:	e1844804 	orr	r4, r4, r4, lsl #16
   2d9b4:	e5923000 	ldr	r3, [r2]
   2d9b8:	e0233004 	eor	r3, r3, r4
   2d9bc:	e0831006 	add	r1, r3, r6
   2d9c0:	e1c13003 	bic	r3, r1, r3
   2d9c4:	e1130005 	tst	r3, r5
   2d9c8:	e1a00002 	mov	r0, r2
   2d9cc:	e2822004 	add	r2, r2, #4
   2d9d0:	1affffe0 	bne	2d958 <memchr+0x64>
   2d9d4:	e24cc004 	sub	ip, ip, #4
   2d9d8:	e35c0003 	cmp	ip, #3
   2d9dc:	e1a00002 	mov	r0, r2
   2d9e0:	8afffff3 	bhi	2d9b4 <memchr+0xc0>
   2d9e4:	eaffffd9 	b	2d950 <memchr+0x5c>
   2d9e8:	e1a0c002 	mov	ip, r2
   2d9ec:	eaffffd5 	b	2d948 <memchr+0x54>
   2d9f0:	e1a0000c 	mov	r0, ip
   2d9f4:	eaffffe5 	b	2d990 <memchr+0x9c>
   2d9f8:	0000ffff 	.word	0x0000ffff
   2d9fc:	fefefeff 	.word	0xfefefeff
   2da00:	80808080 	.word	0x80808080

0002da04 <memcmp>:
   2da04:	e3520003 	cmp	r2, #3
   2da08:	8a000010 	bhi	2da50 <memcmp+0x4c>
   2da0c:	e3520000 	cmp	r2, #0
   2da10:	e242c001 	sub	ip, r2, #1
   2da14:	0a00000b 	beq	2da48 <memcmp+0x44>
   2da18:	e5d02000 	ldrb	r2, [r0]
   2da1c:	e5d13000 	ldrb	r3, [r1]
   2da20:	e1520003 	cmp	r2, r3
   2da24:	0081c00c 	addeq	ip, r1, ip
   2da28:	0a000004 	beq	2da40 <memcmp+0x3c>
   2da2c:	ea00002c 	b	2dae4 <memcmp+0xe0>
   2da30:	e5f02001 	ldrb	r2, [r0, #1]!
   2da34:	e5f13001 	ldrb	r3, [r1, #1]!
   2da38:	e1520003 	cmp	r2, r3
   2da3c:	1a000028 	bne	2dae4 <memcmp+0xe0>
   2da40:	e151000c 	cmp	r1, ip
   2da44:	1afffff9 	bne	2da30 <memcmp+0x2c>
   2da48:	e3a00000 	mov	r0, #0
   2da4c:	e12fff1e 	bx	lr
   2da50:	e1803001 	orr	r3, r0, r1
   2da54:	e3130003 	tst	r3, #3
   2da58:	e1a0c000 	mov	ip, r0
   2da5c:	e1a03001 	mov	r3, r1
   2da60:	1a000024 	bne	2daf8 <memcmp+0xf4>
   2da64:	e92d4010 	push	{r4, lr}
   2da68:	e593e000 	ldr	lr, [r3]
   2da6c:	e59c4000 	ldr	r4, [ip]
   2da70:	e154000e 	cmp	r4, lr
   2da74:	e1a01003 	mov	r1, r3
   2da78:	e1a0000c 	mov	r0, ip
   2da7c:	e2833004 	add	r3, r3, #4
   2da80:	e28cc004 	add	ip, ip, #4
   2da84:	1a00001d 	bne	2db00 <memcmp+0xfc>
   2da88:	e2422004 	sub	r2, r2, #4
   2da8c:	e3520003 	cmp	r2, #3
   2da90:	e1a0000c 	mov	r0, ip
   2da94:	e1a01003 	mov	r1, r3
   2da98:	8afffff2 	bhi	2da68 <memcmp+0x64>
   2da9c:	e3520000 	cmp	r2, #0
   2daa0:	e242c001 	sub	ip, r2, #1
   2daa4:	0a00000b 	beq	2dad8 <memcmp+0xd4>
   2daa8:	e5d02000 	ldrb	r2, [r0]
   2daac:	e5d13000 	ldrb	r3, [r1]
   2dab0:	e1520003 	cmp	r2, r3
   2dab4:	0081c00c 	addeq	ip, r1, ip
   2dab8:	0a000004 	beq	2dad0 <memcmp+0xcc>
   2dabc:	ea00000a 	b	2daec <memcmp+0xe8>
   2dac0:	e5f02001 	ldrb	r2, [r0, #1]!
   2dac4:	e5f13001 	ldrb	r3, [r1, #1]!
   2dac8:	e1520003 	cmp	r2, r3
   2dacc:	1a000006 	bne	2daec <memcmp+0xe8>
   2dad0:	e151000c 	cmp	r1, ip
   2dad4:	1afffff9 	bne	2dac0 <memcmp+0xbc>
   2dad8:	e3a00000 	mov	r0, #0
   2dadc:	e8bd4010 	pop	{r4, lr}
   2dae0:	e12fff1e 	bx	lr
   2dae4:	e0420003 	sub	r0, r2, r3
   2dae8:	e12fff1e 	bx	lr
   2daec:	e0420003 	sub	r0, r2, r3
   2daf0:	e8bd4010 	pop	{r4, lr}
   2daf4:	e12fff1e 	bx	lr
   2daf8:	e242c001 	sub	ip, r2, #1
   2dafc:	eaffffc5 	b	2da18 <memcmp+0x14>
   2db00:	e242c001 	sub	ip, r2, #1
   2db04:	eaffffe7 	b	2daa8 <memcmp+0xa4>

0002db08 <_wctomb_r>:
   2db08:	e59fc024 	ldr	ip, [pc, #36]	; 2db34 <_wctomb_r+0x2c>
   2db0c:	e59cc000 	ldr	ip, [ip]
   2db10:	e59cc034 	ldr	ip, [ip, #52]	; 0x34
   2db14:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
   2db18:	e59fe018 	ldr	lr, [pc, #24]	; 2db38 <_wctomb_r+0x30>
   2db1c:	e35c0000 	cmp	ip, #0
   2db20:	01a0c00e 	moveq	ip, lr
   2db24:	e59ce0e0 	ldr	lr, [ip, #224]	; 0xe0
   2db28:	e1a0c00e 	mov	ip, lr
   2db2c:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
   2db30:	e12fff1c 	bx	ip
   2db34:	00042398 	.word	0x00042398
   2db38:	000427c8 	.word	0x000427c8

0002db3c <__ascii_wctomb>:
   2db3c:	e3510000 	cmp	r1, #0
   2db40:	0a000005 	beq	2db5c <__ascii_wctomb+0x20>
   2db44:	e35200ff 	cmp	r2, #255	; 0xff
   2db48:	83a0308a 	movhi	r3, #138	; 0x8a
   2db4c:	95c12000 	strbls	r2, [r1]
   2db50:	83e01000 	mvnhi	r1, #0
   2db54:	93a01001 	movls	r1, #1
   2db58:	85803000 	strhi	r3, [r0]
   2db5c:	e1a00001 	mov	r0, r1
   2db60:	e12fff1e 	bx	lr

0002db64 <__udivsi3>:
   2db64:	e2512001 	subs	r2, r1, #1
   2db68:	012fff1e 	bxeq	lr
   2db6c:	3a000036 	bcc	2dc4c <__udivsi3+0xe8>
   2db70:	e1500001 	cmp	r0, r1
   2db74:	9a000022 	bls	2dc04 <__udivsi3+0xa0>
   2db78:	e1110002 	tst	r1, r2
   2db7c:	0a000023 	beq	2dc10 <__udivsi3+0xac>
   2db80:	e311020e 	tst	r1, #-536870912	; 0xe0000000
   2db84:	01a01181 	lsleq	r1, r1, #3
   2db88:	03a03008 	moveq	r3, #8
   2db8c:	13a03001 	movne	r3, #1
   2db90:	e3510201 	cmp	r1, #268435456	; 0x10000000
   2db94:	31510000 	cmpcc	r1, r0
   2db98:	31a01201 	lslcc	r1, r1, #4
   2db9c:	31a03203 	lslcc	r3, r3, #4
   2dba0:	3afffffa 	bcc	2db90 <__udivsi3+0x2c>
   2dba4:	e3510102 	cmp	r1, #-2147483648	; 0x80000000
   2dba8:	31510000 	cmpcc	r1, r0
   2dbac:	31a01081 	lslcc	r1, r1, #1
   2dbb0:	31a03083 	lslcc	r3, r3, #1
   2dbb4:	3afffffa 	bcc	2dba4 <__udivsi3+0x40>
   2dbb8:	e3a02000 	mov	r2, #0
   2dbbc:	e1500001 	cmp	r0, r1
   2dbc0:	20400001 	subcs	r0, r0, r1
   2dbc4:	21822003 	orrcs	r2, r2, r3
   2dbc8:	e15000a1 	cmp	r0, r1, lsr #1
   2dbcc:	204000a1 	subcs	r0, r0, r1, lsr #1
   2dbd0:	218220a3 	orrcs	r2, r2, r3, lsr #1
   2dbd4:	e1500121 	cmp	r0, r1, lsr #2
   2dbd8:	20400121 	subcs	r0, r0, r1, lsr #2
   2dbdc:	21822123 	orrcs	r2, r2, r3, lsr #2
   2dbe0:	e15001a1 	cmp	r0, r1, lsr #3
   2dbe4:	204001a1 	subcs	r0, r0, r1, lsr #3
   2dbe8:	218221a3 	orrcs	r2, r2, r3, lsr #3
   2dbec:	e3500000 	cmp	r0, #0
   2dbf0:	11b03223 	lsrsne	r3, r3, #4
   2dbf4:	11a01221 	lsrne	r1, r1, #4
   2dbf8:	1affffef 	bne	2dbbc <__udivsi3+0x58>
   2dbfc:	e1a00002 	mov	r0, r2
   2dc00:	e12fff1e 	bx	lr
   2dc04:	03a00001 	moveq	r0, #1
   2dc08:	13a00000 	movne	r0, #0
   2dc0c:	e12fff1e 	bx	lr
   2dc10:	e3510801 	cmp	r1, #65536	; 0x10000
   2dc14:	21a01821 	lsrcs	r1, r1, #16
   2dc18:	23a02010 	movcs	r2, #16
   2dc1c:	33a02000 	movcc	r2, #0
   2dc20:	e3510c01 	cmp	r1, #256	; 0x100
   2dc24:	21a01421 	lsrcs	r1, r1, #8
   2dc28:	22822008 	addcs	r2, r2, #8
   2dc2c:	e3510010 	cmp	r1, #16
   2dc30:	21a01221 	lsrcs	r1, r1, #4
   2dc34:	22822004 	addcs	r2, r2, #4
   2dc38:	e3510004 	cmp	r1, #4
   2dc3c:	82822003 	addhi	r2, r2, #3
   2dc40:	908220a1 	addls	r2, r2, r1, lsr #1
   2dc44:	e1a00230 	lsr	r0, r0, r2
   2dc48:	e12fff1e 	bx	lr
   2dc4c:	e3500000 	cmp	r0, #0
   2dc50:	13e00000 	mvnne	r0, #0
   2dc54:	ea000059 	b	2ddc0 <__aeabi_idiv0>

0002dc58 <__aeabi_uidivmod>:
   2dc58:	e3510000 	cmp	r1, #0
   2dc5c:	0afffffa 	beq	2dc4c <__udivsi3+0xe8>
   2dc60:	e92d4003 	push	{r0, r1, lr}
   2dc64:	ebffffbe 	bl	2db64 <__udivsi3>
   2dc68:	e8bd4006 	pop	{r1, r2, lr}
   2dc6c:	e0030092 	mul	r3, r2, r0
   2dc70:	e0411003 	sub	r1, r1, r3
   2dc74:	e12fff1e 	bx	lr

0002dc78 <__divsi3>:
   2dc78:	e3510000 	cmp	r1, #0
   2dc7c:	0a000043 	beq	2dd90 <.divsi3_skip_div0_test+0x110>

0002dc80 <.divsi3_skip_div0_test>:
   2dc80:	e020c001 	eor	ip, r0, r1
   2dc84:	42611000 	rsbmi	r1, r1, #0
   2dc88:	e2512001 	subs	r2, r1, #1
   2dc8c:	0a000027 	beq	2dd30 <.divsi3_skip_div0_test+0xb0>
   2dc90:	e1b03000 	movs	r3, r0
   2dc94:	42603000 	rsbmi	r3, r0, #0
   2dc98:	e1530001 	cmp	r3, r1
   2dc9c:	9a000026 	bls	2dd3c <.divsi3_skip_div0_test+0xbc>
   2dca0:	e1110002 	tst	r1, r2
   2dca4:	0a000028 	beq	2dd4c <.divsi3_skip_div0_test+0xcc>
   2dca8:	e311020e 	tst	r1, #-536870912	; 0xe0000000
   2dcac:	01a01181 	lsleq	r1, r1, #3
   2dcb0:	03a02008 	moveq	r2, #8
   2dcb4:	13a02001 	movne	r2, #1
   2dcb8:	e3510201 	cmp	r1, #268435456	; 0x10000000
   2dcbc:	31510003 	cmpcc	r1, r3
   2dcc0:	31a01201 	lslcc	r1, r1, #4
   2dcc4:	31a02202 	lslcc	r2, r2, #4
   2dcc8:	3afffffa 	bcc	2dcb8 <.divsi3_skip_div0_test+0x38>
   2dccc:	e3510102 	cmp	r1, #-2147483648	; 0x80000000
   2dcd0:	31510003 	cmpcc	r1, r3
   2dcd4:	31a01081 	lslcc	r1, r1, #1
   2dcd8:	31a02082 	lslcc	r2, r2, #1
   2dcdc:	3afffffa 	bcc	2dccc <.divsi3_skip_div0_test+0x4c>
   2dce0:	e3a00000 	mov	r0, #0
   2dce4:	e1530001 	cmp	r3, r1
   2dce8:	20433001 	subcs	r3, r3, r1
   2dcec:	21800002 	orrcs	r0, r0, r2
   2dcf0:	e15300a1 	cmp	r3, r1, lsr #1
   2dcf4:	204330a1 	subcs	r3, r3, r1, lsr #1
   2dcf8:	218000a2 	orrcs	r0, r0, r2, lsr #1
   2dcfc:	e1530121 	cmp	r3, r1, lsr #2
   2dd00:	20433121 	subcs	r3, r3, r1, lsr #2
   2dd04:	21800122 	orrcs	r0, r0, r2, lsr #2
   2dd08:	e15301a1 	cmp	r3, r1, lsr #3
   2dd0c:	204331a1 	subcs	r3, r3, r1, lsr #3
   2dd10:	218001a2 	orrcs	r0, r0, r2, lsr #3
   2dd14:	e3530000 	cmp	r3, #0
   2dd18:	11b02222 	lsrsne	r2, r2, #4
   2dd1c:	11a01221 	lsrne	r1, r1, #4
   2dd20:	1affffef 	bne	2dce4 <.divsi3_skip_div0_test+0x64>
   2dd24:	e35c0000 	cmp	ip, #0
   2dd28:	42600000 	rsbmi	r0, r0, #0
   2dd2c:	e12fff1e 	bx	lr
   2dd30:	e13c0000 	teq	ip, r0
   2dd34:	42600000 	rsbmi	r0, r0, #0
   2dd38:	e12fff1e 	bx	lr
   2dd3c:	33a00000 	movcc	r0, #0
   2dd40:	01a00fcc 	asreq	r0, ip, #31
   2dd44:	03800001 	orreq	r0, r0, #1
   2dd48:	e12fff1e 	bx	lr
   2dd4c:	e3510801 	cmp	r1, #65536	; 0x10000
   2dd50:	21a01821 	lsrcs	r1, r1, #16
   2dd54:	23a02010 	movcs	r2, #16
   2dd58:	33a02000 	movcc	r2, #0
   2dd5c:	e3510c01 	cmp	r1, #256	; 0x100
   2dd60:	21a01421 	lsrcs	r1, r1, #8
   2dd64:	22822008 	addcs	r2, r2, #8
   2dd68:	e3510010 	cmp	r1, #16
   2dd6c:	21a01221 	lsrcs	r1, r1, #4
   2dd70:	22822004 	addcs	r2, r2, #4
   2dd74:	e3510004 	cmp	r1, #4
   2dd78:	82822003 	addhi	r2, r2, #3
   2dd7c:	908220a1 	addls	r2, r2, r1, lsr #1
   2dd80:	e35c0000 	cmp	ip, #0
   2dd84:	e1a00233 	lsr	r0, r3, r2
   2dd88:	42600000 	rsbmi	r0, r0, #0
   2dd8c:	e12fff1e 	bx	lr
   2dd90:	e3500000 	cmp	r0, #0
   2dd94:	c3e00102 	mvngt	r0, #-2147483648	; 0x80000000
   2dd98:	b3a00102 	movlt	r0, #-2147483648	; 0x80000000
   2dd9c:	ea000007 	b	2ddc0 <__aeabi_idiv0>

0002dda0 <__aeabi_idivmod>:
   2dda0:	e3510000 	cmp	r1, #0
   2dda4:	0afffff9 	beq	2dd90 <.divsi3_skip_div0_test+0x110>
   2dda8:	e92d4003 	push	{r0, r1, lr}
   2ddac:	ebffffb3 	bl	2dc80 <.divsi3_skip_div0_test>
   2ddb0:	e8bd4006 	pop	{r1, r2, lr}
   2ddb4:	e0030092 	mul	r3, r2, r0
   2ddb8:	e0411003 	sub	r1, r1, r3
   2ddbc:	e12fff1e 	bx	lr

0002ddc0 <__aeabi_idiv0>:
   2ddc0:	e12fff1e 	bx	lr
