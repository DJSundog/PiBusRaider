Archive member included to satisfy reference by file (symbol)

c:/program files (x86)/gnu tools arm embedded/7 2017-q4-major/bin/../lib/gcc/arm-none-eabi/7.2.1/hard/libgcc.a(_udivsi3.o)
                              src/rdserial.o (__aeabi_uidiv)
c:/program files (x86)/gnu tools arm embedded/7 2017-q4-major/bin/../lib/gcc/arm-none-eabi/7.2.1/hard/libgcc.a(_dvmd_tls.o)
                              c:/program files (x86)/gnu tools arm embedded/7 2017-q4-major/bin/../lib/gcc/arm-none-eabi/7.2.1/hard/libgcc.a(_udivsi3.o) (__aeabi_idiv0)
./circle/lib/usb/libusb.a(dwhcidevice.o)
                              src/kernel.o (CDWHCIDevice::~CDWHCIDevice())
./circle/lib/usb/libusb.a(dwhciregister.o)
                              ./circle/lib/usb/libusb.a(dwhcidevice.o) (CDWHCIRegister::CDWHCIRegister(unsigned int))
./circle/lib/usb/libusb.a(dwhcixferstagedata.o)
                              ./circle/lib/usb/libusb.a(dwhcidevice.o) (CDWHCITransferStageData::~CDWHCITransferStageData())
./circle/lib/usb/libusb.a(usbdevice.o)
                              ./circle/lib/usb/libusb.a(dwhcixferstagedata.o) (CUSBDevice::GetAddress() const)
./circle/lib/usb/libusb.a(usbendpoint.o)
                              ./circle/lib/usb/libusb.a(usbdevice.o) (CUSBEndpoint::CUSBEndpoint(CUSBDevice*))
./circle/lib/usb/libusb.a(usbhostcontroller.o)
                              ./circle/lib/usb/libusb.a(dwhcidevice.o) (CUSBHostController::CUSBHostController())
./circle/lib/usb/libusb.a(usbrequest.o)
                              ./circle/lib/usb/libusb.a(usbhostcontroller.o) (CUSBRequest::CUSBRequest(CUSBEndpoint*, void*, unsigned int, TSetupData*))
./circle/lib/usb/libusb.a(usbdevicefactory.o)
                              ./circle/lib/usb/libusb.a(usbdevice.o) (CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*))
./circle/lib/usb/libusb.a(usbstandardhub.o)
                              ./circle/lib/usb/libusb.a(usbdevicefactory.o) (CUSBStandardHub::CUSBStandardHub(CUSBFunction*))
./circle/lib/usb/libusb.a(usbmassdevice.o)
                              ./circle/lib/usb/libusb.a(usbdevicefactory.o) (CUSBBulkOnlyMassStorageDevice::CUSBBulkOnlyMassStorageDevice(CUSBFunction*))
./circle/lib/usb/libusb.a(dwhciframeschednper.o)
                              ./circle/lib/usb/libusb.a(dwhcixferstagedata.o) (CDWHCIFrameSchedulerNonPeriodic::CDWHCIFrameSchedulerNonPeriodic())
./circle/lib/usb/libusb.a(dwhciframeschedper.o)
                              ./circle/lib/usb/libusb.a(dwhcixferstagedata.o) (CDWHCIFrameSchedulerPeriodic::CDWHCIFrameSchedulerPeriodic())
./circle/lib/usb/libusb.a(usbkeyboard.o)
                              ./circle/lib/usb/libusb.a(usbdevicefactory.o) (CUSBKeyboardDevice::CUSBKeyboardDevice(CUSBFunction*))
./circle/lib/usb/libusb.a(dwhcirootport.o)
                              ./circle/lib/usb/libusb.a(dwhcidevice.o) (CDWHCIRootPort::CDWHCIRootPort(CDWHCIDevice*))
./circle/lib/usb/libusb.a(usbhiddevice.o)
                              ./circle/lib/usb/libusb.a(usbkeyboard.o) (CUSBHIDDevice::CUSBHIDDevice(CUSBFunction*, unsigned int))
./circle/lib/usb/libusb.a(usbmouse.o)
                              ./circle/lib/usb/libusb.a(usbdevicefactory.o) (CUSBMouseDevice::CUSBMouseDevice(CUSBFunction*))
./circle/lib/usb/libusb.a(usbgamepadstandard.o)
                              ./circle/lib/usb/libusb.a(usbdevicefactory.o) (CUSBGamePadStandardDevice::CUSBGamePadStandardDevice(CUSBFunction*, bool))
./circle/lib/usb/libusb.a(usbgamepadps3.o)
                              ./circle/lib/usb/libusb.a(usbdevicefactory.o) (CUSBGamePadPS3Device::CUSBGamePadPS3Device(CUSBFunction*))
./circle/lib/usb/libusb.a(usbgamepadps4.o)
                              ./circle/lib/usb/libusb.a(usbdevicefactory.o) (CUSBGamePadPS4Device::CUSBGamePadPS4Device(CUSBFunction*))
./circle/lib/usb/libusb.a(usbgamepadxbox360.o)
                              ./circle/lib/usb/libusb.a(usbdevicefactory.o) (CUSBGamePadXbox360Device::CUSBGamePadXbox360Device(CUSBFunction*))
./circle/lib/usb/libusb.a(usbgamepadxboxone.o)
                              ./circle/lib/usb/libusb.a(usbdevicefactory.o) (CUSBGamePadXboxOneDevice::CUSBGamePadXboxOneDevice(CUSBFunction*))
./circle/lib/usb/libusb.a(usbgamepadswitchpro.o)
                              ./circle/lib/usb/libusb.a(usbdevicefactory.o) (CUSBGamePadSwitchProDevice::CUSBGamePadSwitchProDevice(CUSBFunction*))
./circle/lib/usb/libusb.a(usbfunction.o)
                              ./circle/lib/usb/libusb.a(usbstandardhub.o) (CUSBFunction::Initialize())
./circle/lib/usb/libusb.a(dwhciframeschednsplit.o)
                              ./circle/lib/usb/libusb.a(dwhcixferstagedata.o) (CDWHCIFrameSchedulerNoSplit::CDWHCIFrameSchedulerNoSplit(bool))
./circle/lib/usb/libusb.a(usbprinter.o)
                              ./circle/lib/usb/libusb.a(usbdevicefactory.o) (CUSBPrinterDevice::CUSBPrinterDevice(CUSBFunction*))
./circle/lib/usb/libusb.a(usbbluetooth.o)
                              ./circle/lib/usb/libusb.a(usbdevicefactory.o) (CUSBBluetoothDevice::CUSBBluetoothDevice(CUSBFunction*))
./circle/lib/usb/libusb.a(usbmidi.o)
                              ./circle/lib/usb/libusb.a(usbdevicefactory.o) (CUSBMIDIDevice::CUSBMIDIDevice(CUSBFunction*))
./circle/lib/usb/libusb.a(usbcdcethernet.o)
                              ./circle/lib/usb/libusb.a(usbdevicefactory.o) (CUSBCDCEthernetDevice::CUSBCDCEthernetDevice(CUSBFunction*))
./circle/lib/usb/libusb.a(usbconfigparser.o)
                              ./circle/lib/usb/libusb.a(usbdevice.o) (CUSBConfigurationParser::CUSBConfigurationParser(void const*, unsigned int))
./circle/lib/usb/libusb.a(usbstring.o)
                              ./circle/lib/usb/libusb.a(usbcdcethernet.o) (CUSBString::CUSBString(CUSBDevice*))
./circle/lib/usb/libusb.a(smsc951x.o)
                              ./circle/lib/usb/libusb.a(usbdevicefactory.o) (CSMSC951xDevice::CSMSC951xDevice(CUSBFunction*))
./circle/lib/usb/libusb.a(lan7800.o)
                              ./circle/lib/usb/libusb.a(usbdevicefactory.o) (CLAN7800Device::CLAN7800Device(CUSBFunction*))
./circle/lib/usb/libusb.a(macaddress.o)
                              ./circle/lib/usb/libusb.a(usbcdcethernet.o) (CMACAddress::CMACAddress())
./circle/lib/usb/libusb.a(netdevice.o)
                              ./circle/lib/usb/libusb.a(usbcdcethernet.o) (CNetDevice::CNetDevice(CUSBFunction*))
./circle/lib/usb/libusb.a(usbgamepad.o)
                              ./circle/lib/usb/libusb.a(usbgamepadstandard.o) (CUSBGamePadDevice::GetInitialState())
./circle/lib/input/libinput.a(keyboardbehaviour.o)
                              ./circle/lib/usb/libusb.a(usbkeyboard.o) (CKeyboardBehaviour::CKeyboardBehaviour())
./circle/lib/input/libinput.a(keymap.o)
                              ./circle/lib/input/libinput.a(keyboardbehaviour.o) (CKeyMap::~CKeyMap())
./circle/lib/input/libinput.a(mouse.o)
                              ./circle/lib/usb/libusb.a(usbmouse.o) (CMouseDevice::CMouseDevice())
./circle/lib/input/libinput.a(mousebehaviour.o)
                              ./circle/lib/input/libinput.a(mouse.o) (CMouseBehaviour::CMouseBehaviour())
./circle/lib/fs/libfs.a(partitionmanager.o)
                              ./circle/lib/usb/libusb.a(usbmassdevice.o) (CPartitionManager::CPartitionManager(CDevice*, char const*))
./circle/lib/fs/libfs.a(partition.o)
                              ./circle/lib/fs/libfs.a(partitionmanager.o) (CPartition::CPartition(CDevice*, unsigned int, unsigned int))
./circle/lib/libcircle.a(actled.o)
                              src/kernel.o (CActLED::~CActLED())
./circle/lib/libcircle.a(assert.o)
                              src/kernel.o (assertion_failed)
./circle/lib/libcircle.a(bcmpropertytags.o)
                              ./circle/lib/usb/libusb.a(dwhcidevice.o) (CBcmPropertyTags::CBcmPropertyTags())
./circle/lib/libcircle.a(classallocator.o)
                              ./circle/lib/usb/libusb.a(dwhcixferstagedata.o) (CClassAllocator::CClassAllocator(unsigned int, unsigned int, char const*))
./circle/lib/libcircle.a(debug.o)
                              ./circle/lib/usb/libusb.a(usbconfigparser.o) (debug_hexdump(void const*, unsigned int, char const*))
./circle/lib/libcircle.a(device.o)
                              src/rdserial.o (CDevice::~CDevice())
./circle/lib/libcircle.a(devicenameservice.o)
                              src/kernel.o (CDeviceNameService::CDeviceNameService())
./circle/lib/libcircle.a(gpiopin.o)
                              src/rdserial.o (CGPIOPin::~CGPIOPin())
./circle/lib/libcircle.a(interrupt.o)
                              src/kernel.o (CInterruptSystem::CInterruptSystem())
./circle/lib/libcircle.a(koptions.o)
                              src/kernel.o (CKernelOptions::~CKernelOptions())
./circle/lib/libcircle.a(logger.o)
                              src/kernel.o (CLogger::CLogger(unsigned int, CTimer*))
./circle/lib/libcircle.a(machineinfo.o)
                              ./circle/lib/libcircle.a(logger.o) (CMachineInfo::GetMachineName() const)
./circle/lib/libcircle.a(screen.o)
                              src/kernel.o (CScreenDevice::~CScreenDevice())
./circle/lib/libcircle.a(string.o)
                              src/kernel.o (CString::~CString())
./circle/lib/libcircle.a(sysinit.o)
                              src/main.o (halt)
./circle/lib/libcircle.a(timer.o)
                              src/kernel.o (CTimer::CTimer(CInterruptSystem*))
./circle/lib/libcircle.a(util.o)
                              ./circle/lib/usb/libusb.a(usbmassdevice.o) (memset)
./circle/lib/libcircle.a(util_fast.o)
                              ./circle/lib/usb/libusb.a(usbmassdevice.o) (memcpy)
./circle/lib/libcircle.a(virtualgpiopin.o)
                              ./circle/lib/libcircle.a(actled.o) (CVirtualGPIOPin::CVirtualGPIOPin(unsigned int))
./circle/lib/libcircle.a(exceptionhandler.o)
                              src/kernel.o (CExceptionHandler::CExceptionHandler())
./circle/lib/libcircle.a(exceptionstub.o)
                              ./circle/lib/libcircle.a(exceptionhandler.o) (PrefetchAbortStub)
./circle/lib/libcircle.a(memory.o)
                              src/kernel.o (CMemorySystem::~CMemorySystem())
./circle/lib/libcircle.a(pagetable.o)
                              ./circle/lib/libcircle.a(memory.o) (CPageTable::CPageTable(unsigned int))
./circle/lib/libcircle.a(startup.o)
                              (_start)
./circle/lib/libcircle.a(synchronize.o)
                              src/rdserial.o (EnterCritical)
./circle/lib/libcircle.a(new.o)
                              ./circle/lib/usb/libusb.a(dwhcixferstagedata.o) (operator new(unsigned int))
./circle/lib/libcircle.a(purecall.o)
                              ./circle/lib/usb/libusb.a(usbhostcontroller.o) (__cxa_pure_virtual)
./circle/lib/libcircle.a(alloc.o)
                              ./circle/lib/libcircle.a(memory.o) (mem_init)
./circle/lib/libcircle.a(bcmframebuffer.o)
                              ./circle/lib/libcircle.a(screen.o) (CBcmFrameBuffer::CBcmFrameBuffer(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int))
./circle/lib/libcircle.a(bcmmailbox.o)
                              ./circle/lib/libcircle.a(bcmpropertytags.o) (CBcmMailBox::CBcmMailBox(unsigned int))
./circle/lib/libcircle.a(chargenerator.o)
                              ./circle/lib/libcircle.a(screen.o) (CCharGenerator::CCharGenerator())
./circle/lib/libcircle.a(delayloop.o)
                              ./circle/lib/libcircle.a(timer.o) (DelayLoop)
./circle/lib/libcircle.a(gpiomanager.o)
                              ./circle/lib/libcircle.a(gpiopin.o) (CGPIOManager::ConnectInterrupt(CGPIOPin*))
./circle/lib/libcircle.a(ptrlist.o)
                              ./circle/lib/libcircle.a(timer.o) (CPtrList::CPtrList())

Discarded input sections

 .group         0x00000000        0x8 ./circle/lib/usb/libusb.a(usbgamepadstandard.o)
 .group         0x00000000        0x8 ./circle/lib/usb/libusb.a(usbgamepadstandard.o)
 .group         0x00000000        0x8 ./circle/lib/usb/libusb.a(usbgamepadstandard.o)
 .group         0x00000000        0x8 ./circle/lib/usb/libusb.a(usbgamepadstandard.o)
 .group         0x00000000        0x8 ./circle/lib/usb/libusb.a(usbgamepadps3.o)
 .group         0x00000000        0x8 ./circle/lib/usb/libusb.a(usbgamepadps3.o)
 .text._ZN17CUSBGamePadDevice10SetLEDModeEjhh
                0x00000000        0x8 ./circle/lib/usb/libusb.a(usbgamepadps3.o)
 .group         0x00000000        0x8 ./circle/lib/usb/libusb.a(usbgamepadps4.o)
 .group         0x00000000        0x8 ./circle/lib/usb/libusb.a(usbgamepadxbox360.o)
 .group         0x00000000        0x8 ./circle/lib/usb/libusb.a(usbgamepadxbox360.o)
 .text._ZN17CUSBGamePadDevice10SetLEDModeEjhh
                0x00000000        0x8 ./circle/lib/usb/libusb.a(usbgamepadxbox360.o)
 .group         0x00000000        0x8 ./circle/lib/usb/libusb.a(usbgamepadxboxone.o)
 .group         0x00000000        0x8 ./circle/lib/usb/libusb.a(usbgamepadxboxone.o)
 .group         0x00000000        0x8 ./circle/lib/usb/libusb.a(usbgamepadxboxone.o)
 .text._ZN17CUSBGamePadDevice10SetLEDModeE15TGamePadLEDMode
                0x00000000        0x8 ./circle/lib/usb/libusb.a(usbgamepadxboxone.o)
 .text._ZN17CUSBGamePadDevice10SetLEDModeEjhh
                0x00000000        0x8 ./circle/lib/usb/libusb.a(usbgamepadxboxone.o)
 .group         0x00000000        0x8 ./circle/lib/usb/libusb.a(usbgamepadswitchpro.o)
 .group         0x00000000        0x8 ./circle/lib/usb/libusb.a(usbgamepadswitchpro.o)
 .text._ZN17CUSBGamePadDevice10SetLEDModeEjhh
                0x00000000        0x8 ./circle/lib/usb/libusb.a(usbgamepadswitchpro.o)
 .group         0x00000000        0x8 ./circle/lib/usb/libusb.a(usbcdcethernet.o)
 .group         0x00000000        0x8 ./circle/lib/usb/libusb.a(usbcdcethernet.o)
 .group         0x00000000        0x8 ./circle/lib/usb/libusb.a(netdevice.o)
 .group         0x00000000        0x8 ./circle/lib/usb/libusb.a(netdevice.o)
 .text._ZN10CNetDevice8IsLinkUpEv
                0x00000000        0x8 ./circle/lib/usb/libusb.a(netdevice.o)
 .text._ZN10CNetDevice12GetLinkSpeedEv
                0x00000000        0x8 ./circle/lib/usb/libusb.a(netdevice.o)
 .group         0x00000000        0x8 ./circle/lib/usb/libusb.a(usbgamepad.o)
 .group         0x00000000        0x8 ./circle/lib/usb/libusb.a(usbgamepad.o)
 .group         0x00000000        0x8 ./circle/lib/usb/libusb.a(usbgamepad.o)
 .group         0x00000000        0x8 ./circle/lib/usb/libusb.a(usbgamepad.o)
 .text._ZN17CUSBGamePadDevice13GetPropertiesEv
                0x00000000        0x8 ./circle/lib/usb/libusb.a(usbgamepad.o)
 .text._ZN17CUSBGamePadDevice10SetLEDModeE15TGamePadLEDMode
                0x00000000        0x8 ./circle/lib/usb/libusb.a(usbgamepad.o)
 .text._ZN17CUSBGamePadDevice10SetLEDModeEjhh
                0x00000000        0x8 ./circle/lib/usb/libusb.a(usbgamepad.o)
 .text._ZN17CUSBGamePadDevice13SetRumbleModeE18TGamePadRumbleMode
                0x00000000        0x8 ./circle/lib/usb/libusb.a(usbgamepad.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x00000000         0xffffffff

Linker script and memory map

Address of section .init set to 0x8000

.init           0x00008000       0x64
 *(.init)
 .init          0x00008000       0x64 ./circle/lib/libcircle.a(startup.o)
                0x00008000                _start

.text           0x00008068    0x1ac8c
 *(.text*)
 .text          0x00008068        0x0 src/main.o
 .text.startup  0x00008068       0x44 src/main.o
                0x00008068                main
 .text          0x000080ac      0x5f4 src/kernel.o
                0x000080ac                CKernel::miniHDLCPutCh(unsigned char)
                0x000080b0                CKernel::miniHDLCFrameRx(unsigned char const*, int)
                0x00008124                CKernel::ShutdownHandler()
                0x00008170                CKernel::CKernel()
                0x00008170                CKernel::CKernel()
                0x00008284                CKernel::Initialize()
                0x00008330                CKernel::~CKernel()
                0x00008330                CKernel::~CKernel()
                0x000083c0                CKernel::KeyPressedHandler(char const*)
                0x0000841c                CKernel::Run()
                0x000085a4                CKernel::KeyStatusHandlerRaw(unsigned char, unsigned char const*)
 .text          0x000086a0      0xcbc src/rdserial.o
                0x000086a0                CRdSerialDevice::Read(void*, unsigned int)
                0x0000886c                CRdSerialDevice::CRdSerialDevice(CInterruptSystem*, bool)
                0x0000886c                CRdSerialDevice::CRdSerialDevice(CInterruptSystem*, bool)
                0x0000892c                CRdSerialDevice::Initialize(unsigned int)
                0x00008ae4                CRdSerialDevice::GetOptions() const
                0x00008af0                CRdSerialDevice::SetOptions(unsigned int)
                0x00008afc                CRdSerialDevice::RegisterMagicReceivedHandler(char const*, void (*)())
                0x00008bdc                CRdSerialDevice::AvailableForWrite()
                0x00008c64                CRdSerialDevice::AvailableForRead()
                0x00008ce8                CRdSerialDevice::Peek()
                0x00008d94                CRdSerialDevice::Flush()
                0x00008db8                CRdSerialDevice::Write(unsigned char)
                0x00008ea0                CRdSerialDevice::Write(void const*, unsigned int)
                0x00009058                CRdSerialDevice::InterruptHandler()
                0x0000923c                CRdSerialDevice::InterruptStub(void*)
                0x0000927c                CRdSerialDevice::~CRdSerialDevice()
                0x0000927c                CRdSerialDevice::~CRdSerialDevice()
                0x00009338                CRdSerialDevice::~CRdSerialDevice()
 .text          0x0000935c      0x428 src/MiniHDLC.o
                0x000093e8                MiniHDLC::MiniHDLC(void (*)(unsigned char), void (*)(unsigned char const*, int), bool, bool)
                0x000093e8                MiniHDLC::MiniHDLC(void (*)(unsigned char), void (*)(unsigned char const*, int), bool, bool)
                0x00009430                MiniHDLC::handleChar(unsigned char)
                0x000094d0                MiniHDLC::handleBit(unsigned char)
                0x00009554                MiniHDLC::handleBuffer(unsigned char*, int)
                0x00009584                MiniHDLC::crcUpdateCCITT(unsigned short, unsigned char)
                0x000095a4                MiniHDLC::sendChar(unsigned char)
                0x00009600                MiniHDLC::sendCharWithStuffing(unsigned char)
                0x00009694                MiniHDLC::sendEscaped(unsigned char)
                0x000096d8                MiniHDLC::sendFrame(unsigned char const*, int)
 .text          0x00009784      0x114 c:/program files (x86)/gnu tools arm embedded/7 2017-q4-major/bin/../lib/gcc/arm-none-eabi/7.2.1/hard/libgcc.a(_udivsi3.o)
                0x00009784                __aeabi_uidiv
                0x00009784                __udivsi3
                0x00009878                __aeabi_uidivmod
 .text          0x00009898        0x4 c:/program files (x86)/gnu tools arm embedded/7 2017-q4-major/bin/../lib/gcc/arm-none-eabi/7.2.1/hard/libgcc.a(_dvmd_tls.o)
                0x00009898                __aeabi_idiv0
                0x00009898                __aeabi_ldiv0
 .text          0x0000989c     0x2688 ./circle/lib/usb/libusb.a(dwhcidevice.o)
                0x0000989c                CDWHCIDevice::CompletionRoutine(CUSBRequest*, void*, void*)
                0x000098fc                CDWHCIDevice::~CDWHCIDevice()
                0x000098fc                CDWHCIDevice::~CDWHCIDevice()
                0x00009930                CDWHCIDevice::~CDWHCIDevice()
                0x000099cc                CDWHCIDevice::CDWHCIDevice(CInterruptSystem*, CTimer*)
                0x000099cc                CDWHCIDevice::CDWHCIDevice(CInterruptSystem*, CTimer*)
                0x00009aa8                CDWHCIDevice::GetPortSpeed()
                0x00009afc                CDWHCIDevice::OvercurrentDetected()
                0x00009b38                CDWHCIDevice::DisableRootPort()
                0x00009b7c                CDWHCIDevice::PowerOn()
                0x00009be4                CDWHCIDevice::EnableGlobalInterrupts()
                0x00009c28                CDWHCIDevice::EnableCommonInterrupts()
                0x00009c60                CDWHCIDevice::EnableHostInterrupts()
                0x00009cbc                CDWHCIDevice::EnableChannelInterrupt(unsigned int)
                0x00009d30                CDWHCIDevice::DisableChannelInterrupt(unsigned int)
                0x00009da4                CDWHCIDevice::StartChannel(CDWHCITransferStageData*)
                0x0000a17c                CDWHCIDevice::StartTransaction(CDWHCITransferStageData*)
                0x0000a298                CDWHCIDevice::TimerHandler(CDWHCITransferStageData*)
                0x0000a35c                CDWHCIDevice::TimerStub(unsigned int, void*, void*)
                0x0000a3cc                CDWHCIDevice::AllocateChannel()
                0x0000a4a4                CDWHCIDevice::FreeChannel(unsigned int)
                0x0000a540                CDWHCIDevice::TransferStageAsync(CUSBRequest*, bool, bool, unsigned int)
                0x0000a6a8                CDWHCIDevice::SubmitAsyncRequest(CUSBRequest*, unsigned int)
                0x0000a788                CDWHCIDevice::ChannelInterruptHandler(unsigned int)
                0x0000acc8                CDWHCIDevice::InterruptHandler()
                0x0000adc8                CDWHCIDevice::InterruptStub(void*)
                0x0000ae08                CDWHCIDevice::AllocateWaitBlock()
                0x0000ae7c                CDWHCIDevice::FreeWaitBlock(unsigned int)
                0x0000af14                CDWHCIDevice::TransferStage(CUSBRequest*, bool, bool, unsigned int)
                0x0000b028                CDWHCIDevice::SubmitBlockingRequest(CUSBRequest*, unsigned int)
                0x0000b2dc                CDWHCIDevice::WaitForBit(CDWHCIRegister*, unsigned int, bool, unsigned int)
                0x0000b3dc                CDWHCIDevice::EnableRootPort()
                0x0000b498                CDWHCIDevice::Reset()
                0x0000b538                CDWHCIDevice::InitCore()
                0x0000b794                CDWHCIDevice::FlushTxFIFO(unsigned int)
                0x0000b830                CDWHCIDevice::FlushRxFIFO()
                0x0000b8b0                CDWHCIDevice::InitHost()
                0x0000bab0                CDWHCIDevice::Initialize()
                0x0000bd1c                CDWHCIDevice::DumpRegister(char const*, unsigned int)
                0x0000bd7c                CDWHCIDevice::DumpStatus(unsigned int)
 .text          0x0000bf24      0x2f8 ./circle/lib/usb/libusb.a(dwhciregister.o)
                0x0000bf24                CDWHCIRegister::CDWHCIRegister(unsigned int)
                0x0000bf24                CDWHCIRegister::CDWHCIRegister(unsigned int)
                0x0000bf34                CDWHCIRegister::CDWHCIRegister(unsigned int, unsigned int)
                0x0000bf34                CDWHCIRegister::CDWHCIRegister(unsigned int, unsigned int)
                0x0000bf44                CDWHCIRegister::~CDWHCIRegister()
                0x0000bf44                CDWHCIRegister::~CDWHCIRegister()
                0x0000bf48                CDWHCIRegister::Read()
                0x0000bf64                CDWHCIRegister::Write()
                0x0000bfa0                CDWHCIRegister::Get() const
                0x0000bfd4                CDWHCIRegister::Set(unsigned int)
                0x0000bfe4                CDWHCIRegister::IsSet(unsigned int) const
                0x0000c028                CDWHCIRegister::And(unsigned int)
                0x0000c068                CDWHCIRegister::Or(unsigned int)
                0x0000c0a8                CDWHCIRegister::ClearBit(unsigned int)
                0x0000c10c                CDWHCIRegister::SetBit(unsigned int)
                0x0000c170                CDWHCIRegister::ClearAll()
                0x0000c184                CDWHCIRegister::SetAll()
                0x0000c198                CDWHCIRegister::Dump() const
 .text          0x0000c21c      0xbdc ./circle/lib/usb/libusb.a(dwhcixferstagedata.o)
                0x0000c21c                CDWHCITransferStageData::~CDWHCITransferStageData()
                0x0000c21c                CDWHCITransferStageData::~CDWHCITransferStageData()
                0x0000c260                CDWHCITransferStageData::SetChannelNumber(unsigned int)
                0x0000c268                CDWHCITransferStageData::TransactionComplete(unsigned int, unsigned int, unsigned int)
                0x0000c424                CDWHCITransferStageData::SetSplitComplete(bool)
                0x0000c45c                CDWHCITransferStageData::SetState(unsigned int)
                0x0000c464                CDWHCITransferStageData::GetState() const
                0x0000c46c                CDWHCITransferStageData::SetSubState(unsigned int)
                0x0000c474                CDWHCITransferStageData::GetSubState() const
                0x0000c47c                CDWHCITransferStageData::BeginSplitCycle()
                0x0000c484                CDWHCITransferStageData::GetChannelNumber() const
                0x0000c48c                CDWHCITransferStageData::IsPeriodic() const
                0x0000c4dc                CDWHCITransferStageData::CDWHCITransferStageData(unsigned int, CUSBRequest*, bool, bool, unsigned int)
                0x0000c4dc                CDWHCITransferStageData::CDWHCITransferStageData(unsigned int, CUSBRequest*, bool, bool, unsigned int)
                0x0000c7fc                CDWHCITransferStageData::GetDeviceAddress() const
                0x0000c844                CDWHCITransferStageData::GetEndpointType() const
                0x0000c8c4                CDWHCITransferStageData::GetEndpointNumber() const
                0x0000c90c                CDWHCITransferStageData::GetMaxPacketSize() const
                0x0000c914                CDWHCITransferStageData::GetSpeed() const
                0x0000c91c                CDWHCITransferStageData::GetPID() const
                0x0000c9a0                CDWHCITransferStageData::IsDirectionIn() const
                0x0000c9a8                CDWHCITransferStageData::IsStatusStage() const
                0x0000c9b0                CDWHCITransferStageData::GetDMAAddress() const
                0x0000c9f4                CDWHCITransferStageData::GetBytesToTransfer() const
                0x0000c9fc                CDWHCITransferStageData::GetPacketsToTransfer() const
                0x0000ca04                CDWHCITransferStageData::IsSplit() const
                0x0000ca0c                CDWHCITransferStageData::IsSplitComplete() const
                0x0000ca44                CDWHCITransferStageData::GetHubAddress() const
                0x0000cab4                CDWHCITransferStageData::GetHubPortAddress() const
                0x0000cb24                CDWHCITransferStageData::GetSplitPosition() const
                0x0000cb2c                CDWHCITransferStageData::GetStatusMask() const
                0x0000cb60                CDWHCITransferStageData::GetTransactionStatus() const
                0x0000cba4                CDWHCITransferStageData::IsStageComplete() const
                0x0000cbb4                CDWHCITransferStageData::GetResultLen() const
                0x0000cbc8                CDWHCITransferStageData::IsTimeout() const
                0x0000cc08                CDWHCITransferStageData::GetURB() const
                0x0000cc48                CDWHCITransferStageData::GetFrameScheduler() const
                0x0000cc50                CDWHCITransferStageData::operator new(unsigned int)
                0x0000ccb4                CDWHCITransferStageData::operator delete(void*, unsigned int)
                0x0000cd24                CDWHCITransferStageData::InitAllocator(unsigned int)
                0x0000cd84                CDWHCITransferStageData::InitProtectedAllocator(unsigned int, unsigned int)
 .text          0x0000cdf8      0xf18 ./circle/lib/usb/libusb.a(usbdevice.o)
                0x0000cdf8                CUSBDevice::~CUSBDevice()
                0x0000cdf8                CUSBDevice::~CUSBDevice()
                0x0000ceac                CUSBDevice::~CUSBDevice()
                0x0000cecc                CUSBDevice::CUSBDevice(CUSBHostController*, TUSBSpeed, bool, unsigned char, unsigned char)
                0x0000cecc                CUSBDevice::CUSBDevice(CUSBHostController*, TUSBSpeed, bool, unsigned char, unsigned char)
                0x0000cfb0                CUSBDevice::GetName(TDeviceNameSelector) const
                0x0000d0cc                CUSBDevice::GetNames() const
                0x0000d20c                CUSBDevice::SetAddress(unsigned char)
                0x0000d244                CUSBDevice::GetAddress() const
                0x0000d24c                CUSBDevice::GetSpeed() const
                0x0000d254                CUSBDevice::IsSplit() const
                0x0000d25c                CUSBDevice::GetHubAddress() const
                0x0000d264                CUSBDevice::GetHubPortNumber() const
                0x0000d26c                CUSBDevice::GetEndpoint0() const
                0x0000d2b0                CUSBDevice::GetHost() const
                0x0000d2f4                CUSBDevice::GetDeviceDescriptor() const
                0x0000d338                CUSBDevice::GetConfigurationDescriptor() const
                0x0000d37c                CUSBDevice::GetDescriptor(unsigned char)
                0x0000d3cc                CUSBDevice::ConfigurationError(char const*) const
                0x0000d41c                CUSBDevice::LogWrite(TLogSeverity, char const*, ...)
                0x0000d4d4                CUSBDevice::Initialize()
                0x0000dc08                CUSBDevice::Configure()
 .text          0x0000dd10      0x48c ./circle/lib/usb/libusb.a(usbendpoint.o)
                0x0000dd10                CUSBEndpoint::CUSBEndpoint(CUSBDevice*)
                0x0000dd10                CUSBEndpoint::CUSBEndpoint(CUSBDevice*)
                0x0000dd70                CUSBEndpoint::CUSBEndpoint(CUSBDevice*, TUSBEndpointDescriptor const*)
                0x0000dd70                CUSBEndpoint::CUSBEndpoint(CUSBDevice*, TUSBEndpointDescriptor const*)
                0x0000df2c                CUSBEndpoint::CUSBEndpoint(CUSBEndpoint*, CUSBDevice*)
                0x0000df2c                CUSBEndpoint::CUSBEndpoint(CUSBEndpoint*, CUSBDevice*)
                0x0000dfb8                CUSBEndpoint::~CUSBEndpoint()
                0x0000dfb8                CUSBEndpoint::~CUSBEndpoint()
                0x0000dfbc                CUSBEndpoint::GetDevice() const
                0x0000dffc                CUSBEndpoint::GetNumber() const
                0x0000e004                CUSBEndpoint::GetType() const
                0x0000e00c                CUSBEndpoint::IsDirectionIn() const
                0x0000e014                CUSBEndpoint::SetMaxPacketSize(unsigned int)
                0x0000e01c                CUSBEndpoint::GetMaxPacketSize() const
                0x0000e024                CUSBEndpoint::GetInterval() const
                0x0000e058                CUSBEndpoint::GetNextPID(bool)
                0x0000e0a0                CUSBEndpoint::SkipPID(unsigned int, bool)
                0x0000e164                CUSBEndpoint::ResetPID()
 .text          0x0000e19c      0x228 ./circle/lib/usb/libusb.a(usbhostcontroller.o)
                0x0000e19c                CUSBHostController::CUSBHostController()
                0x0000e19c                CUSBHostController::CUSBHostController()
                0x0000e1ac                CUSBHostController::~CUSBHostController()
                0x0000e1ac                CUSBHostController::~CUSBHostController()
                0x0000e1b0                CUSBHostController::~CUSBHostController()
                0x0000e1c8                CUSBHostController::ControlMessage(CUSBEndpoint*, unsigned char, unsigned char, unsigned short, unsigned short, void*, unsigned short)
                0x0000e290                CUSBHostController::GetDescriptor(CUSBEndpoint*, unsigned char, unsigned char, void*, unsigned int, unsigned char, unsigned short)
                0x0000e2c8                CUSBHostController::SetAddress(CUSBEndpoint*, unsigned char)
                0x0000e314                CUSBHostController::SetConfiguration(CUSBEndpoint*, unsigned char)
                0x0000e360                CUSBHostController::Transfer(CUSBEndpoint*, void*, unsigned int, unsigned int)
 .text          0x0000e3c4      0x3f4 ./circle/lib/usb/libusb.a(usbrequest.o)
                0x0000e3c4                CUSBRequest::CUSBRequest(CUSBEndpoint*, void*, unsigned int, TSetupData*)
                0x0000e3c4                CUSBRequest::CUSBRequest(CUSBEndpoint*, void*, unsigned int, TSetupData*)
                0x0000e458                CUSBRequest::~CUSBRequest()
                0x0000e458                CUSBRequest::~CUSBRequest()
                0x0000e45c                CUSBRequest::GetEndpoint() const
                0x0000e49c                CUSBRequest::SetStatus(int)
                0x0000e4a4                CUSBRequest::SetResultLen(unsigned int)
                0x0000e4ac                CUSBRequest::GetStatus() const
                0x0000e4b4                CUSBRequest::GetResultLength() const
                0x0000e4e8                CUSBRequest::GetSetupData()
                0x0000e544                CUSBRequest::GetBuffer()
                0x0000e590                CUSBRequest::GetBufLen() const
                0x0000e598                CUSBRequest::SetCompletionRoutine(void (*)(CUSBRequest*, void*, void*), void*, void*)
                0x0000e5c4                CUSBRequest::CallCompletionRoutine()
                0x0000e60c                CUSBRequest::SetCompleteOnNAK()
                0x0000e618                CUSBRequest::IsCompleteOnNAK() const
                0x0000e620                CUSBRequest::operator new(unsigned int)
                0x0000e680                CUSBRequest::operator delete(void*, unsigned int)
                0x0000e6ec                CUSBRequest::InitAllocator(unsigned int)
                0x0000e748                CUSBRequest::InitProtectedAllocator(unsigned int, unsigned int)
 .text          0x0000e7b8      0x474 ./circle/lib/usb/libusb.a(usbdevicefactory.o)
                0x0000e7b8                CUSBDeviceFactory::GetDevice(CUSBFunction*, CString*)
 .text          0x0000ec2c      0xabc ./circle/lib/usb/libusb.a(usbstandardhub.o)
                0x0000ec2c                CUSBStandardHub::~CUSBStandardHub()
                0x0000ec2c                CUSBStandardHub::~CUSBStandardHub()
                0x0000ecc4                CUSBStandardHub::~CUSBStandardHub()
                0x0000ece4                CUSBStandardHub::CUSBStandardHub(CUSBFunction*)
                0x0000ece4                CUSBStandardHub::CUSBStandardHub(CUSBFunction*)
                0x0000ed30                CUSBStandardHub::EnumeratePorts()
                0x0000f4d0                CUSBStandardHub::Configure()
 .text          0x0000f6e8      0xcf4 ./circle/lib/usb/libusb.a(usbmassdevice.o)
                0x0000f6e8                CUSBBulkOnlyMassStorageDevice::Seek(unsigned long long)
                0x0000f6f8                CUSBBulkOnlyMassStorageDevice::~CUSBBulkOnlyMassStorageDevice()
                0x0000f6f8                CUSBBulkOnlyMassStorageDevice::~CUSBBulkOnlyMassStorageDevice()
                0x0000f794                CUSBBulkOnlyMassStorageDevice::~CUSBBulkOnlyMassStorageDevice()
                0x0000f7b4                CUSBBulkOnlyMassStorageDevice::CUSBBulkOnlyMassStorageDevice(CUSBFunction*)
                0x0000f7b4                CUSBBulkOnlyMassStorageDevice::CUSBBulkOnlyMassStorageDevice(CUSBFunction*)
                0x0000f7f8                CUSBBulkOnlyMassStorageDevice::GetCapacity() const
                0x0000f800                CUSBBulkOnlyMassStorageDevice::Command(void*, unsigned int, void*, unsigned int, bool)
                0x0000facc                CUSBBulkOnlyMassStorageDevice::TryRead(void*, unsigned int)
                0x0000fc00                CUSBBulkOnlyMassStorageDevice::TryWrite(void const*, unsigned int)
                0x0000fd2c                CUSBBulkOnlyMassStorageDevice::Reset()
                0x0000fe84                CUSBBulkOnlyMassStorageDevice::Read(void*, unsigned int)
                0x0000feec                CUSBBulkOnlyMassStorageDevice::Write(void const*, unsigned int)
                0x0000ff54                CUSBBulkOnlyMassStorageDevice::Configure()
 .text          0x000103dc      0x3b0 ./circle/lib/usb/libusb.a(dwhciframeschednper.o)
                0x000103dc                CDWHCIFrameSchedulerNonPeriodic::~CDWHCIFrameSchedulerNonPeriodic()
                0x000103dc                CDWHCIFrameSchedulerNonPeriodic::~CDWHCIFrameSchedulerNonPeriodic()
                0x000103e0                CDWHCIFrameSchedulerNonPeriodic::StartSplit()
                0x000103ec                CDWHCIFrameSchedulerNonPeriodic::WaitForFrame()
                0x000103f0                CDWHCIFrameSchedulerNonPeriodic::IsOddFrame() const
                0x000103f8                CDWHCIFrameSchedulerNonPeriodic::CompleteSplit()
                0x00010478                CDWHCIFrameSchedulerNonPeriodic::TransactionComplete(unsigned int)
                0x0001058c                CDWHCIFrameSchedulerNonPeriodic::CDWHCIFrameSchedulerNonPeriodic()
                0x0001058c                CDWHCIFrameSchedulerNonPeriodic::CDWHCIFrameSchedulerNonPeriodic()
                0x000105dc                CDWHCIFrameSchedulerNonPeriodic::operator new(unsigned int)
                0x0001063c                CDWHCIFrameSchedulerNonPeriodic::operator delete(void*, unsigned int)
                0x000106a8                CDWHCIFrameSchedulerNonPeriodic::~CDWHCIFrameSchedulerNonPeriodic()
                0x000106c0                CDWHCIFrameSchedulerNonPeriodic::InitAllocator(unsigned int)
                0x0001071c                CDWHCIFrameSchedulerNonPeriodic::InitProtectedAllocator(unsigned int, unsigned int)
 .text          0x0001078c      0x490 ./circle/lib/usb/libusb.a(dwhciframeschedper.o)
                0x0001078c                CDWHCIFrameSchedulerPeriodic::~CDWHCIFrameSchedulerPeriodic()
                0x0001078c                CDWHCIFrameSchedulerPeriodic::~CDWHCIFrameSchedulerPeriodic()
                0x00010790                CDWHCIFrameSchedulerPeriodic::StartSplit()
                0x000107a4                CDWHCIFrameSchedulerPeriodic::IsOddFrame() const
                0x000107b0                CDWHCIFrameSchedulerPeriodic::WaitForFrame()
                0x00010820                CDWHCIFrameSchedulerPeriodic::CompleteSplit()
                0x00010904                CDWHCIFrameSchedulerPeriodic::TransactionComplete(unsigned int)
                0x00010a14                CDWHCIFrameSchedulerPeriodic::CDWHCIFrameSchedulerPeriodic()
                0x00010a14                CDWHCIFrameSchedulerPeriodic::CDWHCIFrameSchedulerPeriodic()
                0x00010a6c                CDWHCIFrameSchedulerPeriodic::operator new(unsigned int)
                0x00010acc                CDWHCIFrameSchedulerPeriodic::operator delete(void*, unsigned int)
                0x00010b38                CDWHCIFrameSchedulerPeriodic::~CDWHCIFrameSchedulerPeriodic()
                0x00010b50                CDWHCIFrameSchedulerPeriodic::InitAllocator(unsigned int)
                0x00010bac                CDWHCIFrameSchedulerPeriodic::InitProtectedAllocator(unsigned int, unsigned int)
 .text          0x00010c1c      0x424 ./circle/lib/usb/libusb.a(usbkeyboard.o)
                0x00010c1c                CUSBKeyboardDevice::~CUSBKeyboardDevice()
                0x00010c1c                CUSBKeyboardDevice::~CUSBKeyboardDevice()
                0x00010c68                CUSBKeyboardDevice::~CUSBKeyboardDevice()
                0x00010c88                CUSBKeyboardDevice::ReportHandler(unsigned char const*, unsigned int)
                0x00010df4                CUSBKeyboardDevice::CUSBKeyboardDevice(CUSBFunction*)
                0x00010df4                CUSBKeyboardDevice::CUSBKeyboardDevice(CUSBFunction*)
                0x00010e3c                CUSBKeyboardDevice::RegisterKeyPressedHandler(void (*)(char const*))
                0x00010e44                CUSBKeyboardDevice::RegisterSelectConsoleHandler(void (*)(unsigned int))
                0x00010e4c                CUSBKeyboardDevice::RegisterShutdownHandler(void (*)())
                0x00010e54                CUSBKeyboardDevice::GetLEDStatus() const
                0x00010e7c                CUSBKeyboardDevice::RegisterKeyStatusHandlerRaw(void (*)(unsigned char, unsigned char const*))
                0x00010eb4                CUSBKeyboardDevice::SetLEDs(unsigned char)
                0x00010f20                CUSBKeyboardDevice::Configure()
                0x00010fb8                CUSBKeyboardDevice::UpdateLEDs()
                0x00011014                CUSBKeyboardDevice::FindByte(unsigned char const*, unsigned char, unsigned int)
 .text          0x00011040      0x1f0 ./circle/lib/usb/libusb.a(dwhcirootport.o)
                0x00011040                CDWHCIRootPort::CDWHCIRootPort(CDWHCIDevice*)
                0x00011040                CDWHCIRootPort::CDWHCIRootPort(CDWHCIDevice*)
                0x00011080                CDWHCIRootPort::~CDWHCIRootPort()
                0x00011080                CDWHCIRootPort::~CDWHCIRootPort()
                0x000110a8                CDWHCIRootPort::Initialize()
 .text          0x00011230      0x8b4 ./circle/lib/usb/libusb.a(usbhiddevice.o)
                0x00011230                CUSBHIDDevice::SendCompletionRoutine(CUSBRequest*, void*, void*)
                0x000112ec                CUSBHIDDevice::CUSBHIDDevice(CUSBFunction*, unsigned int)
                0x000112ec                CUSBHIDDevice::CUSBHIDDevice(CUSBFunction*, unsigned int)
                0x0001133c                CUSBHIDDevice::~CUSBHIDDevice()
                0x0001133c                CUSBHIDDevice::~CUSBHIDDevice()
                0x000113c8                CUSBHIDDevice::~CUSBHIDDevice()
                0x000113e8                CUSBHIDDevice::Configure(unsigned int)
                0x00011644                CUSBHIDDevice::SendToEndpointOut(void const*, unsigned int, unsigned int)
                0x000116e0                CUSBHIDDevice::SendToEndpointOutAsync(void const*, unsigned int, unsigned int)
                0x000117c8                CUSBHIDDevice::ReceiveFromEndpointIn(void*, unsigned int, unsigned int)
                0x00011888                CUSBHIDDevice::StartRequest()
                0x000119b0                CUSBHIDDevice::CompletionRoutine(CUSBRequest*)
                0x00011a9c                CUSBHIDDevice::CompletionStub(CUSBRequest*, void*, void*)
 .text          0x00011ae4      0x22c ./circle/lib/usb/libusb.a(usbmouse.o)
                0x00011ae4                CUSBMouseDevice::~CUSBMouseDevice()
                0x00011ae4                CUSBMouseDevice::~CUSBMouseDevice()
                0x00011b40                CUSBMouseDevice::~CUSBMouseDevice()
                0x00011b60                CUSBMouseDevice::Configure()
                0x00011c94                CUSBMouseDevice::ReportHandler(unsigned char const*, unsigned int)
                0x00011ce0                CUSBMouseDevice::CUSBMouseDevice(CUSBFunction*)
                0x00011ce0                CUSBMouseDevice::CUSBMouseDevice(CUSBFunction*)
 .text          0x00011d10      0x7f0 ./circle/lib/usb/libusb.a(usbgamepadstandard.o)
                0x00011d10                CUSBGamePadStandardDevice::~CUSBGamePadStandardDevice()
                0x00011d10                CUSBGamePadStandardDevice::~CUSBGamePadStandardDevice()
                0x00011d4c                CUSBGamePadStandardDevice::~CUSBGamePadStandardDevice()
                0x00011d6c                CUSBGamePadStandardDevice::CUSBGamePadStandardDevice(CUSBFunction*, bool)
                0x00011d6c                CUSBGamePadStandardDevice::CUSBGamePadStandardDevice(CUSBFunction*, bool)
                0x00011da4                CUSBGamePadStandardDevice::BitGetUnsigned(void const*, unsigned int, unsigned int)
                0x00011eac                CUSBGamePadStandardDevice::BitGetSigned(void const*, unsigned int, unsigned int)
                0x00011ed4                CUSBGamePadStandardDevice::DecodeReport(unsigned char const*)
                0x00012358                CUSBGamePadStandardDevice::Configure()
 .text._ZN17CUSBGamePadDevice13GetPropertiesEv
                0x00012500        0x8 ./circle/lib/usb/libusb.a(usbgamepadstandard.o)
                0x00012500                CUSBGamePadDevice::GetProperties()
 .text._ZN17CUSBGamePadDevice10SetLEDModeE15TGamePadLEDMode
                0x00012508        0x8 ./circle/lib/usb/libusb.a(usbgamepadstandard.o)
                0x00012508                CUSBGamePadDevice::SetLEDMode(TGamePadLEDMode)
 .text._ZN17CUSBGamePadDevice10SetLEDModeEjhh
                0x00012510        0x8 ./circle/lib/usb/libusb.a(usbgamepadstandard.o)
                0x00012510                CUSBGamePadDevice::SetLEDMode(unsigned int, unsigned char, unsigned char)
 .text._ZN17CUSBGamePadDevice13SetRumbleModeE18TGamePadRumbleMode
                0x00012518        0x8 ./circle/lib/usb/libusb.a(usbgamepadstandard.o)
                0x00012518                CUSBGamePadDevice::SetRumbleMode(TGamePadRumbleMode)
 .text          0x00012520      0x568 ./circle/lib/usb/libusb.a(usbgamepadps3.o)
                0x00012520                CUSBGamePadPS3Device::~CUSBGamePadPS3Device()
                0x00012520                CUSBGamePadPS3Device::~CUSBGamePadPS3Device()
                0x00012540                CUSBGamePadPS3Device::~CUSBGamePadPS3Device()
                0x0001256c                CUSBGamePadPS3Device::SetRumbleMode(TGamePadRumbleMode)
                0x00012684                CUSBGamePadPS3Device::SetLEDMode(TGamePadLEDMode)
                0x0001271c                CUSBGamePadPS3Device::CUSBGamePadPS3Device(CUSBFunction*)
                0x0001271c                CUSBGamePadPS3Device::CUSBGamePadPS3Device(CUSBFunction*)
                0x0001276c                CUSBGamePadPS3Device::PS3Enable()
                0x000127fc                CUSBGamePadPS3Device::Configure()
                0x0001291c                CUSBGamePadPS3Device::DecodeReport(unsigned char const*)
 .text._ZN20CUSBGamePadPS3Device13GetPropertiesEv
                0x00012a88        0x8 ./circle/lib/usb/libusb.a(usbgamepadps3.o)
                0x00012a88                CUSBGamePadPS3Device::GetProperties()
 .text          0x00012a90      0x890 ./circle/lib/usb/libusb.a(usbgamepadps4.o)
                0x00012a90                CUSBGamePadPS4Device::DecodeReport(unsigned char const*)
                0x00012c44                CUSBGamePadPS4Device::~CUSBGamePadPS4Device()
                0x00012c44                CUSBGamePadPS4Device::~CUSBGamePadPS4Device()
                0x00012c90                CUSBGamePadPS4Device::~CUSBGamePadPS4Device()
                0x00012cb0                CUSBGamePadPS4Device::CUSBGamePadPS4Device(CUSBFunction*)
                0x00012cb0                CUSBGamePadPS4Device::CUSBGamePadPS4Device(CUSBFunction*)
                0x00012cfc                CUSBGamePadPS4Device::HandleTouchpad(unsigned char const*)
                0x00012ed0                CUSBGamePadPS4Device::ReportHandler(unsigned char const*, unsigned int)
                0x00012f38                CUSBGamePadPS4Device::SendLedRumbleCommand()
                0x00012fd8                CUSBGamePadPS4Device::SetLEDMode(TGamePadLEDMode)
                0x00013118                CUSBGamePadPS4Device::SetLEDMode(unsigned int, unsigned char, unsigned char)
                0x00013140                CUSBGamePadPS4Device::SetRumbleMode(TGamePadRumbleMode)
                0x000131ac                CUSBGamePadPS4Device::DisableTouchpad()
                0x000131c0                CUSBGamePadPS4Device::Configure()
 .text._ZN20CUSBGamePadPS4Device13GetPropertiesEv
                0x00013320        0x8 ./circle/lib/usb/libusb.a(usbgamepadps4.o)
                0x00013320                CUSBGamePadPS4Device::GetProperties()
 .text          0x00013328      0x3b0 ./circle/lib/usb/libusb.a(usbgamepadxbox360.o)
                0x00013328                CUSBGamePadXbox360Device::~CUSBGamePadXbox360Device()
                0x00013328                CUSBGamePadXbox360Device::~CUSBGamePadXbox360Device()
                0x00013348                CUSBGamePadXbox360Device::~CUSBGamePadXbox360Device()
                0x00013374                CUSBGamePadXbox360Device::DecodeReport(unsigned char const*)
                0x000134a8                CUSBGamePadXbox360Device::ReportHandler(unsigned char const*, unsigned int)
                0x00013514                CUSBGamePadXbox360Device::SetLEDMode(TGamePadLEDMode)
                0x00013568                CUSBGamePadXbox360Device::SetRumbleMode(TGamePadRumbleMode)
                0x000135f8                CUSBGamePadXbox360Device::CUSBGamePadXbox360Device(CUSBFunction*)
                0x000135f8                CUSBGamePadXbox360Device::CUSBGamePadXbox360Device(CUSBFunction*)
                0x00013618                CUSBGamePadXbox360Device::Configure()
 .text._ZN24CUSBGamePadXbox360Device13GetPropertiesEv
                0x000136d8        0x8 ./circle/lib/usb/libusb.a(usbgamepadxbox360.o)
                0x000136d8                CUSBGamePadXbox360Device::GetProperties()
 .text          0x000136e0      0x4ac ./circle/lib/usb/libusb.a(usbgamepadxboxone.o)
                0x000136e0                CUSBGamePadXboxOneDevice::DecodeReport(unsigned char const*)
                0x00013890                CUSBGamePadXboxOneDevice::~CUSBGamePadXboxOneDevice()
                0x00013890                CUSBGamePadXboxOneDevice::~CUSBGamePadXboxOneDevice()
                0x000138b0                CUSBGamePadXboxOneDevice::~CUSBGamePadXboxOneDevice()
                0x000138dc                CUSBGamePadXboxOneDevice::ReportHandler(unsigned char const*, unsigned int)
                0x000139c4                CUSBGamePadXboxOneDevice::SetRumbleMode(TGamePadRumbleMode)
                0x00013a64                CUSBGamePadXboxOneDevice::CUSBGamePadXboxOneDevice(CUSBFunction*)
                0x00013a64                CUSBGamePadXboxOneDevice::CUSBGamePadXboxOneDevice(CUSBFunction*)
                0x00013a8c                CUSBGamePadXboxOneDevice::Configure()
 .text._ZN24CUSBGamePadXboxOneDevice13GetPropertiesEv
                0x00013b8c        0x8 ./circle/lib/usb/libusb.a(usbgamepadxboxone.o)
                0x00013b8c                CUSBGamePadXboxOneDevice::GetProperties()
 .text          0x00013b94      0x67c ./circle/lib/usb/libusb.a(usbgamepadswitchpro.o)
                0x00013b94                CUSBGamePadSwitchProDevice::~CUSBGamePadSwitchProDevice()
                0x00013b94                CUSBGamePadSwitchProDevice::~CUSBGamePadSwitchProDevice()
                0x00013bb4                CUSBGamePadSwitchProDevice::~CUSBGamePadSwitchProDevice()
                0x00013be0                CUSBGamePadSwitchProDevice::DecodeReport(unsigned char const*)
                0x00013da0                CUSBGamePadSwitchProDevice::SetLEDMode(TGamePadLEDMode)
                0x00013e1c                CUSBGamePadSwitchProDevice::SetRumbleMode(TGamePadRumbleMode)
                0x00013f08                CUSBGamePadSwitchProDevice::CUSBGamePadSwitchProDevice(CUSBFunction*)
                0x00013f08                CUSBGamePadSwitchProDevice::CUSBGamePadSwitchProDevice(CUSBFunction*)
                0x00013f48                CUSBGamePadSwitchProDevice::Configure()
 .text._ZN26CUSBGamePadSwitchProDevice13GetPropertiesEv
                0x00014210        0x8 ./circle/lib/usb/libusb.a(usbgamepadswitchpro.o)
                0x00014210                CUSBGamePadSwitchProDevice::GetProperties()
 .text          0x00014218      0x71c ./circle/lib/usb/libusb.a(usbfunction.o)
                0x00014218                CUSBFunction::Initialize()
                0x00014220                CUSBFunction::~CUSBFunction()
                0x00014220                CUSBFunction::~CUSBFunction()
                0x00014278                CUSBFunction::~CUSBFunction()
                0x00014298                CUSBFunction::CUSBFunction(CUSBDevice*, CUSBConfigurationParser*)
                0x00014298                CUSBFunction::CUSBFunction(CUSBDevice*, CUSBConfigurationParser*)
                0x00014358                CUSBFunction::CUSBFunction(CUSBFunction*)
                0x00014358                CUSBFunction::CUSBFunction(CUSBFunction*)
                0x0001445c                CUSBFunction::GetInterfaceName() const
                0x000144c8                CUSBFunction::GetNumEndpoints() const
                0x00014508                CUSBFunction::GetDevice() const
                0x00014548                CUSBFunction::GetEndpoint0() const
                0x0001458c                CUSBFunction::GetHost() const
                0x000145d0                CUSBFunction::Configure()
                0x00014694                CUSBFunction::GetDescriptor(unsigned char)
                0x000146e0                CUSBFunction::ConfigurationError(char const*) const
                0x00014750                CUSBFunction::SelectInterfaceByClass(unsigned char, unsigned char, unsigned char)
                0x00014834                CUSBFunction::GetInterfaceNumber() const
                0x00014874                CUSBFunction::GetInterfaceClass() const
                0x000148b4                CUSBFunction::GetInterfaceSubClass() const
                0x000148f4                CUSBFunction::GetInterfaceProtocol() const
 .text          0x00014934      0x29c ./circle/lib/usb/libusb.a(dwhciframeschednsplit.o)
                0x00014934                CDWHCIFrameSchedulerNoSplit::~CDWHCIFrameSchedulerNoSplit()
                0x00014934                CDWHCIFrameSchedulerNoSplit::~CDWHCIFrameSchedulerNoSplit()
                0x00014938                CDWHCIFrameSchedulerNoSplit::IsOddFrame() const
                0x00014944                CDWHCIFrameSchedulerNoSplit::StartSplit()
                0x0001495c                CDWHCIFrameSchedulerNoSplit::CompleteSplit()
                0x00014980                CDWHCIFrameSchedulerNoSplit::TransactionComplete(unsigned int)
                0x00014998                CDWHCIFrameSchedulerNoSplit::WaitForFrame()
                0x00014a04                CDWHCIFrameSchedulerNoSplit::CDWHCIFrameSchedulerNoSplit(bool)
                0x00014a04                CDWHCIFrameSchedulerNoSplit::CDWHCIFrameSchedulerNoSplit(bool)
                0x00014a20                CDWHCIFrameSchedulerNoSplit::operator new(unsigned int)
                0x00014a80                CDWHCIFrameSchedulerNoSplit::operator delete(void*, unsigned int)
                0x00014aec                CDWHCIFrameSchedulerNoSplit::~CDWHCIFrameSchedulerNoSplit()
                0x00014b04                CDWHCIFrameSchedulerNoSplit::InitAllocator(unsigned int)
                0x00014b60                CDWHCIFrameSchedulerNoSplit::InitProtectedAllocator(unsigned int, unsigned int)
 .text          0x00014bd0      0x38c ./circle/lib/usb/libusb.a(usbprinter.o)
                0x00014bd0                CUSBPrinterDevice::~CUSBPrinterDevice()
                0x00014bd0                CUSBPrinterDevice::~CUSBPrinterDevice()
                0x00014c44                CUSBPrinterDevice::~CUSBPrinterDevice()
                0x00014c64                CUSBPrinterDevice::Write(void const*, unsigned int)
                0x00014d10                CUSBPrinterDevice::CUSBPrinterDevice(CUSBFunction*)
                0x00014d10                CUSBPrinterDevice::CUSBPrinterDevice(CUSBFunction*)
                0x00014d40                CUSBPrinterDevice::Configure()
 .text          0x00014f5c      0x688 ./circle/lib/usb/libusb.a(usbbluetooth.o)
                0x00014f5c                CUSBBluetoothDevice::~CUSBBluetoothDevice()
                0x00014f5c                CUSBBluetoothDevice::~CUSBBluetoothDevice()
                0x00015018                CUSBBluetoothDevice::~CUSBBluetoothDevice()
                0x00015038                CUSBBluetoothDevice::CUSBBluetoothDevice(CUSBFunction*)
                0x00015038                CUSBBluetoothDevice::CUSBBluetoothDevice(CUSBFunction*)
                0x00015074                CUSBBluetoothDevice::SendHCICommand(void const*, unsigned int)
                0x000150d0                CUSBBluetoothDevice::StartRequest()
                0x000151f0                CUSBBluetoothDevice::RegisterHCIEventHandler(void (*)(void const*, unsigned int))
                0x00015234                CUSBBluetoothDevice::CompletionRoutine(CUSBRequest*)
                0x00015368                CUSBBluetoothDevice::CompletionStub(CUSBRequest*, void*, void*)
                0x000153b0                CUSBBluetoothDevice::Configure()
 .text          0x000155e4      0x738 ./circle/lib/usb/libusb.a(usbmidi.o)
                0x000155e4                CUSBMIDIDevice::~CUSBMIDIDevice()
                0x000155e4                CUSBMIDIDevice::~CUSBMIDIDevice()
                0x00015648                CUSBMIDIDevice::~CUSBMIDIDevice()
                0x00015668                CUSBMIDIDevice::CUSBMIDIDevice(CUSBFunction*)
                0x00015668                CUSBMIDIDevice::CUSBMIDIDevice(CUSBFunction*)
                0x000156a0                CUSBMIDIDevice::RegisterPacketHandler(void (*)(unsigned int, unsigned char*, unsigned int))
                0x000156f4                CUSBMIDIDevice::StartRequest()
                0x00015824                CUSBMIDIDevice::CompletionRoutine(CUSBRequest*)
                0x000159f4                CUSBMIDIDevice::CompletionStub(CUSBRequest*, void*, void*)
                0x00015a3c                CUSBMIDIDevice::TimerHandler(unsigned int)
                0x00015a7c                CUSBMIDIDevice::TimerStub(unsigned int, void*, void*)
                0x00015ac4                CUSBMIDIDevice::Configure()
 .text          0x00015d1c      0x5b0 ./circle/lib/usb/libusb.a(usbcdcethernet.o)
                0x00015d1c                CUSBCDCEthernetDevice::GetMACAddress() const
                0x00015d24                CUSBCDCEthernetDevice::~CUSBCDCEthernetDevice()
                0x00015d24                CUSBCDCEthernetDevice::~CUSBCDCEthernetDevice()
                0x00015da0                CUSBCDCEthernetDevice::~CUSBCDCEthernetDevice()
                0x00015dc0                CUSBCDCEthernetDevice::SendFrame(void const*, unsigned int)
                0x00015e68                CUSBCDCEthernetDevice::ReceiveFrame(void*, unsigned int*)
                0x00015f5c                CUSBCDCEthernetDevice::CUSBCDCEthernetDevice(CUSBFunction*)
                0x00015f5c                CUSBCDCEthernetDevice::CUSBCDCEthernetDevice(CUSBFunction*)
                0x00015f90                CUSBCDCEthernetDevice::InitMACAddress(unsigned char)
                0x0001608c                CUSBCDCEthernetDevice::Configure()
 .text._ZN10CNetDevice8IsLinkUpEv
                0x000162cc        0x8 ./circle/lib/usb/libusb.a(usbcdcethernet.o)
                0x000162cc                CNetDevice::IsLinkUp()
 .text._ZN10CNetDevice12GetLinkSpeedEv
                0x000162d4        0x8 ./circle/lib/usb/libusb.a(usbcdcethernet.o)
                0x000162d4                CNetDevice::GetLinkSpeed()
 .text          0x000162dc      0x378 ./circle/lib/usb/libusb.a(usbconfigparser.o)
                0x000162dc                CUSBConfigurationParser::CUSBConfigurationParser(void const*, unsigned int)
                0x000162dc                CUSBConfigurationParser::CUSBConfigurationParser(void const*, unsigned int)
                0x00016448                CUSBConfigurationParser::CUSBConfigurationParser(CUSBConfigurationParser*)
                0x00016448                CUSBConfigurationParser::CUSBConfigurationParser(CUSBConfigurationParser*)
                0x000164a4                CUSBConfigurationParser::~CUSBConfigurationParser()
                0x000164a4                CUSBConfigurationParser::~CUSBConfigurationParser()
                0x000164a8                CUSBConfigurationParser::IsValid() const
                0x000164b0                CUSBConfigurationParser::GetDescriptor(unsigned char)
                0x00016590                CUSBConfigurationParser::GetCurrentDescriptor()
                0x000165e8                CUSBConfigurationParser::Error(char const*) const
 .text          0x00016654      0x5b0 ./circle/lib/usb/libusb.a(usbstring.o)
                0x00016654                CUSBString::CUSBString(CUSBDevice*)
                0x00016654                CUSBString::CUSBString(CUSBDevice*)
                0x000166cc                CUSBString::CUSBString(CUSBString*)
                0x000166cc                CUSBString::CUSBString(CUSBString*)
                0x00016798                CUSBString::~CUSBString()
                0x00016798                CUSBString::~CUSBString()
                0x000167d8                CUSBString::GetFromDescriptor(unsigned char, unsigned short)
                0x00016a70                CUSBString::Get() const
                0x00016a78                CUSBString::GetLanguageID()
 .text          0x00016c04      0xb74 ./circle/lib/usb/libusb.a(smsc951x.o)
                0x00016c04                CSMSC951xDevice::GetMACAddress() const
                0x00016c0c                CSMSC951xDevice::~CSMSC951xDevice()
                0x00016c0c                CSMSC951xDevice::~CSMSC951xDevice()
                0x00016c88                CSMSC951xDevice::~CSMSC951xDevice()
                0x00016ca8                CSMSC951xDevice::ReceiveFrame(void*, unsigned int*)
                0x00016eec                CSMSC951xDevice::SendFrame(void const*, unsigned int)
                0x00016f00                CSMSC951xDevice::CSMSC951xDevice(CUSBFunction*)
                0x00016f00                CSMSC951xDevice::CSMSC951xDevice(CUSBFunction*)
                0x00016f34                CSMSC951xDevice::WriteReg(unsigned int, unsigned int)
                0x00016f9c                CSMSC951xDevice::ReadReg(unsigned int, unsigned int*)
                0x00017004                CSMSC951xDevice::PHYWaitNotBusy()
                0x00017094                CSMSC951xDevice::PHYWrite(unsigned char, unsigned short)
                0x00017134                CSMSC951xDevice::PHYRead(unsigned char, unsigned short*)
                0x0001721c                CSMSC951xDevice::IsLinkUp()
                0x00017248                CSMSC951xDevice::GetLinkSpeed()
                0x000172a4                CSMSC951xDevice::DumpReg(char const*, unsigned int)
                0x00017318                CSMSC951xDevice::DumpRegs()
                0x000174b0                CSMSC951xDevice::Configure()
 .text          0x00017778      0xe40 ./circle/lib/usb/libusb.a(lan7800.o)
                0x00017778                CLAN7800Device::GetMACAddress() const
                0x00017780                CLAN7800Device::~CLAN7800Device()
                0x00017780                CLAN7800Device::~CLAN7800Device()
                0x000177fc                CLAN7800Device::~CLAN7800Device()
                0x0001781c                CLAN7800Device::ReceiveFrame(void*, unsigned int*)
                0x00017a5c                CLAN7800Device::SendFrame(void const*, unsigned int)
                0x00017a70                CLAN7800Device::CLAN7800Device(CUSBFunction*)
                0x00017a70                CLAN7800Device::CLAN7800Device(CUSBFunction*)
                0x00017aa4                CLAN7800Device::WriteReg(unsigned int, unsigned int)
                0x00017b3c                CLAN7800Device::ReadReg(unsigned int, unsigned int*)
                0x00017bc8                CLAN7800Device::WaitReg(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int)
                0x00017c80                CLAN7800Device::PHYWrite(unsigned char, unsigned short)
                0x00017d4c                CLAN7800Device::PHYRead(unsigned char, unsigned short*)
                0x00017e58                CLAN7800Device::IsLinkUp()
                0x00017e84                CLAN7800Device::GetLinkSpeed()
                0x00017f60                CLAN7800Device::InitPHY()
                0x00017fc8                CLAN7800Device::ReadWriteReg(unsigned int, unsigned int, unsigned int)
                0x00018018                CLAN7800Device::InitMACAddress()
                0x00018138                CLAN7800Device::Configure()
 .text          0x000185b8      0x2ac ./circle/lib/usb/libusb.a(macaddress.o)
                0x000185b8                CMACAddress::CMACAddress()
                0x000185b8                CMACAddress::CMACAddress()
                0x000185c4                CMACAddress::~CMACAddress()
                0x000185c4                CMACAddress::~CMACAddress()
                0x000185c8                CMACAddress::operator==(CMACAddress const&) const
                0x00018638                CMACAddress::operator!=(CMACAddress const&) const
                0x0001864c                CMACAddress::Set(unsigned char const*)
                0x00018694                CMACAddress::CMACAddress(unsigned char const*)
                0x00018694                CMACAddress::CMACAddress(unsigned char const*)
                0x000186a8                CMACAddress::SetBroadcast()
                0x000186cc                CMACAddress::Get() const
                0x00018700                CMACAddress::CopyTo(unsigned char*) const
                0x0001876c                CMACAddress::IsBroadcast() const
                0x000187c8                CMACAddress::GetSize() const
                0x000187d0                CMACAddress::Format(CString*) const
 .text          0x00018864       0xf4 ./circle/lib/usb/libusb.a(netdevice.o)
                0x00018864                CNetDevice::CNetDevice(CUSBFunction*)
                0x00018864                CNetDevice::CNetDevice(CUSBFunction*)
                0x00018884                CNetDevice::~CNetDevice()
                0x00018884                CNetDevice::~CNetDevice()
                0x000188a4                CNetDevice::~CNetDevice()
                0x000188d0                CNetDevice::GetSpeedString(TNetDeviceSpeed)
                0x000188ec                CNetDevice::AddNetDevice()
 .text          0x00018958      0x214 ./circle/lib/usb/libusb.a(usbgamepad.o)
                0x00018958                CUSBGamePadDevice::GetInitialState()
                0x00018960                CUSBGamePadDevice::ReportHandler(unsigned char const*, unsigned int)
                0x000189b4                CUSBGamePadDevice::RegisterStatusHandler(void (*)(unsigned int, TGamePadState const*))
                0x00018a08                CUSBGamePadDevice::Configure()
                0x00018ac0                CUSBGamePadDevice::CUSBGamePadDevice(CUSBFunction*)
                0x00018ac0                CUSBGamePadDevice::CUSBGamePadDevice(CUSBFunction*)
                0x00018b08                CUSBGamePadDevice::~CUSBGamePadDevice()
                0x00018b08                CUSBGamePadDevice::~CUSBGamePadDevice()
                0x00018b4c                CUSBGamePadDevice::~CUSBGamePadDevice()
 .text          0x00018b6c      0x368 ./circle/lib/input/libinput.a(keyboardbehaviour.o)
                0x00018b6c                CKeyboardBehaviour::CKeyboardBehaviour()
                0x00018b6c                CKeyboardBehaviour::CKeyboardBehaviour()
                0x00018ba0                CKeyboardBehaviour::~CKeyboardBehaviour()
                0x00018ba0                CKeyboardBehaviour::~CKeyboardBehaviour()
                0x00018bc8                CKeyboardBehaviour::RegisterKeyPressedHandler(void (*)(char const*))
                0x00018c00                CKeyboardBehaviour::RegisterSelectConsoleHandler(void (*)(unsigned int))
                0x00018c38                CKeyboardBehaviour::RegisterShutdownHandler(void (*)())
                0x00018c70                CKeyboardBehaviour::GetLEDStatus() const
                0x00018c78                CKeyboardBehaviour::GenerateKeyEvent(unsigned char)
                0x00018d58                CKeyboardBehaviour::KeyPressed(unsigned char)
                0x00018d94                CKeyboardBehaviour::KeyReleased(unsigned char)
                0x00018dfc                CKeyboardBehaviour::TimerHandler(unsigned int)
                0x00018e8c                CKeyboardBehaviour::TimerStub(unsigned int, void*, void*)
 .text          0x00018ed4      0x3c4 ./circle/lib/input/libinput.a(keymap.o)
                0x00018ed4                CKeyMap::~CKeyMap()
                0x00018ed4                CKeyMap::~CKeyMap()
                0x00018ed8                CKeyMap::ClearTable(unsigned char)
                0x00018f10                CKeyMap::SetEntry(unsigned char, unsigned char, unsigned short)
                0x00018f64                CKeyMap::Translate(unsigned char, unsigned char)
                0x00019070                CKeyMap::GetString(unsigned short, unsigned char, char*) const
                0x00019130                CKeyMap::GetLEDStatus() const
                0x00019160                CKeyMap::LookupDefaultMap(char const*)
                0x000191f8                CKeyMap::CKeyMap()
                0x000191f8                CKeyMap::CKeyMap()
 .text          0x00019298      0x19c ./circle/lib/input/libinput.a(mouse.o)
                0x00019298                CMouseDevice::~CMouseDevice()
                0x00019298                CMouseDevice::~CMouseDevice()
                0x000192e4                CMouseDevice::~CMouseDevice()
                0x00019304                CMouseDevice::CMouseDevice()
                0x00019304                CMouseDevice::CMouseDevice()
                0x00019370                CMouseDevice::Setup(unsigned int, unsigned int)
                0x00019378                CMouseDevice::RegisterEventHandler(void (*)(TMouseEvent, unsigned int, unsigned int, unsigned int))
                0x00019380                CMouseDevice::SetCursor(unsigned int, unsigned int)
                0x00019388                CMouseDevice::ShowCursor(bool)
                0x00019390                CMouseDevice::UpdateCursor()
                0x000193a4                CMouseDevice::RegisterStatusHandler(void (*)(unsigned int, int, int))
                0x000193f8                CMouseDevice::ReportHandler(unsigned int, int, int)
 .text          0x00019434      0x514 ./circle/lib/input/libinput.a(mousebehaviour.o)
                0x00019434                CMouseBehaviour::CMouseBehaviour()
                0x00019434                CMouseBehaviour::CMouseBehaviour()
                0x0001945c                CMouseBehaviour::~CMouseBehaviour()
                0x0001945c                CMouseBehaviour::~CMouseBehaviour()
                0x00019460                CMouseBehaviour::Setup(unsigned int, unsigned int)
                0x000195bc                CMouseBehaviour::RegisterEventHandler(void (*)(TMouseEvent, unsigned int, unsigned int, unsigned int))
                0x00019610                CMouseBehaviour::MouseStatusChanged(unsigned int, int, int)
                0x00019780                CMouseBehaviour::SetCursorState(unsigned int, unsigned int, bool)
                0x000197f4                CMouseBehaviour::SetCursor(unsigned int, unsigned int)
                0x000198a0                CMouseBehaviour::ShowCursor(bool)
                0x00019918                CMouseBehaviour::UpdateCursor()
 .text          0x00019948      0x2c8 ./circle/lib/fs/libfs.a(partitionmanager.o)
                0x00019948                CPartitionManager::CPartitionManager(CDevice*, char const*)
                0x00019948                CPartitionManager::CPartitionManager(CDevice*, char const*)
                0x00019978                CPartitionManager::~CPartitionManager()
                0x00019978                CPartitionManager::~CPartitionManager()
                0x000199c4                CPartitionManager::Initialize()
 .text          0x00019c10      0x300 ./circle/lib/fs/libfs.a(partition.o)
                0x00019c10                CPartition::Read(void*, unsigned int)
                0x00019cc0                CPartition::Write(void const*, unsigned int)
                0x00019d70                CPartition::~CPartition()
                0x00019d70                CPartition::~CPartition()
                0x00019d98                CPartition::~CPartition()
                0x00019dcc                CPartition::Seek(unsigned long long)
                0x00019ea0                CPartition::CPartition(CDevice*, unsigned int, unsigned int)
                0x00019ea0                CPartition::CPartition(CDevice*, unsigned int, unsigned int)
 .text          0x00019f10      0x244 ./circle/lib/libcircle.a(actled.o)
                0x00019f10                CActLED::~CActLED()
                0x00019f10                CActLED::~CActLED()
                0x00019f24                CActLED::On()
                0x00019f54                CActLED::Off()
                0x00019f8c                CActLED::CActLED()
                0x00019f8c                CActLED::CActLED()
                0x0001a0f8                CActLED::Blink(unsigned int, unsigned int, unsigned int)
                0x0001a144                CActLED::Get()
 .text          0x0001a154       0x90 ./circle/lib/libcircle.a(assert.o)
                0x0001a154                assertion_failed
 .text          0x0001a1e4      0x27c ./circle/lib/libcircle.a(bcmpropertytags.o)
                0x0001a1e4                CBcmPropertyTags::CBcmPropertyTags()
                0x0001a1e4                CBcmPropertyTags::CBcmPropertyTags()
                0x0001a1fc                CBcmPropertyTags::~CBcmPropertyTags()
                0x0001a1fc                CBcmPropertyTags::~CBcmPropertyTags()
                0x0001a210                CBcmPropertyTags::GetTags(void*, unsigned int)
                0x0001a340                CBcmPropertyTags::GetTag(unsigned int, void*, unsigned int, unsigned int)
 .text          0x0001a460      0x328 ./circle/lib/libcircle.a(classallocator.o)
                0x0001a460                CClassAllocator::~CClassAllocator()
                0x0001a460                CClassAllocator::~CClassAllocator()
                0x0001a488                CClassAllocator::Init(unsigned int, unsigned int)
                0x0001a568                CClassAllocator::CClassAllocator(unsigned int, unsigned int, char const*)
                0x0001a568                CClassAllocator::CClassAllocator(unsigned int, unsigned int, char const*)
                0x0001a598                CClassAllocator::CClassAllocator(unsigned int, unsigned int, unsigned int, char const*)
                0x0001a598                CClassAllocator::CClassAllocator(unsigned int, unsigned int, unsigned int, char const*)
                0x0001a5cc                CClassAllocator::Allocate()
                0x0001a6b8                CClassAllocator::Free(void*)
 .text          0x0001a788      0x1bc ./circle/lib/libcircle.a(debug.o)
                0x0001a788                debug_hexdump(void const*, unsigned int, char const*)
                0x0001a8a0                debug_stacktrace(unsigned int const*, char const*)
 .text          0x0001a944       0x40 ./circle/lib/libcircle.a(device.o)
                0x0001a944                CDevice::~CDevice()
                0x0001a944                CDevice::~CDevice()
                0x0001a948                CDevice::Write(void const*, unsigned int)
                0x0001a948                CDevice::Read(void*, unsigned int)
                0x0001a950                CDevice::Seek(unsigned long long)
                0x0001a95c                CDevice::~CDevice()
                0x0001a974                CDevice::CDevice()
                0x0001a974                CDevice::CDevice()
 .text          0x0001a984      0x634 ./circle/lib/libcircle.a(devicenameservice.o)
                0x0001a984                CDeviceNameService::CDeviceNameService()
                0x0001a984                CDeviceNameService::CDeviceNameService()
                0x0001a9d0                CDeviceNameService::~CDeviceNameService()
                0x0001a9d0                CDeviceNameService::~CDeviceNameService()
                0x0001aa38                CDeviceNameService::AddDevice(char const*, CDevice*, bool)
                0x0001aaf4                CDeviceNameService::RemoveDevice(char const*, bool)
                0x0001ac2c                CDeviceNameService::GetDevice(char const*, bool)
                0x0001ad38                CDeviceNameService::Get()
                0x0001ad70                CDeviceNameService::AddDevice(char const*, unsigned int, CDevice*, bool)
                0x0001add8                CDeviceNameService::RemoveDevice(char const*, unsigned int, bool)
                0x0001ae38                CDeviceNameService::GetDevice(char const*, unsigned int, bool)
                0x0001aea0                CDeviceNameService::ListDevices(CDevice*)
 .text          0x0001afb8      0xd38 ./circle/lib/libcircle.a(gpiopin.o)
                0x0001afb8                CGPIOPin::~CGPIOPin()
                0x0001afb8                CGPIOPin::~CGPIOPin()
                0x0001afbc                CGPIOPin::~CGPIOPin()
                0x0001afd4                CGPIOPin::CGPIOPin()
                0x0001afd4                CGPIOPin::CGPIOPin()
                0x0001b010                CGPIOPin::AssignPin(unsigned int)
                0x0001b0a4                CGPIOPin::Write(unsigned int)
                0x0001b164                CGPIOPin::Read() const
                0x0001b1ec                CGPIOPin::Invert()
                0x0001b22c                CGPIOPin::ConnectInterrupt(void (*)(void*), void*)
                0x0001b32c                CGPIOPin::DisconnectInterrupt()
                0x0001b408                CGPIOPin::EnableInterrupt(TGPIOInterrupt)
                0x0001b52c                CGPIOPin::DisableInterrupt()
                0x0001b5e8                CGPIOPin::EnableInterrupt2(TGPIOInterrupt)
                0x0001b720                CGPIOPin::DisableInterrupt2()
                0x0001b7e0                CGPIOPin::ReadAll()
                0x0001b7f0                CGPIOPin::SetPullUpMode(unsigned int)
                0x0001b890                CGPIOPin::SetAlternateFunction(unsigned int)
                0x0001b964                CGPIOPin::SetMode(TGPIOMode, bool)
                0x0001bb2c                CGPIOPin::CGPIOPin(unsigned int, TGPIOMode, CGPIOManager*)
                0x0001bb2c                CGPIOPin::CGPIOPin(unsigned int, TGPIOMode, CGPIOManager*)
                0x0001bb84                CGPIOPin::InterruptHandler()
                0x0001bc38                CGPIOPin::DisableAllInterrupts(unsigned int)
 .text.startup  0x0001bcf0       0x14 ./circle/lib/libcircle.a(gpiopin.o)
 .text          0x0001bd04      0x5dc ./circle/lib/libcircle.a(interrupt.o)
                0x0001bd04                CInterruptSystem::CInterruptSystem()
                0x0001bd04                CInterruptSystem::CInterruptSystem()
                0x0001bd3c                CInterruptSystem::~CInterruptSystem()
                0x0001bd3c                CInterruptSystem::~CInterruptSystem()
                0x0001bd50                CInterruptSystem::Initialize()
                0x0001bdbc                CInterruptSystem::DisconnectFIQ()
                0x0001be40                CInterruptSystem::EnableIRQ(unsigned int)
                0x0001bebc                CInterruptSystem::ConnectIRQ(unsigned int, void (*)(void*), void*)
                0x0001bf2c                CInterruptSystem::DisableIRQ(unsigned int)
                0x0001bfa8                CInterruptSystem::DisconnectIRQ(unsigned int)
                0x0001c024                CInterruptSystem::EnableFIQ(unsigned int)
                0x0001c070                CInterruptSystem::ConnectFIQ(unsigned int, void (*)(void*), void*)
                0x0001c144                CInterruptSystem::DisableFIQ()
                0x0001c160                CInterruptSystem::Get()
                0x0001c198                CInterruptSystem::CallIRQHandler(unsigned int)
                0x0001c204                CInterruptSystem::InterruptHandler()
                0x0001c2c8                InterruptHandler
 .text          0x0001c2e0      0x574 ./circle/lib/libcircle.a(koptions.o)
                0x0001c344                CKernelOptions::~CKernelOptions()
                0x0001c344                CKernelOptions::~CKernelOptions()
                0x0001c358                CKernelOptions::GetWidth() const
                0x0001c360                CKernelOptions::GetHeight() const
                0x0001c368                CKernelOptions::GetLogDevice() const
                0x0001c374                CKernelOptions::GetLogLevel() const
                0x0001c37c                CKernelOptions::GetKeyMap() const
                0x0001c384                CKernelOptions::GetUSBPowerDelay() const
                0x0001c38c                CKernelOptions::GetSoundDevice() const
                0x0001c398                CKernelOptions::GetSoundOption() const
                0x0001c3a0                CKernelOptions::GetCPUSpeed() const
                0x0001c3a8                CKernelOptions::GetSoCMaxTemp() const
                0x0001c3b0                CKernelOptions::Get()
                0x0001c3c0                CKernelOptions::GetToken()
                0x0001c43c                CKernelOptions::CKernelOptions()
                0x0001c43c                CKernelOptions::CKernelOptions()
                0x0001c7fc                CKernelOptions::GetOptionValue(char*)
                0x0001c834                CKernelOptions::GetDecimal(char*)
 .text          0x0001c854      0x7e4 ./circle/lib/libcircle.a(logger.o)
                0x0001c854                CLogger::CLogger(unsigned int, CTimer*)
                0x0001c854                CLogger::CLogger(unsigned int, CTimer*)
                0x0001c8ac                CLogger::~CLogger()
                0x0001c8ac                CLogger::~CLogger()
                0x0001c920                CLogger::Get()
                0x0001c930                CLogger::Write(char const*)
                0x0001c9dc                CLogger::WriteNoAlloc(char const*, TLogSeverity, char const*)
                0x0001cab4                CLogger::Read(void*, unsigned int)
                0x0001cb78                CLogger::WriteEvent(char const*, TLogSeverity, char const*)
                0x0001ccdc                CLogger::ReadEvent(TLogSeverity*, char*, char*, long*, unsigned int*, int*)
                0x0001cdc0                CLogger::RegisterEventNotificationHandler(void (*)())
                0x0001cdc8                CLogger::RegisterPanicHandler(void (*)())
                0x0001cdd0                CLogger::WriteV(char const*, TLogSeverity, char const*, std::__va_list)
                0x0001cfc4                CLogger::Write(char const*, TLogSeverity, char const*, ...)
                0x0001cff4                CLogger::Initialize(CDevice*)
 .text          0x0001d038      0x414 ./circle/lib/libcircle.a(machineinfo.o)
                0x0001d038                CMachineInfo::CMachineInfo()
                0x0001d038                CMachineInfo::CMachineInfo()
                0x0001d210                CMachineInfo::~CMachineInfo()
                0x0001d210                CMachineInfo::~CMachineInfo()
                0x0001d234                CMachineInfo::GetMachineModel() const
                0x0001d23c                CMachineInfo::GetMachineName() const
                0x0001d254                CMachineInfo::GetModelMajor() const
                0x0001d25c                CMachineInfo::GetModelRevision() const
                0x0001d264                CMachineInfo::GetSoCType() const
                0x0001d26c                CMachineInfo::GetRAMSize() const
                0x0001d274                CMachineInfo::GetSoCName() const
                0x0001d28c                CMachineInfo::GetRevisionRaw() const
                0x0001d294                CMachineInfo::GetClockRate(unsigned int) const
                0x0001d360                CMachineInfo::GetGPIOPin(TGPIOVirtualPin) const
                0x0001d3d4                CMachineInfo::GetDevice(TDeviceId) const
                0x0001d414                CMachineInfo::Get()
 .text          0x0001d44c     0x1238 ./circle/lib/libcircle.a(screen.o)
                0x0001d44c                CScreenDevice::~CScreenDevice()
                0x0001d44c                CScreenDevice::~CScreenDevice()
                0x0001d4c4                CScreenDevice::~CScreenDevice()
                0x0001d580                CScreenDevice::CScreenDevice(unsigned int, unsigned int, bool)
                0x0001d580                CScreenDevice::CScreenDevice(unsigned int, unsigned int, bool)
                0x0001d5f8                CScreenDevice::GetWidth() const
                0x0001d600                CScreenDevice::GetHeight() const
                0x0001d608                CScreenDevice::GetColumns() const
                0x0001d628                CScreenDevice::GetRows() const
                0x0001d648                CScreenDevice::GetStatus()
                0x0001d6b8                CScreenDevice::SetStatus(TScreenStatus const&)
                0x0001d7c4                CScreenDevice::CarriageReturn()
                0x0001d7d0                CScreenDevice::CursorHome()
                0x0001d7e4                CScreenDevice::CursorLeft()
                0x0001d850                CScreenDevice::CursorMove(unsigned int, unsigned int)
                0x0001d8b0                CScreenDevice::CursorUp()
                0x0001d8e0                CScreenDevice::DeleteChars(unsigned int)
                0x0001d8e4                CScreenDevice::DeleteLines(unsigned int)
                0x0001d8e8                CScreenDevice::InsertLines(unsigned int)
                0x0001d8ec                CScreenDevice::InsertMode(bool)
                0x0001d8f4                CScreenDevice::ReverseScroll()
                0x0001d8f8                CScreenDevice::SetCursorMode(bool)
                0x0001d900                CScreenDevice::SetScrollRegion(unsigned int, unsigned int)
                0x0001d97c                CScreenDevice::SetStandoutMode(unsigned int)
                0x0001da1c                CScreenDevice::Scroll()
                0x0001dac0                CScreenDevice::CursorDown()
                0x0001db0c                CScreenDevice::NewLine()
                0x0001db18                CScreenDevice::CursorRight()
                0x0001db54                CScreenDevice::Tabulator()
                0x0001dba0                CScreenDevice::DisplayChar(char, unsigned int, unsigned int, unsigned short)
                0x0001dc74                CScreenDevice::DisplayChar(char)
                0x0001dcb0                CScreenDevice::EraseChar(unsigned int, unsigned int)
                0x0001dd34                CScreenDevice::ClearLineEnd()
                0x0001dddc                CScreenDevice::EraseChars(unsigned int)
                0x0001dde8                CScreenDevice::ClearDisplayEnd()
                0x0001de6c                CScreenDevice::Write(char)
                0x0001e37c                CScreenDevice::Write(void const*, unsigned int)
                0x0001e444                CScreenDevice::Initialize()
                0x0001e5b4                CScreenDevice::InvertCursor()
                0x0001e5c4                CScreenDevice::SetPixel(unsigned int, unsigned int, unsigned short)
                0x0001e5f0                CScreenDevice::GetPixel(unsigned int, unsigned int)
                0x0001e628                CScreenDevice::Rotor(unsigned int, unsigned int)
 *fill*         0x0001e684        0x4 
 .text          0x0001e688     0x10b4 ./circle/lib/libcircle.a(string.o)
                0x0001e688                CString::~CString()
                0x0001e688                CString::~CString()
                0x0001e6b4                CString::~CString()
                0x0001e754                CString::CString()
                0x0001e754                CString::CString()
                0x0001e76c                CString::CString(char const*)
                0x0001e76c                CString::CString(char const*)
                0x0001e7ac                CString::operator char const*() const
                0x0001e7c4                CString::operator=(char const*)
                0x0001e808                CString::operator=(CString const&)
                0x0001e864                CString::GetLength() const
                0x0001e874                CString::Append(char const*)
                0x0001e8f8                CString::Compare(char const*) const
                0x0001e900                CString::Find(char) const
                0x0001e944                CString::PutChar(char, unsigned int)
                0x0001e984                CString::PutString(char const*)
                0x0001e9c8                CString::Replace(char const*, char const*)
                0x0001eb44                CString::ReserveSpace(unsigned int)
                0x0001eb50                CString::ntoa(char*, unsigned long, unsigned int, bool)
                0x0001ec08                CString::ftoa(char*, double, unsigned int)
                0x0001ee88                CString::FormatV(char const*, std::__va_list)
                0x0001f70c                CString::Format(char const*, ...)
 .text          0x0001f73c       0xec ./circle/lib/libcircle.a(sysinit.o)
                0x0001f73c                __aeabi_atexit
                0x0001f740                halt
                0x0001f74c                reboot
                0x0001f778                sysinit
 .text          0x0001f828      0xdc4 ./circle/lib/libcircle.a(timer.o)
                0x0001f860                CTimer::CTimer(CInterruptSystem*)
                0x0001f860                CTimer::CTimer(CInterruptSystem*)
                0x0001f8e8                CTimer::~CTimer()
                0x0001f8e8                CTimer::~CTimer()
                0x0001f9d0                CTimer::SetTimeZone(int)
                0x0001f9f4                CTimer::GetTimeZone() const
                0x0001f9fc                CTimer::SetTime(unsigned int, bool)
                0x0001fa78                CTimer::GetClockTicks()
                0x0001fa94                CTimer::GetTicks() const
                0x0001fa9c                CTimer::GetUptime() const
                0x0001faa4                CTimer::GetTime() const
                0x0001faac                CTimer::GetLocalTime(unsigned int*, unsigned int*)
                0x0001fb6c                CTimer::GetUniversalTime() const
                0x0001fb8c                CTimer::GetUniversalTime(unsigned int*, unsigned int*)
                0x0001fc70                CTimer::GetTimeString()
                0x0001fe74                CTimer::StartKernelTimer(unsigned int, void (*)(unsigned int, void*, void*), void*, void*)
                0x0001ffdc                CTimer::CancelKernelTimer(unsigned int)
                0x00020098                CTimer::PollKernelTimers()
                0x00020200                CTimer::InterruptHandler()
                0x00020304                CTimer::InterruptHandler(void*)
                0x00020344                CTimer::TuneMsDelay()
                0x000203ec                CTimer::Initialize()
                0x00020474                CTimer::RegisterPeriodicHandler(void (*)())
                0x000204cc                CTimer::SimpleMsDelay(unsigned int)
                0x000204e8                CTimer::SimpleusDelay(unsigned int)
                0x000204f4                CTimer::IsLeapYear(unsigned int)
                0x00020540                CTimer::GetDaysOfMonth(unsigned int, unsigned int)
                0x000205b0                CTimer::Get()
 .text          0x000205ec      0x5c8 ./circle/lib/libcircle.a(util.o)
                0x000205ec                memset
                0x00020610                memcmp
                0x0002066c                strlen
                0x00020694                strcmp
                0x00020700                strcasecmp
                0x000207d0                strncmp
                0x00020864                strcpy
                0x00020890                strncpy
                0x000208dc                strcat
                0x00020920                strchr
                0x00020960                strtok_r
                0x00020a2c                strtoul
                0x00020bb0                char2int
 .text          0x00020bb4       0x5c ./circle/lib/libcircle.a(util_fast.o)
                0x00020bb4                memcpy
 .text          0x00020c10      0x24c ./circle/lib/libcircle.a(virtualgpiopin.o)
                0x00020c10                CVirtualGPIOPin::~CVirtualGPIOPin()
                0x00020c10                CVirtualGPIOPin::~CVirtualGPIOPin()
                0x00020c14                CVirtualGPIOPin::~CVirtualGPIOPin()
                0x00020cd0                CVirtualGPIOPin::CVirtualGPIOPin(unsigned int)
                0x00020cd0                CVirtualGPIOPin::CVirtualGPIOPin(unsigned int)
                0x00020e14                CVirtualGPIOPin::Write(unsigned int)
                0x00020e50                CVirtualGPIOPin::Invert()
 .text.startup  0x00020e5c       0x14 ./circle/lib/libcircle.a(virtualgpiopin.o)
 .text          0x00020e70      0x2c0 ./circle/lib/libcircle.a(exceptionhandler.o)
                0x00020e70                CExceptionHandler::CExceptionHandler()
                0x00020e70                CExceptionHandler::CExceptionHandler()
                0x00020f00                CExceptionHandler::~CExceptionHandler()
                0x00020f00                CExceptionHandler::~CExceptionHandler()
                0x00020f14                CExceptionHandler::Throw(unsigned int)
                0x00020f54                CExceptionHandler::Throw(unsigned int, TAbortFrame*)
                0x00021044                CExceptionHandler::Get()
                0x0002107c                ExceptionHandler
                0x000210e8                raise
 .text          0x00021130      0x170 ./circle/lib/libcircle.a(exceptionstub.o)
                0x00021130                UndefinedInstructionInternal
                0x0002117c                PrefetchAbortStub
                0x000211c8                DataAbortStub
                0x00021214                UndefinedInstructionStub
                0x00021230                IRQStub
                0x00021240                FIQStub
 .text          0x000212a0      0x2cc ./circle/lib/libcircle.a(memory.o)
                0x000212a0                CMemorySystem::~CMemorySystem()
                0x000212a0                CMemorySystem::~CMemorySystem()
                0x00021318                CMemorySystem::GetMemSize() const
                0x0002135c                CMemorySystem::Get()
                0x00021394                CMemorySystem::EnableMMU()
                0x00021470                CMemorySystem::CMemorySystem(bool)
                0x00021470                CMemorySystem::CMemorySystem(bool)
                0x00021560                CMemorySystem::GetCoherentPage(unsigned int)
 .text          0x0002156c       0xb8 ./circle/lib/libcircle.a(pagetable.o)
                0x0002156c                CPageTable::CPageTable(unsigned int)
                0x0002156c                CPageTable::CPageTable(unsigned int)
                0x00021614                CPageTable::~CPageTable()
                0x00021614                CPageTable::~CPageTable()
                0x00021618                CPageTable::GetBaseAddress() const
 .text          0x00021624        0x0 ./circle/lib/libcircle.a(startup.o)
 .text          0x00021624      0x180 ./circle/lib/libcircle.a(synchronize.o)
                0x00021624                CurrentExecutionLevel
                0x0002163c                EnterCritical
                0x000216f0                LeaveCritical
                0x00021748                CleanAndInvalidateDataCacheRange
                0x00021784                SyncDataAndInstructionCache
 .text          0x000217a4       0x18 ./circle/lib/libcircle.a(new.o)
                0x000217a4                operator new(unsigned int)
                0x000217a8                operator new[](unsigned int)
                0x000217ac                operator delete(void*)
                0x000217b0                operator delete[](void*)
                0x000217b4                operator delete(void*, unsigned int)
                0x000217b8                operator delete[](void*, unsigned int)
 .text          0x000217bc       0x18 ./circle/lib/libcircle.a(purecall.o)
                0x000217bc                __cxa_pure_virtual
 .text          0x000217d4      0x608 ./circle/lib/libcircle.a(alloc.o)
                0x000217d4                mem_init
                0x00021810                mem_get_size
                0x00021838                malloc
                0x00021a30                free
                0x00021b50                calloc
                0x00021ba8                realloc
                0x00021c90                palloc
                0x00021d7c                pfree
 .text.startup  0x00021ddc       0x18 ./circle/lib/libcircle.a(alloc.o)
 .text          0x00021df4      0x478 ./circle/lib/libcircle.a(bcmframebuffer.o)
                0x00021eb0                CBcmFrameBuffer::CBcmFrameBuffer(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int)
                0x00021eb0                CBcmFrameBuffer::CBcmFrameBuffer(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int)
                0x00021fe8                CBcmFrameBuffer::~CBcmFrameBuffer()
                0x00021fe8                CBcmFrameBuffer::~CBcmFrameBuffer()
                0x00022004                CBcmFrameBuffer::SetPalette(unsigned char, unsigned short)
                0x0002205c                CBcmFrameBuffer::SetPalette32(unsigned char, unsigned int)
                0x00022094                CBcmFrameBuffer::Initialize()
                0x00022154                CBcmFrameBuffer::GetWidth() const
                0x0002215c                CBcmFrameBuffer::GetHeight() const
                0x00022164                CBcmFrameBuffer::GetVirtWidth() const
                0x0002216c                CBcmFrameBuffer::GetVirtHeight() const
                0x00022174                CBcmFrameBuffer::GetPitch() const
                0x0002217c                CBcmFrameBuffer::GetDepth() const
                0x00022184                CBcmFrameBuffer::GetBuffer() const
                0x0002218c                CBcmFrameBuffer::GetSize() const
                0x00022194                CBcmFrameBuffer::UpdatePalette()
                0x000221ac                CBcmFrameBuffer::SetVirtualOffset(unsigned int, unsigned int)
                0x00022224                CBcmFrameBuffer::WaitForVerticalSync()
 .text          0x0002226c      0x17c ./circle/lib/libcircle.a(bcmmailbox.o)
                0x0002226c                CBcmMailBox::CBcmMailBox(unsigned int)
                0x0002226c                CBcmMailBox::CBcmMailBox(unsigned int)
                0x00022274                CBcmMailBox::~CBcmMailBox()
                0x00022274                CBcmMailBox::~CBcmMailBox()
                0x00022278                CBcmMailBox::Flush()
                0x000222b0                CBcmMailBox::Read()
                0x000222e0                CBcmMailBox::Write(unsigned int)
                0x00022334                CBcmMailBox::WriteRead(unsigned int)
 .text.startup  0x000223e8       0x14 ./circle/lib/libcircle.a(bcmmailbox.o)
 .text          0x000223fc       0xa8 ./circle/lib/libcircle.a(chargenerator.o)
                0x000223fc                CCharGenerator::CCharGenerator()
                0x000223fc                CCharGenerator::CCharGenerator()
                0x00022408                CCharGenerator::~CCharGenerator()
                0x00022408                CCharGenerator::~CCharGenerator()
                0x0002240c                CCharGenerator::GetCharWidth() const
                0x00022414                CCharGenerator::GetCharHeight() const
                0x0002241c                CCharGenerator::GetUnderline() const
                0x00022424                CCharGenerator::GetPixel(char, unsigned int, unsigned int) const
 *fill*         0x000224a4        0x4 
 .text          0x000224a8        0xc ./circle/lib/libcircle.a(delayloop.o)
                0x000224a8                DelayLoop
 .text          0x000224b4      0x384 ./circle/lib/libcircle.a(gpiomanager.o)
                0x000224b4                CGPIOManager::CGPIOManager(CInterruptSystem*)
                0x000224b4                CGPIOManager::CGPIOManager(CInterruptSystem*)
                0x000224e0                CGPIOManager::~CGPIOManager()
                0x000224e0                CGPIOManager::~CGPIOManager()
                0x0002256c                CGPIOManager::Initialize()
                0x000225ec                CGPIOManager::ConnectInterrupt(CGPIOPin*)
                0x00022690                CGPIOManager::DisconnectInterrupt(CGPIOPin*)
                0x00022748                CGPIOManager::InterruptHandler()
                0x000227fc                CGPIOManager::InterruptStub(void*)
 .text          0x00022838      0x4bc ./circle/lib/libcircle.a(ptrlist.o)
                0x00022838                CPtrList::CPtrList()
                0x00022838                CPtrList::CPtrList()
                0x00022844                CPtrList::~CPtrList()
                0x00022844                CPtrList::~CPtrList()
                0x00022878                CPtrList::GetFirst()
                0x00022880                CPtrList::GetNext(TPtrListElement*)
                0x000228d8                CPtrList::GetPtr(TPtrListElement*)
                0x00022930                CPtrList::InsertBefore(TPtrListElement*, void*)
                0x00022a34                CPtrList::InsertAfter(TPtrListElement*, void*)
                0x00022b2c                CPtrList::Remove(TPtrListElement*)
                0x00022c78                CPtrList::Find(void*)
                0x00022cf4                _etext = .

.glue_7         0x00022cf4        0x0
 .glue_7        0x00022cf4        0x0 linker stubs

.glue_7t        0x00022cf4        0x0
 .glue_7t       0x00022cf4        0x0 linker stubs

.vfp11_veneer   0x00022cf4        0x0
 .vfp11_veneer  0x00022cf4        0x0 linker stubs

.v4_bx          0x00022cf4        0x0
 .v4_bx         0x00022cf4        0x0 linker stubs

.iplt           0x00022cf4        0x0
 .iplt          0x00022cf4        0x0 src/main.o

.rodata         0x00022cf4     0x6a50
 *(.rodata*)
 .rodata        0x00022cf4        0x7 src/kernel.o
 *fill*         0x00022cfb        0x1 
 .rodata.str1.4
                0x00022cfc       0xc4 src/kernel.o
                                 0xca (size before relaxing)
 .rodata        0x00022dc0       0x1c src/rdserial.o
                0x00022dc0                vtable for CRdSerialDevice
 .rodata.str1.4
                0x00022ddc       0xeb src/rdserial.o
                                 0xfb (size before relaxing)
 *fill*         0x00022ec7        0x1 
 .rodata        0x00022ec8      0x200 src/MiniHDLC.o
                0x00022ec8                MiniHDLC::_CRCTable
 .rodata        0x000230c8       0x23 ./circle/lib/usb/libusb.a(dwhcidevice.o)
                0x000230c8                vtable for CDWHCIDevice
 *fill*         0x000230eb        0x1 
 .rodata.str1.4
                0x000230ec      0x556 ./circle/lib/usb/libusb.a(dwhcidevice.o)
                                0x57e (size before relaxing)
 *fill*         0x00023642        0x2 
 .rodata.str1.4
                0x00023644       0x7d ./circle/lib/usb/libusb.a(dwhciregister.o)
 *fill*         0x000236c1        0x3 
 .rodata.str1.4
                0x000236c4      0x204 ./circle/lib/usb/libusb.a(dwhcixferstagedata.o)
                                0x208 (size before relaxing)
 .rodata        0x000238c8       0x1f ./circle/lib/usb/libusb.a(usbdevice.o)
                0x000238c8                vtable for CUSBDevice
 *fill*         0x000238e7        0x1 
 .rodata.str1.4
                0x000238e8      0x352 ./circle/lib/usb/libusb.a(usbdevice.o)
                                0x356 (size before relaxing)
 *fill*         0x00023c3a        0x2 
 .rodata.str1.4
                0x00023c3c      0x137 ./circle/lib/usb/libusb.a(usbendpoint.o)
                                0x14b (size before relaxing)
 *fill*         0x00023d73        0x1 
 .rodata        0x00023d74       0x18 ./circle/lib/usb/libusb.a(usbhostcontroller.o)
                0x00023d74                vtable for CUSBHostController
 .rodata.str1.4
                0x00023d8c       0xcc ./circle/lib/usb/libusb.a(usbrequest.o)
                                0x108 (size before relaxing)
 .rodata.str1.4
                0x00023e58      0x16e ./circle/lib/usb/libusb.a(usbdevicefactory.o)
                                0x17a (size before relaxing)
 *fill*         0x00023fc6        0x2 
 .rodata        0x00023fc8       0x2b ./circle/lib/usb/libusb.a(usbstandardhub.o)
                0x00023fc8                vtable for CUSBStandardHub
 *fill*         0x00023ff3        0x1 
 .rodata.str1.4
                0x00023ff4      0x22c ./circle/lib/usb/libusb.a(usbstandardhub.o)
 .rodata        0x00024220       0x29 ./circle/lib/usb/libusb.a(usbmassdevice.o)
                0x00024220                vtable for CUSBBulkOnlyMassStorageDevice
 *fill*         0x00024249        0x3 
 .rodata.str1.4
                0x0002424c      0x24e ./circle/lib/usb/libusb.a(usbmassdevice.o)
                                0x282 (size before relaxing)
 *fill*         0x0002449a        0x2 
 .rodata        0x0002449c       0x24 ./circle/lib/usb/libusb.a(dwhciframeschednper.o)
                0x0002449c                vtable for CDWHCIFrameSchedulerNonPeriodic
 .rodata.str1.4
                0x000244c0       0xac ./circle/lib/usb/libusb.a(dwhciframeschednper.o)
                                 0xe8 (size before relaxing)
 .rodata        0x0002456c       0x24 ./circle/lib/usb/libusb.a(dwhciframeschedper.o)
                0x0002456c                vtable for CDWHCIFrameSchedulerPeriodic
 .rodata.str1.4
                0x00024590       0x85 ./circle/lib/usb/libusb.a(dwhciframeschedper.o)
                                0x101 (size before relaxing)
 *fill*         0x00024615        0x3 
 .rodata        0x00024618       0x37 ./circle/lib/usb/libusb.a(usbkeyboard.o)
                0x00024618                vtable for CUSBKeyboardDevice
 *fill*         0x0002464f        0x1 
 .rodata.str1.4
                0x00024650       0x5e ./circle/lib/usb/libusb.a(usbkeyboard.o)
 *fill*         0x000246ae        0x2 
 .rodata        0x000246b0        0x7 ./circle/lib/usb/libusb.a(dwhcirootport.o)
 *fill*         0x000246b7        0x1 
 .rodata.str1.4
                0x000246b8       0x83 ./circle/lib/usb/libusb.a(dwhcirootport.o)
                                 0x93 (size before relaxing)
 *fill*         0x0002473b        0x1 
 .rodata        0x0002473c       0x30 ./circle/lib/usb/libusb.a(usbhiddevice.o)
                0x00024744                vtable for CUSBHIDDevice
 .rodata.str1.4
                0x0002476c      0x103 ./circle/lib/usb/libusb.a(usbhiddevice.o)
                                0x143 (size before relaxing)
 *fill*         0x0002486f        0x1 
 .rodata        0x00024870       0x2f ./circle/lib/usb/libusb.a(usbmouse.o)
                0x00024870                vtable for CUSBMouseDevice
 *fill*         0x0002489f        0x1 
 .rodata.str1.4
                0x000248a0       0x21 ./circle/lib/usb/libusb.a(usbmouse.o)
                                 0x40 (size before relaxing)
 *fill*         0x000248c1        0x3 
 .rodata        0x000248c4       0x4e ./circle/lib/usb/libusb.a(usbgamepadstandard.o)
                0x000248c4                vtable for CUSBGamePadStandardDevice
 *fill*         0x00024912        0x2 
 .rodata.str1.4
                0x00024914       0x68 ./circle/lib/usb/libusb.a(usbgamepadstandard.o)
                                 0x8c (size before relaxing)
 .rodata        0x0002497c       0xbc ./circle/lib/usb/libusb.a(usbgamepadps3.o)
                0x0002497c                vtable for CUSBGamePadPS3Device
                0x000249cc                CUSBGamePadPS3Device::s_CommandDefault
 .rodata.str1.4
                0x00024a38       0x5d ./circle/lib/usb/libusb.a(usbgamepadps3.o)
                                 0x81 (size before relaxing)
 *fill*         0x00024a95        0x3 
 .rodata        0x00024a98       0x72 ./circle/lib/usb/libusb.a(usbgamepadps4.o)
                0x00024abc                vtable for CUSBGamePadPS4Device
 *fill*         0x00024b0a        0x2 
 .rodata.str1.4
                0x00024b0c       0x47 ./circle/lib/usb/libusb.a(usbgamepadps4.o)
                                 0x68 (size before relaxing)
 *fill*         0x00024b53        0x1 
 .rodata        0x00024b54       0xb2 ./circle/lib/usb/libusb.a(usbgamepadxbox360.o)
                0x00024b54                vtable for CUSBGamePadXbox360Device
 *fill*         0x00024c06        0x2 
 .rodata.str1.4
                0x00024c08       0x39 ./circle/lib/usb/libusb.a(usbgamepadxbox360.o)
                                 0x70 (size before relaxing)
 *fill*         0x00024c41        0x3 
 .rodata        0x00024c44       0x79 ./circle/lib/usb/libusb.a(usbgamepadxboxone.o)
                0x00024c44                vtable for CUSBGamePadXboxOneDevice
 *fill*         0x00024cbd        0x3 
 .rodata.str1.4
                0x00024cc0       0x42 ./circle/lib/usb/libusb.a(usbgamepadxboxone.o)
                                 0x66 (size before relaxing)
 *fill*         0x00024d02        0x2 
 .rodata        0x00024d04       0x6a ./circle/lib/usb/libusb.a(usbgamepadswitchpro.o)
                0x00024d04                vtable for CUSBGamePadSwitchProDevice
 *fill*         0x00024d6e        0x2 
 .rodata.str1.4
                0x00024d70       0xfa ./circle/lib/usb/libusb.a(usbgamepadswitchpro.o)
                                0x11a (size before relaxing)
 *fill*         0x00024e6a        0x2 
 .rodata        0x00024e6c       0x2b ./circle/lib/usb/libusb.a(usbfunction.o)
                0x00024e6c                vtable for CUSBFunction
 *fill*         0x00024e97        0x1 
 .rodata.str1.4
                0x00024e98       0x85 ./circle/lib/usb/libusb.a(usbfunction.o)
                                 0xcd (size before relaxing)
 *fill*         0x00024f1d        0x3 
 .rodata        0x00024f20       0x24 ./circle/lib/usb/libusb.a(dwhciframeschednsplit.o)
                0x00024f20                vtable for CDWHCIFrameSchedulerNoSplit
 .rodata.str1.4
                0x00024f44       0x68 ./circle/lib/usb/libusb.a(dwhciframeschednsplit.o)
                                 0x94 (size before relaxing)
 .rodata        0x00024fac       0x29 ./circle/lib/usb/libusb.a(usbprinter.o)
                0x00024fac                vtable for CUSBPrinterDevice
 *fill*         0x00024fd5        0x3 
 .rodata.str1.4
                0x00024fd8       0x43 ./circle/lib/usb/libusb.a(usbprinter.o)
                                 0x77 (size before relaxing)
 *fill*         0x0002501b        0x1 
 .rodata        0x0002501c       0x2a ./circle/lib/usb/libusb.a(usbbluetooth.o)
                0x0002501c                vtable for CUSBBluetoothDevice
 *fill*         0x00025046        0x2 
 .rodata.str1.4
                0x00025048       0x96 ./circle/lib/usb/libusb.a(usbbluetooth.o)
                                 0xfa (size before relaxing)
 *fill*         0x000250de        0x2 
 .rodata        0x000250e0       0x6a ./circle/lib/usb/libusb.a(usbmidi.o)
                0x000250e0                vtable for CUSBMIDIDevice
 *fill*         0x0002514a        0x2 
 .rodata.str1.4
                0x0002514c       0xe4 ./circle/lib/usb/libusb.a(usbmidi.o)
                                0x130 (size before relaxing)
 .rodata        0x00025230       0x40 ./circle/lib/usb/libusb.a(usbcdcethernet.o)
                0x00025230                vtable for CUSBCDCEthernetDevice
 .rodata.str1.4
                0x00025270       0xb2 ./circle/lib/usb/libusb.a(usbcdcethernet.o)
                                 0xd9 (size before relaxing)
 *fill*         0x00025322        0x2 
 .rodata.str1.4
                0x00025324       0x9b ./circle/lib/usb/libusb.a(usbconfigparser.o)
                                 0xb7 (size before relaxing)
 *fill*         0x000253bf        0x1 
 .rodata.str1.4
                0x000253c0       0x9b ./circle/lib/usb/libusb.a(usbstring.o)
                                 0xbb (size before relaxing)
 *fill*         0x0002545b        0x1 
 .rodata        0x0002545c       0x4a ./circle/lib/usb/libusb.a(smsc951x.o)
                0x0002545c                vtable for CSMSC951xDevice
 *fill*         0x000254a6        0x2 
 .rodata.str1.4
                0x000254a8      0x184 ./circle/lib/usb/libusb.a(smsc951x.o)
                                0x228 (size before relaxing)
 .rodata        0x0002562c       0x40 ./circle/lib/usb/libusb.a(lan7800.o)
                0x0002562c                vtable for CLAN7800Device
 .rodata.str1.4
                0x0002566c       0xe1 ./circle/lib/usb/libusb.a(lan7800.o)
                                0x1d1 (size before relaxing)
 *fill*         0x0002574d        0x3 
 .rodata.str1.4
                0x00025750       0x4e ./circle/lib/usb/libusb.a(macaddress.o)
                                 0x6a (size before relaxing)
 *fill*         0x0002579e        0x2 
 .rodata        0x000257a0       0x38 ./circle/lib/usb/libusb.a(netdevice.o)
                0x000257a0                vtable for CNetDevice
 .rodata.str1.4
                0x000257d8       0x97 ./circle/lib/usb/libusb.a(netdevice.o)
                                 0x9f (size before relaxing)
 *fill*         0x0002586f        0x1 
 .rodata        0x00025870       0x54 ./circle/lib/usb/libusb.a(usbgamepad.o)
                0x00025880                vtable for CUSBGamePadDevice
 .rodata.str1.4
                0x000258c4       0x3e ./circle/lib/usb/libusb.a(usbgamepad.o)
                                 0x70 (size before relaxing)
 *fill*         0x00025902        0x2 
 .rodata.str1.4
                0x00025904       0x77 ./circle/lib/input/libinput.a(keyboardbehaviour.o)
                                 0x93 (size before relaxing)
 *fill*         0x0002597b        0x1 
 .rodata        0x0002597c     0x1800 ./circle/lib/input/libinput.a(keymap.o)
                0x0002597c                CKeyMap::s_DefaultMap
 .rodata.str1.4
                0x0002717c      0x116 ./circle/lib/input/libinput.a(keymap.o)
                                0x126 (size before relaxing)
 *fill*         0x00027292        0x2 
 .rodata        0x00027294       0x22 ./circle/lib/input/libinput.a(mouse.o)
                0x00027294                vtable for CMouseDevice
 *fill*         0x000272b6        0x2 
 .rodata.str1.4
                0x000272b8        0xa ./circle/lib/input/libinput.a(mouse.o)
                                 0x3a (size before relaxing)
 *fill*         0x000272c2        0x2 
 .rodata        0x000272c4      0x400 ./circle/lib/input/libinput.a(mousebehaviour.o)
 .rodata.str1.4
                0x000276c4       0xb6 ./circle/lib/input/libinput.a(mousebehaviour.o)
                                 0xce (size before relaxing)
 *fill*         0x0002777a        0x2 
 .rodata        0x0002777c        0x6 ./circle/lib/fs/libfs.a(partitionmanager.o)
 *fill*         0x00027782        0x2 
 .rodata.str1.4
                0x00027784       0x80 ./circle/lib/fs/libfs.a(partitionmanager.o)
 .rodata        0x00027804       0x1c ./circle/lib/fs/libfs.a(partition.o)
                0x00027804                vtable for CPartition
 .rodata.str1.4
                0x00027820        0xe ./circle/lib/fs/libfs.a(partition.o)
                                 0x1f (size before relaxing)
 *fill*         0x0002782e        0x2 
 .rodata.str1.4
                0x00027830       0x1d ./circle/lib/libcircle.a(assert.o)
 *fill*         0x0002784d        0x3 
 .rodata.str1.4
                0x00027850       0x98 ./circle/lib/libcircle.a(bcmpropertytags.o)
 .rodata.str1.4
                0x000278e8       0xed ./circle/lib/libcircle.a(classallocator.o)
 *fill*         0x000279d5        0x3 
 .rodata        0x000279d8        0x6 ./circle/lib/libcircle.a(debug.o)
 *fill*         0x000279de        0x2 
 .rodata.str1.4
                0x000279e0       0x93 ./circle/lib/libcircle.a(debug.o)
 *fill*         0x00027a73        0x1 
 .rodata        0x00027a74       0x1c ./circle/lib/libcircle.a(device.o)
                0x00027a74                vtable for CDevice
 .rodata.str1.4
                0x00027a90       0x87 ./circle/lib/libcircle.a(devicenameservice.o)
                                 0x96 (size before relaxing)
 *fill*         0x00027b17        0x1 
 .rodata        0x00027b18       0x28 ./circle/lib/libcircle.a(gpiopin.o)
                0x00027b18                vtable for CGPIOPin
 .rodata.str1.4
                0x00027b40      0x2a1 ./circle/lib/libcircle.a(gpiopin.o)
                                0x2b1 (size before relaxing)
 *fill*         0x00027de1        0x3 
 .rodata.str1.4
                0x00027de4       0x9e ./circle/lib/libcircle.a(interrupt.o)
                                 0xbd (size before relaxing)
 *fill*         0x00027e82        0x2 
 .rodata.str1.4
                0x00027e84       0x76 ./circle/lib/libcircle.a(koptions.o)
                                 0x7a (size before relaxing)
 *fill*         0x00027efa        0x2 
 .rodata.str1.4
                0x00027efc       0x33 ./circle/lib/libcircle.a(logger.o)
                                 0x3b (size before relaxing)
 *fill*         0x00027f2f        0x1 
 .rodata        0x00027f30      0x1ec ./circle/lib/libcircle.a(machineinfo.o)
 .rodata.str1.4
                0x0002811c      0x149 ./circle/lib/libcircle.a(machineinfo.o)
                                0x165 (size before relaxing)
 *fill*         0x00028265        0x3 
 .rodata        0x00028268       0x21 ./circle/lib/libcircle.a(screen.o)
                0x00028268                vtable for CScreenDevice
 .rodata.str1.4
                0x00028289        0x5 ./circle/lib/libcircle.a(screen.o)
 *fill*         0x00028289        0x3 
 .rodata        0x0002828c       0x10 ./circle/lib/libcircle.a(string.o)
                0x0002828c                vtable for CString
 .rodata.str1.4
                0x0002829c        0x9 ./circle/lib/libcircle.a(string.o)
                                  0xd (size before relaxing)
 *fill*         0x000282a5        0x3 
 .rodata        0x000282a8       0x36 ./circle/lib/libcircle.a(timer.o)
                0x000282a8                CTimer::s_nDaysOfMonth
 *fill*         0x000282de        0x2 
 .rodata.str1.4
                0x000282e0      0x148 ./circle/lib/libcircle.a(timer.o)
                                0x198 (size before relaxing)
 .rodata        0x00028428       0x10 ./circle/lib/libcircle.a(virtualgpiopin.o)
                0x00028428                vtable for CVirtualGPIOPin
 .rodata        0x00028438        0x7 ./circle/lib/libcircle.a(exceptionhandler.o)
 *fill*         0x0002843f        0x1 
 .rodata.str1.4
                0x00028440       0xbb ./circle/lib/libcircle.a(exceptionhandler.o)
                                 0xe4 (size before relaxing)
 *fill*         0x000284fb        0x1 
 .rodata.str1.4
                0x000284fc       0x78 ./circle/lib/libcircle.a(memory.o)
                                 0x88 (size before relaxing)
 .rodata.str1.4
                0x00028574       0xb5 ./circle/lib/libcircle.a(synchronize.o)
 *fill*         0x00028629        0x3 
 .rodata.str1.4
                0x0002862c        0xd ./circle/lib/libcircle.a(purecall.o)
                                 0x12 (size before relaxing)
 *fill*         0x00028639        0x3 
 .rodata.str1.4
                0x0002863c       0xd4 ./circle/lib/libcircle.a(alloc.o)
 .rodata.str1.4
                0x00028710       0x23 ./circle/lib/libcircle.a(bcmmailbox.o)
 *fill*         0x00028733        0x1 
 .rodata        0x00028734      0xdf0 ./circle/lib/libcircle.a(chargenerator.o)
 .rodata.str1.4
                0x00029524       0x29 ./circle/lib/libcircle.a(chargenerator.o)
 *fill*         0x0002954d        0x3 
 .rodata.str1.4
                0x00029550       0x7b ./circle/lib/libcircle.a(gpiomanager.o)
                                 0x9c (size before relaxing)
 *fill*         0x000295cb        0x1 
 .rodata.str1.4
                0x000295cc      0x178 ./circle/lib/libcircle.a(ptrlist.o)
                                0x176 (size before relaxing)

.rel.dyn        0x00029744        0x0
 .rel.iplt      0x00029744        0x0 src/main.o

.init_array     0x00029744       0x10
                0x00029744                __init_start = .
 *(.init_array*)
 .init_array    0x00029744        0x4 ./circle/lib/libcircle.a(gpiopin.o)
 .init_array    0x00029748        0x4 ./circle/lib/libcircle.a(virtualgpiopin.o)
 .init_array    0x0002974c        0x4 ./circle/lib/libcircle.a(alloc.o)
 .init_array    0x00029750        0x4 ./circle/lib/libcircle.a(bcmmailbox.o)
                0x00029754                __init_end = .

.ARM.exidx      0x00029754        0x0
                0x00029754                __exidx_start = .
 *(.ARM.exidx*)
                0x00029754                __exidx_end = .

.data           0x00029754      0x238
 *(.data*)
 .data          0x00029754        0x0 src/main.o
 .data          0x00029754        0x0 src/kernel.o
 .data          0x00029754        0x0 src/rdserial.o
 .data          0x00029754        0x0 src/MiniHDLC.o
 .data          0x00029754        0x0 c:/program files (x86)/gnu tools arm embedded/7 2017-q4-major/bin/../lib/gcc/arm-none-eabi/7.2.1/hard/libgcc.a(_udivsi3.o)
 .data          0x00029754        0x0 c:/program files (x86)/gnu tools arm embedded/7 2017-q4-major/bin/../lib/gcc/arm-none-eabi/7.2.1/hard/libgcc.a(_dvmd_tls.o)
 .data          0x00029754        0x0 ./circle/lib/usb/libusb.a(dwhcidevice.o)
 .data          0x00029754        0x0 ./circle/lib/usb/libusb.a(dwhciregister.o)
 .data          0x00029754        0x0 ./circle/lib/usb/libusb.a(dwhcixferstagedata.o)
 .data          0x00029754        0x1 ./circle/lib/usb/libusb.a(usbdevice.o)
                0x00029754                CUSBDevice::s_ucNextAddress
 .data          0x00029755        0x0 ./circle/lib/usb/libusb.a(usbendpoint.o)
 .data          0x00029755        0x0 ./circle/lib/usb/libusb.a(usbhostcontroller.o)
 .data          0x00029755        0x0 ./circle/lib/usb/libusb.a(usbrequest.o)
 .data          0x00029755        0x0 ./circle/lib/usb/libusb.a(usbdevicefactory.o)
 *fill*         0x00029755        0x3 
 .data          0x00029758        0x4 ./circle/lib/usb/libusb.a(usbstandardhub.o)
                0x00029758                CUSBStandardHub::s_nDeviceNumber
 .data          0x0002975c        0x4 ./circle/lib/usb/libusb.a(usbmassdevice.o)
                0x0002975c                CUSBBulkOnlyMassStorageDevice::s_nDeviceNumber
 .data          0x00029760        0x0 ./circle/lib/usb/libusb.a(dwhciframeschednper.o)
 .data          0x00029760        0x0 ./circle/lib/usb/libusb.a(dwhciframeschedper.o)
 .data          0x00029760        0x4 ./circle/lib/usb/libusb.a(usbkeyboard.o)
                0x00029760                CUSBKeyboardDevice::s_nDeviceNumber
 .data          0x00029764        0x0 ./circle/lib/usb/libusb.a(dwhcirootport.o)
 .data          0x00029764        0x0 ./circle/lib/usb/libusb.a(usbhiddevice.o)
 .data          0x00029764        0x0 ./circle/lib/usb/libusb.a(usbmouse.o)
 .data          0x00029764        0x0 ./circle/lib/usb/libusb.a(usbgamepadstandard.o)
 .data          0x00029764        0x4 ./circle/lib/usb/libusb.a(usbgamepadps3.o)
 .data          0x00029768        0x1 ./circle/lib/usb/libusb.a(usbgamepadps4.o)
                0x00029768                CUSBGamePadPS4Device::s_bTouchpadEnabled
 .data          0x00029769        0x0 ./circle/lib/usb/libusb.a(usbgamepadxbox360.o)
 .data          0x00029769        0x0 ./circle/lib/usb/libusb.a(usbgamepadxboxone.o)
 *fill*         0x00029769        0x3 
 .data          0x0002976c        0xa ./circle/lib/usb/libusb.a(usbgamepadswitchpro.o)
 .data          0x00029776        0x0 ./circle/lib/usb/libusb.a(usbfunction.o)
 .data          0x00029776        0x0 ./circle/lib/usb/libusb.a(dwhciframeschednsplit.o)
 *fill*         0x00029776        0x2 
 .data          0x00029778        0x4 ./circle/lib/usb/libusb.a(usbprinter.o)
                0x00029778                CUSBPrinterDevice::s_nDeviceNumber
 .data          0x0002977c        0x4 ./circle/lib/usb/libusb.a(usbbluetooth.o)
                0x0002977c                CUSBBluetoothDevice::s_nDeviceNumber
 .data          0x00029780        0x4 ./circle/lib/usb/libusb.a(usbmidi.o)
                0x00029780                CUSBMIDIDevice::s_nDeviceNumber
 .data          0x00029784        0x0 ./circle/lib/usb/libusb.a(usbcdcethernet.o)
 .data          0x00029784        0x0 ./circle/lib/usb/libusb.a(usbconfigparser.o)
 .data          0x00029784        0x0 ./circle/lib/usb/libusb.a(usbstring.o)
 .data          0x00029784        0x0 ./circle/lib/usb/libusb.a(smsc951x.o)
 .data          0x00029784        0x0 ./circle/lib/usb/libusb.a(lan7800.o)
 .data          0x00029784        0x0 ./circle/lib/usb/libusb.a(macaddress.o)
 .data          0x00029784       0x18 ./circle/lib/usb/libusb.a(netdevice.o)
                0x00029784                CNetDevice::s_SpeedString
 .data          0x0002979c        0x4 ./circle/lib/usb/libusb.a(usbgamepad.o)
                0x0002979c                CUSBGamePadDevice::s_nDeviceNumber
 .data          0x000297a0        0x0 ./circle/lib/input/libinput.a(keyboardbehaviour.o)
 .data          0x000297a0       0xe8 ./circle/lib/input/libinput.a(keymap.o)
                0x000297a0                CKeyMap::s_KeyStrings
                0x0002986c                CKeyMap::s_MapDirectory
 .data          0x00029888        0x4 ./circle/lib/input/libinput.a(mouse.o)
                0x00029888                CMouseDevice::s_nDeviceNumber
 .data          0x0002988c        0x0 ./circle/lib/input/libinput.a(mousebehaviour.o)
 .data          0x0002988c        0x0 ./circle/lib/fs/libfs.a(partitionmanager.o)
 .data          0x0002988c        0x0 ./circle/lib/fs/libfs.a(partition.o)
 .data          0x0002988c        0x0 ./circle/lib/libcircle.a(actled.o)
 .data          0x0002988c        0x0 ./circle/lib/libcircle.a(assert.o)
 .data          0x0002988c        0x0 ./circle/lib/libcircle.a(bcmpropertytags.o)
 .data          0x0002988c        0x0 ./circle/lib/libcircle.a(classallocator.o)
 .data          0x0002988c        0x0 ./circle/lib/libcircle.a(debug.o)
 .data          0x0002988c        0x0 ./circle/lib/libcircle.a(device.o)
 .data          0x0002988c        0x0 ./circle/lib/libcircle.a(devicenameservice.o)
 .data          0x0002988c        0x0 ./circle/lib/libcircle.a(gpiopin.o)
 .data          0x0002988c        0x0 ./circle/lib/libcircle.a(interrupt.o)
 .data          0x0002988c        0x0 ./circle/lib/libcircle.a(koptions.o)
 .data          0x0002988c        0x0 ./circle/lib/libcircle.a(logger.o)
 .data          0x0002988c        0x0 ./circle/lib/libcircle.a(machineinfo.o)
 .data          0x0002988c        0x0 ./circle/lib/libcircle.a(screen.o)
 .data          0x0002988c        0x0 ./circle/lib/libcircle.a(string.o)
 .data          0x0002988c        0x0 ./circle/lib/libcircle.a(sysinit.o)
 .data          0x0002988c       0x30 ./circle/lib/libcircle.a(timer.o)
                0x0002988c                CTimer::s_pMonthName
 .data          0x000298bc        0x0 ./circle/lib/libcircle.a(util.o)
 .data          0x000298bc        0x0 ./circle/lib/libcircle.a(util_fast.o)
 .data          0x000298bc        0x0 ./circle/lib/libcircle.a(virtualgpiopin.o)
 .data          0x000298bc       0x14 ./circle/lib/libcircle.a(exceptionhandler.o)
                0x000298bc                CExceptionHandler::s_pExceptionName
 .data          0x000298d0        0x8 ./circle/lib/libcircle.a(exceptionstub.o)
                0x000298d0                FIQData
 .data          0x000298d8        0x0 ./circle/lib/libcircle.a(memory.o)
 .data          0x000298d8        0x0 ./circle/lib/libcircle.a(pagetable.o)
 .data          0x000298d8        0x0 ./circle/lib/libcircle.a(startup.o)
 .data          0x000298d8        0x0 ./circle/lib/libcircle.a(synchronize.o)
 .data          0x000298d8        0x0 ./circle/lib/libcircle.a(new.o)
 .data          0x000298d8        0x0 ./circle/lib/libcircle.a(purecall.o)
 .data          0x000298d8       0x44 ./circle/lib/libcircle.a(alloc.o)
 .data          0x0002991c       0x70 ./circle/lib/libcircle.a(bcmframebuffer.o)
                0x0002991c                CBcmFrameBuffer::s_InitTags
 .data          0x0002998c        0x0 ./circle/lib/libcircle.a(bcmmailbox.o)
 .data          0x0002998c        0x0 ./circle/lib/libcircle.a(chargenerator.o)
 .data          0x0002998c        0x0 ./circle/lib/libcircle.a(delayloop.o)
 .data          0x0002998c        0x0 ./circle/lib/libcircle.a(gpiomanager.o)
 .data          0x0002998c        0x0 ./circle/lib/libcircle.a(ptrlist.o)

.igot.plt       0x0002998c        0x0
 .igot.plt      0x0002998c        0x0 src/main.o

.bss            0x0002998c       0xd0
                0x0002998c                __bss_start = .
 *(.bss*)
 .bss           0x0002998c        0x0 src/main.o
 .bss           0x0002998c        0x8 src/kernel.o
                0x0002998c                CKernel::s_pThis
                0x00029990                CKernel::_frameCount
 .bss           0x00029994        0x0 src/rdserial.o
 .bss           0x00029994        0x8 src/MiniHDLC.o
                0x00029994                MiniHDLC::_frameRxFn
                0x00029998                MiniHDLC::_putChFn
 .bss           0x0002999c        0x0 c:/program files (x86)/gnu tools arm embedded/7 2017-q4-major/bin/../lib/gcc/arm-none-eabi/7.2.1/hard/libgcc.a(_udivsi3.o)
 .bss           0x0002999c        0x0 c:/program files (x86)/gnu tools arm embedded/7 2017-q4-major/bin/../lib/gcc/arm-none-eabi/7.2.1/hard/libgcc.a(_dvmd_tls.o)
 .bss           0x0002999c        0x0 ./circle/lib/usb/libusb.a(dwhcidevice.o)
 .bss           0x0002999c        0x0 ./circle/lib/usb/libusb.a(dwhciregister.o)
 .bss           0x0002999c        0x4 ./circle/lib/usb/libusb.a(dwhcixferstagedata.o)
                0x0002999c                CDWHCITransferStageData::s_pAllocator
 .bss           0x000299a0        0x0 ./circle/lib/usb/libusb.a(usbdevice.o)
 .bss           0x000299a0        0x0 ./circle/lib/usb/libusb.a(usbendpoint.o)
 .bss           0x000299a0        0x0 ./circle/lib/usb/libusb.a(usbhostcontroller.o)
 .bss           0x000299a0        0x4 ./circle/lib/usb/libusb.a(usbrequest.o)
                0x000299a0                CUSBRequest::s_pAllocator
 .bss           0x000299a4        0x0 ./circle/lib/usb/libusb.a(usbdevicefactory.o)
 .bss           0x000299a4        0x0 ./circle/lib/usb/libusb.a(usbstandardhub.o)
 .bss           0x000299a4        0x0 ./circle/lib/usb/libusb.a(usbmassdevice.o)
 .bss           0x000299a4        0x4 ./circle/lib/usb/libusb.a(dwhciframeschednper.o)
                0x000299a4                CDWHCIFrameSchedulerNonPeriodic::s_pAllocator
 .bss           0x000299a8        0x4 ./circle/lib/usb/libusb.a(dwhciframeschedper.o)
                0x000299a8                CDWHCIFrameSchedulerPeriodic::s_pAllocator
 .bss           0x000299ac        0x0 ./circle/lib/usb/libusb.a(usbkeyboard.o)
 .bss           0x000299ac        0x0 ./circle/lib/usb/libusb.a(dwhcirootport.o)
 .bss           0x000299ac        0x0 ./circle/lib/usb/libusb.a(usbhiddevice.o)
 .bss           0x000299ac        0x0 ./circle/lib/usb/libusb.a(usbmouse.o)
 .bss           0x000299ac        0x0 ./circle/lib/usb/libusb.a(usbgamepadstandard.o)
 .bss           0x000299ac        0x0 ./circle/lib/usb/libusb.a(usbgamepadps3.o)
 .bss           0x000299ac        0x0 ./circle/lib/usb/libusb.a(usbgamepadps4.o)
 .bss           0x000299ac        0x0 ./circle/lib/usb/libusb.a(usbgamepadxbox360.o)
 .bss           0x000299ac        0x0 ./circle/lib/usb/libusb.a(usbgamepadxboxone.o)
 .bss           0x000299ac        0x0 ./circle/lib/usb/libusb.a(usbgamepadswitchpro.o)
 .bss           0x000299ac        0x0 ./circle/lib/usb/libusb.a(usbfunction.o)
 .bss           0x000299ac        0x4 ./circle/lib/usb/libusb.a(dwhciframeschednsplit.o)
                0x000299ac                CDWHCIFrameSchedulerNoSplit::s_pAllocator
 .bss           0x000299b0        0x0 ./circle/lib/usb/libusb.a(usbprinter.o)
 .bss           0x000299b0        0x0 ./circle/lib/usb/libusb.a(usbbluetooth.o)
 .bss           0x000299b0        0x0 ./circle/lib/usb/libusb.a(usbmidi.o)
 .bss           0x000299b0        0x0 ./circle/lib/usb/libusb.a(usbcdcethernet.o)
 .bss           0x000299b0        0x0 ./circle/lib/usb/libusb.a(usbconfigparser.o)
 .bss           0x000299b0        0x0 ./circle/lib/usb/libusb.a(usbstring.o)
 .bss           0x000299b0        0x0 ./circle/lib/usb/libusb.a(smsc951x.o)
 .bss           0x000299b0        0x0 ./circle/lib/usb/libusb.a(lan7800.o)
 .bss           0x000299b0        0x0 ./circle/lib/usb/libusb.a(macaddress.o)
 .bss           0x000299b0        0x4 ./circle/lib/usb/libusb.a(netdevice.o)
                0x000299b0                CNetDevice::s_nDeviceNumber
 .bss           0x000299b4        0x0 ./circle/lib/usb/libusb.a(usbgamepad.o)
 .bss           0x000299b4        0x0 ./circle/lib/input/libinput.a(keyboardbehaviour.o)
 .bss           0x000299b4        0x0 ./circle/lib/input/libinput.a(keymap.o)
 .bss           0x000299b4        0x0 ./circle/lib/input/libinput.a(mouse.o)
 .bss           0x000299b4        0x0 ./circle/lib/input/libinput.a(mousebehaviour.o)
 .bss           0x000299b4        0x0 ./circle/lib/fs/libfs.a(partitionmanager.o)
 .bss           0x000299b4        0x0 ./circle/lib/fs/libfs.a(partition.o)
 .bss           0x000299b4        0x4 ./circle/lib/libcircle.a(actled.o)
                0x000299b4                CActLED::s_pThis
 .bss           0x000299b8        0x0 ./circle/lib/libcircle.a(assert.o)
 .bss           0x000299b8        0x0 ./circle/lib/libcircle.a(bcmpropertytags.o)
 .bss           0x000299b8        0x0 ./circle/lib/libcircle.a(classallocator.o)
 .bss           0x000299b8        0x0 ./circle/lib/libcircle.a(debug.o)
 .bss           0x000299b8        0x0 ./circle/lib/libcircle.a(device.o)
 .bss           0x000299b8        0x4 ./circle/lib/libcircle.a(devicenameservice.o)
                0x000299b8                CDeviceNameService::s_This
 .bss           0x000299bc        0x4 ./circle/lib/libcircle.a(gpiopin.o)
                0x000299bc                CGPIOPin::s_SpinLock
 .bss           0x000299c0        0x4 ./circle/lib/libcircle.a(interrupt.o)
                0x000299c0                CInterruptSystem::s_pThis
 .bss           0x000299c4        0x4 ./circle/lib/libcircle.a(koptions.o)
                0x000299c4                CKernelOptions::s_pThis
 .bss           0x000299c8        0x4 ./circle/lib/libcircle.a(logger.o)
                0x000299c8                CLogger::s_pThis
 .bss           0x000299cc        0x4 ./circle/lib/libcircle.a(machineinfo.o)
                0x000299cc                CMachineInfo::s_pThis
 .bss           0x000299d0        0x0 ./circle/lib/libcircle.a(screen.o)
 .bss           0x000299d0        0x0 ./circle/lib/libcircle.a(string.o)
 .bss           0x000299d0        0x4 ./circle/lib/libcircle.a(sysinit.o)
                0x000299d0                __dso_handle
 .bss           0x000299d4        0x4 ./circle/lib/libcircle.a(timer.o)
                0x000299d4                CTimer::s_pThis
 .bss           0x000299d8        0x0 ./circle/lib/libcircle.a(util.o)
 .bss           0x000299d8        0x0 ./circle/lib/libcircle.a(util_fast.o)
 .bss           0x000299d8        0x8 ./circle/lib/libcircle.a(virtualgpiopin.o)
                0x000299d8                CVirtualGPIOPin::s_SpinLock
                0x000299dc                CVirtualGPIOPin::s_nGPIOBaseAddress
 .bss           0x000299e0        0x4 ./circle/lib/libcircle.a(exceptionhandler.o)
                0x000299e0                CExceptionHandler::s_pThis
 .bss           0x000299e4        0x0 ./circle/lib/libcircle.a(exceptionstub.o)
 .bss           0x000299e4        0x4 ./circle/lib/libcircle.a(memory.o)
                0x000299e4                CMemorySystem::s_pThis
 .bss           0x000299e8        0x0 ./circle/lib/libcircle.a(pagetable.o)
 .bss           0x000299e8        0x0 ./circle/lib/libcircle.a(startup.o)
 .bss           0x000299e8       0x54 ./circle/lib/libcircle.a(synchronize.o)
 .bss           0x00029a3c        0x0 ./circle/lib/libcircle.a(new.o)
 .bss           0x00029a3c        0x0 ./circle/lib/libcircle.a(purecall.o)
 .bss           0x00029a3c       0x1c ./circle/lib/libcircle.a(alloc.o)
 .bss           0x00029a58        0x0 ./circle/lib/libcircle.a(bcmframebuffer.o)
 .bss           0x00029a58        0x4 ./circle/lib/libcircle.a(bcmmailbox.o)
                0x00029a58                CBcmMailBox::s_SpinLock
 .bss           0x00029a5c        0x0 ./circle/lib/libcircle.a(chargenerator.o)
 .bss           0x00029a5c        0x0 ./circle/lib/libcircle.a(delayloop.o)
 .bss           0x00029a5c        0x0 ./circle/lib/libcircle.a(gpiomanager.o)
 .bss           0x00029a5c        0x0 ./circle/lib/libcircle.a(ptrlist.o)
 *(COMMON)
                0x00029a5c                _end = .
LOAD src/main.o
LOAD src/kernel.o
LOAD src/rdserial.o
LOAD src/MiniHDLC.o
LOAD c:/program files (x86)/gnu tools arm embedded/7 2017-q4-major/bin/../lib/gcc/arm-none-eabi/7.2.1/hard/libgcc.a
LOAD ./circle/lib/usb/libusb.a
LOAD ./circle/lib/input/libinput.a
LOAD ./circle/lib/fs/libfs.a
LOAD ./circle/lib/libcircle.a
LOAD c:/program files (x86)/gnu tools arm embedded/7 2017-q4-major/bin/../lib/gcc/arm-none-eabi/7.2.1/hard/libgcc.a
OUTPUT(kernel.elf elf32-littlearm)

.debug_info     0x00000000    0x65c18
 .debug_info    0x00000000     0x240f src/main.o
 .debug_info    0x0000240f     0x2d53 src/kernel.o
 .debug_info    0x00005162     0x1c96 src/rdserial.o
 .debug_info    0x00006df8      0x995 src/MiniHDLC.o
 .debug_info    0x0000778d     0x6993 ./circle/lib/usb/libusb.a(dwhcidevice.o)
 .debug_info    0x0000e120     0x143f ./circle/lib/usb/libusb.a(dwhciregister.o)
 .debug_info    0x0000f55f     0x289f ./circle/lib/usb/libusb.a(dwhcixferstagedata.o)
 .debug_info    0x00011dfe     0x2bc6 ./circle/lib/usb/libusb.a(usbdevice.o)
 .debug_info    0x000149c4      0xa16 ./circle/lib/usb/libusb.a(usbendpoint.o)
 .debug_info    0x000153da     0x1866 ./circle/lib/usb/libusb.a(usbhostcontroller.o)
 .debug_info    0x00016c40     0x102b ./circle/lib/usb/libusb.a(usbrequest.o)
 .debug_info    0x00017c6b      0x81d ./circle/lib/usb/libusb.a(usbdevicefactory.o)
 .debug_info    0x00018488     0x2593 ./circle/lib/usb/libusb.a(usbstandardhub.o)
 .debug_info    0x0001aa1b     0x2bf9 ./circle/lib/usb/libusb.a(usbmassdevice.o)
 .debug_info    0x0001d614     0x1814 ./circle/lib/usb/libusb.a(dwhciframeschednper.o)
 .debug_info    0x0001ee28     0x1ad9 ./circle/lib/usb/libusb.a(dwhciframeschedper.o)
 .debug_info    0x00020901     0x1dc5 ./circle/lib/usb/libusb.a(usbkeyboard.o)
 .debug_info    0x000226c6     0x107c ./circle/lib/usb/libusb.a(dwhcirootport.o)
 .debug_info    0x00023742     0x23f0 ./circle/lib/usb/libusb.a(usbhiddevice.o)
 .debug_info    0x00025b32     0x12b9 ./circle/lib/usb/libusb.a(usbmouse.o)
 .debug_info    0x00026deb     0x1810 ./circle/lib/usb/libusb.a(usbgamepadstandard.o)
 .debug_info    0x000285fb     0x1930 ./circle/lib/usb/libusb.a(usbgamepadps3.o)
 .debug_info    0x00029f2b     0x1cd1 ./circle/lib/usb/libusb.a(usbgamepadps4.o)
 .debug_info    0x0002bbfc     0x17da ./circle/lib/usb/libusb.a(usbgamepadxbox360.o)
 .debug_info    0x0002d3d6     0x17e2 ./circle/lib/usb/libusb.a(usbgamepadxboxone.o)
 .debug_info    0x0002ebb8     0x1ab4 ./circle/lib/usb/libusb.a(usbgamepadswitchpro.o)
 .debug_info    0x0003066c     0x1ffe ./circle/lib/usb/libusb.a(usbfunction.o)
 .debug_info    0x0003266a      0xd3b ./circle/lib/usb/libusb.a(dwhciframeschednsplit.o)
 .debug_info    0x000333a5     0x18a3 ./circle/lib/usb/libusb.a(usbprinter.o)
 .debug_info    0x00034c48     0x21f5 ./circle/lib/usb/libusb.a(usbbluetooth.o)
 .debug_info    0x00036e3d     0x2462 ./circle/lib/usb/libusb.a(usbmidi.o)
 .debug_info    0x0003929f     0x23cb ./circle/lib/usb/libusb.a(usbcdcethernet.o)
 .debug_info    0x0003b66a     0x14ff ./circle/lib/usb/libusb.a(usbconfigparser.o)
 .debug_info    0x0003cb69      0x96d ./circle/lib/usb/libusb.a(usbstring.o)
 .debug_info    0x0003d4d6     0x2ef2 ./circle/lib/usb/libusb.a(smsc951x.o)
 .debug_info    0x000403c8     0x32ff ./circle/lib/usb/libusb.a(lan7800.o)
 .debug_info    0x000436c7      0x7d6 ./circle/lib/usb/libusb.a(macaddress.o)
 .debug_info    0x00043e9d      0x9ce ./circle/lib/usb/libusb.a(netdevice.o)
 .debug_info    0x0004486b     0x17e6 ./circle/lib/usb/libusb.a(usbgamepad.o)
 .debug_info    0x00046051     0x1377 ./circle/lib/input/libinput.a(keyboardbehaviour.o)
 .debug_info    0x000473c8      0xc2f ./circle/lib/input/libinput.a(keymap.o)
 .debug_info    0x00047ff7      0xb52 ./circle/lib/input/libinput.a(mouse.o)
 .debug_info    0x00048b49      0xb62 ./circle/lib/input/libinput.a(mousebehaviour.o)
 .debug_info    0x000496ab     0x13ae ./circle/lib/fs/libfs.a(partitionmanager.o)
 .debug_info    0x0004aa59      0x5ac ./circle/lib/fs/libfs.a(partition.o)
 .debug_info    0x0004b005     0x110c ./circle/lib/libcircle.a(actled.o)
 .debug_info    0x0004c111      0xdef ./circle/lib/libcircle.a(assert.o)
 .debug_info    0x0004cf00      0x7da ./circle/lib/libcircle.a(bcmpropertytags.o)
 .debug_info    0x0004d6da     0x13b8 ./circle/lib/libcircle.a(classallocator.o)
 .debug_info    0x0004ea92      0xe45 ./circle/lib/libcircle.a(debug.o)
 .debug_info    0x0004f8d7      0x363 ./circle/lib/libcircle.a(device.o)
 .debug_info    0x0004fc3a      0xd6d ./circle/lib/libcircle.a(devicenameservice.o)
 .debug_info    0x000509a7     0x254f ./circle/lib/libcircle.a(gpiopin.o)
 .debug_info    0x00052ef6      0xb40 ./circle/lib/libcircle.a(interrupt.o)
 .debug_info    0x00053a36      0xf6a ./circle/lib/libcircle.a(koptions.o)
 .debug_info    0x000549a0     0x1dda ./circle/lib/libcircle.a(logger.o)
 .debug_info    0x0005677a      0xc0e ./circle/lib/libcircle.a(machineinfo.o)
 .debug_info    0x00057388     0x2947 ./circle/lib/libcircle.a(screen.o)
 .debug_info    0x00059ccf     0x1cc9 ./circle/lib/libcircle.a(string.o)
 .debug_info    0x0005b998      0x59f ./circle/lib/libcircle.a(sysinit.o)
 .debug_info    0x0005bf37     0x2284 ./circle/lib/libcircle.a(timer.o)
 .debug_info    0x0005e1bb      0x593 ./circle/lib/libcircle.a(util.o)
 .debug_info    0x0005e74e      0xafc ./circle/lib/libcircle.a(virtualgpiopin.o)
 .debug_info    0x0005f24a     0x12ff ./circle/lib/libcircle.a(exceptionhandler.o)
 .debug_info    0x00060549      0x8a1 ./circle/lib/libcircle.a(memory.o)
 .debug_info    0x00060dea      0x275 ./circle/lib/libcircle.a(pagetable.o)
 .debug_info    0x0006105f      0x231 ./circle/lib/libcircle.a(synchronize.o)
 .debug_info    0x00061290      0x20c ./circle/lib/libcircle.a(new.o)
 .debug_info    0x0006149c       0x68 ./circle/lib/libcircle.a(purecall.o)
 .debug_info    0x00061504     0x14ed ./circle/lib/libcircle.a(alloc.o)
 .debug_info    0x000629f1      0xe2b ./circle/lib/libcircle.a(bcmframebuffer.o)
 .debug_info    0x0006381c      0xf60 ./circle/lib/libcircle.a(bcmmailbox.o)
 .debug_info    0x0006477c      0x3ab ./circle/lib/libcircle.a(chargenerator.o)
 .debug_info    0x00064b27      0x980 ./circle/lib/libcircle.a(gpiomanager.o)
 .debug_info    0x000654a7      0x771 ./circle/lib/libcircle.a(ptrlist.o)

.debug_abbrev   0x00000000    0x126df
 .debug_abbrev  0x00000000      0x3fd src/main.o
 .debug_abbrev  0x000003fd      0x59d src/kernel.o
 .debug_abbrev  0x0000099a      0x53a src/rdserial.o
 .debug_abbrev  0x00000ed4      0x386 src/MiniHDLC.o
 .debug_abbrev  0x0000125a      0x71a ./circle/lib/usb/libusb.a(dwhcidevice.o)
 .debug_abbrev  0x00001974      0x3ba ./circle/lib/usb/libusb.a(dwhciregister.o)
 .debug_abbrev  0x00001d2e      0x50f ./circle/lib/usb/libusb.a(dwhcixferstagedata.o)
 .debug_abbrev  0x0000223d      0x609 ./circle/lib/usb/libusb.a(usbdevice.o)
 .debug_abbrev  0x00002846      0x281 ./circle/lib/usb/libusb.a(usbendpoint.o)
 .debug_abbrev  0x00002ac7      0x44d ./circle/lib/usb/libusb.a(usbhostcontroller.o)
 .debug_abbrev  0x00002f14      0x2fd ./circle/lib/usb/libusb.a(usbrequest.o)
 .debug_abbrev  0x00003211      0x173 ./circle/lib/usb/libusb.a(usbdevicefactory.o)
 .debug_abbrev  0x00003384      0x4fe ./circle/lib/usb/libusb.a(usbstandardhub.o)
 .debug_abbrev  0x00003882      0x56a ./circle/lib/usb/libusb.a(usbmassdevice.o)
 .debug_abbrev  0x00003dec      0x511 ./circle/lib/usb/libusb.a(dwhciframeschednper.o)
 .debug_abbrev  0x000042fd      0x56a ./circle/lib/usb/libusb.a(dwhciframeschedper.o)
 .debug_abbrev  0x00004867      0x521 ./circle/lib/usb/libusb.a(usbkeyboard.o)
 .debug_abbrev  0x00004d88      0x392 ./circle/lib/usb/libusb.a(dwhcirootport.o)
 .debug_abbrev  0x0000511a      0x467 ./circle/lib/usb/libusb.a(usbhiddevice.o)
 .debug_abbrev  0x00005581      0x475 ./circle/lib/usb/libusb.a(usbmouse.o)
 .debug_abbrev  0x000059f6      0x4e5 ./circle/lib/usb/libusb.a(usbgamepadstandard.o)
 .debug_abbrev  0x00005edb      0x526 ./circle/lib/usb/libusb.a(usbgamepadps3.o)
 .debug_abbrev  0x00006401      0x5ef ./circle/lib/usb/libusb.a(usbgamepadps4.o)
 .debug_abbrev  0x000069f0      0x51c ./circle/lib/usb/libusb.a(usbgamepadxbox360.o)
 .debug_abbrev  0x00006f0c      0x519 ./circle/lib/usb/libusb.a(usbgamepadxboxone.o)
 .debug_abbrev  0x00007425      0x544 ./circle/lib/usb/libusb.a(usbgamepadswitchpro.o)
 .debug_abbrev  0x00007969      0x475 ./circle/lib/usb/libusb.a(usbfunction.o)
 .debug_abbrev  0x00007dde      0x3bd ./circle/lib/usb/libusb.a(dwhciframeschednsplit.o)
 .debug_abbrev  0x0000819b      0x421 ./circle/lib/usb/libusb.a(usbprinter.o)
 .debug_abbrev  0x000085bc      0x47d ./circle/lib/usb/libusb.a(usbbluetooth.o)
 .debug_abbrev  0x00008a39      0x4a4 ./circle/lib/usb/libusb.a(usbmidi.o)
 .debug_abbrev  0x00008edd      0x47e ./circle/lib/usb/libusb.a(usbcdcethernet.o)
 .debug_abbrev  0x0000935b      0x3cc ./circle/lib/usb/libusb.a(usbconfigparser.o)
 .debug_abbrev  0x00009727      0x2b8 ./circle/lib/usb/libusb.a(usbstring.o)
 .debug_abbrev  0x000099df      0x5eb ./circle/lib/usb/libusb.a(smsc951x.o)
 .debug_abbrev  0x00009fca      0x5e7 ./circle/lib/usb/libusb.a(lan7800.o)
 .debug_abbrev  0x0000a5b1      0x268 ./circle/lib/usb/libusb.a(macaddress.o)
 .debug_abbrev  0x0000a819      0x33d ./circle/lib/usb/libusb.a(netdevice.o)
 .debug_abbrev  0x0000ab56      0x505 ./circle/lib/usb/libusb.a(usbgamepad.o)
 .debug_abbrev  0x0000b05b      0x3ff ./circle/lib/input/libinput.a(keyboardbehaviour.o)
 .debug_abbrev  0x0000b45a      0x30a ./circle/lib/input/libinput.a(keymap.o)
 .debug_abbrev  0x0000b764      0x2b1 ./circle/lib/input/libinput.a(mouse.o)
 .debug_abbrev  0x0000ba15      0x337 ./circle/lib/input/libinput.a(mousebehaviour.o)
 .debug_abbrev  0x0000bd4c      0x40f ./circle/lib/fs/libfs.a(partitionmanager.o)
 .debug_abbrev  0x0000c15b      0x2a5 ./circle/lib/fs/libfs.a(partition.o)
 .debug_abbrev  0x0000c400      0x464 ./circle/lib/libcircle.a(actled.o)
 .debug_abbrev  0x0000c864      0x2f1 ./circle/lib/libcircle.a(assert.o)
 .debug_abbrev  0x0000cb55      0x2b9 ./circle/lib/libcircle.a(bcmpropertytags.o)
 .debug_abbrev  0x0000ce0e      0x3ba ./circle/lib/libcircle.a(classallocator.o)
 .debug_abbrev  0x0000d1c8      0x2ff ./circle/lib/libcircle.a(debug.o)
 .debug_abbrev  0x0000d4c7      0x210 ./circle/lib/libcircle.a(device.o)
 .debug_abbrev  0x0000d6d7      0x346 ./circle/lib/libcircle.a(devicenameservice.o)
 .debug_abbrev  0x0000da1d      0x5c4 ./circle/lib/libcircle.a(gpiopin.o)
 .debug_abbrev  0x0000dfe1      0x384 ./circle/lib/libcircle.a(interrupt.o)
 .debug_abbrev  0x0000e365      0x418 ./circle/lib/libcircle.a(koptions.o)
 .debug_abbrev  0x0000e77d      0x514 ./circle/lib/libcircle.a(logger.o)
 .debug_abbrev  0x0000ec91      0x387 ./circle/lib/libcircle.a(machineinfo.o)
 .debug_abbrev  0x0000f018      0x530 ./circle/lib/libcircle.a(screen.o)
 .debug_abbrev  0x0000f548      0x45c ./circle/lib/libcircle.a(string.o)
 .debug_abbrev  0x0000f9a4      0x27f ./circle/lib/libcircle.a(sysinit.o)
 .debug_abbrev  0x0000fc23      0x612 ./circle/lib/libcircle.a(timer.o)
 .debug_abbrev  0x00010235      0x1fb ./circle/lib/libcircle.a(util.o)
 .debug_abbrev  0x00010430      0x465 ./circle/lib/libcircle.a(virtualgpiopin.o)
 .debug_abbrev  0x00010895      0x427 ./circle/lib/libcircle.a(exceptionhandler.o)
 .debug_abbrev  0x00010cbc      0x354 ./circle/lib/libcircle.a(memory.o)
 .debug_abbrev  0x00011010      0x18f ./circle/lib/libcircle.a(pagetable.o)
 .debug_abbrev  0x0001119f      0x10b ./circle/lib/libcircle.a(synchronize.o)
 .debug_abbrev  0x000112aa      0x102 ./circle/lib/libcircle.a(new.o)
 .debug_abbrev  0x000113ac       0x57 ./circle/lib/libcircle.a(purecall.o)
 .debug_abbrev  0x00011403      0x49e ./circle/lib/libcircle.a(alloc.o)
 .debug_abbrev  0x000118a1      0x3ab ./circle/lib/libcircle.a(bcmframebuffer.o)
 .debug_abbrev  0x00011c4c      0x40a ./circle/lib/libcircle.a(bcmmailbox.o)
 .debug_abbrev  0x00012056      0x1a4 ./circle/lib/libcircle.a(chargenerator.o)
 .debug_abbrev  0x000121fa      0x338 ./circle/lib/libcircle.a(gpiomanager.o)
 .debug_abbrev  0x00012532      0x1ad ./circle/lib/libcircle.a(ptrlist.o)

.debug_loc      0x00000000    0x19b16
 .debug_loc     0x00000000       0x13 src/main.o
 .debug_loc     0x00000013      0x3cf src/kernel.o
 .debug_loc     0x000003e2     0x10f9 src/rdserial.o
 .debug_loc     0x000014db      0x701 src/MiniHDLC.o
 .debug_loc     0x00001bdc     0x17cf ./circle/lib/usb/libusb.a(dwhcidevice.o)
 .debug_loc     0x000033ab      0x25b ./circle/lib/usb/libusb.a(dwhciregister.o)
 .debug_loc     0x00003606      0x942 ./circle/lib/usb/libusb.a(dwhcixferstagedata.o)
 .debug_loc     0x00003f48      0x820 ./circle/lib/usb/libusb.a(usbdevice.o)
 .debug_loc     0x00004768      0x488 ./circle/lib/usb/libusb.a(usbendpoint.o)
 .debug_loc     0x00004bf0      0x32b ./circle/lib/usb/libusb.a(usbhostcontroller.o)
 .debug_loc     0x00004f1b      0x471 ./circle/lib/usb/libusb.a(usbrequest.o)
 .debug_loc     0x0000538c      0x1f9 ./circle/lib/usb/libusb.a(usbdevicefactory.o)
 .debug_loc     0x00005585      0x552 ./circle/lib/usb/libusb.a(usbstandardhub.o)
 .debug_loc     0x00005ad7      0x924 ./circle/lib/usb/libusb.a(usbmassdevice.o)
 .debug_loc     0x000063fb      0x47f ./circle/lib/usb/libusb.a(dwhciframeschednper.o)
 .debug_loc     0x0000687a      0x4ca ./circle/lib/usb/libusb.a(dwhciframeschedper.o)
 .debug_loc     0x00006d44      0x56b ./circle/lib/usb/libusb.a(usbkeyboard.o)
 .debug_loc     0x000072af       0x87 ./circle/lib/usb/libusb.a(dwhcirootport.o)
 .debug_loc     0x00007336      0x80a ./circle/lib/usb/libusb.a(usbhiddevice.o)
 .debug_loc     0x00007b40      0x1ec ./circle/lib/usb/libusb.a(usbmouse.o)
 .debug_loc     0x00007d2c      0xab5 ./circle/lib/usb/libusb.a(usbgamepadstandard.o)
 .debug_loc     0x000087e1      0x45d ./circle/lib/usb/libusb.a(usbgamepadps3.o)
 .debug_loc     0x00008c3e      0x68b ./circle/lib/usb/libusb.a(usbgamepadps4.o)
 .debug_loc     0x000092c9      0x487 ./circle/lib/usb/libusb.a(usbgamepadxbox360.o)
 .debug_loc     0x00009750      0x3a8 ./circle/lib/usb/libusb.a(usbgamepadxboxone.o)
 .debug_loc     0x00009af8      0x342 ./circle/lib/usb/libusb.a(usbgamepadswitchpro.o)
 .debug_loc     0x00009e3a      0x588 ./circle/lib/usb/libusb.a(usbfunction.o)
 .debug_loc     0x0000a3c2      0x202 ./circle/lib/usb/libusb.a(dwhciframeschednsplit.o)
 .debug_loc     0x0000a5c4      0x237 ./circle/lib/usb/libusb.a(usbprinter.o)
 .debug_loc     0x0000a7fb      0x48c ./circle/lib/usb/libusb.a(usbbluetooth.o)
 .debug_loc     0x0000ac87      0x6b8 ./circle/lib/usb/libusb.a(usbmidi.o)
 .debug_loc     0x0000b33f      0x60e ./circle/lib/usb/libusb.a(usbcdcethernet.o)
 .debug_loc     0x0000b94d      0x508 ./circle/lib/usb/libusb.a(usbconfigparser.o)
 .debug_loc     0x0000be55      0x312 ./circle/lib/usb/libusb.a(usbstring.o)
 .debug_loc     0x0000c167      0x90c ./circle/lib/usb/libusb.a(smsc951x.o)
 .debug_loc     0x0000ca73      0xa7b ./circle/lib/usb/libusb.a(lan7800.o)
 .debug_loc     0x0000d4ee      0x33c ./circle/lib/usb/libusb.a(macaddress.o)
 .debug_loc     0x0000d82a      0x128 ./circle/lib/usb/libusb.a(netdevice.o)
 .debug_loc     0x0000d952      0x2a3 ./circle/lib/usb/libusb.a(usbgamepad.o)
 .debug_loc     0x0000dbf5      0x43b ./circle/lib/input/libinput.a(keyboardbehaviour.o)
 .debug_loc     0x0000e030      0x529 ./circle/lib/input/libinput.a(keymap.o)
 .debug_loc     0x0000e559      0x349 ./circle/lib/input/libinput.a(mouse.o)
 .debug_loc     0x0000e8a2      0x4a1 ./circle/lib/input/libinput.a(mousebehaviour.o)
 .debug_loc     0x0000ed43      0x164 ./circle/lib/fs/libfs.a(partitionmanager.o)
 .debug_loc     0x0000eea7      0x419 ./circle/lib/fs/libfs.a(partition.o)
 .debug_loc     0x0000f2c0      0x360 ./circle/lib/libcircle.a(actled.o)
 .debug_loc     0x0000f620       0x84 ./circle/lib/libcircle.a(assert.o)
 .debug_loc     0x0000f6a4      0x248 ./circle/lib/libcircle.a(bcmpropertytags.o)
 .debug_loc     0x0000f8ec      0x3a6 ./circle/lib/libcircle.a(classallocator.o)
 .debug_loc     0x0000fc92      0x164 ./circle/lib/libcircle.a(debug.o)
 .debug_loc     0x0000fdf6       0x60 ./circle/lib/libcircle.a(device.o)
 .debug_loc     0x0000fe56      0x82c ./circle/lib/libcircle.a(devicenameservice.o)
 .debug_loc     0x00010682      0xdf6 ./circle/lib/libcircle.a(gpiopin.o)
 .debug_loc     0x00011478      0x667 ./circle/lib/libcircle.a(interrupt.o)
 .debug_loc     0x00011adf      0x3b6 ./circle/lib/libcircle.a(koptions.o)
 .debug_loc     0x00011e95      0x80f ./circle/lib/libcircle.a(logger.o)
 .debug_loc     0x000126a4      0x300 ./circle/lib/libcircle.a(machineinfo.o)
 .debug_loc     0x000129a4     0x169b ./circle/lib/libcircle.a(screen.o)
 .debug_loc     0x0001403f     0x1cfc ./circle/lib/libcircle.a(string.o)
 .debug_loc     0x00015d3b       0x92 ./circle/lib/libcircle.a(sysinit.o)
 .debug_loc     0x00015dcd     0x12b2 ./circle/lib/libcircle.a(timer.o)
 .debug_loc     0x0001707f      0xad0 ./circle/lib/libcircle.a(util.o)
 .debug_loc     0x00017b4f      0x32f ./circle/lib/libcircle.a(virtualgpiopin.o)
 .debug_loc     0x00017e7e      0x2ff ./circle/lib/libcircle.a(exceptionhandler.o)
 .debug_loc     0x0001817d      0x221 ./circle/lib/libcircle.a(memory.o)
 .debug_loc     0x0001839e       0x79 ./circle/lib/libcircle.a(pagetable.o)
 .debug_loc     0x00018417       0x88 ./circle/lib/libcircle.a(synchronize.o)
 .debug_loc     0x0001849f       0x84 ./circle/lib/libcircle.a(new.o)
 .debug_loc     0x00018523      0x6c1 ./circle/lib/libcircle.a(alloc.o)
 .debug_loc     0x00018be4      0x3cf ./circle/lib/libcircle.a(bcmframebuffer.o)
 .debug_loc     0x00018fb3      0x256 ./circle/lib/libcircle.a(bcmmailbox.o)
 .debug_loc     0x00019209      0x1cf ./circle/lib/libcircle.a(chargenerator.o)
 .debug_loc     0x000193d8      0x3ec ./circle/lib/libcircle.a(gpiomanager.o)
 .debug_loc     0x000197c4      0x352 ./circle/lib/libcircle.a(ptrlist.o)

.debug_aranges  0x00000000      0xa30
 .debug_aranges
                0x00000000       0x20 src/main.o
 .debug_aranges
                0x00000020       0x20 src/kernel.o
 .debug_aranges
                0x00000040       0x20 src/rdserial.o
 .debug_aranges
                0x00000060       0x20 src/MiniHDLC.o
 .debug_aranges
                0x00000080       0x20 ./circle/lib/usb/libusb.a(dwhcidevice.o)
 .debug_aranges
                0x000000a0       0x20 ./circle/lib/usb/libusb.a(dwhciregister.o)
 .debug_aranges
                0x000000c0       0x20 ./circle/lib/usb/libusb.a(dwhcixferstagedata.o)
 .debug_aranges
                0x000000e0       0x20 ./circle/lib/usb/libusb.a(usbdevice.o)
 .debug_aranges
                0x00000100       0x20 ./circle/lib/usb/libusb.a(usbendpoint.o)
 .debug_aranges
                0x00000120       0x20 ./circle/lib/usb/libusb.a(usbhostcontroller.o)
 .debug_aranges
                0x00000140       0x20 ./circle/lib/usb/libusb.a(usbrequest.o)
 .debug_aranges
                0x00000160       0x20 ./circle/lib/usb/libusb.a(usbdevicefactory.o)
 .debug_aranges
                0x00000180       0x20 ./circle/lib/usb/libusb.a(usbstandardhub.o)
 .debug_aranges
                0x000001a0       0x20 ./circle/lib/usb/libusb.a(usbmassdevice.o)
 .debug_aranges
                0x000001c0       0x20 ./circle/lib/usb/libusb.a(dwhciframeschednper.o)
 .debug_aranges
                0x000001e0       0x20 ./circle/lib/usb/libusb.a(dwhciframeschedper.o)
 .debug_aranges
                0x00000200       0x20 ./circle/lib/usb/libusb.a(usbkeyboard.o)
 .debug_aranges
                0x00000220       0x20 ./circle/lib/usb/libusb.a(dwhcirootport.o)
 .debug_aranges
                0x00000240       0x20 ./circle/lib/usb/libusb.a(usbhiddevice.o)
 .debug_aranges
                0x00000260       0x20 ./circle/lib/usb/libusb.a(usbmouse.o)
 .debug_aranges
                0x00000280       0x40 ./circle/lib/usb/libusb.a(usbgamepadstandard.o)
 .debug_aranges
                0x000002c0       0x30 ./circle/lib/usb/libusb.a(usbgamepadps3.o)
 .debug_aranges
                0x000002f0       0x28 ./circle/lib/usb/libusb.a(usbgamepadps4.o)
 .debug_aranges
                0x00000318       0x30 ./circle/lib/usb/libusb.a(usbgamepadxbox360.o)
 .debug_aranges
                0x00000348       0x38 ./circle/lib/usb/libusb.a(usbgamepadxboxone.o)
 .debug_aranges
                0x00000380       0x30 ./circle/lib/usb/libusb.a(usbgamepadswitchpro.o)
 .debug_aranges
                0x000003b0       0x20 ./circle/lib/usb/libusb.a(usbfunction.o)
 .debug_aranges
                0x000003d0       0x20 ./circle/lib/usb/libusb.a(dwhciframeschednsplit.o)
 .debug_aranges
                0x000003f0       0x20 ./circle/lib/usb/libusb.a(usbprinter.o)
 .debug_aranges
                0x00000410       0x20 ./circle/lib/usb/libusb.a(usbbluetooth.o)
 .debug_aranges
                0x00000430       0x20 ./circle/lib/usb/libusb.a(usbmidi.o)
 .debug_aranges
                0x00000450       0x30 ./circle/lib/usb/libusb.a(usbcdcethernet.o)
 .debug_aranges
                0x00000480       0x20 ./circle/lib/usb/libusb.a(usbconfigparser.o)
 .debug_aranges
                0x000004a0       0x20 ./circle/lib/usb/libusb.a(usbstring.o)
 .debug_aranges
                0x000004c0       0x20 ./circle/lib/usb/libusb.a(smsc951x.o)
 .debug_aranges
                0x000004e0       0x20 ./circle/lib/usb/libusb.a(lan7800.o)
 .debug_aranges
                0x00000500       0x20 ./circle/lib/usb/libusb.a(macaddress.o)
 .debug_aranges
                0x00000520       0x30 ./circle/lib/usb/libusb.a(netdevice.o)
 .debug_aranges
                0x00000550       0x40 ./circle/lib/usb/libusb.a(usbgamepad.o)
 .debug_aranges
                0x00000590       0x20 ./circle/lib/input/libinput.a(keyboardbehaviour.o)
 .debug_aranges
                0x000005b0       0x20 ./circle/lib/input/libinput.a(keymap.o)
 .debug_aranges
                0x000005d0       0x20 ./circle/lib/input/libinput.a(mouse.o)
 .debug_aranges
                0x000005f0       0x20 ./circle/lib/input/libinput.a(mousebehaviour.o)
 .debug_aranges
                0x00000610       0x20 ./circle/lib/fs/libfs.a(partitionmanager.o)
 .debug_aranges
                0x00000630       0x20 ./circle/lib/fs/libfs.a(partition.o)
 .debug_aranges
                0x00000650       0x20 ./circle/lib/libcircle.a(actled.o)
 .debug_aranges
                0x00000670       0x20 ./circle/lib/libcircle.a(assert.o)
 .debug_aranges
                0x00000690       0x20 ./circle/lib/libcircle.a(bcmpropertytags.o)
 .debug_aranges
                0x000006b0       0x20 ./circle/lib/libcircle.a(classallocator.o)
 .debug_aranges
                0x000006d0       0x20 ./circle/lib/libcircle.a(debug.o)
 .debug_aranges
                0x000006f0       0x20 ./circle/lib/libcircle.a(device.o)
 .debug_aranges
                0x00000710       0x20 ./circle/lib/libcircle.a(devicenameservice.o)
 .debug_aranges
                0x00000730       0x28 ./circle/lib/libcircle.a(gpiopin.o)
 .debug_aranges
                0x00000758       0x20 ./circle/lib/libcircle.a(interrupt.o)
 .debug_aranges
                0x00000778       0x20 ./circle/lib/libcircle.a(koptions.o)
 .debug_aranges
                0x00000798       0x20 ./circle/lib/libcircle.a(logger.o)
 .debug_aranges
                0x000007b8       0x20 ./circle/lib/libcircle.a(machineinfo.o)
 .debug_aranges
                0x000007d8       0x20 ./circle/lib/libcircle.a(screen.o)
 .debug_aranges
                0x000007f8       0x20 ./circle/lib/libcircle.a(string.o)
 .debug_aranges
                0x00000818       0x20 ./circle/lib/libcircle.a(sysinit.o)
 .debug_aranges
                0x00000838       0x20 ./circle/lib/libcircle.a(timer.o)
 .debug_aranges
                0x00000858       0x20 ./circle/lib/libcircle.a(util.o)
 .debug_aranges
                0x00000878       0x28 ./circle/lib/libcircle.a(virtualgpiopin.o)
 .debug_aranges
                0x000008a0       0x20 ./circle/lib/libcircle.a(exceptionhandler.o)
 .debug_aranges
                0x000008c0       0x20 ./circle/lib/libcircle.a(memory.o)
 .debug_aranges
                0x000008e0       0x20 ./circle/lib/libcircle.a(pagetable.o)
 .debug_aranges
                0x00000900       0x20 ./circle/lib/libcircle.a(synchronize.o)
 .debug_aranges
                0x00000920       0x20 ./circle/lib/libcircle.a(new.o)
 .debug_aranges
                0x00000940       0x20 ./circle/lib/libcircle.a(purecall.o)
 .debug_aranges
                0x00000960       0x28 ./circle/lib/libcircle.a(alloc.o)
 .debug_aranges
                0x00000988       0x20 ./circle/lib/libcircle.a(bcmframebuffer.o)
 .debug_aranges
                0x000009a8       0x28 ./circle/lib/libcircle.a(bcmmailbox.o)
 .debug_aranges
                0x000009d0       0x20 ./circle/lib/libcircle.a(chargenerator.o)
 .debug_aranges
                0x000009f0       0x20 ./circle/lib/libcircle.a(gpiomanager.o)
 .debug_aranges
                0x00000a10       0x20 ./circle/lib/libcircle.a(ptrlist.o)

.debug_ranges   0x00000000     0x24b0
 .debug_ranges  0x00000000       0x10 src/main.o
 .debug_ranges  0x00000010       0x48 src/kernel.o
 .debug_ranges  0x00000058      0x2c8 src/rdserial.o
 .debug_ranges  0x00000320       0x48 src/MiniHDLC.o
 .debug_ranges  0x00000368      0x278 ./circle/lib/usb/libusb.a(dwhcidevice.o)
 .debug_ranges  0x000005e0       0xa0 ./circle/lib/usb/libusb.a(usbdevice.o)
 .debug_ranges  0x00000680       0x20 ./circle/lib/usb/libusb.a(usbendpoint.o)
 .debug_ranges  0x000006a0       0xb8 ./circle/lib/usb/libusb.a(usbstandardhub.o)
 .debug_ranges  0x00000758       0x70 ./circle/lib/usb/libusb.a(usbmassdevice.o)
 .debug_ranges  0x000007c8       0x18 ./circle/lib/usb/libusb.a(dwhciframeschednper.o)
 .debug_ranges  0x000007e0       0x50 ./circle/lib/usb/libusb.a(dwhciframeschedper.o)
 .debug_ranges  0x00000830       0x80 ./circle/lib/usb/libusb.a(usbkeyboard.o)
 .debug_ranges  0x000008b0      0x100 ./circle/lib/usb/libusb.a(usbgamepadstandard.o)
 .debug_ranges  0x000009b0       0x90 ./circle/lib/usb/libusb.a(usbgamepadps3.o)
 .debug_ranges  0x00000a40       0x90 ./circle/lib/usb/libusb.a(usbgamepadps4.o)
 .debug_ranges  0x00000ad0       0xb8 ./circle/lib/usb/libusb.a(usbgamepadxbox360.o)
 .debug_ranges  0x00000b88       0xa0 ./circle/lib/usb/libusb.a(usbgamepadxboxone.o)
 .debug_ranges  0x00000c28       0x40 ./circle/lib/usb/libusb.a(usbgamepadswitchpro.o)
 .debug_ranges  0x00000c68       0x58 ./circle/lib/usb/libusb.a(usbmidi.o)
 .debug_ranges  0x00000cc0       0x38 ./circle/lib/usb/libusb.a(usbcdcethernet.o)
 .debug_ranges  0x00000cf8       0x90 ./circle/lib/usb/libusb.a(usbconfigparser.o)
 .debug_ranges  0x00000d88       0x68 ./circle/lib/usb/libusb.a(usbstring.o)
 .debug_ranges  0x00000df0       0x28 ./circle/lib/usb/libusb.a(smsc951x.o)
 .debug_ranges  0x00000e18       0x28 ./circle/lib/usb/libusb.a(lan7800.o)
 .debug_ranges  0x00000e40       0x38 ./circle/lib/usb/libusb.a(macaddress.o)
 .debug_ranges  0x00000e78       0x20 ./circle/lib/usb/libusb.a(netdevice.o)
 .debug_ranges  0x00000e98       0x60 ./circle/lib/usb/libusb.a(usbgamepad.o)
 .debug_ranges  0x00000ef8       0x18 ./circle/lib/input/libinput.a(keyboardbehaviour.o)
 .debug_ranges  0x00000f10       0x48 ./circle/lib/input/libinput.a(keymap.o)
 .debug_ranges  0x00000f58       0x38 ./circle/lib/input/libinput.a(mousebehaviour.o)
 .debug_ranges  0x00000f90       0x30 ./circle/lib/fs/libfs.a(partitionmanager.o)
 .debug_ranges  0x00000fc0       0x30 ./circle/lib/fs/libfs.a(partition.o)
 .debug_ranges  0x00000ff0       0x40 ./circle/lib/libcircle.a(actled.o)
 .debug_ranges  0x00001030       0x78 ./circle/lib/libcircle.a(classallocator.o)
 .debug_ranges  0x000010a8       0x20 ./circle/lib/libcircle.a(debug.o)
 .debug_ranges  0x000010c8      0x100 ./circle/lib/libcircle.a(devicenameservice.o)
 .debug_ranges  0x000011c8      0x240 ./circle/lib/libcircle.a(gpiopin.o)
 .debug_ranges  0x00001408       0x48 ./circle/lib/libcircle.a(interrupt.o)
 .debug_ranges  0x00001450       0xa0 ./circle/lib/libcircle.a(koptions.o)
 .debug_ranges  0x000014f0      0x140 ./circle/lib/libcircle.a(logger.o)
 .debug_ranges  0x00001630       0x68 ./circle/lib/libcircle.a(machineinfo.o)
 .debug_ranges  0x00001698      0x340 ./circle/lib/libcircle.a(screen.o)
 .debug_ranges  0x000019d8      0x2b0 ./circle/lib/libcircle.a(string.o)
 .debug_ranges  0x00001c88       0x30 ./circle/lib/libcircle.a(sysinit.o)
 .debug_ranges  0x00001cb8      0x368 ./circle/lib/libcircle.a(timer.o)
 .debug_ranges  0x00002020       0x70 ./circle/lib/libcircle.a(util.o)
 .debug_ranges  0x00002090       0xb8 ./circle/lib/libcircle.a(virtualgpiopin.o)
 .debug_ranges  0x00002148       0x48 ./circle/lib/libcircle.a(exceptionhandler.o)
 .debug_ranges  0x00002190       0x40 ./circle/lib/libcircle.a(memory.o)
 .debug_ranges  0x000021d0       0x40 ./circle/lib/libcircle.a(pagetable.o)
 .debug_ranges  0x00002210      0x150 ./circle/lib/libcircle.a(alloc.o)
 .debug_ranges  0x00002360       0x60 ./circle/lib/libcircle.a(bcmframebuffer.o)
 .debug_ranges  0x000023c0       0xa8 ./circle/lib/libcircle.a(bcmmailbox.o)
 .debug_ranges  0x00002468       0x48 ./circle/lib/libcircle.a(gpiomanager.o)

.debug_line     0x00000000     0xb352
 .debug_line    0x00000000      0x208 src/main.o
 .debug_line    0x00000208      0x418 src/kernel.o
 .debug_line    0x00000620      0x56d src/rdserial.o
 .debug_line    0x00000b8d      0x1ba src/MiniHDLC.o
 .debug_line    0x00000d47      0x9ab ./circle/lib/usb/libusb.a(dwhcidevice.o)
 .debug_line    0x000016f2      0x1d8 ./circle/lib/usb/libusb.a(dwhciregister.o)
 .debug_line    0x000018ca      0x42a ./circle/lib/usb/libusb.a(dwhcixferstagedata.o)
 .debug_line    0x00001cf4      0x4ba ./circle/lib/usb/libusb.a(usbdevice.o)
 .debug_line    0x000021ae      0x1f3 ./circle/lib/usb/libusb.a(usbendpoint.o)
 .debug_line    0x000023a1      0x17e ./circle/lib/usb/libusb.a(usbhostcontroller.o)
 .debug_line    0x0000251f      0x1d0 ./circle/lib/usb/libusb.a(usbrequest.o)
 .debug_line    0x000026ef      0x16f ./circle/lib/usb/libusb.a(usbdevicefactory.o)
 .debug_line    0x0000285e      0x3c2 ./circle/lib/usb/libusb.a(usbstandardhub.o)
 .debug_line    0x00002c20      0x415 ./circle/lib/usb/libusb.a(usbmassdevice.o)
 .debug_line    0x00003035      0x236 ./circle/lib/usb/libusb.a(dwhciframeschednper.o)
 .debug_line    0x0000326b      0x292 ./circle/lib/usb/libusb.a(dwhciframeschedper.o)
 .debug_line    0x000034fd      0x251 ./circle/lib/usb/libusb.a(usbkeyboard.o)
 .debug_line    0x0000374e      0x198 ./circle/lib/usb/libusb.a(dwhcirootport.o)
 .debug_line    0x000038e6      0x327 ./circle/lib/usb/libusb.a(usbhiddevice.o)
 .debug_line    0x00003c0d      0x1b9 ./circle/lib/usb/libusb.a(usbmouse.o)
 .debug_line    0x00003dc6      0x380 ./circle/lib/usb/libusb.a(usbgamepadstandard.o)
 .debug_line    0x00004146      0x284 ./circle/lib/usb/libusb.a(usbgamepadps3.o)
 .debug_line    0x000043ca      0x385 ./circle/lib/usb/libusb.a(usbgamepadps4.o)
 .debug_line    0x0000474f      0x25b ./circle/lib/usb/libusb.a(usbgamepadxbox360.o)
 .debug_line    0x000049aa      0x22d ./circle/lib/usb/libusb.a(usbgamepadxboxone.o)
 .debug_line    0x00004bd7      0x242 ./circle/lib/usb/libusb.a(usbgamepadswitchpro.o)
 .debug_line    0x00004e19      0x337 ./circle/lib/usb/libusb.a(usbfunction.o)
 .debug_line    0x00005150      0x17e ./circle/lib/usb/libusb.a(dwhciframeschednsplit.o)
 .debug_line    0x000052ce      0x218 ./circle/lib/usb/libusb.a(usbprinter.o)
 .debug_line    0x000054e6      0x303 ./circle/lib/usb/libusb.a(usbbluetooth.o)
 .debug_line    0x000057e9      0x33f ./circle/lib/usb/libusb.a(usbmidi.o)
 .debug_line    0x00005b28      0x2e6 ./circle/lib/usb/libusb.a(usbcdcethernet.o)
 .debug_line    0x00005e0e      0x217 ./circle/lib/usb/libusb.a(usbconfigparser.o)
 .debug_line    0x00006025      0x208 ./circle/lib/usb/libusb.a(usbstring.o)
 .debug_line    0x0000622d      0x375 ./circle/lib/usb/libusb.a(smsc951x.o)
 .debug_line    0x000065a2      0x410 ./circle/lib/usb/libusb.a(lan7800.o)
 .debug_line    0x000069b2      0x141 ./circle/lib/usb/libusb.a(macaddress.o)
 .debug_line    0x00006af3      0x104 ./circle/lib/usb/libusb.a(netdevice.o)
 .debug_line    0x00006bf7      0x1e5 ./circle/lib/usb/libusb.a(usbgamepad.o)
 .debug_line    0x00006ddc      0x1ae ./circle/lib/input/libinput.a(keyboardbehaviour.o)
 .debug_line    0x00006f8a      0x1a3 ./circle/lib/input/libinput.a(keymap.o)
 .debug_line    0x0000712d      0x11a ./circle/lib/input/libinput.a(mouse.o)
 .debug_line    0x00007247      0x203 ./circle/lib/input/libinput.a(mousebehaviour.o)
 .debug_line    0x0000744a      0x1c2 ./circle/lib/fs/libfs.a(partitionmanager.o)
 .debug_line    0x0000760c      0x107 ./circle/lib/fs/libfs.a(partition.o)
 .debug_line    0x00007713      0x162 ./circle/lib/libcircle.a(actled.o)
 .debug_line    0x00007875       0xf5 ./circle/lib/libcircle.a(assert.o)
 .debug_line    0x0000796a      0x131 ./circle/lib/libcircle.a(bcmpropertytags.o)
 .debug_line    0x00007a9b      0x223 ./circle/lib/libcircle.a(classallocator.o)
 .debug_line    0x00007cbe      0x111 ./circle/lib/libcircle.a(debug.o)
 .debug_line    0x00007dcf       0x72 ./circle/lib/libcircle.a(device.o)
 .debug_line    0x00007e41      0x298 ./circle/lib/libcircle.a(devicenameservice.o)
 .debug_line    0x000080d9      0x661 ./circle/lib/libcircle.a(gpiopin.o)
 .debug_line    0x0000873a      0x279 ./circle/lib/libcircle.a(interrupt.o)
 .debug_line    0x000089b3      0x1ea ./circle/lib/libcircle.a(koptions.o)
 .debug_line    0x00008b9d      0x368 ./circle/lib/libcircle.a(logger.o)
 .debug_line    0x00008f05      0x1ba ./circle/lib/libcircle.a(machineinfo.o)
 .debug_line    0x000090bf      0x52d ./circle/lib/libcircle.a(screen.o)
 .debug_line    0x000095ec      0x455 ./circle/lib/libcircle.a(string.o)
 .debug_line    0x00009a41       0xc1 ./circle/lib/libcircle.a(sysinit.o)
 .debug_line    0x00009b02      0x5c8 ./circle/lib/libcircle.a(timer.o)
 .debug_line    0x0000a0ca      0x1c1 ./circle/lib/libcircle.a(util.o)
 .debug_line    0x0000a28b      0x1a6 ./circle/lib/libcircle.a(virtualgpiopin.o)
 .debug_line    0x0000a431      0x1ac ./circle/lib/libcircle.a(exceptionhandler.o)
 .debug_line    0x0000a5dd      0x165 ./circle/lib/libcircle.a(memory.o)
 .debug_line    0x0000a742       0xa0 ./circle/lib/libcircle.a(pagetable.o)
 .debug_line    0x0000a7e2       0xc7 ./circle/lib/libcircle.a(synchronize.o)
 .debug_line    0x0000a8a9       0x68 ./circle/lib/libcircle.a(new.o)
 .debug_line    0x0000a911       0x54 ./circle/lib/libcircle.a(purecall.o)
 .debug_line    0x0000a965      0x2ec ./circle/lib/libcircle.a(alloc.o)
 .debug_line    0x0000ac51      0x173 ./circle/lib/libcircle.a(bcmframebuffer.o)
 .debug_line    0x0000adc4      0x1b9 ./circle/lib/libcircle.a(bcmmailbox.o)
 .debug_line    0x0000af7d       0xb8 ./circle/lib/libcircle.a(chargenerator.o)
 .debug_line    0x0000b035      0x1a0 ./circle/lib/libcircle.a(gpiomanager.o)
 .debug_line    0x0000b1d5      0x17d ./circle/lib/libcircle.a(ptrlist.o)

.debug_str      0x00000000     0xfbdf
 .debug_str     0x00000000     0x26aa src/main.o
                               0x28d4 (size before relaxing)
 .debug_str     0x000026aa      0x7dc src/kernel.o
                               0x2524 (size before relaxing)
 .debug_str     0x00002e86      0x9db src/rdserial.o
                               0x126e (size before relaxing)
 .debug_str     0x00003861       0xb9 src/MiniHDLC.o
                                0x569 (size before relaxing)
 .debug_str     0x0000391a     0x23b5 ./circle/lib/usb/libusb.a(dwhcidevice.o)
                               0x35e1 (size before relaxing)
 .debug_str     0x00005ccf       0x60 ./circle/lib/usb/libusb.a(dwhciregister.o)
                               0x1207 (size before relaxing)
 .debug_str     0x00005d2f      0x225 ./circle/lib/usb/libusb.a(dwhcixferstagedata.o)
                               0x23dc (size before relaxing)
 .debug_str     0x00005f54      0xa01 ./circle/lib/usb/libusb.a(usbdevice.o)
                               0x2051 (size before relaxing)
 .debug_str     0x00006955       0xba ./circle/lib/usb/libusb.a(usbendpoint.o)
                                0x6b4 (size before relaxing)
 .debug_str     0x00006a0f      0x255 ./circle/lib/usb/libusb.a(usbhostcontroller.o)
                               0x1923 (size before relaxing)
 .debug_str     0x00006c64       0x80 ./circle/lib/usb/libusb.a(usbrequest.o)
                                0xc9d (size before relaxing)
 .debug_str     0x00006ce4       0x3c ./circle/lib/usb/libusb.a(usbdevicefactory.o)
                                0x34f (size before relaxing)
 .debug_str     0x00006d20      0x36a ./circle/lib/usb/libusb.a(usbstandardhub.o)
                               0x1fd2 (size before relaxing)
 .debug_str     0x0000708a      0x813 ./circle/lib/usb/libusb.a(usbmassdevice.o)
                               0x214f (size before relaxing)
 .debug_str     0x0000789d      0x415 ./circle/lib/usb/libusb.a(dwhciframeschednper.o)
                               0x179d (size before relaxing)
 .debug_str     0x00007cb2      0x324 ./circle/lib/usb/libusb.a(dwhciframeschedper.o)
                               0x1981 (size before relaxing)
 .debug_str     0x00007fd6      0x834 ./circle/lib/usb/libusb.a(usbkeyboard.o)
                               0x1bf6 (size before relaxing)
 .debug_str     0x0000880a       0x5e ./circle/lib/usb/libusb.a(dwhcirootport.o)
                               0x11a6 (size before relaxing)
 .debug_str     0x00008868      0x344 ./circle/lib/usb/libusb.a(usbhiddevice.o)
                               0x1ee1 (size before relaxing)
 .debug_str     0x00008bac      0x20a ./circle/lib/usb/libusb.a(usbmouse.o)
                               0x13b3 (size before relaxing)
 .debug_str     0x00008db6      0x4d4 ./circle/lib/usb/libusb.a(usbgamepadstandard.o)
                               0x177d (size before relaxing)
 .debug_str     0x0000928a      0x550 ./circle/lib/usb/libusb.a(usbgamepadps3.o)
                               0x18a6 (size before relaxing)
 .debug_str     0x000097da      0x684 ./circle/lib/usb/libusb.a(usbgamepadps4.o)
                               0x1bc3 (size before relaxing)
 .debug_str     0x00009e5e      0x283 ./circle/lib/usb/libusb.a(usbgamepadxbox360.o)
                               0x1881 (size before relaxing)
 .debug_str     0x0000a0e1      0x332 ./circle/lib/usb/libusb.a(usbgamepadxboxone.o)
                               0x1924 (size before relaxing)
 .debug_str     0x0000a413      0x313 ./circle/lib/usb/libusb.a(usbgamepadswitchpro.o)
                               0x1967 (size before relaxing)
 .debug_str     0x0000a726      0x1c3 ./circle/lib/usb/libusb.a(usbfunction.o)
                               0x1c6d (size before relaxing)
 .debug_str     0x0000a8e9      0x30a ./circle/lib/usb/libusb.a(dwhciframeschednsplit.o)
                                0xb61 (size before relaxing)
 .debug_str     0x0000abf3      0x1d7 ./circle/lib/usb/libusb.a(usbprinter.o)
                               0x19ca (size before relaxing)
 .debug_str     0x0000adca      0x2ee ./circle/lib/usb/libusb.a(usbbluetooth.o)
                               0x2088 (size before relaxing)
 .debug_str     0x0000b0b8      0x2c6 ./circle/lib/usb/libusb.a(usbmidi.o)
                               0x21a9 (size before relaxing)
 .debug_str     0x0000b37e      0x6ba ./circle/lib/usb/libusb.a(usbcdcethernet.o)
                               0x2212 (size before relaxing)
 .debug_str     0x0000ba38      0x109 ./circle/lib/usb/libusb.a(usbconfigparser.o)
                               0x14be (size before relaxing)
 .debug_str     0x0000bb41       0x90 ./circle/lib/usb/libusb.a(usbstring.o)
                                0x4b1 (size before relaxing)
 .debug_str     0x0000bbd1      0x397 ./circle/lib/usb/libusb.a(smsc951x.o)
                               0x2366 (size before relaxing)
 .debug_str     0x0000bf68      0x338 ./circle/lib/usb/libusb.a(lan7800.o)
                               0x23b7 (size before relaxing)
 .debug_str     0x0000c2a0       0x6a ./circle/lib/usb/libusb.a(macaddress.o)
                                0x3f6 (size before relaxing)
 .debug_str     0x0000c30a      0x1c2 ./circle/lib/usb/libusb.a(netdevice.o)
                                0x999 (size before relaxing)
 .debug_str     0x0000c4cc      0x2a9 ./circle/lib/usb/libusb.a(usbgamepad.o)
                               0x17d5 (size before relaxing)
 .debug_str     0x0000c775      0x2db ./circle/lib/input/libinput.a(keyboardbehaviour.o)
                               0x1390 (size before relaxing)
 .debug_str     0x0000ca50      0x2bc ./circle/lib/input/libinput.a(keymap.o)
                                0xb9f (size before relaxing)
 .debug_str     0x0000cd0c      0x425 ./circle/lib/input/libinput.a(mouse.o)
                                0x9c4 (size before relaxing)
 .debug_str     0x0000d131       0xe9 ./circle/lib/input/libinput.a(mousebehaviour.o)
                                0x7fd (size before relaxing)
 .debug_str     0x0000d21a      0x156 ./circle/lib/fs/libfs.a(partitionmanager.o)
                               0x13f7 (size before relaxing)
 .debug_str     0x0000d370      0x142 ./circle/lib/fs/libfs.a(partition.o)
                                0x379 (size before relaxing)
 .debug_str     0x0000d4b2      0x119 ./circle/lib/libcircle.a(actled.o)
                                0xf4f (size before relaxing)
 .debug_str     0x0000d5cb       0x54 ./circle/lib/libcircle.a(assert.o)
                               0x1011 (size before relaxing)
 .debug_str     0x0000d61f       0xa6 ./circle/lib/libcircle.a(bcmpropertytags.o)
                                0x634 (size before relaxing)
 .debug_str     0x0000d6c5       0x7f ./circle/lib/libcircle.a(classallocator.o)
                               0x11c5 (size before relaxing)
 .debug_str     0x0000d744       0x34 ./circle/lib/libcircle.a(debug.o)
                                0xff3 (size before relaxing)
 .debug_str     0x0000d778       0xb9 ./circle/lib/libcircle.a(device.o)
                                0x2a3 (size before relaxing)
 .debug_str     0x0000d831       0x89 ./circle/lib/libcircle.a(devicenameservice.o)
                                0x5fa (size before relaxing)
 .debug_str     0x0000d8ba      0x693 ./circle/lib/libcircle.a(gpiopin.o)
                               0x197b (size before relaxing)
 .debug_str     0x0000df4d       0xdc ./circle/lib/libcircle.a(interrupt.o)
                                0x5b3 (size before relaxing)
 .debug_str     0x0000e029       0x7d ./circle/lib/libcircle.a(koptions.o)
                                0x875 (size before relaxing)
 .debug_str     0x0000e0a6       0xec ./circle/lib/libcircle.a(logger.o)
                               0x16bc (size before relaxing)
 .debug_str     0x0000e192       0xaf ./circle/lib/libcircle.a(machineinfo.o)
                                0x9a9 (size before relaxing)
 .debug_str     0x0000e241      0xd88 ./circle/lib/libcircle.a(screen.o)
                               0x1498 (size before relaxing)
 .debug_str     0x0000efc9      0x29b ./circle/lib/libcircle.a(string.o)
                                0x63d (size before relaxing)
 .debug_str     0x0000f264       0x75 ./circle/lib/libcircle.a(sysinit.o)
                                0x6ee (size before relaxing)
 .debug_str     0x0000f2d9      0x16b ./circle/lib/libcircle.a(timer.o)
                               0x1238 (size before relaxing)
 .debug_str     0x0000f444       0xbc ./circle/lib/libcircle.a(util.o)
                                0x2d3 (size before relaxing)
 .debug_str     0x0000f500      0x17e ./circle/lib/libcircle.a(virtualgpiopin.o)
                                0x829 (size before relaxing)
 .debug_str     0x0000f67e       0xb9 ./circle/lib/libcircle.a(exceptionhandler.o)
                               0x11f8 (size before relaxing)
 .debug_str     0x0000f737       0xa6 ./circle/lib/libcircle.a(memory.o)
                                0x662 (size before relaxing)
 .debug_str     0x0000f7dd       0x42 ./circle/lib/libcircle.a(pagetable.o)
                                0x25f (size before relaxing)
 .debug_str     0x0000f81f       0x3f ./circle/lib/libcircle.a(synchronize.o)
                                0x23d (size before relaxing)
 .debug_str     0x0000f85e       0x17 ./circle/lib/libcircle.a(new.o)
                                0x202 (size before relaxing)
 .debug_str     0x0000f875       0x20 ./circle/lib/libcircle.a(purecall.o)
                                0x11c (size before relaxing)
 .debug_str     0x0000f895      0x155 ./circle/lib/libcircle.a(alloc.o)
                               0x11c8 (size before relaxing)
 .debug_str     0x0000f9ea       0x7f ./circle/lib/libcircle.a(bcmframebuffer.o)
                                0x98c (size before relaxing)
 .debug_str     0x0000fa69       0x6c ./circle/lib/libcircle.a(bcmmailbox.o)
                                0xdf8 (size before relaxing)
 .debug_str     0x0000fad5       0x6d ./circle/lib/libcircle.a(chargenerator.o)
                                0x343 (size before relaxing)
 .debug_str     0x0000fb42       0x5b ./circle/lib/libcircle.a(gpiomanager.o)
                                0x718 (size before relaxing)
 .debug_str     0x0000fb9d       0x42 ./circle/lib/libcircle.a(ptrlist.o)
                                0x32e (size before relaxing)

.comment        0x00000000       0xaf
 .comment       0x00000000       0x31 src/main.o
                                 0x32 (size before relaxing)
 .comment       0x00000031       0x7e src/kernel.o
                                 0x7f (size before relaxing)
 .comment       0x000000af       0x7f src/rdserial.o
 .comment       0x000000af       0x7f src/MiniHDLC.o
 .comment       0x000000af       0x32 ./circle/lib/usb/libusb.a(dwhcidevice.o)
 .comment       0x000000af       0x32 ./circle/lib/usb/libusb.a(dwhciregister.o)
 .comment       0x000000af       0x32 ./circle/lib/usb/libusb.a(dwhcixferstagedata.o)
 .comment       0x000000af       0x32 ./circle/lib/usb/libusb.a(usbdevice.o)
 .comment       0x000000af       0x32 ./circle/lib/usb/libusb.a(usbendpoint.o)
 .comment       0x000000af       0x32 ./circle/lib/usb/libusb.a(usbhostcontroller.o)
 .comment       0x000000af       0x32 ./circle/lib/usb/libusb.a(usbrequest.o)
 .comment       0x000000af       0x32 ./circle/lib/usb/libusb.a(usbdevicefactory.o)
 .comment       0x000000af       0x32 ./circle/lib/usb/libusb.a(usbstandardhub.o)
 .comment       0x000000af       0x32 ./circle/lib/usb/libusb.a(usbmassdevice.o)
 .comment       0x000000af       0x32 ./circle/lib/usb/libusb.a(dwhciframeschednper.o)
 .comment       0x000000af       0x32 ./circle/lib/usb/libusb.a(dwhciframeschedper.o)
 .comment       0x000000af       0x32 ./circle/lib/usb/libusb.a(usbkeyboard.o)
 .comment       0x000000af       0x32 ./circle/lib/usb/libusb.a(dwhcirootport.o)
 .comment       0x000000af       0x32 ./circle/lib/usb/libusb.a(usbhiddevice.o)
 .comment       0x000000af       0x32 ./circle/lib/usb/libusb.a(usbmouse.o)
 .comment       0x000000af       0x32 ./circle/lib/usb/libusb.a(usbgamepadstandard.o)
 .comment       0x000000af       0x32 ./circle/lib/usb/libusb.a(usbgamepadps3.o)
 .comment       0x000000af       0x32 ./circle/lib/usb/libusb.a(usbgamepadps4.o)
 .comment       0x000000af       0x32 ./circle/lib/usb/libusb.a(usbgamepadxbox360.o)
 .comment       0x000000af       0x32 ./circle/lib/usb/libusb.a(usbgamepadxboxone.o)
 .comment       0x000000af       0x32 ./circle/lib/usb/libusb.a(usbgamepadswitchpro.o)
 .comment       0x000000af       0x32 ./circle/lib/usb/libusb.a(usbfunction.o)
 .comment       0x000000af       0x32 ./circle/lib/usb/libusb.a(dwhciframeschednsplit.o)
 .comment       0x000000af       0x32 ./circle/lib/usb/libusb.a(usbprinter.o)
 .comment       0x000000af       0x32 ./circle/lib/usb/libusb.a(usbbluetooth.o)
 .comment       0x000000af       0x32 ./circle/lib/usb/libusb.a(usbmidi.o)
 .comment       0x000000af       0x32 ./circle/lib/usb/libusb.a(usbcdcethernet.o)
 .comment       0x000000af       0x32 ./circle/lib/usb/libusb.a(usbconfigparser.o)
 .comment       0x000000af       0x32 ./circle/lib/usb/libusb.a(usbstring.o)
 .comment       0x000000af       0x32 ./circle/lib/usb/libusb.a(smsc951x.o)
 .comment       0x000000af       0x32 ./circle/lib/usb/libusb.a(lan7800.o)
 .comment       0x000000af       0x32 ./circle/lib/usb/libusb.a(macaddress.o)
 .comment       0x000000af       0x32 ./circle/lib/usb/libusb.a(netdevice.o)
 .comment       0x000000af       0x32 ./circle/lib/usb/libusb.a(usbgamepad.o)
 .comment       0x000000af       0x32 ./circle/lib/input/libinput.a(keyboardbehaviour.o)
 .comment       0x000000af       0x32 ./circle/lib/input/libinput.a(keymap.o)
 .comment       0x000000af       0x32 ./circle/lib/input/libinput.a(mouse.o)
 .comment       0x000000af       0x32 ./circle/lib/input/libinput.a(mousebehaviour.o)
 .comment       0x000000af       0x32 ./circle/lib/fs/libfs.a(partitionmanager.o)
 .comment       0x000000af       0x32 ./circle/lib/fs/libfs.a(partition.o)
 .comment       0x000000af       0x32 ./circle/lib/libcircle.a(actled.o)
 .comment       0x000000af       0x32 ./circle/lib/libcircle.a(assert.o)
 .comment       0x000000af       0x32 ./circle/lib/libcircle.a(bcmpropertytags.o)
 .comment       0x000000af       0x32 ./circle/lib/libcircle.a(classallocator.o)
 .comment       0x000000af       0x32 ./circle/lib/libcircle.a(debug.o)
 .comment       0x000000af       0x32 ./circle/lib/libcircle.a(device.o)
 .comment       0x000000af       0x32 ./circle/lib/libcircle.a(devicenameservice.o)
 .comment       0x000000af       0x32 ./circle/lib/libcircle.a(gpiopin.o)
 .comment       0x000000af       0x32 ./circle/lib/libcircle.a(interrupt.o)
 .comment       0x000000af       0x32 ./circle/lib/libcircle.a(koptions.o)
 .comment       0x000000af       0x32 ./circle/lib/libcircle.a(logger.o)
 .comment       0x000000af       0x32 ./circle/lib/libcircle.a(machineinfo.o)
 .comment       0x000000af       0x32 ./circle/lib/libcircle.a(screen.o)
 .comment       0x000000af       0x32 ./circle/lib/libcircle.a(string.o)
 .comment       0x000000af       0x32 ./circle/lib/libcircle.a(sysinit.o)
 .comment       0x000000af       0x32 ./circle/lib/libcircle.a(timer.o)
 .comment       0x000000af       0x32 ./circle/lib/libcircle.a(util.o)
 .comment       0x000000af       0x32 ./circle/lib/libcircle.a(virtualgpiopin.o)
 .comment       0x000000af       0x32 ./circle/lib/libcircle.a(exceptionhandler.o)
 .comment       0x000000af       0x32 ./circle/lib/libcircle.a(memory.o)
 .comment       0x000000af       0x32 ./circle/lib/libcircle.a(pagetable.o)
 .comment       0x000000af       0x32 ./circle/lib/libcircle.a(synchronize.o)
 .comment       0x000000af       0x32 ./circle/lib/libcircle.a(new.o)
 .comment       0x000000af       0x32 ./circle/lib/libcircle.a(purecall.o)
 .comment       0x000000af       0x32 ./circle/lib/libcircle.a(alloc.o)
 .comment       0x000000af       0x32 ./circle/lib/libcircle.a(bcmframebuffer.o)
 .comment       0x000000af       0x32 ./circle/lib/libcircle.a(bcmmailbox.o)
 .comment       0x000000af       0x32 ./circle/lib/libcircle.a(chargenerator.o)
 .comment       0x000000af       0x32 ./circle/lib/libcircle.a(gpiomanager.o)
 .comment       0x000000af       0x32 ./circle/lib/libcircle.a(ptrlist.o)

.ARM.attributes
                0x00000000       0x2e
 .ARM.attributes
                0x00000000       0x30 src/main.o
 .ARM.attributes
                0x00000030       0x30 src/kernel.o
 .ARM.attributes
                0x00000060       0x30 src/rdserial.o
 .ARM.attributes
                0x00000090       0x30 src/MiniHDLC.o
 .ARM.attributes
                0x000000c0       0x18 c:/program files (x86)/gnu tools arm embedded/7 2017-q4-major/bin/../lib/gcc/arm-none-eabi/7.2.1/hard/libgcc.a(_udivsi3.o)
 .ARM.attributes
                0x000000d8       0x18 c:/program files (x86)/gnu tools arm embedded/7 2017-q4-major/bin/../lib/gcc/arm-none-eabi/7.2.1/hard/libgcc.a(_dvmd_tls.o)
 .ARM.attributes
                0x000000f0       0x30 ./circle/lib/usb/libusb.a(dwhcidevice.o)
 .ARM.attributes
                0x00000120       0x30 ./circle/lib/usb/libusb.a(dwhciregister.o)
 .ARM.attributes
                0x00000150       0x30 ./circle/lib/usb/libusb.a(dwhcixferstagedata.o)
 .ARM.attributes
                0x00000180       0x30 ./circle/lib/usb/libusb.a(usbdevice.o)
 .ARM.attributes
                0x000001b0       0x30 ./circle/lib/usb/libusb.a(usbendpoint.o)
 .ARM.attributes
                0x000001e0       0x30 ./circle/lib/usb/libusb.a(usbhostcontroller.o)
 .ARM.attributes
                0x00000210       0x30 ./circle/lib/usb/libusb.a(usbrequest.o)
 .ARM.attributes
                0x00000240       0x30 ./circle/lib/usb/libusb.a(usbdevicefactory.o)
 .ARM.attributes
                0x00000270       0x30 ./circle/lib/usb/libusb.a(usbstandardhub.o)
 .ARM.attributes
                0x000002a0       0x30 ./circle/lib/usb/libusb.a(usbmassdevice.o)
 .ARM.attributes
                0x000002d0       0x30 ./circle/lib/usb/libusb.a(dwhciframeschednper.o)
 .ARM.attributes
                0x00000300       0x30 ./circle/lib/usb/libusb.a(dwhciframeschedper.o)
 .ARM.attributes
                0x00000330       0x30 ./circle/lib/usb/libusb.a(usbkeyboard.o)
 .ARM.attributes
                0x00000360       0x30 ./circle/lib/usb/libusb.a(dwhcirootport.o)
 .ARM.attributes
                0x00000390       0x30 ./circle/lib/usb/libusb.a(usbhiddevice.o)
 .ARM.attributes
                0x000003c0       0x30 ./circle/lib/usb/libusb.a(usbmouse.o)
 .ARM.attributes
                0x000003f0       0x30 ./circle/lib/usb/libusb.a(usbgamepadstandard.o)
 .ARM.attributes
                0x00000420       0x30 ./circle/lib/usb/libusb.a(usbgamepadps3.o)
 .ARM.attributes
                0x00000450       0x30 ./circle/lib/usb/libusb.a(usbgamepadps4.o)
 .ARM.attributes
                0x00000480       0x30 ./circle/lib/usb/libusb.a(usbgamepadxbox360.o)
 .ARM.attributes
                0x000004b0       0x30 ./circle/lib/usb/libusb.a(usbgamepadxboxone.o)
 .ARM.attributes
                0x000004e0       0x30 ./circle/lib/usb/libusb.a(usbgamepadswitchpro.o)
 .ARM.attributes
                0x00000510       0x30 ./circle/lib/usb/libusb.a(usbfunction.o)
 .ARM.attributes
                0x00000540       0x30 ./circle/lib/usb/libusb.a(dwhciframeschednsplit.o)
 .ARM.attributes
                0x00000570       0x30 ./circle/lib/usb/libusb.a(usbprinter.o)
 .ARM.attributes
                0x000005a0       0x30 ./circle/lib/usb/libusb.a(usbbluetooth.o)
 .ARM.attributes
                0x000005d0       0x30 ./circle/lib/usb/libusb.a(usbmidi.o)
 .ARM.attributes
                0x00000600       0x30 ./circle/lib/usb/libusb.a(usbcdcethernet.o)
 .ARM.attributes
                0x00000630       0x30 ./circle/lib/usb/libusb.a(usbconfigparser.o)
 .ARM.attributes
                0x00000660       0x30 ./circle/lib/usb/libusb.a(usbstring.o)
 .ARM.attributes
                0x00000690       0x30 ./circle/lib/usb/libusb.a(smsc951x.o)
 .ARM.attributes
                0x000006c0       0x30 ./circle/lib/usb/libusb.a(lan7800.o)
 .ARM.attributes
                0x000006f0       0x30 ./circle/lib/usb/libusb.a(macaddress.o)
 .ARM.attributes
                0x00000720       0x30 ./circle/lib/usb/libusb.a(netdevice.o)
 .ARM.attributes
                0x00000750       0x30 ./circle/lib/usb/libusb.a(usbgamepad.o)
 .ARM.attributes
                0x00000780       0x30 ./circle/lib/input/libinput.a(keyboardbehaviour.o)
 .ARM.attributes
                0x000007b0       0x30 ./circle/lib/input/libinput.a(keymap.o)
 .ARM.attributes
                0x000007e0       0x30 ./circle/lib/input/libinput.a(mouse.o)
 .ARM.attributes
                0x00000810       0x30 ./circle/lib/input/libinput.a(mousebehaviour.o)
 .ARM.attributes
                0x00000840       0x30 ./circle/lib/fs/libfs.a(partitionmanager.o)
 .ARM.attributes
                0x00000870       0x30 ./circle/lib/fs/libfs.a(partition.o)
 .ARM.attributes
                0x000008a0       0x30 ./circle/lib/libcircle.a(actled.o)
 .ARM.attributes
                0x000008d0       0x30 ./circle/lib/libcircle.a(assert.o)
 .ARM.attributes
                0x00000900       0x30 ./circle/lib/libcircle.a(bcmpropertytags.o)
 .ARM.attributes
                0x00000930       0x30 ./circle/lib/libcircle.a(classallocator.o)
 .ARM.attributes
                0x00000960       0x30 ./circle/lib/libcircle.a(debug.o)
 .ARM.attributes
                0x00000990       0x30 ./circle/lib/libcircle.a(device.o)
 .ARM.attributes
                0x000009c0       0x30 ./circle/lib/libcircle.a(devicenameservice.o)
 .ARM.attributes
                0x000009f0       0x30 ./circle/lib/libcircle.a(gpiopin.o)
 .ARM.attributes
                0x00000a20       0x30 ./circle/lib/libcircle.a(interrupt.o)
 .ARM.attributes
                0x00000a50       0x30 ./circle/lib/libcircle.a(koptions.o)
 .ARM.attributes
                0x00000a80       0x30 ./circle/lib/libcircle.a(logger.o)
 .ARM.attributes
                0x00000ab0       0x30 ./circle/lib/libcircle.a(machineinfo.o)
 .ARM.attributes
                0x00000ae0       0x30 ./circle/lib/libcircle.a(screen.o)
 .ARM.attributes
                0x00000b10       0x30 ./circle/lib/libcircle.a(string.o)
 .ARM.attributes
                0x00000b40       0x30 ./circle/lib/libcircle.a(sysinit.o)
 .ARM.attributes
                0x00000b70       0x30 ./circle/lib/libcircle.a(timer.o)
 .ARM.attributes
                0x00000ba0       0x30 ./circle/lib/libcircle.a(util.o)
 .ARM.attributes
                0x00000bd0       0x1c ./circle/lib/libcircle.a(util_fast.o)
 .ARM.attributes
                0x00000bec       0x30 ./circle/lib/libcircle.a(virtualgpiopin.o)
 .ARM.attributes
                0x00000c1c       0x30 ./circle/lib/libcircle.a(exceptionhandler.o)
 .ARM.attributes
                0x00000c4c       0x1c ./circle/lib/libcircle.a(exceptionstub.o)
 .ARM.attributes
                0x00000c68       0x30 ./circle/lib/libcircle.a(memory.o)
 .ARM.attributes
                0x00000c98       0x30 ./circle/lib/libcircle.a(pagetable.o)
 .ARM.attributes
                0x00000cc8       0x1c ./circle/lib/libcircle.a(startup.o)
 .ARM.attributes
                0x00000ce4       0x30 ./circle/lib/libcircle.a(synchronize.o)
 .ARM.attributes
                0x00000d14       0x30 ./circle/lib/libcircle.a(new.o)
 .ARM.attributes
                0x00000d44       0x30 ./circle/lib/libcircle.a(purecall.o)
 .ARM.attributes
                0x00000d74       0x30 ./circle/lib/libcircle.a(alloc.o)
 .ARM.attributes
                0x00000da4       0x30 ./circle/lib/libcircle.a(bcmframebuffer.o)
 .ARM.attributes
                0x00000dd4       0x30 ./circle/lib/libcircle.a(bcmmailbox.o)
 .ARM.attributes
                0x00000e04       0x30 ./circle/lib/libcircle.a(chargenerator.o)
 .ARM.attributes
                0x00000e34       0x1c ./circle/lib/libcircle.a(delayloop.o)
 .ARM.attributes
                0x00000e50       0x30 ./circle/lib/libcircle.a(gpiomanager.o)
 .ARM.attributes
                0x00000e80       0x30 ./circle/lib/libcircle.a(ptrlist.o)

.debug_frame    0x00000000     0x6064
 .debug_frame   0x00000000       0x30 src/main.o
 .debug_frame   0x00000030      0x140 src/kernel.o
 .debug_frame   0x00000170      0x1d0 src/rdserial.o
 .debug_frame   0x00000340      0x144 src/MiniHDLC.o
 .debug_frame   0x00000484       0x20 c:/program files (x86)/gnu tools arm embedded/7 2017-q4-major/bin/../lib/gcc/arm-none-eabi/7.2.1/hard/libgcc.a(_udivsi3.o)
 .debug_frame   0x000004a4      0x598 ./circle/lib/usb/libusb.a(dwhcidevice.o)
 .debug_frame   0x00000a3c      0x160 ./circle/lib/usb/libusb.a(dwhciregister.o)
 .debug_frame   0x00000b9c      0x388 ./circle/lib/usb/libusb.a(dwhcixferstagedata.o)
 .debug_frame   0x00000f24      0x26c ./circle/lib/usb/libusb.a(usbdevice.o)
 .debug_frame   0x00001190      0x148 ./circle/lib/usb/libusb.a(usbendpoint.o)
 .debug_frame   0x000012d8       0xf8 ./circle/lib/usb/libusb.a(usbhostcontroller.o)
 .debug_frame   0x000013d0      0x1b8 ./circle/lib/usb/libusb.a(usbrequest.o)
 .debug_frame   0x00001588       0x2c ./circle/lib/usb/libusb.a(usbdevicefactory.o)
 .debug_frame   0x000015b4       0xcc ./circle/lib/usb/libusb.a(usbstandardhub.o)
 .debug_frame   0x00001680      0x1b8 ./circle/lib/usb/libusb.a(usbmassdevice.o)
 .debug_frame   0x00001838      0x15c ./circle/lib/usb/libusb.a(dwhciframeschednper.o)
 .debug_frame   0x00001994      0x174 ./circle/lib/usb/libusb.a(dwhciframeschedper.o)
 .debug_frame   0x00001b08      0x18c ./circle/lib/usb/libusb.a(usbkeyboard.o)
 .debug_frame   0x00001c94       0x68 ./circle/lib/usb/libusb.a(dwhcirootport.o)
 .debug_frame   0x00001cfc      0x1f0 ./circle/lib/usb/libusb.a(usbhiddevice.o)
 .debug_frame   0x00001eec       0xac ./circle/lib/usb/libusb.a(usbmouse.o)
 .debug_frame   0x00001f98      0x148 ./circle/lib/usb/libusb.a(usbgamepadstandard.o)
 .debug_frame   0x000020e0      0x164 ./circle/lib/usb/libusb.a(usbgamepadps3.o)
 .debug_frame   0x00002244      0x160 ./circle/lib/usb/libusb.a(usbgamepadps4.o)
 .debug_frame   0x000023a4      0x128 ./circle/lib/usb/libusb.a(usbgamepadxbox360.o)
 .debug_frame   0x000024cc      0x114 ./circle/lib/usb/libusb.a(usbgamepadxboxone.o)
 .debug_frame   0x000025e0      0x12c ./circle/lib/usb/libusb.a(usbgamepadswitchpro.o)
 .debug_frame   0x0000270c      0x214 ./circle/lib/usb/libusb.a(usbfunction.o)
 .debug_frame   0x00002920      0x140 ./circle/lib/usb/libusb.a(dwhciframeschednsplit.o)
 .debug_frame   0x00002a60       0xbc ./circle/lib/usb/libusb.a(usbprinter.o)
 .debug_frame   0x00002b1c      0x168 ./circle/lib/usb/libusb.a(usbbluetooth.o)
 .debug_frame   0x00002c84      0x1a8 ./circle/lib/usb/libusb.a(usbmidi.o)
 .debug_frame   0x00002e2c      0x134 ./circle/lib/usb/libusb.a(usbcdcethernet.o)
 .debug_frame   0x00002f60       0xd4 ./circle/lib/usb/libusb.a(usbconfigparser.o)
 .debug_frame   0x00003034       0xd8 ./circle/lib/usb/libusb.a(usbstring.o)
 .debug_frame   0x0000310c      0x248 ./circle/lib/usb/libusb.a(smsc951x.o)
 .debug_frame   0x00003354      0x2a0 ./circle/lib/usb/libusb.a(lan7800.o)
 .debug_frame   0x000035f4      0x13c ./circle/lib/usb/libusb.a(macaddress.o)
 .debug_frame   0x00003730       0xa8 ./circle/lib/usb/libusb.a(netdevice.o)
 .debug_frame   0x000037d8      0x11c ./circle/lib/usb/libusb.a(usbgamepad.o)
 .debug_frame   0x000038f4      0x148 ./circle/lib/input/libinput.a(keyboardbehaviour.o)
 .debug_frame   0x00003a3c       0xc4 ./circle/lib/input/libinput.a(keymap.o)
 .debug_frame   0x00003b00      0x104 ./circle/lib/input/libinput.a(mouse.o)
 .debug_frame   0x00003c04      0x114 ./circle/lib/input/libinput.a(mousebehaviour.o)
 .debug_frame   0x00003d18       0x84 ./circle/lib/fs/libfs.a(partitionmanager.o)
 .debug_frame   0x00003d9c      0x128 ./circle/lib/fs/libfs.a(partition.o)
 .debug_frame   0x00003ec4       0x98 ./circle/lib/libcircle.a(actled.o)
 .debug_frame   0x00003f5c       0x34 ./circle/lib/libcircle.a(assert.o)
 .debug_frame   0x00003f90       0x84 ./circle/lib/libcircle.a(bcmpropertytags.o)
 .debug_frame   0x00004014       0xc8 ./circle/lib/libcircle.a(classallocator.o)
 .debug_frame   0x000040dc       0x70 ./circle/lib/libcircle.a(debug.o)
 .debug_frame   0x0000414c       0x68 ./circle/lib/libcircle.a(device.o)
 .debug_frame   0x000041b4      0x19c ./circle/lib/libcircle.a(devicenameservice.o)
 .debug_frame   0x00004350      0x2b8 ./circle/lib/libcircle.a(gpiopin.o)
 .debug_frame   0x00004608      0x1a8 ./circle/lib/libcircle.a(interrupt.o)
 .debug_frame   0x000047b0      0x140 ./circle/lib/libcircle.a(koptions.o)
 .debug_frame   0x000048f0      0x19c ./circle/lib/libcircle.a(logger.o)
 .debug_frame   0x00004a8c      0x134 ./circle/lib/libcircle.a(machineinfo.o)
 .debug_frame   0x00004bc0      0x488 ./circle/lib/libcircle.a(screen.o)
 .debug_frame   0x00005048      0x280 ./circle/lib/libcircle.a(string.o)
 .debug_frame   0x000052c8       0x58 ./circle/lib/libcircle.a(sysinit.o)
 .debug_frame   0x00005320      0x304 ./circle/lib/libcircle.a(timer.o)
 .debug_frame   0x00005624      0x114 ./circle/lib/libcircle.a(util.o)
 .debug_frame   0x00005738       0xb4 ./circle/lib/libcircle.a(virtualgpiopin.o)
 .debug_frame   0x000057ec       0xe4 ./circle/lib/libcircle.a(exceptionhandler.o)
 .debug_frame   0x000058d0       0xa8 ./circle/lib/libcircle.a(memory.o)
 .debug_frame   0x00005978       0x54 ./circle/lib/libcircle.a(pagetable.o)
 .debug_frame   0x000059cc       0x74 ./circle/lib/libcircle.a(synchronize.o)
 .debug_frame   0x00005a40       0x70 ./circle/lib/libcircle.a(new.o)
 .debug_frame   0x00005ab0       0x20 ./circle/lib/libcircle.a(purecall.o)
 .debug_frame   0x00005ad0      0x108 ./circle/lib/libcircle.a(alloc.o)
 .debug_frame   0x00005bd8      0x188 ./circle/lib/libcircle.a(bcmframebuffer.o)
 .debug_frame   0x00005d60       0xa8 ./circle/lib/libcircle.a(bcmmailbox.o)
 .debug_frame   0x00005e08       0x7c ./circle/lib/libcircle.a(chargenerator.o)
 .debug_frame   0x00005e84       0xdc ./circle/lib/libcircle.a(gpiomanager.o)
 .debug_frame   0x00005f60      0x104 ./circle/lib/libcircle.a(ptrlist.o)
